openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Cloud Dataplex API
  description: Dataplex API is used to manage the lifecycle of data lakes.
  version: v1
  x-discovery-doc-revision: '20240830'
  x-generated-date: '2024-09-13'
externalDocs:
  url: https://cloud.google.com/dataplex/docs
servers:
  - url: https://dataplex.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    GoogleLongrunningListOperationsResponse:
      id: GoogleLongrunningListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    GoogleLongrunningOperation:
      id: GoogleLongrunningOperation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the name should be a resource name ending with
            operations/{unique_id}.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is false, it means the operation is still in progress.
            If true, the operation is completed, and either error or response is
            available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/GoogleRpcStatus'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as Delete, the response is
            google.protobuf.Empty. If the original method is standard
            Get/Create/Update, the response should be the resource. For other
            methods, the response should have the type XxxResponse, where Xxx is
            the original method name. For example, if the original method name
            is TakeSnapshot(), the inferred response type is
            TakeSnapshotResponse.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    GoogleRpcStatus:
      id: GoogleRpcStatus
      description: >-
        The Status type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by gRPC (https://github.com/grpc). Each Status message contains
        three pieces of data: error code, error message, and error details.You
        can find out more about this error model and how to work with it in the
        API Design Guide (https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } 
      type: object
      properties: {}
    GoogleLongrunningCancelOperationRequest:
      id: GoogleLongrunningCancelOperationRequest
      description: The request message for Operations.CancelOperation.
      type: object
      properties: {}
    GoogleCloudDataplexV1EntryType:
      id: GoogleCloudDataplexV1EntryType
      description: Entry Type is a template for creating Entries.
      type: object
      properties:
        name:
          description: >-
            Output only. The relative resource name of the EntryType, of the
            form:
            projects/{project_number}/locations/{location_id}/entryTypes/{entry_type_id}.
          readOnly: true
          type: string
        uid:
          description: >-
            Output only. System generated globally unique ID for the EntryType.
            This ID will be different if the EntryType is deleted and re-created
            with the same name.
          readOnly: true
          type: string
        createTime:
          description: Output only. The time when the EntryType was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time when the EntryType was last updated.
          readOnly: true
          type: string
          format: google-datetime
        description:
          description: Optional. Description of the EntryType.
          type: string
        displayName:
          description: Optional. User friendly display name.
          type: string
        labels:
          description: Optional. User-defined labels for the EntryType.
          type: object
          additionalProperties:
            type: string
        etag:
          description: >-
            Optional. This checksum is computed by the service, and might be
            sent on update and delete requests to ensure the client has an
            up-to-date value before proceeding.
          type: string
        typeAliases:
          description: >-
            Optional. Indicates the classes this Entry Type belongs to, for
            example, TABLE, DATABASE, MODEL.
          type: array
          items:
            type: string
        platform:
          description: Optional. The platform that Entries of this type belongs to.
          type: string
        system:
          description: >-
            Optional. The system that Entries of this type belongs to. Examples
            include CloudSQL, MariaDB etc
          type: string
        requiredAspects:
          description: AspectInfo for the entry type.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1EntryTypeAspectInfo'
        authorization:
          description: Immutable. Authorization defined for this type.
          $ref: '#/components/schemas/GoogleCloudDataplexV1EntryTypeAuthorization'
    GoogleCloudDataplexV1EntryTypeAspectInfo:
      id: GoogleCloudDataplexV1EntryTypeAspectInfo
      type: object
      properties:
        type:
          description: Required aspect type for the entry type.
          type: string
    GoogleCloudDataplexV1EntryTypeAuthorization:
      id: GoogleCloudDataplexV1EntryTypeAuthorization
      description: Authorization for an Entry Type.
      type: object
      properties:
        alternateUsePermission:
          description: >-
            Immutable. The IAM permission grantable on the Entry Group to allow
            access to instantiate Entries of Dataplex owned Entry Types, only
            settable for Dataplex owned Types.
          type: string
    GoogleCloudDataplexV1ListEntryTypesResponse:
      id: GoogleCloudDataplexV1ListEntryTypesResponse
      description: List EntryTypes response.
      type: object
      properties:
        entryTypes:
          description: EntryTypes under the given parent location.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1EntryType'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
        unreachableLocations:
          description: Locations that the service couldn't reach.
          type: array
          items:
            type: string
    GoogleCloudDataplexV1AspectType:
      id: GoogleCloudDataplexV1AspectType
      description: >-
        AspectType is a template for creating Aspects, and represents the
        JSON-schema for a given Entry, for example, BigQuery Table Schema.
      type: object
      properties:
        name:
          description: >-
            Output only. The relative resource name of the AspectType, of the
            form:
            projects/{project_number}/locations/{location_id}/aspectTypes/{aspect_type_id}.
          readOnly: true
          type: string
        uid:
          description: >-
            Output only. System generated globally unique ID for the AspectType.
            If you delete and recreate the AspectType with the same name, then
            this ID will be different.
          readOnly: true
          type: string
        createTime:
          description: Output only. The time when the AspectType was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time when the AspectType was last updated.
          readOnly: true
          type: string
          format: google-datetime
        description:
          description: Optional. Description of the AspectType.
          type: string
        displayName:
          description: Optional. User friendly display name.
          type: string
        labels:
          description: Optional. User-defined labels for the AspectType.
          type: object
          additionalProperties:
            type: string
        etag:
          description: >-
            The service computes this checksum. The client may send it on update
            and delete requests to ensure it has an up-to-date value before
            proceeding.
          type: string
        authorization:
          description: Immutable. Defines the Authorization for this type.
          $ref: '#/components/schemas/GoogleCloudDataplexV1AspectTypeAuthorization'
        metadataTemplate:
          description: Required. MetadataTemplate of the aspect.
          $ref: '#/components/schemas/GoogleCloudDataplexV1AspectTypeMetadataTemplate'
    GoogleCloudDataplexV1AspectTypeAuthorization:
      id: GoogleCloudDataplexV1AspectTypeAuthorization
      description: Autorization for an AspectType.
      type: object
      properties:
        alternateUsePermission:
          description: >-
            Immutable. The IAM permission grantable on the EntryGroup to allow
            access to instantiate Aspects of Dataplex owned AspectTypes, only
            settable for Dataplex owned Types.
          type: string
    GoogleCloudDataplexV1AspectTypeMetadataTemplate:
      id: GoogleCloudDataplexV1AspectTypeMetadataTemplate
      description: MetadataTemplate definition for an AspectType.
      type: object
      properties:
        index:
          description: >-
            Optional. Index is used to encode Template messages. The value of
            index can range between 1 and 2,147,483,647. Index must be unique
            within all fields in a Template. (Nested Templates can reuse
            indexes). Once a Template is defined, the index cannot be changed,
            because it identifies the field in the actual storage format. Index
            is a mandatory field, but it is optional for top level fields, and
            map/array "values" definitions.
          type: integer
          format: int32
        name:
          description: Required. The name of the field.
          type: string
        type:
          description: >-
            Required. The datatype of this field. The following values are
            supported:Primitive types: string integer boolean double datetime.
            Must be of the format RFC3339 UTC "Zulu" (Examples:
            "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z").Complex
            types: enum array map record
          type: string
        recordFields:
          description: >-
            Optional. Field definition. You must specify it if the type is
            record. It defines the nested fields.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDataplexV1AspectTypeMetadataTemplate
        enumValues:
          description: >-
            Optional. The list of values for an enum type. You must define it if
            the type is enum.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDataplexV1AspectTypeMetadataTemplateEnumValue
        mapItems:
          description: >-
            Optional. If the type is map, set map_items. map_items can refer to
            a primitive field or a complex (record only) field. To specify a
            primitive field, you only need to set name and type in the nested
            MetadataTemplate. The recommended value for the name field is item,
            as this isn't used in the actual payload.
          $ref: '#/components/schemas/GoogleCloudDataplexV1AspectTypeMetadataTemplate'
        arrayItems:
          description: >-
            Optional. If the type is array, set array_items. array_items can
            refer to a primitive field or a complex (record only) field. To
            specify a primitive field, you only need to set name and type in the
            nested MetadataTemplate. The recommended value for the name field is
            item, as this isn't used in the actual payload.
          $ref: '#/components/schemas/GoogleCloudDataplexV1AspectTypeMetadataTemplate'
        typeId:
          description: >-
            Optional. You can use type id if this definition of the field needs
            to be reused later. The type id must be unique across the entire
            template. You can only specify it if the field type is record.
          type: string
        typeRef:
          description: >-
            Optional. A reference to another field definition (not an inline
            definition). The value must be equal to the value of an id field
            defined elsewhere in the MetadataTemplate. Only fields with record
            type can refer to other fields.
          type: string
        constraints:
          description: Optional. Specifies the constraints on this field.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1AspectTypeMetadataTemplateConstraints
        annotations:
          description: Optional. Specifies annotations on this field.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1AspectTypeMetadataTemplateAnnotations
    GoogleCloudDataplexV1AspectTypeMetadataTemplateEnumValue:
      id: GoogleCloudDataplexV1AspectTypeMetadataTemplateEnumValue
      description: Definition of Enumvalue, to be used for enum fields.
      type: object
      properties:
        index:
          description: Required. Index for the enum value. It can't be modified.
          type: integer
          format: int32
        name:
          description: >-
            Required. Name of the enumvalue. This is the actual value that the
            aspect can contain.
          type: string
        deprecated:
          description: >-
            Optional. You can set this message if you need to deprecate an enum
            value.
          type: string
    GoogleCloudDataplexV1AspectTypeMetadataTemplateConstraints:
      id: GoogleCloudDataplexV1AspectTypeMetadataTemplateConstraints
      description: Definition of the constraints of a field.
      type: object
      properties:
        required:
          description: Optional. Marks this field as optional or required.
          type: boolean
    GoogleCloudDataplexV1AspectTypeMetadataTemplateAnnotations:
      id: GoogleCloudDataplexV1AspectTypeMetadataTemplateAnnotations
      description: Definition of the annotations of a field.
      type: object
      properties:
        deprecated:
          description: >-
            Optional. Marks a field as deprecated. You can include a deprecation
            message.
          type: string
        displayName:
          description: Optional. Display name for a field.
          type: string
        description:
          description: Optional. Description for a field.
          type: string
        displayOrder:
          description: >-
            Optional. Display order for a field. You can use this to reorder
            where a field is rendered.
          type: integer
          format: int32
        stringType:
          description: >-
            Optional. You can use String Type annotations to specify special
            meaning to string fields. The following values are supported:
            richText: The field must be interpreted as a rich text field. url: A
            fully qualified URL link. resource: A service qualified resource
            reference.
          type: string
        stringValues:
          description: >-
            Optional. Suggested hints for string fields. You can use them to
            suggest values to users through console.
          type: array
          items:
            type: string
    GoogleCloudDataplexV1ListAspectTypesResponse:
      id: GoogleCloudDataplexV1ListAspectTypesResponse
      description: List AspectTypes response.
      type: object
      properties:
        aspectTypes:
          description: AspectTypes under the given parent location.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1AspectType'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
        unreachableLocations:
          description: Locations that the service couldn't reach.
          type: array
          items:
            type: string
    GoogleCloudDataplexV1EntryGroup:
      id: GoogleCloudDataplexV1EntryGroup
      description: An Entry Group represents a logical grouping of one or more Entries.
      type: object
      properties:
        name:
          description: >-
            Output only. The relative resource name of the EntryGroup, in the
            format
            projects/{project_id_or_number}/locations/{location_id}/entryGroups/{entry_group_id}.
          readOnly: true
          type: string
        uid:
          description: >-
            Output only. System generated globally unique ID for the EntryGroup.
            If you delete and recreate the EntryGroup with the same name, this
            ID will be different.
          readOnly: true
          type: string
        createTime:
          description: Output only. The time when the EntryGroup was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time when the EntryGroup was last updated.
          readOnly: true
          type: string
          format: google-datetime
        description:
          description: Optional. Description of the EntryGroup.
          type: string
        displayName:
          description: Optional. User friendly display name.
          type: string
        labels:
          description: Optional. User-defined labels for the EntryGroup.
          type: object
          additionalProperties:
            type: string
        etag:
          description: >-
            This checksum is computed by the service, and might be sent on
            update and delete requests to ensure the client has an up-to-date
            value before proceeding.
          type: string
    GoogleCloudDataplexV1ListEntryGroupsResponse:
      id: GoogleCloudDataplexV1ListEntryGroupsResponse
      description: List entry groups response.
      type: object
      properties:
        entryGroups:
          description: Entry groups under the given parent location.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1EntryGroup'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
        unreachableLocations:
          description: Locations that the service couldn't reach.
          type: array
          items:
            type: string
    GoogleCloudDataplexV1Entry:
      id: GoogleCloudDataplexV1Entry
      description: >-
        An entry is a representation of a data resource that can be described by
        various metadata.
      type: object
      properties:
        name:
          description: >-
            Identifier. The relative resource name of the entry, in the format
            projects/{project_id_or_number}/locations/{location_id}/entryGroups/{entry_group_id}/entries/{entry_id}.
          type: string
        entryType:
          description: >-
            Required. Immutable. The relative resource name of the entry type
            that was used to create this entry, in the format
            projects/{project_id_or_number}/locations/{location_id}/entryTypes/{entry_type_id}.
          type: string
        createTime:
          description: Output only. The time when the entry was created in Dataplex.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time when the entry was last updated in Dataplex.
          readOnly: true
          type: string
          format: google-datetime
        aspects:
          description: >-
            Optional. The aspects that are attached to the entry. Depending on
            how the aspect is attached to the entry, the format of the aspect
            key can be one of the following: If the aspect is attached directly
            to the entry: {project_id_or_number}.{location_id}.{aspect_type_id}
            If the aspect is attached to an entry's path:
            {project_id_or_number}.{location_id}.{aspect_type_id}@{path}
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Aspect'
        parentEntry:
          description: Optional. Immutable. The resource name of the parent entry.
          type: string
        fullyQualifiedName:
          description: >-
            Optional. A name for the entry that can be referenced by an external
            system. For more information, see Fully qualified names
            (https://cloud.google.com/data-catalog/docs/fully-qualified-names).
            The maximum size of the field is 4000 characters.
          type: string
        entrySource:
          description: >-
            Optional. Information related to the source system of the data
            resource that is represented by the entry.
          $ref: '#/components/schemas/GoogleCloudDataplexV1EntrySource'
    GoogleCloudDataplexV1Aspect:
      id: GoogleCloudDataplexV1Aspect
      description: An aspect is a single piece of metadata describing an entry.
      type: object
      properties:
        aspectType:
          description: >-
            Output only. The resource name of the type used to create this
            Aspect.
          readOnly: true
          type: string
        path:
          description: >-
            Output only. The path in the entry under which the aspect is
            attached.
          readOnly: true
          type: string
        createTime:
          description: Output only. The time when the Aspect was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time when the Aspect was last updated.
          readOnly: true
          type: string
          format: google-datetime
        data:
          description: >-
            Required. The content of the aspect, according to its aspect type
            schema. The maximum size of the field is 120KB (encoded as UTF-8).
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        aspectSource:
          description: Optional. Information related to the source system of the aspect.
          $ref: '#/components/schemas/GoogleCloudDataplexV1AspectSource'
    GoogleCloudDataplexV1AspectSource:
      id: GoogleCloudDataplexV1AspectSource
      description: Information related to the source system of the aspect.
      type: object
      properties:
        createTime:
          description: The time the aspect was created in the source system.
          type: string
          format: google-datetime
        updateTime:
          description: The time the aspect was last updated in the source system.
          type: string
          format: google-datetime
    GoogleCloudDataplexV1EntrySource:
      id: GoogleCloudDataplexV1EntrySource
      description: >-
        Information related to the source system of the data resource that is
        represented by the entry.
      type: object
      properties:
        resource:
          description: >-
            The name of the resource in the source system. Maximum length is
            4,000 characters.
          type: string
        system:
          description: The name of the source system. Maximum length is 64 characters.
          type: string
        platform:
          description: >-
            The platform containing the source system. Maximum length is 64
            characters.
          type: string
        displayName:
          description: A user-friendly display name. Maximum length is 500 characters.
          type: string
        description:
          description: >-
            A description of the data resource. Maximum length is 2,000
            characters.
          type: string
        labels:
          description: >-
            User-defined labels. The maximum size of keys and values is 128
            characters each.
          type: object
          additionalProperties:
            type: string
        ancestors:
          description: >-
            Immutable. The entries representing the ancestors of the data
            resource in the source system.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1EntrySourceAncestor'
        createTime:
          description: The time when the resource was created in the source system.
          type: string
          format: google-datetime
        updateTime:
          description: >-
            The time when the resource was last updated in the source system. If
            the entry exists in the system and its EntrySource has update_time
            populated, further updates to the EntrySource of the entry must
            provide incremental updates to its update_time.
          type: string
          format: google-datetime
        location:
          description: >-
            Output only. Location of the resource in the source system. You can
            search the entry by this location. By default, this should match the
            location of the entry group containing this entry. A different value
            allows capturing the source location for data external to Google
            Cloud.
          readOnly: true
          type: string
    GoogleCloudDataplexV1EntrySourceAncestor:
      id: GoogleCloudDataplexV1EntrySourceAncestor
      description: >-
        Information about individual items in the hierarchy that is associated
        with the data resource.
      type: object
      properties:
        name:
          description: Optional. The name of the ancestor resource.
          type: string
        type:
          description: Optional. The type of the ancestor resource.
          type: string
    GoogleCloudDataplexV1ListEntriesResponse:
      id: GoogleCloudDataplexV1ListEntriesResponse
      description: List Entries response.
      type: object
      properties:
        entries:
          description: The list of entries under the given parent location.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Entry'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    GoogleCloudDataplexV1SearchEntriesResponse:
      id: GoogleCloudDataplexV1SearchEntriesResponse
      type: object
      properties:
        results:
          description: The results matching the search query.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1SearchEntriesResult'
        totalSize:
          description: >-
            The estimated total number of matching entries. This number isn't
            guaranteed to be accurate.
          type: integer
          format: int32
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
        unreachable:
          description: >-
            Locations that the service couldn't reach. Search results don't
            include data from these locations.
          type: array
          items:
            type: string
    GoogleCloudDataplexV1SearchEntriesResult:
      id: GoogleCloudDataplexV1SearchEntriesResult
      description: A single result of a SearchEntries request.
      type: object
      properties:
        linkedResource:
          description: Linked resource name.
          deprecated: true
          type: string
        dataplexEntry:
          $ref: '#/components/schemas/GoogleCloudDataplexV1Entry'
        snippets:
          description: Snippets.
          deprecated: true
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1SearchEntriesResultSnippets
    GoogleCloudDataplexV1SearchEntriesResultSnippets:
      id: GoogleCloudDataplexV1SearchEntriesResultSnippets
      deprecated: true
      description: >-
        Snippets for the entry, contains HTML-style highlighting for matched
        tokens, will be used in UI.
      type: object
      properties:
        dataplexEntry:
          description: Entry
          deprecated: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1Entry'
    GoogleCloudDataplexV1MetadataJob:
      id: GoogleCloudDataplexV1MetadataJob
      description: A metadata job resource.
      type: object
      properties:
        name:
          description: >-
            Output only. Identifier. The name of the resource that the
            configuration is applied to, in the format
            projects/{project_number}/locations/{location_id}/metadataJobs/{metadata_job_id}.
          readOnly: true
          type: string
        uid:
          description: >-
            Output only. A system-generated, globally unique ID for the metadata
            job. If the metadata job is deleted and then re-created with the
            same name, this ID is different.
          readOnly: true
          type: string
        createTime:
          description: Output only. The time when the metadata job was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time when the metadata job was updated.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: Optional. User-defined labels.
          type: object
          additionalProperties:
            type: string
        type:
          description: Required. Metadata job type.
          type: string
          enumDescriptions:
            - Unspecified.
            - Import job.
          enum:
            - TYPE_UNSPECIFIED
            - IMPORT
        importSpec:
          description: Import job specification.
          $ref: '#/components/schemas/GoogleCloudDataplexV1MetadataJobImportJobSpec'
        importResult:
          description: Output only. Import job result.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1MetadataJobImportJobResult'
        status:
          description: Output only. Metadata job status.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1MetadataJobStatus'
    GoogleCloudDataplexV1MetadataJobImportJobSpec:
      id: GoogleCloudDataplexV1MetadataJobImportJobSpec
      description: Job specification for a metadata import job
      type: object
      properties:
        sourceStorageUri:
          description: >-
            Optional. The URI of a Cloud Storage bucket or folder (beginning
            with gs:// and ending with /) that contains the metadata import
            files for this job.A metadata import file defines the values to set
            for each of the entries and aspects in a metadata job. For more
            information about how to create a metadata import file and the file
            requirements, see Metadata import file
            (https://cloud.google.com/dataplex/docs/import-metadata#metadata-import-file).You
            can provide multiple metadata import files in the same metadata job.
            The bucket or folder must contain at least one metadata import file,
            in JSON Lines format (either .json or .jsonl file extension).In FULL
            entry sync mode, don't save the metadata import file in a folder
            named SOURCE_STORAGE_URI/deletions/.Caution: If the metadata import
            file contains no data, all entries and aspects that belong to the
            job's scope are deleted.
          type: string
        sourceCreateTime:
          description: >-
            Optional. The time when the process that created the metadata import
            files began.
          type: string
          format: google-datetime
        scope:
          description: >-
            Required. A boundary on the scope of impact that the metadata import
            job can have.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1MetadataJobImportJobSpecImportJobScope
        entrySyncMode:
          description: >-
            Required. The sync mode for entries. Only FULL mode is supported for
            entries. All entries in the job's scope are modified. If an entry
            exists in Dataplex but isn't included in the metadata import file,
            the entry is deleted when you run the metadata job.
          type: string
          enumDescriptions:
            - Sync mode unspecified.
            - >-
              All resources in the job's scope are modified. If a resource
              exists in Dataplex but isn't included in the metadata import file,
              the resource is deleted when you run the metadata job. Use this
              mode to perform a full sync of the set of entries in the job
              scope.
            - >-
              Only the entries and aspects that are explicitly included in the
              metadata import file are modified. Use this mode to modify a
              subset of resources while leaving unreferenced resources
              unchanged.
          enum:
            - SYNC_MODE_UNSPECIFIED
            - FULL
            - INCREMENTAL
        aspectSyncMode:
          description: >-
            Required. The sync mode for aspects. Only INCREMENTAL mode is
            supported for aspects. An aspect is modified only if the metadata
            import file includes a reference to the aspect in the update_mask
            field and the aspect_keys field.
          type: string
          enumDescriptions:
            - Sync mode unspecified.
            - >-
              All resources in the job's scope are modified. If a resource
              exists in Dataplex but isn't included in the metadata import file,
              the resource is deleted when you run the metadata job. Use this
              mode to perform a full sync of the set of entries in the job
              scope.
            - >-
              Only the entries and aspects that are explicitly included in the
              metadata import file are modified. Use this mode to modify a
              subset of resources while leaving unreferenced resources
              unchanged.
          enum:
            - SYNC_MODE_UNSPECIFIED
            - FULL
            - INCREMENTAL
        logLevel:
          description: >-
            Optional. The level of logs to write to Cloud Logging for this
            job.Debug-level logs provide highly-detailed information for
            troubleshooting, but their increased verbosity could incur
            additional costs (https://cloud.google.com/stackdriver/pricing) that
            might not be merited for all jobs.If unspecified, defaults to INFO.
          type: string
          enumDescriptions:
            - Log level unspecified.
            - >-
              Debug-level logging. Captures detailed logs for each import item.
              Use debug-level logging to troubleshoot issues with specific
              import items. For example, use debug-level logging to identify
              resources that are missing from the job scope, entries or aspects
              that don't conform to the associated entry type or aspect type, or
              other misconfigurations with the metadata import file.Depending on
              the size of your metadata job and the number of logs that are
              generated, debug-level logging might incur additional costs
              (https://cloud.google.com/stackdriver/pricing).
            - >-
              Info-level logging. Captures logs at the overall job level.
              Includes aggregate logs about import items, but doesn't specify
              which import item has an error.
          enum:
            - LOG_LEVEL_UNSPECIFIED
            - DEBUG
            - INFO
    GoogleCloudDataplexV1MetadataJobImportJobSpecImportJobScope:
      id: GoogleCloudDataplexV1MetadataJobImportJobSpecImportJobScope
      description: A boundary on the scope of impact that the metadata import job can have.
      type: object
      properties:
        entryGroups:
          description: >-
            Required. The entry group that is in scope for the import job,
            specified as a relative resource name in the format
            projects/{project_number_or_id}/locations/{location_id}/entryGroups/{entry_group_id}.
            Only entries that belong to the specified entry group are affected
            by the job.Must contain exactly one element. The entry group and the
            job must be in the same location.
          type: array
          items:
            type: string
        entryTypes:
          description: >-
            Required. The entry types that are in scope for the import job,
            specified as relative resource names in the format
            projects/{project_number_or_id}/locations/{location_id}/entryTypes/{entry_type_id}.
            The job modifies only the entries that belong to these entry
            types.If the metadata import file attempts to modify an entry whose
            type isn't included in this list, the import job is halted before
            modifying any entries or aspects.The location of an entry type must
            either match the location of the job, or the entry type must be
            global.
          type: array
          items:
            type: string
        aspectTypes:
          description: >-
            Optional. The aspect types that are in scope for the import job,
            specified as relative resource names in the format
            projects/{project_number_or_id}/locations/{location_id}/aspectTypes/{aspect_type_id}.
            The job modifies only the aspects that belong to these aspect
            types.If the metadata import file attempts to modify an aspect whose
            type isn't included in this list, the import job is halted before
            modifying any entries or aspects.The location of an aspect type must
            either match the location of the job, or the aspect type must be
            global.
          type: array
          items:
            type: string
    GoogleCloudDataplexV1MetadataJobImportJobResult:
      id: GoogleCloudDataplexV1MetadataJobImportJobResult
      description: Results from a metadata import job.
      type: object
      properties:
        deletedEntries:
          description: Output only. The total number of entries that were deleted.
          readOnly: true
          type: string
          format: int64
        updatedEntries:
          description: Output only. The total number of entries that were updated.
          readOnly: true
          type: string
          format: int64
        createdEntries:
          description: Output only. The total number of entries that were created.
          readOnly: true
          type: string
          format: int64
        unchangedEntries:
          description: Output only. The total number of entries that were unchanged.
          readOnly: true
          type: string
          format: int64
        recreatedEntries:
          description: Output only. The total number of entries that were recreated.
          readOnly: true
          type: string
          format: int64
        updateTime:
          description: Output only. The time when the status was updated.
          readOnly: true
          type: string
          format: google-datetime
    GoogleCloudDataplexV1MetadataJobStatus:
      id: GoogleCloudDataplexV1MetadataJobStatus
      description: Metadata job status.
      type: object
      properties:
        state:
          description: Output only. State of the metadata job.
          readOnly: true
          type: string
          enumDescriptions:
            - State unspecified.
            - The job is queued.
            - The job is running.
            - The job is being canceled.
            - The job is canceled.
            - The job succeeded.
            - The job failed.
            - The job completed with some errors.
          enum:
            - STATE_UNSPECIFIED
            - QUEUED
            - RUNNING
            - CANCELING
            - CANCELED
            - SUCCEEDED
            - FAILED
            - SUCCEEDED_WITH_ERRORS
        message:
          description: Output only. Message relating to the progression of a metadata job.
          readOnly: true
          type: string
        completionPercent:
          description: Output only. Progress tracking.
          readOnly: true
          type: integer
          format: int32
        updateTime:
          description: Output only. The time when the status was updated.
          readOnly: true
          type: string
          format: google-datetime
    GoogleCloudDataplexV1ListMetadataJobsResponse:
      id: GoogleCloudDataplexV1ListMetadataJobsResponse
      description: List metadata jobs response.
      type: object
      properties:
        metadataJobs:
          description: Metadata jobs under the specified parent location.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1MetadataJob'
        nextPageToken:
          description: >-
            A token to retrieve the next page of results. If there are no more
            results in the list, the value is empty.
          type: string
        unreachableLocations:
          description: Locations that the service couldn't reach.
          type: array
          items:
            type: string
    GoogleCloudDataplexV1CancelMetadataJobRequest:
      id: GoogleCloudDataplexV1CancelMetadataJobRequest
      description: Cancel metadata job request.
      type: object
      properties: {}
    GoogleIamV1SetIamPolicyRequest:
      id: GoogleIamV1SetIamPolicyRequest
      description: Request message for SetIamPolicy method.
      type: object
      properties:
        policy:
          description: >-
            REQUIRED: The complete policy to be applied to the resource. The
            size of the policy is limited to a few 10s of KB. An empty policy is
            a valid policy but certain Google Cloud services (such as Projects)
            might reject them.
          $ref: '#/components/schemas/GoogleIamV1Policy'
        updateMask:
          description: >-
            OPTIONAL: A FieldMask specifying which fields of the policy to
            modify. Only the fields in the mask will be modified. If no mask is
            provided, the following default mask is used:paths: "bindings, etag"
          type: string
          format: google-fieldmask
    GoogleIamV1Policy:
      id: GoogleIamV1Policy
      description: >-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources.A Policy is a collection of
        bindings. A binding binds one or more members, or principals, to a
        single role. Principals can be user accounts, service accounts, Google
        groups, and domains (such as G Suite). A role is a named list of
        permissions; each role can be an IAM predefined role or a user-created
        custom role.For some types of Google Cloud resources, a binding can also
        specify a condition, which is a logical expression that allows access to
        a resource only if the expression evaluates to true. A condition can add
        constraints based on attributes of the request, the resource, or both.
        To learn which resources support conditions in their IAM policies, see
        the IAM documentation
        (https://cloud.google.com/iam/help/conditions/resource-policies).JSON
        example: { "bindings": [ { "role":
        "roles/resourcemanager.organizationAdmin", "members": [
        "user:mike@example.com", "group:admins@example.com",
        "domain:google.com",
        "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, {
        "role": "roles/resourcemanager.organizationViewer", "members": [
        "user:eve@example.com" ], "condition": { "title": "expirable access",
        "description": "Does not grant access after Sep 2020", "expression":
        "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
        "BwWWja0YfJA=", "version": 3 } YAML example: bindings: - members: -
        user:mike@example.com - group:admins@example.com - domain:google.com -
        serviceAccount:my-project-id@appspot.gserviceaccount.com role:
        roles/resourcemanager.organizationAdmin - members: -
        user:eve@example.com role: roles/resourcemanager.organizationViewer
        condition: title: expirable access description: Does not grant access
        after Sep 2020 expression: request.time <
        timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For
        a description of IAM and its features, see the IAM documentation
        (https://cloud.google.com/iam/docs/).
      type: object
      properties:
        version:
          description: >-
            Specifies the format of the policy.Valid values are 0, 1, and 3.
            Requests that specify an invalid value are rejected.Any operation
            that affects conditional role bindings must specify version 3. This
            requirement applies to the following operations: Getting a policy
            that includes a conditional role binding Adding a conditional role
            binding to a policy Changing a conditional role binding in a policy
            Removing any role binding, with or without a condition, from a
            policy that includes conditionsImportant: If you use IAM Conditions,
            you must include the etag field whenever you call setIamPolicy. If
            you omit this field, then IAM allows you to overwrite a version 3
            policy with a version 1 policy, and all of the conditions in the
            version 3 policy are lost.If a policy does not include any
            conditions, operations on that policy may specify any valid version
            or leave the field unset.To learn which resources support conditions
            in their IAM policies, see the IAM documentation
            (https://cloud.google.com/iam/help/conditions/resource-policies).
          type: integer
          format: int32
        bindings:
          description: >-
            Associates a list of members, or principals, with a role.
            Optionally, may specify a condition that determines how and when the
            bindings are applied. Each of the bindings must contain at least one
            principal.The bindings in a Policy can refer to up to 1,500
            principals; up to 250 of these principals can be Google groups. Each
            occurrence of a principal counts towards these limits. For example,
            if the bindings grant 50 different roles to user:alice@example.com,
            and not to any other principal, then you can add another 1,450
            principals to the bindings in the Policy.
          type: array
          items:
            $ref: '#/components/schemas/GoogleIamV1Binding'
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          type: array
          items:
            $ref: '#/components/schemas/GoogleIamV1AuditConfig'
        etag:
          description: >-
            etag is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the etag in
            the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An etag is returned in the response to
            getIamPolicy, and systems are expected to put that etag in the
            request to setIamPolicy to ensure that their change will be applied
            to the same version of the policy.Important: If you use IAM
            Conditions, you must include the etag field whenever you call
            setIamPolicy. If you omit this field, then IAM allows you to
            overwrite a version 3 policy with a version 1 policy, and all of the
            conditions in the version 3 policy are lost.
          type: string
          format: byte
    GoogleIamV1Binding:
      id: GoogleIamV1Binding
      description: Associates members, or principals, with a role.
      type: object
      properties:
        role:
          description: >-
            Role that is assigned to the list of members, or principals. For
            example, roles/viewer, roles/editor, or roles/owner.For an overview
            of the IAM roles and permissions, see the IAM documentation
            (https://cloud.google.com/iam/docs/roles-overview). For a list of
            the available pre-defined roles, see here
            (https://cloud.google.com/iam/docs/understanding-roles).
          type: string
        members:
          description: >-
            Specifies the principals requesting access for a Google Cloud
            resource. members can have the following values: allUsers: A special
            identifier that represents anyone who is on the internet; with or
            without a Google account. allAuthenticatedUsers: A special
            identifier that represents anyone who is authenticated with a Google
            account or a service account. Does not include identities that come
            from external identity providers (IdPs) through identity federation.
            user:{emailid}: An email address that represents a specific Google
            account. For example, alice@example.com . serviceAccount:{emailid}:
            An email address that represents a Google service account. For
            example, my-other-app@appspot.gserviceaccount.com.
            serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]:
            An identifier for a Kubernetes service account
            (https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
            For example, my-project.svc.id.goog[my-namespace/my-kubernetes-sa].
            group:{emailid}: An email address that represents a Google group.
            For example, admins@example.com. domain:{domain}: The G Suite domain
            (primary) that represents all the users of that domain. For example,
            google.com or example.com.
            principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}:
            A single identity in a workforce identity pool.
            principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}:
            All workforce identities in a group.
            principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}:
            All workforce identities with a specific attribute value.
            principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*:
            All identities in a workforce identity pool.
            principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}:
            A single identity in a workload identity pool.
            principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}:
            A workload identity pool group.
            principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}:
            All identities in a workload identity pool with a certain attribute.
            principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*:
            All identities in a workload identity pool.
            deleted:user:{emailid}?uid={uniqueid}: An email address (plus unique
            identifier) representing a user that has been recently deleted. For
            example, alice@example.com?uid=123456789012345678901. If the user is
            recovered, this value reverts to user:{emailid} and the recovered
            user retains the role in the binding.
            deleted:serviceAccount:{emailid}?uid={uniqueid}: An email address
            (plus unique identifier) representing a service account that has
            been recently deleted. For example,
            my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901.
            If the service account is undeleted, this value reverts to
            serviceAccount:{emailid} and the undeleted service account retains
            the role in the binding. deleted:group:{emailid}?uid={uniqueid}: An
            email address (plus unique identifier) representing a Google group
            that has been recently deleted. For example,
            admins@example.com?uid=123456789012345678901. If the group is
            recovered, this value reverts to group:{emailid} and the recovered
            group retains the role in the binding.
            deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}:
            Deleted single identity in a workforce identity pool. For example,
            deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value.
          type: array
          items:
            type: string
        condition:
          description: >-
            The condition that is associated with this binding.If the condition
            evaluates to true, then this binding applies to the current
            request.If the condition evaluates to false, then this binding does
            not apply to the current request. However, a different role binding
            might grant the same role to one or more of the principals in this
            binding.To learn which resources support conditions in their IAM
            policies, see the IAM documentation
            (https://cloud.google.com/iam/help/conditions/resource-policies).
          $ref: '#/components/schemas/GoogleTypeExpr'
    GoogleTypeExpr:
      id: GoogleTypeExpr
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec.Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      type: object
      properties:
        expression:
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
          type: string
        title:
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
        description:
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
          type: string
        location:
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
          type: string
    GoogleIamV1AuditConfig:
      id: GoogleIamV1AuditConfig
      description: >-
        Specifies the audit configuration for a service. The configuration
        determines which permission types are logged, and what identities, if
        any, are exempted from logging. An AuditConfig must have one or more
        AuditLogConfigs.If there are AuditConfigs for both allServices and a
        specific service, the union of the two AuditConfigs is used for that
        service: the log_types specified in each AuditConfig are enabled, and
        the exempted_members in each AuditLogConfig are exempted.Example Policy
        with multiple AuditConfigs: { "audit_configs": [ { "service":
        "allServices", "audit_log_configs": [ { "log_type": "DATA_READ",
        "exempted_members": [ "user:jose@example.com" ] }, { "log_type":
        "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service":
        "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type":
        "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [
        "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy
        enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts
        jose@example.com from DATA_READ logging, and aliya@example.com from
        DATA_WRITE logging.
      type: object
      properties:
        service:
          description: >-
            Specifies a service that will be enabled for audit logging. For
            example, storage.googleapis.com, cloudsql.googleapis.com.
            allServices is a special value that covers all services.
          type: string
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          type: array
          items:
            $ref: '#/components/schemas/GoogleIamV1AuditLogConfig'
    GoogleIamV1AuditLogConfig:
      id: GoogleIamV1AuditLogConfig
      description: >-
        Provides the configuration for logging a type of permissions. Example: {
        "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
        "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This
        enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        jose@example.com from DATA_READ logging.
      type: object
      properties:
        logType:
          description: The log type that this config enables.
          type: string
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
        exemptedMembers:
          description: >-
            Specifies the identities that do not cause logging for this type of
            permission. Follows the same format of Binding.members.
          type: array
          items:
            type: string
    GoogleIamV1TestIamPermissionsRequest:
      id: GoogleIamV1TestIamPermissionsRequest
      description: Request message for TestIamPermissions method.
      type: object
      properties:
        permissions:
          description: >-
            The set of permissions to check for the resource. Permissions with
            wildcards (such as * or storage.*) are not allowed. For more
            information see IAM Overview
            (https://cloud.google.com/iam/docs/overview#permissions).
          type: array
          items:
            type: string
    GoogleIamV1TestIamPermissionsResponse:
      id: GoogleIamV1TestIamPermissionsResponse
      description: Response message for TestIamPermissions method.
      type: object
      properties:
        permissions:
          description: >-
            A subset of TestPermissionsRequest.permissions that the caller is
            allowed.
          type: array
          items:
            type: string
    GoogleCloudDataplexV1Content:
      id: GoogleCloudDataplexV1Content
      description: Content represents a user-visible notebook or a sql script
      type: object
      properties:
        name:
          description: >-
            Output only. The relative resource name of the content, of the form:
            projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}
          readOnly: true
          type: string
        uid:
          description: >-
            Output only. System generated globally unique ID for the content.
            This ID will be different if the content is deleted and re-created
            with the same name.
          readOnly: true
          type: string
        path:
          description: >-
            Required. The path for the Content file, represented as directory
            structure. Unique within a lake. Limited to alphanumerics, hyphens,
            underscores, dots and slashes.
          type: string
        createTime:
          description: Output only. Content creation time.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time when the content was last updated.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: Optional. User defined labels for the content.
          type: object
          additionalProperties:
            type: string
        description:
          description: Optional. Description of the content.
          type: string
        dataText:
          description: Required. Content data in string format.
          type: string
        sqlScript:
          description: Sql Script related configurations.
          $ref: '#/components/schemas/GoogleCloudDataplexV1ContentSqlScript'
        notebook:
          description: Notebook related configurations.
          $ref: '#/components/schemas/GoogleCloudDataplexV1ContentNotebook'
    GoogleCloudDataplexV1ContentSqlScript:
      id: GoogleCloudDataplexV1ContentSqlScript
      description: Configuration for the Sql Script content.
      type: object
      properties:
        engine:
          description: Required. Query Engine to be used for the Sql Query.
          type: string
          enumDescriptions:
            - Value was unspecified.
            - Spark SQL Query.
          enum:
            - QUERY_ENGINE_UNSPECIFIED
            - SPARK
    GoogleCloudDataplexV1ContentNotebook:
      id: GoogleCloudDataplexV1ContentNotebook
      description: Configuration for Notebook content.
      type: object
      properties:
        kernelType:
          description: Required. Kernel Type of the notebook.
          type: string
          enumDescriptions:
            - Kernel Type unspecified.
            - Python 3 Kernel.
          enum:
            - KERNEL_TYPE_UNSPECIFIED
            - PYTHON3
    GoogleCloudDataplexV1ListContentResponse:
      id: GoogleCloudDataplexV1ListContentResponse
      description: List content response.
      type: object
      properties:
        content:
          description: Content under the given parent lake.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    GoogleCloudDataplexV1DataTaxonomy:
      id: GoogleCloudDataplexV1DataTaxonomy
      description: >-
        DataTaxonomy represents a set of hierarchical DataAttributes resources,
        grouped with a common theme Eg: 'SensitiveDataTaxonomy' can have
        attributes to manage PII data. It is defined at project level.
      type: object
      properties:
        name:
          description: >-
            Output only. The relative resource name of the DataTaxonomy, of the
            form:
            projects/{project_number}/locations/{location_id}/dataTaxonomies/{data_taxonomy_id}.
          readOnly: true
          type: string
        uid:
          description: >-
            Output only. System generated globally unique ID for the
            dataTaxonomy. This ID will be different if the DataTaxonomy is
            deleted and re-created with the same name.
          readOnly: true
          type: string
        createTime:
          description: Output only. The time when the DataTaxonomy was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time when the DataTaxonomy was last updated.
          readOnly: true
          type: string
          format: google-datetime
        description:
          description: Optional. Description of the DataTaxonomy.
          type: string
        displayName:
          description: Optional. User friendly display name.
          type: string
        labels:
          description: Optional. User-defined labels for the DataTaxonomy.
          type: object
          additionalProperties:
            type: string
        attributeCount:
          description: Output only. The number of attributes in the DataTaxonomy.
          readOnly: true
          type: integer
          format: int32
        etag:
          description: >-
            This checksum is computed by the server based on the value of other
            fields, and may be sent on update and delete requests to ensure the
            client has an up-to-date value before proceeding.
          type: string
        classCount:
          description: Output only. The number of classes in the DataTaxonomy.
          readOnly: true
          type: integer
          format: int32
    GoogleCloudDataplexV1ListDataTaxonomiesResponse:
      id: GoogleCloudDataplexV1ListDataTaxonomiesResponse
      description: List DataTaxonomies response.
      type: object
      properties:
        dataTaxonomies:
          description: DataTaxonomies under the given parent location.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1DataTaxonomy'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
        unreachableLocations:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    GoogleCloudDataplexV1DataAttributeBinding:
      id: GoogleCloudDataplexV1DataAttributeBinding
      description: >-
        DataAttributeBinding represents binding of attributes to resources. Eg:
        Bind 'CustomerInfo' entity with 'PII' attribute.
      type: object
      properties:
        name:
          description: >-
            Output only. The relative resource name of the Data Attribute
            Binding, of the form:
            projects/{project_number}/locations/{location}/dataAttributeBindings/{data_attribute_binding_id}
          readOnly: true
          type: string
        uid:
          description: >-
            Output only. System generated globally unique ID for the
            DataAttributeBinding. This ID will be different if the
            DataAttributeBinding is deleted and re-created with the same name.
          readOnly: true
          type: string
        createTime:
          description: Output only. The time when the DataAttributeBinding was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. The time when the DataAttributeBinding was last
            updated.
          readOnly: true
          type: string
          format: google-datetime
        description:
          description: Optional. Description of the DataAttributeBinding.
          type: string
        displayName:
          description: Optional. User friendly display name.
          type: string
        labels:
          description: Optional. User-defined labels for the DataAttributeBinding.
          type: object
          additionalProperties:
            type: string
        etag:
          description: >-
            This checksum is computed by the server based on the value of other
            fields, and may be sent on update and delete requests to ensure the
            client has an up-to-date value before proceeding. Etags must be used
            when calling the DeleteDataAttributeBinding and the
            UpdateDataAttributeBinding method.
          type: string
        resource:
          description: >-
            Optional. Immutable. The resource name of the resource that is
            associated to attributes. Presently, only entity resource is
            supported in the form:
            projects/{project}/locations/{location}/lakes/{lake}/zones/{zone}/entities/{entity_id}
            Must belong in the same project and region as the attribute binding,
            and there can only exist one active binding for a resource.
          type: string
        attributes:
          description: >-
            Optional. List of attributes to be associated with the resource,
            provided in the form:
            projects/{project}/locations/{location}/dataTaxonomies/{dataTaxonomy}/attributes/{data_attribute_id}
          type: array
          items:
            type: string
        paths:
          description: >-
            Optional. The list of paths for items within the associated resource
            (eg. columns and partitions within a table) along with attribute
            bindings.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1DataAttributeBindingPath'
    GoogleCloudDataplexV1DataAttributeBindingPath:
      id: GoogleCloudDataplexV1DataAttributeBindingPath
      description: >-
        Represents a subresource of the given resource, and associated bindings
        with it. Currently supported subresources are column and partition
        schema fields within a table.
      type: object
      properties:
        name:
          description: >-
            Required. The name identifier of the path. Nested columns should be
            of the form: 'address.city'.
          type: string
        attributes:
          description: >-
            Optional. List of attributes to be associated with the path of the
            resource, provided in the form:
            projects/{project}/locations/{location}/dataTaxonomies/{dataTaxonomy}/attributes/{data_attribute_id}
          type: array
          items:
            type: string
    GoogleCloudDataplexV1ListDataAttributeBindingsResponse:
      id: GoogleCloudDataplexV1ListDataAttributeBindingsResponse
      description: List DataAttributeBindings response.
      type: object
      properties:
        dataAttributeBindings:
          description: DataAttributeBindings under the given parent Location.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1DataAttributeBinding'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
        unreachableLocations:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    GoogleCloudDataplexV1DataAttribute:
      id: GoogleCloudDataplexV1DataAttribute
      description: >-
        Denotes one dataAttribute in a dataTaxonomy, for example, PII.
        DataAttribute resources can be defined in a hierarchy. A single
        dataAttribute resource can contain specs of multiple types PII -
        ResourceAccessSpec : - readers :foo@bar.com - DataAccessSpec : - readers
        :bar@foo.com 
      type: object
      properties:
        name:
          description: >-
            Output only. The relative resource name of the dataAttribute, of the
            form:
            projects/{project_number}/locations/{location_id}/dataTaxonomies/{dataTaxonomy}/attributes/{data_attribute_id}.
          readOnly: true
          type: string
        uid:
          description: >-
            Output only. System generated globally unique ID for the
            DataAttribute. This ID will be different if the DataAttribute is
            deleted and re-created with the same name.
          readOnly: true
          type: string
        createTime:
          description: Output only. The time when the DataAttribute was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time when the DataAttribute was last updated.
          readOnly: true
          type: string
          format: google-datetime
        description:
          description: Optional. Description of the DataAttribute.
          type: string
        displayName:
          description: Optional. User friendly display name.
          type: string
        labels:
          description: Optional. User-defined labels for the DataAttribute.
          type: object
          additionalProperties:
            type: string
        parentId:
          description: >-
            Optional. The ID of the parent DataAttribute resource, should belong
            to the same data taxonomy. Circular dependency in parent chain is
            not valid. Maximum depth of the hierarchy allowed is 4. a -> b -> c
            -> d -> e, depth = 4
          type: string
        attributeCount:
          description: >-
            Output only. The number of child attributes present for this
            attribute.
          readOnly: true
          type: integer
          format: int32
        etag:
          description: >-
            This checksum is computed by the server based on the value of other
            fields, and may be sent on update and delete requests to ensure the
            client has an up-to-date value before proceeding.
          type: string
        resourceAccessSpec:
          description: >-
            Optional. Specified when applied to a resource (eg: Cloud Storage
            bucket, BigQuery dataset, BigQuery table).
          $ref: '#/components/schemas/GoogleCloudDataplexV1ResourceAccessSpec'
        dataAccessSpec:
          description: >-
            Optional. Specified when applied to data stored on the resource (eg:
            rows, columns in BigQuery Tables).
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataAccessSpec'
    GoogleCloudDataplexV1ResourceAccessSpec:
      id: GoogleCloudDataplexV1ResourceAccessSpec
      description: >-
        ResourceAccessSpec holds the access control configuration to be enforced
        on the resources, for example, Cloud Storage bucket, BigQuery dataset,
        BigQuery table.
      type: object
      properties:
        readers:
          description: >-
            Optional. The format of strings follows the pattern followed by IAM
            in the bindings. user:{email}, serviceAccount:{email} group:{email}.
            The set of principals to be granted reader role on the resource.
          type: array
          items:
            type: string
        writers:
          description: >-
            Optional. The set of principals to be granted writer role on the
            resource.
          type: array
          items:
            type: string
        owners:
          description: >-
            Optional. The set of principals to be granted owner role on the
            resource.
          type: array
          items:
            type: string
    GoogleCloudDataplexV1DataAccessSpec:
      id: GoogleCloudDataplexV1DataAccessSpec
      description: >-
        DataAccessSpec holds the access control configuration to be enforced on
        data stored within resources (eg: rows, columns in BigQuery Tables).
        When associated with data, the data is only accessible to principals
        explicitly granted access through the DataAccessSpec. Principals with
        access to the containing resource are not implicitly granted access.
      type: object
      properties:
        readers:
          description: >-
            Optional. The format of strings follows the pattern followed by IAM
            in the bindings. user:{email}, serviceAccount:{email} group:{email}.
            The set of principals to be granted reader role on data stored
            within resources.
          type: array
          items:
            type: string
    GoogleCloudDataplexV1ListDataAttributesResponse:
      id: GoogleCloudDataplexV1ListDataAttributesResponse
      description: List DataAttributes response.
      type: object
      properties:
        dataAttributes:
          description: DataAttributes under the given parent DataTaxonomy.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1DataAttribute'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
        unreachableLocations:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    GoogleCloudDataplexV1DataScan:
      id: GoogleCloudDataplexV1DataScan
      description: >-
        Represents a user-visible job which provides the insights for the
        related data source.For example: Data Quality: generates queries based
        on the rules and runs against the data to get data quality check
        results. Data Profile: analyzes the data in table(s) and generates
        insights about the structure, content and relationships (such as null
        percent, cardinality, min/max/mean, etc).
      type: object
      properties:
        name:
          description: >-
            Output only. The relative resource name of the scan, of the form:
            projects/{project}/locations/{location_id}/dataScans/{datascan_id},
            where project refers to a project_id or project_number and
            location_id refers to a GCP region.
          readOnly: true
          type: string
        uid:
          description: >-
            Output only. System generated globally unique ID for the scan. This
            ID will be different if the scan is deleted and re-created with the
            same name.
          readOnly: true
          type: string
        description:
          description: >-
            Optional. Description of the scan. Must be between 1-1024
            characters.
          type: string
        displayName:
          description: >-
            Optional. User friendly display name. Must be between 1-256
            characters.
          type: string
        labels:
          description: Optional. User-defined labels for the scan.
          type: object
          additionalProperties:
            type: string
        state:
          description: Output only. Current state of the DataScan.
          readOnly: true
          type: string
          enumDescriptions:
            - State is not specified.
            - Resource is active, i.e., ready to use.
            - Resource is under creation.
            - Resource is under deletion.
            - Resource is active but has unresolved actions.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - DELETING
            - ACTION_REQUIRED
        createTime:
          description: Output only. The time when the scan was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time when the scan was last updated.
          readOnly: true
          type: string
          format: google-datetime
        data:
          description: Required. The data source for DataScan.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataSource'
        executionSpec:
          description: >-
            Optional. DataScan execution settings.If not specified, the fields
            in it will use their default values.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataScanExecutionSpec'
        executionStatus:
          description: Output only. Status of the data scan execution.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataScanExecutionStatus'
        type:
          description: Output only. The type of DataScan.
          readOnly: true
          type: string
          enumDescriptions:
            - The DataScan type is unspecified.
            - Data Quality scan.
            - Data Profile scan.
          enum:
            - DATA_SCAN_TYPE_UNSPECIFIED
            - DATA_QUALITY
            - DATA_PROFILE
        dataQualitySpec:
          description: DataQualityScan related setting.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualitySpec'
        dataProfileSpec:
          description: DataProfileScan related setting.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileSpec'
        dataQualityResult:
          description: Output only. The result of the data quality scan.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityResult'
        dataProfileResult:
          description: Output only. The result of the data profile scan.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileResult'
    GoogleCloudDataplexV1DataSource:
      id: GoogleCloudDataplexV1DataSource
      description: The data source for DataScan.
      type: object
      properties:
        entity:
          description: >-
            Immutable. The Dataplex entity that represents the data source (e.g.
            BigQuery table) for DataScan, of the form:
            projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}.
          type: string
        resource:
          description: >-
            Immutable. The service-qualified full resource name of the cloud
            resource for a DataScan job to scan against. The field could be:
            BigQuery table of type "TABLE" for DataProfileScan/DataQualityScan
            Format:
            //bigquery.googleapis.com/projects/PROJECT_ID/datasets/DATASET_ID/tables/TABLE_ID
          type: string
    GoogleCloudDataplexV1DataScanExecutionSpec:
      id: GoogleCloudDataplexV1DataScanExecutionSpec
      description: DataScan execution settings.
      type: object
      properties:
        trigger:
          description: >-
            Optional. Spec related to how often and when a scan should be
            triggered.If not specified, the default is OnDemand, which means the
            scan will not run until the user calls RunDataScan API.
          $ref: '#/components/schemas/GoogleCloudDataplexV1Trigger'
        field:
          description: >-
            Immutable. The unnested field (of type Date or Timestamp) that
            contains values which monotonically increase over time.If not
            specified, a data scan will run for all data in the table.
          type: string
    GoogleCloudDataplexV1Trigger:
      id: GoogleCloudDataplexV1Trigger
      description: DataScan scheduling and trigger settings.
      type: object
      properties:
        onDemand:
          description: The scan runs once via RunDataScan API.
          $ref: '#/components/schemas/GoogleCloudDataplexV1TriggerOnDemand'
        schedule:
          description: The scan is scheduled to run periodically.
          $ref: '#/components/schemas/GoogleCloudDataplexV1TriggerSchedule'
    GoogleCloudDataplexV1TriggerOnDemand:
      id: GoogleCloudDataplexV1TriggerOnDemand
      description: The scan runs once via RunDataScan API.
      type: object
      properties: {}
    GoogleCloudDataplexV1TriggerSchedule:
      id: GoogleCloudDataplexV1TriggerSchedule
      description: The scan is scheduled to run periodically.
      type: object
      properties:
        cron:
          description: >-
            Required. Cron (https://en.wikipedia.org/wiki/Cron) schedule for
            running scans periodically.To explicitly set a timezone in the cron
            tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or
            "TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid
            string from IANA time zone database (wikipedia
            (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)).
            For example, CRON_TZ=America/New_York 1 * * * *, or
            TZ=America/New_York 1 * * * *.This field is required for Schedule
            scans.
          type: string
    GoogleCloudDataplexV1DataScanExecutionStatus:
      id: GoogleCloudDataplexV1DataScanExecutionStatus
      description: Status of the data scan execution.
      type: object
      properties:
        latestJobStartTime:
          description: The time when the latest DataScanJob started.
          type: string
          format: google-datetime
        latestJobEndTime:
          description: The time when the latest DataScanJob ended.
          type: string
          format: google-datetime
        latestJobCreateTime:
          description: Optional. The time when the DataScanJob execution was created.
          type: string
          format: google-datetime
    GoogleCloudDataplexV1DataQualitySpec:
      id: GoogleCloudDataplexV1DataQualitySpec
      description: DataQualityScan related setting.
      type: object
      properties:
        rules:
          description: >-
            Required. The list of rules to evaluate against a data source. At
            least one rule is required.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityRule'
        samplingPercent:
          description: >-
            Optional. The percentage of the records to be selected from the
            dataset for DataScan. Value can range between 0.0 and 100.0 with up
            to 3 significant decimal digits. Sampling is not applied if
            sampling_percent is not specified, 0 or 100.
          type: number
          format: float
        rowFilter:
          description: >-
            Optional. A filter applied to all rows in a single DataScan job. The
            filter needs to be a valid SQL expression for a WHERE clause in
            BigQuery standard SQL syntax. Example: col1 >= 0 AND col2 < 10
          type: string
        postScanActions:
          description: Optional. Actions to take upon job completion.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DataQualitySpecPostScanActions
    GoogleCloudDataplexV1DataQualityRule:
      id: GoogleCloudDataplexV1DataQualityRule
      description: A rule captures data quality intent about a data source.
      type: object
      properties:
        rangeExpectation:
          description: >-
            Row-level rule which evaluates whether each column value lies
            between a specified range.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DataQualityRuleRangeExpectation
        nonNullExpectation:
          description: Row-level rule which evaluates whether each column value is null.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DataQualityRuleNonNullExpectation
        setExpectation:
          description: >-
            Row-level rule which evaluates whether each column value is
            contained by a specified set.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DataQualityRuleSetExpectation
        regexExpectation:
          description: >-
            Row-level rule which evaluates whether each column value matches a
            specified regex.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DataQualityRuleRegexExpectation
        uniquenessExpectation:
          description: Row-level rule which evaluates whether each column value is unique.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DataQualityRuleUniquenessExpectation
        statisticRangeExpectation:
          description: >-
            Aggregate rule which evaluates whether the column aggregate
            statistic lies between a specified range.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation
        rowConditionExpectation:
          description: >-
            Row-level rule which evaluates whether each row in a table passes
            the specified condition.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation
        tableConditionExpectation:
          description: >-
            Aggregate rule which evaluates whether the provided expression is
            true for a table.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation
        sqlAssertion:
          description: >-
            Aggregate rule which evaluates the number of rows returned for the
            provided statement. If any rows are returned, this rule fails.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DataQualityRuleSqlAssertion
        column:
          description: Optional. The unnested column which this rule is evaluated against.
          type: string
        ignoreNull:
          description: >-
            Optional. Rows with null values will automatically fail a rule,
            unless ignore_null is true. In that case, such null rows are
            trivially considered passing.This field is only valid for the
            following type of rules: RangeExpectation RegexExpectation
            SetExpectation UniquenessExpectation
          type: boolean
        dimension:
          description: >-
            Required. The dimension a rule belongs to. Results are also
            aggregated at the dimension level. Supported dimensions are
            "COMPLETENESS", "ACCURACY", "CONSISTENCY", "VALIDITY", "UNIQUENESS",
            "INTEGRITY"
          type: string
        threshold:
          description: >-
            Optional. The minimum ratio of passing_rows / total_rows required to
            pass this rule, with a range of 0.0, 1.0.0 indicates default value
            (i.e. 1.0).This field is only valid for row-level type rules.
          type: number
          format: double
        name:
          description: >-
            Optional. A mutable name for the rule. The name must contain only
            letters (a-z, A-Z), numbers (0-9), or hyphens (-). The maximum
            length is 63 characters. Must start with a letter. Must end with a
            number or a letter.
          type: string
        description:
          description: >-
            Optional. Description of the rule. The maximum length is 1,024
            characters.
          type: string
        suspended:
          description: Optional. Whether the Rule is active or suspended. Default is false.
          type: boolean
    GoogleCloudDataplexV1DataQualityRuleRangeExpectation:
      id: GoogleCloudDataplexV1DataQualityRuleRangeExpectation
      description: Evaluates whether each column value lies between a specified range.
      type: object
      properties:
        minValue:
          description: >-
            Optional. The minimum column value allowed for a row to pass this
            validation. At least one of min_value and max_value need to be
            provided.
          type: string
        maxValue:
          description: >-
            Optional. The maximum column value allowed for a row to pass this
            validation. At least one of min_value and max_value need to be
            provided.
          type: string
        strictMinEnabled:
          description: >-
            Optional. Whether each value needs to be strictly greater than ('>')
            the minimum, or if equality is allowed.Only relevant if a min_value
            has been defined. Default = false.
          type: boolean
        strictMaxEnabled:
          description: >-
            Optional. Whether each value needs to be strictly lesser than ('<')
            the maximum, or if equality is allowed.Only relevant if a max_value
            has been defined. Default = false.
          type: boolean
    GoogleCloudDataplexV1DataQualityRuleNonNullExpectation:
      id: GoogleCloudDataplexV1DataQualityRuleNonNullExpectation
      description: Evaluates whether each column value is null.
      type: object
      properties: {}
    GoogleCloudDataplexV1DataQualityRuleSetExpectation:
      id: GoogleCloudDataplexV1DataQualityRuleSetExpectation
      description: Evaluates whether each column value is contained by a specified set.
      type: object
      properties:
        values:
          description: Optional. Expected values for the column value.
          type: array
          items:
            type: string
    GoogleCloudDataplexV1DataQualityRuleRegexExpectation:
      id: GoogleCloudDataplexV1DataQualityRuleRegexExpectation
      description: Evaluates whether each column value matches a specified regex.
      type: object
      properties:
        regex:
          description: >-
            Optional. A regular expression the column value is expected to
            match.
          type: string
    GoogleCloudDataplexV1DataQualityRuleUniquenessExpectation:
      id: GoogleCloudDataplexV1DataQualityRuleUniquenessExpectation
      description: Evaluates whether the column has duplicates.
      type: object
      properties: {}
    GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation:
      id: GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation
      description: >-
        Evaluates whether the column aggregate statistic lies between a
        specified range.
      type: object
      properties:
        statistic:
          description: Optional. The aggregate metric to evaluate.
          type: string
          enumDescriptions:
            - Unspecified statistic type
            - Evaluate the column mean
            - Evaluate the column min
            - Evaluate the column max
          enum:
            - STATISTIC_UNDEFINED
            - MEAN
            - MIN
            - MAX
        minValue:
          description: >-
            Optional. The minimum column statistic value allowed for a row to
            pass this validation.At least one of min_value and max_value need to
            be provided.
          type: string
        maxValue:
          description: >-
            Optional. The maximum column statistic value allowed for a row to
            pass this validation.At least one of min_value and max_value need to
            be provided.
          type: string
        strictMinEnabled:
          description: >-
            Optional. Whether column statistic needs to be strictly greater than
            ('>') the minimum, or if equality is allowed.Only relevant if a
            min_value has been defined. Default = false.
          type: boolean
        strictMaxEnabled:
          description: >-
            Optional. Whether column statistic needs to be strictly lesser than
            ('<') the maximum, or if equality is allowed.Only relevant if a
            max_value has been defined. Default = false.
          type: boolean
    GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation:
      id: GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation
      description: >-
        Evaluates whether each row passes the specified condition.The SQL
        expression needs to use BigQuery standard SQL syntax and should produce
        a boolean value per row as the result.Example: col1 >= 0 AND col2 < 10
      type: object
      properties:
        sqlExpression:
          description: Optional. The SQL expression.
          type: string
    GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation:
      id: GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation
      description: >-
        Evaluates whether the provided expression is true.The SQL expression
        needs to use BigQuery standard SQL syntax and should produce a scalar
        boolean result.Example: MIN(col1) >= 0
      type: object
      properties:
        sqlExpression:
          description: Optional. The SQL expression.
          type: string
    GoogleCloudDataplexV1DataQualityRuleSqlAssertion:
      id: GoogleCloudDataplexV1DataQualityRuleSqlAssertion
      description: >-
        A SQL statement that is evaluated to return rows that match an invalid
        state. If any rows are are returned, this rule fails.The SQL statement
        must use BigQuery standard SQL syntax, and must not contain any
        semicolons.You can use the data reference parameter ${data()} to
        reference the source table with all of its precondition filters applied.
        Examples of precondition filters include row filters, incremental data
        filters, and sampling. For more information, see Data reference
        parameter
        (https://cloud.google.com/dataplex/docs/auto-data-quality-overview#data-reference-parameter).Example:
        SELECT * FROM ${data()} WHERE price < 0
      type: object
      properties:
        sqlStatement:
          description: Optional. The SQL statement.
          type: string
    GoogleCloudDataplexV1DataQualitySpecPostScanActions:
      id: GoogleCloudDataplexV1DataQualitySpecPostScanActions
      description: The configuration of post scan actions of DataQualityScan.
      type: object
      properties:
        bigqueryExport:
          description: >-
            Optional. If set, results will be exported to the provided BigQuery
            table.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DataQualitySpecPostScanActionsBigQueryExport
        notificationReport:
          description: >-
            Optional. If set, results will be sent to the provided notification
            receipts upon triggers.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DataQualitySpecPostScanActionsNotificationReport
    GoogleCloudDataplexV1DataQualitySpecPostScanActionsBigQueryExport:
      id: GoogleCloudDataplexV1DataQualitySpecPostScanActionsBigQueryExport
      description: The configuration of BigQuery export post scan action.
      type: object
      properties:
        resultsTable:
          description: >-
            Optional. The BigQuery table to export DataQualityScan results to.
            Format:
            //bigquery.googleapis.com/projects/PROJECT_ID/datasets/DATASET_ID/tables/TABLE_ID
          type: string
    GoogleCloudDataplexV1DataQualitySpecPostScanActionsNotificationReport:
      id: GoogleCloudDataplexV1DataQualitySpecPostScanActionsNotificationReport
      description: The configuration of notification report post scan action.
      type: object
      properties:
        recipients:
          description: Required. The recipients who will receive the notification report.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DataQualitySpecPostScanActionsRecipients
        scoreThresholdTrigger:
          description: Optional. If set, report will be sent when score threshold is met.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DataQualitySpecPostScanActionsScoreThresholdTrigger
        jobFailureTrigger:
          description: Optional. If set, report will be sent when a scan job fails.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DataQualitySpecPostScanActionsJobFailureTrigger
        jobEndTrigger:
          description: Optional. If set, report will be sent when a scan job ends.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DataQualitySpecPostScanActionsJobEndTrigger
    GoogleCloudDataplexV1DataQualitySpecPostScanActionsRecipients:
      id: GoogleCloudDataplexV1DataQualitySpecPostScanActionsRecipients
      description: >-
        The individuals or groups who are designated to receive notifications
        upon triggers.
      type: object
      properties:
        emails:
          description: >-
            Optional. The email recipients who will receive the DataQualityScan
            results report.
          type: array
          items:
            type: string
    GoogleCloudDataplexV1DataQualitySpecPostScanActionsScoreThresholdTrigger:
      id: GoogleCloudDataplexV1DataQualitySpecPostScanActionsScoreThresholdTrigger
      description: >-
        This trigger is triggered when the DQ score in the job result is less
        than a specified input score.
      type: object
      properties:
        scoreThreshold:
          description: Optional. The score range is in 0,100.
          type: number
          format: float
    GoogleCloudDataplexV1DataQualitySpecPostScanActionsJobFailureTrigger:
      id: GoogleCloudDataplexV1DataQualitySpecPostScanActionsJobFailureTrigger
      description: >-
        This trigger is triggered when the scan job itself fails, regardless of
        the result.
      type: object
      properties: {}
    GoogleCloudDataplexV1DataQualitySpecPostScanActionsJobEndTrigger:
      id: GoogleCloudDataplexV1DataQualitySpecPostScanActionsJobEndTrigger
      description: >-
        This trigger is triggered whenever a scan job run ends, regardless of
        the result.
      type: object
      properties: {}
    GoogleCloudDataplexV1DataProfileSpec:
      id: GoogleCloudDataplexV1DataProfileSpec
      description: DataProfileScan related setting.
      type: object
      properties:
        samplingPercent:
          description: >-
            Optional. The percentage of the records to be selected from the
            dataset for DataScan. Value can range between 0.0 and 100.0 with up
            to 3 significant decimal digits. Sampling is not applied if
            sampling_percent is not specified, 0 or 100.
          type: number
          format: float
        rowFilter:
          description: >-
            Optional. A filter applied to all rows in a single DataScan job. The
            filter needs to be a valid SQL expression for a WHERE clause in
            BigQuery standard SQL syntax. Example: col1 >= 0 AND col2 < 10
          type: string
        postScanActions:
          description: Optional. Actions to take upon job completion..
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DataProfileSpecPostScanActions
        includeFields:
          description: >-
            Optional. The fields to include in data profile.If not specified,
            all fields at the time of profile scan job execution are included,
            except for ones listed in exclude_fields.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DataProfileSpecSelectedFields
        excludeFields:
          description: >-
            Optional. The fields to exclude from data profile.If specified, the
            fields will be excluded from data profile, regardless of
            include_fields value.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DataProfileSpecSelectedFields
    GoogleCloudDataplexV1DataProfileSpecPostScanActions:
      id: GoogleCloudDataplexV1DataProfileSpecPostScanActions
      description: The configuration of post scan actions of DataProfileScan job.
      type: object
      properties:
        bigqueryExport:
          description: >-
            Optional. If set, results will be exported to the provided BigQuery
            table.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DataProfileSpecPostScanActionsBigQueryExport
    GoogleCloudDataplexV1DataProfileSpecPostScanActionsBigQueryExport:
      id: GoogleCloudDataplexV1DataProfileSpecPostScanActionsBigQueryExport
      description: The configuration of BigQuery export post scan action.
      type: object
      properties:
        resultsTable:
          description: >-
            Optional. The BigQuery table to export DataProfileScan results to.
            Format:
            //bigquery.googleapis.com/projects/PROJECT_ID/datasets/DATASET_ID/tables/TABLE_ID
          type: string
    GoogleCloudDataplexV1DataProfileSpecSelectedFields:
      id: GoogleCloudDataplexV1DataProfileSpecSelectedFields
      description: The specification for fields to include or exclude in data profile scan.
      type: object
      properties:
        fieldNames:
          description: >-
            Optional. Expected input is a list of fully qualified names of
            fields as in the schema.Only top-level field names for nested fields
            are supported. For instance, if 'x' is of nested field type, listing
            'x' is supported but 'x.y.z' is not supported. Here 'y' and 'y.z'
            are nested fields of 'x'.
          type: array
          items:
            type: string
    GoogleCloudDataplexV1DataQualityResult:
      id: GoogleCloudDataplexV1DataQualityResult
      description: The output of a DataQualityScan.
      type: object
      properties:
        passed:
          description: Overall data quality result -- true if all rules passed.
          type: boolean
        score:
          description: >-
            Output only. The overall data quality score.The score ranges between
            0, 100 (up to two decimal points).
          readOnly: true
          type: number
          format: float
        dimensions:
          description: >-
            A list of results at the dimension level.A dimension will have a
            corresponding DataQualityDimensionResult if and only if there is at
            least one rule with the 'dimension' field set to it.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDataplexV1DataQualityDimensionResult
        columns:
          description: >-
            Output only. A list of results at the column level.A column will
            have a corresponding DataQualityColumnResult if and only if there is
            at least one rule with the 'column' field set to it.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityColumnResult'
        rules:
          description: A list of all the rules in a job, and their results.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityRuleResult'
        rowCount:
          description: The count of rows processed.
          type: string
          format: int64
        scannedData:
          description: The data scanned for this result.
          $ref: '#/components/schemas/GoogleCloudDataplexV1ScannedData'
        postScanActionsResult:
          description: Output only. The result of post scan actions.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DataQualityResultPostScanActionsResult
    GoogleCloudDataplexV1DataQualityDimensionResult:
      id: GoogleCloudDataplexV1DataQualityDimensionResult
      description: >-
        DataQualityDimensionResult provides a more detailed, per-dimension view
        of the results.
      type: object
      properties:
        dimension:
          description: >-
            Output only. The dimension config specified in the DataQualitySpec,
            as is.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityDimension'
        passed:
          description: Whether the dimension passed or failed.
          type: boolean
        score:
          description: >-
            Output only. The dimension-level data quality score for this data
            scan job if and only if the 'dimension' field is set.The score
            ranges between 0, 100 (up to two decimal points).
          readOnly: true
          type: number
          format: float
    GoogleCloudDataplexV1DataQualityDimension:
      id: GoogleCloudDataplexV1DataQualityDimension
      description: >-
        A dimension captures data quality intent about a defined subset of the
        rules specified.
      type: object
      properties:
        name:
          description: >-
            The dimension name a rule belongs to. Supported dimensions are
            "COMPLETENESS", "ACCURACY", "CONSISTENCY", "VALIDITY", "UNIQUENESS",
            "INTEGRITY"
          type: string
    GoogleCloudDataplexV1DataQualityColumnResult:
      id: GoogleCloudDataplexV1DataQualityColumnResult
      description: >-
        DataQualityColumnResult provides a more detailed, per-column view of the
        results.
      type: object
      properties:
        column:
          description: Output only. The column specified in the DataQualityRule.
          readOnly: true
          type: string
        score:
          description: >-
            Output only. The column-level data quality score for this data scan
            job if and only if the 'column' field is set.The score ranges
            between between 0, 100 (up to two decimal points).
          readOnly: true
          type: number
          format: float
    GoogleCloudDataplexV1DataQualityRuleResult:
      id: GoogleCloudDataplexV1DataQualityRuleResult
      description: >-
        DataQualityRuleResult provides a more detailed, per-rule view of the
        results.
      type: object
      properties:
        rule:
          description: The rule specified in the DataQualitySpec, as is.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityRule'
        passed:
          description: Whether the rule passed or failed.
          type: boolean
        evaluatedCount:
          description: >-
            The number of rows a rule was evaluated against.This field is only
            valid for row-level type rules.Evaluated count can be configured to
            either include all rows (default) - with null rows automatically
            failing rule evaluation, or exclude null rows from the
            evaluated_count, by setting ignore_nulls = true.
          type: string
          format: int64
        passedCount:
          description: >-
            The number of rows which passed a rule evaluation.This field is only
            valid for row-level type rules.
          type: string
          format: int64
        nullCount:
          description: The number of rows with null values in the specified column.
          type: string
          format: int64
        passRatio:
          description: >-
            The ratio of passed_count / evaluated_count.This field is only valid
            for row-level type rules.
          type: number
          format: double
        failingRowsQuery:
          description: >-
            The query to find rows that did not pass this rule.This field is
            only valid for row-level type rules.
          type: string
        assertionRowCount:
          description: >-
            Output only. The number of rows returned by the SQL statement in a
            SQL assertion rule.This field is only valid for SQL assertion rules.
          readOnly: true
          type: string
          format: int64
    GoogleCloudDataplexV1ScannedData:
      id: GoogleCloudDataplexV1ScannedData
      description: The data scanned during processing (e.g. in incremental DataScan)
      type: object
      properties:
        incrementalField:
          description: The range denoted by values of an incremental field
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1ScannedDataIncrementalField
    GoogleCloudDataplexV1ScannedDataIncrementalField:
      id: GoogleCloudDataplexV1ScannedDataIncrementalField
      description: A data range denoted by a pair of start/end values of a field.
      type: object
      properties:
        field:
          description: >-
            The field that contains values which monotonically increases over
            time (e.g. a timestamp column).
          type: string
        start:
          description: Value that marks the start of the range.
          type: string
        end:
          description: Value that marks the end of the range.
          type: string
    GoogleCloudDataplexV1DataQualityResultPostScanActionsResult:
      id: GoogleCloudDataplexV1DataQualityResultPostScanActionsResult
      description: The result of post scan actions of DataQualityScan job.
      type: object
      properties:
        bigqueryExportResult:
          description: Output only. The result of BigQuery export post scan action.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DataQualityResultPostScanActionsResultBigQueryExportResult
    GoogleCloudDataplexV1DataQualityResultPostScanActionsResultBigQueryExportResult:
      id: >-
        GoogleCloudDataplexV1DataQualityResultPostScanActionsResultBigQueryExportResult
      description: The result of BigQuery export post scan action.
      type: object
      properties:
        state:
          description: Output only. Execution state for the BigQuery exporting.
          readOnly: true
          type: string
          enumDescriptions:
            - The exporting state is unspecified.
            - The exporting completed successfully.
            - The exporting is no longer running due to an error.
            - >-
              The exporting is skipped due to no valid scan result to export
              (usually caused by scan failed).
          enum:
            - STATE_UNSPECIFIED
            - SUCCEEDED
            - FAILED
            - SKIPPED
        message:
          description: Output only. Additional information about the BigQuery exporting.
          readOnly: true
          type: string
    GoogleCloudDataplexV1DataProfileResult:
      id: GoogleCloudDataplexV1DataProfileResult
      description: >-
        DataProfileResult defines the output of DataProfileScan. Each field of
        the table will have field type specific profile result.
      type: object
      properties:
        rowCount:
          description: The count of rows scanned.
          type: string
          format: int64
        profile:
          description: The profile information per field.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileResultProfile'
        scannedData:
          description: The data scanned for this result.
          $ref: '#/components/schemas/GoogleCloudDataplexV1ScannedData'
        postScanActionsResult:
          description: Output only. The result of post scan actions.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DataProfileResultPostScanActionsResult
    GoogleCloudDataplexV1DataProfileResultProfile:
      id: GoogleCloudDataplexV1DataProfileResultProfile
      description: Contains name, type, mode and field type specific profile information.
      type: object
      properties:
        fields:
          description: >-
            List of fields with structural and profile information for each
            field.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDataplexV1DataProfileResultProfileField
    GoogleCloudDataplexV1DataProfileResultProfileField:
      id: GoogleCloudDataplexV1DataProfileResultProfileField
      description: A field within a table.
      type: object
      properties:
        name:
          description: The name of the field.
          type: string
        type:
          description: >-
            The data type retrieved from the schema of the data source. For
            instance, for a BigQuery native table, it is the BigQuery Table
            Schema
            (https://cloud.google.com/bigquery/docs/reference/rest/v2/tables#tablefieldschema).
            For a Dataplex Entity, it is the Entity Schema
            (https://cloud.google.com/dataplex/docs/reference/rpc/google.cloud.dataplex.v1#type_3).
          type: string
        mode:
          description: >-
            The mode of the field. Possible values include: REQUIRED, if it is a
            required field. NULLABLE, if it is an optional field. REPEATED, if
            it is a repeated field.
          type: string
        profile:
          description: Profile information for the corresponding field.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfo
    GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfo:
      id: GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfo
      description: The profile information for each field type.
      type: object
      properties:
        nullRatio:
          description: Ratio of rows with null value against total scanned rows.
          type: number
          format: double
        distinctRatio:
          description: >-
            Ratio of rows with distinct values against total scanned rows. Not
            available for complex non-groupable field type, including RECORD,
            ARRAY, GEOGRAPHY, and JSON, as well as fields with REPEATABLE mode.
          type: number
          format: double
        topNValues:
          description: >-
            The list of top N non-null values, frequency and ratio with which
            they occur in the scanned data. N is 10 or equal to the number of
            distinct values in the field, whichever is smaller. Not available
            for complex non-groupable field type, including RECORD, ARRAY,
            GEOGRAPHY, and JSON, as well as fields with REPEATABLE mode.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValue
        stringProfile:
          description: String type field information.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfo
        integerProfile:
          description: Integer type field information.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfo
        doubleProfile:
          description: Double type field information.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo
    GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValue:
      id: GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValue
      description: Top N non-null values in the scanned data.
      type: object
      properties:
        value:
          description: String value of a top N non-null value.
          type: string
        count:
          description: Count of the corresponding value in the scanned data.
          type: string
          format: int64
        ratio:
          description: >-
            Ratio of the corresponding value in the field against the total
            number of rows in the scanned data.
          type: number
          format: double
    GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfo:
      id: >-
        GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfo
      description: The profile information for a string type field.
      type: object
      properties:
        minLength:
          description: Minimum length of non-null values in the scanned data.
          type: string
          format: int64
        maxLength:
          description: Maximum length of non-null values in the scanned data.
          type: string
          format: int64
        averageLength:
          description: Average length of non-null values in the scanned data.
          type: number
          format: double
    GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfo:
      id: >-
        GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfo
      description: The profile information for an integer type field.
      type: object
      properties:
        average:
          description: >-
            Average of non-null values in the scanned data. NaN, if the field
            has a NaN.
          type: number
          format: double
        standardDeviation:
          description: >-
            Standard deviation of non-null values in the scanned data. NaN, if
            the field has a NaN.
          type: number
          format: double
        min:
          description: >-
            Minimum of non-null values in the scanned data. NaN, if the field
            has a NaN.
          type: string
          format: int64
        quartiles:
          description: >-
            A quartile divides the number of data points into four parts, or
            quarters, of more-or-less equal size. Three main quartiles used are:
            The first quartile (Q1) splits off the lowest 25% of data from the
            highest 75%. It is also known as the lower or 25th empirical
            quartile, as 25% of the data is below this point. The second
            quartile (Q2) is the median of a data set. So, 50% of the data lies
            below this point. The third quartile (Q3) splits off the highest 25%
            of data from the lowest 75%. It is known as the upper or 75th
            empirical quartile, as 75% of the data lies below this point. Here,
            the quartiles is provided as an ordered list of approximate quartile
            values for the scanned data, occurring in order Q1, median, Q3.
          type: array
          items:
            type: string
            format: int64
        max:
          description: >-
            Maximum of non-null values in the scanned data. NaN, if the field
            has a NaN.
          type: string
          format: int64
    GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo:
      id: >-
        GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo
      description: The profile information for a double type field.
      type: object
      properties:
        average:
          description: >-
            Average of non-null values in the scanned data. NaN, if the field
            has a NaN.
          type: number
          format: double
        standardDeviation:
          description: >-
            Standard deviation of non-null values in the scanned data. NaN, if
            the field has a NaN.
          type: number
          format: double
        min:
          description: >-
            Minimum of non-null values in the scanned data. NaN, if the field
            has a NaN.
          type: number
          format: double
        quartiles:
          description: >-
            A quartile divides the number of data points into four parts, or
            quarters, of more-or-less equal size. Three main quartiles used are:
            The first quartile (Q1) splits off the lowest 25% of data from the
            highest 75%. It is also known as the lower or 25th empirical
            quartile, as 25% of the data is below this point. The second
            quartile (Q2) is the median of a data set. So, 50% of the data lies
            below this point. The third quartile (Q3) splits off the highest 25%
            of data from the lowest 75%. It is known as the upper or 75th
            empirical quartile, as 75% of the data lies below this point. Here,
            the quartiles is provided as an ordered list of quartile values for
            the scanned data, occurring in order Q1, median, Q3.
          type: array
          items:
            type: number
            format: double
        max:
          description: >-
            Maximum of non-null values in the scanned data. NaN, if the field
            has a NaN.
          type: number
          format: double
    GoogleCloudDataplexV1DataProfileResultPostScanActionsResult:
      id: GoogleCloudDataplexV1DataProfileResultPostScanActionsResult
      description: The result of post scan actions of DataProfileScan job.
      type: object
      properties:
        bigqueryExportResult:
          description: Output only. The result of BigQuery export post scan action.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DataProfileResultPostScanActionsResultBigQueryExportResult
    GoogleCloudDataplexV1DataProfileResultPostScanActionsResultBigQueryExportResult:
      id: >-
        GoogleCloudDataplexV1DataProfileResultPostScanActionsResultBigQueryExportResult
      description: The result of BigQuery export post scan action.
      type: object
      properties:
        state:
          description: Output only. Execution state for the BigQuery exporting.
          readOnly: true
          type: string
          enumDescriptions:
            - The exporting state is unspecified.
            - The exporting completed successfully.
            - The exporting is no longer running due to an error.
            - >-
              The exporting is skipped due to no valid scan result to export
              (usually caused by scan failed).
          enum:
            - STATE_UNSPECIFIED
            - SUCCEEDED
            - FAILED
            - SKIPPED
        message:
          description: Output only. Additional information about the BigQuery exporting.
          readOnly: true
          type: string
    GoogleCloudDataplexV1ListDataScansResponse:
      id: GoogleCloudDataplexV1ListDataScansResponse
      description: List dataScans response.
      type: object
      properties:
        dataScans:
          description: DataScans (BASIC view only) under the given parent location.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1DataScan'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    GoogleCloudDataplexV1RunDataScanRequest:
      id: GoogleCloudDataplexV1RunDataScanRequest
      description: Run DataScan Request
      type: object
      properties: {}
    GoogleCloudDataplexV1RunDataScanResponse:
      id: GoogleCloudDataplexV1RunDataScanResponse
      description: Run DataScan Response.
      type: object
      properties:
        job:
          description: DataScanJob created by RunDataScan request.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataScanJob'
    GoogleCloudDataplexV1DataScanJob:
      id: GoogleCloudDataplexV1DataScanJob
      description: A DataScanJob represents an instance of DataScan execution.
      type: object
      properties:
        name:
          description: >-
            Output only. The relative resource name of the DataScanJob, of the
            form:
            projects/{project}/locations/{location_id}/dataScans/{datascan_id}/jobs/{job_id},
            where project refers to a project_id or project_number and
            location_id refers to a GCP region.
          readOnly: true
          type: string
        uid:
          description: >-
            Output only. System generated globally unique ID for the
            DataScanJob.
          readOnly: true
          type: string
        createTime:
          description: Output only. The time when the DataScanJob was created.
          readOnly: true
          type: string
          format: google-datetime
        startTime:
          description: Output only. The time when the DataScanJob was started.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time when the DataScanJob ended.
          readOnly: true
          type: string
          format: google-datetime
        state:
          description: Output only. Execution state for the DataScanJob.
          readOnly: true
          type: string
          enumDescriptions:
            - The DataScanJob state is unspecified.
            - The DataScanJob is running.
            - The DataScanJob is canceling.
            - The DataScanJob cancellation was successful.
            - The DataScanJob completed successfully.
            - The DataScanJob is no longer running due to an error.
            - The DataScanJob has been created but not started to run yet.
          enum:
            - STATE_UNSPECIFIED
            - RUNNING
            - CANCELING
            - CANCELLED
            - SUCCEEDED
            - FAILED
            - PENDING
        message:
          description: Output only. Additional information about the current state.
          readOnly: true
          type: string
        type:
          description: Output only. The type of the parent DataScan.
          readOnly: true
          type: string
          enumDescriptions:
            - The DataScan type is unspecified.
            - Data Quality scan.
            - Data Profile scan.
          enum:
            - DATA_SCAN_TYPE_UNSPECIFIED
            - DATA_QUALITY
            - DATA_PROFILE
        dataQualitySpec:
          description: Output only. DataQualityScan related setting.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualitySpec'
        dataProfileSpec:
          description: Output only. DataProfileScan related setting.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileSpec'
        dataQualityResult:
          description: Output only. The result of the data quality scan.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityResult'
        dataProfileResult:
          description: Output only. The result of the data profile scan.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileResult'
    GoogleCloudDataplexV1ListDataScanJobsResponse:
      id: GoogleCloudDataplexV1ListDataScanJobsResponse
      description: List DataScanJobs response.
      type: object
      properties:
        dataScanJobs:
          description: DataScanJobs (BASIC view only) under a given dataScan.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1DataScanJob'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    GoogleCloudDataplexV1GenerateDataQualityRulesRequest:
      id: GoogleCloudDataplexV1GenerateDataQualityRulesRequest
      description: Request details for generating data quality rule recommendations.
      type: object
      properties: {}
    GoogleCloudDataplexV1GenerateDataQualityRulesResponse:
      id: GoogleCloudDataplexV1GenerateDataQualityRulesResponse
      description: Response details for data quality rule recommendations.
      type: object
      properties:
        rule:
          description: >-
            The data quality rules that Dataplex generates based on the results
            of a data profiling scan.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityRule'
    GoogleCloudDataplexV1Entity:
      id: GoogleCloudDataplexV1Entity
      description: Represents tables and fileset metadata contained within a zone.
      type: object
      properties:
        name:
          description: >-
            Output only. The resource name of the entity, of the form:
            projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{id}.
          readOnly: true
          type: string
        displayName:
          description: >-
            Optional. Display name must be shorter than or equal to 256
            characters.
          type: string
        description:
          description: >-
            Optional. User friendly longer description text. Must be shorter
            than or equal to 1024 characters.
          type: string
        createTime:
          description: Output only. The time when the entity was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time when the entity was last updated.
          readOnly: true
          type: string
          format: google-datetime
        id:
          description: >-
            Required. A user-provided entity ID. It is mutable, and will be used
            as the published table name. Specifying a new ID in an update entity
            request will override the existing value. The ID must contain only
            letters (a-z, A-Z), numbers (0-9), and underscores, and consist of
            256 or fewer characters.
          type: string
        etag:
          description: >-
            Optional. The etag associated with the entity, which can be
            retrieved with a GetEntity request. Required for update and delete
            requests.
          type: string
        type:
          description: Required. Immutable. The type of entity.
          type: string
          enumDescriptions:
            - Type unspecified.
            - Structured and semi-structured data.
            - Unstructured data.
          enum:
            - TYPE_UNSPECIFIED
            - TABLE
            - FILESET
        asset:
          description: >-
            Required. Immutable. The ID of the asset associated with the storage
            location containing the entity data. The entity must be with in the
            same zone with the asset.
          type: string
        dataPath:
          description: >-
            Required. Immutable. The storage path of the entity data. For Cloud
            Storage data, this is the fully-qualified path to the entity, such
            as gs://bucket/path/to/data. For BigQuery data, this is the name of
            the table resource, such as
            projects/project_id/datasets/dataset_id/tables/table_id.
          type: string
        dataPathPattern:
          description: >-
            Optional. The set of items within the data path constituting the
            data in the entity, represented as a glob path. Example:
            gs://bucket/path/to/data/**/*.csv.
          type: string
        catalogEntry:
          description: Output only. The name of the associated Data Catalog entry.
          readOnly: true
          type: string
        system:
          description: >-
            Required. Immutable. Identifies the storage system of the entity
            data.
          type: string
          enumDescriptions:
            - Storage system unspecified.
            - The entity data is contained within a Cloud Storage bucket.
            - The entity data is contained within a BigQuery dataset.
          enum:
            - STORAGE_SYSTEM_UNSPECIFIED
            - CLOUD_STORAGE
            - BIGQUERY
        format:
          description: >-
            Required. Identifies the storage format of the entity data. It does
            not apply to entities with data stored in BigQuery.
          $ref: '#/components/schemas/GoogleCloudDataplexV1StorageFormat'
        compatibility:
          description: Output only. Metadata stores that the entity is compatible with.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1EntityCompatibilityStatus'
        access:
          description: >-
            Output only. Identifies the access mechanism to the entity. Not user
            settable.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1StorageAccess'
        uid:
          description: >-
            Output only. System generated unique ID for the Entity. This ID will
            be different if the Entity is deleted and re-created with the same
            name.
          readOnly: true
          type: string
        schema:
          description: >-
            Required. The description of the data structure and layout. The
            schema is not included in list responses. It is only included in
            SCHEMA and FULL entity views of a GetEntity response.
          $ref: '#/components/schemas/GoogleCloudDataplexV1Schema'
    GoogleCloudDataplexV1StorageFormat:
      id: GoogleCloudDataplexV1StorageFormat
      description: Describes the format of the data within its storage location.
      type: object
      properties:
        format:
          description: >-
            Output only. The data format associated with the stored data, which
            represents content type values. The value is inferred from mime
            type.
          readOnly: true
          type: string
          enumDescriptions:
            - Format unspecified.
            - Parquet-formatted structured data.
            - Avro-formatted structured data.
            - Orc-formatted structured data.
            - Csv-formatted semi-structured data.
            - Json-formatted semi-structured data.
            - Image data formats (such as jpg and png).
            - Audio data formats (such as mp3, and wav).
            - Video data formats (such as mp4 and mpg).
            - Textual data formats (such as txt and xml).
            - TensorFlow record format.
            - Data that doesn't match a specific format.
            - Data of an unknown format.
          enum:
            - FORMAT_UNSPECIFIED
            - PARQUET
            - AVRO
            - ORC
            - CSV
            - JSON
            - IMAGE
            - AUDIO
            - VIDEO
            - TEXT
            - TFRECORD
            - OTHER
            - UNKNOWN
        compressionFormat:
          description: >-
            Optional. The compression type associated with the stored data. If
            unspecified, the data is uncompressed.
          type: string
          enumDescriptions:
            - CompressionFormat unspecified. Implies uncompressed data.
            - GZip compressed set of files.
            - BZip2 compressed set of files.
          enum:
            - COMPRESSION_FORMAT_UNSPECIFIED
            - GZIP
            - BZIP2
        mimeType:
          description: >-
            Required. The mime type descriptor for the data. Must match the
            pattern {type}/{subtype}. Supported values: application/x-parquet
            application/x-avro application/x-orc application/x-tfrecord
            application/x-parquet+iceberg application/x-avro+iceberg
            application/x-orc+iceberg application/json application/{subtypes}
            text/csv text/ image/{image subtype} video/{video subtype}
            audio/{audio subtype}
          type: string
        csv:
          description: Optional. Additional information about CSV formatted data.
          $ref: '#/components/schemas/GoogleCloudDataplexV1StorageFormatCsvOptions'
        json:
          description: Optional. Additional information about CSV formatted data.
          $ref: '#/components/schemas/GoogleCloudDataplexV1StorageFormatJsonOptions'
        iceberg:
          description: Optional. Additional information about iceberg tables.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1StorageFormatIcebergOptions
    GoogleCloudDataplexV1StorageFormatCsvOptions:
      id: GoogleCloudDataplexV1StorageFormatCsvOptions
      description: Describes CSV and similar semi-structured data formats.
      type: object
      properties:
        encoding:
          description: >-
            Optional. The character encoding of the data. Accepts "US-ASCII",
            "UTF-8", and "ISO-8859-1". Defaults to UTF-8 if unspecified.
          type: string
        headerRows:
          description: >-
            Optional. The number of rows to interpret as header rows that should
            be skipped when reading data rows. Defaults to 0.
          type: integer
          format: int32
        delimiter:
          description: Optional. The delimiter used to separate values. Defaults to ','.
          type: string
        quote:
          description: >-
            Optional. The character used to quote column values. Accepts '"'
            (double quotation mark) or ''' (single quotation mark). Defaults to
            '"' (double quotation mark) if unspecified.
          type: string
    GoogleCloudDataplexV1StorageFormatJsonOptions:
      id: GoogleCloudDataplexV1StorageFormatJsonOptions
      description: Describes JSON data format.
      type: object
      properties:
        encoding:
          description: >-
            Optional. The character encoding of the data. Accepts "US-ASCII",
            "UTF-8" and "ISO-8859-1". Defaults to UTF-8 if not specified.
          type: string
    GoogleCloudDataplexV1StorageFormatIcebergOptions:
      id: GoogleCloudDataplexV1StorageFormatIcebergOptions
      description: Describes Iceberg data format.
      type: object
      properties:
        metadataLocation:
          description: >-
            Optional. The location of where the iceberg metadata is present,
            must be within the table path
          type: string
    GoogleCloudDataplexV1EntityCompatibilityStatus:
      id: GoogleCloudDataplexV1EntityCompatibilityStatus
      description: Provides compatibility information for various metadata stores.
      type: object
      properties:
        hiveMetastore:
          description: Output only. Whether this entity is compatible with Hive Metastore.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility
        bigquery:
          description: Output only. Whether this entity is compatible with BigQuery.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility
    GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility:
      id: GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility
      description: Provides compatibility information for a specific metadata store.
      type: object
      properties:
        compatible:
          description: >-
            Output only. Whether the entity is compatible and can be represented
            in the metadata store.
          readOnly: true
          type: boolean
        reason:
          description: >-
            Output only. Provides additional detail if the entity is
            incompatible with the metadata store.
          readOnly: true
          type: string
    GoogleCloudDataplexV1StorageAccess:
      id: GoogleCloudDataplexV1StorageAccess
      description: Describes the access mechanism of the data within its storage location.
      type: object
      properties:
        read:
          description: >-
            Output only. Describes the read access mechanism of the data. Not
            user settable.
          readOnly: true
          type: string
          enumDescriptions:
            - Access mode unspecified.
            - Default. Data is accessed directly using storage APIs.
            - Data is accessed through a managed interface using BigQuery APIs.
          enum:
            - ACCESS_MODE_UNSPECIFIED
            - DIRECT
            - MANAGED
    GoogleCloudDataplexV1Schema:
      id: GoogleCloudDataplexV1Schema
      description: Schema information describing the structure and layout of the data.
      type: object
      properties:
        userManaged:
          description: >-
            Required. Set to true if user-managed or false if managed by
            Dataplex. The default is false (managed by Dataplex). Set to falseto
            enable Dataplex discovery to update the schema. including new data
            discovery, schema inference, and schema evolution. Users retain the
            ability to input and edit the schema. Dataplex treats schema input
            by the user as though produced by a previous Dataplex discovery
            operation, and it will evolve the schema and take action based on
            that treatment. Set to true to fully manage the entity schema. This
            setting guarantees that Dataplex will not change schema fields.
          type: boolean
        fields:
          description: >-
            Optional. The sequence of fields describing data in table entities.
            Note: BigQuery SchemaFields are immutable.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1SchemaSchemaField'
        partitionFields:
          description: >-
            Optional. The sequence of fields describing the partition structure
            in entities. If this field is empty, there are no partitions within
            the data.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1SchemaPartitionField'
        partitionStyle:
          description: >-
            Optional. The structure of paths containing partition data within
            the entity.
          type: string
          enumDescriptions:
            - PartitionStyle unspecified
            - >-
              Partitions are hive-compatible. Examples:
              gs://bucket/path/to/table/dt=2019-10-31/lang=en,
              gs://bucket/path/to/table/dt=2019-10-31/lang=en/late.
          enum:
            - PARTITION_STYLE_UNSPECIFIED
            - HIVE_COMPATIBLE
    GoogleCloudDataplexV1SchemaSchemaField:
      id: GoogleCloudDataplexV1SchemaSchemaField
      description: Represents a column field within a table schema.
      type: object
      properties:
        name:
          description: >-
            Required. The name of the field. Must contain only letters, numbers
            and underscores, with a maximum length of 767 characters, and must
            begin with a letter or underscore.
          type: string
        description:
          description: >-
            Optional. User friendly field description. Must be less than or
            equal to 1024 characters.
          type: string
        type:
          description: Required. The type of field.
          type: string
          enumDescriptions:
            - SchemaType unspecified.
            - Boolean field.
            - Single byte numeric field.
            - 16-bit numeric field.
            - 32-bit numeric field.
            - 64-bit numeric field.
            - Floating point numeric field.
            - Double precision numeric field.
            - Real value numeric field.
            - Sequence of characters field.
            - Sequence of bytes field.
            - Date and time field.
            - Date field.
            - Time field.
            - >-
              Structured field. Nested fields that define the structure of the
              map. If all nested fields are nullable, this field represents a
              union.
            - Null field that does not have values.
          enum:
            - TYPE_UNSPECIFIED
            - BOOLEAN
            - BYTE
            - INT16
            - INT32
            - INT64
            - FLOAT
            - DOUBLE
            - DECIMAL
            - STRING
            - BINARY
            - TIMESTAMP
            - DATE
            - TIME
            - RECORD
            - 'NULL'
        mode:
          description: Required. Additional field semantics.
          type: string
          enumDescriptions:
            - Mode unspecified.
            - The field has required semantics.
            - The field has optional semantics, and may be null.
            - >-
              The field has repeated (0 or more) semantics, and is a list of
              values.
          enum:
            - MODE_UNSPECIFIED
            - REQUIRED
            - NULLABLE
            - REPEATED
        fields:
          description: Optional. Any nested field for complex types.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1SchemaSchemaField'
    GoogleCloudDataplexV1SchemaPartitionField:
      id: GoogleCloudDataplexV1SchemaPartitionField
      description: >-
        Represents a key field within the entity's partition structure. You
        could have up to 20 partition fields, but only the first 10 partitions
        have the filtering ability due to performance consideration. Note:
        Partition fields are immutable.
      type: object
      properties:
        name:
          description: >-
            Required. Partition field name must consist of letters, numbers, and
            underscores only, with a maximum of length of 256 characters, and
            must begin with a letter or underscore..
          type: string
        type:
          description: Required. Immutable. The type of field.
          type: string
          enumDescriptions:
            - SchemaType unspecified.
            - Boolean field.
            - Single byte numeric field.
            - 16-bit numeric field.
            - 32-bit numeric field.
            - 64-bit numeric field.
            - Floating point numeric field.
            - Double precision numeric field.
            - Real value numeric field.
            - Sequence of characters field.
            - Sequence of bytes field.
            - Date and time field.
            - Date field.
            - Time field.
            - >-
              Structured field. Nested fields that define the structure of the
              map. If all nested fields are nullable, this field represents a
              union.
            - Null field that does not have values.
          enum:
            - TYPE_UNSPECIFIED
            - BOOLEAN
            - BYTE
            - INT16
            - INT32
            - INT64
            - FLOAT
            - DOUBLE
            - DECIMAL
            - STRING
            - BINARY
            - TIMESTAMP
            - DATE
            - TIME
            - RECORD
            - 'NULL'
    GoogleCloudDataplexV1ListEntitiesResponse:
      id: GoogleCloudDataplexV1ListEntitiesResponse
      description: List metadata entities response.
      type: object
      properties:
        entities:
          description: Entities in the specified parent zone.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Entity'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            remaining results in the list.
          type: string
    GoogleCloudDataplexV1Partition:
      id: GoogleCloudDataplexV1Partition
      description: Represents partition metadata contained within entity instances.
      type: object
      properties:
        name:
          description: >-
            Output only. Partition values used in the HTTP URL must be double
            encoded. For example, url_encode(url_encode(value)) can be used to
            encode "US:CA/CA#Sunnyvale so that the request URL ends with
            "/partitions/US%253ACA/CA%2523Sunnyvale". The name field in the
            response retains the encoded format.
          readOnly: true
          type: string
        values:
          description: >-
            Required. Immutable. The set of values representing the partition,
            which correspond to the partition schema defined in the parent
            entity.
          type: array
          items:
            type: string
        location:
          description: >-
            Required. Immutable. The location of the entity data within the
            partition, for example,
            gs://bucket/path/to/entity/key1=value1/key2=value2. Or
            projects//datasets//tables/
          type: string
        etag:
          description: Optional. The etag for this partition.
          deprecated: true
          type: string
    GoogleCloudDataplexV1ListPartitionsResponse:
      id: GoogleCloudDataplexV1ListPartitionsResponse
      description: List metadata partitions response.
      type: object
      properties:
        partitions:
          description: Partitions under the specified parent entity.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Partition'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            remaining results in the list.
          type: string
    GoogleCloudDataplexV1Lake:
      id: GoogleCloudDataplexV1Lake
      description: >-
        A lake is a centralized repository for managing enterprise data across
        the organization distributed across many cloud projects, and stored in a
        variety of storage services such as Google Cloud Storage and BigQuery.
        The resources attached to a lake are referred to as managed resources.
        Data within these managed resources can be structured or unstructured. A
        lake provides data admins with tools to organize, secure and manage
        their data at scale, and provides data scientists and data engineers an
        integrated experience to easily search, discover, analyze and transform
        data and associated metadata.
      type: object
      properties:
        name:
          description: >-
            Output only. The relative resource name of the lake, of the form:
            projects/{project_number}/locations/{location_id}/lakes/{lake_id}.
          readOnly: true
          type: string
        displayName:
          description: Optional. User friendly display name.
          type: string
        uid:
          description: >-
            Output only. System generated globally unique ID for the lake. This
            ID will be different if the lake is deleted and re-created with the
            same name.
          readOnly: true
          type: string
        createTime:
          description: Output only. The time when the lake was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time when the lake was last updated.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: Optional. User-defined labels for the lake.
          type: object
          additionalProperties:
            type: string
        description:
          description: Optional. Description of the lake.
          type: string
        state:
          description: Output only. Current state of the lake.
          readOnly: true
          type: string
          enumDescriptions:
            - State is not specified.
            - Resource is active, i.e., ready to use.
            - Resource is under creation.
            - Resource is under deletion.
            - Resource is active but has unresolved actions.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - DELETING
            - ACTION_REQUIRED
        serviceAccount:
          description: >-
            Output only. Service account associated with this lake. This service
            account must be authorized to access or operate on resources managed
            by the lake.
          readOnly: true
          type: string
        metastore:
          description: >-
            Optional. Settings to manage lake and Dataproc Metastore service
            instance association.
          $ref: '#/components/schemas/GoogleCloudDataplexV1LakeMetastore'
        assetStatus:
          description: Output only. Aggregated status of the underlying assets of the lake.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetStatus'
        metastoreStatus:
          description: Output only. Metastore status of the lake.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1LakeMetastoreStatus'
    GoogleCloudDataplexV1LakeMetastore:
      id: GoogleCloudDataplexV1LakeMetastore
      description: Settings to manage association of Dataproc Metastore with a lake.
      type: object
      properties:
        service:
          description: >-
            Optional. A relative reference to the Dataproc Metastore
            (https://cloud.google.com/dataproc-metastore/docs) service
            associated with the lake:
            projects/{project_id}/locations/{location_id}/services/{service_id}
          type: string
    GoogleCloudDataplexV1AssetStatus:
      id: GoogleCloudDataplexV1AssetStatus
      description: Aggregated status of the underlying assets of a lake or zone.
      type: object
      properties:
        updateTime:
          description: Last update time of the status.
          type: string
          format: google-datetime
        activeAssets:
          description: Number of active assets.
          type: integer
          format: int32
        securityPolicyApplyingAssets:
          description: >-
            Number of assets that are in process of updating the security policy
            on attached resources.
          type: integer
          format: int32
    GoogleCloudDataplexV1LakeMetastoreStatus:
      id: GoogleCloudDataplexV1LakeMetastoreStatus
      description: Status of Lake and Dataproc Metastore service instance association.
      type: object
      properties:
        state:
          description: Current state of association.
          type: string
          enumDescriptions:
            - Unspecified.
            - A Metastore service instance is not associated with the lake.
            - A Metastore service instance is attached to the lake.
            - Attach/detach is in progress.
            - Attach/detach could not be done due to errors.
          enum:
            - STATE_UNSPECIFIED
            - NONE
            - READY
            - UPDATING
            - ERROR
        message:
          description: Additional information about the current status.
          type: string
        updateTime:
          description: Last update time of the metastore status of the lake.
          type: string
          format: google-datetime
        endpoint:
          description: The URI of the endpoint used to access the Metastore service.
          type: string
    GoogleCloudDataplexV1ListLakesResponse:
      id: GoogleCloudDataplexV1ListLakesResponse
      description: List lakes response.
      type: object
      properties:
        lakes:
          description: Lakes under the given parent location.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Lake'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
        unreachableLocations:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    GoogleCloudDataplexV1ListActionsResponse:
      id: GoogleCloudDataplexV1ListActionsResponse
      description: List actions response.
      type: object
      properties:
        actions:
          description: Actions under the given parent lake/zone/asset.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Action'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    GoogleCloudDataplexV1Action:
      id: GoogleCloudDataplexV1Action
      description: >-
        Action represents an issue requiring administrator action for
        resolution.
      type: object
      properties:
        category:
          description: The category of issue associated with the action.
          type: string
          enumDescriptions:
            - Unspecified category.
            - Resource management related issues.
            - Security policy related issues.
            - Data and discovery related issues.
          enum:
            - CATEGORY_UNSPECIFIED
            - RESOURCE_MANAGEMENT
            - SECURITY_POLICY
            - DATA_DISCOVERY
        issue:
          description: Detailed description of the issue requiring action.
          type: string
        detectTime:
          description: The time that the issue was detected.
          type: string
          format: google-datetime
        name:
          description: >-
            Output only. The relative resource name of the action, of the form:
            projects/{project}/locations/{location}/lakes/{lake}/actions/{action}
            projects/{project}/locations/{location}/lakes/{lake}/zones/{zone}/actions/{action}
            projects/{project}/locations/{location}/lakes/{lake}/zones/{zone}/assets/{asset}/actions/{action}.
          readOnly: true
          type: string
        lake:
          description: >-
            Output only. The relative resource name of the lake, of the form:
            projects/{project_number}/locations/{location_id}/lakes/{lake_id}.
          readOnly: true
          type: string
        zone:
          description: >-
            Output only. The relative resource name of the zone, of the form:
            projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.
          readOnly: true
          type: string
        asset:
          description: >-
            Output only. The relative resource name of the asset, of the form:
            projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/assets/{asset_id}.
          readOnly: true
          type: string
        dataLocations:
          description: >-
            The list of data locations associated with this action. Cloud
            Storage locations are represented as URI paths(E.g.
            gs://bucket/table1/year=2020/month=Jan/). BigQuery locations refer
            to resource names(E.g.
            bigquery.googleapis.com/projects/project-id/datasets/dataset-id).
          type: array
          items:
            type: string
        invalidDataFormat:
          description: Details for issues related to invalid or unsupported data formats.
          $ref: '#/components/schemas/GoogleCloudDataplexV1ActionInvalidDataFormat'
        incompatibleDataSchema:
          description: >-
            Details for issues related to incompatible schemas detected within
            data.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1ActionIncompatibleDataSchema
        invalidDataPartition:
          description: >-
            Details for issues related to invalid or unsupported data partition
            structure.
          $ref: '#/components/schemas/GoogleCloudDataplexV1ActionInvalidDataPartition'
        missingData:
          description: >-
            Details for issues related to absence of data within managed
            resources.
          $ref: '#/components/schemas/GoogleCloudDataplexV1ActionMissingData'
        missingResource:
          description: Details for issues related to absence of a managed resource.
          $ref: '#/components/schemas/GoogleCloudDataplexV1ActionMissingResource'
        unauthorizedResource:
          description: >-
            Details for issues related to lack of permissions to access data
            resources.
          $ref: '#/components/schemas/GoogleCloudDataplexV1ActionUnauthorizedResource'
        failedSecurityPolicyApply:
          description: Details for issues related to applying security policy.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1ActionFailedSecurityPolicyApply
        invalidDataOrganization:
          description: Details for issues related to invalid data arrangement.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1ActionInvalidDataOrganization
    GoogleCloudDataplexV1ActionInvalidDataFormat:
      id: GoogleCloudDataplexV1ActionInvalidDataFormat
      description: >-
        Action details for invalid or unsupported data files detected by
        discovery.
      type: object
      properties:
        sampledDataLocations:
          description: >-
            The list of data locations sampled and used for format/schema
            inference.
          type: array
          items:
            type: string
        expectedFormat:
          description: The expected data format of the entity.
          type: string
        newFormat:
          description: The new unexpected data format within the entity.
          type: string
    GoogleCloudDataplexV1ActionIncompatibleDataSchema:
      id: GoogleCloudDataplexV1ActionIncompatibleDataSchema
      description: Action details for incompatible schemas detected by discovery.
      type: object
      properties:
        table:
          description: The name of the table containing invalid data.
          type: string
        existingSchema:
          description: >-
            The existing and expected schema of the table. The schema is
            provided as a JSON formatted structure listing columns and data
            types.
          type: string
        newSchema:
          description: >-
            The new and incompatible schema within the table. The schema is
            provided as a JSON formatted structured listing columns and data
            types.
          type: string
        sampledDataLocations:
          description: >-
            The list of data locations sampled and used for format/schema
            inference.
          type: array
          items:
            type: string
        schemaChange:
          description: >-
            Whether the action relates to a schema that is incompatible or
            modified.
          type: string
          enumDescriptions:
            - Schema change unspecified.
            - Newly discovered schema is incompatible with existing schema.
            - >-
              Newly discovered schema has changed from existing schema for data
              in a curated zone.
          enum:
            - SCHEMA_CHANGE_UNSPECIFIED
            - INCOMPATIBLE
            - MODIFIED
    GoogleCloudDataplexV1ActionInvalidDataPartition:
      id: GoogleCloudDataplexV1ActionInvalidDataPartition
      description: >-
        Action details for invalid or unsupported partitions detected by
        discovery.
      type: object
      properties:
        expectedStructure:
          description: The issue type of InvalidDataPartition.
          type: string
          enumDescriptions:
            - PartitionStructure unspecified.
            - >-
              Consistent hive-style partition definition (both raw and curated
              zone).
            - Hive style partition definition (curated zone only).
          enum:
            - PARTITION_STRUCTURE_UNSPECIFIED
            - CONSISTENT_KEYS
            - HIVE_STYLE_KEYS
    GoogleCloudDataplexV1ActionMissingData:
      id: GoogleCloudDataplexV1ActionMissingData
      description: Action details for absence of data detected by discovery.
      type: object
      properties: {}
    GoogleCloudDataplexV1ActionMissingResource:
      id: GoogleCloudDataplexV1ActionMissingResource
      description: Action details for resource references in assets that cannot be located.
      type: object
      properties: {}
    GoogleCloudDataplexV1ActionUnauthorizedResource:
      id: GoogleCloudDataplexV1ActionUnauthorizedResource
      description: >-
        Action details for unauthorized resource issues raised to indicate that
        the service account associated with the lake instance is not authorized
        to access or manage the resource associated with an asset.
      type: object
      properties: {}
    GoogleCloudDataplexV1ActionFailedSecurityPolicyApply:
      id: GoogleCloudDataplexV1ActionFailedSecurityPolicyApply
      description: >-
        Failed to apply security policy to the managed resource(s) under a lake,
        zone or an asset. For a lake or zone resource, one or more underlying
        assets has a failure applying security policy to the associated managed
        resource.
      type: object
      properties:
        asset:
          description: >-
            Resource name of one of the assets with failing security policy
            application. Populated for a lake or zone resource only.
          type: string
    GoogleCloudDataplexV1ActionInvalidDataOrganization:
      id: GoogleCloudDataplexV1ActionInvalidDataOrganization
      description: Action details for invalid data arrangement.
      type: object
      properties: {}
    GoogleCloudDataplexV1Zone:
      id: GoogleCloudDataplexV1Zone
      description: >-
        A zone represents a logical group of related assets within a lake. A
        zone can be used to map to organizational structure or represent stages
        of data readiness from raw to curated. It provides managing behavior
        that is shared or inherited by all contained assets.
      type: object
      properties:
        name:
          description: >-
            Output only. The relative resource name of the zone, of the form:
            projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.
          readOnly: true
          type: string
        displayName:
          description: Optional. User friendly display name.
          type: string
        uid:
          description: >-
            Output only. System generated globally unique ID for the zone. This
            ID will be different if the zone is deleted and re-created with the
            same name.
          readOnly: true
          type: string
        createTime:
          description: Output only. The time when the zone was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time when the zone was last updated.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: Optional. User defined labels for the zone.
          type: object
          additionalProperties:
            type: string
        description:
          description: Optional. Description of the zone.
          type: string
        state:
          description: Output only. Current state of the zone.
          readOnly: true
          type: string
          enumDescriptions:
            - State is not specified.
            - Resource is active, i.e., ready to use.
            - Resource is under creation.
            - Resource is under deletion.
            - Resource is active but has unresolved actions.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - DELETING
            - ACTION_REQUIRED
        type:
          description: Required. Immutable. The type of the zone.
          type: string
          enumDescriptions:
            - Zone type not specified.
            - >-
              A zone that contains data that needs further processing before it
              is considered generally ready for consumption and analytics
              workloads.
            - >-
              A zone that contains data that is considered to be ready for
              broader consumption and analytics workloads. Curated structured
              data stored in Cloud Storage must conform to certain file formats
              (parquet, avro and orc) and organized in a hive-compatible
              directory layout.
          enum:
            - TYPE_UNSPECIFIED
            - RAW
            - CURATED
        discoverySpec:
          description: >-
            Optional. Specification of the discovery feature applied to data in
            this zone.
          $ref: '#/components/schemas/GoogleCloudDataplexV1ZoneDiscoverySpec'
        resourceSpec:
          description: >-
            Required. Specification of the resources that are referenced by the
            assets within this zone.
          $ref: '#/components/schemas/GoogleCloudDataplexV1ZoneResourceSpec'
        assetStatus:
          description: Output only. Aggregated status of the underlying assets of the zone.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetStatus'
    GoogleCloudDataplexV1ZoneDiscoverySpec:
      id: GoogleCloudDataplexV1ZoneDiscoverySpec
      description: Settings to manage the metadata discovery and publishing in a zone.
      type: object
      properties:
        enabled:
          description: Required. Whether discovery is enabled.
          type: boolean
        includePatterns:
          description: >-
            Optional. The list of patterns to apply for selecting data to
            include during discovery if only a subset of the data should
            considered. For Cloud Storage bucket assets, these are interpreted
            as glob patterns used to match object names. For BigQuery dataset
            assets, these are interpreted as patterns to match table names.
          type: array
          items:
            type: string
        excludePatterns:
          description: >-
            Optional. The list of patterns to apply for selecting data to
            exclude during discovery. For Cloud Storage bucket assets, these are
            interpreted as glob patterns used to match object names. For
            BigQuery dataset assets, these are interpreted as patterns to match
            table names.
          type: array
          items:
            type: string
        csvOptions:
          description: Optional. Configuration for CSV data.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions
        jsonOptions:
          description: Optional. Configuration for Json data.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions
        schedule:
          description: >-
            Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for
            running discovery periodically. Successive discovery runs must be
            scheduled at least 60 minutes apart. The default value is to run
            discovery every 60 minutes. To explicitly set a timezone to the cron
            tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or
            TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid
            string from IANA time zone database. For example,
            CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * *
            *.
          type: string
    GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions:
      id: GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions
      description: Describe CSV and similar semi-structured data formats.
      type: object
      properties:
        headerRows:
          description: >-
            Optional. The number of rows to interpret as header rows that should
            be skipped when reading data rows.
          type: integer
          format: int32
        delimiter:
          description: >-
            Optional. The delimiter being used to separate values. This defaults
            to ','.
          type: string
        encoding:
          description: Optional. The character encoding of the data. The default is UTF-8.
          type: string
        disableTypeInference:
          description: >-
            Optional. Whether to disable the inference of data type for CSV
            data. If true, all columns will be registered as strings.
          type: boolean
    GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions:
      id: GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions
      description: Describe JSON data format.
      type: object
      properties:
        encoding:
          description: Optional. The character encoding of the data. The default is UTF-8.
          type: string
        disableTypeInference:
          description: >-
            Optional. Whether to disable the inference of data type for Json
            data. If true, all columns will be registered as their primitive
            types (strings, number or boolean).
          type: boolean
    GoogleCloudDataplexV1ZoneResourceSpec:
      id: GoogleCloudDataplexV1ZoneResourceSpec
      description: Settings for resources attached as assets within a zone.
      type: object
      properties:
        locationType:
          description: >-
            Required. Immutable. The location type of the resources that are
            allowed to be attached to the assets within this zone.
          type: string
          enumDescriptions:
            - Unspecified location type.
            - Resources that are associated with a single region.
            - Resources that are associated with a multi-region location.
          enum:
            - LOCATION_TYPE_UNSPECIFIED
            - SINGLE_REGION
            - MULTI_REGION
    GoogleCloudDataplexV1ListZonesResponse:
      id: GoogleCloudDataplexV1ListZonesResponse
      description: List zones response.
      type: object
      properties:
        zones:
          description: Zones under the given parent lake.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Zone'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    GoogleCloudDataplexV1Asset:
      id: GoogleCloudDataplexV1Asset
      description: >-
        An asset represents a cloud resource that is being managed within a lake
        as a member of a zone.
      type: object
      properties:
        name:
          description: >-
            Output only. The relative resource name of the asset, of the form:
            projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/assets/{asset_id}.
          readOnly: true
          type: string
        displayName:
          description: Optional. User friendly display name.
          type: string
        uid:
          description: >-
            Output only. System generated globally unique ID for the asset. This
            ID will be different if the asset is deleted and re-created with the
            same name.
          readOnly: true
          type: string
        createTime:
          description: Output only. The time when the asset was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time when the asset was last updated.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: Optional. User defined labels for the asset.
          type: object
          additionalProperties:
            type: string
        description:
          description: Optional. Description of the asset.
          type: string
        state:
          description: Output only. Current state of the asset.
          readOnly: true
          type: string
          enumDescriptions:
            - State is not specified.
            - Resource is active, i.e., ready to use.
            - Resource is under creation.
            - Resource is under deletion.
            - Resource is active but has unresolved actions.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - DELETING
            - ACTION_REQUIRED
        resourceSpec:
          description: >-
            Required. Specification of the resource that is referenced by this
            asset.
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetResourceSpec'
        resourceStatus:
          description: Output only. Status of the resource referenced by this asset.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetResourceStatus'
        securityStatus:
          description: >-
            Output only. Status of the security policy applied to resource
            referenced by this asset.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetSecurityStatus'
        discoverySpec:
          description: >-
            Optional. Specification of the discovery feature applied to data
            referenced by this asset. When this spec is left unset, the asset
            will use the spec set on the parent zone.
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetDiscoverySpec'
        discoveryStatus:
          description: >-
            Output only. Status of the discovery feature applied to data
            referenced by this asset.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetDiscoveryStatus'
    GoogleCloudDataplexV1AssetResourceSpec:
      id: GoogleCloudDataplexV1AssetResourceSpec
      description: Identifies the cloud resource that is referenced by this asset.
      type: object
      properties:
        name:
          description: >-
            Immutable. Relative name of the cloud resource that contains the
            data that is being managed within a lake. For example:
            projects/{project_number}/buckets/{bucket_id}
            projects/{project_number}/datasets/{dataset_id}
          type: string
        type:
          description: Required. Immutable. Type of resource.
          type: string
          enumDescriptions:
            - Type not specified.
            - Cloud Storage bucket.
            - BigQuery dataset.
          enum:
            - TYPE_UNSPECIFIED
            - STORAGE_BUCKET
            - BIGQUERY_DATASET
        readAccessMode:
          description: >-
            Optional. Determines how read permissions are handled for each asset
            and their associated tables. Only available to storage buckets
            assets.
          type: string
          enumDescriptions:
            - Access mode unspecified.
            - Default. Data is accessed directly using storage APIs.
            - Data is accessed through a managed interface using BigQuery APIs.
          enum:
            - ACCESS_MODE_UNSPECIFIED
            - DIRECT
            - MANAGED
    GoogleCloudDataplexV1AssetResourceStatus:
      id: GoogleCloudDataplexV1AssetResourceStatus
      description: Status of the resource referenced by an asset.
      type: object
      properties:
        state:
          description: The current state of the managed resource.
          type: string
          enumDescriptions:
            - State unspecified.
            - Resource does not have any errors.
            - Resource has errors.
          enum:
            - STATE_UNSPECIFIED
            - READY
            - ERROR
        message:
          description: Additional information about the current state.
          type: string
        updateTime:
          description: Last update time of the status.
          type: string
          format: google-datetime
        managedAccessIdentity:
          description: >-
            Output only. Service account associated with the BigQuery
            Connection.
          readOnly: true
          type: string
    GoogleCloudDataplexV1AssetSecurityStatus:
      id: GoogleCloudDataplexV1AssetSecurityStatus
      description: >-
        Security policy status of the asset. Data security policy, i.e.,
        readers, writers & owners, should be specified in the lake/zone/asset
        IAM policy.
      type: object
      properties:
        state:
          description: >-
            The current state of the security policy applied to the attached
            resource.
          type: string
          enumDescriptions:
            - State unspecified.
            - >-
              Security policy has been successfully applied to the attached
              resource.
            - >-
              Security policy is in the process of being applied to the attached
              resource.
            - >-
              Security policy could not be applied to the attached resource due
              to errors.
          enum:
            - STATE_UNSPECIFIED
            - READY
            - APPLYING
            - ERROR
        message:
          description: Additional information about the current state.
          type: string
        updateTime:
          description: Last update time of the status.
          type: string
          format: google-datetime
    GoogleCloudDataplexV1AssetDiscoverySpec:
      id: GoogleCloudDataplexV1AssetDiscoverySpec
      description: Settings to manage the metadata discovery and publishing for an asset.
      type: object
      properties:
        enabled:
          description: Optional. Whether discovery is enabled.
          type: boolean
        includePatterns:
          description: >-
            Optional. The list of patterns to apply for selecting data to
            include during discovery if only a subset of the data should
            considered. For Cloud Storage bucket assets, these are interpreted
            as glob patterns used to match object names. For BigQuery dataset
            assets, these are interpreted as patterns to match table names.
          type: array
          items:
            type: string
        excludePatterns:
          description: >-
            Optional. The list of patterns to apply for selecting data to
            exclude during discovery. For Cloud Storage bucket assets, these are
            interpreted as glob patterns used to match object names. For
            BigQuery dataset assets, these are interpreted as patterns to match
            table names.
          type: array
          items:
            type: string
        csvOptions:
          description: Optional. Configuration for CSV data.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions
        jsonOptions:
          description: Optional. Configuration for Json data.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions
        schedule:
          description: >-
            Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for
            running discovery periodically. Successive discovery runs must be
            scheduled at least 60 minutes apart. The default value is to run
            discovery every 60 minutes. To explicitly set a timezone to the cron
            tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or
            TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid
            string from IANA time zone database. For example,
            CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * *
            *.
          type: string
    GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions:
      id: GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions
      description: Describe CSV and similar semi-structured data formats.
      type: object
      properties:
        headerRows:
          description: >-
            Optional. The number of rows to interpret as header rows that should
            be skipped when reading data rows.
          type: integer
          format: int32
        delimiter:
          description: >-
            Optional. The delimiter being used to separate values. This defaults
            to ','.
          type: string
        encoding:
          description: Optional. The character encoding of the data. The default is UTF-8.
          type: string
        disableTypeInference:
          description: >-
            Optional. Whether to disable the inference of data type for CSV
            data. If true, all columns will be registered as strings.
          type: boolean
    GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions:
      id: GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions
      description: Describe JSON data format.
      type: object
      properties:
        encoding:
          description: Optional. The character encoding of the data. The default is UTF-8.
          type: string
        disableTypeInference:
          description: >-
            Optional. Whether to disable the inference of data type for Json
            data. If true, all columns will be registered as their primitive
            types (strings, number or boolean).
          type: boolean
    GoogleCloudDataplexV1AssetDiscoveryStatus:
      id: GoogleCloudDataplexV1AssetDiscoveryStatus
      description: Status of discovery for an asset.
      type: object
      properties:
        state:
          description: The current status of the discovery feature.
          type: string
          enumDescriptions:
            - State is unspecified.
            - Discovery for the asset is scheduled.
            - Discovery for the asset is running.
            - >-
              Discovery for the asset is currently paused (e.g. due to a lack of
              available resources). It will be automatically resumed.
            - Discovery for the asset is disabled.
          enum:
            - STATE_UNSPECIFIED
            - SCHEDULED
            - IN_PROGRESS
            - PAUSED
            - DISABLED
        message:
          description: Additional information about the current state.
          type: string
        updateTime:
          description: Last update time of the status.
          type: string
          format: google-datetime
        lastRunTime:
          description: The start time of the last discovery run.
          type: string
          format: google-datetime
        stats:
          description: Data Stats of the asset reported by discovery.
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetDiscoveryStatusStats'
        lastRunDuration:
          description: The duration of the last discovery run.
          type: string
          format: google-duration
    GoogleCloudDataplexV1AssetDiscoveryStatusStats:
      id: GoogleCloudDataplexV1AssetDiscoveryStatusStats
      description: The aggregated data statistics for the asset reported by discovery.
      type: object
      properties:
        dataItems:
          description: The count of data items within the referenced resource.
          type: string
          format: int64
        dataSize:
          description: The number of stored data bytes within the referenced resource.
          type: string
          format: int64
        tables:
          description: The count of table entities within the referenced resource.
          type: string
          format: int64
        filesets:
          description: The count of fileset entities within the referenced resource.
          type: string
          format: int64
    GoogleCloudDataplexV1ListAssetsResponse:
      id: GoogleCloudDataplexV1ListAssetsResponse
      description: List assets response.
      type: object
      properties:
        assets:
          description: Asset under the given parent zone.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Asset'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    GoogleCloudDataplexV1Task:
      id: GoogleCloudDataplexV1Task
      description: A task represents a user-visible job.
      type: object
      properties:
        name:
          description: >-
            Output only. The relative resource name of the task, of the form:
            projects/{project_number}/locations/{location_id}/lakes/{lake_id}/
            tasks/{task_id}.
          readOnly: true
          type: string
        uid:
          description: >-
            Output only. System generated globally unique ID for the task. This
            ID will be different if the task is deleted and re-created with the
            same name.
          readOnly: true
          type: string
        createTime:
          description: Output only. The time when the task was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time when the task was last updated.
          readOnly: true
          type: string
          format: google-datetime
        description:
          description: Optional. Description of the task.
          type: string
        displayName:
          description: Optional. User friendly display name.
          type: string
        state:
          description: Output only. Current state of the task.
          readOnly: true
          type: string
          enumDescriptions:
            - State is not specified.
            - Resource is active, i.e., ready to use.
            - Resource is under creation.
            - Resource is under deletion.
            - Resource is active but has unresolved actions.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - DELETING
            - ACTION_REQUIRED
        labels:
          description: Optional. User-defined labels for the task.
          type: object
          additionalProperties:
            type: string
        triggerSpec:
          description: >-
            Required. Spec related to how often and when a task should be
            triggered.
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskTriggerSpec'
        executionSpec:
          description: Required. Spec related to how a task is executed.
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskExecutionSpec'
        executionStatus:
          description: Output only. Status of the latest task executions.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskExecutionStatus'
        spark:
          description: Config related to running custom Spark tasks.
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskSparkTaskConfig'
        notebook:
          description: Config related to running scheduled Notebooks.
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskNotebookTaskConfig'
    GoogleCloudDataplexV1TaskTriggerSpec:
      id: GoogleCloudDataplexV1TaskTriggerSpec
      description: Task scheduling and trigger settings.
      type: object
      properties:
        type:
          description: Required. Immutable. Trigger type of the user-specified Task.
          type: string
          enumDescriptions:
            - Unspecified trigger type.
            - The task runs one-time shortly after Task Creation.
            - The task is scheduled to run periodically.
          enum:
            - TYPE_UNSPECIFIED
            - ON_DEMAND
            - RECURRING
        startTime:
          description: >-
            Optional. The first run of the task will be after this time. If not
            specified, the task will run shortly after being submitted if
            ON_DEMAND and based on the schedule if RECURRING.
          type: string
          format: google-datetime
        disabled:
          description: >-
            Optional. Prevent the task from executing. This does not cancel
            already running tasks. It is intended to temporarily disable
            RECURRING tasks.
          type: boolean
        maxRetries:
          description: >-
            Optional. Number of retry attempts before aborting. Set to zero to
            never attempt to retry a failed task.
          type: integer
          format: int32
        schedule:
          description: >-
            Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for
            running tasks periodically. To explicitly set a timezone to the cron
            tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or
            "TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid
            string from IANA time zone database. For example,
            CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * *
            *. This field is required for RECURRING tasks.
          type: string
    GoogleCloudDataplexV1TaskExecutionSpec:
      id: GoogleCloudDataplexV1TaskExecutionSpec
      description: Execution related settings, like retry and service_account.
      type: object
      properties:
        args:
          description: >-
            Optional. The arguments to pass to the task. The args can use
            placeholders of the format ${placeholder} as part of key/value
            string. These will be interpolated before passing the args to the
            driver. Currently supported placeholders: - ${task_id} - ${job_time}
            To pass positional args, set the key as TASK_ARGS. The value should
            be a comma-separated string of all the positional arguments. To use
            a delimiter other than comma, refer to
            https://cloud.google.com/sdk/gcloud/reference/topic/escaping. In
            case of other keys being present in the args, then TASK_ARGS will be
            passed as the last argument.
          type: object
          additionalProperties:
            type: string
        serviceAccount:
          description: >-
            Required. Service account to use to execute a task. If not provided,
            the default Compute service account for the project is used.
          type: string
        project:
          description: >-
            Optional. The project in which jobs are run. By default, the project
            containing the Lake is used. If a project is provided, the
            ExecutionSpec.service_account must belong to this project.
          type: string
        maxJobExecutionLifetime:
          description: >-
            Optional. The maximum duration after which the job execution is
            expired.
          type: string
          format: google-duration
        kmsKey:
          description: >-
            Optional. The Cloud KMS key to use for encryption, of the form:
            projects/{project_number}/locations/{location_id}/keyRings/{key-ring-name}/cryptoKeys/{key-name}.
          type: string
    GoogleCloudDataplexV1TaskExecutionStatus:
      id: GoogleCloudDataplexV1TaskExecutionStatus
      description: Status of the task execution (e.g. Jobs).
      type: object
      properties:
        updateTime:
          description: Output only. Last update time of the status.
          readOnly: true
          type: string
          format: google-datetime
        latestJob:
          description: Output only. latest job execution
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1Job'
    GoogleCloudDataplexV1Job:
      id: GoogleCloudDataplexV1Job
      description: A job represents an instance of a task.
      type: object
      properties:
        name:
          description: >-
            Output only. The relative resource name of the job, of the form:
            projects/{project_number}/locations/{location_id}/lakes/{lake_id}/tasks/{task_id}/jobs/{job_id}.
          readOnly: true
          type: string
        uid:
          description: Output only. System generated globally unique ID for the job.
          readOnly: true
          type: string
        startTime:
          description: Output only. The time when the job was started.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time when the job ended.
          readOnly: true
          type: string
          format: google-datetime
        state:
          description: Output only. Execution state for the job.
          readOnly: true
          type: string
          enumDescriptions:
            - The job state is unknown.
            - The job is running.
            - The job is cancelling.
            - The job cancellation was successful.
            - The job completed successfully.
            - The job is no longer running due to an error.
            - The job was cancelled outside of Dataplex.
          enum:
            - STATE_UNSPECIFIED
            - RUNNING
            - CANCELLING
            - CANCELLED
            - SUCCEEDED
            - FAILED
            - ABORTED
        retryCount:
          description: >-
            Output only. The number of times the job has been retried (excluding
            the initial attempt).
          readOnly: true
          type: integer
          format: uint32
        service:
          description: Output only. The underlying service running a job.
          readOnly: true
          type: string
          enumDescriptions:
            - Service used to run the job is unspecified.
            - Dataproc service is used to run this job.
          enum:
            - SERVICE_UNSPECIFIED
            - DATAPROC
        serviceJob:
          description: >-
            Output only. The full resource name for the job run under a
            particular service.
          readOnly: true
          type: string
        message:
          description: Output only. Additional information about the current state.
          readOnly: true
          type: string
        labels:
          description: Output only. User-defined labels for the task.
          readOnly: true
          type: object
          additionalProperties:
            type: string
        trigger:
          description: Output only. Job execution trigger.
          readOnly: true
          type: string
          enumDescriptions:
            - The trigger is unspecified.
            - >-
              The job was triggered by Dataplex based on trigger spec from task
              definition.
            - The job was triggered by the explicit call of Task API.
          enum:
            - TRIGGER_UNSPECIFIED
            - TASK_CONFIG
            - RUN_REQUEST
        executionSpec:
          description: Output only. Spec related to how a task is executed.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskExecutionSpec'
    GoogleCloudDataplexV1TaskSparkTaskConfig:
      id: GoogleCloudDataplexV1TaskSparkTaskConfig
      description: User-specified config for running a Spark task.
      type: object
      properties:
        mainJarFileUri:
          description: >-
            The Cloud Storage URI of the jar file that contains the main class.
            The execution args are passed in as a sequence of named process
            arguments (--key=value).
          type: string
        mainClass:
          description: >-
            The name of the driver's main class. The jar file that contains the
            class must be in the default CLASSPATH or specified in
            jar_file_uris. The execution args are passed in as a sequence of
            named process arguments (--key=value).
          type: string
        pythonScriptFile:
          description: >-
            The Gcloud Storage URI of the main Python file to use as the driver.
            Must be a .py file. The execution args are passed in as a sequence
            of named process arguments (--key=value).
          type: string
        sqlScriptFile:
          description: >-
            A reference to a query file. This can be the Cloud Storage URI of
            the query file or it can the path to a SqlScript Content. The
            execution args are used to declare a set of script variables (set
            key="value";).
          type: string
        sqlScript:
          description: >-
            The query text. The execution args are used to declare a set of
            script variables (set key="value";).
          type: string
        fileUris:
          description: >-
            Optional. Cloud Storage URIs of files to be placed in the working
            directory of each executor.
          type: array
          items:
            type: string
        archiveUris:
          description: >-
            Optional. Cloud Storage URIs of archives to be extracted into the
            working directory of each executor. Supported file types: .jar,
            .tar, .tar.gz, .tgz, and .zip.
          type: array
          items:
            type: string
        infrastructureSpec:
          description: Optional. Infrastructure specification for the execution.
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskInfrastructureSpec'
    GoogleCloudDataplexV1TaskInfrastructureSpec:
      id: GoogleCloudDataplexV1TaskInfrastructureSpec
      description: Configuration for the underlying infrastructure used to run workloads.
      type: object
      properties:
        batch:
          description: Compute resources needed for a Task when using Dataproc Serverless.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources
        containerImage:
          description: Container Image Runtime Configuration.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime
        vpcNetwork:
          description: Vpc network.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork
    GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources:
      id: GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources
      description: Batch compute resources associated with the task.
      type: object
      properties:
        executorsCount:
          description: >-
            Optional. Total number of job executors. Executor Count should be
            between 2 and 100. Default=2
          type: integer
          format: int32
        maxExecutorsCount:
          description: >-
            Optional. Max configurable executors. If max_executors_count >
            executors_count, then auto-scaling is enabled. Max Executor Count
            should be between 2 and 1000. Default=1000
          type: integer
          format: int32
    GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime:
      id: GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime
      description: Container Image Runtime Configuration used with Batch execution.
      type: object
      properties:
        image:
          description: Optional. Container image to use.
          type: string
        javaJars:
          description: >-
            Optional. A list of Java JARS to add to the classpath. Valid input
            includes Cloud Storage URIs to Jar binaries. For example,
            gs://bucket-name/my/path/to/file.jar
          type: array
          items:
            type: string
        pythonPackages:
          description: >-
            Optional. A list of python packages to be installed. Valid formats
            include Cloud Storage URI to a PIP installable library. For example,
            gs://bucket-name/my/path/to/lib.tar.gz
          type: array
          items:
            type: string
        properties:
          description: >-
            Optional. Override to common configuration of open source components
            installed on the Dataproc cluster. The properties to set on daemon
            config files. Property keys are specified in prefix:property format,
            for example core:hadoop.tmp.dir. For more information, see Cluster
            properties
            (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).
          type: object
          additionalProperties:
            type: string
    GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork:
      id: GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork
      description: Cloud VPC Network used to run the infrastructure.
      type: object
      properties:
        network:
          description: >-
            Optional. The Cloud VPC network in which the job is run. By default,
            the Cloud VPC network named Default within the project is used.
          type: string
        subNetwork:
          description: Optional. The Cloud VPC sub-network in which the job is run.
          type: string
        networkTags:
          description: Optional. List of network tags to apply to the job.
          type: array
          items:
            type: string
    GoogleCloudDataplexV1TaskNotebookTaskConfig:
      id: GoogleCloudDataplexV1TaskNotebookTaskConfig
      description: Config for running scheduled notebooks.
      type: object
      properties:
        notebook:
          description: >-
            Required. Path to input notebook. This can be the Cloud Storage URI
            of the notebook file or the path to a Notebook Content. The
            execution args are accessible as environment variables
            (TASK_key=value).
          type: string
        infrastructureSpec:
          description: Optional. Infrastructure specification for the execution.
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskInfrastructureSpec'
        fileUris:
          description: >-
            Optional. Cloud Storage URIs of files to be placed in the working
            directory of each executor.
          type: array
          items:
            type: string
        archiveUris:
          description: >-
            Optional. Cloud Storage URIs of archives to be extracted into the
            working directory of each executor. Supported file types: .jar,
            .tar, .tar.gz, .tgz, and .zip.
          type: array
          items:
            type: string
    GoogleCloudDataplexV1ListTasksResponse:
      id: GoogleCloudDataplexV1ListTasksResponse
      description: List tasks response.
      type: object
      properties:
        tasks:
          description: Tasks under the given parent lake.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Task'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
        unreachableLocations:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    GoogleCloudDataplexV1ListJobsResponse:
      id: GoogleCloudDataplexV1ListJobsResponse
      description: List jobs response.
      type: object
      properties:
        jobs:
          description: Jobs under a given task.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Job'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    GoogleCloudDataplexV1RunTaskRequest:
      id: GoogleCloudDataplexV1RunTaskRequest
      type: object
      properties:
        labels:
          description: >-
            Optional. User-defined labels for the task. If the map is left
            empty, the task will run with existing labels from task definition.
            If the map contains an entry with a new key, the same will be added
            to existing set of labels. If the map contains an entry with an
            existing label key in task definition, the task will run with new
            label value for that entry. Clearing an existing label will require
            label value to be explicitly set to a hyphen "-". The label value
            cannot be empty.
          type: object
          additionalProperties:
            type: string
        args:
          description: >-
            Optional. Execution spec arguments. If the map is left empty, the
            task will run with existing execution spec args from task
            definition. If the map contains an entry with a new key, the same
            will be added to existing set of args. If the map contains an entry
            with an existing arg key in task definition, the task will run with
            new arg value for that entry. Clearing an existing arg will require
            arg value to be explicitly set to a hyphen "-". The arg value cannot
            be empty.
          type: object
          additionalProperties:
            type: string
    GoogleCloudDataplexV1RunTaskResponse:
      id: GoogleCloudDataplexV1RunTaskResponse
      type: object
      properties:
        job:
          description: Jobs created by RunTask API.
          $ref: '#/components/schemas/GoogleCloudDataplexV1Job'
    GoogleCloudDataplexV1CancelJobRequest:
      id: GoogleCloudDataplexV1CancelJobRequest
      description: Cancel task jobs.
      type: object
      properties: {}
    GoogleCloudDataplexV1Environment:
      id: GoogleCloudDataplexV1Environment
      description: >-
        Environment represents a user-visible compute infrastructure for
        analytics within a lake.
      type: object
      properties:
        name:
          description: >-
            Output only. The relative resource name of the environment, of the
            form:
            projects/{project_id}/locations/{location_id}/lakes/{lake_id}/environment/{environment_id}
          readOnly: true
          type: string
        displayName:
          description: Optional. User friendly display name.
          type: string
        uid:
          description: >-
            Output only. System generated globally unique ID for the
            environment. This ID will be different if the environment is deleted
            and re-created with the same name.
          readOnly: true
          type: string
        createTime:
          description: Output only. Environment creation time.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time when the environment was last updated.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: Optional. User defined labels for the environment.
          type: object
          additionalProperties:
            type: string
        description:
          description: Optional. Description of the environment.
          type: string
        state:
          description: Output only. Current state of the environment.
          readOnly: true
          type: string
          enumDescriptions:
            - State is not specified.
            - Resource is active, i.e., ready to use.
            - Resource is under creation.
            - Resource is under deletion.
            - Resource is active but has unresolved actions.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - DELETING
            - ACTION_REQUIRED
        infrastructureSpec:
          description: Required. Infrastructure specification for the Environment.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1EnvironmentInfrastructureSpec
        sessionSpec:
          description: Optional. Configuration for sessions created for this environment.
          $ref: '#/components/schemas/GoogleCloudDataplexV1EnvironmentSessionSpec'
        sessionStatus:
          description: Output only. Status of sessions created for this environment.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1EnvironmentSessionStatus'
        endpoints:
          description: >-
            Output only. URI Endpoints to access sessions associated with the
            Environment.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1EnvironmentEndpoints'
    GoogleCloudDataplexV1EnvironmentInfrastructureSpec:
      id: GoogleCloudDataplexV1EnvironmentInfrastructureSpec
      description: Configuration for the underlying infrastructure used to run workloads.
      type: object
      properties:
        compute:
          description: >-
            Optional. Compute resources needed for analyze interactive
            workloads.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources
        osImage:
          description: >-
            Required. Software Runtime Configuration for analyze interactive
            workloads.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime
    GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources:
      id: GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources
      description: Compute resources associated with the analyze interactive workloads.
      type: object
      properties:
        diskSizeGb:
          description: Optional. Size in GB of the disk. Default is 100 GB.
          type: integer
          format: int32
        nodeCount:
          description: >-
            Optional. Total number of nodes in the sessions created for this
            environment.
          type: integer
          format: int32
        maxNodeCount:
          description: >-
            Optional. Max configurable nodes. If max_node_count > node_count,
            then auto-scaling is enabled.
          type: integer
          format: int32
    GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime:
      id: GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime
      description: Software Runtime Configuration to run Analyze.
      type: object
      properties:
        imageVersion:
          description: Required. Dataplex Image version.
          type: string
        javaLibraries:
          description: >-
            Optional. List of Java jars to be included in the runtime
            environment. Valid input includes Cloud Storage URIs to Jar
            binaries. For example, gs://bucket-name/my/path/to/file.jar
          type: array
          items:
            type: string
        pythonPackages:
          description: >-
            Optional. A list of python packages to be installed. Valid formats
            include Cloud Storage URI to a PIP installable library. For example,
            gs://bucket-name/my/path/to/lib.tar.gz
          type: array
          items:
            type: string
        properties:
          description: >-
            Optional. Spark properties to provide configuration for use in
            sessions created for this environment. The properties to set on
            daemon config files. Property keys are specified in prefix:property
            format. The prefix must be "spark".
          type: object
          additionalProperties:
            type: string
    GoogleCloudDataplexV1EnvironmentSessionSpec:
      id: GoogleCloudDataplexV1EnvironmentSessionSpec
      description: Configuration for sessions created for this environment.
      type: object
      properties:
        maxIdleDuration:
          description: >-
            Optional. The idle time configuration of the session. The session
            will be auto-terminated at the end of this period.
          type: string
          format: google-duration
        enableFastStartup:
          description: >-
            Optional. If True, this causes sessions to be pre-created and
            available for faster startup to enable interactive exploration
            use-cases. This defaults to False to avoid additional billed
            charges. These can only be set to True for the environment with name
            set to "default", and with default configuration.
          type: boolean
    GoogleCloudDataplexV1EnvironmentSessionStatus:
      id: GoogleCloudDataplexV1EnvironmentSessionStatus
      description: Status of sessions created for this environment.
      type: object
      properties:
        active:
          description: >-
            Output only. Queries over sessions to mark whether the environment
            is currently active or not
          readOnly: true
          type: boolean
    GoogleCloudDataplexV1EnvironmentEndpoints:
      id: GoogleCloudDataplexV1EnvironmentEndpoints
      description: URI Endpoints to access sessions associated with the Environment.
      type: object
      properties:
        notebooks:
          description: Output only. URI to serve notebook APIs
          readOnly: true
          type: string
        sql:
          description: Output only. URI to serve SQL APIs
          readOnly: true
          type: string
    GoogleCloudDataplexV1ListEnvironmentsResponse:
      id: GoogleCloudDataplexV1ListEnvironmentsResponse
      description: List environments response.
      type: object
      properties:
        environments:
          description: Environments under the given parent lake.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Environment'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    GoogleCloudDataplexV1ListSessionsResponse:
      id: GoogleCloudDataplexV1ListSessionsResponse
      description: List sessions response.
      type: object
      properties:
        sessions:
          description: Sessions under a given environment.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Session'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    GoogleCloudDataplexV1Session:
      id: GoogleCloudDataplexV1Session
      description: Represents an active analyze session running for a user.
      type: object
      properties:
        name:
          description: >-
            Output only. The relative resource name of the content, of the form:
            projects/{project_id}/locations/{location_id}/lakes/{lake_id}/environment/{environment_id}/sessions/{session_id}
          readOnly: true
          type: string
        userId:
          description: Output only. Email of user running the session.
          readOnly: true
          type: string
        createTime:
          description: Output only. Session start time.
          readOnly: true
          type: string
          format: google-datetime
        state:
          description: Output only. State of Session
          readOnly: true
          type: string
          enumDescriptions:
            - State is not specified.
            - Resource is active, i.e., ready to use.
            - Resource is under creation.
            - Resource is under deletion.
            - Resource is active but has unresolved actions.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - DELETING
            - ACTION_REQUIRED
    GoogleCloudLocationListLocationsResponse:
      id: GoogleCloudLocationListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudLocationLocation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    GoogleCloudLocationLocation:
      id: GoogleCloudLocationLocation
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            "projects/example-project/locations/us-east1"
          type: string
        locationId:
          description: 'The canonical id for this location. For example: "us-east1".'
          type: string
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"} 
          type: object
          additionalProperties:
            type: string
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    GoogleCloudDataplexV1OperationMetadata:
      id: GoogleCloudDataplexV1OperationMetadata
      description: Represents the metadata of a long-running operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        target:
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        requestedCancellation:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have successfully been cancelled
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to Code.CANCELLED.
          readOnly: true
          type: boolean
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
    GoogleCloudDataplexV1DiscoveryEvent:
      id: GoogleCloudDataplexV1DiscoveryEvent
      description: The payload associated with Discovery data processing.
      type: object
      properties:
        message:
          description: The log message.
          type: string
        lakeId:
          description: The id of the associated lake.
          type: string
        zoneId:
          description: The id of the associated zone.
          type: string
        assetId:
          description: The id of the associated asset.
          type: string
        dataLocation:
          description: The data location associated with the event.
          type: string
        type:
          description: The type of the event being logged.
          type: string
          enumDescriptions:
            - An unspecified event type.
            - An event representing discovery configuration in effect.
            - An event representing a metadata entity being created.
            - An event representing a metadata entity being updated.
            - An event representing a metadata entity being deleted.
            - An event representing a partition being created.
            - An event representing a partition being updated.
            - An event representing a partition being deleted.
          enum:
            - EVENT_TYPE_UNSPECIFIED
            - CONFIG
            - ENTITY_CREATED
            - ENTITY_UPDATED
            - ENTITY_DELETED
            - PARTITION_CREATED
            - PARTITION_UPDATED
            - PARTITION_DELETED
        config:
          description: Details about discovery configuration in effect.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DiscoveryEventConfigDetails
        entity:
          description: Details about the entity associated with the event.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DiscoveryEventEntityDetails
        partition:
          description: Details about the partition associated with the event.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DiscoveryEventPartitionDetails
        action:
          description: Details about the action associated with the event.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DiscoveryEventActionDetails
    GoogleCloudDataplexV1DiscoveryEventConfigDetails:
      id: GoogleCloudDataplexV1DiscoveryEventConfigDetails
      description: Details about configuration events.
      type: object
      properties:
        parameters:
          description: >-
            A list of discovery configuration parameters in effect. The keys are
            the field paths within DiscoverySpec. Eg. includePatterns,
            excludePatterns, csvOptions.disableTypeInference, etc.
          type: object
          additionalProperties:
            type: string
    GoogleCloudDataplexV1DiscoveryEventEntityDetails:
      id: GoogleCloudDataplexV1DiscoveryEventEntityDetails
      description: Details about the entity.
      type: object
      properties:
        entity:
          description: >-
            The name of the entity resource. The name is the fully-qualified
            resource name.
          type: string
        type:
          description: The type of the entity resource.
          type: string
          enumDescriptions:
            - An unspecified event type.
            - Entities representing structured data.
            - Entities representing unstructured data.
          enum:
            - ENTITY_TYPE_UNSPECIFIED
            - TABLE
            - FILESET
    GoogleCloudDataplexV1DiscoveryEventPartitionDetails:
      id: GoogleCloudDataplexV1DiscoveryEventPartitionDetails
      description: Details about the partition.
      type: object
      properties:
        partition:
          description: >-
            The name to the partition resource. The name is the fully-qualified
            resource name.
          type: string
        entity:
          description: >-
            The name to the containing entity resource. The name is the
            fully-qualified resource name.
          type: string
        type:
          description: The type of the containing entity resource.
          type: string
          enumDescriptions:
            - An unspecified event type.
            - Entities representing structured data.
            - Entities representing unstructured data.
          enum:
            - ENTITY_TYPE_UNSPECIFIED
            - TABLE
            - FILESET
        sampledDataLocations:
          description: >-
            The locations of the data items (e.g., a Cloud Storage objects)
            sampled for metadata inference.
          type: array
          items:
            type: string
    GoogleCloudDataplexV1DiscoveryEventActionDetails:
      id: GoogleCloudDataplexV1DiscoveryEventActionDetails
      description: Details about the action.
      type: object
      properties:
        type:
          description: The type of action. Eg. IncompatibleDataSchema, InvalidDataFormat
          type: string
    GoogleCloudDataplexV1JobEvent:
      id: GoogleCloudDataplexV1JobEvent
      description: >-
        The payload associated with Job logs that contains events describing
        jobs that have run within a Lake.
      type: object
      properties:
        message:
          description: The log message.
          type: string
        jobId:
          description: The unique id identifying the job.
          type: string
        startTime:
          description: The time when the job started running.
          type: string
          format: google-datetime
        endTime:
          description: The time when the job ended running.
          type: string
          format: google-datetime
        state:
          description: The job state on completion.
          type: string
          enumDescriptions:
            - Unspecified job state.
            - Job successfully completed.
            - Job was unsuccessful.
            - Job was cancelled by the user.
            - Job was cancelled or aborted via the service executing the job.
          enum:
            - STATE_UNSPECIFIED
            - SUCCEEDED
            - FAILED
            - CANCELLED
            - ABORTED
        retries:
          description: The number of retries.
          type: integer
          format: int32
        type:
          description: The type of the job.
          type: string
          enumDescriptions:
            - Unspecified job type.
            - Spark jobs.
            - Notebook jobs.
          enum:
            - TYPE_UNSPECIFIED
            - SPARK
            - NOTEBOOK
        service:
          description: The service used to execute the job.
          type: string
          enumDescriptions:
            - Unspecified service.
            - Cloud Dataproc.
          enum:
            - SERVICE_UNSPECIFIED
            - DATAPROC
        serviceJob:
          description: The reference to the job within the service.
          type: string
        executionTrigger:
          description: Job execution trigger.
          type: string
          enumDescriptions:
            - The job execution trigger is unspecified.
            - >-
              The job was triggered by Dataplex based on trigger spec from task
              definition.
            - The job was triggered by the explicit call of Task API.
          enum:
            - EXECUTION_TRIGGER_UNSPECIFIED
            - TASK_CONFIG
            - RUN_REQUEST
    GoogleCloudDataplexV1SessionEvent:
      id: GoogleCloudDataplexV1SessionEvent
      description: >-
        These messages contain information about sessions within an environment.
        The monitored resource is 'Environment'.
      type: object
      properties:
        message:
          description: The log message.
          type: string
        userId:
          description: >-
            The information about the user that created the session. It will be
            the email address of the user.
          type: string
        sessionId:
          description: Unique identifier for the session.
          type: string
        type:
          description: The type of the event.
          type: string
          enumDescriptions:
            - An unspecified event type.
            - Event when the session is assigned to a user.
            - Event for stop of a session.
            - Query events in the session.
            - >-
              Event for creation of a cluster. It is not yet assigned to a user.
              This comes before START in the sequence
          enum:
            - EVENT_TYPE_UNSPECIFIED
            - START
            - STOP
            - QUERY
            - CREATE
        query:
          description: The execution details of the query.
          $ref: '#/components/schemas/GoogleCloudDataplexV1SessionEventQueryDetail'
        eventSucceeded:
          description: The status of the event.
          type: boolean
        fastStartupEnabled:
          description: >-
            If the session is associated with an environment with fast startup
            enabled, and was created before being assigned to a user.
          type: boolean
        unassignedDuration:
          description: >-
            The idle duration of a warm pooled session before it is assigned to
            user.
          type: string
          format: google-duration
    GoogleCloudDataplexV1SessionEventQueryDetail:
      id: GoogleCloudDataplexV1SessionEventQueryDetail
      description: Execution details of the query.
      type: object
      properties:
        queryId:
          description: The unique Query id identifying the query.
          type: string
        queryText:
          description: The query text executed.
          type: string
        engine:
          description: Query Execution engine.
          type: string
          enumDescriptions:
            - An unspecified Engine type.
            - Spark-sql engine is specified in Query.
            - BigQuery engine is specified in Query.
          enum:
            - ENGINE_UNSPECIFIED
            - SPARK_SQL
            - BIGQUERY
        duration:
          description: Time taken for execution of the query.
          type: string
          format: google-duration
        resultSizeBytes:
          description: The size of results the query produced.
          type: string
          format: int64
        dataProcessedBytes:
          description: The data processed by the query.
          type: string
          format: int64
    GoogleCloudDataplexV1ImportItem:
      id: GoogleCloudDataplexV1ImportItem
      description: >-
        An object that describes the values that you want to set for an entry
        and its attached aspects when you import metadata. Used when you run a
        metadata import job. See CreateMetadataJob.You provide a collection of
        import items in a metadata import file. For more information about how
        to create a metadata import file, see Metadata import file
        (https://cloud.google.com/dataplex/docs/import-metadata#metadata-import-file).
      type: object
      properties:
        entry:
          description: Information about an entry and its attached aspects.
          $ref: '#/components/schemas/GoogleCloudDataplexV1Entry'
        updateMask:
          description: >-
            The fields to update, in paths that are relative to the Entry
            resource. Separate each field with a comma.In FULL entry sync mode,
            Dataplex includes the paths of all of the fields for an entry that
            can be modified, including aspects. This means that Dataplex
            replaces the existing entry with the entry in the metadata import
            file. All modifiable fields are updated, regardless of the fields
            that are listed in the update mask, and regardless of whether a
            field is present in the entry object.The update_mask field is
            ignored when an entry is created or re-created.Dataplex also
            determines which entries and aspects to modify by comparing the
            values and timestamps that you provide in the metadata import file
            with the values and timestamps that exist in your project. For more
            information, see Comparison logic
            (https://cloud.google.com/dataplex/docs/import-metadata#data-modification-logic).
          type: string
          format: google-fieldmask
        aspectKeys:
          description: >-
            The aspects to modify. Supports the following syntaxes:
            {aspect_type_reference}: matches aspects that belong to the
            specified aspect type and are attached directly to the entry.
            {aspect_type_reference}@{path}: matches aspects that belong to the
            specified aspect type and path. {aspect_type_reference}@*: matches
            aspects that belong to the specified aspect type for all
            paths.Replace {aspect_type_reference} with a reference to the aspect
            type, in the format
            {project_id_or_number}.{location_id}.{aspect_type_id}.If you leave
            this field empty, it is treated as specifying exactly those aspects
            that are present within the specified entry.In FULL entry sync mode,
            Dataplex implicitly adds the keys for all of the required aspects of
            an entry.
          type: array
          items:
            type: string
    GoogleCloudDataplexV1DataScanEvent:
      id: GoogleCloudDataplexV1DataScanEvent
      description: >-
        These messages contain information about the execution of a datascan.
        The monitored resource is 'DataScan' Next ID: 13
      type: object
      properties:
        dataSource:
          description: The data source of the data scan
          type: string
        jobId:
          description: The identifier of the specific data scan job this log entry is for.
          type: string
        createTime:
          description: The time when the data scan job was created.
          type: string
          format: google-datetime
        startTime:
          description: The time when the data scan job started to run.
          type: string
          format: google-datetime
        endTime:
          description: The time when the data scan job finished.
          type: string
          format: google-datetime
        type:
          description: The type of the data scan.
          type: string
          enumDescriptions:
            - An unspecified data scan type.
            - Data scan for data profile.
            - Data scan for data quality.
          enum:
            - SCAN_TYPE_UNSPECIFIED
            - DATA_PROFILE
            - DATA_QUALITY
        state:
          description: The status of the data scan job.
          type: string
          enumDescriptions:
            - Unspecified job state.
            - Data scan job started.
            - Data scan job successfully completed.
            - Data scan job was unsuccessful.
            - Data scan job was cancelled.
            - Data scan job was createed.
          enum:
            - STATE_UNSPECIFIED
            - STARTED
            - SUCCEEDED
            - FAILED
            - CANCELLED
            - CREATED
        message:
          description: The message describing the data scan job event.
          type: string
        specVersion:
          description: A version identifier of the spec which was used to execute this job.
          type: string
        trigger:
          description: The trigger type of the data scan job.
          type: string
          enumDescriptions:
            - An unspecified trigger type.
            - Data scan triggers on demand.
            - Data scan triggers as per schedule.
          enum:
            - TRIGGER_UNSPECIFIED
            - ON_DEMAND
            - SCHEDULE
        scope:
          description: The scope of the data scan (e.g. full, incremental).
          type: string
          enumDescriptions:
            - An unspecified scope type.
            - Data scan runs on all of the data.
            - Data scan runs on incremental data.
          enum:
            - SCOPE_UNSPECIFIED
            - FULL
            - INCREMENTAL
        dataProfile:
          description: Data profile result for data profile type data scan.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DataScanEventDataProfileResult
        dataQuality:
          description: Data quality result for data quality type data scan.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DataScanEventDataQualityResult
        dataProfileConfigs:
          description: Applied configs for data profile type data scan.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DataScanEventDataProfileAppliedConfigs
        dataQualityConfigs:
          description: Applied configs for data quality type data scan.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DataScanEventDataQualityAppliedConfigs
        postScanActionsResult:
          description: The result of post scan actions.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DataScanEventPostScanActionsResult
    GoogleCloudDataplexV1DataScanEventDataProfileResult:
      id: GoogleCloudDataplexV1DataScanEventDataProfileResult
      description: Data profile result for data scan job.
      type: object
      properties:
        rowCount:
          description: The count of rows processed in the data scan job.
          type: string
          format: int64
    GoogleCloudDataplexV1DataScanEventDataQualityResult:
      id: GoogleCloudDataplexV1DataScanEventDataQualityResult
      description: Data quality result for data scan job.
      type: object
      properties:
        rowCount:
          description: The count of rows processed in the data scan job.
          type: string
          format: int64
        passed:
          description: Whether the data quality result was pass or not.
          type: boolean
        dimensionPassed:
          description: >-
            The result of each dimension for data quality result. The key of the
            map is the name of the dimension. The value is the bool value
            depicting whether the dimension result was pass or not.
          type: object
          additionalProperties:
            type: boolean
        score:
          description: >-
            The table-level data quality score for the data scan job.The data
            quality score ranges between 0, 100 (up to two decimal points).
          type: number
          format: float
        dimensionScore:
          description: >-
            The score of each dimension for data quality result. The key of the
            map is the name of the dimension. The value is the data quality
            score for the dimension.The score ranges between 0, 100 (up to two
            decimal points).
          type: object
          additionalProperties:
            type: number
            format: float
        columnScore:
          description: >-
            The score of each column scanned in the data scan job. The key of
            the map is the name of the column. The value is the data quality
            score for the column.The score ranges between 0, 100 (up to two
            decimal points).
          type: object
          additionalProperties:
            type: number
            format: float
    GoogleCloudDataplexV1DataScanEventDataProfileAppliedConfigs:
      id: GoogleCloudDataplexV1DataScanEventDataProfileAppliedConfigs
      description: Applied configs for data profile type data scan job.
      type: object
      properties:
        samplingPercent:
          description: >-
            The percentage of the records selected from the dataset for
            DataScan. Value ranges between 0.0 and 100.0. Value 0.0 or 100.0
            imply that sampling was not applied.
          type: number
          format: float
        rowFilterApplied:
          description: >-
            Boolean indicating whether a row filter was applied in the DataScan
            job.
          type: boolean
        columnFilterApplied:
          description: >-
            Boolean indicating whether a column filter was applied in the
            DataScan job.
          type: boolean
    GoogleCloudDataplexV1DataScanEventDataQualityAppliedConfigs:
      id: GoogleCloudDataplexV1DataScanEventDataQualityAppliedConfigs
      description: Applied configs for data quality type data scan job.
      type: object
      properties:
        samplingPercent:
          description: >-
            The percentage of the records selected from the dataset for
            DataScan. Value ranges between 0.0 and 100.0. Value 0.0 or 100.0
            imply that sampling was not applied.
          type: number
          format: float
        rowFilterApplied:
          description: >-
            Boolean indicating whether a row filter was applied in the DataScan
            job.
          type: boolean
    GoogleCloudDataplexV1DataScanEventPostScanActionsResult:
      id: GoogleCloudDataplexV1DataScanEventPostScanActionsResult
      description: Post scan actions result for data scan job.
      type: object
      properties:
        bigqueryExportResult:
          description: The result of BigQuery export post scan action.
          $ref: >-
            #/components/schemas/GoogleCloudDataplexV1DataScanEventPostScanActionsResultBigQueryExportResult
    GoogleCloudDataplexV1DataScanEventPostScanActionsResultBigQueryExportResult:
      id: >-
        GoogleCloudDataplexV1DataScanEventPostScanActionsResultBigQueryExportResult
      description: The result of BigQuery export post scan action.
      type: object
      properties:
        state:
          description: Execution state for the BigQuery exporting.
          type: string
          enumDescriptions:
            - The exporting state is unspecified.
            - The exporting completed successfully.
            - The exporting is no longer running due to an error.
            - >-
              The exporting is skipped due to no valid scan result to export
              (usually caused by scan failed).
          enum:
            - STATE_UNSPECIFIED
            - SUCCEEDED
            - FAILED
            - SKIPPED
        message:
          description: Additional information about the BigQuery exporting.
          type: string
    GoogleCloudDataplexV1DataQualityScanRuleResult:
      id: GoogleCloudDataplexV1DataQualityScanRuleResult
      description: >-
        Information about the result of a data quality rule for data quality
        scan. The monitored resource is 'DataScan'.
      type: object
      properties:
        jobId:
          description: Identifier of the specific data scan job this log entry is for.
          type: string
        dataSource:
          description: The data source of the data scan (e.g. BigQuery table name).
          type: string
        column:
          description: The column which this rule is evaluated against.
          type: string
        ruleName:
          description: The name of the data quality rule.
          type: string
        ruleType:
          description: The type of the data quality rule.
          type: string
          enumDescriptions:
            - An unspecified rule type.
            - See DataQualityRule.NonNullExpectation.
            - See DataQualityRule.RangeExpectation.
            - See DataQualityRule.RegexExpectation.
            - See DataQualityRule.RowConditionExpectation.
            - See DataQualityRule.SetExpectation.
            - See DataQualityRule.StatisticRangeExpectation.
            - See DataQualityRule.TableConditionExpectation.
            - See DataQualityRule.UniquenessExpectation.
            - See DataQualityRule.SqlAssertion.
          enum:
            - RULE_TYPE_UNSPECIFIED
            - NON_NULL_EXPECTATION
            - RANGE_EXPECTATION
            - REGEX_EXPECTATION
            - ROW_CONDITION_EXPECTATION
            - SET_EXPECTATION
            - STATISTIC_RANGE_EXPECTATION
            - TABLE_CONDITION_EXPECTATION
            - UNIQUENESS_EXPECTATION
            - SQL_ASSERTION
        evalutionType:
          description: The evaluation type of the data quality rule.
          type: string
          enumDescriptions:
            - An unspecified evaluation type.
            - The rule evaluation is done at per row level.
            - The rule evaluation is done for an aggregate of rows.
          enum:
            - EVALUATION_TYPE_UNSPECIFIED
            - PER_ROW
            - AGGREGATE
        ruleDimension:
          description: The dimension of the data quality rule.
          type: string
        thresholdPercent:
          description: The passing threshold (0.0, 100.0) of the data quality rule.
          type: number
          format: double
        result:
          description: The result of the data quality rule.
          type: string
          enumDescriptions:
            - An unspecified result.
            - The data quality rule passed.
            - The data quality rule failed.
          enum:
            - RESULT_UNSPECIFIED
            - PASSED
            - FAILED
        evaluatedRowCount:
          description: >-
            The number of rows evaluated against the data quality rule. This
            field is only valid for rules of PER_ROW evaluation type.
          type: string
          format: int64
        passedRowCount:
          description: >-
            The number of rows which passed a rule evaluation. This field is
            only valid for rules of PER_ROW evaluation type.
          type: string
          format: int64
        nullRowCount:
          description: The number of rows with null values in the specified column.
          type: string
          format: int64
        assertionRowCount:
          description: >-
            The number of rows returned by the SQL statement in a SQL assertion
            rule. This field is only valid for SQL assertion rules.
          type: string
          format: int64
    GoogleCloudDataplexV1GovernanceEvent:
      id: GoogleCloudDataplexV1GovernanceEvent
      description: Payload associated with Governance related log events.
      type: object
      properties:
        message:
          description: The log message.
          type: string
        eventType:
          description: The type of the event.
          type: string
          enumDescriptions:
            - An unspecified event type.
            - Resource IAM policy update event.
            - BigQuery table create event.
            - BigQuery table update event.
            - BigQuery table delete event.
            - BigQuery connection create event.
            - BigQuery connection update event.
            - BigQuery connection delete event.
            - BigQuery taxonomy created.
            - BigQuery policy tag created.
            - BigQuery policy tag deleted.
            - BigQuery set iam policy for policy tag.
            - Access policy update event.
            - Number of resources matched with particular Query.
            - Rule processing exceeds the allowed limit.
            - Rule processing errors.
            - Governance rule processing Event.
          enum:
            - EVENT_TYPE_UNSPECIFIED
            - RESOURCE_IAM_POLICY_UPDATE
            - BIGQUERY_TABLE_CREATE
            - BIGQUERY_TABLE_UPDATE
            - BIGQUERY_TABLE_DELETE
            - BIGQUERY_CONNECTION_CREATE
            - BIGQUERY_CONNECTION_UPDATE
            - BIGQUERY_CONNECTION_DELETE
            - BIGQUERY_TAXONOMY_CREATE
            - BIGQUERY_POLICY_TAG_CREATE
            - BIGQUERY_POLICY_TAG_DELETE
            - BIGQUERY_POLICY_TAG_SET_IAM_POLICY
            - ACCESS_POLICY_UPDATE
            - GOVERNANCE_RULE_MATCHED_RESOURCES
            - GOVERNANCE_RULE_SEARCH_LIMIT_EXCEEDS
            - GOVERNANCE_RULE_ERRORS
            - GOVERNANCE_RULE_PROCESSING
        entity:
          description: >-
            Entity resource information if the log event is associated with a
            specific entity.
          $ref: '#/components/schemas/GoogleCloudDataplexV1GovernanceEventEntity'
    GoogleCloudDataplexV1GovernanceEventEntity:
      id: GoogleCloudDataplexV1GovernanceEventEntity
      description: Information about Entity resource that the log event is associated with.
      type: object
      properties:
        entity:
          description: >-
            The Entity resource the log event is associated with. Format:
            projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}
          type: string
        entityType:
          description: Type of entity.
          type: string
          enumDescriptions:
            - An unspecified Entity type.
            - Table entity type.
            - Fileset entity type.
          enum:
            - ENTITY_TYPE_UNSPECIFIED
            - TABLE
            - FILESET
    CloudReliabilityZicyWs3DataplaneProtosAssetLocation:
      id: CloudReliabilityZicyWs3DataplaneProtosAssetLocation
      description: >-
        Provides the mapping of a cloud asset to a direct physical location or
        to a proxy that defines the location on its behalf.
      type: object
      properties:
        expected:
          description: >-
            Defines the customer expectation around ZI/ZS for this asset and
            ZI/ZS state of the region at the time of asset creation.
          $ref: >-
            #/components/schemas/CloudReliabilityZicyWs3DataplaneProtosAssetLocationIsolationExpectations
        locationData:
          description: Contains all kinds of physical location definitions for this asset.
          type: array
          items:
            $ref: >-
              #/components/schemas/CloudReliabilityZicyWs3DataplaneProtosLocationData
        parentAsset:
          description: >-
            Defines parents assets if any in order to allow later generation of
            child_asset_location data via child assets.
          type: array
          items:
            $ref: >-
              #/components/schemas/CloudReliabilityZicyWs3DataplaneProtosCloudAsset
        extraParameters:
          description: Defines extra parameters required for specific asset types.
          type: array
          items:
            $ref: >-
              #/components/schemas/CloudReliabilityZicyWs3DataplaneProtosExtraParameter
        ccfeRmsPath:
          description: >-
            Spanner path of the CCFE RMS database. It is only applicable for
            CCFE tenants that use CCFE RMS for storing resource metadata.
          type: string
    CloudReliabilityZicyWs3DataplaneProtosAssetLocationIsolationExpectations:
      id: CloudReliabilityZicyWs3DataplaneProtosAssetLocationIsolationExpectations
      type: object
      properties:
        zoneIsolation:
          description: >-
            Deprecated: use zi_org_policy, zi_region_policy and zi_region_state
            instead for setting ZI expectations as per
            go/zicy-publish-physical-location.
          deprecated: true
          type: string
          enumDescriptions:
            - ''
            - To be used if tracking is not available
            - ''
            - ''
            - ''
          enum:
            - ZI_UNSPECIFIED
            - ZI_UNKNOWN
            - ZI_NOT_REQUIRED
            - ZI_PREFERRED
            - ZI_REQUIRED
        zoneSeparation:
          description: >-
            Deprecated: use zs_org_policy, and zs_region_stateinstead for
            setting Zs expectations as per go/zicy-publish-physical-location.
          deprecated: true
          type: string
          enumDescriptions:
            - ''
            - To be used if tracking is not available
            - ''
            - ''
          enum:
            - ZS_UNSPECIFIED
            - ZS_UNKNOWN
            - ZS_NOT_REQUIRED
            - ZS_REQUIRED
        zsOrgPolicy:
          type: string
          enumDescriptions:
            - ''
            - To be used if tracking is not available
            - ''
            - ''
          enum:
            - ZS_UNSPECIFIED
            - ZS_UNKNOWN
            - ZS_NOT_REQUIRED
            - ZS_REQUIRED
        zsRegionState:
          type: string
          enumDescriptions:
            - ''
            - To be used if tracking of the asset ZS-bit is not available
            - ''
            - ''
          enum:
            - ZS_REGION_UNSPECIFIED
            - ZS_REGION_UNKNOWN
            - ZS_REGION_NOT_ENABLED
            - ZS_REGION_ENABLED
        ziOrgPolicy:
          type: string
          enumDescriptions:
            - ''
            - To be used if tracking is not available
            - ''
            - ''
            - ''
          enum:
            - ZI_UNSPECIFIED
            - ZI_UNKNOWN
            - ZI_NOT_REQUIRED
            - ZI_PREFERRED
            - ZI_REQUIRED
        ziRegionPolicy:
          type: string
          enumDescriptions:
            - ''
            - To be used if tracking is not available
            - ''
            - ''
            - ''
          enum:
            - ZI_REGION_POLICY_UNSPECIFIED
            - ZI_REGION_POLICY_UNKNOWN
            - ZI_REGION_POLICY_NOT_SET
            - ZI_REGION_POLICY_FAIL_OPEN
            - ZI_REGION_POLICY_FAIL_CLOSED
        ziRegionState:
          type: string
          enumDescriptions:
            - ''
            - To be used if tracking is not available
            - ''
            - ''
          enum:
            - ZI_REGION_UNSPECIFIED
            - ZI_REGION_UNKNOWN
            - ZI_REGION_NOT_ENABLED
            - ZI_REGION_ENABLED
        requirementOverride:
          description: >-
            Explicit overrides for ZI and ZS requirements to be used for
            resources that should be excluded from ZI/ZS verification logic.
          $ref: >-
            #/components/schemas/CloudReliabilityZicyWs3DataplaneProtosAssetLocationIsolationExpectationsRequirementOverride
    CloudReliabilityZicyWs3DataplaneProtosAssetLocationIsolationExpectationsRequirementOverride:
      id: >-
        CloudReliabilityZicyWs3DataplaneProtosAssetLocationIsolationExpectationsRequirementOverride
      type: object
      properties:
        ziOverride:
          type: string
          enumDescriptions:
            - ''
            - To be used if tracking is not available
            - ''
            - ''
            - ''
          enum:
            - ZI_UNSPECIFIED
            - ZI_UNKNOWN
            - ZI_NOT_REQUIRED
            - ZI_PREFERRED
            - ZI_REQUIRED
        zsOverride:
          type: string
          enumDescriptions:
            - ''
            - To be used if tracking is not available
            - ''
            - ''
          enum:
            - ZS_UNSPECIFIED
            - ZS_UNKNOWN
            - ZS_NOT_REQUIRED
            - ZS_REQUIRED
    CloudReliabilityZicyWs3DataplaneProtosLocationData:
      id: CloudReliabilityZicyWs3DataplaneProtosLocationData
      type: object
      properties:
        directLocation:
          $ref: >-
            #/components/schemas/CloudReliabilityZicyWs3DataplaneProtosDirectLocationAssignment
        spannerLocation:
          $ref: >-
            #/components/schemas/CloudReliabilityZicyWs3DataplaneProtosSpannerLocation
        childAssetLocation:
          $ref: >-
            #/components/schemas/CloudReliabilityZicyWs3DataplaneProtosCloudAssetComposition
        gcpProjectProxy:
          $ref: >-
            #/components/schemas/CloudReliabilityZicyWs3DataplaneProtosTenantProjectProxy
        blobstoreLocation:
          $ref: >-
            #/components/schemas/CloudReliabilityZicyWs3DataplaneProtosBlobstoreLocation
        placerLocation:
          $ref: >-
            #/components/schemas/CloudReliabilityZicyWs3DataplaneProtosPlacerLocation
    CloudReliabilityZicyWs3DataplaneProtosDirectLocationAssignment:
      id: CloudReliabilityZicyWs3DataplaneProtosDirectLocationAssignment
      type: object
      properties:
        location:
          type: array
          items:
            $ref: >-
              #/components/schemas/CloudReliabilityZicyWs3DataplaneProtosLocationAssignment
    CloudReliabilityZicyWs3DataplaneProtosLocationAssignment:
      id: CloudReliabilityZicyWs3DataplaneProtosLocationAssignment
      type: object
      properties:
        location:
          type: string
        locationType:
          type: string
          enumDescriptions:
            - ''
            - '1-10: Physical failure domains.'
            - ''
            - '11-20: Logical failure domains.'
            - ''
            - ''
            - ''
            - ''
            - ''
          enum:
            - UNSPECIFIED
            - CLUSTER
            - POP
            - CLOUD_ZONE
            - CLOUD_REGION
            - MULTI_REGION_GEO
            - MULTI_REGION_JURISDICTION
            - GLOBAL
            - OTHER
    CloudReliabilityZicyWs3DataplaneProtosSpannerLocation:
      id: CloudReliabilityZicyWs3DataplaneProtosSpannerLocation
      type: object
      properties:
        dbName:
          description: Set of databases used by the resource in format /span//
          type: array
          items:
            type: string
        backupName:
          description: >-
            Set of backups used by the resource with name in the same format as
            what is available at http://table/spanner_automon.backup_metadata
          type: array
          items:
            type: string
    CloudReliabilityZicyWs3DataplaneProtosCloudAssetComposition:
      id: CloudReliabilityZicyWs3DataplaneProtosCloudAssetComposition
      type: object
      properties:
        childAsset:
          type: array
          items:
            $ref: >-
              #/components/schemas/CloudReliabilityZicyWs3DataplaneProtosCloudAsset
    CloudReliabilityZicyWs3DataplaneProtosCloudAsset:
      id: CloudReliabilityZicyWs3DataplaneProtosCloudAsset
      type: object
      properties:
        assetType:
          type: string
        assetName:
          type: string
    CloudReliabilityZicyWs3DataplaneProtosTenantProjectProxy:
      id: CloudReliabilityZicyWs3DataplaneProtosTenantProjectProxy
      type: object
      properties:
        projectNumbers:
          type: array
          items:
            type: string
    CloudReliabilityZicyWs3DataplaneProtosBlobstoreLocation:
      id: CloudReliabilityZicyWs3DataplaneProtosBlobstoreLocation
      description: >-
        Policy ID that identified data placement in Blobstore as per
        go/blobstore-user-guide#data-metadata-placement-and-failure-domains
      type: object
      properties:
        policyId:
          type: array
          items:
            type: string
    CloudReliabilityZicyWs3DataplaneProtosPlacerLocation:
      id: CloudReliabilityZicyWs3DataplaneProtosPlacerLocation
      description: >-
        Message describing that the location of the customer resource is tied to
        placer allocations
      type: object
      properties:
        placerConfig:
          description: >-
            Directory with a config related to it in placer (e.g.
            "/placer/prod/home/my-root/my-dir")
          type: string
    CloudReliabilityZicyWs3DataplaneProtosExtraParameter:
      id: CloudReliabilityZicyWs3DataplaneProtosExtraParameter
      description: Defines parameters that should only be used for specific asset types.
      type: object
      properties:
        regionalMigDistributionPolicy:
          description: >-
            Details about zones used by regional
            compute.googleapis.com/InstanceGroupManager to create instances.
          $ref: >-
            #/components/schemas/CloudReliabilityZicyWs3DataplaneProtosRegionalMigDistributionPolicy
    CloudReliabilityZicyWs3DataplaneProtosRegionalMigDistributionPolicy:
      id: CloudReliabilityZicyWs3DataplaneProtosRegionalMigDistributionPolicy
      description: >-
        To be used for specifying the intended distribution of regional
        compute.googleapis.com/InstanceGroupManager instances
      type: object
      properties:
        zones:
          description: Cloud zones used by regional MIG to create instances.
          type: array
          items:
            $ref: >-
              #/components/schemas/CloudReliabilityZicyWs3DataplaneProtosZoneConfiguration
        targetShape:
          description: >-
            The shape in which the group converges around distribution of
            resources. Instance of proto2 enum
          type: integer
          format: int32
    CloudReliabilityZicyWs3DataplaneProtosZoneConfiguration:
      id: CloudReliabilityZicyWs3DataplaneProtosZoneConfiguration
      type: object
      properties:
        zone:
          type: string
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    locations:
      id: google.dataplex.locations
      name: locations
      title: Locations
      methods:
        projects_locations_lookup_entry:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}:lookupEntry/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_search_entries:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}:searchEntries/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        projects_locations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/locations/methods/projects_locations_get
          - $ref: >-
              #/components/x-stackQL-resources/locations/methods/projects_locations_list
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: google.dataplex.operations
      name: operations
      title: Operations
      methods:
        projects_locations_operations_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        projects_locations_operations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_operations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_operations_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_operations_cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_operations_get
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/organizations_locations_operations_get
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_operations_list
        insert: []
        update: []
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_operations_delete
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/organizations_locations_operations_delete
    entry_types:
      id: google.dataplex.entry_types
      name: entry_types
      title: Entry_types
      methods:
        projects_locations_entry_types_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1entryTypes/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_entry_types_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1entryTypes/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.entryTypes
        projects_locations_entry_types_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1entryTypes~1{entryTypesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_entry_types_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1entryTypes~1{entryTypesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_entry_types_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1entryTypes~1{entryTypesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/entry_types/methods/projects_locations_entry_types_get
          - $ref: >-
              #/components/x-stackQL-resources/entry_types/methods/projects_locations_entry_types_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/entry_types/methods/projects_locations_entry_types_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/entry_types/methods/projects_locations_entry_types_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/entry_types/methods/projects_locations_entry_types_delete
    entry_types_iam_policies:
      id: google.dataplex.entry_types_iam_policies
      name: entry_types_iam_policies
      title: Entry_types_iam_policies
      methods:
        projects_locations_entry_types_set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1entryTypes~1{entryTypesId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_entry_types_get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1entryTypes~1{entryTypesId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        projects_locations_entry_types_test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1entryTypes~1{entryTypesId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/entry_types_iam_policies/methods/projects_locations_entry_types_get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/entry_types_iam_policies/methods/projects_locations_entry_types_set_iam_policy
        delete: []
    aspect_types:
      id: google.dataplex.aspect_types
      name: aspect_types
      title: Aspect_types
      methods:
        projects_locations_aspect_types_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1aspectTypes/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_aspect_types_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1aspectTypes/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.aspectTypes
        projects_locations_aspect_types_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1aspectTypes~1{aspectTypesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_aspect_types_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1aspectTypes~1{aspectTypesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_aspect_types_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1aspectTypes~1{aspectTypesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/aspect_types/methods/projects_locations_aspect_types_get
          - $ref: >-
              #/components/x-stackQL-resources/aspect_types/methods/projects_locations_aspect_types_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/aspect_types/methods/projects_locations_aspect_types_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/aspect_types/methods/projects_locations_aspect_types_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/aspect_types/methods/projects_locations_aspect_types_delete
    aspect_types_iam_policies:
      id: google.dataplex.aspect_types_iam_policies
      name: aspect_types_iam_policies
      title: Aspect_types_iam_policies
      methods:
        projects_locations_aspect_types_set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1aspectTypes~1{aspectTypesId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_aspect_types_get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1aspectTypes~1{aspectTypesId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        projects_locations_aspect_types_test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1aspectTypes~1{aspectTypesId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/aspect_types_iam_policies/methods/projects_locations_aspect_types_get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/aspect_types_iam_policies/methods/projects_locations_aspect_types_set_iam_policy
        delete: []
    entry_groups:
      id: google.dataplex.entry_groups
      name: entry_groups
      title: Entry_groups
      methods:
        projects_locations_entry_groups_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1entryGroups/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_entry_groups_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1entryGroups/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.entryGroups
        projects_locations_entry_groups_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1entryGroups~1{entryGroupsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_entry_groups_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1entryGroups~1{entryGroupsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_entry_groups_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1entryGroups~1{entryGroupsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/entry_groups/methods/projects_locations_entry_groups_get
          - $ref: >-
              #/components/x-stackQL-resources/entry_groups/methods/projects_locations_entry_groups_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/entry_groups/methods/projects_locations_entry_groups_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/entry_groups/methods/projects_locations_entry_groups_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/entry_groups/methods/projects_locations_entry_groups_delete
    entry_groups_iam_policies:
      id: google.dataplex.entry_groups_iam_policies
      name: entry_groups_iam_policies
      title: Entry_groups_iam_policies
      methods:
        projects_locations_entry_groups_set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1entryGroups~1{entryGroupsId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_entry_groups_get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1entryGroups~1{entryGroupsId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        projects_locations_entry_groups_test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1entryGroups~1{entryGroupsId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/entry_groups_iam_policies/methods/projects_locations_entry_groups_get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/entry_groups_iam_policies/methods/projects_locations_entry_groups_set_iam_policy
        delete: []
    entries:
      id: google.dataplex.entries
      name: entries
      title: Entries
      methods:
        projects_locations_entry_groups_entries_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1entryGroups~1{entryGroupsId}~1entries/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_entry_groups_entries_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1entryGroups~1{entryGroupsId}~1entries/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.entries
        projects_locations_entry_groups_entries_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1entryGroups~1{entryGroupsId}~1entries~1{entriesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_entry_groups_entries_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1entryGroups~1{entryGroupsId}~1entries~1{entriesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_entry_groups_entries_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1entryGroups~1{entryGroupsId}~1entries~1{entriesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/entries/methods/projects_locations_entry_groups_entries_get
          - $ref: >-
              #/components/x-stackQL-resources/entries/methods/projects_locations_entry_groups_entries_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/entries/methods/projects_locations_entry_groups_entries_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/entries/methods/projects_locations_entry_groups_entries_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/entries/methods/projects_locations_entry_groups_entries_delete
    metadata_jobs:
      id: google.dataplex.metadata_jobs
      name: metadata_jobs
      title: Metadata_jobs
      methods:
        projects_locations_metadata_jobs_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataJobs/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_metadata_jobs_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataJobs/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.metadataJobs
        projects_locations_metadata_jobs_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataJobs~1{metadataJobsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_metadata_jobs_cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1metadataJobs~1{metadataJobsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/metadata_jobs/methods/projects_locations_metadata_jobs_get
          - $ref: >-
              #/components/x-stackQL-resources/metadata_jobs/methods/projects_locations_metadata_jobs_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/metadata_jobs/methods/projects_locations_metadata_jobs_create
        update: []
        replace: []
        delete: []
    lakes_iam_policies:
      id: google.dataplex.lakes_iam_policies
      name: lakes_iam_policies
      title: Lakes_iam_policies
      methods:
        projects_locations_lakes_set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        projects_locations_lakes_test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/lakes_iam_policies/methods/projects_locations_lakes_get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/lakes_iam_policies/methods/projects_locations_lakes_set_iam_policy
        delete: []
    lakes:
      id: google.dataplex.lakes
      name: lakes
      title: Lakes
      methods:
        projects_locations_lakes_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.lakes
        projects_locations_lakes_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/lakes/methods/projects_locations_lakes_get
          - $ref: >-
              #/components/x-stackQL-resources/lakes/methods/projects_locations_lakes_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/lakes/methods/projects_locations_lakes_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/lakes/methods/projects_locations_lakes_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/lakes/methods/projects_locations_lakes_delete
    zones_iam_policies:
      id: google.dataplex.zones_iam_policies
      name: zones_iam_policies
      title: Zones_iam_policies
      methods:
        projects_locations_lakes_zones_set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        projects_locations_lakes_zones_test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/zones_iam_policies/methods/projects_locations_lakes_zones_get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/zones_iam_policies/methods/projects_locations_lakes_zones_set_iam_policy
        delete: []
    zones:
      id: google.dataplex.zones
      name: zones
      title: Zones
      methods:
        projects_locations_lakes_zones_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.zones
        projects_locations_lakes_zones_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/zones/methods/projects_locations_lakes_zones_get
          - $ref: >-
              #/components/x-stackQL-resources/zones/methods/projects_locations_lakes_zones_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/zones/methods/projects_locations_lakes_zones_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/zones/methods/projects_locations_lakes_zones_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/zones/methods/projects_locations_lakes_zones_delete
    assets_iam_policies:
      id: google.dataplex.assets_iam_policies
      name: assets_iam_policies
      title: Assets_iam_policies
      methods:
        projects_locations_lakes_zones_assets_set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets~1{assetsId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_assets_get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets~1{assetsId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        projects_locations_lakes_zones_assets_test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets~1{assetsId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/assets_iam_policies/methods/projects_locations_lakes_zones_assets_get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/assets_iam_policies/methods/projects_locations_lakes_zones_assets_set_iam_policy
        delete: []
    assets:
      id: google.dataplex.assets
      name: assets
      title: Assets
      methods:
        projects_locations_lakes_zones_assets_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_assets_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.assets
        projects_locations_lakes_zones_assets_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets~1{assetsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_assets_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets~1{assetsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_assets_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets~1{assetsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/assets/methods/projects_locations_lakes_zones_assets_get
          - $ref: >-
              #/components/x-stackQL-resources/assets/methods/projects_locations_lakes_zones_assets_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/assets/methods/projects_locations_lakes_zones_assets_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/assets/methods/projects_locations_lakes_zones_assets_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/assets/methods/projects_locations_lakes_zones_assets_delete
    actions:
      id: google.dataplex.actions
      name: actions
      title: Actions
      methods:
        projects_locations_lakes_zones_assets_actions_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets~1{assetsId}~1actions/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.actions
        projects_locations_lakes_zones_actions_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1actions/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.actions
        projects_locations_lakes_actions_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1actions/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.actions
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/actions/methods/projects_locations_lakes_zones_assets_actions_list
          - $ref: >-
              #/components/x-stackQL-resources/actions/methods/projects_locations_lakes_zones_actions_list
          - $ref: >-
              #/components/x-stackQL-resources/actions/methods/projects_locations_lakes_actions_list
        insert: []
        update: []
        replace: []
        delete: []
    entities:
      id: google.dataplex.entities
      name: entities
      title: Entities
      methods:
        projects_locations_lakes_zones_entities_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1entities/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_entities_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1entities/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.entities
        projects_locations_lakes_zones_entities_update:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1entities~1{entitiesId}/put
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_entities_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1entities~1{entitiesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_entities_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1entities~1{entitiesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/entities/methods/projects_locations_lakes_zones_entities_get
          - $ref: >-
              #/components/x-stackQL-resources/entities/methods/projects_locations_lakes_zones_entities_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/entities/methods/projects_locations_lakes_zones_entities_create
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/entities/methods/projects_locations_lakes_zones_entities_update
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/entities/methods/projects_locations_lakes_zones_entities_delete
    partitions:
      id: google.dataplex.partitions
      name: partitions
      title: Partitions
      methods:
        projects_locations_lakes_zones_entities_partitions_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1entities~1{entitiesId}~1partitions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_entities_partitions_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1entities~1{entitiesId}~1partitions/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.partitions
        projects_locations_lakes_zones_entities_partitions_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1entities~1{entitiesId}~1partitions~1{partitionsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_entities_partitions_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1entities~1{entitiesId}~1partitions~1{partitionsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/partitions/methods/projects_locations_lakes_zones_entities_partitions_get
          - $ref: >-
              #/components/x-stackQL-resources/partitions/methods/projects_locations_lakes_zones_entities_partitions_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/partitions/methods/projects_locations_lakes_zones_entities_partitions_create
        update: []
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/partitions/methods/projects_locations_lakes_zones_entities_partitions_delete
    tasks_iam_policies:
      id: google.dataplex.tasks_iam_policies
      name: tasks_iam_policies
      title: Tasks_iam_policies
      methods:
        projects_locations_lakes_tasks_set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_tasks_get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        projects_locations_lakes_tasks_test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/tasks_iam_policies/methods/projects_locations_lakes_tasks_get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/tasks_iam_policies/methods/projects_locations_lakes_tasks_set_iam_policy
        delete: []
    tasks:
      id: google.dataplex.tasks
      name: tasks
      title: Tasks
      methods:
        projects_locations_lakes_tasks_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_tasks_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.tasks
        projects_locations_lakes_tasks_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_tasks_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_tasks_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_tasks_run:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}:run/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/tasks/methods/projects_locations_lakes_tasks_get
          - $ref: >-
              #/components/x-stackQL-resources/tasks/methods/projects_locations_lakes_tasks_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/tasks/methods/projects_locations_lakes_tasks_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/tasks/methods/projects_locations_lakes_tasks_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/tasks/methods/projects_locations_lakes_tasks_delete
    jobs:
      id: google.dataplex.jobs
      name: jobs
      title: Jobs
      methods:
        projects_locations_lakes_tasks_jobs_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}~1jobs/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.jobs
        projects_locations_lakes_tasks_jobs_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}~1jobs~1{jobsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_tasks_jobs_cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}~1jobs~1{jobsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_scans_jobs_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}~1jobs~1{jobsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_scans_jobs_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}~1jobs/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.dataScanJobs
        projects_locations_data_scans_jobs_generate_data_quality_rules:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}~1jobs~1{jobsId}:generateDataQualityRules/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/jobs/methods/projects_locations_lakes_tasks_jobs_get
          - $ref: >-
              #/components/x-stackQL-resources/jobs/methods/projects_locations_lakes_tasks_jobs_list
          - $ref: >-
              #/components/x-stackQL-resources/jobs/methods/projects_locations_data_scans_jobs_get
          - $ref: >-
              #/components/x-stackQL-resources/jobs/methods/projects_locations_data_scans_jobs_list
        insert: []
        update: []
        replace: []
        delete: []
    environments_iam_policies:
      id: google.dataplex.environments_iam_policies
      name: environments_iam_policies
      title: Environments_iam_policies
      methods:
        projects_locations_lakes_environments_set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments~1{environmentsId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_environments_get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments~1{environmentsId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        projects_locations_lakes_environments_test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments~1{environmentsId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/environments_iam_policies/methods/projects_locations_lakes_environments_get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/environments_iam_policies/methods/projects_locations_lakes_environments_set_iam_policy
        delete: []
    environments:
      id: google.dataplex.environments
      name: environments
      title: Environments
      methods:
        projects_locations_lakes_environments_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_environments_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.environments
        projects_locations_lakes_environments_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments~1{environmentsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_environments_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments~1{environmentsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_environments_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments~1{environmentsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/environments/methods/projects_locations_lakes_environments_get
          - $ref: >-
              #/components/x-stackQL-resources/environments/methods/projects_locations_lakes_environments_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/environments/methods/projects_locations_lakes_environments_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/environments/methods/projects_locations_lakes_environments_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/environments/methods/projects_locations_lakes_environments_delete
    sessions:
      id: google.dataplex.sessions
      name: sessions
      title: Sessions
      methods:
        projects_locations_lakes_environments_sessions_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments~1{environmentsId}~1sessions/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.sessions
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/sessions/methods/projects_locations_lakes_environments_sessions_list
        insert: []
        update: []
        replace: []
        delete: []
    contentitems:
      id: google.dataplex.contentitems
      name: contentitems
      title: Contentitems
      methods:
        projects_locations_lakes_contentitems_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1contentitems/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_contentitems_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1contentitems/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.content
        projects_locations_lakes_contentitems_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1contentitems~1{contentitemsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_contentitems_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1contentitems~1{contentitemsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_contentitems_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1contentitems~1{contentitemsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/contentitems/methods/projects_locations_lakes_contentitems_get
          - $ref: >-
              #/components/x-stackQL-resources/contentitems/methods/projects_locations_lakes_contentitems_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/contentitems/methods/projects_locations_lakes_contentitems_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/contentitems/methods/projects_locations_lakes_contentitems_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/contentitems/methods/projects_locations_lakes_contentitems_delete
    contentitems_iam_policies:
      id: google.dataplex.contentitems_iam_policies
      name: contentitems_iam_policies
      title: Contentitems_iam_policies
      methods:
        projects_locations_lakes_contentitems_get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1contentitems~1{contentitemsId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        projects_locations_lakes_contentitems_set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1contentitems~1{contentitemsId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_contentitems_test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1contentitems~1{contentitemsId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/contentitems_iam_policies/methods/projects_locations_lakes_contentitems_get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/contentitems_iam_policies/methods/projects_locations_lakes_contentitems_set_iam_policy
        delete: []
    content:
      id: google.dataplex.content
      name: content
      title: Content
      methods:
        projects_locations_lakes_content_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1content/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_content_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1content/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.content
        projects_locations_lakes_content_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1content~1{contentId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_content_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1content~1{contentId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_content_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1content~1{contentId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/content/methods/projects_locations_lakes_content_get
          - $ref: >-
              #/components/x-stackQL-resources/content/methods/projects_locations_lakes_content_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/content/methods/projects_locations_lakes_content_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/content/methods/projects_locations_lakes_content_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/content/methods/projects_locations_lakes_content_delete
    content_iam_policies:
      id: google.dataplex.content_iam_policies
      name: content_iam_policies
      title: Content_iam_policies
      methods:
        projects_locations_lakes_content_get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1content~1{contentId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        projects_locations_lakes_content_set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1content~1{contentId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_content_test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1content~1{contentId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/content_iam_policies/methods/projects_locations_lakes_content_get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/content_iam_policies/methods/projects_locations_lakes_content_set_iam_policy
        delete: []
    data_scans_iam_policies:
      id: google.dataplex.data_scans_iam_policies
      name: data_scans_iam_policies
      title: Data_scans_iam_policies
      methods:
        projects_locations_data_scans_set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_scans_get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        projects_locations_data_scans_test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/data_scans_iam_policies/methods/projects_locations_data_scans_get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/data_scans_iam_policies/methods/projects_locations_data_scans_set_iam_policy
        delete: []
    data_scans:
      id: google.dataplex.data_scans
      name: data_scans
      title: Data_scans
      methods:
        projects_locations_data_scans_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_scans_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.dataScans
        projects_locations_data_scans_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_scans_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_scans_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_scans_run:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}:run/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_scans_generate_data_quality_rules:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}:generateDataQualityRules/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/data_scans/methods/projects_locations_data_scans_get
          - $ref: >-
              #/components/x-stackQL-resources/data_scans/methods/projects_locations_data_scans_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/data_scans/methods/projects_locations_data_scans_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/data_scans/methods/projects_locations_data_scans_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/data_scans/methods/projects_locations_data_scans_delete
    data_taxonomies_iam_policies:
      id: google.dataplex.data_taxonomies_iam_policies
      name: data_taxonomies_iam_policies
      title: Data_taxonomies_iam_policies
      methods:
        projects_locations_data_taxonomies_set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_taxonomies_get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        projects_locations_data_taxonomies_test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/data_taxonomies_iam_policies/methods/projects_locations_data_taxonomies_get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/data_taxonomies_iam_policies/methods/projects_locations_data_taxonomies_set_iam_policy
        delete: []
    data_taxonomies:
      id: google.dataplex.data_taxonomies
      name: data_taxonomies
      title: Data_taxonomies
      methods:
        projects_locations_data_taxonomies_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_taxonomies_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.dataTaxonomies
        projects_locations_data_taxonomies_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_taxonomies_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_taxonomies_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/data_taxonomies/methods/projects_locations_data_taxonomies_get
          - $ref: >-
              #/components/x-stackQL-resources/data_taxonomies/methods/projects_locations_data_taxonomies_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/data_taxonomies/methods/projects_locations_data_taxonomies_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/data_taxonomies/methods/projects_locations_data_taxonomies_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/data_taxonomies/methods/projects_locations_data_taxonomies_delete
    attributes_iam_policies:
      id: google.dataplex.attributes_iam_policies
      name: attributes_iam_policies
      title: Attributes_iam_policies
      methods:
        projects_locations_data_taxonomies_attributes_set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}~1attributes~1{attributesId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_taxonomies_attributes_get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}~1attributes~1{attributesId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        projects_locations_data_taxonomies_attributes_test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}~1attributes~1{attributesId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/attributes_iam_policies/methods/projects_locations_data_taxonomies_attributes_get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/attributes_iam_policies/methods/projects_locations_data_taxonomies_attributes_set_iam_policy
        delete: []
    attributes:
      id: google.dataplex.attributes
      name: attributes
      title: Attributes
      methods:
        projects_locations_data_taxonomies_attributes_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}~1attributes/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_taxonomies_attributes_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}~1attributes/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.dataAttributes
        projects_locations_data_taxonomies_attributes_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}~1attributes~1{attributesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_taxonomies_attributes_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}~1attributes~1{attributesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_taxonomies_attributes_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}~1attributes~1{attributesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/attributes/methods/projects_locations_data_taxonomies_attributes_get
          - $ref: >-
              #/components/x-stackQL-resources/attributes/methods/projects_locations_data_taxonomies_attributes_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/attributes/methods/projects_locations_data_taxonomies_attributes_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/attributes/methods/projects_locations_data_taxonomies_attributes_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/attributes/methods/projects_locations_data_taxonomies_attributes_delete
    data_attribute_bindings_iam_policies:
      id: google.dataplex.data_attribute_bindings_iam_policies
      name: data_attribute_bindings_iam_policies
      title: Data_attribute_bindings_iam_policies
      methods:
        projects_locations_data_attribute_bindings_set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataAttributeBindings~1{dataAttributeBindingsId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_attribute_bindings_get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataAttributeBindings~1{dataAttributeBindingsId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        projects_locations_data_attribute_bindings_test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataAttributeBindings~1{dataAttributeBindingsId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/data_attribute_bindings_iam_policies/methods/projects_locations_data_attribute_bindings_get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/data_attribute_bindings_iam_policies/methods/projects_locations_data_attribute_bindings_set_iam_policy
        delete: []
    data_attribute_bindings:
      id: google.dataplex.data_attribute_bindings
      name: data_attribute_bindings
      title: Data_attribute_bindings
      methods:
        projects_locations_data_attribute_bindings_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataAttributeBindings/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_attribute_bindings_list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataAttributeBindings/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.dataAttributeBindings
        projects_locations_data_attribute_bindings_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataAttributeBindings~1{dataAttributeBindingsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_attribute_bindings_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataAttributeBindings~1{dataAttributeBindingsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_attribute_bindings_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataAttributeBindings~1{dataAttributeBindingsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/data_attribute_bindings/methods/projects_locations_data_attribute_bindings_get
          - $ref: >-
              #/components/x-stackQL-resources/data_attribute_bindings/methods/projects_locations_data_attribute_bindings_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/data_attribute_bindings/methods/projects_locations_data_attribute_bindings_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/data_attribute_bindings/methods/projects_locations_data_attribute_bindings_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/data_attribute_bindings/methods/projects_locations_data_attribute_bindings_delete
    entry_link_types_iam_policies:
      id: google.dataplex.entry_link_types_iam_policies
      name: entry_link_types_iam_policies
      title: Entry_link_types_iam_policies
      methods:
        projects_locations_entry_link_types_set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1entryLinkTypes~1{entryLinkTypesId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_entry_link_types_get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1entryLinkTypes~1{entryLinkTypesId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        projects_locations_entry_link_types_test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1entryLinkTypes~1{entryLinkTypesId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/entry_link_types_iam_policies/methods/projects_locations_entry_link_types_get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/entry_link_types_iam_policies/methods/projects_locations_entry_link_types_set_iam_policy
        delete: []
    governance_rules_iam_policies:
      id: google.dataplex.governance_rules_iam_policies
      name: governance_rules_iam_policies
      title: Governance_rules_iam_policies
      methods:
        projects_locations_governance_rules_set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1governanceRules~1{governanceRulesId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_governance_rules_get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1governanceRules~1{governanceRulesId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        projects_locations_governance_rules_test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1governanceRules~1{governanceRulesId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/governance_rules_iam_policies/methods/projects_locations_governance_rules_get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/governance_rules_iam_policies/methods/projects_locations_governance_rules_set_iam_policy
        delete: []
    glossaries_iam_policies:
      id: google.dataplex.glossaries_iam_policies
      name: glossaries_iam_policies
      title: Glossaries_iam_policies
      methods:
        projects_locations_glossaries_set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1glossaries~1{glossariesId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_glossaries_get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1glossaries~1{glossariesId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        projects_locations_glossaries_test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1glossaries~1{glossariesId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/glossaries_iam_policies/methods/projects_locations_glossaries_get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/glossaries_iam_policies/methods/projects_locations_glossaries_set_iam_policy
        delete: []
    categories_iam_policies:
      id: google.dataplex.categories_iam_policies
      name: categories_iam_policies
      title: Categories_iam_policies
      methods:
        projects_locations_glossaries_categories_set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1glossaries~1{glossariesId}~1categories~1{categoriesId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_glossaries_categories_get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1glossaries~1{glossariesId}~1categories~1{categoriesId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        projects_locations_glossaries_categories_test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1glossaries~1{glossariesId}~1categories~1{categoriesId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/categories_iam_policies/methods/projects_locations_glossaries_categories_get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/categories_iam_policies/methods/projects_locations_glossaries_categories_set_iam_policy
        delete: []
    terms_iam_policies:
      id: google.dataplex.terms_iam_policies
      name: terms_iam_policies
      title: Terms_iam_policies
      methods:
        projects_locations_glossaries_terms_set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1glossaries~1{glossariesId}~1terms~1{termsId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_glossaries_terms_get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1glossaries~1{glossariesId}~1terms~1{termsId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        projects_locations_glossaries_terms_test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1glossaries~1{glossariesId}~1terms~1{termsId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/terms_iam_policies/methods/projects_locations_glossaries_terms_get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/terms_iam_policies/methods/projects_locations_glossaries_terms_set_iam_policy
        delete: []
    encryption_configs_iam_policies:
      id: google.dataplex.encryption_configs_iam_policies
      name: encryption_configs_iam_policies
      title: Encryption_configs_iam_policies
      methods:
        organizations_locations_encryption_configs_set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1encryptionConfigs~1{encryptionConfigsId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_encryption_configs_get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1encryptionConfigs~1{encryptionConfigsId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        organizations_locations_encryption_configs_test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1encryptionConfigs~1{encryptionConfigsId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/encryption_configs_iam_policies/methods/organizations_locations_encryption_configs_get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/encryption_configs_iam_policies/methods/organizations_locations_encryption_configs_set_iam_policy
        delete: []
paths:
  /v1/projects/{projectsId}/locations/{locationsId}:lookupEntry:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: >-
        Looks up a single Entry by name using the permission on the source
        system.
      operationId: dataplex.projects.locations.lookupEntry
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Entry'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: aspectTypes
          schema:
            type: string
        - in: query
          name: paths
          schema:
            type: string
        - in: query
          name: entry
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:searchEntries:
    parameters: *ref_1
    post:
      description: Searches for Entries matching the given query and scope.
      operationId: dataplex.projects.locations.searchEntries
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDataplexV1SearchEntriesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: query
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: scope
          schema:
            type: string
  /v1/projects/{projectsId}/locations:
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: dataplex.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudLocationListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: dataplex.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudLocationLocation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns UNIMPLEMENTED.
      operationId: dataplex.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: dataplex.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        google.rpc.Code.UNIMPLEMENTED.
      operationId: dataplex.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to Code.CANCELLED.
      operationId: dataplex.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleLongrunningCancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/entryTypes:
    parameters: *ref_1
    post:
      description: Creates an EntryType.
      operationId: dataplex.projects.locations.entryTypes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1EntryType'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: entryTypeId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
    get:
      description: Lists EntryType resources in a project and location.
      operationId: dataplex.projects.locations.entryTypes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDataplexV1ListEntryTypesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/entryTypes/{entryTypesId}:
    parameters: *ref_1
    patch:
      description: Updates an EntryType.
      operationId: dataplex.projects.locations.entryTypes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1EntryType'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryTypesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: validateOnly
          schema:
            type: boolean
    delete:
      description: Deletes an EntryType.
      operationId: dataplex.projects.locations.entryTypes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryTypesId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
    get:
      description: Gets an EntryType.
      operationId: dataplex.projects.locations.entryTypes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1EntryType'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryTypesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/entryTypes/{entryTypesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and
        PERMISSION_DENIED errors.
      operationId: dataplex.projects.locations.entryTypes.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryTypesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/entryTypes/{entryTypesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.entryTypes.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryTypesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/entryTypes/{entryTypesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a NOT_FOUND error.Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: dataplex.projects.locations.entryTypes.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryTypesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/aspectTypes:
    parameters: *ref_1
    post:
      description: Creates an AspectType.
      operationId: dataplex.projects.locations.aspectTypes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1AspectType'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: aspectTypeId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
    get:
      description: Lists AspectType resources in a project and location.
      operationId: dataplex.projects.locations.aspectTypes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDataplexV1ListAspectTypesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/aspectTypes/{aspectTypesId}:
    parameters: *ref_1
    patch:
      description: Updates an AspectType.
      operationId: dataplex.projects.locations.aspectTypes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1AspectType'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: aspectTypesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: validateOnly
          schema:
            type: boolean
    delete:
      description: Deletes an AspectType.
      operationId: dataplex.projects.locations.aspectTypes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: aspectTypesId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
    get:
      description: Gets an AspectType.
      operationId: dataplex.projects.locations.aspectTypes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1AspectType'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: aspectTypesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/aspectTypes/{aspectTypesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and
        PERMISSION_DENIED errors.
      operationId: dataplex.projects.locations.aspectTypes.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: aspectTypesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/aspectTypes/{aspectTypesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.aspectTypes.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: aspectTypesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/aspectTypes/{aspectTypesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a NOT_FOUND error.Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: dataplex.projects.locations.aspectTypes.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: aspectTypesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/entryGroups:
    parameters: *ref_1
    post:
      description: Creates an EntryGroup.
      operationId: dataplex.projects.locations.entryGroups.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1EntryGroup'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: entryGroupId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
    get:
      description: Lists EntryGroup resources in a project and location.
      operationId: dataplex.projects.locations.entryGroups.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDataplexV1ListEntryGroupsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}:
    parameters: *ref_1
    patch:
      description: Updates an EntryGroup.
      operationId: dataplex.projects.locations.entryGroups.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1EntryGroup'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryGroupsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: validateOnly
          schema:
            type: boolean
    delete:
      description: Deletes an EntryGroup.
      operationId: dataplex.projects.locations.entryGroups.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryGroupsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
    get:
      description: Gets an EntryGroup.
      operationId: dataplex.projects.locations.entryGroups.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1EntryGroup'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryGroupsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and
        PERMISSION_DENIED errors.
      operationId: dataplex.projects.locations.entryGroups.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryGroupsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.entryGroups.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryGroupsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a NOT_FOUND error.Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: dataplex.projects.locations.entryGroups.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryGroupsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/entries:
    parameters: *ref_1
    post:
      description: Creates an Entry.
      operationId: dataplex.projects.locations.entryGroups.entries.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Entry'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Entry'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryGroupsId
          required: true
          schema:
            type: string
        - in: query
          name: entryId
          schema:
            type: string
    get:
      description: Lists Entries within an EntryGroup.
      operationId: dataplex.projects.locations.entryGroups.entries.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListEntriesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryGroupsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/entries/{entriesId}:
    parameters: *ref_1
    patch:
      description: Updates an Entry.
      operationId: dataplex.projects.locations.entryGroups.entries.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Entry'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Entry'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryGroupsId
          required: true
          schema:
            type: string
        - in: path
          name: entriesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: deleteMissingAspects
          schema:
            type: boolean
        - in: query
          name: aspectKeys
          schema:
            type: string
    delete:
      description: Deletes an Entry.
      operationId: dataplex.projects.locations.entryGroups.entries.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Entry'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryGroupsId
          required: true
          schema:
            type: string
        - in: path
          name: entriesId
          required: true
          schema:
            type: string
    get:
      description: Gets an Entry.
      operationId: dataplex.projects.locations.entryGroups.entries.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Entry'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryGroupsId
          required: true
          schema:
            type: string
        - in: path
          name: entriesId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: aspectTypes
          schema:
            type: string
        - in: query
          name: paths
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/metadataJobs:
    parameters: *ref_1
    post:
      description: >-
        Creates a metadata job. For example, use a metadata job to import
        Dataplex Catalog entries and aspects from a third-party system into
        Dataplex.
      operationId: dataplex.projects.locations.metadataJobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1MetadataJob'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: metadataJobId
          schema:
            type: string
    get:
      description: Lists metadata jobs.
      operationId: dataplex.projects.locations.metadataJobs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDataplexV1ListMetadataJobsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/metadataJobs/{metadataJobsId}:
    parameters: *ref_1
    get:
      description: Gets a metadata job.
      operationId: dataplex.projects.locations.metadataJobs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1MetadataJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataJobsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/metadataJobs/{metadataJobsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Cancels a metadata job.If you cancel a metadata import job that is in
        progress, the changes in the job might be partially applied. We
        recommend that you reset the state of the entry groups in your project
        by running another metadata job that reverts the changes from the
        canceled job.
      operationId: dataplex.projects.locations.metadataJobs.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDataplexV1CancelMetadataJobRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: metadataJobsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and
        PERMISSION_DENIED errors.
      operationId: dataplex.projects.locations.lakes.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.lakes.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a NOT_FOUND error.Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: dataplex.projects.locations.lakes.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes:
    parameters: *ref_1
    post:
      description: Creates a lake resource.
      operationId: dataplex.projects.locations.lakes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Lake'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: lakeId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
    get:
      description: Lists lake resources in a project and location.
      operationId: dataplex.projects.locations.lakes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListLakesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}:
    parameters: *ref_1
    patch:
      description: Updates a lake resource.
      operationId: dataplex.projects.locations.lakes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Lake'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: validateOnly
          schema:
            type: boolean
    delete:
      description: >-
        Deletes a lake resource. All zones within the lake must be deleted
        before the lake can be deleted.
      operationId: dataplex.projects.locations.lakes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
    get:
      description: Retrieves a lake resource.
      operationId: dataplex.projects.locations.lakes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Lake'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and
        PERMISSION_DENIED errors.
      operationId: dataplex.projects.locations.lakes.zones.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.lakes.zones.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a NOT_FOUND error.Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: dataplex.projects.locations.lakes.zones.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones:
    parameters: *ref_1
    post:
      description: Creates a zone resource within a lake.
      operationId: dataplex.projects.locations.lakes.zones.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Zone'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: zoneId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
    get:
      description: Lists zone resources in a lake.
      operationId: dataplex.projects.locations.lakes.zones.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListZonesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}:
    parameters: *ref_1
    patch:
      description: Updates a zone resource.
      operationId: dataplex.projects.locations.lakes.zones.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Zone'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: validateOnly
          schema:
            type: boolean
    delete:
      description: >-
        Deletes a zone resource. All assets within a zone must be deleted before
        the zone can be deleted.
      operationId: dataplex.projects.locations.lakes.zones.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
    get:
      description: Retrieves a zone resource.
      operationId: dataplex.projects.locations.lakes.zones.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Zone'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and
        PERMISSION_DENIED errors.
      operationId: dataplex.projects.locations.lakes.zones.assets.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.lakes.zones.assets.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a NOT_FOUND error.Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: dataplex.projects.locations.lakes.zones.assets.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets:
    parameters: *ref_1
    post:
      description: Creates an asset resource.
      operationId: dataplex.projects.locations.lakes.zones.assets.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Asset'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: query
          name: assetId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
    get:
      description: Lists asset resources in a zone.
      operationId: dataplex.projects.locations.lakes.zones.assets.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListAssetsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}:
    parameters: *ref_1
    patch:
      description: Updates an asset resource.
      operationId: dataplex.projects.locations.lakes.zones.assets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Asset'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: validateOnly
          schema:
            type: boolean
    delete:
      description: >-
        Deletes an asset resource. The referenced storage resource is detached
        (default) or deleted based on the associated Lifecycle policy.
      operationId: dataplex.projects.locations.lakes.zones.assets.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
    get:
      description: Retrieves an asset resource.
      operationId: dataplex.projects.locations.lakes.zones.assets.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Asset'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}/actions:
    parameters: *ref_1
    get:
      description: Lists action resources in an asset.
      operationId: dataplex.projects.locations.lakes.zones.assets.actions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListActionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities:
    parameters: *ref_1
    post:
      description: Create a metadata entity.
      operationId: dataplex.projects.locations.lakes.zones.entities.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Entity'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Entity'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
    get:
      description: List metadata entities in a zone.
      operationId: dataplex.projects.locations.lakes.zones.entities.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListEntitiesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities/{entitiesId}:
    parameters: *ref_1
    put:
      description: Update a metadata entity. Only supports full resource update.
      operationId: dataplex.projects.locations.lakes.zones.entities.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Entity'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Entity'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: entitiesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
    delete:
      description: Delete a metadata entity.
      operationId: dataplex.projects.locations.lakes.zones.entities.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: entitiesId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
    get:
      description: Get a metadata entity.
      operationId: dataplex.projects.locations.lakes.zones.entities.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Entity'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: entitiesId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities/{entitiesId}/partitions:
    parameters: *ref_1
    post:
      description: Create a metadata partition.
      operationId: dataplex.projects.locations.lakes.zones.entities.partitions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Partition'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Partition'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: entitiesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
    get:
      description: List metadata partitions of an entity.
      operationId: dataplex.projects.locations.lakes.zones.entities.partitions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDataplexV1ListPartitionsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: entitiesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities/{entitiesId}/partitions/{partitionsId}:
    parameters: *ref_1
    delete:
      description: Delete a metadata partition.
      operationId: dataplex.projects.locations.lakes.zones.entities.partitions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: entitiesId
          required: true
          schema:
            type: string
        - in: path
          name: partitionsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
    get:
      description: Get a metadata partition of an entity.
      operationId: dataplex.projects.locations.lakes.zones.entities.partitions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Partition'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: entitiesId
          required: true
          schema:
            type: string
        - in: path
          name: partitionsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/actions:
    parameters: *ref_1
    get:
      description: Lists action resources in a zone.
      operationId: dataplex.projects.locations.lakes.zones.actions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListActionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and
        PERMISSION_DENIED errors.
      operationId: dataplex.projects.locations.lakes.tasks.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.lakes.tasks.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a NOT_FOUND error.Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: dataplex.projects.locations.lakes.tasks.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks:
    parameters: *ref_1
    post:
      description: Creates a task resource within a lake.
      operationId: dataplex.projects.locations.lakes.tasks.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Task'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: taskId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
    get:
      description: Lists tasks under the given lake.
      operationId: dataplex.projects.locations.lakes.tasks.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListTasksResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}:
    parameters: *ref_1
    patch:
      description: Update the task resource.
      operationId: dataplex.projects.locations.lakes.tasks.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Task'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: validateOnly
          schema:
            type: boolean
    delete:
      description: Delete the task resource.
      operationId: dataplex.projects.locations.lakes.tasks.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
    get:
      description: Get task resource.
      operationId: dataplex.projects.locations.lakes.tasks.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Task'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}:run:
    parameters: *ref_1
    post:
      description: Run an on demand execution of a Task.
      operationId: dataplex.projects.locations.lakes.tasks.run
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1RunTaskRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1RunTaskResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}/jobs:
    parameters: *ref_1
    get:
      description: Lists Jobs under the given task.
      operationId: dataplex.projects.locations.lakes.tasks.jobs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListJobsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}/jobs/{jobsId}:
    parameters: *ref_1
    get:
      description: Get job resource.
      operationId: dataplex.projects.locations.lakes.tasks.jobs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Job'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}/jobs/{jobsId}:cancel:
    parameters: *ref_1
    post:
      description: Cancel jobs running for the task resource.
      operationId: dataplex.projects.locations.lakes.tasks.jobs.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1CancelJobRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and
        PERMISSION_DENIED errors.
      operationId: dataplex.projects.locations.lakes.environments.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.lakes.environments.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a NOT_FOUND error.Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: dataplex.projects.locations.lakes.environments.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments:
    parameters: *ref_1
    post:
      description: Create an environment resource.
      operationId: dataplex.projects.locations.lakes.environments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Environment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: environmentId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
    get:
      description: Lists environments under the given lake.
      operationId: dataplex.projects.locations.lakes.environments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDataplexV1ListEnvironmentsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}:
    parameters: *ref_1
    patch:
      description: Update the environment resource.
      operationId: dataplex.projects.locations.lakes.environments.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Environment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: validateOnly
          schema:
            type: boolean
    delete:
      description: >-
        Delete the environment resource. All the child resources must have been
        deleted before environment deletion can be initiated.
      operationId: dataplex.projects.locations.lakes.environments.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
    get:
      description: Get environment resource.
      operationId: dataplex.projects.locations.lakes.environments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Environment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}/sessions:
    parameters: *ref_1
    get:
      description: Lists session resources in an environment.
      operationId: dataplex.projects.locations.lakes.environments.sessions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListSessionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems:
    parameters: *ref_1
    post:
      description: Create a content.
      operationId: dataplex.projects.locations.lakes.contentitems.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
    get:
      description: List content.
      operationId: dataplex.projects.locations.lakes.contentitems.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListContentResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems/{contentitemsId}:
    parameters: *ref_1
    patch:
      description: Update a content. Only supports full resource update.
      operationId: dataplex.projects.locations.lakes.contentitems.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentitemsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: validateOnly
          schema:
            type: boolean
    delete:
      description: Delete a content.
      operationId: dataplex.projects.locations.lakes.contentitems.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentitemsId
          required: true
          schema:
            type: string
    get:
      description: Get a content resource.
      operationId: dataplex.projects.locations.lakes.contentitems.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentitemsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems/{contentitemsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a contentitem resource. A NOT_FOUND
        error is returned if the resource does not exist. An empty policy is
        returned if the resource exists but does not have a policy set on
        it.Caller must have Google IAM dataplex.content.getIamPolicy permission
        on the resource.
      operationId: dataplex.projects.locations.lakes.contentitems.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentitemsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems/{contentitemsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified contentitem resource.
        Replaces any existing policy.Caller must have Google IAM
        dataplex.content.setIamPolicy permission on the resource.
      operationId: dataplex.projects.locations.lakes.contentitems.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentitemsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems/{contentitemsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns the caller's permissions on a resource. If the resource does not
        exist, an empty set of permissions is returned (a NOT_FOUND error is not
        returned).A caller is not required to have Google IAM permission to make
        this request.Note: This operation is designed to be used for building
        permission-aware UIs and command-line tools, not for authorization
        checking. This operation may "fail open" without warning.
      operationId: dataplex.projects.locations.lakes.contentitems.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentitemsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content:
    parameters: *ref_1
    post:
      description: Create a content.
      operationId: dataplex.projects.locations.lakes.content.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
    get:
      description: List content.
      operationId: dataplex.projects.locations.lakes.content.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListContentResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content/{contentId}:
    parameters: *ref_1
    patch:
      description: Update a content. Only supports full resource update.
      operationId: dataplex.projects.locations.lakes.content.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: validateOnly
          schema:
            type: boolean
    delete:
      description: Delete a content.
      operationId: dataplex.projects.locations.lakes.content.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentId
          required: true
          schema:
            type: string
    get:
      description: Get a content resource.
      operationId: dataplex.projects.locations.lakes.content.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content/{contentId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a contentitem resource. A NOT_FOUND
        error is returned if the resource does not exist. An empty policy is
        returned if the resource exists but does not have a policy set on
        it.Caller must have Google IAM dataplex.content.getIamPolicy permission
        on the resource.
      operationId: dataplex.projects.locations.lakes.content.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content/{contentId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified contentitem resource.
        Replaces any existing policy.Caller must have Google IAM
        dataplex.content.setIamPolicy permission on the resource.
      operationId: dataplex.projects.locations.lakes.content.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content/{contentId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns the caller's permissions on a resource. If the resource does not
        exist, an empty set of permissions is returned (a NOT_FOUND error is not
        returned).A caller is not required to have Google IAM permission to make
        this request.Note: This operation is designed to be used for building
        permission-aware UIs and command-line tools, not for authorization
        checking. This operation may "fail open" without warning.
      operationId: dataplex.projects.locations.lakes.content.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/actions:
    parameters: *ref_1
    get:
      description: Lists action resources in a lake.
      operationId: dataplex.projects.locations.lakes.actions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListActionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and
        PERMISSION_DENIED errors.
      operationId: dataplex.projects.locations.dataScans.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.dataScans.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a NOT_FOUND error.Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: dataplex.projects.locations.dataScans.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataScans:
    parameters: *ref_1
    post:
      description: Creates a DataScan resource.
      operationId: dataplex.projects.locations.dataScans.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1DataScan'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: dataScanId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
    get:
      description: Lists DataScans.
      operationId: dataplex.projects.locations.dataScans.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDataplexV1ListDataScansResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}:
    parameters: *ref_1
    patch:
      description: Updates a DataScan resource.
      operationId: dataplex.projects.locations.dataScans.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1DataScan'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: validateOnly
          schema:
            type: boolean
    delete:
      description: Deletes a DataScan resource.
      operationId: dataplex.projects.locations.dataScans.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
    get:
      description: Gets a DataScan resource.
      operationId: dataplex.projects.locations.dataScans.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1DataScan'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}:run:
    parameters: *ref_1
    post:
      description: Runs an on-demand execution of a DataScan
      operationId: dataplex.projects.locations.dataScans.run
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1RunDataScanRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1RunDataScanResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}:generateDataQualityRules:
    parameters: *ref_1
    post:
      description: >-
        Generates recommended data quality rules based on the results of a data
        profiling scan.Use the recommendations to build rules for a data quality
        scan.
      operationId: dataplex.projects.locations.dataScans.generateDataQualityRules
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDataplexV1GenerateDataQualityRulesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDataplexV1GenerateDataQualityRulesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}/jobs/{jobsId}:
    parameters: *ref_1
    get:
      description: Gets a DataScanJob resource.
      operationId: dataplex.projects.locations.dataScans.jobs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1DataScanJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}/jobs:
    parameters: *ref_1
    get:
      description: Lists DataScanJobs under the given DataScan.
      operationId: dataplex.projects.locations.dataScans.jobs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDataplexV1ListDataScanJobsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}/jobs/{jobsId}:generateDataQualityRules:
    parameters: *ref_1
    post:
      description: >-
        Generates recommended data quality rules based on the results of a data
        profiling scan.Use the recommendations to build rules for a data quality
        scan.
      operationId: dataplex.projects.locations.dataScans.jobs.generateDataQualityRules
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDataplexV1GenerateDataQualityRulesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDataplexV1GenerateDataQualityRulesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and
        PERMISSION_DENIED errors.
      operationId: dataplex.projects.locations.dataTaxonomies.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.dataTaxonomies.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a NOT_FOUND error.Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: dataplex.projects.locations.dataTaxonomies.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies:
    parameters: *ref_1
    post:
      description: Create a DataTaxonomy resource.
      operationId: dataplex.projects.locations.dataTaxonomies.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1DataTaxonomy'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: dataTaxonomyId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
    get:
      description: Lists DataTaxonomy resources in a project and location.
      operationId: dataplex.projects.locations.dataTaxonomies.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDataplexV1ListDataTaxonomiesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}:
    parameters: *ref_1
    patch:
      description: Updates a DataTaxonomy resource.
      operationId: dataplex.projects.locations.dataTaxonomies.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1DataTaxonomy'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: validateOnly
          schema:
            type: boolean
    delete:
      description: >-
        Deletes a DataTaxonomy resource. All attributes within the DataTaxonomy
        must be deleted before the DataTaxonomy can be deleted.
      operationId: dataplex.projects.locations.dataTaxonomies.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
    get:
      description: Retrieves a DataTaxonomy resource.
      operationId: dataplex.projects.locations.dataTaxonomies.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1DataTaxonomy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}/attributes/{attributesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and
        PERMISSION_DENIED errors.
      operationId: dataplex.projects.locations.dataTaxonomies.attributes.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
        - in: path
          name: attributesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}/attributes/{attributesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.dataTaxonomies.attributes.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
        - in: path
          name: attributesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}/attributes/{attributesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a NOT_FOUND error.Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: dataplex.projects.locations.dataTaxonomies.attributes.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
        - in: path
          name: attributesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}/attributes:
    parameters: *ref_1
    post:
      description: Create a DataAttribute resource.
      operationId: dataplex.projects.locations.dataTaxonomies.attributes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1DataAttribute'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
        - in: query
          name: dataAttributeId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
    get:
      description: Lists Data Attribute resources in a DataTaxonomy.
      operationId: dataplex.projects.locations.dataTaxonomies.attributes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDataplexV1ListDataAttributesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}/attributes/{attributesId}:
    parameters: *ref_1
    patch:
      description: Updates a DataAttribute resource.
      operationId: dataplex.projects.locations.dataTaxonomies.attributes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1DataAttribute'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
        - in: path
          name: attributesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: validateOnly
          schema:
            type: boolean
    delete:
      description: Deletes a Data Attribute resource.
      operationId: dataplex.projects.locations.dataTaxonomies.attributes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
        - in: path
          name: attributesId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
    get:
      description: Retrieves a Data Attribute resource.
      operationId: dataplex.projects.locations.dataTaxonomies.attributes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1DataAttribute'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
        - in: path
          name: attributesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataAttributeBindings/{dataAttributeBindingsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and
        PERMISSION_DENIED errors.
      operationId: dataplex.projects.locations.dataAttributeBindings.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataAttributeBindingsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataAttributeBindings/{dataAttributeBindingsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.dataAttributeBindings.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataAttributeBindingsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/dataAttributeBindings/{dataAttributeBindingsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a NOT_FOUND error.Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: dataplex.projects.locations.dataAttributeBindings.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataAttributeBindingsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataAttributeBindings:
    parameters: *ref_1
    post:
      description: Create a DataAttributeBinding resource.
      operationId: dataplex.projects.locations.dataAttributeBindings.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1DataAttributeBinding'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: dataAttributeBindingId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
    get:
      description: Lists DataAttributeBinding resources in a project and location.
      operationId: dataplex.projects.locations.dataAttributeBindings.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDataplexV1ListDataAttributeBindingsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dataAttributeBindings/{dataAttributeBindingsId}:
    parameters: *ref_1
    patch:
      description: Updates a DataAttributeBinding resource.
      operationId: dataplex.projects.locations.dataAttributeBindings.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1DataAttributeBinding'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataAttributeBindingsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: validateOnly
          schema:
            type: boolean
    delete:
      description: >-
        Deletes a DataAttributeBinding resource. All attributes within the
        DataAttributeBinding must be deleted before the DataAttributeBinding can
        be deleted.
      operationId: dataplex.projects.locations.dataAttributeBindings.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataAttributeBindingsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
    get:
      description: Retrieves a DataAttributeBinding resource.
      operationId: dataplex.projects.locations.dataAttributeBindings.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1DataAttributeBinding'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataAttributeBindingsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/entryLinkTypes/{entryLinkTypesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and
        PERMISSION_DENIED errors.
      operationId: dataplex.projects.locations.entryLinkTypes.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryLinkTypesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/entryLinkTypes/{entryLinkTypesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.entryLinkTypes.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryLinkTypesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/entryLinkTypes/{entryLinkTypesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a NOT_FOUND error.Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: dataplex.projects.locations.entryLinkTypes.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryLinkTypesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/governanceRules/{governanceRulesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and
        PERMISSION_DENIED errors.
      operationId: dataplex.projects.locations.governanceRules.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: governanceRulesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/governanceRules/{governanceRulesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.governanceRules.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: governanceRulesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/governanceRules/{governanceRulesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a NOT_FOUND error.Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: dataplex.projects.locations.governanceRules.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: governanceRulesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/glossaries/{glossariesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and
        PERMISSION_DENIED errors.
      operationId: dataplex.projects.locations.glossaries.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: glossariesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/glossaries/{glossariesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.glossaries.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: glossariesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/glossaries/{glossariesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a NOT_FOUND error.Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: dataplex.projects.locations.glossaries.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: glossariesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/glossaries/{glossariesId}/categories/{categoriesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and
        PERMISSION_DENIED errors.
      operationId: dataplex.projects.locations.glossaries.categories.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: glossariesId
          required: true
          schema:
            type: string
        - in: path
          name: categoriesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/glossaries/{glossariesId}/categories/{categoriesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.glossaries.categories.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: glossariesId
          required: true
          schema:
            type: string
        - in: path
          name: categoriesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/glossaries/{glossariesId}/categories/{categoriesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a NOT_FOUND error.Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: dataplex.projects.locations.glossaries.categories.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: glossariesId
          required: true
          schema:
            type: string
        - in: path
          name: categoriesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/glossaries/{glossariesId}/terms/{termsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and
        PERMISSION_DENIED errors.
      operationId: dataplex.projects.locations.glossaries.terms.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: glossariesId
          required: true
          schema:
            type: string
        - in: path
          name: termsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/glossaries/{glossariesId}/terms/{termsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.glossaries.terms.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: glossariesId
          required: true
          schema:
            type: string
        - in: path
          name: termsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/glossaries/{glossariesId}/terms/{termsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a NOT_FOUND error.Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: dataplex.projects.locations.glossaries.terms.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: glossariesId
          required: true
          schema:
            type: string
        - in: path
          name: termsId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: dataplex.organizations.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        google.rpc.Code.UNIMPLEMENTED.
      operationId: dataplex.organizations.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to Code.CANCELLED.
      operationId: dataplex.organizations.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleLongrunningCancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/encryptionConfigs/{encryptionConfigsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and
        PERMISSION_DENIED errors.
      operationId: dataplex.organizations.locations.encryptionConfigs.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: encryptionConfigsId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/encryptionConfigs/{encryptionConfigsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: dataplex.organizations.locations.encryptionConfigs.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: encryptionConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/organizations/{organizationsId}/locations/{locationsId}/encryptionConfigs/{encryptionConfigsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a NOT_FOUND error.Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: dataplex.organizations.locations.encryptionConfigs.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: encryptionConfigsId
          required: true
          schema:
            type: string
