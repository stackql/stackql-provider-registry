openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Cloud Dataplex API
  description: Dataplex API is used to manage the lifecycle of data lakes.
  version: v1
  x-discovery-doc-revision: '20230721'
  x-generated-date: '2023-08-01'
externalDocs:
  url: 'https://cloud.google.com/dataplex/docs'
servers:
  - url: 'https://dataplex.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    GoogleCloudDataplexV1AssetResourceStatus:
      properties:
        message:
          type: string
          description: Additional information about the current state.
        state:
          type: string
          enumDescriptions:
            - State unspecified.
            - Resource does not have any errors.
            - Resource has errors.
          description: The current state of the managed resource.
          enum:
            - STATE_UNSPECIFIED
            - READY
            - ERROR
        updateTime:
          description: Last update time of the status.
          format: google-datetime
          type: string
        managedAccessIdentity:
          description: Output only. Service account associated with the BigQuery Connection.
          type: string
          readOnly: true
      description: Status of the resource referenced by an asset.
      id: GoogleCloudDataplexV1AssetResourceStatus
      type: object
    GoogleCloudDataplexV1TaskExecutionStatus:
      id: GoogleCloudDataplexV1TaskExecutionStatus
      type: object
      description: Status of the task execution (e.g. Jobs).
      properties:
        latestJob:
          description: Output only. latest job execution
          $ref: '#/components/schemas/GoogleCloudDataplexV1Job'
          readOnly: true
        updateTime:
          format: google-datetime
          description: Output only. Last update time of the status.
          type: string
          readOnly: true
    GoogleTypeExpr:
      properties:
        title:
          description: 'Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.'
          type: string
        location:
          description: 'Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.'
          type: string
        expression:
          description: Textual representation of an expression in Common Expression Language syntax.
          type: string
        description:
          type: string
          description: 'Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.'
      type: object
      description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec.Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != ''private'' && document.type != ''internal''" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "''New message received at '' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.'
      id: GoogleTypeExpr
    Empty:
      id: Empty
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } '
      properties: {}
      type: object
    GoogleCloudDataplexV1ListPartitionsResponse:
      type: object
      id: GoogleCloudDataplexV1ListPartitionsResponse
      properties:
        partitions:
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Partition'
          type: array
          description: Partitions under the specified parent entity.
        nextPageToken:
          type: string
          description: 'Token to retrieve the next page of results, or empty if there are no remaining results in the list.'
      description: List metadata partitions response.
    GoogleIamV1AuditConfig:
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs.If there are AuditConfigs for both allServices and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted.Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.'
      properties:
        auditLogConfigs:
          items:
            $ref: '#/components/schemas/GoogleIamV1AuditLogConfig'
          type: array
          description: The configuration for logging of each type of permission.
        service:
          type: string
          description: 'Specifies a service that will be enabled for audit logging. For example, storage.googleapis.com, cloudsql.googleapis.com. allServices is a special value that covers all services.'
      type: object
      id: GoogleIamV1AuditConfig
    GoogleCloudDataplexV1DataQualityRuleRegexExpectation:
      type: object
      properties:
        regex:
          description: A regular expression the column value is expected to match.
          type: string
      id: GoogleCloudDataplexV1DataQualityRuleRegexExpectation
      description: Evaluates whether each column value matches a specified regex.
    GoogleCloudDataplexV1ActionInvalidDataPartition:
      description: Action details for invalid or unsupported partitions detected by discovery.
      properties:
        expectedStructure:
          description: The issue type of InvalidDataPartition.
          type: string
          enum:
            - PARTITION_STRUCTURE_UNSPECIFIED
            - CONSISTENT_KEYS
            - HIVE_STYLE_KEYS
          enumDescriptions:
            - PartitionStructure unspecified.
            - Consistent hive-style partition definition (both raw and curated zone).
            - Hive style partition definition (curated zone only).
      type: object
      id: GoogleCloudDataplexV1ActionInvalidDataPartition
    GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources:
      properties:
        executorsCount:
          description: Optional. Total number of job executors. Executor Count should be between 2 and 100. Default=2
          format: int32
          type: integer
        maxExecutorsCount:
          format: int32
          description: 'Optional. Max configurable executors. If max_executors_count > executors_count, then auto-scaling is enabled. Max Executor Count should be between 2 and 1000. Default=1000'
          type: integer
      type: object
      id: GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources
      description: Batch compute resources associated with the task.
    GoogleCloudDataplexV1DataScanEventPostScanActionsResult:
      id: GoogleCloudDataplexV1DataScanEventPostScanActionsResult
      type: object
      description: Post scan actions result for data scan job.
      properties:
        bigqueryExportResult:
          description: The result of BigQuery export post scan action.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataScanEventPostScanActionsResultBigQueryExportResult'
    GoogleCloudDataplexV1Trigger:
      properties:
        onDemand:
          description: The scan runs once via RunDataScan API.
          $ref: '#/components/schemas/GoogleCloudDataplexV1TriggerOnDemand'
        schedule:
          description: The scan is scheduled to run periodically.
          $ref: '#/components/schemas/GoogleCloudDataplexV1TriggerSchedule'
      id: GoogleCloudDataplexV1Trigger
      description: DataScan scheduling and trigger settings.
      type: object
    GoogleCloudDataplexV1ListDataAttributeBindingsResponse:
      description: List DataAttributeBindings response.
      type: object
      id: GoogleCloudDataplexV1ListDataAttributeBindingsResponse
      properties:
        nextPageToken:
          description: 'Token to retrieve the next page of results, or empty if there are no more results in the list.'
          type: string
        dataAttributeBindings:
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1DataAttributeBinding'
          description: DataAttributeBindings under the given parent Location.
          type: array
        unreachableLocations:
          items:
            type: string
          description: Locations that could not be reached.
          type: array
    GoogleRpcStatus:
      properties:
        message:
          type: string
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
        code:
          format: int32
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
      description: 'The Status type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC (https://github.com/grpc). Each Status message contains three pieces of data: error code, error message, and error details.You can find out more about this error model and how to work with it in the API Design Guide (https://cloud.google.com/apis/design/errors).'
      id: GoogleRpcStatus
      type: object
    GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo:
      description: The profile information for a double type field.
      id: GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo
      type: object
      properties:
        average:
          type: number
          description: 'Average of non-null values in the scanned data. NaN, if the field has a NaN.'
          format: double
        standardDeviation:
          type: number
          description: 'Standard deviation of non-null values in the scanned data. NaN, if the field has a NaN.'
          format: double
        min:
          description: 'Minimum of non-null values in the scanned data. NaN, if the field has a NaN.'
          type: number
          format: double
        max:
          type: number
          format: double
          description: 'Maximum of non-null values in the scanned data. NaN, if the field has a NaN.'
        quartiles:
          type: array
          items:
            type: number
            format: double
          description: 'A quartile divides the number of data points into four parts, or quarters, of more-or-less equal size. Three main quartiles used are: The first quartile (Q1) splits off the lowest 25% of data from the highest 75%. It is also known as the lower or 25th empirical quartile, as 25% of the data is below this point. The second quartile (Q2) is the median of a data set. So, 50% of the data lies below this point. The third quartile (Q3) splits off the highest 25% of data from the lowest 75%. It is known as the upper or 75th empirical quartile, as 75% of the data lies below this point. Here, the quartiles is provided as an ordered list of quartile values for the scanned data, occurring in order Q1, median, Q3.'
    GoogleCloudDataplexV1DataQualityDimensionResult:
      description: 'DataQualityDimensionResult provides a more detailed, per-dimension view of the results.'
      id: GoogleCloudDataplexV1DataQualityDimensionResult
      type: object
      properties:
        passed:
          description: Whether the dimension passed or failed.
          type: boolean
    GoogleCloudDataplexV1AssetDiscoverySpec:
      description: Settings to manage the metadata discovery and publishing for an asset.
      id: GoogleCloudDataplexV1AssetDiscoverySpec
      properties:
        includePatterns:
          items:
            type: string
          type: array
          description: 'Optional. The list of patterns to apply for selecting data to include during discovery if only a subset of the data should considered. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.'
        schedule:
          type: string
          description: 'Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running discovery periodically. Successive discovery runs must be scheduled at least 60 minutes apart. The default value is to run discovery every 60 minutes. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *.'
        excludePatterns:
          description: 'Optional. The list of patterns to apply for selecting data to exclude during discovery. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.'
          type: array
          items:
            type: string
        csvOptions:
          description: Optional. Configuration for CSV data.
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions'
        enabled:
          type: boolean
          description: Optional. Whether discovery is enabled.
        jsonOptions:
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions'
          description: Optional. Configuration for Json data.
      type: object
    GoogleCloudDataplexV1StorageFormatCsvOptions:
      description: Describes CSV and similar semi-structured data formats.
      id: GoogleCloudDataplexV1StorageFormatCsvOptions
      type: object
      properties:
        quote:
          type: string
          description: Optional. The character used to quote column values. Accepts '"' (double quotation mark) or ''' (single quotation mark). Defaults to '"' (double quotation mark) if unspecified.
        delimiter:
          type: string
          description: 'Optional. The delimiter used to separate values. Defaults to '',''.'
        encoding:
          description: 'Optional. The character encoding of the data. Accepts "US-ASCII", "UTF-8", and "ISO-8859-1". Defaults to UTF-8 if unspecified.'
          type: string
        headerRows:
          format: int32
          type: integer
          description: Optional. The number of rows to interpret as header rows that should be skipped when reading data rows. Defaults to 0.
    GoogleCloudDataplexV1DataQualityResult:
      properties:
        dimensions:
          description: A list of results at the dimension level.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityDimensionResult'
        scannedData:
          $ref: '#/components/schemas/GoogleCloudDataplexV1ScannedData'
          description: The data scanned for this result.
        passed:
          type: boolean
          description: Overall data quality result -- true if all rules passed.
        rowCount:
          format: int64
          type: string
          description: The count of rows processed.
        postScanActionsResult:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityResultPostScanActionsResult'
          description: Output only. The result of post scan actions.
          readOnly: true
        rules:
          description: 'A list of all the rules in a job, and their results.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityRuleResult'
      type: object
      description: The output of a DataQualityScan.
      id: GoogleCloudDataplexV1DataQualityResult
    GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions:
      id: GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions
      type: object
      properties:
        encoding:
          description: Optional. The character encoding of the data. The default is UTF-8.
          type: string
        disableTypeInference:
          type: boolean
          description: 'Optional. Whether to disable the inference of data type for Json data. If true, all columns will be registered as their primitive types (strings, number or boolean).'
      description: Describe JSON data format.
    GoogleCloudDataplexV1DiscoveryEventConfigDetails:
      type: object
      description: Details about configuration events.
      properties:
        parameters:
          description: 'A list of discovery configuration parameters in effect. The keys are the field paths within DiscoverySpec. Eg. includePatterns, excludePatterns, csvOptions.disableTypeInference, etc.'
          type: object
          additionalProperties:
            type: string
      id: GoogleCloudDataplexV1DiscoveryEventConfigDetails
    GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfo:
      id: GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfo
      properties:
        quartiles:
          type: array
          description: 'A quartile divides the number of data points into four parts, or quarters, of more-or-less equal size. Three main quartiles used are: The first quartile (Q1) splits off the lowest 25% of data from the highest 75%. It is also known as the lower or 25th empirical quartile, as 25% of the data is below this point. The second quartile (Q2) is the median of a data set. So, 50% of the data lies below this point. The third quartile (Q3) splits off the highest 25% of data from the lowest 75%. It is known as the upper or 75th empirical quartile, as 75% of the data lies below this point. Here, the quartiles is provided as an ordered list of approximate quartile values for the scanned data, occurring in order Q1, median, Q3.'
          items:
            format: int64
            type: string
        average:
          format: double
          type: number
          description: 'Average of non-null values in the scanned data. NaN, if the field has a NaN.'
        min:
          format: int64
          description: 'Minimum of non-null values in the scanned data. NaN, if the field has a NaN.'
          type: string
        standardDeviation:
          format: double
          type: number
          description: 'Standard deviation of non-null values in the scanned data. NaN, if the field has a NaN.'
        max:
          format: int64
          type: string
          description: 'Maximum of non-null values in the scanned data. NaN, if the field has a NaN.'
      type: object
      description: The profile information for an integer type field.
    GoogleCloudDataplexV1JobEvent:
      id: GoogleCloudDataplexV1JobEvent
      type: object
      properties:
        retries:
          type: integer
          description: The number of retries.
          format: int32
        startTime:
          description: The time when the job started running.
          format: google-datetime
          type: string
        type:
          enum:
            - TYPE_UNSPECIFIED
            - SPARK
            - NOTEBOOK
          enumDescriptions:
            - Unspecified job type.
            - Spark jobs.
            - Notebook jobs.
          description: The type of the job.
          type: string
        executionTrigger:
          type: string
          enum:
            - EXECUTION_TRIGGER_UNSPECIFIED
            - TASK_CONFIG
            - RUN_REQUEST
          enumDescriptions:
            - The job execution trigger is unspecified.
            - The job was triggered by Dataplex based on trigger spec from task definition.
            - The job was triggered by the explicit call of Task API.
          description: Job execution trigger.
        jobId:
          description: The unique id identifying the job.
          type: string
        state:
          enumDescriptions:
            - Unspecified job state.
            - Job successfully completed.
            - Job was unsuccessful.
            - Job was cancelled by the user.
            - Job was cancelled or aborted via the service executing the job.
          enum:
            - STATE_UNSPECIFIED
            - SUCCEEDED
            - FAILED
            - CANCELLED
            - ABORTED
          description: The job state on completion.
          type: string
        message:
          type: string
          description: The log message.
        service:
          description: The service used to execute the job.
          type: string
          enumDescriptions:
            - Unspecified service.
            - Cloud Dataproc.
          enum:
            - SERVICE_UNSPECIFIED
            - DATAPROC
        serviceJob:
          description: The reference to the job within the service.
          type: string
        endTime:
          description: The time when the job ended running.
          type: string
          format: google-datetime
      description: The payload associated with Job logs that contains events describing jobs that have run within a Lake.
    GoogleCloudDataplexV1ZoneResourceSpec:
      id: GoogleCloudDataplexV1ZoneResourceSpec
      type: object
      description: Settings for resources attached as assets within a zone.
      properties:
        locationType:
          enum:
            - LOCATION_TYPE_UNSPECIFIED
            - SINGLE_REGION
            - MULTI_REGION
          type: string
          description: Required. Immutable. The location type of the resources that are allowed to be attached to the assets within this zone.
          enumDescriptions:
            - Unspecified location type.
            - Resources that are associated with a single region.
            - Resources that are associated with a multi-region location.
    GoogleCloudDataplexV1StorageFormat:
      properties:
        iceberg:
          description: Optional. Additional information about iceberg tables.
          $ref: '#/components/schemas/GoogleCloudDataplexV1StorageFormatIcebergOptions'
        json:
          $ref: '#/components/schemas/GoogleCloudDataplexV1StorageFormatJsonOptions'
          description: Optional. Additional information about CSV formatted data.
        mimeType:
          type: string
          description: 'Required. The mime type descriptor for the data. Must match the pattern {type}/{subtype}. Supported values: application/x-parquet application/x-avro application/x-orc application/x-tfrecord application/x-parquet+iceberg application/x-avro+iceberg application/x-orc+iceberg application/json application/{subtypes} text/csv text/ image/{image subtype} video/{video subtype} audio/{audio subtype}'
        format:
          readOnly: true
          enum:
            - FORMAT_UNSPECIFIED
            - PARQUET
            - AVRO
            - ORC
            - CSV
            - JSON
            - IMAGE
            - AUDIO
            - VIDEO
            - TEXT
            - TFRECORD
            - OTHER
            - UNKNOWN
          description: 'Output only. The data format associated with the stored data, which represents content type values. The value is inferred from mime type.'
          enumDescriptions:
            - Format unspecified.
            - Parquet-formatted structured data.
            - Avro-formatted structured data.
            - Orc-formatted structured data.
            - Csv-formatted semi-structured data.
            - Json-formatted semi-structured data.
            - Image data formats (such as jpg and png).
            - 'Audio data formats (such as mp3, and wav).'
            - Video data formats (such as mp4 and mpg).
            - Textual data formats (such as txt and xml).
            - TensorFlow record format.
            - Data that doesn't match a specific format.
            - Data of an unknown format.
          type: string
        compressionFormat:
          enumDescriptions:
            - CompressionFormat unspecified. Implies uncompressed data.
            - GZip compressed set of files.
            - BZip2 compressed set of files.
          description: 'Optional. The compression type associated with the stored data. If unspecified, the data is uncompressed.'
          enum:
            - COMPRESSION_FORMAT_UNSPECIFIED
            - GZIP
            - BZIP2
          type: string
        csv:
          $ref: '#/components/schemas/GoogleCloudDataplexV1StorageFormatCsvOptions'
          description: Optional. Additional information about CSV formatted data.
      description: Describes the format of the data within its storage location.
      id: GoogleCloudDataplexV1StorageFormat
      type: object
    GoogleCloudDataplexV1DiscoveryEvent:
      description: The payload associated with Discovery data processing.
      id: GoogleCloudDataplexV1DiscoveryEvent
      properties:
        action:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DiscoveryEventActionDetails'
          description: Details about the action associated with the event.
        partition:
          description: Details about the partition associated with the event.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DiscoveryEventPartitionDetails'
        type:
          enum:
            - EVENT_TYPE_UNSPECIFIED
            - CONFIG
            - ENTITY_CREATED
            - ENTITY_UPDATED
            - ENTITY_DELETED
            - PARTITION_CREATED
            - PARTITION_UPDATED
            - PARTITION_DELETED
          description: The type of the event being logged.
          enumDescriptions:
            - An unspecified event type.
            - An event representing discovery configuration in effect.
            - An event representing a metadata entity being created.
            - An event representing a metadata entity being updated.
            - An event representing a metadata entity being deleted.
            - An event representing a partition being created.
            - An event representing a partition being updated.
            - An event representing a partition being deleted.
          type: string
        message:
          type: string
          description: The log message.
        zoneId:
          description: The id of the associated zone.
          type: string
        dataLocation:
          description: The data location associated with the event.
          type: string
        config:
          description: Details about discovery configuration in effect.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DiscoveryEventConfigDetails'
        lakeId:
          description: The id of the associated lake.
          type: string
        entity:
          description: Details about the entity associated with the event.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DiscoveryEventEntityDetails'
        assetId:
          description: The id of the associated asset.
          type: string
      type: object
    GoogleCloudDataplexV1ListEntitiesResponse:
      type: object
      properties:
        nextPageToken:
          description: 'Token to retrieve the next page of results, or empty if there are no remaining results in the list.'
          type: string
        entities:
          description: Entities in the specified parent zone.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Entity'
      description: List metadata entities response.
      id: GoogleCloudDataplexV1ListEntitiesResponse
    GoogleCloudDataplexV1DataProfileResultPostScanActionsResult:
      description: The result of post scan actions of DataProfileScan job.
      type: object
      id: GoogleCloudDataplexV1DataProfileResultPostScanActionsResult
      properties:
        bigqueryExportResult:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileResultPostScanActionsResultBigQueryExportResult'
          readOnly: true
          description: Output only. The result of BigQuery export post scan action.
    GoogleCloudDataplexV1DataScanEventDataProfileAppliedConfigs:
      type: object
      description: Applied configs for data profile type data scan job.
      properties:
        samplingPercent:
          format: float
          type: number
          description: The percentage of the records selected from the dataset for DataScan. Value ranges between 0.0 and 100.0. Value 0.0 or 100.0 imply that sampling was not applied.
        columnFilterApplied:
          description: Boolean indicating whether a column filter was applied in the DataScan job.
          type: boolean
        rowFilterApplied:
          description: Boolean indicating whether a row filter was applied in the DataScan job.
          type: boolean
      id: GoogleCloudDataplexV1DataScanEventDataProfileAppliedConfigs
    GoogleIamV1Policy:
      properties:
        etag:
          type: string
          description: 'etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the etag in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An etag is returned in the response to getIamPolicy, and systems are expected to put that etag in the request to setIamPolicy to ensure that their change will be applied to the same version of the policy.Important: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy. If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost.'
          format: byte
        bindings:
          description: 'Associates a list of members, or principals, with a role. Optionally, may specify a condition that determines how and when the bindings are applied. Each of the bindings must contain at least one principal.The bindings in a Policy can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the bindings grant 50 different roles to user:alice@example.com, and not to any other principal, then you can add another 1,450 principals to the bindings in the Policy.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleIamV1Binding'
        version:
          description: 'Specifies the format of the policy.Valid values are 0, 1, and 3. Requests that specify an invalid value are rejected.Any operation that affects conditional role bindings must specify version 3. This requirement applies to the following operations: Getting a policy that includes a conditional role binding Adding a conditional role binding to a policy Changing a conditional role binding in a policy Removing any role binding, with or without a condition, from a policy that includes conditionsImportant: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy. If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost.If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).'
          type: integer
          format: int32
        auditConfigs:
          type: array
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: '#/components/schemas/GoogleIamV1AuditConfig'
      id: GoogleIamV1Policy
      description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources.A Policy is a collection of bindings. A binding binds one or more members, or principals, to a single role. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A role is a named list of permissions; each role can be an IAM predefined role or a user-created custom role.For some types of Google Cloud resources, a binding can also specify a condition, which is a logical expression that allows access to a resource only if the expression evaluates to true. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).JSON example: { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp(''2020-10-01T00:00:00.000Z'')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } YAML example: bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the IAM documentation (https://cloud.google.com/iam/docs/).'
      type: object
    GoogleCloudDataplexV1ListEnvironmentsResponse:
      description: List environments response.
      type: object
      id: GoogleCloudDataplexV1ListEnvironmentsResponse
      properties:
        environments:
          type: array
          description: Environments under the given parent lake.
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Environment'
        nextPageToken:
          type: string
          description: 'Token to retrieve the next page of results, or empty if there are no more results in the list.'
    GoogleCloudDataplexV1LakeMetastoreStatus:
      id: GoogleCloudDataplexV1LakeMetastoreStatus
      properties:
        state:
          type: string
          enum:
            - STATE_UNSPECIFIED
            - NONE
            - READY
            - UPDATING
            - ERROR
          description: Current state of association.
          enumDescriptions:
            - Unspecified.
            - A Metastore service instance is not associated with the lake.
            - A Metastore service instance is attached to the lake.
            - Attach/detach is in progress.
            - Attach/detach could not be done due to errors.
        endpoint:
          description: The URI of the endpoint used to access the Metastore service.
          type: string
        updateTime:
          format: google-datetime
          description: Last update time of the metastore status of the lake.
          type: string
        message:
          type: string
          description: Additional information about the current status.
      type: object
      description: Status of Lake and Dataproc Metastore service instance association.
    GoogleCloudDataplexV1ResourceAccessSpec:
      type: object
      description: 'ResourceAccessSpec holds the access control configuration to be enforced on the resources, for example, Cloud Storage bucket, BigQuery dataset, BigQuery table.'
      properties:
        writers:
          description: Optional. The set of principals to be granted writer role on the resource.
          items:
            type: string
          type: array
        owners:
          items:
            type: string
          type: array
          description: Optional. The set of principals to be granted owner role on the resource.
        readers:
          description: 'Optional. The format of strings follows the pattern followed by IAM in the bindings. user:{email}, serviceAccount:{email} group:{email}. The set of principals to be granted reader role on the resource.'
          items:
            type: string
          type: array
      id: GoogleCloudDataplexV1ResourceAccessSpec
    GoogleIamV1TestIamPermissionsResponse:
      type: object
      properties:
        permissions:
          description: A subset of TestPermissionsRequest.permissions that the caller is allowed.
          items:
            type: string
          type: array
      id: GoogleIamV1TestIamPermissionsResponse
      description: Response message for TestIamPermissions method.
    GoogleCloudDataplexV1TaskNotebookTaskConfig:
      id: GoogleCloudDataplexV1TaskNotebookTaskConfig
      properties:
        fileUris:
          items:
            type: string
          description: Optional. Cloud Storage URIs of files to be placed in the working directory of each executor.
          type: array
        notebook:
          description: Required. Path to input notebook. This can be the Cloud Storage URI of the notebook file or the path to a Notebook Content. The execution args are accessible as environment variables (TASK_key=value).
          type: string
        infrastructureSpec:
          description: Optional. Infrastructure specification for the execution.
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskInfrastructureSpec'
        archiveUris:
          items:
            type: string
          type: array
          description: 'Optional. Cloud Storage URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.'
      type: object
      description: Config for running scheduled notebooks.
    GoogleLongrunningOperation:
      id: GoogleLongrunningOperation
      type: object
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        error:
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: The error result of the operation in case of failure or cancellation.
        done:
          description: 'If the value is false, it means the operation is still in progress. If true, the operation is completed, and either error or response is available.'
          type: boolean
        response:
          type: object
          description: 'The normal response of the operation in case of success. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse.'
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        name:
          type: string
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the name should be a resource name ending with operations/{unique_id}.'
        metadata:
          type: object
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
    GoogleCloudDataplexV1AssetStatus:
      type: object
      description: Aggregated status of the underlying assets of a lake or zone.
      id: GoogleCloudDataplexV1AssetStatus
      properties:
        activeAssets:
          type: integer
          format: int32
          description: Number of active assets.
        securityPolicyApplyingAssets:
          description: Number of assets that are in process of updating the security policy on attached resources.
          format: int32
          type: integer
        updateTime:
          type: string
          description: Last update time of the status.
          format: google-datetime
    GoogleCloudDataplexV1Job:
      id: GoogleCloudDataplexV1Job
      properties:
        state:
          readOnly: true
          description: Output only. Execution state for the job.
          type: string
          enumDescriptions:
            - The job state is unknown.
            - The job is running.
            - The job is cancelling.
            - The job cancellation was successful.
            - The job completed successfully.
            - The job is no longer running due to an error.
            - The job was cancelled outside of Dataplex.
          enum:
            - STATE_UNSPECIFIED
            - RUNNING
            - CANCELLING
            - CANCELLED
            - SUCCEEDED
            - FAILED
            - ABORTED
        retryCount:
          readOnly: true
          description: Output only. The number of times the job has been retried (excluding the initial attempt).
          type: integer
          format: uint32
        uid:
          type: string
          description: Output only. System generated globally unique ID for the job.
          readOnly: true
        endTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time when the job ended.
        executionSpec:
          description: Output only. Spec related to how a task is executed.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskExecutionSpec'
        trigger:
          readOnly: true
          type: string
          enum:
            - TRIGGER_UNSPECIFIED
            - TASK_CONFIG
            - RUN_REQUEST
          description: Output only. Job execution trigger.
          enumDescriptions:
            - The trigger is unspecified.
            - The job was triggered by Dataplex based on trigger spec from task definition.
            - The job was triggered by the explicit call of Task API.
        startTime:
          type: string
          readOnly: true
          description: Output only. The time when the job was started.
          format: google-datetime
        message:
          type: string
          description: Output only. Additional information about the current state.
          readOnly: true
        service:
          enumDescriptions:
            - Service used to run the job is unspecified.
            - Dataproc service is used to run this job.
          enum:
            - SERVICE_UNSPECIFIED
            - DATAPROC
          description: Output only. The underlying service running a job.
          type: string
          readOnly: true
        labels:
          description: Output only. User-defined labels for the task.
          additionalProperties:
            type: string
          readOnly: true
          type: object
        name:
          readOnly: true
          description: 'Output only. The relative resource name of the job, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/tasks/{task_id}/jobs/{job_id}.'
          type: string
        serviceJob:
          description: Output only. The full resource name for the job run under a particular service.
          type: string
          readOnly: true
      description: A job represents an instance of a task.
      type: object
    GoogleCloudDataplexV1Environment:
      id: GoogleCloudDataplexV1Environment
      description: Environment represents a user-visible compute infrastructure for analytics within a lake.
      properties:
        sessionSpec:
          description: Optional. Configuration for sessions created for this environment.
          $ref: '#/components/schemas/GoogleCloudDataplexV1EnvironmentSessionSpec'
        createTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. Environment creation time.
        description:
          type: string
          description: Optional. Description of the environment.
        infrastructureSpec:
          $ref: '#/components/schemas/GoogleCloudDataplexV1EnvironmentInfrastructureSpec'
          description: Required. Infrastructure specification for the Environment.
        sessionStatus:
          $ref: '#/components/schemas/GoogleCloudDataplexV1EnvironmentSessionStatus'
          readOnly: true
          description: Output only. Status of sessions created for this environment.
        labels:
          additionalProperties:
            type: string
          description: Optional. User defined labels for the environment.
          type: object
        state:
          enumDescriptions:
            - State is not specified.
            - 'Resource is active, i.e., ready to use.'
            - Resource is under creation.
            - Resource is under deletion.
            - Resource is active but has unresolved actions.
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - DELETING
            - ACTION_REQUIRED
          type: string
          description: Output only. Current state of the environment.
        endpoints:
          $ref: '#/components/schemas/GoogleCloudDataplexV1EnvironmentEndpoints'
          description: Output only. URI Endpoints to access sessions associated with the Environment.
          readOnly: true
        name:
          readOnly: true
          type: string
          description: 'Output only. The relative resource name of the environment, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/environment/{environment_id}'
        uid:
          type: string
          description: Output only. System generated globally unique ID for the environment. This ID will be different if the environment is deleted and re-created with the same name.
          readOnly: true
        updateTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time when the environment was last updated.
        displayName:
          description: Optional. User friendly display name.
          type: string
      type: object
    GoogleCloudDataplexV1DataProfileResult:
      properties:
        scannedData:
          $ref: '#/components/schemas/GoogleCloudDataplexV1ScannedData'
          description: The data scanned for this result.
        rowCount:
          description: The count of rows scanned.
          type: string
          format: int64
        postScanActionsResult:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileResultPostScanActionsResult'
          readOnly: true
          description: Output only. The result of post scan actions.
        profile:
          description: The profile information per field.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileResultProfile'
      description: DataProfileResult defines the output of DataProfileScan. Each field of the table will have field type specific profile result.
      id: GoogleCloudDataplexV1DataProfileResult
      type: object
    GoogleCloudDataplexV1AssetResourceSpec:
      id: GoogleCloudDataplexV1AssetResourceSpec
      properties:
        name:
          description: 'Immutable. Relative name of the cloud resource that contains the data that is being managed within a lake. For example: projects/{project_number}/buckets/{bucket_id} projects/{project_number}/datasets/{dataset_id}'
          type: string
        type:
          enumDescriptions:
            - Type not specified.
            - Cloud Storage bucket.
            - BigQuery dataset.
          type: string
          enum:
            - TYPE_UNSPECIFIED
            - STORAGE_BUCKET
            - BIGQUERY_DATASET
          description: Required. Immutable. Type of resource.
        readAccessMode:
          description: Optional. Determines how read permissions are handled for each asset and their associated tables. Only available to storage buckets assets.
          enum:
            - ACCESS_MODE_UNSPECIFIED
            - DIRECT
            - MANAGED
          enumDescriptions:
            - Access mode unspecified.
            - Default. Data is accessed directly using storage APIs.
            - Data is accessed through a managed interface using BigQuery APIs.
          type: string
      description: Identifies the cloud resource that is referenced by this asset.
      type: object
    GoogleCloudDataplexV1OperationMetadata:
      id: GoogleCloudDataplexV1OperationMetadata
      type: object
      properties:
        verb:
          type: string
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
        statusMessage:
          readOnly: true
          type: string
          description: 'Output only. Human-readable status of the operation, if any.'
        apiVersion:
          readOnly: true
          type: string
          description: Output only. API version used to start the operation.
        target:
          readOnly: true
          description: Output only. Server-defined resource path for the target of the operation.
          type: string
        requestedCancellation:
          type: boolean
          description: 'Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to Code.CANCELLED.'
          readOnly: true
        endTime:
          type: string
          readOnly: true
          description: Output only. The time the operation finished running.
          format: google-datetime
        createTime:
          readOnly: true
          type: string
          description: Output only. The time the operation was created.
          format: google-datetime
      description: Represents the metadata of a long-running operation.
    GoogleCloudDataplexV1ListSessionsResponse:
      type: object
      properties:
        sessions:
          description: Sessions under a given environment.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Session'
        nextPageToken:
          type: string
          description: 'Token to retrieve the next page of results, or empty if there are no more results in the list.'
      description: List sessions response.
      id: GoogleCloudDataplexV1ListSessionsResponse
    GoogleCloudDataplexV1DataQualityRuleUniquenessExpectation:
      type: object
      description: Evaluates whether the column has duplicates.
      id: GoogleCloudDataplexV1DataQualityRuleUniquenessExpectation
      properties: {}
    GoogleCloudDataplexV1TaskSparkTaskConfig:
      type: object
      id: GoogleCloudDataplexV1TaskSparkTaskConfig
      description: User-specified config for running a Spark task.
      properties:
        archiveUris:
          type: array
          description: 'Optional. Cloud Storage URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.'
          items:
            type: string
        sqlScriptFile:
          type: string
          description: A reference to a query file. This can be the Cloud Storage URI of the query file or it can the path to a SqlScript Content. The execution args are used to declare a set of script variables (set key="value";).
        sqlScript:
          type: string
          description: The query text. The execution args are used to declare a set of script variables (set key="value";).
        fileUris:
          type: array
          items:
            type: string
          description: Optional. Cloud Storage URIs of files to be placed in the working directory of each executor.
        infrastructureSpec:
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskInfrastructureSpec'
          description: Optional. Infrastructure specification for the execution.
        pythonScriptFile:
          type: string
          description: The Gcloud Storage URI of the main Python file to use as the driver. Must be a .py file. The execution args are passed in as a sequence of named process arguments (--key=value).
        mainClass:
          type: string
          description: The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris. The execution args are passed in as a sequence of named process arguments (--key=value).
        mainJarFileUri:
          description: The Cloud Storage URI of the jar file that contains the main class. The execution args are passed in as a sequence of named process arguments (--key=value).
          type: string
    GoogleCloudDataplexV1ListTasksResponse:
      id: GoogleCloudDataplexV1ListTasksResponse
      description: List tasks response.
      type: object
      properties:
        tasks:
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Task'
          description: Tasks under the given parent lake.
          type: array
        nextPageToken:
          type: string
          description: 'Token to retrieve the next page of results, or empty if there are no more results in the list.'
        unreachableLocations:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    GoogleCloudDataplexV1DataScanEvent:
      type: object
      properties:
        endTime:
          description: The time when the data scan job finished.
          type: string
          format: google-datetime
        message:
          description: The message describing the data scan job event.
          type: string
        dataProfileConfigs:
          description: Applied configs for data profile type data scan.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataScanEventDataProfileAppliedConfigs'
        jobId:
          type: string
          description: The identifier of the specific data scan job this log entry is for.
        dataProfile:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataScanEventDataProfileResult'
          description: Data profile result for data profile type data scan.
        postScanActionsResult:
          description: The result of post scan actions.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataScanEventPostScanActionsResult'
        type:
          type: string
          enumDescriptions:
            - An unspecified data scan type.
            - Data scan for data profile.
            - Data scan for data quality.
          description: The type of the data scan.
          enum:
            - SCAN_TYPE_UNSPECIFIED
            - DATA_PROFILE
            - DATA_QUALITY
        specVersion:
          type: string
          description: A version identifier of the spec which was used to execute this job.
        scope:
          type: string
          enum:
            - SCOPE_UNSPECIFIED
            - FULL
            - INCREMENTAL
          description: 'The scope of the data scan (e.g. full, incremental).'
          enumDescriptions:
            - An unspecified scope type.
            - Data scan runs on all of the data.
            - Data scan runs on incremental data.
        state:
          description: The status of the data scan job.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - STARTED
            - SUCCEEDED
            - FAILED
            - CANCELLED
            - CREATED
          enumDescriptions:
            - Unspecified job state.
            - Data scan job started.
            - Data scan job successfully completed.
            - Data scan job was unsuccessful.
            - Data scan job was cancelled.
            - Data scan job was createed.
        dataQuality:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataScanEventDataQualityResult'
          description: Data quality result for data quality type data scan.
        dataSource:
          description: The data source of the data scan
          type: string
        trigger:
          enumDescriptions:
            - An unspecified trigger type.
            - Data scan triggers on demand.
            - Data scan triggers as per schedule.
          description: The trigger type of the data scan job.
          type: string
          enum:
            - TRIGGER_UNSPECIFIED
            - ON_DEMAND
            - SCHEDULE
        createTime:
          type: string
          format: google-datetime
          description: The time when the data scan job was created.
        startTime:
          format: google-datetime
          type: string
          description: The time when the data scan job started to run.
        dataQualityConfigs:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataScanEventDataQualityAppliedConfigs'
          description: Applied configs for data quality type data scan.
      id: GoogleCloudDataplexV1DataScanEvent
      description: 'These messages contain information about the execution of a datascan. The monitored resource is ''DataScan'' Next ID: 13'
    GoogleCloudDataplexV1DataProfileSpecSelectedFields:
      id: GoogleCloudDataplexV1DataProfileSpecSelectedFields
      properties:
        fieldNames:
          description: 'Optional. Expected input is a list of fully qualified names of fields as in the schema.Only top-level field names for nested fields are supported. For instance, if ''x'' is of nested field type, listing ''x'' is supported but ''x.y.z'' is not supported. Here ''y'' and ''y.z'' are nested fields of ''x''.'
          items:
            type: string
          type: array
      description: The specification for fields to include or exclude in data profile scan.
      type: object
    GoogleCloudDataplexV1ContentSqlScript:
      type: object
      properties:
        engine:
          description: Required. Query Engine to be used for the Sql Query.
          enum:
            - QUERY_ENGINE_UNSPECIFIED
            - SPARK
          enumDescriptions:
            - Value was unspecified.
            - Spark SQL Query.
          type: string
      id: GoogleCloudDataplexV1ContentSqlScript
      description: Configuration for the Sql Script content.
    GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime:
      type: object
      id: GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime
      properties:
        properties:
          additionalProperties:
            type: string
          type: object
          description: 'Optional. Spark properties to provide configuration for use in sessions created for this environment. The properties to set on daemon config files. Property keys are specified in prefix:property format. The prefix must be "spark".'
        javaLibraries:
          items:
            type: string
          description: 'Optional. List of Java jars to be included in the runtime environment. Valid input includes Cloud Storage URIs to Jar binaries. For example, gs://bucket-name/my/path/to/file.jar'
          type: array
        imageVersion:
          type: string
          description: Required. Dataplex Image version.
        pythonPackages:
          items:
            type: string
          description: 'Optional. A list of python packages to be installed. Valid formats include Cloud Storage URI to a PIP installable library. For example, gs://bucket-name/my/path/to/lib.tar.gz'
          type: array
      description: Software Runtime Configuration to run Analyze.
    GoogleIamV1TestIamPermissionsRequest:
      description: Request message for TestIamPermissions method.
      type: object
      properties:
        permissions:
          description: 'The set of permissions to check for the resource. Permissions with wildcards (such as * or storage.*) are not allowed. For more information see IAM Overview (https://cloud.google.com/iam/docs/overview#permissions).'
          items:
            type: string
          type: array
      id: GoogleIamV1TestIamPermissionsRequest
    GoogleCloudDataplexV1DataScanEventDataQualityResult:
      type: object
      id: GoogleCloudDataplexV1DataScanEventDataQualityResult
      description: Data quality result for data scan job.
      properties:
        dimensionPassed:
          description: The result of each dimension for data quality result. The key of the map is the name of the dimension. The value is the bool value depicting whether the dimension result was pass or not.
          type: object
          additionalProperties:
            type: boolean
        rowCount:
          description: The count of rows processed in the data scan job.
          format: int64
          type: string
        passed:
          type: boolean
          description: Whether the data quality result was pass or not.
    GoogleCloudDataplexV1ListActionsResponse:
      properties:
        actions:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Action'
          description: Actions under the given parent lake/zone/asset.
        nextPageToken:
          type: string
          description: 'Token to retrieve the next page of results, or empty if there are no more results in the list.'
      id: GoogleCloudDataplexV1ListActionsResponse
      type: object
      description: List actions response.
    GoogleCloudDataplexV1DataQualitySpecPostScanActionsBigQueryExport:
      description: The configuration of BigQuery export post scan action.
      properties:
        resultsTable:
          description: 'Optional. The BigQuery table to export DataQualityScan results to. Format: projects/{project}/datasets/{dataset}/tables/{table}'
          type: string
      id: GoogleCloudDataplexV1DataQualitySpecPostScanActionsBigQueryExport
      type: object
    GoogleCloudDataplexV1ActionInvalidDataOrganization:
      id: GoogleCloudDataplexV1ActionInvalidDataOrganization
      description: Action details for invalid data arrangement.
      properties: {}
      type: object
    GoogleCloudDataplexV1DataQualityRuleRangeExpectation:
      id: GoogleCloudDataplexV1DataQualityRuleRangeExpectation
      type: object
      properties:
        minValue:
          description: Optional. The minimum column value allowed for a row to pass this validation. At least one of min_value and max_value need to be provided.
          type: string
        strictMinEnabled:
          type: boolean
          description: 'Optional. Whether each value needs to be strictly greater than (''>'') the minimum, or if equality is allowed.Only relevant if a min_value has been defined. Default = false.'
        maxValue:
          type: string
          description: Optional. The maximum column value allowed for a row to pass this validation. At least one of min_value and max_value need to be provided.
        strictMaxEnabled:
          type: boolean
          description: 'Optional. Whether each value needs to be strictly lesser than (''<'') the maximum, or if equality is allowed.Only relevant if a max_value has been defined. Default = false.'
      description: Evaluates whether each column value lies between a specified range.
    GoogleCloudDataplexV1ZoneDiscoverySpec:
      description: Settings to manage the metadata discovery and publishing in a zone.
      id: GoogleCloudDataplexV1ZoneDiscoverySpec
      type: object
      properties:
        includePatterns:
          description: 'Optional. The list of patterns to apply for selecting data to include during discovery if only a subset of the data should considered. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.'
          type: array
          items:
            type: string
        excludePatterns:
          description: 'Optional. The list of patterns to apply for selecting data to exclude during discovery. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.'
          items:
            type: string
          type: array
        enabled:
          type: boolean
          description: Required. Whether discovery is enabled.
        csvOptions:
          description: Optional. Configuration for CSV data.
          $ref: '#/components/schemas/GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions'
        schedule:
          description: 'Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running discovery periodically. Successive discovery runs must be scheduled at least 60 minutes apart. The default value is to run discovery every 60 minutes. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *.'
          type: string
        jsonOptions:
          $ref: '#/components/schemas/GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions'
          description: Optional. Configuration for Json data.
    GoogleCloudDataplexV1ActionIncompatibleDataSchema:
      type: object
      id: GoogleCloudDataplexV1ActionIncompatibleDataSchema
      properties:
        table:
          type: string
          description: The name of the table containing invalid data.
        sampledDataLocations:
          type: array
          description: The list of data locations sampled and used for format/schema inference.
          items:
            type: string
        existingSchema:
          type: string
          description: The existing and expected schema of the table. The schema is provided as a JSON formatted structure listing columns and data types.
        newSchema:
          description: The new and incompatible schema within the table. The schema is provided as a JSON formatted structured listing columns and data types.
          type: string
        schemaChange:
          type: string
          enum:
            - SCHEMA_CHANGE_UNSPECIFIED
            - INCOMPATIBLE
            - MODIFIED
          description: Whether the action relates to a schema that is incompatible or modified.
          enumDescriptions:
            - Schema change unspecified.
            - Newly discovered schema is incompatible with existing schema.
            - Newly discovered schema has changed from existing schema for data in a curated zone.
      description: Action details for incompatible schemas detected by discovery.
    GoogleCloudLocationListLocationsResponse:
      type: object
      description: The response message for Locations.ListLocations.
      id: GoogleCloudLocationListLocationsResponse
      properties:
        locations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudLocationLocation'
          description: A list of locations that matches the specified filter in the request.
        nextPageToken:
          description: The standard List next-page token.
          type: string
    GoogleCloudDataplexV1EntityCompatibilityStatus:
      id: GoogleCloudDataplexV1EntityCompatibilityStatus
      properties:
        hiveMetastore:
          $ref: '#/components/schemas/GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility'
          description: Output only. Whether this entity is compatible with Hive Metastore.
          readOnly: true
        bigquery:
          description: Output only. Whether this entity is compatible with BigQuery.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility'
      type: object
      description: Provides compatibility information for various metadata stores.
    GoogleCloudDataplexV1TaskTriggerSpec:
      properties:
        maxRetries:
          type: integer
          format: int32
          description: Optional. Number of retry attempts before aborting. Set to zero to never attempt to retry a failed task.
        startTime:
          type: string
          description: 'Optional. The first run of the task will be after this time. If not specified, the task will run shortly after being submitted if ON_DEMAND and based on the schedule if RECURRING.'
          format: google-datetime
        type:
          type: string
          description: Required. Immutable. Trigger type of the user-specified Task.
          enum:
            - TYPE_UNSPECIFIED
            - ON_DEMAND
            - RECURRING
          enumDescriptions:
            - Unspecified trigger type.
            - The task runs one-time shortly after Task Creation.
            - The task is scheduled to run periodically.
        disabled:
          description: Optional. Prevent the task from executing. This does not cancel already running tasks. It is intended to temporarily disable RECURRING tasks.
          type: boolean
        schedule:
          description: 'Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running tasks periodically. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or "TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *. This field is required for RECURRING tasks.'
          type: string
      type: object
      id: GoogleCloudDataplexV1TaskTriggerSpec
      description: Task scheduling and trigger settings.
    GoogleCloudDataplexV1DataScan:
      type: object
      description: 'Represents a user-visible job which provides the insights for the related data source.For example: Data Quality: generates queries based on the rules and runs against the data to get data quality check results. Data Profile: analyzes the data in table(s) and generates insights about the structure, content and relationships (such as null percent, cardinality, min/max/mean, etc).'
      properties:
        name:
          type: string
          description: 'Output only. The relative resource name of the scan, of the form: projects/{project}/locations/{location_id}/dataScans/{datascan_id}, where project refers to a project_id or project_number and location_id refers to a GCP region.'
          readOnly: true
        displayName:
          description: Optional. User friendly display name. Must be between 1-256 characters.
          type: string
        createTime:
          readOnly: true
          description: Output only. The time when the scan was created.
          type: string
          format: google-datetime
        executionSpec:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataScanExecutionSpec'
          description: 'Optional. DataScan execution settings.If not specified, the fields in it will use their default values.'
        state:
          enumDescriptions:
            - State is not specified.
            - 'Resource is active, i.e., ready to use.'
            - Resource is under creation.
            - Resource is under deletion.
            - Resource is active but has unresolved actions.
          readOnly: true
          description: Output only. Current state of the DataScan.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - DELETING
            - ACTION_REQUIRED
          type: string
        dataProfileResult:
          readOnly: true
          description: Output only. The result of the data profile scan.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileResult'
        uid:
          description: Output only. System generated globally unique ID for the scan. This ID will be different if the scan is deleted and re-created with the same name.
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataSource'
          description: Required. The data source for DataScan.
        labels:
          additionalProperties:
            type: string
          description: Optional. User-defined labels for the scan.
          type: object
        dataQualityResult:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityResult'
          description: Output only. The result of the data quality scan.
        dataQualitySpec:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualitySpec'
          description: DataQualityScan related setting.
        dataProfileSpec:
          description: DataProfileScan related setting.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileSpec'
        executionStatus:
          description: Output only. Status of the data scan execution.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataScanExecutionStatus'
        updateTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The time when the scan was last updated.
        type:
          enumDescriptions:
            - The DataScan type is unspecified.
            - Data Quality scan.
            - Data Profile scan.
          enum:
            - DATA_SCAN_TYPE_UNSPECIFIED
            - DATA_QUALITY
            - DATA_PROFILE
          type: string
          readOnly: true
          description: Output only. The type of DataScan.
        description:
          description: Optional. Description of the scan. Must be between 1-1024 characters.
          type: string
      id: GoogleCloudDataplexV1DataScan
    GoogleCloudDataplexV1AssetDiscoveryStatusStats:
      description: The aggregated data statistics for the asset reported by discovery.
      id: GoogleCloudDataplexV1AssetDiscoveryStatusStats
      properties:
        filesets:
          type: string
          description: The count of fileset entities within the referenced resource.
          format: int64
        dataItems:
          type: string
          description: The count of data items within the referenced resource.
          format: int64
        tables:
          description: The count of table entities within the referenced resource.
          format: int64
          type: string
        dataSize:
          type: string
          description: The number of stored data bytes within the referenced resource.
          format: int64
      type: object
    GoogleCloudDataplexV1SessionEvent:
      properties:
        sessionId:
          description: Unique identifier for the session.
          type: string
        type:
          type: string
          enum:
            - EVENT_TYPE_UNSPECIFIED
            - START
            - STOP
            - QUERY
            - CREATE
          enumDescriptions:
            - An unspecified event type.
            - Event when the session is assigned to a user.
            - Event for stop of a session.
            - Query events in the session.
            - Event for creation of a cluster. It is not yet assigned to a user. This comes before START in the sequence
          description: The type of the event.
        fastStartupEnabled:
          description: 'If the session is associated with an environment with fast startup enabled, and was created before being assigned to a user.'
          type: boolean
        eventSucceeded:
          type: boolean
          description: The status of the event.
        query:
          $ref: '#/components/schemas/GoogleCloudDataplexV1SessionEventQueryDetail'
          description: The execution details of the query.
        userId:
          type: string
          description: The information about the user that created the session. It will be the email address of the user.
        unassignedDuration:
          format: google-duration
          description: The idle duration of a warm pooled session before it is assigned to user.
          type: string
        message:
          description: The log message.
          type: string
      type: object
      description: These messages contain information about sessions within an environment. The monitored resource is 'Environment'.
      id: GoogleCloudDataplexV1SessionEvent
    GoogleCloudDataplexV1Entity:
      id: GoogleCloudDataplexV1Entity
      description: Represents tables and fileset metadata contained within a zone.
      properties:
        access:
          description: Output only. Identifies the access mechanism to the entity. Not user settable.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1StorageAccess'
        id:
          description: 'Required. A user-provided entity ID. It is mutable, and will be used as the published table name. Specifying a new ID in an update entity request will override the existing value. The ID must contain only letters (a-z, A-Z), numbers (0-9), and underscores, and consist of 256 or fewer characters.'
          type: string
        dataPath:
          type: string
          description: 'Required. Immutable. The storage path of the entity data. For Cloud Storage data, this is the fully-qualified path to the entity, such as gs://bucket/path/to/data. For BigQuery data, this is the name of the table resource, such as projects/project_id/datasets/dataset_id/tables/table_id.'
        type:
          type: string
          description: Required. Immutable. The type of entity.
          enum:
            - TYPE_UNSPECIFIED
            - TABLE
            - FILESET
          enumDescriptions:
            - Type unspecified.
            - Structured and semi-structured data.
            - Unstructured data.
        etag:
          description: 'Optional. The etag associated with the entity, which can be retrieved with a GetEntity request. Required for update and delete requests.'
          type: string
        updateTime:
          description: Output only. The time when the entity was last updated.
          type: string
          readOnly: true
          format: google-datetime
        schema:
          description: Required. The description of the data structure and layout. The schema is not included in list responses. It is only included in SCHEMA and FULL entity views of a GetEntity response.
          $ref: '#/components/schemas/GoogleCloudDataplexV1Schema'
        dataPathPattern:
          description: 'Optional. The set of items within the data path constituting the data in the entity, represented as a glob path. Example: gs://bucket/path/to/data/**/*.csv.'
          type: string
        displayName:
          type: string
          description: Optional. Display name must be shorter than or equal to 256 characters.
        createTime:
          readOnly: true
          description: Output only. The time when the entity was created.
          format: google-datetime
          type: string
        catalogEntry:
          readOnly: true
          description: Output only. The name of the associated Data Catalog entry.
          type: string
        name:
          description: 'Output only. The resource name of the entity, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{id}.'
          readOnly: true
          type: string
        system:
          type: string
          description: Required. Immutable. Identifies the storage system of the entity data.
          enum:
            - STORAGE_SYSTEM_UNSPECIFIED
            - CLOUD_STORAGE
            - BIGQUERY
          enumDescriptions:
            - Storage system unspecified.
            - The entity data is contained within a Cloud Storage bucket.
            - The entity data is contained within a BigQuery dataset.
        asset:
          type: string
          description: Required. Immutable. The ID of the asset associated with the storage location containing the entity data. The entity must be with in the same zone with the asset.
        compatibility:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1EntityCompatibilityStatus'
          description: Output only. Metadata stores that the entity is compatible with.
        uid:
          description: Output only. System generated unique ID for the Entity. This ID will be different if the Entity is deleted and re-created with the same name.
          type: string
          readOnly: true
        description:
          description: Optional. User friendly longer description text. Must be shorter than or equal to 1024 characters.
          type: string
        format:
          $ref: '#/components/schemas/GoogleCloudDataplexV1StorageFormat'
          description: Required. Identifies the storage format of the entity data. It does not apply to entities with data stored in BigQuery.
      type: object
    GoogleCloudDataplexV1EnvironmentInfrastructureSpec:
      id: GoogleCloudDataplexV1EnvironmentInfrastructureSpec
      type: object
      description: Configuration for the underlying infrastructure used to run workloads.
      properties:
        osImage:
          $ref: '#/components/schemas/GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime'
          description: Required. Software Runtime Configuration for analyze interactive workloads.
        compute:
          $ref: '#/components/schemas/GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources'
          description: Optional. Compute resources needed for analyze interactive workloads.
    GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfo:
      description: The profile information for each field type.
      properties:
        nullRatio:
          description: Ratio of rows with null value against total scanned rows.
          format: double
          type: number
        doubleProfile:
          description: Double type field information.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo'
        stringProfile:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfo'
          description: String type field information.
        integerProfile:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfo'
          description: Integer type field information.
        topNValues:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValue'
          description: 'The list of top N non-null values, frequency and ratio with which they occur in the scanned data. N is 10 or equal to the number of distinct values in the field, whichever is smaller. Not available for complex non-groupable field type RECORD and fields with REPEATABLE mode.'
        distinctRatio:
          format: double
          type: number
          description: Ratio of rows with distinct values against total scanned rows. Not available for complex non-groupable field type RECORD and fields with REPEATABLE mode.
      type: object
      id: GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfo
    GoogleCloudDataplexV1DataScanEventDataQualityAppliedConfigs:
      id: GoogleCloudDataplexV1DataScanEventDataQualityAppliedConfigs
      description: Applied configs for data quality type data scan job.
      type: object
      properties:
        samplingPercent:
          format: float
          description: The percentage of the records selected from the dataset for DataScan. Value ranges between 0.0 and 100.0. Value 0.0 or 100.0 imply that sampling was not applied.
          type: number
        rowFilterApplied:
          type: boolean
          description: Boolean indicating whether a row filter was applied in the DataScan job.
    GoogleCloudDataplexV1RunTaskRequest:
      type: object
      properties:
        args:
          description: 'Optional. Execution spec arguments. If the map is left empty, the task will run with existing execution spec args from task definition. If the map contains an entry with a new key, the same will be added to existing set of args. If the map contains an entry with an existing arg key in task definition, the task will run with new arg value for that entry. Clearing an existing arg will require arg value to be explicitly set to a hyphen "-". The arg value cannot be empty.'
          additionalProperties:
            type: string
          type: object
        labels:
          type: object
          description: 'Optional. User-defined labels for the task. If the map is left empty, the task will run with existing labels from task definition. If the map contains an entry with a new key, the same will be added to existing set of labels. If the map contains an entry with an existing label key in task definition, the task will run with new label value for that entry. Clearing an existing label will require label value to be explicitly set to a hyphen "-". The label value cannot be empty.'
          additionalProperties:
            type: string
      id: GoogleCloudDataplexV1RunTaskRequest
    GoogleCloudDataplexV1DataScanEventDataProfileResult:
      properties:
        rowCount:
          type: string
          description: The count of rows processed in the data scan job.
          format: int64
      description: Data profile result for data scan job.
      id: GoogleCloudDataplexV1DataScanEventDataProfileResult
      type: object
    GoogleCloudDataplexV1ListDataAttributesResponse:
      properties:
        dataAttributes:
          type: array
          description: DataAttributes under the given parent DataTaxonomy.
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1DataAttribute'
        unreachableLocations:
          type: array
          items:
            type: string
          description: Locations that could not be reached.
        nextPageToken:
          description: 'Token to retrieve the next page of results, or empty if there are no more results in the list.'
          type: string
      type: object
      id: GoogleCloudDataplexV1ListDataAttributesResponse
      description: List DataAttributes response.
    GoogleCloudDataplexV1TaskExecutionSpec:
      type: object
      properties:
        project:
          description: 'Optional. The project in which jobs are run. By default, the project containing the Lake is used. If a project is provided, the ExecutionSpec.service_account must belong to this project.'
          type: string
        kmsKey:
          type: string
          description: 'Optional. The Cloud KMS key to use for encryption, of the form: projects/{project_number}/locations/{location_id}/keyRings/{key-ring-name}/cryptoKeys/{key-name}.'
        maxJobExecutionLifetime:
          description: Optional. The maximum duration after which the job execution is expired.
          format: google-duration
          type: string
        serviceAccount:
          type: string
          description: 'Required. Service account to use to execute a task. If not provided, the default Compute service account for the project is used.'
        args:
          description: 'Optional. The arguments to pass to the task. The args can use placeholders of the format ${placeholder} as part of key/value string. These will be interpolated before passing the args to the driver. Currently supported placeholders: - ${task_id} - ${job_time} To pass positional args, set the key as TASK_ARGS. The value should be a comma-separated string of all the positional arguments. To use a delimiter other than comma, refer to https://cloud.google.com/sdk/gcloud/reference/topic/escaping. In case of other keys being present in the args, then TASK_ARGS will be passed as the last argument.'
          type: object
          additionalProperties:
            type: string
      id: GoogleCloudDataplexV1TaskExecutionSpec
      description: 'Execution related settings, like retry and service_account.'
    GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork:
      properties:
        networkTags:
          description: Optional. List of network tags to apply to the job.
          items:
            type: string
          type: array
        subNetwork:
          type: string
          description: Optional. The Cloud VPC sub-network in which the job is run.
        network:
          description: 'Optional. The Cloud VPC network in which the job is run. By default, the Cloud VPC network named Default within the project is used.'
          type: string
      id: GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork
      type: object
      description: Cloud VPC Network used to run the infrastructure.
    GoogleCloudDataplexV1ActionInvalidDataFormat:
      id: GoogleCloudDataplexV1ActionInvalidDataFormat
      type: object
      description: Action details for invalid or unsupported data files detected by discovery.
      properties:
        newFormat:
          type: string
          description: The new unexpected data format within the entity.
        sampledDataLocations:
          type: array
          description: The list of data locations sampled and used for format/schema inference.
          items:
            type: string
        expectedFormat:
          description: The expected data format of the entity.
          type: string
    GoogleCloudDataplexV1CancelJobRequest:
      description: Cancel task jobs.
      id: GoogleCloudDataplexV1CancelJobRequest
      properties: {}
      type: object
    GoogleCloudDataplexV1TriggerSchedule:
      id: GoogleCloudDataplexV1TriggerSchedule
      description: The scan is scheduled to run periodically.
      properties:
        cron:
          type: string
          description: 'Required. Cron (https://en.wikipedia.org/wiki/Cron) schedule for running scans periodically.To explicitly set a timezone in the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or "TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database (wikipedia (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)). For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *.This field is required for Schedule scans.'
      type: object
    GoogleCloudDataplexV1DataQualitySpecPostScanActions:
      type: object
      id: GoogleCloudDataplexV1DataQualitySpecPostScanActions
      properties:
        bigqueryExport:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualitySpecPostScanActionsBigQueryExport'
          description: 'Optional. If set, results will be exported to the provided BigQuery table.'
      description: The configuration of post scan actions of DataQualityScan.
    GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation:
      description: 'Evaluates whether each row passes the specified condition.The SQL expression needs to use BigQuery standard SQL syntax and should produce a boolean value per row as the result.Example: col1 >= 0 AND col2 < 10'
      id: GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation
      properties:
        sqlExpression:
          description: The SQL expression.
          type: string
      type: object
    GoogleCloudDataplexV1DataQualityRuleResult:
      properties:
        evaluatedCount:
          description: 'The number of rows a rule was evaluated against.This field is only valid for row-level type rules.Evaluated count can be configured to either include all rows (default) - with null rows automatically failing rule evaluation, or exclude null rows from the evaluated_count, by setting ignore_nulls = true.'
          type: string
          format: int64
        passed:
          type: boolean
          description: Whether the rule passed or failed.
        passedCount:
          type: string
          description: The number of rows which passed a rule evaluation.This field is only valid for row-level type rules.
          format: int64
        rule:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityRule'
          description: 'The rule specified in the DataQualitySpec, as is.'
        passRatio:
          format: double
          type: number
          description: The ratio of passed_count / evaluated_count.This field is only valid for row-level type rules.
        failingRowsQuery:
          type: string
          description: The query to find rows that did not pass this rule.This field is only valid for row-level type rules.
        nullCount:
          description: The number of rows with null values in the specified column.
          type: string
          format: int64
      type: object
      id: GoogleCloudDataplexV1DataQualityRuleResult
      description: 'DataQualityRuleResult provides a more detailed, per-rule view of the results.'
    GoogleCloudDataplexV1Schema:
      properties:
        userManaged:
          description: 'Required. Set to true if user-managed or false if managed by Dataplex. The default is false (managed by Dataplex). Set to falseto enable Dataplex discovery to update the schema. including new data discovery, schema inference, and schema evolution. Users retain the ability to input and edit the schema. Dataplex treats schema input by the user as though produced by a previous Dataplex discovery operation, and it will evolve the schema and take action based on that treatment. Set to true to fully manage the entity schema. This setting guarantees that Dataplex will not change schema fields.'
          type: boolean
        fields:
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1SchemaSchemaField'
          description: 'Optional. The sequence of fields describing data in table entities. Note: BigQuery SchemaFields are immutable.'
          type: array
        partitionStyle:
          description: Optional. The structure of paths containing partition data within the entity.
          type: string
          enum:
            - PARTITION_STYLE_UNSPECIFIED
            - HIVE_COMPATIBLE
          enumDescriptions:
            - PartitionStyle unspecified
            - 'Partitions are hive-compatible. Examples: gs://bucket/path/to/table/dt=2019-10-31/lang=en, gs://bucket/path/to/table/dt=2019-10-31/lang=en/late.'
        partitionFields:
          type: array
          description: 'Optional. The sequence of fields describing the partition structure in entities. If this field is empty, there are no partitions within the data.'
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1SchemaPartitionField'
      type: object
      description: Schema information describing the structure and layout of the data.
      id: GoogleCloudDataplexV1Schema
    GoogleCloudDataplexV1DataAttribute:
      description: 'Denotes one dataAttribute in a dataTaxonomy, for example, PII. DataAttribute resources can be defined in a hierarchy. A single dataAttribute resource can contain specs of multiple types PII - ResourceAccessSpec : - readers :foo@bar.com - DataAccessSpec : - readers :bar@foo.com '
      id: GoogleCloudDataplexV1DataAttribute
      properties:
        uid:
          readOnly: true
          description: Output only. System generated globally unique ID for the DataAttribute. This ID will be different if the DataAttribute is deleted and re-created with the same name.
          type: string
        name:
          description: 'Output only. The relative resource name of the dataAttribute, of the form: projects/{project_number}/locations/{location_id}/dataTaxonomies/{dataTaxonomy}/attributes/{data_attribute_id}.'
          type: string
          readOnly: true
        createTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time when the DataAttribute was created.
        displayName:
          description: Optional. User friendly display name.
          type: string
        parentId:
          description: 'Optional. The ID of the parent DataAttribute resource, should belong to the same data taxonomy. Circular dependency in parent chain is not valid. Maximum depth of the hierarchy allowed is 4. a -> b -> c -> d -> e, depth = 4'
          type: string
        description:
          description: Optional. Description of the DataAttribute.
          type: string
        updateTime:
          readOnly: true
          description: Output only. The time when the DataAttribute was last updated.
          type: string
          format: google-datetime
        attributeCount:
          type: integer
          format: int32
          description: Output only. The number of child attributes present for this attribute.
          readOnly: true
        etag:
          description: 'This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.'
          type: string
        resourceAccessSpec:
          $ref: '#/components/schemas/GoogleCloudDataplexV1ResourceAccessSpec'
          description: 'Optional. Specified when applied to a resource (eg: Cloud Storage bucket, BigQuery dataset, BigQuery table).'
        dataAccessSpec:
          description: 'Optional. Specified when applied to data stored on the resource (eg: rows, columns in BigQuery Tables).'
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataAccessSpec'
        labels:
          description: Optional. User-defined labels for the DataAttribute.
          additionalProperties:
            type: string
          type: object
      type: object
    GoogleCloudDataplexV1AssetDiscoveryStatus:
      description: Status of discovery for an asset.
      id: GoogleCloudDataplexV1AssetDiscoveryStatus
      type: object
      properties:
        stats:
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetDiscoveryStatusStats'
          description: Data Stats of the asset reported by discovery.
        updateTime:
          type: string
          format: google-datetime
          description: Last update time of the status.
        state:
          enumDescriptions:
            - State is unspecified.
            - Discovery for the asset is scheduled.
            - Discovery for the asset is running.
            - Discovery for the asset is currently paused (e.g. due to a lack of available resources). It will be automatically resumed.
            - Discovery for the asset is disabled.
          enum:
            - STATE_UNSPECIFIED
            - SCHEDULED
            - IN_PROGRESS
            - PAUSED
            - DISABLED
          description: The current status of the discovery feature.
          type: string
        lastRunDuration:
          format: google-duration
          description: The duration of the last discovery run.
          type: string
        lastRunTime:
          format: google-datetime
          description: The start time of the last discovery run.
          type: string
        message:
          type: string
          description: Additional information about the current state.
    GoogleCloudDataplexV1DataProfileResultProfile:
      properties:
        fields:
          description: List of fields with structural and profile information for each field.
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileResultProfileField'
          type: array
      description: 'Contains name, type, mode and field type specific profile information.'
      type: object
      id: GoogleCloudDataplexV1DataProfileResultProfile
    GoogleCloudDataplexV1DataScanExecutionStatus:
      properties:
        latestJobEndTime:
          format: google-datetime
          type: string
          description: The time when the latest DataScanJob ended.
        latestJobStartTime:
          format: google-datetime
          type: string
          description: The time when the latest DataScanJob started.
      description: Status of the data scan execution.
      id: GoogleCloudDataplexV1DataScanExecutionStatus
      type: object
    GoogleCloudDataplexV1DataProfileSpec:
      id: GoogleCloudDataplexV1DataProfileSpec
      type: object
      properties:
        postScanActions:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileSpecPostScanActions'
          description: Optional. Actions to take upon job completion..
        excludeFields:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileSpecSelectedFields'
          description: 'Optional. The fields to exclude from data profile.If specified, the fields will be excluded from data profile, regardless of include_fields value.'
        includeFields:
          description: 'Optional. The fields to include in data profile.If not specified, all fields at the time of profile scan job execution are included, except for ones listed in exclude_fields.'
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileSpecSelectedFields'
        samplingPercent:
          type: number
          format: float
          description: 'Optional. The percentage of the records to be selected from the dataset for DataScan. Value can range between 0.0 and 100.0 with up to 3 significant decimal digits. Sampling is not applied if sampling_percent is not specified, 0 or 100.'
        rowFilter:
          description: 'Optional. A filter applied to all rows in a single DataScan job. The filter needs to be a valid SQL expression for a WHERE clause in BigQuery standard SQL syntax. Example: col1 >= 0 AND col2 < 10'
          type: string
      description: DataProfileScan related setting.
    GoogleCloudDataplexV1ActionUnauthorizedResource:
      description: Action details for unauthorized resource issues raised to indicate that the service account associated with the lake instance is not authorized to access or manage the resource associated with an asset.
      properties: {}
      type: object
      id: GoogleCloudDataplexV1ActionUnauthorizedResource
    GoogleCloudDataplexV1Asset:
      properties:
        name:
          description: 'Output only. The relative resource name of the asset, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/assets/{asset_id}.'
          type: string
          readOnly: true
        discoverySpec:
          description: 'Optional. Specification of the discovery feature applied to data referenced by this asset. When this spec is left unset, the asset will use the spec set on the parent zone.'
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetDiscoverySpec'
        state:
          enumDescriptions:
            - State is not specified.
            - 'Resource is active, i.e., ready to use.'
            - Resource is under creation.
            - Resource is under deletion.
            - Resource is active but has unresolved actions.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - DELETING
            - ACTION_REQUIRED
          description: Output only. Current state of the asset.
          readOnly: true
        labels:
          additionalProperties:
            type: string
          description: Optional. User defined labels for the asset.
          type: object
        resourceSpec:
          description: Required. Specification of the resource that is referenced by this asset.
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetResourceSpec'
        uid:
          type: string
          readOnly: true
          description: Output only. System generated globally unique ID for the asset. This ID will be different if the asset is deleted and re-created with the same name.
        resourceStatus:
          description: Output only. Status of the resource referenced by this asset.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetResourceStatus'
        createTime:
          type: string
          format: google-datetime
          description: Output only. The time when the asset was created.
          readOnly: true
        description:
          type: string
          description: Optional. Description of the asset.
        discoveryStatus:
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetDiscoveryStatus'
          readOnly: true
          description: Output only. Status of the discovery feature applied to data referenced by this asset.
        displayName:
          type: string
          description: Optional. User friendly display name.
        updateTime:
          readOnly: true
          description: Output only. The time when the asset was last updated.
          format: google-datetime
          type: string
        securityStatus:
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetSecurityStatus'
          description: Output only. Status of the security policy applied to resource referenced by this asset.
          readOnly: true
      id: GoogleCloudDataplexV1Asset
      description: An asset represents a cloud resource that is being managed within a lake as a member of a zone.
      type: object
    GoogleCloudDataplexV1DataProfileSpecPostScanActions:
      id: GoogleCloudDataplexV1DataProfileSpecPostScanActions
      type: object
      properties:
        bigqueryExport:
          description: 'Optional. If set, results will be exported to the provided BigQuery table.'
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileSpecPostScanActionsBigQueryExport'
      description: The configuration of post scan actions of DataProfileScan job.
    GoogleIamV1AuditLogConfig:
      properties:
        exemptedMembers:
          type: array
          items:
            type: string
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
        logType:
          type: string
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          description: The log type that this config enables.
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
      description: 'Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables ''DATA_READ'' and ''DATA_WRITE'' logging, while exempting jose@example.com from DATA_READ logging.'
      type: object
      id: GoogleIamV1AuditLogConfig
    GoogleCloudDataplexV1DataScanExecutionSpec:
      description: DataScan execution settings.
      properties:
        field:
          description: 'Immutable. The unnested field (of type Date or Timestamp) that contains values which monotonically increase over time.If not specified, a data scan will run for all data in the table.'
          type: string
        trigger:
          description: 'Optional. Spec related to how often and when a scan should be triggered.If not specified, the default is OnDemand, which means the scan will not run until the user calls RunDataScan API.'
          $ref: '#/components/schemas/GoogleCloudDataplexV1Trigger'
      type: object
      id: GoogleCloudDataplexV1DataScanExecutionSpec
    GoogleCloudDataplexV1Partition:
      type: object
      properties:
        name:
          description: 'Output only. Partition values used in the HTTP URL must be double encoded. For example, url_encode(url_encode(value)) can be used to encode "US:CA/CA#Sunnyvale so that the request URL ends with "/partitions/US%253ACA/CA%2523Sunnyvale". The name field in the response retains the encoded format.'
          readOnly: true
          type: string
        values:
          description: 'Required. Immutable. The set of values representing the partition, which correspond to the partition schema defined in the parent entity.'
          items:
            type: string
          type: array
        location:
          type: string
          description: 'Required. Immutable. The location of the entity data within the partition, for example, gs://bucket/path/to/entity/key1=value1/key2=value2. Or projects//datasets//tables/'
        etag:
          description: Optional. The etag for this partition.
          deprecated: true
          type: string
      description: Represents partition metadata contained within entity instances.
      id: GoogleCloudDataplexV1Partition
    GoogleCloudDataplexV1TriggerOnDemand:
      type: object
      properties: {}
      description: The scan runs once via RunDataScan API.
      id: GoogleCloudDataplexV1TriggerOnDemand
    GoogleCloudDataplexV1DataScanEventPostScanActionsResultBigQueryExportResult:
      id: GoogleCloudDataplexV1DataScanEventPostScanActionsResultBigQueryExportResult
      description: The result of BigQuery export post scan action.
      properties:
        state:
          description: Execution state for the BigQuery exporting.
          type: string
          enumDescriptions:
            - The exporting state is unspecified.
            - The exporting completed successfully.
            - The exporting is no longer running due to an error.
            - The exporting is skipped due to no valid scan result to export (usually caused by scan failed).
          enum:
            - STATE_UNSPECIFIED
            - SUCCEEDED
            - FAILED
            - SKIPPED
        message:
          description: Additional information about the BigQuery exporting.
          type: string
      type: object
    GoogleLongrunningListOperationsResponse:
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        operations:
          type: array
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
      description: The response message for Operations.ListOperations.
      type: object
      id: GoogleLongrunningListOperationsResponse
    GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions:
      type: object
      description: Describe CSV and similar semi-structured data formats.
      id: GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions
      properties:
        delimiter:
          type: string
          description: 'Optional. The delimiter being used to separate values. This defaults to '',''.'
        encoding:
          description: Optional. The character encoding of the data. The default is UTF-8.
          type: string
        headerRows:
          type: integer
          description: Optional. The number of rows to interpret as header rows that should be skipped when reading data rows.
          format: int32
        disableTypeInference:
          type: boolean
          description: 'Optional. Whether to disable the inference of data type for CSV data. If true, all columns will be registered as strings.'
    GoogleCloudDataplexV1Action:
      properties:
        missingResource:
          description: Details for issues related to absence of a managed resource.
          $ref: '#/components/schemas/GoogleCloudDataplexV1ActionMissingResource'
        missingData:
          $ref: '#/components/schemas/GoogleCloudDataplexV1ActionMissingData'
          description: Details for issues related to absence of data within managed resources.
        failedSecurityPolicyApply:
          description: Details for issues related to applying security policy.
          $ref: '#/components/schemas/GoogleCloudDataplexV1ActionFailedSecurityPolicyApply'
        invalidDataPartition:
          description: Details for issues related to invalid or unsupported data partition structure.
          $ref: '#/components/schemas/GoogleCloudDataplexV1ActionInvalidDataPartition'
        asset:
          readOnly: true
          description: 'Output only. The relative resource name of the asset, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/assets/{asset_id}.'
          type: string
        detectTime:
          format: google-datetime
          description: The time that the issue was detected.
          type: string
        invalidDataFormat:
          description: Details for issues related to invalid or unsupported data formats.
          $ref: '#/components/schemas/GoogleCloudDataplexV1ActionInvalidDataFormat'
        name:
          description: 'Output only. The relative resource name of the action, of the form: projects/{project}/locations/{location}/lakes/{lake}/actions/{action} projects/{project}/locations/{location}/lakes/{lake}/zones/{zone}/actions/{action} projects/{project}/locations/{location}/lakes/{lake}/zones/{zone}/assets/{asset}/actions/{action}.'
          readOnly: true
          type: string
        issue:
          type: string
          description: Detailed description of the issue requiring action.
        lake:
          description: 'Output only. The relative resource name of the lake, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}.'
          readOnly: true
          type: string
        invalidDataOrganization:
          $ref: '#/components/schemas/GoogleCloudDataplexV1ActionInvalidDataOrganization'
          description: Details for issues related to invalid data arrangement.
        incompatibleDataSchema:
          description: Details for issues related to incompatible schemas detected within data.
          $ref: '#/components/schemas/GoogleCloudDataplexV1ActionIncompatibleDataSchema'
        unauthorizedResource:
          $ref: '#/components/schemas/GoogleCloudDataplexV1ActionUnauthorizedResource'
          description: Details for issues related to lack of permissions to access data resources.
        dataLocations:
          description: 'The list of data locations associated with this action. Cloud Storage locations are represented as URI paths(E.g. gs://bucket/table1/year=2020/month=Jan/). BigQuery locations refer to resource names(E.g. bigquery.googleapis.com/projects/project-id/datasets/dataset-id).'
          items:
            type: string
          type: array
        zone:
          readOnly: true
          type: string
          description: 'Output only. The relative resource name of the zone, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.'
        category:
          enumDescriptions:
            - Unspecified category.
            - Resource management related issues.
            - Security policy related issues.
            - Data and discovery related issues.
          description: The category of issue associated with the action.
          enum:
            - CATEGORY_UNSPECIFIED
            - RESOURCE_MANAGEMENT
            - SECURITY_POLICY
            - DATA_DISCOVERY
          type: string
      description: Action represents an issue requiring administrator action for resolution.
      id: GoogleCloudDataplexV1Action
      type: object
    GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation:
      type: object
      id: GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation
      properties:
        minValue:
          description: The minimum column statistic value allowed for a row to pass this validation.At least one of min_value and max_value need to be provided.
          type: string
        maxValue:
          description: The maximum column statistic value allowed for a row to pass this validation.At least one of min_value and max_value need to be provided.
          type: string
        strictMaxEnabled:
          type: boolean
          description: 'Whether column statistic needs to be strictly lesser than (''<'') the maximum, or if equality is allowed.Only relevant if a max_value has been defined. Default = false.'
        strictMinEnabled:
          type: boolean
          description: 'Whether column statistic needs to be strictly greater than (''>'') the minimum, or if equality is allowed.Only relevant if a min_value has been defined. Default = false.'
        statistic:
          description: The aggregate metric to evaluate.
          enumDescriptions:
            - Unspecified statistic type
            - Evaluate the column mean
            - Evaluate the column min
            - Evaluate the column max
          type: string
          enum:
            - STATISTIC_UNDEFINED
            - MEAN
            - MIN
            - MAX
      description: Evaluates whether the column aggregate statistic lies between a specified range.
    GoogleCloudDataplexV1ListDataTaxonomiesResponse:
      type: object
      properties:
        dataTaxonomies:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1DataTaxonomy'
          description: DataTaxonomies under the given parent location.
        nextPageToken:
          type: string
          description: 'Token to retrieve the next page of results, or empty if there are no more results in the list.'
        unreachableLocations:
          items:
            type: string
          type: array
          description: Locations that could not be reached.
      id: GoogleCloudDataplexV1ListDataTaxonomiesResponse
      description: List DataTaxonomies response.
    GoogleCloudDataplexV1DataQualityRuleNonNullExpectation:
      description: Evaluates whether each column value is null.
      type: object
      id: GoogleCloudDataplexV1DataQualityRuleNonNullExpectation
      properties: {}
    GoogleCloudDataplexV1StorageFormatIcebergOptions:
      description: Describes Iceberg data format.
      properties:
        metadataLocation:
          type: string
          description: 'Optional. The location of where the iceberg metadata is present, must be within the table path'
      type: object
      id: GoogleCloudDataplexV1StorageFormatIcebergOptions
    GoogleCloudDataplexV1ListZonesResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          description: 'Token to retrieve the next page of results, or empty if there are no more results in the list.'
        zones:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Zone'
          description: Zones under the given parent lake.
      id: GoogleCloudDataplexV1ListZonesResponse
      description: List zones response.
    GoogleCloudDataplexV1RunTaskResponse:
      id: GoogleCloudDataplexV1RunTaskResponse
      type: object
      properties:
        job:
          $ref: '#/components/schemas/GoogleCloudDataplexV1Job'
          description: Jobs created by RunTask API.
    GoogleCloudDataplexV1Content:
      properties:
        labels:
          type: object
          additionalProperties:
            type: string
          description: Optional. User defined labels for the content.
        uid:
          type: string
          readOnly: true
          description: Output only. System generated globally unique ID for the content. This ID will be different if the content is deleted and re-created with the same name.
        updateTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time when the content was last updated.
        dataText:
          description: Required. Content data in string format.
          type: string
        description:
          type: string
          description: Optional. Description of the content.
        notebook:
          description: Notebook related configurations.
          $ref: '#/components/schemas/GoogleCloudDataplexV1ContentNotebook'
        createTime:
          readOnly: true
          description: Output only. Content creation time.
          format: google-datetime
          type: string
        name:
          type: string
          readOnly: true
          description: 'Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}'
        path:
          type: string
          description: 'Required. The path for the Content file, represented as directory structure. Unique within a lake. Limited to alphanumerics, hyphens, underscores, dots and slashes.'
        sqlScript:
          $ref: '#/components/schemas/GoogleCloudDataplexV1ContentSqlScript'
          description: Sql Script related configurations.
      id: GoogleCloudDataplexV1Content
      type: object
      description: Content represents a user-visible notebook or a sql script
    GoogleCloudDataplexV1DiscoveryEventEntityDetails:
      type: object
      properties:
        entity:
          type: string
          description: The name of the entity resource. The name is the fully-qualified resource name.
        type:
          description: The type of the entity resource.
          enumDescriptions:
            - An unspecified event type.
            - Entities representing structured data.
            - Entities representing unstructured data.
          type: string
          enum:
            - ENTITY_TYPE_UNSPECIFIED
            - TABLE
            - FILESET
      description: Details about the entity.
      id: GoogleCloudDataplexV1DiscoveryEventEntityDetails
    GoogleCloudDataplexV1SchemaPartitionField:
      description: 'Represents a key field within the entity''s partition structure. You could have up to 20 partition fields, but only the first 10 partitions have the filtering ability due to performance consideration. Note: Partition fields are immutable.'
      id: GoogleCloudDataplexV1SchemaPartitionField
      type: object
      properties:
        type:
          type: string
          enum:
            - TYPE_UNSPECIFIED
            - BOOLEAN
            - BYTE
            - INT16
            - INT32
            - INT64
            - FLOAT
            - DOUBLE
            - DECIMAL
            - STRING
            - BINARY
            - TIMESTAMP
            - DATE
            - TIME
            - RECORD
            - 'NULL'
          description: Required. Immutable. The type of field.
          enumDescriptions:
            - SchemaType unspecified.
            - Boolean field.
            - Single byte numeric field.
            - 16-bit numeric field.
            - 32-bit numeric field.
            - 64-bit numeric field.
            - Floating point numeric field.
            - Double precision numeric field.
            - Real value numeric field.
            - Sequence of characters field.
            - Sequence of bytes field.
            - Date and time field.
            - Date field.
            - Time field.
            - 'Structured field. Nested fields that define the structure of the map. If all nested fields are nullable, this field represents a union.'
            - Null field that does not have values.
        name:
          type: string
          description: 'Required. Partition field name must consist of letters, numbers, and underscores only, with a maximum of length of 256 characters, and must begin with a letter or underscore..'
    GoogleCloudDataplexV1ListDataScansResponse:
      properties:
        unreachable:
          type: array
          items:
            type: string
          description: Locations that could not be reached.
        nextPageToken:
          type: string
          description: 'Token to retrieve the next page of results, or empty if there are no more results in the list.'
        dataScans:
          description: DataScans (BASIC view only) under the given parent location.
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1DataScan'
          type: array
      description: List dataScans response.
      id: GoogleCloudDataplexV1ListDataScansResponse
      type: object
    GoogleCloudDataplexV1DataTaxonomy:
      description: 'DataTaxonomy represents a set of hierarchical DataAttributes resources, grouped with a common theme Eg: ''SensitiveDataTaxonomy'' can have attributes to manage PII data. It is defined at project level.'
      type: object
      properties:
        description:
          type: string
          description: Optional. Description of the DataTaxonomy.
        updateTime:
          readOnly: true
          description: Output only. The time when the DataTaxonomy was last updated.
          format: google-datetime
          type: string
        displayName:
          description: Optional. User friendly display name.
          type: string
        attributeCount:
          readOnly: true
          description: Output only. The number of attributes in the DataTaxonomy.
          format: int32
          type: integer
        createTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The time when the DataTaxonomy was created.
        labels:
          description: Optional. User-defined labels for the DataTaxonomy.
          additionalProperties:
            type: string
          type: object
        uid:
          description: Output only. System generated globally unique ID for the dataTaxonomy. This ID will be different if the DataTaxonomy is deleted and re-created with the same name.
          type: string
          readOnly: true
        classCount:
          readOnly: true
          description: Output only. The number of classes in the DataTaxonomy.
          format: int32
          type: integer
        etag:
          description: 'This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.'
          type: string
        name:
          readOnly: true
          type: string
          description: 'Output only. The relative resource name of the DataTaxonomy, of the form: projects/{project_number}/locations/{location_id}/dataTaxonomies/{data_taxonomy_id}.'
      id: GoogleCloudDataplexV1DataTaxonomy
    GoogleCloudDataplexV1DataQualityResultPostScanActionsResult:
      type: object
      description: The result of post scan actions of DataQualityScan job.
      properties:
        bigqueryExportResult:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityResultPostScanActionsResultBigQueryExportResult'
          readOnly: true
          description: Output only. The result of BigQuery export post scan action.
      id: GoogleCloudDataplexV1DataQualityResultPostScanActionsResult
    GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValue:
      description: Top N non-null values in the scanned data.
      id: GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValue
      type: object
      properties:
        ratio:
          type: number
          description: Ratio of the corresponding value in the field against the total number of rows in the scanned data.
          format: double
        count:
          type: string
          format: int64
          description: Count of the corresponding value in the scanned data.
        value:
          type: string
          description: String value of a top N non-null value.
    GoogleCloudDataplexV1SessionEventQueryDetail:
      description: Execution details of the query.
      id: GoogleCloudDataplexV1SessionEventQueryDetail
      type: object
      properties:
        engine:
          enum:
            - ENGINE_UNSPECIFIED
            - SPARK_SQL
            - BIGQUERY
          type: string
          enumDescriptions:
            - An unspecified Engine type.
            - Spark-sql engine is specified in Query.
            - BigQuery engine is specified in Query.
          description: Query Execution engine.
        dataProcessedBytes:
          description: The data processed by the query.
          format: int64
          type: string
        resultSizeBytes:
          description: The size of results the query produced.
          type: string
          format: int64
        queryText:
          description: The query text executed.
          type: string
        duration:
          format: google-duration
          description: Time taken for execution of the query.
          type: string
        queryId:
          description: The unique Query id identifying the query.
          type: string
    GoogleCloudDataplexV1EnvironmentEndpoints:
      properties:
        notebooks:
          readOnly: true
          type: string
          description: Output only. URI to serve notebook APIs
        sql:
          description: Output only. URI to serve SQL APIs
          readOnly: true
          type: string
      description: URI Endpoints to access sessions associated with the Environment.
      type: object
      id: GoogleCloudDataplexV1EnvironmentEndpoints
    GoogleCloudDataplexV1DataAccessSpec:
      description: 'DataAccessSpec holds the access control configuration to be enforced on data stored within resources (eg: rows, columns in BigQuery Tables). When associated with data, the data is only accessible to principals explicitly granted access through the DataAccessSpec. Principals with access to the containing resource are not implicitly granted access.'
      properties:
        readers:
          description: 'Optional. The format of strings follows the pattern followed by IAM in the bindings. user:{email}, serviceAccount:{email} group:{email}. The set of principals to be granted reader role on data stored within resources.'
          type: array
          items:
            type: string
      id: GoogleCloudDataplexV1DataAccessSpec
      type: object
    GoogleCloudDataplexV1DataProfileSpecPostScanActionsBigQueryExport:
      description: The configuration of BigQuery export post scan action.
      type: object
      id: GoogleCloudDataplexV1DataProfileSpecPostScanActionsBigQueryExport
      properties:
        resultsTable:
          description: 'Optional. The BigQuery table to export DataProfileScan results to. Format: projects/{project}/datasets/{dataset}/tables/{table}'
          type: string
    GoogleCloudDataplexV1StorageFormatJsonOptions:
      type: object
      description: Describes JSON data format.
      id: GoogleCloudDataplexV1StorageFormatJsonOptions
      properties:
        encoding:
          type: string
          description: 'Optional. The character encoding of the data. Accepts "US-ASCII", "UTF-8" and "ISO-8859-1". Defaults to UTF-8 if not specified.'
    GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions:
      properties:
        delimiter:
          type: string
          description: 'Optional. The delimiter being used to separate values. This defaults to '',''.'
        disableTypeInference:
          description: 'Optional. Whether to disable the inference of data type for CSV data. If true, all columns will be registered as strings.'
          type: boolean
        encoding:
          type: string
          description: Optional. The character encoding of the data. The default is UTF-8.
        headerRows:
          format: int32
          type: integer
          description: Optional. The number of rows to interpret as header rows that should be skipped when reading data rows.
      description: Describe CSV and similar semi-structured data formats.
      id: GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions
      type: object
    GoogleCloudDataplexV1ScannedData:
      properties:
        incrementalField:
          $ref: '#/components/schemas/GoogleCloudDataplexV1ScannedDataIncrementalField'
          description: The range denoted by values of an incremental field
      type: object
      description: The data scanned during processing (e.g. in incremental DataScan)
      id: GoogleCloudDataplexV1ScannedData
    GoogleCloudDataplexV1DiscoveryEventActionDetails:
      id: GoogleCloudDataplexV1DiscoveryEventActionDetails
      type: object
      description: Details about the action.
      properties:
        type:
          type: string
          description: 'The type of action. Eg. IncompatibleDataSchema, InvalidDataFormat'
    GoogleCloudDataplexV1LakeMetastore:
      id: GoogleCloudDataplexV1LakeMetastore
      properties:
        service:
          description: 'Optional. A relative reference to the Dataproc Metastore (https://cloud.google.com/dataproc-metastore/docs) service associated with the lake: projects/{project_id}/locations/{location_id}/services/{service_id}'
          type: string
      type: object
      description: Settings to manage association of Dataproc Metastore with a lake.
    GoogleCloudDataplexV1ActionFailedSecurityPolicyApply:
      description: 'Failed to apply security policy to the managed resource(s) under a lake, zone or an asset. For a lake or zone resource, one or more underlying assets has a failure applying security policy to the associated managed resource.'
      properties:
        asset:
          type: string
          description: Resource name of one of the assets with failing security policy application. Populated for a lake or zone resource only.
      type: object
      id: GoogleCloudDataplexV1ActionFailedSecurityPolicyApply
    GoogleCloudDataplexV1Session:
      type: object
      properties:
        createTime:
          type: string
          readOnly: true
          description: Output only. Session start time.
          format: google-datetime
        userId:
          type: string
          readOnly: true
          description: Output only. Email of user running the session.
        name:
          type: string
          description: 'Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/environment/{environment_id}/sessions/{session_id}'
          readOnly: true
        state:
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - DELETING
            - ACTION_REQUIRED
          readOnly: true
          description: Output only. State of Session
          type: string
          enumDescriptions:
            - State is not specified.
            - 'Resource is active, i.e., ready to use.'
            - Resource is under creation.
            - Resource is under deletion.
            - Resource is active but has unresolved actions.
      id: GoogleCloudDataplexV1Session
      description: Represents an active analyze session running for a user.
    GoogleCloudDataplexV1DataAttributeBinding:
      description: 'DataAttributeBinding represents binding of attributes to resources. Eg: Bind ''CustomerInfo'' entity with ''PII'' attribute.'
      properties:
        labels:
          description: Optional. User-defined labels for the DataAttributeBinding.
          additionalProperties:
            type: string
          type: object
        updateTime:
          format: google-datetime
          description: Output only. The time when the DataAttributeBinding was last updated.
          type: string
          readOnly: true
        name:
          description: 'Output only. The relative resource name of the Data Attribute Binding, of the form: projects/{project_number}/locations/{location}/dataAttributeBindings/{data_attribute_binding_id}'
          readOnly: true
          type: string
        createTime:
          description: Output only. The time when the DataAttributeBinding was created.
          type: string
          readOnly: true
          format: google-datetime
        attributes:
          type: array
          description: 'Optional. List of attributes to be associated with the resource, provided in the form: projects/{project}/locations/{location}/dataTaxonomies/{dataTaxonomy}/attributes/{data_attribute_id}'
          items:
            type: string
        etag:
          type: string
          description: 'This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. Etags must be used when calling the DeleteDataAttributeBinding and the UpdateDataAttributeBinding method.'
        resource:
          description: 'Optional. Immutable. The resource name of the resource that is associated to attributes. Presently, only entity resource is supported in the form: projects/{project}/locations/{location}/lakes/{lake}/zones/{zone}/entities/{entity_id} Must belong in the same project and region as the attribute binding, and there can only exist one active binding for a resource.'
          type: string
        displayName:
          description: Optional. User friendly display name.
          type: string
        description:
          type: string
          description: Optional. Description of the DataAttributeBinding.
        uid:
          readOnly: true
          type: string
          description: Output only. System generated globally unique ID for the DataAttributeBinding. This ID will be different if the DataAttributeBinding is deleted and re-created with the same name.
        paths:
          description: Optional. The list of paths for items within the associated resource (eg. columns and partitions within a table) along with attribute bindings.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1DataAttributeBindingPath'
      type: object
      id: GoogleCloudDataplexV1DataAttributeBinding
    GoogleCloudDataplexV1TaskInfrastructureSpec:
      id: GoogleCloudDataplexV1TaskInfrastructureSpec
      properties:
        containerImage:
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime'
          description: Container Image Runtime Configuration.
        batch:
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources'
          description: Compute resources needed for a Task when using Dataproc Serverless.
        vpcNetwork:
          description: Vpc network.
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork'
      description: Configuration for the underlying infrastructure used to run workloads.
      type: object
    GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions:
      id: GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions
      properties:
        disableTypeInference:
          description: 'Optional. Whether to disable the inference of data type for Json data. If true, all columns will be registered as their primitive types (strings, number or boolean).'
          type: boolean
        encoding:
          description: Optional. The character encoding of the data. The default is UTF-8.
          type: string
      description: Describe JSON data format.
      type: object
    GoogleCloudDataplexV1Zone:
      properties:
        name:
          type: string
          readOnly: true
          description: 'Output only. The relative resource name of the zone, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.'
        labels:
          description: Optional. User defined labels for the zone.
          additionalProperties:
            type: string
          type: object
        uid:
          type: string
          readOnly: true
          description: Output only. System generated globally unique ID for the zone. This ID will be different if the zone is deleted and re-created with the same name.
        updateTime:
          description: Output only. The time when the zone was last updated.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Optional. Description of the zone.
          type: string
        createTime:
          format: google-datetime
          description: Output only. The time when the zone was created.
          type: string
          readOnly: true
        displayName:
          type: string
          description: Optional. User friendly display name.
        resourceSpec:
          description: Required. Specification of the resources that are referenced by the assets within this zone.
          $ref: '#/components/schemas/GoogleCloudDataplexV1ZoneResourceSpec'
        discoverySpec:
          $ref: '#/components/schemas/GoogleCloudDataplexV1ZoneDiscoverySpec'
          description: Optional. Specification of the discovery feature applied to data in this zone.
        state:
          readOnly: true
          description: Output only. Current state of the zone.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - DELETING
            - ACTION_REQUIRED
          type: string
          enumDescriptions:
            - State is not specified.
            - 'Resource is active, i.e., ready to use.'
            - Resource is under creation.
            - Resource is under deletion.
            - Resource is active but has unresolved actions.
        assetStatus:
          readOnly: true
          description: Output only. Aggregated status of the underlying assets of the zone.
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetStatus'
        type:
          enumDescriptions:
            - Zone type not specified.
            - A zone that contains data that needs further processing before it is considered generally ready for consumption and analytics workloads.
            - 'A zone that contains data that is considered to be ready for broader consumption and analytics workloads. Curated structured data stored in Cloud Storage must conform to certain file formats (parquet, avro and orc) and organized in a hive-compatible directory layout.'
          type: string
          enum:
            - TYPE_UNSPECIFIED
            - RAW
            - CURATED
          description: Required. Immutable. The type of the zone.
      id: GoogleCloudDataplexV1Zone
      type: object
      description: A zone represents a logical group of related assets within a lake. A zone can be used to map to organizational structure or represent stages of data readiness from raw to curated. It provides managing behavior that is shared or inherited by all contained assets.
    GoogleCloudDataplexV1ActionMissingData:
      type: object
      properties: {}
      id: GoogleCloudDataplexV1ActionMissingData
      description: Action details for absence of data detected by discovery.
    GoogleCloudDataplexV1ContentNotebook:
      type: object
      id: GoogleCloudDataplexV1ContentNotebook
      description: Configuration for Notebook content.
      properties:
        kernelType:
          enumDescriptions:
            - Kernel Type unspecified.
            - Python 3 Kernel.
          description: Required. Kernel Type of the notebook.
          enum:
            - KERNEL_TYPE_UNSPECIFIED
            - PYTHON3
          type: string
    GoogleCloudDataplexV1DataProfileResultProfileField:
      type: object
      description: A field within a table.
      properties:
        profile:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfo'
          description: Profile information for the corresponding field.
        name:
          description: The name of the field.
          type: string
        mode:
          type: string
          description: 'The mode of the field. Possible values include: REQUIRED, if it is a required field. NULLABLE, if it is an optional field. REPEATED, if it is a repeated field.'
        type:
          description: 'The data type retrieved from the schema of the data source. For instance, for a BigQuery native table, it is the BigQuery Table Schema (https://cloud.google.com/bigquery/docs/reference/rest/v2/tables#tablefieldschema). For a Dataplex Entity, it is the Entity Schema (https://cloud.google.com/dataplex/docs/reference/rpc/google.cloud.dataplex.v1#type_3).'
          type: string
      id: GoogleCloudDataplexV1DataProfileResultProfileField
    GoogleCloudDataplexV1ListJobsResponse:
      id: GoogleCloudDataplexV1ListJobsResponse
      type: object
      properties:
        nextPageToken:
          description: 'Token to retrieve the next page of results, or empty if there are no more results in the list.'
          type: string
        jobs:
          description: Jobs under a given task.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Job'
      description: List jobs response.
    GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfo:
      properties:
        maxLength:
          description: Maximum length of non-null values in the scanned data.
          format: int64
          type: string
        minLength:
          type: string
          description: Minimum length of non-null values in the scanned data.
          format: int64
        averageLength:
          type: number
          format: double
          description: Average length of non-null values in the scanned data.
      type: object
      id: GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfo
      description: The profile information for a string type field.
    GoogleCloudLocationLocation:
      description: A resource that represents a Google Cloud location.
      id: GoogleCloudLocationLocation
      type: object
      properties:
        locationId:
          description: 'The canonical id for this location. For example: "us-east1".'
          type: string
        metadata:
          type: object
          description: Service-specific metadata. For example the available capacity at the given location.
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        displayName:
          type: string
          description: 'The friendly name for this location, typically a nearby city name. For example, "Tokyo".'
        labels:
          type: object
          additionalProperties:
            type: string
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"} '
        name:
          type: string
          description: 'Resource name for the location, which may vary between implementations. For example: "projects/example-project/locations/us-east1"'
    GoogleCloudDataplexV1EnvironmentSessionSpec:
      type: object
      id: GoogleCloudDataplexV1EnvironmentSessionSpec
      description: Configuration for sessions created for this environment.
      properties:
        enableFastStartup:
          type: boolean
          description: 'Optional. If True, this causes sessions to be pre-created and available for faster startup to enable interactive exploration use-cases. This defaults to False to avoid additional billed charges. These can only be set to True for the environment with name set to "default", and with default configuration.'
        maxIdleDuration:
          format: google-duration
          description: Optional. The idle time configuration of the session. The session will be auto-terminated at the end of this period.
          type: string
    GoogleCloudDataplexV1Lake:
      description: 'A lake is a centralized repository for managing enterprise data across the organization distributed across many cloud projects, and stored in a variety of storage services such as Google Cloud Storage and BigQuery. The resources attached to a lake are referred to as managed resources. Data within these managed resources can be structured or unstructured. A lake provides data admins with tools to organize, secure and manage their data at scale, and provides data scientists and data engineers an integrated experience to easily search, discover, analyze and transform data and associated metadata.'
      id: GoogleCloudDataplexV1Lake
      properties:
        state:
          readOnly: true
          description: Output only. Current state of the lake.
          enumDescriptions:
            - State is not specified.
            - 'Resource is active, i.e., ready to use.'
            - Resource is under creation.
            - Resource is under deletion.
            - Resource is active but has unresolved actions.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - DELETING
            - ACTION_REQUIRED
        metastoreStatus:
          readOnly: true
          description: Output only. Metastore status of the lake.
          $ref: '#/components/schemas/GoogleCloudDataplexV1LakeMetastoreStatus'
        updateTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The time when the lake was last updated.
        uid:
          type: string
          description: Output only. System generated globally unique ID for the lake. This ID will be different if the lake is deleted and re-created with the same name.
          readOnly: true
        description:
          description: Optional. Description of the lake.
          type: string
        name:
          type: string
          description: 'Output only. The relative resource name of the lake, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}.'
          readOnly: true
        displayName:
          description: Optional. User friendly display name.
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
          description: Optional. User-defined labels for the lake.
        assetStatus:
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetStatus'
          description: Output only. Aggregated status of the underlying assets of the lake.
          readOnly: true
        serviceAccount:
          type: string
          readOnly: true
          description: Output only. Service account associated with this lake. This service account must be authorized to access or operate on resources managed by the lake.
        metastore:
          description: Optional. Settings to manage lake and Dataproc Metastore service instance association.
          $ref: '#/components/schemas/GoogleCloudDataplexV1LakeMetastore'
        createTime:
          type: string
          format: google-datetime
          description: Output only. The time when the lake was created.
          readOnly: true
      type: object
    GoogleLongrunningCancelOperationRequest:
      properties: {}
      type: object
      id: GoogleLongrunningCancelOperationRequest
      description: The request message for Operations.CancelOperation.
    GoogleCloudDataplexV1DataQualitySpec:
      id: GoogleCloudDataplexV1DataQualitySpec
      type: object
      properties:
        postScanActions:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualitySpecPostScanActions'
          description: Optional. Actions to take upon job completion.
        rowFilter:
          description: 'Optional. A filter applied to all rows in a single DataScan job. The filter needs to be a valid SQL expression for a WHERE clause in BigQuery standard SQL syntax. Example: col1 >= 0 AND col2 < 10'
          type: string
        rules:
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityRule'
          type: array
          description: The list of rules to evaluate against a data source. At least one rule is required.
        samplingPercent:
          format: float
          type: number
          description: 'Optional. The percentage of the records to be selected from the dataset for DataScan. Value can range between 0.0 and 100.0 with up to 3 significant decimal digits. Sampling is not applied if sampling_percent is not specified, 0 or 100.'
      description: DataQualityScan related setting.
    GoogleCloudDataplexV1SchemaSchemaField:
      id: GoogleCloudDataplexV1SchemaSchemaField
      properties:
        description:
          description: Optional. User friendly field description. Must be less than or equal to 1024 characters.
          type: string
        fields:
          description: Optional. Any nested field for complex types.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1SchemaSchemaField'
        type:
          description: Required. The type of field.
          enumDescriptions:
            - SchemaType unspecified.
            - Boolean field.
            - Single byte numeric field.
            - 16-bit numeric field.
            - 32-bit numeric field.
            - 64-bit numeric field.
            - Floating point numeric field.
            - Double precision numeric field.
            - Real value numeric field.
            - Sequence of characters field.
            - Sequence of bytes field.
            - Date and time field.
            - Date field.
            - Time field.
            - 'Structured field. Nested fields that define the structure of the map. If all nested fields are nullable, this field represents a union.'
            - Null field that does not have values.
          type: string
          enum:
            - TYPE_UNSPECIFIED
            - BOOLEAN
            - BYTE
            - INT16
            - INT32
            - INT64
            - FLOAT
            - DOUBLE
            - DECIMAL
            - STRING
            - BINARY
            - TIMESTAMP
            - DATE
            - TIME
            - RECORD
            - 'NULL'
        mode:
          description: Required. Additional field semantics.
          enum:
            - MODE_UNSPECIFIED
            - REQUIRED
            - NULLABLE
            - REPEATED
          type: string
          enumDescriptions:
            - Mode unspecified.
            - The field has required semantics.
            - 'The field has optional semantics, and may be null.'
            - 'The field has repeated (0 or more) semantics, and is a list of values.'
        name:
          type: string
          description: 'Required. The name of the field. Must contain only letters, numbers and underscores, with a maximum length of 767 characters, and must begin with a letter or underscore.'
      description: Represents a column field within a table schema.
      type: object
    GoogleIamV1Binding:
      description: 'Associates members, or principals, with a role.'
      id: GoogleIamV1Binding
      properties:
        role:
          type: string
          description: 'Role that is assigned to the list of members, or principals. For example, roles/viewer, roles/editor, or roles/owner.'
        members:
          description: 'Specifies the principals requesting access for a Google Cloud resource. members can have the following values: allUsers: A special identifier that represents anyone who is on the internet; with or without a Google account. allAuthenticatedUsers: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. user:{emailid}: An email address that represents a specific Google account. For example, alice@example.com . serviceAccount:{emailid}: An email address that represents a Google service account. For example, my-other-app@appspot.gserviceaccount.com. serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]: An identifier for a Kubernetes service account (https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, my-project.svc.id.goog[my-namespace/my-kubernetes-sa]. group:{emailid}: An email address that represents a Google group. For example, admins@example.com. domain:{domain}: The G Suite domain (primary) that represents all the users of that domain. For example, google.com or example.com. deleted:user:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a user that has been recently deleted. For example, alice@example.com?uid=123456789012345678901. If the user is recovered, this value reverts to user:{emailid} and the recovered user retains the role in the binding. deleted:serviceAccount:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901. If the service account is undeleted, this value reverts to serviceAccount:{emailid} and the undeleted service account retains the role in the binding. deleted:group:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, admins@example.com?uid=123456789012345678901. If the group is recovered, this value reverts to group:{emailid} and the recovered group retains the role in the binding.'
          items:
            type: string
          type: array
        condition:
          $ref: '#/components/schemas/GoogleTypeExpr'
          description: 'The condition that is associated with this binding.If the condition evaluates to true, then this binding applies to the current request.If the condition evaluates to false, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).'
      type: object
    GoogleCloudDataplexV1DataQualityRule:
      properties:
        rangeExpectation:
          description: Row-level rule which evaluates whether each column value lies between a specified range.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityRuleRangeExpectation'
        statisticRangeExpectation:
          description: Aggregate rule which evaluates whether the column aggregate statistic lies between a specified range.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation'
        column:
          description: Optional. The unnested column which this rule is evaluated against.
          type: string
        setExpectation:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityRuleSetExpectation'
          description: Row-level rule which evaluates whether each column value is contained by a specified set.
        ignoreNull:
          description: 'Optional. Rows with null values will automatically fail a rule, unless ignore_null is true. In that case, such null rows are trivially considered passing.This field is only valid for row-level type rules.'
          type: boolean
        threshold:
          type: number
          description: 'Optional. The minimum ratio of passing_rows / total_rows required to pass this rule, with a range of 0.0, 1.0.0 indicates default value (i.e. 1.0).This field is only valid for row-level type rules.'
          format: double
        rowConditionExpectation:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation'
          description: Row-level rule which evaluates whether each row in a table passes the specified condition.
        regexExpectation:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityRuleRegexExpectation'
          description: Row-level rule which evaluates whether each column value matches a specified regex.
        tableConditionExpectation:
          description: Aggregate rule which evaluates whether the provided expression is true for a table.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation'
        description:
          type: string
          description: 'Optional. Description of the rule. The maximum length is 1,024 characters.'
        dimension:
          description: 'Required. The dimension a rule belongs to. Results are also aggregated at the dimension level. Supported dimensions are "COMPLETENESS", "ACCURACY", "CONSISTENCY", "VALIDITY", "UNIQUENESS", "INTEGRITY"'
          type: string
        name:
          type: string
          description: 'Optional. A mutable name for the rule. The name must contain only letters (a-z, A-Z), numbers (0-9), or hyphens (-). The maximum length is 63 characters. Must start with a letter. Must end with a number or a letter.'
        nonNullExpectation:
          description: Row-level rule which evaluates whether each column value is null.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityRuleNonNullExpectation'
        uniquenessExpectation:
          description: Row-level rule which evaluates whether each column value is unique.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityRuleUniquenessExpectation'
      type: object
      description: A rule captures data quality intent about a data source.
      id: GoogleCloudDataplexV1DataQualityRule
    GoogleCloudDataplexV1DataProfileResultPostScanActionsResultBigQueryExportResult:
      description: The result of BigQuery export post scan action.
      id: GoogleCloudDataplexV1DataProfileResultPostScanActionsResultBigQueryExportResult
      type: object
      properties:
        message:
          description: Output only. Additional information about the BigQuery exporting.
          readOnly: true
          type: string
        state:
          enum:
            - STATE_UNSPECIFIED
            - SUCCEEDED
            - FAILED
            - SKIPPED
          readOnly: true
          enumDescriptions:
            - The exporting state is unspecified.
            - The exporting completed successfully.
            - The exporting is no longer running due to an error.
            - The exporting is skipped due to no valid scan result to export (usually caused by scan failed).
          description: Output only. Execution state for the BigQuery exporting.
          type: string
    GoogleCloudDataplexV1ListLakesResponse:
      id: GoogleCloudDataplexV1ListLakesResponse
      properties:
        unreachableLocations:
          items:
            type: string
          type: array
          description: Locations that could not be reached.
        nextPageToken:
          description: 'Token to retrieve the next page of results, or empty if there are no more results in the list.'
          type: string
        lakes:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Lake'
          description: Lakes under the given parent location.
      description: List lakes response.
      type: object
    GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation:
      id: GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation
      description: 'Evaluates whether the provided expression is true.The SQL expression needs to use BigQuery standard SQL syntax and should produce a scalar boolean result.Example: MIN(col1) >= 0'
      type: object
      properties:
        sqlExpression:
          type: string
          description: The SQL expression.
    GoogleCloudDataplexV1AssetSecurityStatus:
      id: GoogleCloudDataplexV1AssetSecurityStatus
      description: 'Security policy status of the asset. Data security policy, i.e., readers, writers & owners, should be specified in the lake/zone/asset IAM policy.'
      type: object
      properties:
        updateTime:
          format: google-datetime
          description: Last update time of the status.
          type: string
        state:
          enumDescriptions:
            - State unspecified.
            - Security policy has been successfully applied to the attached resource.
            - Security policy is in the process of being applied to the attached resource.
            - Security policy could not be applied to the attached resource due to errors.
          enum:
            - STATE_UNSPECIFIED
            - READY
            - APPLYING
            - ERROR
          description: The current state of the security policy applied to the attached resource.
          type: string
        message:
          type: string
          description: Additional information about the current state.
    GoogleIamV1SetIamPolicyRequest:
      description: Request message for SetIamPolicy method.
      id: GoogleIamV1SetIamPolicyRequest
      properties:
        updateMask:
          description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used:paths: "bindings, etag"'
          format: google-fieldmask
          type: string
        policy:
          description: 'REQUIRED: The complete policy to be applied to the resource. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.'
          $ref: '#/components/schemas/GoogleIamV1Policy'
      type: object
    GoogleCloudDataplexV1DataQualityScanRuleResult:
      description: Information about the result of a data quality rule for data quality scan. The monitored resource is 'DataScan'.
      type: object
      id: GoogleCloudDataplexV1DataQualityScanRuleResult
      properties:
        thresholdPercent:
          format: double
          type: number
          description: 'The passing threshold (0.0, 100.0) of the data quality rule.'
        ruleName:
          description: The name of the data quality rule.
          type: string
        jobId:
          type: string
          description: Identifier of the specific data scan job this log entry is for.
        result:
          enum:
            - RESULT_UNSPECIFIED
            - PASSED
            - FAILED
          type: string
          enumDescriptions:
            - An unspecified result.
            - The data quality rule passed.
            - The data quality rule failed.
          description: The result of the data quality rule.
        ruleType:
          description: The type of the data quality rule.
          enum:
            - RULE_TYPE_UNSPECIFIED
            - NON_NULL_EXPECTATION
            - RANGE_EXPECTATION
            - REGEX_EXPECTATION
            - ROW_CONDITION_EXPECTATION
            - SET_EXPECTATION
            - STATISTIC_RANGE_EXPECTATION
            - TABLE_CONDITION_EXPECTATION
            - UNIQUENESS_EXPECTATION
          enumDescriptions:
            - An unspecified rule type.
            - 'Please see https://cloud.google.com/dataplex/docs/reference/rest/v1/DataQualityRule#nonnullexpectation.'
            - 'Please see https://cloud.google.com/dataplex/docs/reference/rest/v1/DataQualityRule#rangeexpectation.'
            - 'Please see https://cloud.google.com/dataplex/docs/reference/rest/v1/DataQualityRule#regexexpectation.'
            - 'Please see https://cloud.google.com/dataplex/docs/reference/rest/v1/DataQualityRule#rowconditionexpectation.'
            - 'Please see https://cloud.google.com/dataplex/docs/reference/rest/v1/DataQualityRule#setexpectation.'
            - 'Please see https://cloud.google.com/dataplex/docs/reference/rest/v1/DataQualityRule#statisticrangeexpectation.'
            - 'Please see https://cloud.google.com/dataplex/docs/reference/rest/v1/DataQualityRule#tableconditionexpectation.'
            - 'Please see https://cloud.google.com/dataplex/docs/reference/rest/v1/DataQualityRule#uniquenessexpectation.'
          type: string
        evaluatedRowCount:
          type: string
          format: int64
          description: The number of rows evaluated against the data quality rule. This field is only valid for rules of PER_ROW evaluation type.
        ruleDimension:
          description: The dimension of the data quality rule.
          type: string
        column:
          description: The column which this rule is evaluated against.
          type: string
        passedRowCount:
          format: int64
          description: The number of rows which passed a rule evaluation. This field is only valid for rules of PER_ROW evaluation type.
          type: string
        dataSource:
          type: string
          description: The data source of the data scan (e.g. BigQuery table name).
        evalutionType:
          enum:
            - EVALUATION_TYPE_UNSPECIFIED
            - PER_ROW
            - AGGREGATE
          type: string
          description: The evaluation type of the data quality rule.
          enumDescriptions:
            - An unspecified evaluation type.
            - The rule evaluation is done at per row level.
            - The rule evaluation is done for an aggregate of rows.
        nullRowCount:
          format: int64
          description: The number of rows with null values in the specified column.
          type: string
    GoogleCloudDataplexV1ListContentResponse:
      description: List content response.
      type: object
      id: GoogleCloudDataplexV1ListContentResponse
      properties:
        content:
          description: Content under the given parent lake.
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
          type: array
        nextPageToken:
          description: 'Token to retrieve the next page of results, or empty if there are no more results in the list.'
          type: string
    GoogleCloudDataplexV1ActionMissingResource:
      description: Action details for resource references in assets that cannot be located.
      properties: {}
      id: GoogleCloudDataplexV1ActionMissingResource
      type: object
    GoogleCloudDataplexV1Task:
      type: object
      properties:
        labels:
          description: Optional. User-defined labels for the task.
          type: object
          additionalProperties:
            type: string
        executionStatus:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskExecutionStatus'
          description: Output only. Status of the latest task executions.
        displayName:
          description: Optional. User friendly display name.
          type: string
        description:
          description: Optional. Description of the task.
          type: string
        createTime:
          description: Output only. The time when the task was created.
          readOnly: true
          type: string
          format: google-datetime
        state:
          enumDescriptions:
            - State is not specified.
            - 'Resource is active, i.e., ready to use.'
            - Resource is under creation.
            - Resource is under deletion.
            - Resource is active but has unresolved actions.
          readOnly: true
          description: Output only. Current state of the task.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - DELETING
            - ACTION_REQUIRED
        executionSpec:
          description: Required. Spec related to how a task is executed.
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskExecutionSpec'
        updateTime:
          readOnly: true
          type: string
          description: Output only. The time when the task was last updated.
          format: google-datetime
        name:
          type: string
          description: 'Output only. The relative resource name of the task, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/ tasks/{task_id}.'
          readOnly: true
        spark:
          description: Config related to running custom Spark tasks.
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskSparkTaskConfig'
        uid:
          description: Output only. System generated globally unique ID for the task. This ID will be different if the task is deleted and re-created with the same name.
          readOnly: true
          type: string
        triggerSpec:
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskTriggerSpec'
          description: Required. Spec related to how often and when a task should be triggered.
        notebook:
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskNotebookTaskConfig'
          description: Config related to running scheduled Notebooks.
      description: A task represents a user-visible job.
      id: GoogleCloudDataplexV1Task
    GoogleCloudDataplexV1RunDataScanResponse:
      type: object
      properties:
        job:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataScanJob'
          description: DataScanJob created by RunDataScan request.
      id: GoogleCloudDataplexV1RunDataScanResponse
      description: Run DataScan Response.
    GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources:
      description: Compute resources associated with the analyze interactive workloads.
      id: GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources
      type: object
      properties:
        nodeCount:
          description: Optional. Total number of nodes in the sessions created for this environment.
          format: int32
          type: integer
        maxNodeCount:
          format: int32
          description: 'Optional. Max configurable nodes. If max_node_count > node_count, then auto-scaling is enabled.'
          type: integer
        diskSizeGb:
          format: int32
          type: integer
          description: Optional. Size in GB of the disk. Default is 100 GB.
    GoogleCloudDataplexV1ListDataScanJobsResponse:
      properties:
        nextPageToken:
          type: string
          description: 'Token to retrieve the next page of results, or empty if there are no more results in the list.'
        dataScanJobs:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1DataScanJob'
          description: DataScanJobs (BASIC view only) under a given dataScan.
      id: GoogleCloudDataplexV1ListDataScanJobsResponse
      type: object
      description: List DataScanJobs response.
    GoogleCloudDataplexV1DataScanJob:
      type: object
      properties:
        type:
          readOnly: true
          enum:
            - DATA_SCAN_TYPE_UNSPECIFIED
            - DATA_QUALITY
            - DATA_PROFILE
          description: Output only. The type of the parent DataScan.
          enumDescriptions:
            - The DataScan type is unspecified.
            - Data Quality scan.
            - Data Profile scan.
          type: string
        startTime:
          description: Output only. The time when the DataScanJob was started.
          readOnly: true
          format: google-datetime
          type: string
        endTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time when the DataScanJob ended.
          type: string
        dataProfileResult:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileResult'
          description: Output only. The result of the data profile scan.
          readOnly: true
        uid:
          readOnly: true
          type: string
          description: Output only. System generated globally unique ID for the DataScanJob.
        dataProfileSpec:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileSpec'
          readOnly: true
          description: Output only. DataProfileScan related setting.
        message:
          description: Output only. Additional information about the current state.
          type: string
          readOnly: true
        name:
          readOnly: true
          type: string
          description: 'Output only. The relative resource name of the DataScanJob, of the form: projects/{project}/locations/{location_id}/dataScans/{datascan_id}/jobs/{job_id}, where project refers to a project_id or project_number and location_id refers to a GCP region.'
        dataQualitySpec:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualitySpec'
          description: Output only. DataQualityScan related setting.
        state:
          enumDescriptions:
            - The DataScanJob state is unspecified.
            - The DataScanJob is running.
            - The DataScanJob is canceling.
            - The DataScanJob cancellation was successful.
            - The DataScanJob completed successfully.
            - The DataScanJob is no longer running due to an error.
            - The DataScanJob has been created but not started to run yet.
          enum:
            - STATE_UNSPECIFIED
            - RUNNING
            - CANCELING
            - CANCELLED
            - SUCCEEDED
            - FAILED
            - PENDING
          type: string
          readOnly: true
          description: Output only. Execution state for the DataScanJob.
        dataQualityResult:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityResult'
          readOnly: true
          description: Output only. The result of the data quality scan.
      id: GoogleCloudDataplexV1DataScanJob
      description: A DataScanJob represents an instance of DataScan execution.
    GoogleCloudDataplexV1ListAssetsResponse:
      id: GoogleCloudDataplexV1ListAssetsResponse
      type: object
      properties:
        assets:
          description: Asset under the given parent zone.
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Asset'
          type: array
        nextPageToken:
          description: 'Token to retrieve the next page of results, or empty if there are no more results in the list.'
          type: string
      description: List assets response.
    GoogleCloudDataplexV1StorageAccess:
      description: Describes the access mechanism of the data within its storage location.
      id: GoogleCloudDataplexV1StorageAccess
      properties:
        read:
          description: Output only. Describes the read access mechanism of the data. Not user settable.
          readOnly: true
          type: string
          enumDescriptions:
            - Access mode unspecified.
            - Default. Data is accessed directly using storage APIs.
            - Data is accessed through a managed interface using BigQuery APIs.
          enum:
            - ACCESS_MODE_UNSPECIFIED
            - DIRECT
            - MANAGED
      type: object
    GoogleCloudDataplexV1RunDataScanRequest:
      properties: {}
      description: Run DataScan Request
      type: object
      id: GoogleCloudDataplexV1RunDataScanRequest
    GoogleCloudDataplexV1ScannedDataIncrementalField:
      type: object
      id: GoogleCloudDataplexV1ScannedDataIncrementalField
      properties:
        start:
          description: Value that marks the start of the range.
          type: string
        end:
          type: string
          description: Value that marks the end of the range.
        field:
          type: string
          description: The field that contains values which monotonically increases over time (e.g. a timestamp column).
      description: A data range denoted by a pair of start/end values of a field.
    GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime:
      description: Container Image Runtime Configuration used with Batch execution.
      properties:
        properties:
          type: object
          description: 'Optional. Override to common configuration of open source components installed on the Dataproc cluster. The properties to set on daemon config files. Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. For more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).'
          additionalProperties:
            type: string
        pythonPackages:
          description: 'Optional. A list of python packages to be installed. Valid formats include Cloud Storage URI to a PIP installable library. For example, gs://bucket-name/my/path/to/lib.tar.gz'
          items:
            type: string
          type: array
        image:
          type: string
          description: Optional. Container image to use.
        javaJars:
          items:
            type: string
          type: array
          description: 'Optional. A list of Java JARS to add to the classpath. Valid input includes Cloud Storage URIs to Jar binaries. For example, gs://bucket-name/my/path/to/file.jar'
      id: GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime
      type: object
    GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility:
      id: GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility
      type: object
      properties:
        compatible:
          type: boolean
          readOnly: true
          description: Output only. Whether the entity is compatible and can be represented in the metadata store.
        reason:
          type: string
          readOnly: true
          description: Output only. Provides additional detail if the entity is incompatible with the metadata store.
      description: Provides compatibility information for a specific metadata store.
    GoogleCloudDataplexV1DataSource:
      description: The data source for DataScan.
      properties:
        resource:
          type: string
          description: 'Immutable. The service-qualified full resource name of the cloud resource for a DataScan job to scan against. The field could be: BigQuery table of type "TABLE" for DataProfileScan/DataQualityScan Format: //bigquery.googleapis.com/projects/PROJECT_ID/datasets/DATASET_ID/tables/TABLE_ID'
        entity:
          type: string
          description: 'Immutable. The Dataplex entity that represents the data source (e.g. BigQuery table) for DataScan, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}.'
      type: object
      id: GoogleCloudDataplexV1DataSource
    GoogleCloudDataplexV1DataAttributeBindingPath:
      properties:
        attributes:
          type: array
          items:
            type: string
          description: 'Optional. List of attributes to be associated with the path of the resource, provided in the form: projects/{project}/locations/{location}/dataTaxonomies/{dataTaxonomy}/attributes/{data_attribute_id}'
        name:
          description: 'Required. The name identifier of the path. Nested columns should be of the form: ''address.city''.'
          type: string
      description: 'Represents a subresource of the given resource, and associated bindings with it. Currently supported subresources are column and partition schema fields within a table.'
      id: GoogleCloudDataplexV1DataAttributeBindingPath
      type: object
    GoogleCloudDataplexV1DiscoveryEventPartitionDetails:
      properties:
        type:
          enumDescriptions:
            - An unspecified event type.
            - Entities representing structured data.
            - Entities representing unstructured data.
          description: The type of the containing entity resource.
          type: string
          enum:
            - ENTITY_TYPE_UNSPECIFIED
            - TABLE
            - FILESET
        partition:
          type: string
          description: The name to the partition resource. The name is the fully-qualified resource name.
        entity:
          description: The name to the containing entity resource. The name is the fully-qualified resource name.
          type: string
        sampledDataLocations:
          description: 'The locations of the data items (e.g., a Cloud Storage objects) sampled for metadata inference.'
          type: array
          items:
            type: string
      type: object
      id: GoogleCloudDataplexV1DiscoveryEventPartitionDetails
      description: Details about the partition.
    GoogleCloudDataplexV1DataQualityResultPostScanActionsResultBigQueryExportResult:
      properties:
        message:
          readOnly: true
          description: Output only. Additional information about the BigQuery exporting.
          type: string
        state:
          type: string
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - SUCCEEDED
            - FAILED
            - SKIPPED
          description: Output only. Execution state for the BigQuery exporting.
          enumDescriptions:
            - The exporting state is unspecified.
            - The exporting completed successfully.
            - The exporting is no longer running due to an error.
            - The exporting is skipped due to no valid scan result to export (usually caused by scan failed).
      type: object
      description: The result of BigQuery export post scan action.
      id: GoogleCloudDataplexV1DataQualityResultPostScanActionsResultBigQueryExportResult
    GoogleCloudDataplexV1EnvironmentSessionStatus:
      properties:
        active:
          readOnly: true
          type: boolean
          description: Output only. Queries over sessions to mark whether the environment is currently active or not
      id: GoogleCloudDataplexV1EnvironmentSessionStatus
      type: object
      description: Status of sessions created for this environment.
    GoogleCloudDataplexV1DataQualityRuleSetExpectation:
      id: GoogleCloudDataplexV1DataQualityRuleSetExpectation
      description: Evaluates whether each column value is contained by a specified set.
      type: object
      properties:
        values:
          description: Expected values for the column value.
          items:
            type: string
          type: array
  parameters:
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    locations:
      id: google.dataplex.locations
      name: locations
      title: Locations
      methods:
        projects_locations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_list'
        insert: []
        update: []
        delete: []
    operations:
      id: google.dataplex.operations
      name: operations
      title: Operations
      methods:
        projects_locations_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_delete'
    data_attribute_bindings:
      id: google.dataplex.data_attribute_bindings
      name: data_attribute_bindings
      title: Data Attribute Bindings
      methods:
        projects_locations_data_attribute_bindings_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataAttributeBindings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_attribute_bindings_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataAttributeBindings/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_attribute_bindings_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataAttributeBindings~1{dataAttributeBindingsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_attribute_bindings_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataAttributeBindings~1{dataAttributeBindingsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_attribute_bindings_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataAttributeBindings~1{dataAttributeBindingsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_attribute_bindings/methods/projects_locations_data_attribute_bindings_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/data_attribute_bindings/methods/projects_locations_data_attribute_bindings_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/data_attribute_bindings/methods/projects_locations_data_attribute_bindings_delete'
    data_attribute_bindings_iam_policies:
      id: google.dataplex.data_attribute_bindings_iam_policies
      name: data_attribute_bindings_iam_policies
      title: Data Attribute Bindings Iam Policies
      methods:
        projects_locations_data_attribute_bindings_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataAttributeBindings~1{dataAttributeBindingsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_attribute_bindings_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataAttributeBindings~1{dataAttributeBindingsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_attribute_bindings_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataAttributeBindings~1{dataAttributeBindingsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_attribute_bindings_iam_policies/methods/projects_locations_data_attribute_bindings_get_iam_policy'
        insert: []
        update: []
        delete: []
    entry_types_iam_policies:
      id: google.dataplex.entry_types_iam_policies
      name: entry_types_iam_policies
      title: Entry Types Iam Policies
      methods:
        projects_locations_entry_types_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1entryTypes~1{entryTypesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_entry_types_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1entryTypes~1{entryTypesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_entry_types_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1entryTypes~1{entryTypesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/entry_types_iam_policies/methods/projects_locations_entry_types_get_iam_policy'
        insert: []
        update: []
        delete: []
    lakes:
      id: google.dataplex.lakes
      name: lakes
      title: Lakes
      methods:
        projects_locations_lakes_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lakes/methods/projects_locations_lakes_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/lakes/methods/projects_locations_lakes_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/lakes/methods/projects_locations_lakes_delete'
    lakes_iam_policies:
      id: google.dataplex.lakes_iam_policies
      name: lakes_iam_policies
      title: Lakes Iam Policies
      methods:
        projects_locations_lakes_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lakes_iam_policies/methods/projects_locations_lakes_get_iam_policy'
        insert: []
        update: []
        delete: []
    content_iam_policies:
      id: google.dataplex.content_iam_policies
      name: content_iam_policies
      title: Content Iam Policies
      methods:
        projects_locations_lakes_content_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1content~1{contentId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_content_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1content~1{contentId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_content_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1content~1{contentId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/content_iam_policies/methods/projects_locations_lakes_content_get_iam_policy'
        insert: []
        update: []
        delete: []
    content:
      id: google.dataplex.content
      name: content
      title: Content
      methods:
        projects_locations_lakes_content_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1content~1{contentId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_content_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1content~1{contentId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_content_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1content~1{contentId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_content_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1content/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_content_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1content/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/content/methods/projects_locations_lakes_content_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/content/methods/projects_locations_lakes_content_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/content/methods/projects_locations_lakes_content_delete'
    contentitems_iam_policies:
      id: google.dataplex.contentitems_iam_policies
      name: contentitems_iam_policies
      title: Contentitems Iam Policies
      methods:
        projects_locations_lakes_contentitems_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1contentitems~1{contentitemsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_contentitems_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1contentitems~1{contentitemsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_contentitems_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1contentitems~1{contentitemsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/contentitems_iam_policies/methods/projects_locations_lakes_contentitems_get_iam_policy'
        insert: []
        update: []
        delete: []
    contentitems:
      id: google.dataplex.contentitems
      name: contentitems
      title: Contentitems
      methods:
        projects_locations_lakes_contentitems_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1contentitems~1{contentitemsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_contentitems_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1contentitems~1{contentitemsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_contentitems_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1contentitems~1{contentitemsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_contentitems_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1contentitems/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_contentitems_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1contentitems/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/contentitems/methods/projects_locations_lakes_contentitems_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/contentitems/methods/projects_locations_lakes_contentitems_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/contentitems/methods/projects_locations_lakes_contentitems_delete'
    actions:
      id: google.dataplex.actions
      name: actions
      title: Actions
      methods:
        projects_locations_lakes_actions_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1actions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_assets_actions_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets~1{assetsId}~1actions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_actions_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1actions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/actions/methods/projects_locations_lakes_actions_list'
          - $ref: '#/components/x-stackQL-resources/actions/methods/projects_locations_lakes_zones_assets_actions_list'
          - $ref: '#/components/x-stackQL-resources/actions/methods/projects_locations_lakes_zones_actions_list'
        insert: []
        update: []
        delete: []
    jobs:
      id: google.dataplex.jobs
      name: jobs
      title: Jobs
      methods:
        projects_locations_lakes_tasks_jobs_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}~1jobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_tasks_jobs_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}~1jobs~1{jobsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_tasks_jobs_cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}~1jobs~1{jobsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_scans_jobs_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}~1jobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_scans_jobs_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}~1jobs~1{jobsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/projects_locations_lakes_tasks_jobs_list'
          - $ref: '#/components/x-stackQL-resources/jobs/methods/projects_locations_data_scans_jobs_list'
          - $ref: '#/components/x-stackQL-resources/jobs/methods/projects_locations_data_scans_jobs_get'
        insert: []
        update: []
        delete: []
    tasks:
      id: google.dataplex.tasks
      name: tasks
      title: Tasks
      methods:
        projects_locations_lakes_tasks_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_tasks_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_tasks_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_tasks_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_tasks_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_tasks_run:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}:run/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tasks/methods/projects_locations_lakes_tasks_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/tasks/methods/projects_locations_lakes_tasks_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/tasks/methods/projects_locations_lakes_tasks_delete'
    tasks_iam_policies:
      id: google.dataplex.tasks_iam_policies
      name: tasks_iam_policies
      title: Tasks Iam Policies
      methods:
        projects_locations_lakes_tasks_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_tasks_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_tasks_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tasks_iam_policies/methods/projects_locations_lakes_tasks_get_iam_policy'
        insert: []
        update: []
        delete: []
    sessions:
      id: google.dataplex.sessions
      name: sessions
      title: Sessions
      methods:
        projects_locations_lakes_environments_sessions_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments~1{environmentsId}~1sessions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sessions/methods/projects_locations_lakes_environments_sessions_list'
        insert: []
        update: []
        delete: []
    environments:
      id: google.dataplex.environments
      name: environments
      title: Environments
      methods:
        projects_locations_lakes_environments_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments~1{environmentsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_environments_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments~1{environmentsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_environments_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments~1{environmentsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_environments_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_environments_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/environments/methods/projects_locations_lakes_environments_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/environments/methods/projects_locations_lakes_environments_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/environments/methods/projects_locations_lakes_environments_delete'
    environments_iam_policies:
      id: google.dataplex.environments_iam_policies
      name: environments_iam_policies
      title: Environments Iam Policies
      methods:
        projects_locations_lakes_environments_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments~1{environmentsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_environments_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments~1{environmentsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_environments_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments~1{environmentsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/environments_iam_policies/methods/projects_locations_lakes_environments_get_iam_policy'
        insert: []
        update: []
        delete: []
    partitions:
      id: google.dataplex.partitions
      name: partitions
      title: Partitions
      methods:
        projects_locations_lakes_zones_entities_partitions_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1entities~1{entitiesId}~1partitions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_entities_partitions_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1entities~1{entitiesId}~1partitions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_entities_partitions_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1entities~1{entitiesId}~1partitions~1{partitionsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_entities_partitions_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1entities~1{entitiesId}~1partitions~1{partitionsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/partitions/methods/projects_locations_lakes_zones_entities_partitions_list'
          - $ref: '#/components/x-stackQL-resources/partitions/methods/projects_locations_lakes_zones_entities_partitions_get'
        insert:
          - $ref: '#/components/x-stackQL-resources/partitions/methods/projects_locations_lakes_zones_entities_partitions_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/partitions/methods/projects_locations_lakes_zones_entities_partitions_delete'
    entities:
      id: google.dataplex.entities
      name: entities
      title: Entities
      methods:
        projects_locations_lakes_zones_entities_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1entities~1{entitiesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_entities_update:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1entities~1{entitiesId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_entities_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1entities~1{entitiesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_entities_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1entities/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_entities_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1entities/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/entities/methods/projects_locations_lakes_zones_entities_get'
          - $ref: '#/components/x-stackQL-resources/entities/methods/projects_locations_lakes_zones_entities_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/entities/methods/projects_locations_lakes_zones_entities_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/entities/methods/projects_locations_lakes_zones_entities_delete'
    assets:
      id: google.dataplex.assets
      name: assets
      title: Assets
      methods:
        projects_locations_lakes_zones_assets_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets~1{assetsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_assets_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets~1{assetsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_assets_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets~1{assetsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_assets_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_assets_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/assets/methods/projects_locations_lakes_zones_assets_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/assets/methods/projects_locations_lakes_zones_assets_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/assets/methods/projects_locations_lakes_zones_assets_delete'
    assets_iam_policies:
      id: google.dataplex.assets_iam_policies
      name: assets_iam_policies
      title: Assets Iam Policies
      methods:
        projects_locations_lakes_zones_assets_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets~1{assetsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_assets_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets~1{assetsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_assets_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets~1{assetsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/assets_iam_policies/methods/projects_locations_lakes_zones_assets_get_iam_policy'
        insert: []
        update: []
        delete: []
    zones:
      id: google.dataplex.zones
      name: zones
      title: Zones
      methods:
        projects_locations_lakes_zones_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones/methods/projects_locations_lakes_zones_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/zones/methods/projects_locations_lakes_zones_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/zones/methods/projects_locations_lakes_zones_delete'
    zones_iam_policies:
      id: google.dataplex.zones_iam_policies
      name: zones_iam_policies
      title: Zones Iam Policies
      methods:
        projects_locations_lakes_zones_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_iam_policies/methods/projects_locations_lakes_zones_get_iam_policy'
        insert: []
        update: []
        delete: []
    aspect_types_iam_policies:
      id: google.dataplex.aspect_types_iam_policies
      name: aspect_types_iam_policies
      title: Aspect Types Iam Policies
      methods:
        projects_locations_aspect_types_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1aspectTypes~1{aspectTypesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_aspect_types_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1aspectTypes~1{aspectTypesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_aspect_types_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1aspectTypes~1{aspectTypesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/aspect_types_iam_policies/methods/projects_locations_aspect_types_get_iam_policy'
        insert: []
        update: []
        delete: []
    attributes_iam_policies:
      id: google.dataplex.attributes_iam_policies
      name: attributes_iam_policies
      title: Attributes Iam Policies
      methods:
        projects_locations_data_taxonomies_attributes_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}~1attributes~1{attributesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_taxonomies_attributes_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}~1attributes~1{attributesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_taxonomies_attributes_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}~1attributes~1{attributesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/attributes_iam_policies/methods/projects_locations_data_taxonomies_attributes_get_iam_policy'
        insert: []
        update: []
        delete: []
    attributes:
      id: google.dataplex.attributes
      name: attributes
      title: Attributes
      methods:
        projects_locations_data_taxonomies_attributes_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}~1attributes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_taxonomies_attributes_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}~1attributes/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_taxonomies_attributes_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}~1attributes~1{attributesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_taxonomies_attributes_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}~1attributes~1{attributesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_taxonomies_attributes_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}~1attributes~1{attributesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/attributes/methods/projects_locations_data_taxonomies_attributes_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/attributes/methods/projects_locations_data_taxonomies_attributes_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/attributes/methods/projects_locations_data_taxonomies_attributes_delete'
    data_taxonomies:
      id: google.dataplex.data_taxonomies
      name: data_taxonomies
      title: Data Taxonomies
      methods:
        projects_locations_data_taxonomies_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_taxonomies_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_taxonomies_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_taxonomies_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_taxonomies_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_taxonomies/methods/projects_locations_data_taxonomies_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/data_taxonomies/methods/projects_locations_data_taxonomies_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/data_taxonomies/methods/projects_locations_data_taxonomies_delete'
    data_taxonomies_iam_policies:
      id: google.dataplex.data_taxonomies_iam_policies
      name: data_taxonomies_iam_policies
      title: Data Taxonomies Iam Policies
      methods:
        projects_locations_data_taxonomies_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_taxonomies_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_taxonomies_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_taxonomies_iam_policies/methods/projects_locations_data_taxonomies_get_iam_policy'
        insert: []
        update: []
        delete: []
    data_scans:
      id: google.dataplex.data_scans
      name: data_scans
      title: Data Scans
      methods:
        projects_locations_data_scans_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_scans_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_scans_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_scans_run:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}:run/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_scans_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_scans_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_scans/methods/projects_locations_data_scans_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/data_scans/methods/projects_locations_data_scans_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/data_scans/methods/projects_locations_data_scans_delete'
    data_scans_iam_policies:
      id: google.dataplex.data_scans_iam_policies
      name: data_scans_iam_policies
      title: Data Scans Iam Policies
      methods:
        projects_locations_data_scans_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_scans_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_data_scans_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_scans_iam_policies/methods/projects_locations_data_scans_get_iam_policy'
        insert: []
        update: []
        delete: []
    entry_groups_iam_policies:
      id: google.dataplex.entry_groups_iam_policies
      name: entry_groups_iam_policies
      title: Entry Groups Iam Policies
      methods:
        projects_locations_entry_groups_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1entryGroups~1{entryGroupsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_entry_groups_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1entryGroups~1{entryGroupsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_entry_groups_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1entryGroups~1{entryGroupsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/entry_groups_iam_policies/methods/projects_locations_entry_groups_get_iam_policy'
        insert: []
        update: []
        delete: []
paths:
  '/v1/projects/{projectsId}/locations':
    parameters: &ref_1
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Lists information about the supported locations for this service.
      operationId: dataplex.projects.locations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudLocationListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: projects_locations_list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}':
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: dataplex.projects.locations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudLocationLocation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: projects_locations_get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: dataplex.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_get
      x-stackQL-verb: exec
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns google.rpc.Code.UNIMPLEMENTED.'
      operationId: dataplex.projects.locations.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns UNIMPLEMENTED.'
      operationId: dataplex.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to Code.CANCELLED.'
      operationId: dataplex.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleLongrunningCancelOperationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/dataAttributeBindings':
    parameters: *ref_1
    get:
      description: Lists DataAttributeBinding resources in a project and location.
      operationId: dataplex.projects.locations.dataAttributeBindings.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListDataAttributeBindingsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: data_attribute_bindings
      x-stackQL-method: projects_locations_data_attribute_bindings_list
      x-stackQL-verb: select
    post:
      description: Create a DataAttributeBinding resource.
      operationId: dataplex.projects.locations.dataAttributeBindings.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1DataAttributeBinding'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: dataAttributeBindingId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: data_attribute_bindings
      x-stackQL-method: projects_locations_data_attribute_bindings_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/dataAttributeBindings/{dataAttributeBindingsId}':
    parameters: *ref_1
    get:
      description: Retrieves a DataAttributeBinding resource.
      operationId: dataplex.projects.locations.dataAttributeBindings.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1DataAttributeBinding'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataAttributeBindingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_attribute_bindings
      x-stackQL-method: projects_locations_data_attribute_bindings_get
      x-stackQL-verb: exec
    delete:
      description: Deletes a DataAttributeBinding resource. All attributes within the DataAttributeBinding must be deleted before the DataAttributeBinding can be deleted.
      operationId: dataplex.projects.locations.dataAttributeBindings.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataAttributeBindingsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
      x-stackQL-resource: data_attribute_bindings
      x-stackQL-method: projects_locations_data_attribute_bindings_delete
      x-stackQL-verb: delete
    patch:
      description: Updates a DataAttributeBinding resource.
      operationId: dataplex.projects.locations.dataAttributeBindings.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1DataAttributeBinding'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataAttributeBindingsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: data_attribute_bindings
      x-stackQL-method: projects_locations_data_attribute_bindings_patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/dataAttributeBindings/{dataAttributeBindingsId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.'
      operationId: dataplex.projects.locations.dataAttributeBindings.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataAttributeBindingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_attribute_bindings_iam_policies
      x-stackQL-method: projects_locations_data_attribute_bindings_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/dataAttributeBindings/{dataAttributeBindingsId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.dataAttributeBindings.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataAttributeBindingsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: data_attribute_bindings_iam_policies
      x-stackQL-method: projects_locations_data_attribute_bindings_get_iam_policy
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/dataAttributeBindings/{dataAttributeBindingsId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataplex.projects.locations.dataAttributeBindings.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataAttributeBindingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_attribute_bindings_iam_policies
      x-stackQL-method: projects_locations_data_attribute_bindings_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/entryTypes/{entryTypesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataplex.projects.locations.entryTypes.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryTypesId
          required: true
          schema:
            type: string
      x-stackQL-resource: entry_types_iam_policies
      x-stackQL-method: projects_locations_entry_types_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/entryTypes/{entryTypesId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.entryTypes.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryTypesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: entry_types_iam_policies
      x-stackQL-method: projects_locations_entry_types_get_iam_policy
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/entryTypes/{entryTypesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.'
      operationId: dataplex.projects.locations.entryTypes.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryTypesId
          required: true
          schema:
            type: string
      x-stackQL-resource: entry_types_iam_policies
      x-stackQL-method: projects_locations_entry_types_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}':
    parameters: *ref_1
    get:
      description: Retrieves a lake resource.
      operationId: dataplex.projects.locations.lakes.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Lake'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
      x-stackQL-resource: lakes
      x-stackQL-method: projects_locations_lakes_get
      x-stackQL-verb: exec
    patch:
      description: Updates a lake resource.
      operationId: dataplex.projects.locations.lakes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Lake'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: lakes
      x-stackQL-method: projects_locations_lakes_patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a lake resource. All zones within the lake must be deleted before the lake can be deleted.
      operationId: dataplex.projects.locations.lakes.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
      x-stackQL-resource: lakes
      x-stackQL-method: projects_locations_lakes_delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.'
      operationId: dataplex.projects.locations.lakes.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
      x-stackQL-resource: lakes_iam_policies
      x-stackQL-method: projects_locations_lakes_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataplex.projects.locations.lakes.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
      x-stackQL-resource: lakes_iam_policies
      x-stackQL-method: projects_locations_lakes_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes':
    parameters: *ref_1
    post:
      description: Creates a lake resource.
      operationId: dataplex.projects.locations.lakes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Lake'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: lakeId
          schema:
            type: string
      x-stackQL-resource: lakes
      x-stackQL-method: projects_locations_lakes_create
      x-stackQL-verb: insert
    get:
      description: Lists lake resources in a project and location.
      operationId: dataplex.projects.locations.lakes.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListLakesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: lakes
      x-stackQL-method: projects_locations_lakes_list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.lakes.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: lakes_iam_policies
      x-stackQL-method: projects_locations_lakes_get_iam_policy
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content/{contentId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified contentitem resource. Replaces any existing policy.Caller must have Google IAM dataplex.content.setIamPolicy permission on the resource.
      operationId: dataplex.projects.locations.lakes.content.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentId
          required: true
          schema:
            type: string
      x-stackQL-resource: content_iam_policies
      x-stackQL-method: projects_locations_lakes_content_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content/{contentId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns the caller''s permissions on a resource. If the resource does not exist, an empty set of permissions is returned (a NOT_FOUND error is not returned).A caller is not required to have Google IAM permission to make this request.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataplex.projects.locations.lakes.content.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentId
          required: true
          schema:
            type: string
      x-stackQL-resource: content_iam_policies
      x-stackQL-method: projects_locations_lakes_content_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content/{contentId}':
    parameters: *ref_1
    patch:
      description: Update a content. Only supports full resource update.
      operationId: dataplex.projects.locations.lakes.content.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: content
      x-stackQL-method: projects_locations_lakes_content_patch
      x-stackQL-verb: exec
    get:
      description: Get a content resource.
      operationId: dataplex.projects.locations.lakes.content.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: content
      x-stackQL-method: projects_locations_lakes_content_get
      x-stackQL-verb: exec
    delete:
      description: Delete a content.
      operationId: dataplex.projects.locations.lakes.content.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentId
          required: true
          schema:
            type: string
      x-stackQL-resource: content
      x-stackQL-method: projects_locations_lakes_content_delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content/{contentId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a contentitem resource. A NOT_FOUND error is returned if the resource does not exist. An empty policy is returned if the resource exists but does not have a policy set on it.Caller must have Google IAM dataplex.content.getIamPolicy permission on the resource.
      operationId: dataplex.projects.locations.lakes.content.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: content_iam_policies
      x-stackQL-method: projects_locations_lakes_content_get_iam_policy
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content':
    parameters: *ref_1
    get:
      description: List content.
      operationId: dataplex.projects.locations.lakes.content.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListContentResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: content
      x-stackQL-method: projects_locations_lakes_content_list
      x-stackQL-verb: select
    post:
      description: Create a content.
      operationId: dataplex.projects.locations.lakes.content.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: content
      x-stackQL-method: projects_locations_lakes_content_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems/{contentitemsId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns the caller''s permissions on a resource. If the resource does not exist, an empty set of permissions is returned (a NOT_FOUND error is not returned).A caller is not required to have Google IAM permission to make this request.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataplex.projects.locations.lakes.contentitems.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentitemsId
          required: true
          schema:
            type: string
      x-stackQL-resource: contentitems_iam_policies
      x-stackQL-method: projects_locations_lakes_contentitems_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems/{contentitemsId}':
    parameters: *ref_1
    delete:
      description: Delete a content.
      operationId: dataplex.projects.locations.lakes.contentitems.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentitemsId
          required: true
          schema:
            type: string
      x-stackQL-resource: contentitems
      x-stackQL-method: projects_locations_lakes_contentitems_delete
      x-stackQL-verb: delete
    get:
      description: Get a content resource.
      operationId: dataplex.projects.locations.lakes.contentitems.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentitemsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: contentitems
      x-stackQL-method: projects_locations_lakes_contentitems_get
      x-stackQL-verb: exec
    patch:
      description: Update a content. Only supports full resource update.
      operationId: dataplex.projects.locations.lakes.contentitems.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentitemsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: contentitems
      x-stackQL-method: projects_locations_lakes_contentitems_patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems':
    parameters: *ref_1
    get:
      description: List content.
      operationId: dataplex.projects.locations.lakes.contentitems.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListContentResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: contentitems
      x-stackQL-method: projects_locations_lakes_contentitems_list
      x-stackQL-verb: select
    post:
      description: Create a content.
      operationId: dataplex.projects.locations.lakes.contentitems.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: contentitems
      x-stackQL-method: projects_locations_lakes_contentitems_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems/{contentitemsId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified contentitem resource. Replaces any existing policy.Caller must have Google IAM dataplex.content.setIamPolicy permission on the resource.
      operationId: dataplex.projects.locations.lakes.contentitems.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentitemsId
          required: true
          schema:
            type: string
      x-stackQL-resource: contentitems_iam_policies
      x-stackQL-method: projects_locations_lakes_contentitems_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems/{contentitemsId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a contentitem resource. A NOT_FOUND error is returned if the resource does not exist. An empty policy is returned if the resource exists but does not have a policy set on it.Caller must have Google IAM dataplex.content.getIamPolicy permission on the resource.
      operationId: dataplex.projects.locations.lakes.contentitems.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentitemsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: contentitems_iam_policies
      x-stackQL-method: projects_locations_lakes_contentitems_get_iam_policy
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/actions':
    parameters: *ref_1
    get:
      description: Lists action resources in a lake.
      operationId: dataplex.projects.locations.lakes.actions.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListActionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: actions
      x-stackQL-method: projects_locations_lakes_actions_list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}/jobs':
    parameters: *ref_1
    get:
      description: Lists Jobs under the given task.
      operationId: dataplex.projects.locations.lakes.tasks.jobs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListJobsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: jobs
      x-stackQL-method: projects_locations_lakes_tasks_jobs_list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}/jobs/{jobsId}':
    parameters: *ref_1
    get:
      description: Get job resource.
      operationId: dataplex.projects.locations.lakes.tasks.jobs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Job'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_locations_lakes_tasks_jobs_get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}/jobs/{jobsId}:cancel':
    parameters: *ref_1
    post:
      description: Cancel jobs running for the task resource.
      operationId: dataplex.projects.locations.lakes.tasks.jobs.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1CancelJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_locations_lakes_tasks_jobs_cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks':
    parameters: *ref_1
    get:
      description: Lists tasks under the given lake.
      operationId: dataplex.projects.locations.lakes.tasks.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListTasksResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: tasks
      x-stackQL-method: projects_locations_lakes_tasks_list
      x-stackQL-verb: select
    post:
      description: Creates a task resource within a lake.
      operationId: dataplex.projects.locations.lakes.tasks.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Task'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: taskId
          schema:
            type: string
      x-stackQL-resource: tasks
      x-stackQL-method: projects_locations_lakes_tasks_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}':
    parameters: *ref_1
    patch:
      description: Update the task resource.
      operationId: dataplex.projects.locations.lakes.tasks.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Task'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: tasks
      x-stackQL-method: projects_locations_lakes_tasks_patch
      x-stackQL-verb: exec
    get:
      description: Get task resource.
      operationId: dataplex.projects.locations.lakes.tasks.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Task'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
      x-stackQL-resource: tasks
      x-stackQL-method: projects_locations_lakes_tasks_get
      x-stackQL-verb: exec
    delete:
      description: Delete the task resource.
      operationId: dataplex.projects.locations.lakes.tasks.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
      x-stackQL-resource: tasks
      x-stackQL-method: projects_locations_lakes_tasks_delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}:run':
    parameters: *ref_1
    post:
      description: Run an on demand execution of a Task.
      operationId: dataplex.projects.locations.lakes.tasks.run
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1RunTaskRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1RunTaskResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
      x-stackQL-resource: tasks
      x-stackQL-method: projects_locations_lakes_tasks_run
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.lakes.tasks.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: tasks_iam_policies
      x-stackQL-method: projects_locations_lakes_tasks_get_iam_policy
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataplex.projects.locations.lakes.tasks.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
      x-stackQL-resource: tasks_iam_policies
      x-stackQL-method: projects_locations_lakes_tasks_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.'
      operationId: dataplex.projects.locations.lakes.tasks.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
      x-stackQL-resource: tasks_iam_policies
      x-stackQL-method: projects_locations_lakes_tasks_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}/sessions':
    parameters: *ref_1
    get:
      description: Lists session resources in an environment.
      operationId: dataplex.projects.locations.lakes.environments.sessions.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListSessionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: sessions
      x-stackQL-method: projects_locations_lakes_environments_sessions_list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}':
    parameters: *ref_1
    patch:
      description: Update the environment resource.
      operationId: dataplex.projects.locations.lakes.environments.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Environment'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: environments
      x-stackQL-method: projects_locations_lakes_environments_patch
      x-stackQL-verb: exec
    get:
      description: Get environment resource.
      operationId: dataplex.projects.locations.lakes.environments.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Environment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-method: projects_locations_lakes_environments_get
      x-stackQL-verb: exec
    delete:
      description: Delete the environment resource. All the child resources must have been deleted before environment deletion can be initiated.
      operationId: dataplex.projects.locations.lakes.environments.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-method: projects_locations_lakes_environments_delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments':
    parameters: *ref_1
    post:
      description: Create an environment resource.
      operationId: dataplex.projects.locations.lakes.environments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Environment'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: environmentId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: environments
      x-stackQL-method: projects_locations_lakes_environments_create
      x-stackQL-verb: insert
    get:
      description: Lists environments under the given lake.
      operationId: dataplex.projects.locations.lakes.environments.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListEnvironmentsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-method: projects_locations_lakes_environments_list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.lakes.environments.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: environments_iam_policies
      x-stackQL-method: projects_locations_lakes_environments_get_iam_policy
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.'
      operationId: dataplex.projects.locations.lakes.environments.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: environments_iam_policies
      x-stackQL-method: projects_locations_lakes_environments_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataplex.projects.locations.lakes.environments.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: environments_iam_policies
      x-stackQL-method: projects_locations_lakes_environments_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities/{entitiesId}/partitions':
    parameters: *ref_1
    get:
      description: List metadata partitions of an entity.
      operationId: dataplex.projects.locations.lakes.zones.entities.partitions.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListPartitionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: entitiesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: partitions
      x-stackQL-method: projects_locations_lakes_zones_entities_partitions_list
      x-stackQL-verb: select
    post:
      description: Create a metadata partition.
      operationId: dataplex.projects.locations.lakes.zones.entities.partitions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Partition'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Partition'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: entitiesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: partitions
      x-stackQL-method: projects_locations_lakes_zones_entities_partitions_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities/{entitiesId}/partitions/{partitionsId}':
    parameters: *ref_1
    get:
      description: Get a metadata partition of an entity.
      operationId: dataplex.projects.locations.lakes.zones.entities.partitions.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Partition'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: entitiesId
          required: true
          schema:
            type: string
        - in: path
          name: partitionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: partitions
      x-stackQL-method: projects_locations_lakes_zones_entities_partitions_get
      x-stackQL-verb: select
    delete:
      description: Delete a metadata partition.
      operationId: dataplex.projects.locations.lakes.zones.entities.partitions.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: entitiesId
          required: true
          schema:
            type: string
        - in: path
          name: partitionsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
      x-stackQL-resource: partitions
      x-stackQL-method: projects_locations_lakes_zones_entities_partitions_delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities/{entitiesId}':
    parameters: *ref_1
    get:
      description: Get a metadata entity.
      operationId: dataplex.projects.locations.lakes.zones.entities.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Entity'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: entitiesId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: entities
      x-stackQL-method: projects_locations_lakes_zones_entities_get
      x-stackQL-verb: select
    put:
      description: Update a metadata entity. Only supports full resource update.
      operationId: dataplex.projects.locations.lakes.zones.entities.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Entity'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Entity'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: entitiesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: entities
      x-stackQL-method: projects_locations_lakes_zones_entities_update
      x-stackQL-verb: exec
    delete:
      description: Delete a metadata entity.
      operationId: dataplex.projects.locations.lakes.zones.entities.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: entitiesId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
      x-stackQL-resource: entities
      x-stackQL-method: projects_locations_lakes_zones_entities_delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities':
    parameters: *ref_1
    post:
      description: Create a metadata entity.
      operationId: dataplex.projects.locations.lakes.zones.entities.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Entity'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Entity'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: entities
      x-stackQL-method: projects_locations_lakes_zones_entities_create
      x-stackQL-verb: insert
    get:
      description: List metadata entities in a zone.
      operationId: dataplex.projects.locations.lakes.zones.entities.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListEntitiesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: entities
      x-stackQL-method: projects_locations_lakes_zones_entities_list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}':
    parameters: *ref_1
    get:
      description: Retrieves an asset resource.
      operationId: dataplex.projects.locations.lakes.zones.assets.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Asset'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-method: projects_locations_lakes_zones_assets_get
      x-stackQL-verb: exec
    delete:
      description: Deletes an asset resource. The referenced storage resource is detached (default) or deleted based on the associated Lifecycle policy.
      operationId: dataplex.projects.locations.lakes.zones.assets.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-method: projects_locations_lakes_zones_assets_delete
      x-stackQL-verb: delete
    patch:
      description: Updates an asset resource.
      operationId: dataplex.projects.locations.lakes.zones.assets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Asset'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: assets
      x-stackQL-method: projects_locations_lakes_zones_assets_patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets':
    parameters: *ref_1
    post:
      description: Creates an asset resource.
      operationId: dataplex.projects.locations.lakes.zones.assets.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Asset'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: query
          name: assetId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: assets
      x-stackQL-method: projects_locations_lakes_zones_assets_create
      x-stackQL-verb: insert
    get:
      description: Lists asset resources in a zone.
      operationId: dataplex.projects.locations.lakes.zones.assets.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListAssetsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-method: projects_locations_lakes_zones_assets_list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataplex.projects.locations.lakes.zones.assets.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: assets_iam_policies
      x-stackQL-method: projects_locations_lakes_zones_assets_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.lakes.zones.assets.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: assets_iam_policies
      x-stackQL-method: projects_locations_lakes_zones_assets_get_iam_policy
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.'
      operationId: dataplex.projects.locations.lakes.zones.assets.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: assets_iam_policies
      x-stackQL-method: projects_locations_lakes_zones_assets_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}/actions':
    parameters: *ref_1
    get:
      description: Lists action resources in an asset.
      operationId: dataplex.projects.locations.lakes.zones.assets.actions.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListActionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: actions
      x-stackQL-method: projects_locations_lakes_zones_assets_actions_list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/actions':
    parameters: *ref_1
    get:
      description: Lists action resources in a zone.
      operationId: dataplex.projects.locations.lakes.zones.actions.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListActionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: actions
      x-stackQL-method: projects_locations_lakes_zones_actions_list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}':
    parameters: *ref_1
    patch:
      description: Updates a zone resource.
      operationId: dataplex.projects.locations.lakes.zones.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Zone'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: zones
      x-stackQL-method: projects_locations_lakes_zones_patch
      x-stackQL-verb: exec
    get:
      description: Retrieves a zone resource.
      operationId: dataplex.projects.locations.lakes.zones.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Zone'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
      x-stackQL-resource: zones
      x-stackQL-method: projects_locations_lakes_zones_get
      x-stackQL-verb: exec
    delete:
      description: Deletes a zone resource. All assets within a zone must be deleted before the zone can be deleted.
      operationId: dataplex.projects.locations.lakes.zones.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
      x-stackQL-resource: zones
      x-stackQL-method: projects_locations_lakes_zones_delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones':
    parameters: *ref_1
    get:
      description: Lists zone resources in a lake.
      operationId: dataplex.projects.locations.lakes.zones.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListZonesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: zones
      x-stackQL-method: projects_locations_lakes_zones_list
      x-stackQL-verb: select
    post:
      description: Creates a zone resource within a lake.
      operationId: dataplex.projects.locations.lakes.zones.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Zone'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: zoneId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: zones
      x-stackQL-method: projects_locations_lakes_zones_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.lakes.zones.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: zones_iam_policies
      x-stackQL-method: projects_locations_lakes_zones_get_iam_policy
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataplex.projects.locations.lakes.zones.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
      x-stackQL-resource: zones_iam_policies
      x-stackQL-method: projects_locations_lakes_zones_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.'
      operationId: dataplex.projects.locations.lakes.zones.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
      x-stackQL-resource: zones_iam_policies
      x-stackQL-method: projects_locations_lakes_zones_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/aspectTypes/{aspectTypesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.'
      operationId: dataplex.projects.locations.aspectTypes.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: aspectTypesId
          required: true
          schema:
            type: string
      x-stackQL-resource: aspect_types_iam_policies
      x-stackQL-method: projects_locations_aspect_types_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/aspectTypes/{aspectTypesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataplex.projects.locations.aspectTypes.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: aspectTypesId
          required: true
          schema:
            type: string
      x-stackQL-resource: aspect_types_iam_policies
      x-stackQL-method: projects_locations_aspect_types_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/aspectTypes/{aspectTypesId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.aspectTypes.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: aspectTypesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: aspect_types_iam_policies
      x-stackQL-method: projects_locations_aspect_types_get_iam_policy
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}/attributes/{attributesId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.dataTaxonomies.attributes.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
        - in: path
          name: attributesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: attributes_iam_policies
      x-stackQL-method: projects_locations_data_taxonomies_attributes_get_iam_policy
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}/attributes':
    parameters: *ref_1
    get:
      description: Lists Data Attribute resources in a DataTaxonomy.
      operationId: dataplex.projects.locations.dataTaxonomies.attributes.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListDataAttributesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: attributes
      x-stackQL-method: projects_locations_data_taxonomies_attributes_list
      x-stackQL-verb: select
    post:
      description: Create a DataAttribute resource.
      operationId: dataplex.projects.locations.dataTaxonomies.attributes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1DataAttribute'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
        - in: query
          name: dataAttributeId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: attributes
      x-stackQL-method: projects_locations_data_taxonomies_attributes_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}/attributes/{attributesId}':
    parameters: *ref_1
    patch:
      description: Updates a DataAttribute resource.
      operationId: dataplex.projects.locations.dataTaxonomies.attributes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1DataAttribute'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
        - in: path
          name: attributesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: attributes
      x-stackQL-method: projects_locations_data_taxonomies_attributes_patch
      x-stackQL-verb: exec
    get:
      description: Retrieves a Data Attribute resource.
      operationId: dataplex.projects.locations.dataTaxonomies.attributes.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1DataAttribute'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
        - in: path
          name: attributesId
          required: true
          schema:
            type: string
      x-stackQL-resource: attributes
      x-stackQL-method: projects_locations_data_taxonomies_attributes_get
      x-stackQL-verb: exec
    delete:
      description: Deletes a Data Attribute resource.
      operationId: dataplex.projects.locations.dataTaxonomies.attributes.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
        - in: path
          name: attributesId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
      x-stackQL-resource: attributes
      x-stackQL-method: projects_locations_data_taxonomies_attributes_delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}/attributes/{attributesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataplex.projects.locations.dataTaxonomies.attributes.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
        - in: path
          name: attributesId
          required: true
          schema:
            type: string
      x-stackQL-resource: attributes_iam_policies
      x-stackQL-method: projects_locations_data_taxonomies_attributes_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}/attributes/{attributesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.'
      operationId: dataplex.projects.locations.dataTaxonomies.attributes.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
        - in: path
          name: attributesId
          required: true
          schema:
            type: string
      x-stackQL-resource: attributes_iam_policies
      x-stackQL-method: projects_locations_data_taxonomies_attributes_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies':
    parameters: *ref_1
    get:
      description: Lists DataTaxonomy resources in a project and location.
      operationId: dataplex.projects.locations.dataTaxonomies.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListDataTaxonomiesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: data_taxonomies
      x-stackQL-method: projects_locations_data_taxonomies_list
      x-stackQL-verb: select
    post:
      description: Create a DataTaxonomy resource.
      operationId: dataplex.projects.locations.dataTaxonomies.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1DataTaxonomy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: dataTaxonomyId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: data_taxonomies
      x-stackQL-method: projects_locations_data_taxonomies_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}':
    parameters: *ref_1
    patch:
      description: Updates a DataTaxonomy resource.
      operationId: dataplex.projects.locations.dataTaxonomies.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1DataTaxonomy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: data_taxonomies
      x-stackQL-method: projects_locations_data_taxonomies_patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a DataTaxonomy resource. All attributes within the DataTaxonomy must be deleted before the DataTaxonomy can be deleted.
      operationId: dataplex.projects.locations.dataTaxonomies.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
      x-stackQL-resource: data_taxonomies
      x-stackQL-method: projects_locations_data_taxonomies_delete
      x-stackQL-verb: delete
    get:
      description: Retrieves a DataTaxonomy resource.
      operationId: dataplex.projects.locations.dataTaxonomies.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1DataTaxonomy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_taxonomies
      x-stackQL-method: projects_locations_data_taxonomies_get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.'
      operationId: dataplex.projects.locations.dataTaxonomies.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_taxonomies_iam_policies
      x-stackQL-method: projects_locations_data_taxonomies_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataplex.projects.locations.dataTaxonomies.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_taxonomies_iam_policies
      x-stackQL-method: projects_locations_data_taxonomies_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.dataTaxonomies.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: data_taxonomies_iam_policies
      x-stackQL-method: projects_locations_data_taxonomies_get_iam_policy
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}/jobs':
    parameters: *ref_1
    get:
      description: Lists DataScanJobs under the given DataScan.
      operationId: dataplex.projects.locations.dataScans.jobs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListDataScanJobsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_locations_data_scans_jobs_list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}/jobs/{jobsId}':
    parameters: *ref_1
    get:
      description: Gets a DataScanJob resource.
      operationId: dataplex.projects.locations.dataScans.jobs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1DataScanJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: projects_locations_data_scans_jobs_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}':
    parameters: *ref_1
    delete:
      description: Deletes a DataScan resource.
      operationId: dataplex.projects.locations.dataScans.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_scans
      x-stackQL-method: projects_locations_data_scans_delete
      x-stackQL-verb: delete
    patch:
      description: Updates a DataScan resource.
      operationId: dataplex.projects.locations.dataScans.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1DataScan'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: data_scans
      x-stackQL-method: projects_locations_data_scans_patch
      x-stackQL-verb: exec
    get:
      description: Gets a DataScan resource.
      operationId: dataplex.projects.locations.dataScans.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1DataScan'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: data_scans
      x-stackQL-method: projects_locations_data_scans_get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}:run':
    parameters: *ref_1
    post:
      description: Runs an on-demand execution of a DataScan
      operationId: dataplex.projects.locations.dataScans.run
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1RunDataScanRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1RunDataScanResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_scans
      x-stackQL-method: projects_locations_data_scans_run
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.dataScans.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: data_scans_iam_policies
      x-stackQL-method: projects_locations_data_scans_get_iam_policy
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/dataScans':
    parameters: *ref_1
    post:
      description: Creates a DataScan resource.
      operationId: dataplex.projects.locations.dataScans.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1DataScan'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: dataScanId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: data_scans
      x-stackQL-method: projects_locations_data_scans_create
      x-stackQL-verb: insert
    get:
      description: Lists DataScans.
      operationId: dataplex.projects.locations.dataScans.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListDataScansResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: data_scans
      x-stackQL-method: projects_locations_data_scans_list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataplex.projects.locations.dataScans.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_scans_iam_policies
      x-stackQL-method: projects_locations_data_scans_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.'
      operationId: dataplex.projects.locations.dataScans.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_scans_iam_policies
      x-stackQL-method: projects_locations_data_scans_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.entryGroups.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryGroupsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: entry_groups_iam_policies
      x-stackQL-method: projects_locations_entry_groups_get_iam_policy
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataplex.projects.locations.entryGroups.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryGroupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: entry_groups_iam_policies
      x-stackQL-method: projects_locations_entry_groups_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.'
      operationId: dataplex.projects.locations.entryGroups.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryGroupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: entry_groups_iam_policies
      x-stackQL-method: projects_locations_entry_groups_set_iam_policy
      x-stackQL-verb: exec
