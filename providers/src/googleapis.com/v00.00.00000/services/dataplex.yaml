openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Cloud Dataplex API
  description: Dataplex API is used to manage the lifecycle of data lakes.
  version: v1
  x-discovery-doc-revision: '20221212'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://cloud.google.com/dataplex/docs
servers:
  - url: https://dataplex.googleapis.com
components:
  schemas:
    GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions:
      description: Describe JSON data format.
      type: object
      id: GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions
      properties:
        disableTypeInference:
          type: boolean
          description: Optional. Whether to disable the inference of data type for Json data. If true, all columns will be registered as their primitive types (strings, number or boolean).
        encoding:
          description: Optional. The character encoding of the data. The default is UTF-8.
          type: string
    GoogleCloudDataplexV1LakeMetastoreStatus:
      description: Status of Lake and Dataproc Metastore service instance association.
      id: GoogleCloudDataplexV1LakeMetastoreStatus
      type: object
      properties:
        state:
          description: Current state of association.
          enum:
            - STATE_UNSPECIFIED
            - NONE
            - READY
            - UPDATING
            - ERROR
          type: string
          enumDescriptions:
            - Unspecified.
            - A Metastore service instance is not associated with the lake.
            - A Metastore service instance is attached to the lake.
            - Attach/detach is in progress.
            - Attach/detach could not be done due to errors.
        updateTime:
          format: google-datetime
          description: Last update time of the metastore status of the lake.
          type: string
        endpoint:
          description: The URI of the endpoint used to access the Metastore service.
          type: string
        message:
          type: string
          description: Additional information about the current status.
    GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility:
      type: object
      id: GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility
      description: Provides compatibility information for a specific metadata store.
      properties:
        reason:
          description: Output only. Provides additional detail if the entity is incompatible with the metadata store.
          type: string
          readOnly: true
        compatible:
          description: Output only. Whether the entity is compatible and can be represented in the metadata store.
          type: boolean
          readOnly: true
    GoogleCloudDataplexV1AssetSecurityStatus:
      id: GoogleCloudDataplexV1AssetSecurityStatus
      type: object
      properties:
        state:
          enum:
            - STATE_UNSPECIFIED
            - READY
            - APPLYING
            - ERROR
          type: string
          enumDescriptions:
            - State unspecified.
            - Security policy has been successfully applied to the attached resource.
            - Security policy is in the process of being applied to the attached resource.
            - Security policy could not be applied to the attached resource due to errors.
          description: The current state of the security policy applied to the attached resource.
        updateTime:
          type: string
          format: google-datetime
          description: Last update time of the status.
        message:
          description: Additional information about the current state.
          type: string
      description: Security policy status of the asset. Data security policy, i.e., readers, writers & owners, should be specified in the lake/zone/asset IAM policy.
    GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime:
      properties:
        properties:
          additionalProperties:
            type: string
          description: Optional. Spark properties to provide configuration for use in sessions created for this environment. The properties to set on daemon config files. Property keys are specified in prefix:property format. The prefix must be "spark".
          type: object
        javaLibraries:
          type: array
          description: Optional. List of Java jars to be included in the runtime environment. Valid input includes Cloud Storage URIs to Jar binaries. For example, gs://bucket-name/my/path/to/file.jar
          items:
            type: string
        imageVersion:
          type: string
          description: Required. Dataplex Image version.
        pythonPackages:
          type: array
          description: Optional. A list of python packages to be installed. Valid formats include Cloud Storage URI to a PIP installable library. For example, gs://bucket-name/my/path/to/lib.tar.gz
          items:
            type: string
      description: Software Runtime Configuration to run Analyze.
      id: GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime
      type: object
    GoogleCloudDataplexV1SessionEvent:
      type: object
      description: These messages contain information about sessions within an environment. The monitored resource is 'Environment'.
      id: GoogleCloudDataplexV1SessionEvent
      properties:
        fastStartupEnabled:
          description: If the session is associated with an environment with fast startup enabled, and was created before being assigned to a user.
          type: boolean
        query:
          $ref: '#/components/schemas/GoogleCloudDataplexV1SessionEventQueryDetail'
          description: The execution details of the query.
        type:
          type: string
          enum:
            - EVENT_TYPE_UNSPECIFIED
            - START
            - STOP
            - QUERY
            - CREATE
          description: The type of the event.
          enumDescriptions:
            - An unspecified event type.
            - Event when the session is assigned to a user.
            - Event for stop of a session.
            - Query events in the session.
            - Event for creation of a cluster. It is not yet assigned to a user. This comes before START in the sequence
        sessionId:
          description: Unique identifier for the session.
          type: string
        userId:
          description: The information about the user that created the session. It will be the email address of the user.
          type: string
        message:
          description: The log message.
          type: string
        unassignedDuration:
          description: The idle duration of a warm pooled session before it is assigned to user.
          type: string
          format: google-duration
        eventSucceeded:
          type: boolean
          description: The status of the event.
    GoogleCloudDataplexV1DataQualityDimensionResult:
      id: GoogleCloudDataplexV1DataQualityDimensionResult
      type: object
      description: DataQualityDimensionResult provides a more detailed, per-dimension level view of the results.
      properties:
        passed:
          description: Whether the dimension passed or failed.
          type: boolean
    GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfo:
      properties:
        maxLength:
          type: string
          description: The maximum length of a string field in the sampled data. Optional if zero non-null rows.
          format: int64
        averageLength:
          type: number
          format: double
          description: The average length of a string field in the sampled data. Optional if zero non-null rows.
        minLength:
          description: The minimum length of the string field in the sampled data. Optional if zero non-null rows.
          type: string
          format: int64
      type: object
      id: GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfo
      description: StringFieldInfo defines output info for any string type field.
    GoogleCloudDataplexV1DataScanEvent:
      properties:
        dataQuality:
          description: Data quality result for data quality type data scan.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataScanEventDataQualityResult'
        jobId:
          description: The identifier of the specific data scan job this log entry is for.
          type: string
        endTime:
          type: string
          description: The time when the data scan job finished.
          format: google-datetime
        specVersion:
          type: string
          description: A version identifier of the spec which was used to execute this job.
        dataProfile:
          description: Data profile result for data profile type data scan.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataScanEventDataProfileResult'
        message:
          type: string
          description: The message describing the data scan job event.
        scope:
          enum:
            - SCOPE_UNSPECIFIED
            - FULL
            - INCREMENTAL
          enumDescriptions:
            - An unspecified scope type.
            - Data scan runs on all of the data.
            - Data scan runs on incremental data.
          type: string
          description: The scope of the data scan (e.g. full, incremental).
        state:
          type: string
          description: The status of the data scan job.
          enum:
            - STATE_UNSPECIFIED
            - STARTED
            - SUCCEEDED
            - FAILED
            - CANCELLED
          enumDescriptions:
            - Unspecified job state.
            - Data scan started.
            - Data scan successfully completed.
            - Data scan was unsuccessful.
            - Data scan was cancelled.
        type:
          type: string
          enumDescriptions:
            - An unspecified data scan type.
            - Data scan for data profile.
            - Data scan for data quality.
          enum:
            - SCAN_TYPE_UNSPECIFIED
            - DATA_PROFILE
            - DATA_QUALITY
          description: The type of the data scan.
        startTime:
          type: string
          description: The time when the data scan job started to run.
          format: google-datetime
        dataSource:
          description: The data source of the data scan
          type: string
        trigger:
          type: string
          enumDescriptions:
            - An unspecified trigger type.
            - Data scan triggers on demand.
            - Data scan triggers as per schedule.
          description: The trigger type of the data scan job.
          enum:
            - TRIGGER_UNSPECIFIED
            - ON_DEMAND
            - SCHEDULE
      description: These messages contain information about the execution of a datascan. The monitored resource is 'DataScan'
      type: object
      id: GoogleCloudDataplexV1DataScanEvent
    GoogleLongrunningListOperationsResponse:
      description: The response message for Operations.ListOperations.
      id: GoogleLongrunningListOperationsResponse
      type: object
      properties:
        operations:
          description: A list of operations that matches the specified filter in the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
        nextPageToken:
          type: string
          description: The standard List next-page token.
    GoogleCloudLocationListLocationsResponse:
      id: GoogleCloudLocationListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        locations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudLocationLocation'
          description: A list of locations that matches the specified filter in the request.
    GoogleIamV1AuditConfig:
      type: object
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs.If there are AuditConfigs for both allServices and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted.Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.'
      properties:
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          items:
            $ref: '#/components/schemas/GoogleIamV1AuditLogConfig'
          type: array
        service:
          description: Specifies a service that will be enabled for audit logging. For example, storage.googleapis.com, cloudsql.googleapis.com. allServices is a special value that covers all services.
          type: string
      id: GoogleIamV1AuditConfig
    GoogleCloudDataplexV1ContentNotebook:
      description: Configuration for Notebook content.
      type: object
      properties:
        kernelType:
          description: Required. Kernel Type of the notebook.
          enum:
            - KERNEL_TYPE_UNSPECIFIED
            - PYTHON3
          enumDescriptions:
            - Kernel Type unspecified.
            - Python 3 Kernel.
          type: string
      id: GoogleCloudDataplexV1ContentNotebook
    GoogleLongrunningOperation:
      properties:
        error:
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: The error result of the operation in case of failure or cancellation.
        response:
          description: The normal response of the operation in case of success. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse.
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the name should be a resource name ending with operations/{unique_id}.
          type: string
        metadata:
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        done:
          description: If the value is false, it means the operation is still in progress. If true, the operation is completed, and either error or response is available.
          type: boolean
      id: GoogleLongrunningOperation
      description: This resource represents a long-running operation that is the result of a network API call.
      type: object
    GoogleCloudDataplexV1ActionInvalidDataPartition:
      id: GoogleCloudDataplexV1ActionInvalidDataPartition
      description: Action details for invalid or unsupported partitions detected by discovery.
      properties:
        expectedStructure:
          type: string
          enumDescriptions:
            - PartitionStructure unspecified.
            - Consistent hive-style partition definition (both raw and curated zone).
            - Hive style partition definition (curated zone only).
          description: The issue type of InvalidDataPartition.
          enum:
            - PARTITION_STRUCTURE_UNSPECIFIED
            - CONSISTENT_KEYS
            - HIVE_STYLE_KEYS
      type: object
    GoogleLongrunningCancelOperationRequest:
      id: GoogleLongrunningCancelOperationRequest
      type: object
      properties: {}
      description: The request message for Operations.CancelOperation.
    GoogleCloudDataplexV1ActionInvalidDataFormat:
      id: GoogleCloudDataplexV1ActionInvalidDataFormat
      properties:
        sampledDataLocations:
          description: The list of data locations sampled and used for format/schema inference.
          type: array
          items:
            type: string
        expectedFormat:
          description: The expected data format of the entity.
          type: string
        newFormat:
          type: string
          description: The new unexpected data format within the entity.
      description: Action details for invalid or unsupported data files detected by discovery.
      type: object
    GoogleCloudDataplexV1DiscoveryEventConfigDetails:
      properties:
        parameters:
          additionalProperties:
            type: string
          type: object
          description: A list of discovery configuration parameters in effect. The keys are the field paths within DiscoverySpec. Eg. includePatterns, excludePatterns, csvOptions.disableTypeInference, etc.
      description: Details about configuration events.
      type: object
      id: GoogleCloudDataplexV1DiscoveryEventConfigDetails
    GoogleCloudDataplexV1ListPartitionsResponse:
      id: GoogleCloudDataplexV1ListPartitionsResponse
      properties:
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no remaining results in the list.
          type: string
        partitions:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Partition'
          description: Partitions under the specified parent entity.
      type: object
      description: List metadata partitions response.
    GoogleCloudDataplexV1RunTaskRequest:
      type: object
      properties: {}
      id: GoogleCloudDataplexV1RunTaskRequest
    GoogleCloudDataplexV1AssetResourceSpec:
      type: object
      id: GoogleCloudDataplexV1AssetResourceSpec
      properties:
        name:
          description: 'Immutable. Relative name of the cloud resource that contains the data that is being managed within a lake. For example: projects/{project_number}/buckets/{bucket_id} projects/{project_number}/datasets/{dataset_id}'
          type: string
        readAccessMode:
          type: string
          description: Optional. Determines how read permissions are handled for each asset and their associated tables. Only available to storage buckets assets.
          enum:
            - ACCESS_MODE_UNSPECIFIED
            - DIRECT
            - MANAGED
          enumDescriptions:
            - Access mode unspecified.
            - Default. Data is accessed directly using storage APIs.
            - Data is accessed through a managed interface using BigQuery APIs.
        type:
          enum:
            - TYPE_UNSPECIFIED
            - STORAGE_BUCKET
            - BIGQUERY_DATASET
          type: string
          enumDescriptions:
            - Type not specified.
            - Cloud Storage bucket.
            - BigQuery dataset.
          description: Required. Immutable. Type of resource.
      description: Identifies the cloud resource that is referenced by this asset.
    GoogleCloudDataplexV1RunDataScanResponse:
      description: Run DataScan Response.
      properties:
        job:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataScanJob'
          description: DataScanJob created by RunDataScan API.
      id: GoogleCloudDataplexV1RunDataScanResponse
      type: object
    GoogleCloudDataplexV1ActionMissingResource:
      description: Action details for resource references in assets that cannot be located.
      id: GoogleCloudDataplexV1ActionMissingResource
      type: object
      properties: {}
    GoogleCloudDataplexV1DataScanExecutionStatus:
      description: Status of the data scan execution.
      properties:
        latestJobStartTime:
          type: string
          description: The time when the latest DataScanJob started.
          format: google-datetime
        latestJobEndTime:
          type: string
          description: The time when the latest DataScanJob ended.
          format: google-datetime
      id: GoogleCloudDataplexV1DataScanExecutionStatus
      type: object
    GoogleCloudLocationLocation:
      id: GoogleCloudLocationLocation
      properties:
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: "projects/example-project/locations/us-east1"'
          type: string
        locationId:
          description: 'The canonical id for this location. For example: "us-east1".'
          type: string
        displayName:
          description: The friendly name for this location, typically a nearby city name. For example, "Tokyo".
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"} '
        metadata:
          description: Service-specific metadata. For example the available capacity at the given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
      type: object
      description: A resource that represents Google Cloud Platform location.
    GoogleCloudDataplexV1DataSource:
      description: The data source for DataScan.
      id: GoogleCloudDataplexV1DataSource
      type: object
      properties:
        entity:
          type: string
          description: 'Immutable. The dataplex entity that contains the data for DataScan, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}.'
    GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime:
      type: object
      id: GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime
      description: Container Image Runtime Configuration used with Batch execution.
      properties:
        properties:
          description: Optional. Override to common configuration of open source components installed on the Dataproc cluster. The properties to set on daemon config files. Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. For more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).
          additionalProperties:
            type: string
          type: object
        image:
          type: string
          description: Optional. Container image to use.
        javaJars:
          description: Optional. A list of Java JARS to add to the classpath. Valid input includes Cloud Storage URIs to Jar binaries. For example, gs://bucket-name/my/path/to/file.jar
          type: array
          items:
            type: string
        pythonPackages:
          description: Optional. A list of python packages to be installed. Valid formats include Cloud Storage URI to a PIP installable library. For example, gs://bucket-name/my/path/to/lib.tar.gz
          type: array
          items:
            type: string
    GoogleCloudDataplexV1EnvironmentSessionStatus:
      id: GoogleCloudDataplexV1EnvironmentSessionStatus
      properties:
        active:
          type: boolean
          description: Output only. Queries over sessions to mark whether the environment is currently active or not
          readOnly: true
      type: object
    GoogleCloudDataplexV1Zone:
      type: object
      id: GoogleCloudDataplexV1Zone
      properties:
        labels:
          description: Optional. User defined labels for the zone.
          additionalProperties:
            type: string
          type: object
        displayName:
          type: string
          description: Optional. User friendly display name.
        name:
          readOnly: true
          description: 'Output only. The relative resource name of the zone, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.'
          type: string
        updateTime:
          description: Output only. The time when the zone was last updated.
          readOnly: true
          type: string
          format: google-datetime
        assetStatus:
          readOnly: true
          description: Output only. Aggregated status of the underlying assets of the zone.
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetStatus'
        discoverySpec:
          $ref: '#/components/schemas/GoogleCloudDataplexV1ZoneDiscoverySpec'
          description: Optional. Specification of the discovery feature applied to data in this zone.
        resourceSpec:
          description: Required. Specification of the resources that are referenced by the assets within this zone.
          $ref: '#/components/schemas/GoogleCloudDataplexV1ZoneResourceSpec'
        createTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The time when the zone was created.
        state:
          description: Output only. Current state of the zone.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - DELETING
            - ACTION_REQUIRED
          enumDescriptions:
            - State is not specified.
            - Resource is active, i.e., ready to use.
            - Resource is under creation.
            - Resource is under deletion.
            - Resource is active but has unresolved actions.
          readOnly: true
          type: string
        type:
          enum:
            - TYPE_UNSPECIFIED
            - RAW
            - CURATED
          type: string
          enumDescriptions:
            - Zone type not specified.
            - A zone that contains data that needs further processing before it is considered generally ready for consumption and analytics workloads.
            - A zone that contains data that is considered to be ready for broader consumption and analytics workloads. Curated structured data stored in Cloud Storage must conform to certain file formats (parquet, avro and orc) and organized in a hive-compatible directory layout.
          description: Required. Immutable. The type of the zone.
        uid:
          description: Output only. System generated globally unique ID for the zone. This ID will be different if the zone is deleted and re-created with the same name.
          readOnly: true
          type: string
        description:
          type: string
          description: Optional. Description of the zone.
      description: A zone represents a logical group of related assets within a lake. A zone can be used to map to organizational structure or represent stages of data readiness from raw to curated. It provides managing behavior that is shared or inherited by all contained assets.
    GoogleCloudDataplexV1ListActionsResponse:
      type: object
      properties:
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
        actions:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Action'
          description: Actions under the given parent lake/zone/asset.
      description: List actions response.
      id: GoogleCloudDataplexV1ListActionsResponse
    GoogleCloudDataplexV1JobEvent:
      id: GoogleCloudDataplexV1JobEvent
      description: The payload associated with Job logs that contains events describing jobs that have run within a Lake.
      properties:
        serviceJob:
          type: string
          description: The reference to the job within the service.
        type:
          enumDescriptions:
            - Unspecified job type.
            - Spark jobs.
            - Notebook jobs.
          enum:
            - TYPE_UNSPECIFIED
            - SPARK
            - NOTEBOOK
          type: string
          description: The type of the job.
        message:
          type: string
          description: The log message.
        jobId:
          type: string
          description: The unique id identifying the job.
        state:
          enumDescriptions:
            - Unspecified job state.
            - Job successfully completed.
            - Job was unsuccessful.
            - Job was cancelled by the user.
            - Job was cancelled or aborted via the service executing the job.
          type: string
          description: The job state on completion.
          enum:
            - STATE_UNSPECIFIED
            - SUCCEEDED
            - FAILED
            - CANCELLED
            - ABORTED
        service:
          enumDescriptions:
            - Unspecified service.
            - Cloud Dataproc.
          description: The service used to execute the job.
          enum:
            - SERVICE_UNSPECIFIED
            - DATAPROC
          type: string
        retries:
          type: integer
          description: The number of retries.
          format: int32
        endTime:
          type: string
          format: google-datetime
          description: The time when the job ended running.
        startTime:
          type: string
          format: google-datetime
          description: The time when the job started running.
      type: object
    GoogleCloudDataplexV1RunDataScanRequest:
      description: Run DataScan Request
      id: GoogleCloudDataplexV1RunDataScanRequest
      properties: {}
      type: object
    GoogleCloudDataplexV1ListAssetsResponse:
      properties:
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
        assets:
          type: array
          description: Asset under the given parent zone.
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Asset'
      description: List assets response.
      id: GoogleCloudDataplexV1ListAssetsResponse
      type: object
    GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValue:
      id: GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValue
      type: object
      description: The TopNValue defines the structure of output of top N values of a field.
      properties:
        count:
          description: The frequency count of the corresponding value in the field.
          format: int64
          type: string
        value:
          description: The value is the string value of the actual value from the field.
          type: string
    GoogleCloudDataplexV1DataQualityRuleResult:
      properties:
        passed:
          description: Whether the rule passed or failed.
          type: boolean
        passedCount:
          type: string
          format: int64
          description: The number of rows which passed a rule evaluation. This field is only valid for ColumnMap type rules.
        evaluatedCount:
          format: int64
          type: string
          description: The number of rows a rule was evaluated against. This field is only valid for ColumnMap type rules. Evaluated count can be configured to either (1) include all rows (default) - with null rows automatically failing rule evaluation OR (2) exclude null rows from the evaluated_count, by setting ignore_nulls = true
        nullCount:
          description: The number of rows with null values in the specified column.
          format: int64
          type: string
        failingRowsQuery:
          type: string
          description: The query to find rows that did not pass this rule. Only applies to ColumnMap and RowCondition rules.
        rule:
          description: The rule specified in the DataQualitySpec, as is.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityRule'
        passRatio:
          description: The ratio of passed_count / evaluated_count. This field is only valid for ColumnMap type rules.
          format: double
          type: number
      type: object
      id: GoogleCloudDataplexV1DataQualityRuleResult
      description: DataQualityRuleResult provides a more detailed, per-rule level view of the results.
    GoogleCloudDataplexV1StorageFormatJsonOptions:
      properties:
        encoding:
          type: string
          description: Optional. The character encoding of the data. Accepts "US-ASCII", "UTF-8" and "ISO-8859-1". Defaults to UTF-8 if not specified.
      description: Describes JSON data format.
      id: GoogleCloudDataplexV1StorageFormatJsonOptions
      type: object
    GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation:
      id: GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation
      type: object
      description: Evaluates whether the column aggregate statistic lies between a specified range.
      properties:
        minValue:
          description: The minimum column statistic value allowed for a row to pass this validation. At least one of min_value and max_value need to be provided.
          type: string
        strictMaxEnabled:
          description: Whether column statistic needs to be strictly lesser than ('<') the maximum, or if equality is allowed. Only relevant if a max_value has been defined. Default = false.
          type: boolean
        maxValue:
          type: string
          description: The maximum column statistic value allowed for a row to pass this validation. At least one of min_value and max_value need to be provided.
        statistic:
          type: string
          enumDescriptions:
            - Unspecified statistic type
            - Evaluate the column mean
            - Evaluate the column min
            - Evaluate the column max
          enum:
            - STATISTIC_UNDEFINED
            - MEAN
            - MIN
            - MAX
        strictMinEnabled:
          type: boolean
          description: Whether column statistic needs to be strictly greater than ('>') the minimum, or if equality is allowed. Only relevant if a min_value has been defined. Default = false.
    GoogleCloudDataplexV1ListTasksResponse:
      properties:
        tasks:
          description: Tasks under the given parent lake.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Task'
        unreachableLocations:
          items:
            type: string
          type: array
          description: Locations that could not be reached.
        nextPageToken:
          type: string
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
      id: GoogleCloudDataplexV1ListTasksResponse
      type: object
      description: List tasks response.
    GoogleCloudDataplexV1EntityCompatibilityStatus:
      properties:
        hiveMetastore:
          description: Output only. Whether this entity is compatible with Hive Metastore.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility'
        bigquery:
          description: Output only. Whether this entity is compatible with BigQuery.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility'
      type: object
      id: GoogleCloudDataplexV1EntityCompatibilityStatus
      description: Provides compatibility information for various metadata stores.
    GoogleCloudDataplexV1AssetResourceStatus:
      properties:
        state:
          enum:
            - STATE_UNSPECIFIED
            - READY
            - ERROR
          enumDescriptions:
            - State unspecified.
            - Resource does not have any errors.
            - Resource has errors.
          type: string
          description: The current state of the managed resource.
        message:
          type: string
          description: Additional information about the current state.
        updateTime:
          format: google-datetime
          description: Last update time of the status.
          type: string
      type: object
      description: Status of the resource referenced by an asset.
      id: GoogleCloudDataplexV1AssetResourceStatus
    GoogleCloudDataplexV1OperationMetadata:
      type: object
      id: GoogleCloudDataplexV1OperationMetadata
      description: Represents the metadata of a long-running operation.
      properties:
        endTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation finished running.
        apiVersion:
          readOnly: true
          type: string
          description: Output only. API version used to start the operation.
        verb:
          type: string
          readOnly: true
          description: Output only. Name of the verb executed by the operation.
        createTime:
          type: string
          readOnly: true
          description: Output only. The time the operation was created.
          format: google-datetime
        target:
          description: Output only. Server-defined resource path for the target of the operation.
          type: string
          readOnly: true
        statusMessage:
          readOnly: true
          type: string
          description: Output only. Human-readable status of the operation, if any.
        requestedCancellation:
          description: Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to Code.CANCELLED.
          type: boolean
          readOnly: true
    GoogleCloudDataplexV1DataProfileResult:
      id: GoogleCloudDataplexV1DataProfileResult
      properties:
        rowCount:
          format: int64
          type: string
          description: The count of all rows in the sampled data. Return 0, if zero rows.
        profile:
          description: This represents the profile information per field.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileResultProfile'
        scannedData:
          description: The data scanned for this profile.
          $ref: '#/components/schemas/GoogleCloudDataplexV1ScannedData'
      description: DataProfileResult defines the output of DataProfileScan. Each field of the table will have field type specific profile result.
      type: object
    GoogleCloudDataplexV1TriggerSchedule:
      description: The scan is scheduled to run periodically.
      properties:
        cron:
          type: string
          description: 'Required. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running scans periodically. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or "TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, "CRON_TZ=America/New_York 1 * * * *", or "TZ=America/New_York 1 * * * *". This field is required for Schedule scans.'
      type: object
      id: GoogleCloudDataplexV1TriggerSchedule
    GoogleRpcStatus:
      type: object
      properties:
        details:
          type: array
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
        code:
          format: int32
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
      id: GoogleRpcStatus
      description: 'The Status type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC (https://github.com/grpc). Each Status message contains three pieces of data: error code, error message, and error details.You can find out more about this error model and how to work with it in the API Design Guide (https://cloud.google.com/apis/design/errors).'
    GoogleCloudDataplexV1Content:
      properties:
        name:
          type: string
          description: 'Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}'
          readOnly: true
        dataText:
          description: Required. Content data in string format.
          type: string
        notebook:
          $ref: '#/components/schemas/GoogleCloudDataplexV1ContentNotebook'
          description: Notebook related configurations.
        uid:
          type: string
          description: Output only. System generated globally unique ID for the content. This ID will be different if the content is deleted and re-created with the same name.
          readOnly: true
        sqlScript:
          $ref: '#/components/schemas/GoogleCloudDataplexV1ContentSqlScript'
          description: Sql Script related configurations.
        description:
          description: Optional. Description of the content.
          type: string
        path:
          description: Required. The path for the Content file, represented as directory structure. Unique within a lake. Limited to alphanumerics, hyphens, underscores, dots and slashes.
          type: string
        labels:
          description: Optional. User defined labels for the content.
          additionalProperties:
            type: string
          type: object
        updateTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The time when the content was last updated.
        createTime:
          format: google-datetime
          readOnly: true
          description: Output only. Content creation time.
          type: string
      description: Content represents a user-visible notebook or a sql script
      type: object
      id: GoogleCloudDataplexV1Content
    GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions:
      description: Describe CSV and similar semi-structured data formats.
      type: object
      id: GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions
      properties:
        encoding:
          description: Optional. The character encoding of the data. The default is UTF-8.
          type: string
        disableTypeInference:
          description: Optional. Whether to disable the inference of data type for CSV data. If true, all columns will be registered as strings.
          type: boolean
        delimiter:
          type: string
          description: Optional. The delimiter being used to separate values. This defaults to ','.
        headerRows:
          description: Optional. The number of rows to interpret as header rows that should be skipped when reading data rows.
          type: integer
          format: int32
    GoogleCloudDataplexV1SchemaPartitionField:
      id: GoogleCloudDataplexV1SchemaPartitionField
      type: object
      properties:
        name:
          type: string
          description: Required. Partition field name must consist of letters, numbers, and underscores only, with a maximum of length of 256 characters, and must begin with a letter or underscore..
        type:
          enum:
            - TYPE_UNSPECIFIED
            - BOOLEAN
            - BYTE
            - INT16
            - INT32
            - INT64
            - FLOAT
            - DOUBLE
            - DECIMAL
            - STRING
            - BINARY
            - TIMESTAMP
            - DATE
            - TIME
            - RECORD
            - 'NULL'
          enumDescriptions:
            - SchemaType unspecified.
            - Boolean field.
            - Single byte numeric field.
            - 16-bit numeric field.
            - 32-bit numeric field.
            - 64-bit numeric field.
            - Floating point numeric field.
            - Double precision numeric field.
            - Real value numeric field.
            - Sequence of characters field.
            - Sequence of bytes field.
            - Date and time field.
            - Date field.
            - Time field.
            - Structured field. Nested fields that define the structure of the map. If all nested fields are nullable, this field represents a union.
            - Null field that does not have values.
          type: string
          description: Required. Immutable. The type of field.
      description: 'Represents a key field within the entity''s partition structure. You could have up to 20 partition fields, but only the first 10 partitions have the filtering ability due to performance consideration. Note: Partition fields are immutable.'
    GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfo:
      type: object
      description: IntegerFieldInfo defines output for any integer type field.
      properties:
        max:
          description: The maximum value of an integer field in the sampled data. Return NaN, if the field has a NaN. Optional if zero non-null rows.
          format: int64
          type: string
        average:
          format: double
          description: The average of non-null values of integer field in the sampled data. Return NaN, if the field has a NaN. Optional if zero non-null rows.
          type: number
        quartiles:
          type: array
          items:
            type: string
            format: int64
          description: 'A quartile divide the number of data points into four parts, or quarters, of more-or-less equal size. Three main quartiles used are: The first quartile (Q1) splits off the lowest 25% of data from the highest 75%. It is also known as the lower or 25th empirical quartile, as 25% of the data is below this point. The second quartile (Q2) is the median of a data set. So, 50% of the data lies below this point. The third quartile (Q3) splits off the highest 25% of data from the lowest 75%. It is known as the upper or 75th empirical quartile, as 75% of the data lies below this point. So, here the quartiles is provided as an ordered list of quartile values, occurring in order Q1, median, Q3.'
        standardDeviation:
          format: double
          description: The standard deviation of non-null of integer field in the sampled data. Return NaN, if the field has a NaN. Optional if zero non-null rows.
          type: number
        min:
          description: The minimum value of an integer field in the sampled data. Return NaN, if the field has a NaN. Optional if zero non-null rows.
          type: string
          format: int64
      id: GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfo
    GoogleCloudDataplexV1Environment:
      description: Environment represents a user-visible compute infrastructure for analytics within a lake.
      id: GoogleCloudDataplexV1Environment
      type: object
      properties:
        description:
          type: string
          description: Optional. Description of the environment.
        createTime:
          description: Output only. Environment creation time.
          format: google-datetime
          type: string
          readOnly: true
        labels:
          type: object
          additionalProperties:
            type: string
          description: Optional. User defined labels for the environment.
        sessionSpec:
          $ref: '#/components/schemas/GoogleCloudDataplexV1EnvironmentSessionSpec'
          description: Optional. Configuration for sessions created for this environment.
        updateTime:
          format: google-datetime
          readOnly: true
          description: Output only. The time when the environment was last updated.
          type: string
        uid:
          readOnly: true
          description: Output only. System generated globally unique ID for the environment. This ID will be different if the environment is deleted and re-created with the same name.
          type: string
        endpoints:
          description: Output only. URI Endpoints to access sessions associated with the Environment.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1EnvironmentEndpoints'
        sessionStatus:
          readOnly: true
          description: Output only. Status of sessions created for this environment.
          $ref: '#/components/schemas/GoogleCloudDataplexV1EnvironmentSessionStatus'
        infrastructureSpec:
          $ref: '#/components/schemas/GoogleCloudDataplexV1EnvironmentInfrastructureSpec'
          description: Required. Infrastructure specification for the Environment.
        state:
          enumDescriptions:
            - State is not specified.
            - Resource is active, i.e., ready to use.
            - Resource is under creation.
            - Resource is under deletion.
            - Resource is active but has unresolved actions.
          readOnly: true
          description: Output only. Current state of the environment.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - DELETING
            - ACTION_REQUIRED
        displayName:
          type: string
          description: Optional. User friendly display name.
        name:
          type: string
          readOnly: true
          description: 'Output only. The relative resource name of the environment, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/environment/{environment_id}'
    GoogleIamV1SetIamPolicyRequest:
      description: Request message for SetIamPolicy method.
      type: object
      properties:
        updateMask:
          description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used:paths: "bindings, etag"'
          type: string
          format: google-fieldmask
        policy:
          description: 'REQUIRED: The complete policy to be applied to the resource. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.'
          $ref: '#/components/schemas/GoogleIamV1Policy'
      id: GoogleIamV1SetIamPolicyRequest
    GoogleCloudDataplexV1StorageFormat:
      type: object
      description: Describes the format of the data within its storage location.
      id: GoogleCloudDataplexV1StorageFormat
      properties:
        json:
          description: Optional. Additional information about CSV formatted data.
          $ref: '#/components/schemas/GoogleCloudDataplexV1StorageFormatJsonOptions'
        compressionFormat:
          description: Optional. The compression type associated with the stored data. If unspecified, the data is uncompressed.
          enumDescriptions:
            - CompressionFormat unspecified. Implies uncompressed data.
            - GZip compressed set of files.
            - BZip2 compressed set of files.
          enum:
            - COMPRESSION_FORMAT_UNSPECIFIED
            - GZIP
            - BZIP2
          type: string
        csv:
          $ref: '#/components/schemas/GoogleCloudDataplexV1StorageFormatCsvOptions'
          description: Optional. Additional information about CSV formatted data.
        mimeType:
          description: 'Required. The mime type descriptor for the data. Must match the pattern {type}/{subtype}. Supported values: application/x-parquet application/x-avro application/x-orc application/x-tfrecord application/x-parquet+iceberg application/x-avro+iceberg application/x-orc+iceberg application/json application/{subtypes} text/csv text/ image/{image subtype} video/{video subtype} audio/{audio subtype}'
          type: string
        iceberg:
          $ref: '#/components/schemas/GoogleCloudDataplexV1StorageFormatIcebergOptions'
          description: Optional. Additional information about iceberg tables.
        format:
          enumDescriptions:
            - Format unspecified.
            - Parquet-formatted structured data.
            - Avro-formatted structured data.
            - Orc-formatted structured data.
            - Csv-formatted semi-structured data.
            - Json-formatted semi-structured data.
            - Image data formats (such as jpg and png).
            - Audio data formats (such as mp3, and wav).
            - Video data formats (such as mp4 and mpg).
            - Textual data formats (such as txt and xml).
            - TensorFlow record format.
            - Data that doesn't match a specific format.
            - Data of an unknown format.
          description: Output only. The data format associated with the stored data, which represents content type values. The value is inferred from mime type.
          enum:
            - FORMAT_UNSPECIFIED
            - PARQUET
            - AVRO
            - ORC
            - CSV
            - JSON
            - IMAGE
            - AUDIO
            - VIDEO
            - TEXT
            - TFRECORD
            - OTHER
            - UNKNOWN
          type: string
          readOnly: true
    GoogleCloudDataplexV1ListJobsResponse:
      description: List jobs response.
      properties:
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Job'
          description: Jobs under a given task.
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
      type: object
      id: GoogleCloudDataplexV1ListJobsResponse
    GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation:
      type: object
      id: GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation
      properties:
        sqlExpression:
          type: string
      description: 'Evaluates whether the provided expression is true. The SQL expression needs to use BigQuery standard SQL syntax and should produce a scalar boolean result. Example: MIN(col1) >= 0'
    Empty:
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } '
      id: Empty
      type: object
      properties: {}
    GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions:
      description: Describe JSON data format.
      type: object
      properties:
        disableTypeInference:
          type: boolean
          description: Optional. Whether to disable the inference of data type for Json data. If true, all columns will be registered as their primitive types (strings, number or boolean).
        encoding:
          type: string
          description: Optional. The character encoding of the data. The default is UTF-8.
      id: GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions
    GoogleCloudDataplexV1ListDataScanJobsResponse:
      id: GoogleCloudDataplexV1ListDataScanJobsResponse
      type: object
      description: List DataScanJobs response.
      properties:
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
        dataScanJobs:
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1DataScanJob'
          description: DataScanJobs (metadata only) under a given dataScan.
          type: array
    GoogleCloudDataplexV1TaskExecutionSpec:
      description: Execution related settings, like retry and service_account.
      type: object
      id: GoogleCloudDataplexV1TaskExecutionSpec
      properties:
        maxJobExecutionLifetime:
          format: google-duration
          type: string
          description: Optional. The maximum duration after which the job execution is expired.
        args:
          description: 'Optional. The arguments to pass to the task. The args can use placeholders of the format ${placeholder} as part of key/value string. These will be interpolated before passing the args to the driver. Currently supported placeholders: - ${task_id} - ${job_time} To pass positional args, set the key as TASK_ARGS. The value should be a comma-separated string of all the positional arguments. To use a delimiter other than comma, refer to https://cloud.google.com/sdk/gcloud/reference/topic/escaping. In case of other keys being present in the args, then TASK_ARGS will be passed as the last argument.'
          additionalProperties:
            type: string
          type: object
        kmsKey:
          type: string
          description: 'Optional. The Cloud KMS key to use for encryption, of the form: projects/{project_number}/locations/{location_id}/keyRings/{key-ring-name}/cryptoKeys/{key-name}.'
        project:
          type: string
          description: Optional. The project in which jobs are run. By default, the project containing the Lake is used. If a project is provided, the ExecutionSpec.service_account must belong to this project.
        serviceAccount:
          type: string
          description: Required. Service account to use to execute a task. If not provided, the default Compute service account for the project is used.
    GoogleCloudDataplexV1ListEnvironmentsResponse:
      description: List environments response.
      id: GoogleCloudDataplexV1ListEnvironmentsResponse
      properties:
        environments:
          type: array
          description: Environments under the given parent lake.
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Environment'
        nextPageToken:
          type: string
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
      type: object
    GoogleCloudDataplexV1ZoneDiscoverySpec:
      id: GoogleCloudDataplexV1ZoneDiscoverySpec
      type: object
      properties:
        jsonOptions:
          $ref: '#/components/schemas/GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions'
          description: Optional. Configuration for Json data.
        includePatterns:
          description: Optional. The list of patterns to apply for selecting data to include during discovery if only a subset of the data should considered. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
          items:
            type: string
          type: array
        enabled:
          type: boolean
          description: Required. Whether discovery is enabled.
        excludePatterns:
          items:
            type: string
          description: Optional. The list of patterns to apply for selecting data to exclude during discovery. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
          type: array
        schedule:
          description: 'Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running discovery periodically. Successive discovery runs must be scheduled at least 60 minutes apart. The default value is to run discovery every 60 minutes. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, "CRON_TZ=America/New_York 1 * * * *", or "TZ=America/New_York 1 * * * *".'
          type: string
        csvOptions:
          description: Optional. Configuration for CSV data.
          $ref: '#/components/schemas/GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions'
      description: Settings to manage the metadata discovery and publishing in a zone.
    GoogleCloudDataplexV1DiscoveryEventEntityDetails:
      description: Details about the entity.
      properties:
        type:
          enumDescriptions:
            - An unspecified event type.
            - Entities representing structured data.
            - Entities representing unstructured data.
          type: string
          description: The type of the entity resource.
          enum:
            - ENTITY_TYPE_UNSPECIFIED
            - TABLE
            - FILESET
        entity:
          type: string
          description: The name of the entity resource. The name is the fully-qualified resource name.
      id: GoogleCloudDataplexV1DiscoveryEventEntityDetails
      type: object
    GoogleCloudDataplexV1ActionInvalidDataOrganization:
      type: object
      properties: {}
      id: GoogleCloudDataplexV1ActionInvalidDataOrganization
      description: Action details for invalid data arrangement.
    GoogleCloudDataplexV1ListContentResponse:
      description: List content response.
      id: GoogleCloudDataplexV1ListContentResponse
      type: object
      properties:
        content:
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
          description: Content under the given parent lake.
          type: array
        nextPageToken:
          type: string
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
    GoogleCloudDataplexV1AssetDiscoveryStatus:
      properties:
        lastRunDuration:
          format: google-duration
          description: The duration of the last discovery run.
          type: string
        message:
          description: Additional information about the current state.
          type: string
        updateTime:
          description: Last update time of the status.
          type: string
          format: google-datetime
        state:
          enum:
            - STATE_UNSPECIFIED
            - SCHEDULED
            - IN_PROGRESS
            - PAUSED
            - DISABLED
          description: The current status of the discovery feature.
          enumDescriptions:
            - State is unspecified.
            - Discovery for the asset is scheduled.
            - Discovery for the asset is running.
            - Discovery for the asset is currently paused (e.g. due to a lack of available resources). It will be automatically resumed.
            - Discovery for the asset is disabled.
          type: string
        stats:
          description: Data Stats of the asset reported by discovery.
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetDiscoveryStatusStats'
        lastRunTime:
          format: google-datetime
          type: string
          description: The start time of the last discovery run.
      id: GoogleCloudDataplexV1AssetDiscoveryStatus
      type: object
      description: Status of discovery for an asset.
    GoogleCloudDataplexV1ActionMissingData:
      id: GoogleCloudDataplexV1ActionMissingData
      description: Action details for absence of data detected by discovery.
      type: object
      properties: {}
    GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation:
      description: 'Evaluates whether each row passes the specified condition. The SQL expression needs to use BigQuery standard SQL syntax and should produce a boolean per row as the result. Example: col1 >= 0 AND col2 < 10'
      type: object
      properties:
        sqlExpression:
          type: string
      id: GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation
    GoogleCloudDataplexV1SchemaSchemaField:
      id: GoogleCloudDataplexV1SchemaSchemaField
      description: Represents a column field within a table schema.
      properties:
        name:
          description: Required. The name of the field. Must contain only letters, numbers and underscores, with a maximum length of 767 characters, and must begin with a letter or underscore.
          type: string
        type:
          enumDescriptions:
            - SchemaType unspecified.
            - Boolean field.
            - Single byte numeric field.
            - 16-bit numeric field.
            - 32-bit numeric field.
            - 64-bit numeric field.
            - Floating point numeric field.
            - Double precision numeric field.
            - Real value numeric field.
            - Sequence of characters field.
            - Sequence of bytes field.
            - Date and time field.
            - Date field.
            - Time field.
            - Structured field. Nested fields that define the structure of the map. If all nested fields are nullable, this field represents a union.
            - Null field that does not have values.
          type: string
          enum:
            - TYPE_UNSPECIFIED
            - BOOLEAN
            - BYTE
            - INT16
            - INT32
            - INT64
            - FLOAT
            - DOUBLE
            - DECIMAL
            - STRING
            - BINARY
            - TIMESTAMP
            - DATE
            - TIME
            - RECORD
            - 'NULL'
          description: Required. The type of field.
        fields:
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1SchemaSchemaField'
          description: Optional. Any nested field for complex types.
          type: array
        description:
          description: Optional. User friendly field description. Must be less than or equal to 1024 characters.
          type: string
        mode:
          type: string
          enumDescriptions:
            - Mode unspecified.
            - The field has required semantics.
            - The field has optional semantics, and may be null.
            - The field has repeated (0 or more) semantics, and is a list of values.
          description: Required. Additional field semantics.
          enum:
            - MODE_UNSPECIFIED
            - REQUIRED
            - NULLABLE
            - REPEATED
      type: object
    GoogleCloudDataplexV1DiscoveryEventActionDetails:
      description: Details about the action.
      id: GoogleCloudDataplexV1DiscoveryEventActionDetails
      properties:
        type:
          description: The type of action. Eg. IncompatibleDataSchema, InvalidDataFormat
          type: string
      type: object
    GoogleIamV1TestIamPermissionsRequest:
      properties:
        permissions:
          items:
            type: string
          description: The set of permissions to check for the resource. Permissions with wildcards (such as * or storage.*) are not allowed. For more information see IAM Overview (https://cloud.google.com/iam/docs/overview#permissions).
          type: array
      type: object
      description: Request message for TestIamPermissions method.
      id: GoogleIamV1TestIamPermissionsRequest
    GoogleCloudDataplexV1Schema:
      type: object
      properties:
        partitionStyle:
          description: Optional. The structure of paths containing partition data within the entity.
          enum:
            - PARTITION_STYLE_UNSPECIFIED
            - HIVE_COMPATIBLE
          enumDescriptions:
            - PartitionStyle unspecified
            - 'Partitions are hive-compatible. Examples: gs://bucket/path/to/table/dt=2019-10-31/lang=en, gs://bucket/path/to/table/dt=2019-10-31/lang=en/late.'
          type: string
        fields:
          description: 'Optional. The sequence of fields describing data in table entities. Note: BigQuery SchemaFields are immutable.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1SchemaSchemaField'
        partitionFields:
          description: Optional. The sequence of fields describing the partition structure in entities. If this field is empty, there are no partitions within the data.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1SchemaPartitionField'
        userManaged:
          description: Required. Set to true if user-managed or false if managed by Dataplex. The default is false (managed by Dataplex). Set to falseto enable Dataplex discovery to update the schema. including new data discovery, schema inference, and schema evolution. Users retain the ability to input and edit the schema. Dataplex treats schema input by the user as though produced by a previous Dataplex discovery operation, and it will evolve the schema and take action based on that treatment. Set to true to fully manage the entity schema. This setting guarantees that Dataplex will not change schema fields.
          type: boolean
      description: Schema information describing the structure and layout of the data.
      id: GoogleCloudDataplexV1Schema
    GoogleCloudDataplexV1ContentSqlScript:
      properties:
        engine:
          description: Required. Query Engine to be used for the Sql Query.
          enum:
            - QUERY_ENGINE_UNSPECIFIED
            - SPARK
          enumDescriptions:
            - Value was unspecified.
            - Spark SQL Query.
          type: string
      description: Configuration for the Sql Script content.
      type: object
      id: GoogleCloudDataplexV1ContentSqlScript
    GoogleCloudDataplexV1DataQualityRuleRegexExpectation:
      description: Evaluates whether each column value matches a specified regex.
      properties:
        regex:
          type: string
      id: GoogleCloudDataplexV1DataQualityRuleRegexExpectation
      type: object
    GoogleCloudDataplexV1Action:
      id: GoogleCloudDataplexV1Action
      type: object
      description: Action represents an issue requiring administrator action for resolution.
      properties:
        invalidDataFormat:
          $ref: '#/components/schemas/GoogleCloudDataplexV1ActionInvalidDataFormat'
          description: Details for issues related to invalid or unsupported data formats.
        unauthorizedResource:
          $ref: '#/components/schemas/GoogleCloudDataplexV1ActionUnauthorizedResource'
          description: Details for issues related to lack of permissions to access data resources.
        invalidDataPartition:
          $ref: '#/components/schemas/GoogleCloudDataplexV1ActionInvalidDataPartition'
          description: Details for issues related to invalid or unsupported data partition structure.
        issue:
          description: Detailed description of the issue requiring action.
          type: string
        failedSecurityPolicyApply:
          description: Details for issues related to applying security policy.
          $ref: '#/components/schemas/GoogleCloudDataplexV1ActionFailedSecurityPolicyApply'
        invalidDataOrganization:
          description: Details for issues related to invalid data arrangement.
          $ref: '#/components/schemas/GoogleCloudDataplexV1ActionInvalidDataOrganization'
        zone:
          readOnly: true
          type: string
          description: 'Output only. The relative resource name of the zone, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.'
        name:
          description: 'Output only. The relative resource name of the action, of the form: projects/{project}/locations/{location}/lakes/{lake}/actions/{action} projects/{project}/locations/{location}/lakes/{lake}/zones/{zone}/actions/{action} projects/{project}/locations/{location}/lakes/{lake}/zones/{zone}/assets/{asset}/actions/{action}.'
          type: string
          readOnly: true
        lake:
          description: 'Output only. The relative resource name of the lake, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}.'
          readOnly: true
          type: string
        missingResource:
          description: Details for issues related to absence of a managed resource.
          $ref: '#/components/schemas/GoogleCloudDataplexV1ActionMissingResource'
        dataLocations:
          type: array
          description: The list of data locations associated with this action. Cloud Storage locations are represented as URI paths(E.g. gs://bucket/table1/year=2020/month=Jan/). BigQuery locations refer to resource names(E.g. bigquery.googleapis.com/projects/project-id/datasets/dataset-id).
          items:
            type: string
        missingData:
          description: Details for issues related to absence of data within managed resources.
          $ref: '#/components/schemas/GoogleCloudDataplexV1ActionMissingData'
        asset:
          description: 'Output only. The relative resource name of the asset, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/assets/{asset_id}.'
          readOnly: true
          type: string
        category:
          type: string
          enum:
            - CATEGORY_UNSPECIFIED
            - RESOURCE_MANAGEMENT
            - SECURITY_POLICY
            - DATA_DISCOVERY
          enumDescriptions:
            - Unspecified category.
            - Resource management related issues.
            - Security policy related issues.
            - Data and discovery related issues.
          description: The category of issue associated with the action.
        incompatibleDataSchema:
          $ref: '#/components/schemas/GoogleCloudDataplexV1ActionIncompatibleDataSchema'
          description: Details for issues related to incompatible schemas detected within data.
        detectTime:
          format: google-datetime
          type: string
          description: The time that the issue was detected.
    GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork:
      description: Cloud VPC Network used to run the infrastructure.
      id: GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork
      properties:
        subNetwork:
          type: string
          description: Optional. The Cloud VPC sub-network in which the job is run.
        networkTags:
          items:
            type: string
          description: Optional. List of network tags to apply to the job.
          type: array
        network:
          type: string
          description: Optional. The Cloud VPC network in which the job is run. By default, the Cloud VPC network named Default within the project is used.
      type: object
    GoogleCloudDataplexV1ActionFailedSecurityPolicyApply:
      description: Failed to apply security policy to the managed resource(s) under a lake, zone or an asset. For a lake or zone resource, one or more underlying assets has a failure applying security policy to the associated managed resource.
      type: object
      id: GoogleCloudDataplexV1ActionFailedSecurityPolicyApply
      properties:
        asset:
          description: Resource name of one of the assets with failing security policy application. Populated for a lake or zone resource only.
          type: string
    GoogleCloudDataplexV1DataProfileSpec:
      properties: {}
      type: object
      description: DataProfileScan related setting.
      id: GoogleCloudDataplexV1DataProfileSpec
    GoogleCloudDataplexV1Trigger:
      type: object
      description: DataScan scheduling and trigger settings.
      properties:
        onDemand:
          description: The scan runs one-time shortly after DataScan Creation.
          $ref: '#/components/schemas/GoogleCloudDataplexV1TriggerOnDemand'
        schedule:
          description: The scan is scheduled to run periodically.
          $ref: '#/components/schemas/GoogleCloudDataplexV1TriggerSchedule'
      id: GoogleCloudDataplexV1Trigger
    GoogleCloudDataplexV1ScannedData:
      properties:
        incrementalField:
          description: The range denoted by values of an incremental field
          $ref: '#/components/schemas/GoogleCloudDataplexV1ScannedDataIncrementalField'
      id: GoogleCloudDataplexV1ScannedData
      description: The data scanned during processing (e.g. in incremental DataScan)
      type: object
    GoogleCloudDataplexV1ActionUnauthorizedResource:
      properties: {}
      type: object
      id: GoogleCloudDataplexV1ActionUnauthorizedResource
      description: Action details for unauthorized resource issues raised to indicate that the service account associated with the lake instance is not authorized to access or manage the resource associated with an asset.
    GoogleCloudDataplexV1DataQualityResult:
      type: object
      id: GoogleCloudDataplexV1DataQualityResult
      description: The output of a DataQualityScan.
      properties:
        rules:
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityRuleResult'
          type: array
          description: A list of all the rules in a job, and their results.
        passed:
          type: boolean
          description: Overall data quality result -- true if all rules passed.
        dimensions:
          description: A list of results at the dimension-level.
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityDimensionResult'
          type: array
        scannedData:
          $ref: '#/components/schemas/GoogleCloudDataplexV1ScannedData'
          description: The data scanned for this result.
        rowCount:
          description: The count of rows processed.
          type: string
          format: int64
    GoogleCloudDataplexV1ActionIncompatibleDataSchema:
      type: object
      properties:
        schemaChange:
          enum:
            - SCHEMA_CHANGE_UNSPECIFIED
            - INCOMPATIBLE
            - MODIFIED
          enumDescriptions:
            - Schema change unspecified.
            - Newly discovered schema is incompatible with existing schema.
            - Newly discovered schema has changed from existing schema for data in a curated zone.
          description: Whether the action relates to a schema that is incompatible or modified.
          type: string
        table:
          type: string
          description: The name of the table containing invalid data.
        sampledDataLocations:
          type: array
          items:
            type: string
          description: The list of data locations sampled and used for format/schema inference.
        existingSchema:
          description: The existing and expected schema of the table. The schema is provided as a JSON formatted structure listing columns and data types.
          type: string
        newSchema:
          description: The new and incompatible schema within the table. The schema is provided as a JSON formatted structured listing columns and data types.
          type: string
      id: GoogleCloudDataplexV1ActionIncompatibleDataSchema
      description: Action details for incompatible schemas detected by discovery.
    GoogleCloudDataplexV1LakeMetastore:
      properties:
        service:
          type: string
          description: 'Optional. A relative reference to the Dataproc Metastore (https://cloud.google.com/dataproc-metastore/docs) service associated with the lake: projects/{project_id}/locations/{location_id}/services/{service_id}'
      description: Settings to manage association of Dataproc Metastore with a lake.
      type: object
      id: GoogleCloudDataplexV1LakeMetastore
    GoogleCloudDataplexV1ZoneResourceSpec:
      id: GoogleCloudDataplexV1ZoneResourceSpec
      properties:
        locationType:
          type: string
          description: Required. Immutable. The location type of the resources that are allowed to be attached to the assets within this zone.
          enum:
            - LOCATION_TYPE_UNSPECIFIED
            - SINGLE_REGION
            - MULTI_REGION
          enumDescriptions:
            - Unspecified location type.
            - Resources that are associated with a single region.
            - Resources that are associated with a multi-region location.
      description: Settings for resources attached as assets within a zone.
      type: object
    GoogleCloudDataplexV1StorageAccess:
      id: GoogleCloudDataplexV1StorageAccess
      type: object
      description: Describes the access mechanism of the data within its storage location.
      properties:
        read:
          type: string
          readOnly: true
          enum:
            - ACCESS_MODE_UNSPECIFIED
            - DIRECT
            - MANAGED
          enumDescriptions:
            - Access mode unspecified.
            - Default. Data is accessed directly using storage APIs.
            - Data is accessed through a managed interface using BigQuery APIs.
          description: Output only. Describes the read access mechanism of the data. Not user settable.
    GoogleCloudDataplexV1TaskSparkTaskConfig:
      id: GoogleCloudDataplexV1TaskSparkTaskConfig
      properties:
        sqlScriptFile:
          description: A reference to a query file. This can be the Cloud Storage URI of the query file or it can the path to a SqlScript Content. The execution args are used to declare a set of script variables (set key="value";).
          type: string
        mainClass:
          type: string
          description: The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris. The execution args are passed in as a sequence of named process arguments (--key=value).
        infrastructureSpec:
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskInfrastructureSpec'
          description: Optional. Infrastructure specification for the execution.
        mainJarFileUri:
          description: The Cloud Storage URI of the jar file that contains the main class. The execution args are passed in as a sequence of named process arguments (--key=value).
          type: string
        fileUris:
          type: array
          items:
            type: string
          description: Optional. Cloud Storage URIs of files to be placed in the working directory of each executor.
        archiveUris:
          description: 'Optional. Cloud Storage URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.'
          type: array
          items:
            type: string
        pythonScriptFile:
          description: The Gcloud Storage URI of the main Python file to use as the driver. Must be a .py file. The execution args are passed in as a sequence of named process arguments (--key=value).
          type: string
        sqlScript:
          type: string
          description: The query text. The execution args are used to declare a set of script variables (set key="value";).
      description: User-specified config for running a Spark task.
      type: object
    GoogleCloudDataplexV1Session:
      type: object
      id: GoogleCloudDataplexV1Session
      properties:
        name:
          readOnly: true
          type: string
          description: 'Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/environment/{environment_id}/sessions/{session_id}'
        createTime:
          type: string
          format: google-datetime
          description: Output only. Session start time.
          readOnly: true
        userId:
          readOnly: true
          description: Output only. Email of user running the session.
          type: string
        state:
          readOnly: true
          type: string
          enumDescriptions:
            - State is not specified.
            - Resource is active, i.e., ready to use.
            - Resource is under creation.
            - Resource is under deletion.
            - Resource is active but has unresolved actions.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - DELETING
            - ACTION_REQUIRED
      description: Represents an active analyze session running for a user.
    GoogleCloudDataplexV1DataScanExecutionSpec:
      properties:
        trigger:
          description: Optional. Spec related to how often and when a scan should be triggered. If not specified, the default is OnDemand, which means the scan will not run until the user calls RunDataScan API.
          $ref: '#/components/schemas/GoogleCloudDataplexV1Trigger'
        field:
          type: string
          description: Immutable. The unnested field (Date or Timestamp) that contains values that monotonically increase over time.
      type: object
      description: DataScan execution settings.
      id: GoogleCloudDataplexV1DataScanExecutionSpec
    GoogleCloudDataplexV1ListLakesResponse:
      type: object
      id: GoogleCloudDataplexV1ListLakesResponse
      description: List lakes response.
      properties:
        unreachableLocations:
          type: array
          items:
            type: string
          description: Locations that could not be reached.
        nextPageToken:
          type: string
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
        lakes:
          type: array
          description: Lakes under the given parent location.
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Lake'
    GoogleCloudDataplexV1Task:
      description: A task represents a user-visible job.
      type: object
      id: GoogleCloudDataplexV1Task
      properties:
        description:
          type: string
          description: Optional. Description of the task.
        executionStatus:
          readOnly: true
          description: Output only. Status of the latest task executions.
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskExecutionStatus'
        spark:
          description: Config related to running custom Spark tasks.
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskSparkTaskConfig'
        notebook:
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskNotebookTaskConfig'
          description: Config related to running scheduled Notebooks.
        displayName:
          type: string
          description: Optional. User friendly display name.
        executionSpec:
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskExecutionSpec'
          description: Required. Spec related to how a task is executed.
        name:
          description: 'Output only. The relative resource name of the task, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/ tasks/{task_id}.'
          readOnly: true
          type: string
        state:
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - DELETING
            - ACTION_REQUIRED
          type: string
          enumDescriptions:
            - State is not specified.
            - Resource is active, i.e., ready to use.
            - Resource is under creation.
            - Resource is under deletion.
            - Resource is active but has unresolved actions.
          readOnly: true
          description: Output only. Current state of the task.
        updateTime:
          type: string
          format: google-datetime
          description: Output only. The time when the task was last updated.
          readOnly: true
        triggerSpec:
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskTriggerSpec'
          description: Required. Spec related to how often and when a task should be triggered.
        createTime:
          type: string
          format: google-datetime
          description: Output only. The time when the task was created.
          readOnly: true
        labels:
          description: Optional. User-defined labels for the task.
          type: object
          additionalProperties:
            type: string
        uid:
          readOnly: true
          description: Output only. System generated globally unique ID for the task. This ID will be different if the task is deleted and re-created with the same name.
          type: string
    GoogleCloudDataplexV1DataQualityRuleNonNullExpectation:
      description: Evaluates whether each column value is null.
      type: object
      id: GoogleCloudDataplexV1DataQualityRuleNonNullExpectation
      properties: {}
    GoogleCloudDataplexV1TaskNotebookTaskConfig:
      id: GoogleCloudDataplexV1TaskNotebookTaskConfig
      type: object
      properties:
        infrastructureSpec:
          description: Optional. Infrastructure specification for the execution.
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskInfrastructureSpec'
        fileUris:
          type: array
          description: Optional. Cloud Storage URIs of files to be placed in the working directory of each executor.
          items:
            type: string
        archiveUris:
          type: array
          description: 'Optional. Cloud Storage URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.'
          items:
            type: string
        notebook:
          type: string
          description: Required. Path to input notebook. This can be the Cloud Storage URI of the notebook file or the path to a Notebook Content. The execution args are accessible as environment variables (TASK_key=value).
      description: Config for running scheduled notebooks.
    GoogleCloudDataplexV1AssetStatus:
      properties:
        activeAssets:
          format: int32
          type: integer
          description: Number of active assets.
        updateTime:
          format: google-datetime
          description: Last update time of the status.
          type: string
        securityPolicyApplyingAssets:
          format: int32
          description: Number of assets that are in process of updating the security policy on attached resources.
          type: integer
      description: Aggregated status of the underlying assets of a lake or zone.
      type: object
      id: GoogleCloudDataplexV1AssetStatus
    GoogleCloudDataplexV1EnvironmentEndpoints:
      type: object
      properties:
        notebooks:
          readOnly: true
          description: Output only. URI to serve notebook APIs
          type: string
        sql:
          type: string
          description: Output only. URI to serve SQL APIs
          readOnly: true
      id: GoogleCloudDataplexV1EnvironmentEndpoints
    GoogleCloudDataplexV1DataQualityRuleUniquenessExpectation:
      description: Evaluates whether the column has duplicates.
      id: GoogleCloudDataplexV1DataQualityRuleUniquenessExpectation
      type: object
      properties: {}
    GoogleCloudDataplexV1Entity:
      properties:
        updateTime:
          type: string
          description: Output only. The time when the entity was last updated.
          format: google-datetime
          readOnly: true
        displayName:
          description: Optional. Display name must be shorter than or equal to 256 characters.
          type: string
        dataPathPattern:
          type: string
          description: 'Optional. The set of items within the data path constituting the data in the entity, represented as a glob path. Example: gs://bucket/path/to/data/**/*.csv.'
        name:
          readOnly: true
          description: 'Output only. The resource name of the entity, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{id}.'
          type: string
        access:
          $ref: '#/components/schemas/GoogleCloudDataplexV1StorageAccess'
          readOnly: true
          description: Output only. Identifies the access mechanism to the entity. Not user settable.
        catalogEntry:
          type: string
          readOnly: true
          description: Output only. The name of the associated Data Catalog entry.
        system:
          enumDescriptions:
            - Storage system unspecified.
            - The entity data is contained within a Cloud Storage bucket.
            - The entity data is contained within a BigQuery dataset.
          enum:
            - STORAGE_SYSTEM_UNSPECIFIED
            - CLOUD_STORAGE
            - BIGQUERY
          type: string
          description: Required. Immutable. Identifies the storage system of the entity data.
        schema:
          description: Required. The description of the data structure and layout. The schema is not included in list responses. It is only included in SCHEMA and FULL entity views of a GetEntity response.
          $ref: '#/components/schemas/GoogleCloudDataplexV1Schema'
        description:
          description: Optional. User friendly longer description text. Must be shorter than or equal to 1024 characters.
          type: string
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The time when the entity was created.
        id:
          description: Required. A user-provided entity ID. It is mutable, and will be used as the published table name. Specifying a new ID in an update entity request will override the existing value. The ID must contain only letters (a-z, A-Z), numbers (0-9), and underscores. Must begin with a letter and consist of 256 or fewer characters.
          type: string
        compatibility:
          readOnly: true
          description: Output only. Metadata stores that the entity is compatible with.
          $ref: '#/components/schemas/GoogleCloudDataplexV1EntityCompatibilityStatus'
        type:
          enum:
            - TYPE_UNSPECIFIED
            - TABLE
            - FILESET
          description: Required. Immutable. The type of entity.
          type: string
          enumDescriptions:
            - Type unspecified.
            - Structured and semi-structured data.
            - Unstructured data.
        asset:
          type: string
          description: Required. Immutable. The ID of the asset associated with the storage location containing the entity data. The entity must be with in the same zone with the asset.
        etag:
          description: Optional. The etag associated with the entity, which can be retrieved with a GetEntity request. Required for update and delete requests.
          type: string
        dataPath:
          description: Required. Immutable. The storage path of the entity data. For Cloud Storage data, this is the fully-qualified path to the entity, such as gs://bucket/path/to/data. For BigQuery data, this is the name of the table resource, such as projects/project_id/datasets/dataset_id/tables/table_id.
          type: string
        format:
          $ref: '#/components/schemas/GoogleCloudDataplexV1StorageFormat'
          description: Required. Identifies the storage format of the entity data. It does not apply to entities with data stored in BigQuery.
      description: Represents tables and fileset metadata contained within a zone.
      id: GoogleCloudDataplexV1Entity
      type: object
    GoogleCloudDataplexV1CancelJobRequest:
      type: object
      id: GoogleCloudDataplexV1CancelJobRequest
      properties: {}
      description: Cancel task jobs.
    GoogleCloudDataplexV1Asset:
      id: GoogleCloudDataplexV1Asset
      properties:
        displayName:
          type: string
          description: Optional. User friendly display name.
        discoverySpec:
          description: Optional. Specification of the discovery feature applied to data referenced by this asset. When this spec is left unset, the asset will use the spec set on the parent zone.
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetDiscoverySpec'
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time when the asset was created.
        securityStatus:
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetSecurityStatus'
          description: Output only. Status of the security policy applied to resource referenced by this asset.
          readOnly: true
        uid:
          description: Output only. System generated globally unique ID for the asset. This ID will be different if the asset is deleted and re-created with the same name.
          type: string
          readOnly: true
        discoveryStatus:
          readOnly: true
          description: Output only. Status of the discovery feature applied to data referenced by this asset.
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetDiscoveryStatus'
        description:
          type: string
          description: Optional. Description of the asset.
        name:
          type: string
          readOnly: true
          description: 'Output only. The relative resource name of the asset, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/assets/{asset_id}.'
        state:
          type: string
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - DELETING
            - ACTION_REQUIRED
          enumDescriptions:
            - State is not specified.
            - Resource is active, i.e., ready to use.
            - Resource is under creation.
            - Resource is under deletion.
            - Resource is active but has unresolved actions.
          readOnly: true
          description: Output only. Current state of the asset.
        updateTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time when the asset was last updated.
        labels:
          type: object
          description: Optional. User defined labels for the asset.
          additionalProperties:
            type: string
        resourceSpec:
          description: Required. Specification of the resource that is referenced by this asset.
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetResourceSpec'
        resourceStatus:
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetResourceStatus'
          readOnly: true
          description: Output only. Status of the resource referenced by this asset.
      type: object
      description: An asset represents a cloud resource that is being managed within a lake as a member of a zone.
    GoogleCloudDataplexV1ListZonesResponse:
      type: object
      description: List zones response.
      properties:
        zones:
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Zone'
          description: Zones under the given parent lake.
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
      id: GoogleCloudDataplexV1ListZonesResponse
    GoogleCloudDataplexV1DataQualityRuleSetExpectation:
      id: GoogleCloudDataplexV1DataQualityRuleSetExpectation
      properties:
        values:
          type: array
          items:
            type: string
      description: Evaluates whether each column value is contained by a specified set.
      type: object
    GoogleCloudDataplexV1DataScan:
      description: 'Represents a user-visible job which provides the insights for the related data source. For examples: - Data Quality: generates queries based on the rules and run against the data to get data quality check results. - Data Profile: analyzes the data in table(s) and generates insights about the structure, content and relationships (such as null percent, cardinality, min/max/mean, etc).'
      id: GoogleCloudDataplexV1DataScan
      type: object
      properties:
        dataQualitySpec:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualitySpec'
          description: DataQualityScan related setting.
        executionStatus:
          readOnly: true
          description: Output only. Status of the data scan execution.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataScanExecutionStatus'
        dataQualityResult:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityResult'
          description: Output only. The result of the data quality scan.
        state:
          type: string
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - DELETING
            - ACTION_REQUIRED
          description: Output only. Current state of the DataScan.
          enumDescriptions:
            - State is not specified.
            - Resource is active, i.e., ready to use.
            - Resource is under creation.
            - Resource is under deletion.
            - Resource is active but has unresolved actions.
          readOnly: true
        executionSpec:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataScanExecutionSpec'
          description: Optional. DataScan execution settings. If not specified, the fields under it will use their default values.
        description:
          type: string
          description: Optional. Description of the scan. * Must be between 1-1024 characters.
        data:
          description: Required. The data source for DataScan.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataSource'
        dataProfileResult:
          readOnly: true
          description: Output only. The result of the data profile scan.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileResult'
        updateTime:
          format: google-datetime
          description: Output only. The time when the scan was last updated.
          type: string
          readOnly: true
        name:
          description: 'Output only. The relative resource name of the scan, of the form: projects/{project}/locations/{location_id}/dataScans/{datascan_id}. where {project} refers to a project_id or project_number and location_id refers to a GCP region.'
          readOnly: true
          type: string
        labels:
          description: Optional. User-defined labels for the scan.
          additionalProperties:
            type: string
          type: object
        displayName:
          description: Optional. User friendly display name. * Must be between 1-256 characters.
          type: string
        uid:
          description: Output only. System generated globally unique ID for the scan. This ID will be different if the scan is deleted and re-created with the same name.
          type: string
          readOnly: true
        createTime:
          format: google-datetime
          type: string
          description: Output only. The time when the scan was created.
          readOnly: true
        dataProfileSpec:
          description: DataProfileScan related setting.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileSpec'
        type:
          enum:
            - DATA_SCAN_TYPE_UNSPECIFIED
            - DATA_QUALITY
            - DATA_PROFILE
          type: string
          enumDescriptions:
            - The DataScan Type is unspecified.
            - Data Quality Scan.
            - Data Profile Scan.
          readOnly: true
          description: Output only. The type of DataScan.
    GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions:
      properties:
        disableTypeInference:
          description: Optional. Whether to disable the inference of data type for CSV data. If true, all columns will be registered as strings.
          type: boolean
        encoding:
          type: string
          description: Optional. The character encoding of the data. The default is UTF-8.
        delimiter:
          description: Optional. The delimiter being used to separate values. This defaults to ','.
          type: string
        headerRows:
          type: integer
          description: Optional. The number of rows to interpret as header rows that should be skipped when reading data rows.
          format: int32
      type: object
      description: Describe CSV and similar semi-structured data formats.
      id: GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions
    GoogleCloudDataplexV1ListEntitiesResponse:
      id: GoogleCloudDataplexV1ListEntitiesResponse
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Entity'
          description: Entities in the specified parent zone.
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no remaining results in the list.
          type: string
      description: List metadata entities response.
      type: object
    GoogleCloudDataplexV1DataProfileResultProfileField:
      type: object
      description: Represents a column field within a table schema.
      id: GoogleCloudDataplexV1DataProfileResultProfileField
      properties:
        type:
          type: string
          description: 'The field data type. Possible values include: STRING BYTE INT64 INT32 INT16 DOUBLE FLOAT DECIMAL BOOLEAN BINARY TIMESTAMP DATE TIME NULL RECORD'
        name:
          description: The name of the field.
          type: string
        mode:
          description: 'The mode of the field. Its value will be: REQUIRED, if it is a required field. NULLABLE, if it is an optional field. REPEATED, if it is a repeated field.'
          type: string
        profile:
          description: The profile information for the corresponding field.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfo'
    GoogleCloudDataplexV1TaskInfrastructureSpec:
      description: Configuration for the underlying infrastructure used to run workloads.
      id: GoogleCloudDataplexV1TaskInfrastructureSpec
      properties:
        containerImage:
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime'
          description: Container Image Runtime Configuration.
        vpcNetwork:
          description: Vpc network.
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork'
        batch:
          description: Compute resources needed for a Task when using Dataproc Serverless.
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources'
      type: object
    GoogleCloudDataplexV1DataQualityRule:
      type: object
      description: A rule captures data quality intent about a data source.
      id: GoogleCloudDataplexV1DataQualityRule
      properties:
        nonNullExpectation:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityRuleNonNullExpectation'
          description: ColumnMap rule which evaluates whether each column value is null.
        regexExpectation:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityRuleRegexExpectation'
          description: ColumnMap rule which evaluates whether each column value matches a specified regex.
        column:
          type: string
          description: Optional. The unnested column which this rule is evaluated against.
        ignoreNull:
          type: boolean
          description: Optional. Rows with null values will automatically fail a rule, unless ignore_null is true. In that case, such null rows are trivially considered passing. Only applicable to ColumnMap rules.
        statisticRangeExpectation:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation'
          description: ColumnAggregate rule which evaluates whether the column aggregate statistic lies between a specified range.
        rowConditionExpectation:
          description: Table rule which evaluates whether each row passes the specified condition.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation'
        rangeExpectation:
          description: ColumnMap rule which evaluates whether each column value lies between a specified range.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityRuleRangeExpectation'
        setExpectation:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityRuleSetExpectation'
          description: ColumnMap rule which evaluates whether each column value is contained by a specified set.
        uniquenessExpectation:
          description: ColumnAggregate rule which evaluates whether the column has duplicates.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityRuleUniquenessExpectation'
        threshold:
          format: double
          type: number
          description: Optional. The minimum ratio of passing_rows / total_rows required to pass this rule, with a range of 0.0, 1.00 indicates default value (i.e. 1.0)
        dimension:
          description: Required. The dimension a rule belongs to. Results are also aggregated at the dimension-level. Supported dimensions are "COMPLETENESS", "ACCURACY", "CONSISTENCY", "VALIDITY", "UNIQUENESS", "INTEGRITY"
          type: string
        tableConditionExpectation:
          description: Table rule which evaluates whether the provided expression is true.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation'
    GoogleCloudDataplexV1AssetDiscoverySpec:
      description: Settings to manage the metadata discovery and publishing for an asset.
      type: object
      properties:
        csvOptions:
          description: Optional. Configuration for CSV data.
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions'
        enabled:
          description: Optional. Whether discovery is enabled.
          type: boolean
        excludePatterns:
          items:
            type: string
          type: array
          description: Optional. The list of patterns to apply for selecting data to exclude during discovery. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
        jsonOptions:
          description: Optional. Configuration for Json data.
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions'
        includePatterns:
          items:
            type: string
          description: Optional. The list of patterns to apply for selecting data to include during discovery if only a subset of the data should considered. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
          type: array
        schedule:
          description: 'Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running discovery periodically. Successive discovery runs must be scheduled at least 60 minutes apart. The default value is to run discovery every 60 minutes. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, "CRON_TZ=America/New_York 1 * * * *", or "TZ=America/New_York 1 * * * *".'
          type: string
      id: GoogleCloudDataplexV1AssetDiscoverySpec
    GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfo:
      properties:
        nullRatio:
          type: number
          description: The ratio of null rows against the rows in the sampled data.
          format: double
        topNValues:
          type: array
          description: The array of top N values of the field in the sampled data. Currently N is set as 10 or equal to distinct values in the field, whichever is smaller. This will be optional for complex non-groupable data-types such as JSON, ARRAY, JSON, STRUCT.
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValue'
        distinctRatio:
          description: The ratio of rows that are distinct against the rows in the sampled data.
          format: double
          type: number
        stringProfile:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfo'
          description: The corresponding string field profile.
        doubleProfile:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo'
          description: The corresponding double field profile.
        integerProfile:
          description: The corresponding integer field profile.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfo'
      type: object
      id: GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfo
      description: ProfileInfo defines the profile information for each schema field type.
    GoogleCloudDataplexV1AssetDiscoveryStatusStats:
      description: The aggregated data statistics for the asset reported by discovery.
      properties:
        dataItems:
          format: int64
          description: The count of data items within the referenced resource.
          type: string
        tables:
          type: string
          description: The count of table entities within the referenced resource.
          format: int64
        filesets:
          description: The count of fileset entities within the referenced resource.
          type: string
          format: int64
        dataSize:
          format: int64
          description: The number of stored data bytes within the referenced resource.
          type: string
      id: GoogleCloudDataplexV1AssetDiscoveryStatusStats
      type: object
    GoogleCloudDataplexV1TaskTriggerSpec:
      properties:
        schedule:
          type: string
          description: 'Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running tasks periodically. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or "TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, "CRON_TZ=America/New_York 1 * * * *", or "TZ=America/New_York 1 * * * *". This field is required for RECURRING tasks.'
        startTime:
          type: string
          format: google-datetime
          description: Optional. The first run of the task will be after this time. If not specified, the task will run shortly after being submitted if ON_DEMAND and based on the schedule if RECURRING.
        disabled:
          type: boolean
          description: Optional. Prevent the task from executing. This does not cancel already running tasks. It is intended to temporarily disable RECURRING tasks.
        type:
          type: string
          description: Required. Immutable. Trigger type of the user-specified Task.
          enumDescriptions:
            - Unspecified trigger type.
            - The task runs one-time shortly after Task Creation.
            - The task is scheduled to run periodically.
          enum:
            - TYPE_UNSPECIFIED
            - ON_DEMAND
            - RECURRING
        maxRetries:
          description: Optional. Number of retry attempts before aborting. Set to zero to never attempt to retry a failed task.
          type: integer
          format: int32
      type: object
      description: Task scheduling and trigger settings.
      id: GoogleCloudDataplexV1TaskTriggerSpec
    GoogleCloudDataplexV1RunTaskResponse:
      properties:
        job:
          $ref: '#/components/schemas/GoogleCloudDataplexV1Job'
          description: Jobs created by RunTask API.
      type: object
      id: GoogleCloudDataplexV1RunTaskResponse
    GoogleCloudDataplexV1DiscoveryEvent:
      id: GoogleCloudDataplexV1DiscoveryEvent
      description: The payload associated with Discovery data processing.
      type: object
      properties:
        partition:
          description: Details about the partition associated with the event.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DiscoveryEventPartitionDetails'
        action:
          description: Details about the action associated with the event.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DiscoveryEventActionDetails'
        dataLocation:
          description: The data location associated with the event.
          type: string
        lakeId:
          description: The id of the associated lake.
          type: string
        zoneId:
          type: string
          description: The id of the associated zone.
        assetId:
          description: The id of the associated asset.
          type: string
        entity:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DiscoveryEventEntityDetails'
          description: Details about the entity associated with the event.
        message:
          type: string
          description: The log message.
        type:
          type: string
          enumDescriptions:
            - An unspecified event type.
            - An event representing discovery configuration in effect.
            - An event representing a metadata entity being created.
            - An event representing a metadata entity being updated.
            - An event representing a metadata entity being deleted.
            - An event representing a partition being created.
            - An event representing a partition being updated.
            - An event representing a partition being deleted.
          description: The type of the event being logged.
          enum:
            - EVENT_TYPE_UNSPECIFIED
            - CONFIG
            - ENTITY_CREATED
            - ENTITY_UPDATED
            - ENTITY_DELETED
            - PARTITION_CREATED
            - PARTITION_UPDATED
            - PARTITION_DELETED
        config:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DiscoveryEventConfigDetails'
          description: Details about discovery configuration in effect.
    GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources:
      properties:
        executorsCount:
          description: Optional. Total number of job executors. Executor Count should be between 2 and 100. Default=2
          type: integer
          format: int32
        maxExecutorsCount:
          type: integer
          description: Optional. Max configurable executors. If max_executors_count > executors_count, then auto-scaling is enabled. Max Executor Count should be between 2 and 1000. Default=1000
          format: int32
      id: GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources
      description: Batch compute resources associated with the task.
      type: object
    GoogleIamV1Binding:
      id: GoogleIamV1Binding
      type: object
      properties:
        condition:
          description: The condition that is associated with this binding.If the condition evaluates to true, then this binding applies to the current request.If the condition evaluates to false, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).
          $ref: '#/components/schemas/GoogleTypeExpr'
        members:
          type: array
          description: 'Specifies the principals requesting access for a Google Cloud resource. members can have the following values: allUsers: A special identifier that represents anyone who is on the internet; with or without a Google account. allAuthenticatedUsers: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. user:{emailid}: An email address that represents a specific Google account. For example, alice@example.com . serviceAccount:{emailid}: An email address that represents a Google service account. For example, my-other-app@appspot.gserviceaccount.com. serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]: An identifier for a Kubernetes service account (https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, my-project.svc.id.goog[my-namespace/my-kubernetes-sa]. group:{emailid}: An email address that represents a Google group. For example, admins@example.com. deleted:user:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a user that has been recently deleted. For example, alice@example.com?uid=123456789012345678901. If the user is recovered, this value reverts to user:{emailid} and the recovered user retains the role in the binding. deleted:serviceAccount:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901. If the service account is undeleted, this value reverts to serviceAccount:{emailid} and the undeleted service account retains the role in the binding. deleted:group:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, admins@example.com?uid=123456789012345678901. If the group is recovered, this value reverts to group:{emailid} and the recovered group retains the role in the binding. domain:{domain}: The G Suite domain (primary) that represents all the users of that domain. For example, google.com or example.com.'
          items:
            type: string
        role:
          type: string
          description: Role that is assigned to the list of members, or principals. For example, roles/viewer, roles/editor, or roles/owner.
      description: Associates members, or principals, with a role.
    GoogleCloudDataplexV1SessionEventQueryDetail:
      id: GoogleCloudDataplexV1SessionEventQueryDetail
      description: Execution details of the query.
      type: object
      properties:
        queryText:
          description: The query text executed.
          type: string
        resultSizeBytes:
          description: The size of results the query produced.
          type: string
          format: int64
        engine:
          enumDescriptions:
            - An unspecified Engine type.
            - Spark-sql engine is specified in Query.
            - BigQuery engine is specified in Query.
          enum:
            - ENGINE_UNSPECIFIED
            - SPARK_SQL
            - BIGQUERY
          type: string
          description: Query Execution engine.
        dataProcessedBytes:
          description: The data processed by the query.
          type: string
          format: int64
        duration:
          format: google-duration
          type: string
          description: Time taken for execution of the query.
        queryId:
          type: string
          description: The unique Query id identifying the query.
    GoogleCloudDataplexV1Lake:
      properties:
        labels:
          type: object
          description: Optional. User-defined labels for the lake.
          additionalProperties:
            type: string
        state:
          type: string
          enumDescriptions:
            - State is not specified.
            - Resource is active, i.e., ready to use.
            - Resource is under creation.
            - Resource is under deletion.
            - Resource is active but has unresolved actions.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - DELETING
            - ACTION_REQUIRED
          readOnly: true
          description: Output only. Current state of the lake.
        assetStatus:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetStatus'
          description: Output only. Aggregated status of the underlying assets of the lake.
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time when the lake was created.
          type: string
        uid:
          readOnly: true
          type: string
          description: Output only. System generated globally unique ID for the lake. This ID will be different if the lake is deleted and re-created with the same name.
        metastoreStatus:
          readOnly: true
          description: Output only. Metastore status of the lake.
          $ref: '#/components/schemas/GoogleCloudDataplexV1LakeMetastoreStatus'
        updateTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time when the lake was last updated.
          type: string
        metastore:
          description: Optional. Settings to manage lake and Dataproc Metastore service instance association.
          $ref: '#/components/schemas/GoogleCloudDataplexV1LakeMetastore'
        name:
          readOnly: true
          type: string
          description: 'Output only. The relative resource name of the lake, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}.'
        description:
          description: Optional. Description of the lake.
          type: string
        displayName:
          type: string
          description: Optional. User friendly display name.
        serviceAccount:
          description: Output only. Service account associated with this lake. This service account must be authorized to access or operate on resources managed by the lake.
          readOnly: true
          type: string
      type: object
      description: A lake is a centralized repository for managing enterprise data across the organization distributed across many cloud projects, and stored in a variety of storage services such as Google Cloud Storage and BigQuery. The resources attached to a lake are referred to as managed resources. Data within these managed resources can be structured or unstructured. A lake provides data admins with tools to organize, secure and manage their data at scale, and provides data scientists and data engineers an integrated experience to easily search, discover, analyze and transform data and associated metadata.
      id: GoogleCloudDataplexV1Lake
    GoogleCloudDataplexV1DataScanEventDataQualityResult:
      description: Data quality result for data scan job.
      id: GoogleCloudDataplexV1DataScanEventDataQualityResult
      type: object
      properties:
        dimensionPassed:
          additionalProperties:
            type: boolean
          type: object
          description: The result of each dimension for data quality result. The key of the map is the name of the dimension. The value is the bool value depicting whether the dimension result was pass or not.
        passed:
          description: Whether the data quality result was pass or not.
          type: boolean
        rowCount:
          description: The count of rows processed in the data scan job.
          format: int64
          type: string
    GoogleCloudDataplexV1ListDataScansResponse:
      type: object
      id: GoogleCloudDataplexV1ListDataScansResponse
      properties:
        nextPageToken:
          type: string
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
        unreachable:
          items:
            type: string
          type: array
          description: Locations that could not be reached.
        dataScans:
          type: array
          description: DataScans (metadata only) under the given parent location.
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1DataScan'
      description: List dataScans response.
    GoogleCloudDataplexV1DiscoveryEventPartitionDetails:
      type: object
      description: Details about the partition.
      properties:
        type:
          enumDescriptions:
            - An unspecified event type.
            - Entities representing structured data.
            - Entities representing unstructured data.
          enum:
            - ENTITY_TYPE_UNSPECIFIED
            - TABLE
            - FILESET
          description: The type of the containing entity resource.
          type: string
        partition:
          description: The name to the partition resource. The name is the fully-qualified resource name.
          type: string
        entity:
          type: string
          description: The name to the containing entity resource. The name is the fully-qualified resource name.
        sampledDataLocations:
          description: The locations of the data items (e.g., a Cloud Storage objects) sampled for metadata inference.
          type: array
          items:
            type: string
      id: GoogleCloudDataplexV1DiscoveryEventPartitionDetails
    GoogleCloudDataplexV1DataQualitySpec:
      type: object
      properties:
        rules:
          description: The list of rules to evaluate against a data source. At least one rule is required.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityRule'
      description: DataQualityScan related setting.
      id: GoogleCloudDataplexV1DataQualitySpec
    GoogleCloudDataplexV1StorageFormatCsvOptions:
      id: GoogleCloudDataplexV1StorageFormatCsvOptions
      description: Describes CSV and similar semi-structured data formats.
      type: object
      properties:
        quote:
          type: string
          description: Optional. The character used to quote column values. Accepts '"' (double quotation mark) or ''' (single quotation mark). Defaults to '"' (double quotation mark) if unspecified.
        delimiter:
          type: string
          description: Optional. The delimiter used to separate values. Defaults to ','.
        headerRows:
          type: integer
          description: Optional. The number of rows to interpret as header rows that should be skipped when reading data rows. Defaults to 0.
          format: int32
        encoding:
          description: Optional. The character encoding of the data. Accepts "US-ASCII", "UTF-8", and "ISO-8859-1". Defaults to UTF-8 if unspecified.
          type: string
    GoogleCloudDataplexV1DataScanJob:
      id: GoogleCloudDataplexV1DataScanJob
      description: A DataScanJob represents an instance of a data scan.
      properties:
        type:
          type: string
          readOnly: true
          enumDescriptions:
            - The DataScan Type is unspecified.
            - Data Quality Scan.
            - Data Profile Scan.
          enum:
            - DATA_SCAN_TYPE_UNSPECIFIED
            - DATA_QUALITY
            - DATA_PROFILE
          description: Output only. The type of the parent DataScan.
        startTime:
          type: string
          description: Output only. The time when the DataScanJob was started.
          format: google-datetime
          readOnly: true
        dataQualityResult:
          readOnly: true
          description: Output only. The result of the data quality scan.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityResult'
        dataQualitySpec:
          readOnly: true
          description: Output only. DataQualityScan related setting.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualitySpec'
        name:
          description: 'Output only. The relative resource name of the DataScanJob, of the form: projects/{project}/locations/{location_id}/dataScans/{datascan_id}/jobs/{job_id}. where {project} refers to a project_id or project_number and location_id refers to a GCP region.'
          type: string
          readOnly: true
        dataProfileSpec:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileSpec'
          description: Output only. DataProfileScan related setting.
          readOnly: true
        message:
          type: string
          description: Output only. Additional information about the current state.
          readOnly: true
        endTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time when the DataScanJob ended.
        state:
          readOnly: true
          description: Output only. Execution state for the DataScanJob.
          enumDescriptions:
            - The DataScanJob state is unspecified.
            - The DataScanJob is running.
            - The DataScanJob is canceling.
            - The DataScanJob cancellation was successful.
            - The DataScanJob completed successfully.
            - The DataScanJob is no longer running due to an error.
            - The DataScanJob has been created but not started to run yet.
          enum:
            - STATE_UNSPECIFIED
            - RUNNING
            - CANCELING
            - CANCELLED
            - SUCCEEDED
            - FAILED
            - PENDING
          type: string
        dataProfileResult:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileResult'
          description: Output only. The result of the data profile scan.
        uid:
          description: Output only. System generated globally unique ID for the DataScanJob.
          type: string
          readOnly: true
      type: object
    GoogleIamV1Policy:
      description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources.A Policy is a collection of bindings. A binding binds one or more members, or principals, to a single role. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A role is a named list of permissions; each role can be an IAM predefined role or a user-created custom role.For some types of Google Cloud resources, a binding can also specify a condition, which is a logical expression that allows access to a resource only if the expression evaluates to true. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).JSON example: { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp(''2020-10-01T00:00:00.000Z'')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } YAML example: bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the IAM documentation (https://cloud.google.com/iam/docs/).'
      properties:
        etag:
          type: string
          description: 'etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the etag in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An etag is returned in the response to getIamPolicy, and systems are expected to put that etag in the request to setIamPolicy to ensure that their change will be applied to the same version of the policy.Important: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy. If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost.'
          format: byte
        version:
          type: integer
          format: int32
          description: 'Specifies the format of the policy.Valid values are 0, 1, and 3. Requests that specify an invalid value are rejected.Any operation that affects conditional role bindings must specify version 3. This requirement applies to the following operations: Getting a policy that includes a conditional role binding Adding a conditional role binding to a policy Changing a conditional role binding in a policy Removing any role binding, with or without a condition, from a policy that includes conditionsImportant: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy. If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost.If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).'
        auditConfigs:
          items:
            $ref: '#/components/schemas/GoogleIamV1AuditConfig'
          type: array
          description: Specifies cloud audit logging configuration for this policy.
        bindings:
          items:
            $ref: '#/components/schemas/GoogleIamV1Binding'
          type: array
          description: Associates a list of members, or principals, with a role. Optionally, may specify a condition that determines how and when the bindings are applied. Each of the bindings must contain at least one principal.The bindings in a Policy can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the bindings grant 50 different roles to user:alice@example.com, and not to any other principal, then you can add another 1,450 principals to the bindings in the Policy.
      type: object
      id: GoogleIamV1Policy
    GoogleTypeExpr:
      properties:
        description:
          description: Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
          type: string
        location:
          type: string
          description: Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
        expression:
          type: string
          description: Textual representation of an expression in Common Expression Language syntax.
        title:
          description: Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
          type: string
      id: GoogleTypeExpr
      description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec.Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != ''private'' && document.type != ''internal''" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "''New message received at '' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.'
      type: object
    GoogleIamV1TestIamPermissionsResponse:
      properties:
        permissions:
          type: array
          items:
            type: string
          description: A subset of TestPermissionsRequest.permissions that the caller is allowed.
      id: GoogleIamV1TestIamPermissionsResponse
      description: Response message for TestIamPermissions method.
      type: object
    GoogleCloudDataplexV1Job:
      properties:
        startTime:
          type: string
          format: google-datetime
          description: Output only. The time when the job was started.
          readOnly: true
        service:
          type: string
          description: Output only. The underlying service running a job.
          enumDescriptions:
            - Service used to run the job is unspecified.
            - Dataproc service is used to run this job.
          readOnly: true
          enum:
            - SERVICE_UNSPECIFIED
            - DATAPROC
        serviceJob:
          type: string
          description: Output only. The full resource name for the job run under a particular service.
          readOnly: true
        state:
          type: string
          enumDescriptions:
            - The job state is unknown.
            - The job is running.
            - The job is cancelling.
            - The job cancellation was successful.
            - The job completed successfully.
            - The job is no longer running due to an error.
            - The job was cancelled outside of Dataplex.
          readOnly: true
          description: Output only. Execution state for the job.
          enum:
            - STATE_UNSPECIFIED
            - RUNNING
            - CANCELLING
            - CANCELLED
            - SUCCEEDED
            - FAILED
            - ABORTED
        uid:
          type: string
          readOnly: true
          description: Output only. System generated globally unique ID for the job.
        endTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time when the job ended.
        message:
          type: string
          readOnly: true
          description: Output only. Additional information about the current state.
        name:
          type: string
          readOnly: true
          description: 'Output only. The relative resource name of the job, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/tasks/{task_id}/jobs/{job_id}.'
        retryCount:
          type: integer
          readOnly: true
          description: Output only. The number of times the job has been retried (excluding the initial attempt).
          format: uint32
      id: GoogleCloudDataplexV1Job
      type: object
      description: A job represents an instance of a task.
    GoogleCloudDataplexV1TriggerOnDemand:
      description: The scan runs one-time via RunDataScan API.
      properties: {}
      type: object
      id: GoogleCloudDataplexV1TriggerOnDemand
    GoogleCloudDataplexV1EnvironmentSessionSpec:
      id: GoogleCloudDataplexV1EnvironmentSessionSpec
      type: object
      properties:
        enableFastStartup:
          type: boolean
          description: Optional. If True, this causes sessions to be pre-created and available for faster startup to enable interactive exploration use-cases. This defaults to False to avoid additional billed charges. These can only be set to True for the environment with name set to "default", and with default configuration.
        maxIdleDuration:
          description: Optional. The idle time configuration of the session. The session will be auto-terminated at the end of this period.
          format: google-duration
          type: string
    GoogleCloudDataplexV1DataQualityRuleRangeExpectation:
      description: Evaluates whether each column value lies between a specified range.
      properties:
        minValue:
          type: string
          description: Optional. The minimum column value allowed for a row to pass this validation. At least one of min_value and max_value need to be provided.
        strictMinEnabled:
          type: boolean
          description: Optional. Whether each value needs to be strictly greater than ('>') the minimum, or if equality is allowed. Only relevant if a min_value has been defined. Default = false.
        strictMaxEnabled:
          type: boolean
          description: Optional. Whether each value needs to be strictly lesser than ('<') the maximum, or if equality is allowed. Only relevant if a max_value has been defined. Default = false.
        maxValue:
          type: string
          description: Optional. The maximum column value allowed for a row to pass this validation. At least one of min_value and max_value need to be provided.
      id: GoogleCloudDataplexV1DataQualityRuleRangeExpectation
      type: object
    GoogleIamV1AuditLogConfig:
      properties:
        exemptedMembers:
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
          items:
            type: string
          type: array
        logType:
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          type: string
          description: The log type that this config enables.
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
      id: GoogleIamV1AuditLogConfig
      description: 'Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables ''DATA_READ'' and ''DATA_WRITE'' logging, while exempting jose@example.com from DATA_READ logging.'
      type: object
    GoogleCloudDataplexV1EnvironmentInfrastructureSpec:
      properties:
        compute:
          $ref: '#/components/schemas/GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources'
          description: Optional. Compute resources needed for analyze interactive workloads.
        osImage:
          $ref: '#/components/schemas/GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime'
          description: Required. Software Runtime Configuration for analyze interactive workloads.
      type: object
      description: Configuration for the underlying infrastructure used to run workloads.
      id: GoogleCloudDataplexV1EnvironmentInfrastructureSpec
    GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo:
      type: object
      properties:
        quartiles:
          items:
            format: double
            type: number
          description: 'A quartile divide the numebr of data points into four parts, or quarters, of more-or-less equal size. Three main quartiles used are: The first quartile (Q1) splits off the lowest 25% of data from the highest 75%. It is also known as the lower or 25th empirical quartile, as 25% of the data is below this point. The second quartile (Q2) is the median of a data set. So, 50% of the data lies below this point. The third quartile (Q3) splits off the highest 25% of data from the lowest 75%. It is known as the upper or 75th empirical quartile, as 75% of the data lies below this point. So, here the quartiles is provided as an ordered list of quartile values, occurring in order Q1, median, Q3.'
          type: array
        min:
          format: double
          type: number
          description: The minimum value of a double field in the sampled data. Return NaN, if the field has a NaN. Optional if zero non-null rows.
        max:
          type: number
          description: The maximum value of a double field in the sampled data. Return NaN, if the field has a NaN. Optional if zero non-null rows.
          format: double
        average:
          format: double
          description: The average of non-null values of double field in the sampled data. Return NaN, if the field has a NaN. Optional if zero non-null rows.
          type: number
        standardDeviation:
          description: The standard deviation of non-null of double field in the sampled data. Return NaN, if the field has a NaN. Optional if zero non-null rows.
          type: number
          format: double
      description: DoubleFieldInfo defines output for any double type field.
      id: GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo
    GoogleCloudDataplexV1StorageFormatIcebergOptions:
      type: object
      properties:
        metadataLocation:
          description: Optional. The location of where the iceberg metadata is present, must be within the table path
          type: string
      description: Describes Iceberg data format.
      id: GoogleCloudDataplexV1StorageFormatIcebergOptions
    GoogleCloudDataplexV1ScannedDataIncrementalField:
      description: A data range denoted by a pair of start/end values of a field.
      properties:
        end:
          type: string
          description: Value that marks the end of the range
        field:
          type: string
          description: The field that contains values which monotonically increases over time (e.g. timestamp).
        start:
          description: Value that marks the start of the range
          type: string
      id: GoogleCloudDataplexV1ScannedDataIncrementalField
      type: object
    GoogleCloudDataplexV1Partition:
      properties:
        name:
          readOnly: true
          type: string
          description: Output only. Partition values used in the HTTP URL must be double encoded. For example, url_encode(url_encode(value)) can be used to encode "US:CA/CA#Sunnyvale so that the request URL ends with "/partitions/US%253ACA/CA%2523Sunnyvale". The name field in the response retains the encoded format.
        location:
          description: Required. Immutable. The location of the entity data within the partition, for example, gs://bucket/path/to/entity/key1=value1/key2=value2. Or projects//datasets//tables/
          type: string
        etag:
          type: string
          description: Optional. The etag for this partition.
        values:
          items:
            type: string
          type: array
          description: Required. Immutable. The set of values representing the partition, which correspond to the partition schema defined in the parent entity.
      description: Represents partition metadata contained within entity instances.
      id: GoogleCloudDataplexV1Partition
      type: object
    GoogleCloudDataplexV1DataScanEventDataProfileResult:
      properties:
        rowCount:
          description: The count of rows processed in the data scan job.
          format: int64
          type: string
      id: GoogleCloudDataplexV1DataScanEventDataProfileResult
      description: Data profile result for data scan job.
      type: object
    GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources:
      description: Compute resources associated with the analyze interactive workloads.
      id: GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources
      type: object
      properties:
        maxNodeCount:
          type: integer
          description: Optional. Max configurable nodes. If max_node_count > node_count, then auto-scaling is enabled.
          format: int32
        diskSizeGb:
          description: Optional. Size in GB of the disk. Default is 100 GB.
          type: integer
          format: int32
        nodeCount:
          type: integer
          description: Optional. Total number of nodes in the sessions created for this environment.
          format: int32
    GoogleCloudDataplexV1DataProfileResultProfile:
      description: Profile information describing the structure and layout of the data and contains the profile info.
      type: object
      properties:
        fields:
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileResultProfileField'
          type: array
          description: The sequence of fields describing data in table entities.
      id: GoogleCloudDataplexV1DataProfileResultProfile
    GoogleCloudDataplexV1TaskExecutionStatus:
      description: Status of the task execution (e.g. Jobs).
      properties:
        updateTime:
          readOnly: true
          format: google-datetime
          description: Output only. Last update time of the status.
          type: string
        latestJob:
          $ref: '#/components/schemas/GoogleCloudDataplexV1Job'
          readOnly: true
          description: Output only. latest job execution
      type: object
      id: GoogleCloudDataplexV1TaskExecutionStatus
    GoogleCloudDataplexV1ListSessionsResponse:
      properties:
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
        sessions:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Session'
          description: Sessions under a given environment.
      description: List sessions response.
      type: object
      id: GoogleCloudDataplexV1ListSessionsResponse
  parameters:
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    locations:
      id: google.dataplex.locations
      name: locations
      title: Locations
      methods:
        projects_locations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_list'
        insert: []
        update: []
        delete: []
    operations:
      id: google.dataplex.operations
      name: operations
      title: Operations
      methods:
        projects_locations_operations_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_delete'
    data_attribute_bindings_iam_policies:
      id: google.dataplex.data_attribute_bindings_iam_policies
      name: data_attribute_bindings_iam_policies
      title: Data_attribute_bindings_iam_policies
      methods:
        projects_locations_dataAttributeBindings_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataAttributeBindings~1{dataAttributeBindingsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_dataAttributeBindings_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataAttributeBindings~1{dataAttributeBindingsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_dataAttributeBindings_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataAttributeBindings~1{dataAttributeBindingsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_attribute_bindings_iam_policies/methods/projects_locations_dataAttributeBindings_getIamPolicy'
        insert: []
        update: []
        delete: []
    data_taxonomies_iam_policies:
      id: google.dataplex.data_taxonomies_iam_policies
      name: data_taxonomies_iam_policies
      title: Data_taxonomies_iam_policies
      methods:
        projects_locations_dataTaxonomies_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_dataTaxonomies_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_dataTaxonomies_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_taxonomies_iam_policies/methods/projects_locations_dataTaxonomies_getIamPolicy'
        insert: []
        update: []
        delete: []
    attributes_iam_policies:
      id: google.dataplex.attributes_iam_policies
      name: attributes_iam_policies
      title: Attributes_iam_policies
      methods:
        projects_locations_dataTaxonomies_attributes_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}~1attributes~1{attributesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_dataTaxonomies_attributes_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}~1attributes~1{attributesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_dataTaxonomies_attributes_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}~1attributes~1{attributesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/attributes_iam_policies/methods/projects_locations_dataTaxonomies_attributes_getIamPolicy'
        insert: []
        update: []
        delete: []
    lakes:
      id: google.dataplex.lakes
      name: lakes
      title: Lakes
      methods:
        projects_locations_lakes_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lakes/methods/projects_locations_lakes_get'
          - $ref: '#/components/x-stackQL-resources/lakes/methods/projects_locations_lakes_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/lakes/methods/projects_locations_lakes_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/lakes/methods/projects_locations_lakes_delete'
    lakes_iam_policies:
      id: google.dataplex.lakes_iam_policies
      name: lakes_iam_policies
      title: Lakes_iam_policies
      methods:
        projects_locations_lakes_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lakes_iam_policies/methods/projects_locations_lakes_getIamPolicy'
        insert: []
        update: []
        delete: []
    actions:
      id: google.dataplex.actions
      name: actions
      title: Actions
      methods:
        projects_locations_lakes_actions_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1actions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_assets_actions_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets~1{assetsId}~1actions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_actions_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1actions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/actions/methods/projects_locations_lakes_zones_assets_actions_list'
          - $ref: '#/components/x-stackQL-resources/actions/methods/projects_locations_lakes_zones_actions_list'
          - $ref: '#/components/x-stackQL-resources/actions/methods/projects_locations_lakes_actions_list'
        insert: []
        update: []
        delete: []
    zones_iam_policies:
      id: google.dataplex.zones_iam_policies
      name: zones_iam_policies
      title: Zones_iam_policies
      methods:
        projects_locations_lakes_zones_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_iam_policies/methods/projects_locations_lakes_zones_getIamPolicy'
        insert: []
        update: []
        delete: []
    zones:
      id: google.dataplex.zones
      name: zones
      title: Zones
      methods:
        projects_locations_lakes_zones_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones/methods/projects_locations_lakes_zones_get'
          - $ref: '#/components/x-stackQL-resources/zones/methods/projects_locations_lakes_zones_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/zones/methods/projects_locations_lakes_zones_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/zones/methods/projects_locations_lakes_zones_delete'
    assets:
      id: google.dataplex.assets
      name: assets
      title: Assets
      methods:
        projects_locations_lakes_zones_assets_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets~1{assetsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_assets_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets~1{assetsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_assets_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets~1{assetsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_assets_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_assets_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/assets/methods/projects_locations_lakes_zones_assets_get'
          - $ref: '#/components/x-stackQL-resources/assets/methods/projects_locations_lakes_zones_assets_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/assets/methods/projects_locations_lakes_zones_assets_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/assets/methods/projects_locations_lakes_zones_assets_delete'
    assets_iam_policies:
      id: google.dataplex.assets_iam_policies
      name: assets_iam_policies
      title: Assets_iam_policies
      methods:
        projects_locations_lakes_zones_assets_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets~1{assetsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_assets_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets~1{assetsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_assets_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets~1{assetsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/assets_iam_policies/methods/projects_locations_lakes_zones_assets_getIamPolicy'
        insert: []
        update: []
        delete: []
    entities:
      id: google.dataplex.entities
      name: entities
      title: Entities
      methods:
        projects_locations_lakes_zones_entities_update:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1entities~1{entitiesId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_entities_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1entities~1{entitiesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_entities_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1entities~1{entitiesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_entities_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1entities/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_entities_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1entities/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/entities/methods/projects_locations_lakes_zones_entities_get'
          - $ref: '#/components/x-stackQL-resources/entities/methods/projects_locations_lakes_zones_entities_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/entities/methods/projects_locations_lakes_zones_entities_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/entities/methods/projects_locations_lakes_zones_entities_delete'
    partitions:
      id: google.dataplex.partitions
      name: partitions
      title: Partitions
      methods:
        projects_locations_lakes_zones_entities_partitions_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1entities~1{entitiesId}~1partitions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_entities_partitions_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1entities~1{entitiesId}~1partitions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_entities_partitions_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1entities~1{entitiesId}~1partitions~1{partitionsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_entities_partitions_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1entities~1{entitiesId}~1partitions~1{partitionsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/partitions/methods/projects_locations_lakes_zones_entities_partitions_get'
          - $ref: '#/components/x-stackQL-resources/partitions/methods/projects_locations_lakes_zones_entities_partitions_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/partitions/methods/projects_locations_lakes_zones_entities_partitions_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/partitions/methods/projects_locations_lakes_zones_entities_partitions_delete'
    sessions:
      id: google.dataplex.sessions
      name: sessions
      title: Sessions
      methods:
        projects_locations_lakes_environments_sessions_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments~1{environmentsId}~1sessions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sessions/methods/projects_locations_lakes_environments_sessions_list'
        insert: []
        update: []
        delete: []
    environments:
      id: google.dataplex.environments
      name: environments
      title: Environments
      methods:
        projects_locations_lakes_environments_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments~1{environmentsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_environments_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments~1{environmentsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_environments_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments~1{environmentsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_environments_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_environments_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/environments/methods/projects_locations_lakes_environments_get'
          - $ref: '#/components/x-stackQL-resources/environments/methods/projects_locations_lakes_environments_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/environments/methods/projects_locations_lakes_environments_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/environments/methods/projects_locations_lakes_environments_delete'
    environments_iam_policies:
      id: google.dataplex.environments_iam_policies
      name: environments_iam_policies
      title: Environments_iam_policies
      methods:
        projects_locations_lakes_environments_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments~1{environmentsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_environments_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments~1{environmentsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_environments_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments~1{environmentsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/environments_iam_policies/methods/projects_locations_lakes_environments_getIamPolicy'
        insert: []
        update: []
        delete: []
    tasks_iam_policies:
      id: google.dataplex.tasks_iam_policies
      name: tasks_iam_policies
      title: Tasks_iam_policies
      methods:
        projects_locations_lakes_tasks_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_tasks_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_tasks_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tasks_iam_policies/methods/projects_locations_lakes_tasks_getIamPolicy'
        insert: []
        update: []
        delete: []
    tasks:
      id: google.dataplex.tasks
      name: tasks
      title: Tasks
      methods:
        projects_locations_lakes_tasks_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_tasks_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_tasks_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_tasks_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_tasks_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_tasks_run:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}:run/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tasks/methods/projects_locations_lakes_tasks_get'
          - $ref: '#/components/x-stackQL-resources/tasks/methods/projects_locations_lakes_tasks_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/tasks/methods/projects_locations_lakes_tasks_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/tasks/methods/projects_locations_lakes_tasks_delete'
    jobs:
      id: google.dataplex.jobs
      name: jobs
      title: Jobs
      methods:
        projects_locations_lakes_tasks_jobs_cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}~1jobs~1{jobsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_tasks_jobs_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}~1jobs~1{jobsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_tasks_jobs_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}~1jobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_dataScans_jobs_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}~1jobs~1{jobsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_dataScans_jobs_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}~1jobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/projects_locations_lakes_tasks_jobs_get'
          - $ref: '#/components/x-stackQL-resources/jobs/methods/projects_locations_lakes_tasks_jobs_list'
          - $ref: '#/components/x-stackQL-resources/jobs/methods/projects_locations_dataScans_jobs_get'
          - $ref: '#/components/x-stackQL-resources/jobs/methods/projects_locations_dataScans_jobs_list'
        insert: []
        update: []
        delete: []
    contentitems:
      id: google.dataplex.contentitems
      name: contentitems
      title: Contentitems
      methods:
        projects_locations_lakes_contentitems_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1contentitems~1{contentitemsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_contentitems_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1contentitems~1{contentitemsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_contentitems_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1contentitems~1{contentitemsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_contentitems_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1contentitems/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_contentitems_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1contentitems/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/contentitems/methods/projects_locations_lakes_contentitems_get'
          - $ref: '#/components/x-stackQL-resources/contentitems/methods/projects_locations_lakes_contentitems_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/contentitems/methods/projects_locations_lakes_contentitems_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/contentitems/methods/projects_locations_lakes_contentitems_delete'
    contentitems_iam_policies:
      id: google.dataplex.contentitems_iam_policies
      name: contentitems_iam_policies
      title: Contentitems_iam_policies
      methods:
        projects_locations_lakes_contentitems_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1contentitems~1{contentitemsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_contentitems_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1contentitems~1{contentitemsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_contentitems_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1contentitems~1{contentitemsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/contentitems_iam_policies/methods/projects_locations_lakes_contentitems_getIamPolicy'
        insert: []
        update: []
        delete: []
    content:
      id: google.dataplex.content
      name: content
      title: Content
      methods:
        projects_locations_lakes_content_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1content~1{contentId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_content_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1content~1{contentId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_content_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1content~1{contentId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_content_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1content/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_content_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1content/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/content/methods/projects_locations_lakes_content_get'
          - $ref: '#/components/x-stackQL-resources/content/methods/projects_locations_lakes_content_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/content/methods/projects_locations_lakes_content_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/content/methods/projects_locations_lakes_content_delete'
    content_iam_policies:
      id: google.dataplex.content_iam_policies
      name: content_iam_policies
      title: Content_iam_policies
      methods:
        projects_locations_lakes_content_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1content~1{contentId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_content_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1content~1{contentId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_content_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1content~1{contentId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/content_iam_policies/methods/projects_locations_lakes_content_getIamPolicy'
        insert: []
        update: []
        delete: []
    data_scans_iam_policies:
      id: google.dataplex.data_scans_iam_policies
      name: data_scans_iam_policies
      title: Data_scans_iam_policies
      methods:
        projects_locations_dataScans_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_dataScans_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_dataScans_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_scans_iam_policies/methods/projects_locations_dataScans_getIamPolicy'
        insert: []
        update: []
        delete: []
    data_scans:
      id: google.dataplex.data_scans
      name: data_scans
      title: Data_scans
      methods:
        projects_locations_dataScans_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_dataScans_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_dataScans_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_dataScans_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_dataScans_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_dataScans_run:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}:run/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_scans/methods/projects_locations_dataScans_get'
          - $ref: '#/components/x-stackQL-resources/data_scans/methods/projects_locations_dataScans_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/data_scans/methods/projects_locations_dataScans_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/data_scans/methods/projects_locations_dataScans_delete'
    data_attribute_bindings_iam_bindings:
      id: google.dataplex.data_attribute_bindings_iam_bindings
      name: data_attribute_bindings_iam_bindings
      title: data_attribute_bindings_iam_bindings
      methods:
        projects_locations_dataAttributeBindings_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataAttributeBindings~1{dataAttributeBindingsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/data_attribute_bindings_iam_bindings/methods/projects_locations_dataAttributeBindings_getIamPolicy'
    data_attribute_bindings_iam_audit_configs:
      id: google.dataplex.data_attribute_bindings_iam_audit_configs
      name: data_attribute_bindings_iam_audit_configs
      title: data_attribute_bindings_iam_audit_configs
      methods:
        projects_locations_dataAttributeBindings_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataAttributeBindings~1{dataAttributeBindingsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: auditConfigs
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/data_attribute_bindings_iam_audit_configs/methods/projects_locations_dataAttributeBindings_getIamPolicy'
    data_taxonomies_iam_bindings:
      id: google.dataplex.data_taxonomies_iam_bindings
      name: data_taxonomies_iam_bindings
      title: data_taxonomies_iam_bindings
      methods:
        projects_locations_dataTaxonomies_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/data_taxonomies_iam_bindings/methods/projects_locations_dataTaxonomies_getIamPolicy'
    data_taxonomies_iam_audit_configs:
      id: google.dataplex.data_taxonomies_iam_audit_configs
      name: data_taxonomies_iam_audit_configs
      title: data_taxonomies_iam_audit_configs
      methods:
        projects_locations_dataTaxonomies_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: auditConfigs
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/data_taxonomies_iam_audit_configs/methods/projects_locations_dataTaxonomies_getIamPolicy'
    attributes_iam_bindings:
      id: google.dataplex.attributes_iam_bindings
      name: attributes_iam_bindings
      title: attributes_iam_bindings
      methods:
        projects_locations_dataTaxonomies_attributes_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}~1attributes~1{attributesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/attributes_iam_bindings/methods/projects_locations_dataTaxonomies_attributes_getIamPolicy'
    attributes_iam_audit_configs:
      id: google.dataplex.attributes_iam_audit_configs
      name: attributes_iam_audit_configs
      title: attributes_iam_audit_configs
      methods:
        projects_locations_dataTaxonomies_attributes_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}~1attributes~1{attributesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: auditConfigs
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/attributes_iam_audit_configs/methods/projects_locations_dataTaxonomies_attributes_getIamPolicy'
    lakes_iam_bindings:
      id: google.dataplex.lakes_iam_bindings
      name: lakes_iam_bindings
      title: lakes_iam_bindings
      methods:
        projects_locations_lakes_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/lakes_iam_bindings/methods/projects_locations_lakes_getIamPolicy'
    lakes_iam_audit_configs:
      id: google.dataplex.lakes_iam_audit_configs
      name: lakes_iam_audit_configs
      title: lakes_iam_audit_configs
      methods:
        projects_locations_lakes_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: auditConfigs
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/lakes_iam_audit_configs/methods/projects_locations_lakes_getIamPolicy'
    zones_iam_bindings:
      id: google.dataplex.zones_iam_bindings
      name: zones_iam_bindings
      title: zones_iam_bindings
      methods:
        projects_locations_lakes_zones_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/zones_iam_bindings/methods/projects_locations_lakes_zones_getIamPolicy'
    zones_iam_audit_configs:
      id: google.dataplex.zones_iam_audit_configs
      name: zones_iam_audit_configs
      title: zones_iam_audit_configs
      methods:
        projects_locations_lakes_zones_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: auditConfigs
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/zones_iam_audit_configs/methods/projects_locations_lakes_zones_getIamPolicy'
    assets_iam_bindings:
      id: google.dataplex.assets_iam_bindings
      name: assets_iam_bindings
      title: assets_iam_bindings
      methods:
        projects_locations_lakes_zones_assets_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets~1{assetsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/assets_iam_bindings/methods/projects_locations_lakes_zones_assets_getIamPolicy'
    assets_iam_audit_configs:
      id: google.dataplex.assets_iam_audit_configs
      name: assets_iam_audit_configs
      title: assets_iam_audit_configs
      methods:
        projects_locations_lakes_zones_assets_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets~1{assetsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: auditConfigs
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/assets_iam_audit_configs/methods/projects_locations_lakes_zones_assets_getIamPolicy'
    environments_iam_bindings:
      id: google.dataplex.environments_iam_bindings
      name: environments_iam_bindings
      title: environments_iam_bindings
      methods:
        projects_locations_lakes_environments_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments~1{environmentsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/environments_iam_bindings/methods/projects_locations_lakes_environments_getIamPolicy'
    environments_iam_audit_configs:
      id: google.dataplex.environments_iam_audit_configs
      name: environments_iam_audit_configs
      title: environments_iam_audit_configs
      methods:
        projects_locations_lakes_environments_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments~1{environmentsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: auditConfigs
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/environments_iam_audit_configs/methods/projects_locations_lakes_environments_getIamPolicy'
    tasks_iam_bindings:
      id: google.dataplex.tasks_iam_bindings
      name: tasks_iam_bindings
      title: tasks_iam_bindings
      methods:
        projects_locations_lakes_tasks_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/tasks_iam_bindings/methods/projects_locations_lakes_tasks_getIamPolicy'
    tasks_iam_audit_configs:
      id: google.dataplex.tasks_iam_audit_configs
      name: tasks_iam_audit_configs
      title: tasks_iam_audit_configs
      methods:
        projects_locations_lakes_tasks_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: auditConfigs
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/tasks_iam_audit_configs/methods/projects_locations_lakes_tasks_getIamPolicy'
    contentitems_iam_bindings:
      id: google.dataplex.contentitems_iam_bindings
      name: contentitems_iam_bindings
      title: contentitems_iam_bindings
      methods:
        projects_locations_lakes_contentitems_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1contentitems~1{contentitemsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/contentitems_iam_bindings/methods/projects_locations_lakes_contentitems_getIamPolicy'
    contentitems_iam_audit_configs:
      id: google.dataplex.contentitems_iam_audit_configs
      name: contentitems_iam_audit_configs
      title: contentitems_iam_audit_configs
      methods:
        projects_locations_lakes_contentitems_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1contentitems~1{contentitemsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: auditConfigs
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/contentitems_iam_audit_configs/methods/projects_locations_lakes_contentitems_getIamPolicy'
    content_iam_bindings:
      id: google.dataplex.content_iam_bindings
      name: content_iam_bindings
      title: content_iam_bindings
      methods:
        projects_locations_lakes_content_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1content~1{contentId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/content_iam_bindings/methods/projects_locations_lakes_content_getIamPolicy'
    content_iam_audit_configs:
      id: google.dataplex.content_iam_audit_configs
      name: content_iam_audit_configs
      title: content_iam_audit_configs
      methods:
        projects_locations_lakes_content_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1content~1{contentId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: auditConfigs
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/content_iam_audit_configs/methods/projects_locations_lakes_content_getIamPolicy'
    data_scans_iam_bindings:
      id: google.dataplex.data_scans_iam_bindings
      name: data_scans_iam_bindings
      title: data_scans_iam_bindings
      methods:
        projects_locations_dataScans_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/data_scans_iam_bindings/methods/projects_locations_dataScans_getIamPolicy'
    data_scans_iam_audit_configs:
      id: google.dataplex.data_scans_iam_audit_configs
      name: data_scans_iam_audit_configs
      title: data_scans_iam_audit_configs
      methods:
        projects_locations_dataScans_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: auditConfigs
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/data_scans_iam_audit_configs/methods/projects_locations_dataScans_getIamPolicy'
paths:
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/access_token'
    get:
      description: Gets information about a location.
      operationId: dataplex.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudLocationLocation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations:
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: dataplex.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudLocationListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    delete:
      description: Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns google.rpc.Code.UNIMPLEMENTED.
      operationId: dataplex.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: dataplex.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns UNIMPLEMENTED.NOTE: the name binding allows API services to override the binding to use different resource name schemes, such as users/*/operations. To override the binding, API services can add a binding such as "/v1/{name=users/*}/operations" to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.'
      operationId: dataplex.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to Code.CANCELLED.
      operationId: dataplex.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleLongrunningCancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/dataAttributeBindings/{dataAttributeBindingsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
      operationId: dataplex.projects.locations.dataAttributeBindings.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataAttributeBindingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_attribute_bindings_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/dataAttributeBindings/{dataAttributeBindingsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataplex.projects.locations.dataAttributeBindings.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataAttributeBindingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_attribute_bindings_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/dataAttributeBindings/{dataAttributeBindingsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.dataAttributeBindings.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataAttributeBindingsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: data_attribute_bindings_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
      operationId: dataplex.projects.locations.dataTaxonomies.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_taxonomies_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataplex.projects.locations.dataTaxonomies.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_taxonomies_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.dataTaxonomies.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: data_taxonomies_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}/attributes/{attributesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
      operationId: dataplex.projects.locations.dataTaxonomies.attributes.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
        - in: path
          name: attributesId
          required: true
          schema:
            type: string
      x-stackQL-resource: attributes_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}/attributes/{attributesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataplex.projects.locations.dataTaxonomies.attributes.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
        - in: path
          name: attributesId
          required: true
          schema:
            type: string
      x-stackQL-resource: attributes_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}/attributes/{attributesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.dataTaxonomies.attributes.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
        - in: path
          name: attributesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: attributes_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}:
    parameters: *ref_1
    delete:
      description: Deletes a lake resource. All zones within the lake must be deleted before the lake can be deleted.
      operationId: dataplex.projects.locations.lakes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
      x-stackQL-resource: lakes
      x-stackQL-verb: delete
    get:
      description: Retrieves a lake resource.
      operationId: dataplex.projects.locations.lakes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Lake'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
      x-stackQL-resource: lakes
      x-stackQL-verb: select
    patch:
      description: Updates a lake resource.
      operationId: dataplex.projects.locations.lakes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Lake'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: lakes
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
      operationId: dataplex.projects.locations.lakes.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
      x-stackQL-resource: lakes_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes:
    parameters: *ref_1
    get:
      description: Lists lake resources in a project and location.
      operationId: dataplex.projects.locations.lakes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListLakesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: lakes
      x-stackQL-verb: select
    post:
      description: Creates a lake resource.
      operationId: dataplex.projects.locations.lakes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Lake'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: lakeId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: lakes
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataplex.projects.locations.lakes.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
      x-stackQL-resource: lakes_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.lakes.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: lakes_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/actions:
    parameters: *ref_1
    get:
      description: Lists action resources in a lake.
      operationId: dataplex.projects.locations.lakes.actions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListActionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: actions
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.lakes.zones.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: zones_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}:
    parameters: *ref_1
    delete:
      description: Deletes a zone resource. All assets within a zone must be deleted before the zone can be deleted.
      operationId: dataplex.projects.locations.lakes.zones.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
      x-stackQL-resource: zones
      x-stackQL-verb: delete
    patch:
      description: Updates a zone resource.
      operationId: dataplex.projects.locations.lakes.zones.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Zone'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: zones
      x-stackQL-verb: exec
    get:
      description: Retrieves a zone resource.
      operationId: dataplex.projects.locations.lakes.zones.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Zone'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
      x-stackQL-resource: zones
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataplex.projects.locations.lakes.zones.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
      x-stackQL-resource: zones_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones:
    parameters: *ref_1
    get:
      description: Lists zone resources in a lake.
      operationId: dataplex.projects.locations.lakes.zones.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListZonesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: zones
      x-stackQL-verb: select
    post:
      description: Creates a zone resource within a lake.
      operationId: dataplex.projects.locations.lakes.zones.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Zone'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: zoneId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: zones
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
      operationId: dataplex.projects.locations.lakes.zones.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
      x-stackQL-resource: zones_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}:
    parameters: *ref_1
    get:
      description: Retrieves an asset resource.
      operationId: dataplex.projects.locations.lakes.zones.assets.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Asset'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-verb: select
    delete:
      description: Deletes an asset resource. The referenced storage resource is detached (default) or deleted based on the associated Lifecycle policy.
      operationId: dataplex.projects.locations.lakes.zones.assets.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-verb: delete
    patch:
      description: Updates an asset resource.
      operationId: dataplex.projects.locations.lakes.zones.assets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Asset'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: assets
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
      operationId: dataplex.projects.locations.lakes.zones.assets.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: assets_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets:
    parameters: *ref_1
    post:
      description: Creates an asset resource.
      operationId: dataplex.projects.locations.lakes.zones.assets.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Asset'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: assetId
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-verb: insert
    get:
      description: Lists asset resources in a zone.
      operationId: dataplex.projects.locations.lakes.zones.assets.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListAssetsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataplex.projects.locations.lakes.zones.assets.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: assets_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.lakes.zones.assets.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: assets_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}/actions:
    parameters: *ref_1
    get:
      description: Lists action resources in an asset.
      operationId: dataplex.projects.locations.lakes.zones.assets.actions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListActionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: actions
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/actions:
    parameters: *ref_1
    get:
      description: Lists action resources in a zone.
      operationId: dataplex.projects.locations.lakes.zones.actions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListActionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: actions
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities/{entitiesId}:
    parameters: *ref_1
    put:
      description: Update a metadata entity. Only supports full resource update.
      operationId: dataplex.projects.locations.lakes.zones.entities.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Entity'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Entity'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: entitiesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: entities
      x-stackQL-verb: exec
    get:
      description: Get a metadata entity.
      operationId: dataplex.projects.locations.lakes.zones.entities.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Entity'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: entitiesId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: entities
      x-stackQL-verb: select
    delete:
      description: Delete a metadata entity.
      operationId: dataplex.projects.locations.lakes.zones.entities.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: entitiesId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
      x-stackQL-resource: entities
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities:
    parameters: *ref_1
    post:
      description: Create a metadata entity.
      operationId: dataplex.projects.locations.lakes.zones.entities.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Entity'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Entity'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: entities
      x-stackQL-verb: insert
    get:
      description: List metadata entities in a zone.
      operationId: dataplex.projects.locations.lakes.zones.entities.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListEntitiesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: entities
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities/{entitiesId}/partitions:
    parameters: *ref_1
    get:
      description: List metadata partitions of an entity.
      operationId: dataplex.projects.locations.lakes.zones.entities.partitions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListPartitionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: entitiesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: partitions
      x-stackQL-verb: select
    post:
      description: Create a metadata partition.
      operationId: dataplex.projects.locations.lakes.zones.entities.partitions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Partition'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Partition'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: entitiesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: partitions
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities/{entitiesId}/partitions/{partitionsId}:
    parameters: *ref_1
    get:
      description: Get a metadata partition of an entity.
      operationId: dataplex.projects.locations.lakes.zones.entities.partitions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Partition'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: entitiesId
          required: true
          schema:
            type: string
        - in: path
          name: partitionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: partitions
      x-stackQL-verb: select
    delete:
      description: Delete a metadata partition.
      operationId: dataplex.projects.locations.lakes.zones.entities.partitions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: entitiesId
          required: true
          schema:
            type: string
        - in: path
          name: partitionsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
      x-stackQL-resource: partitions
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}/sessions:
    parameters: *ref_1
    get:
      description: Lists session resources in an environment.
      operationId: dataplex.projects.locations.lakes.environments.sessions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListSessionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: sessions
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}:
    parameters: *ref_1
    delete:
      description: Delete the environment resource. All the child resources must have been deleted before environment deletion can be initiated.
      operationId: dataplex.projects.locations.lakes.environments.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-verb: delete
    get:
      description: Get environment resource.
      operationId: dataplex.projects.locations.lakes.environments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Environment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-verb: select
    patch:
      description: Update the environment resource.
      operationId: dataplex.projects.locations.lakes.environments.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Environment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataplex.projects.locations.lakes.environments.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: environments_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.lakes.environments.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: environments_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
      operationId: dataplex.projects.locations.lakes.environments.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: environments_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments:
    parameters: *ref_1
    get:
      description: Lists environments under the given lake.
      operationId: dataplex.projects.locations.lakes.environments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListEnvironmentsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: environments
      x-stackQL-verb: select
    post:
      description: Create an environment resource.
      operationId: dataplex.projects.locations.lakes.environments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Environment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: environmentId
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataplex.projects.locations.lakes.tasks.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
      x-stackQL-resource: tasks_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks:
    parameters: *ref_1
    get:
      description: Lists tasks under the given lake.
      operationId: dataplex.projects.locations.lakes.tasks.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListTasksResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: tasks
      x-stackQL-verb: select
    post:
      description: Creates a task resource within a lake.
      operationId: dataplex.projects.locations.lakes.tasks.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Task'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: taskId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: tasks
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}:
    parameters: *ref_1
    patch:
      description: Update the task resource.
      operationId: dataplex.projects.locations.lakes.tasks.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Task'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: tasks
      x-stackQL-verb: exec
    get:
      description: Get task resource.
      operationId: dataplex.projects.locations.lakes.tasks.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Task'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
      x-stackQL-resource: tasks
      x-stackQL-verb: select
    delete:
      description: Delete the task resource.
      operationId: dataplex.projects.locations.lakes.tasks.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
      x-stackQL-resource: tasks
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}:run:
    parameters: *ref_1
    post:
      description: Run an on demand execution of a Task.
      operationId: dataplex.projects.locations.lakes.tasks.run
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1RunTaskRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1RunTaskResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
      x-stackQL-resource: tasks
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.lakes.tasks.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: tasks_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
      operationId: dataplex.projects.locations.lakes.tasks.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
      x-stackQL-resource: tasks_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}/jobs/{jobsId}:cancel:
    parameters: *ref_1
    post:
      description: Cancel jobs running for the task resource.
      operationId: dataplex.projects.locations.lakes.tasks.jobs.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1CancelJobRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}/jobs/{jobsId}:
    parameters: *ref_1
    get:
      description: Get job resource.
      operationId: dataplex.projects.locations.lakes.tasks.jobs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Job'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}/jobs:
    parameters: *ref_1
    get:
      description: Lists Jobs under the given task.
      operationId: dataplex.projects.locations.lakes.tasks.jobs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListJobsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems/{contentitemsId}:
    parameters: *ref_1
    get:
      description: Get a content resource.
      operationId: dataplex.projects.locations.lakes.contentitems.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentitemsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: contentitems
      x-stackQL-verb: select
    patch:
      description: Update a content. Only supports full resource update.
      operationId: dataplex.projects.locations.lakes.contentitems.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentitemsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: contentitems
      x-stackQL-verb: exec
    delete:
      description: Delete a content.
      operationId: dataplex.projects.locations.lakes.contentitems.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentitemsId
          required: true
          schema:
            type: string
      x-stackQL-resource: contentitems
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems/{contentitemsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: 'Returns the caller''s permissions on a resource. If the resource does not exist, an empty set of permissions is returned (a NOT_FOUND error is not returned).A caller is not required to have Google IAM permission to make this request.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataplex.projects.locations.lakes.contentitems.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentitemsId
          required: true
          schema:
            type: string
      x-stackQL-resource: contentitems_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems/{contentitemsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: Gets the access control policy for a contentitem resource. A NOT_FOUND error is returned if the resource does not exist. An empty policy is returned if the resource exists but does not have a policy set on it.Caller must have Google IAM dataplex.content.getIamPolicy permission on the resource.
      operationId: dataplex.projects.locations.lakes.contentitems.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentitemsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: contentitems_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems:
    parameters: *ref_1
    get:
      description: List content.
      operationId: dataplex.projects.locations.lakes.contentitems.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListContentResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: contentitems
      x-stackQL-verb: select
    post:
      description: Create a content.
      operationId: dataplex.projects.locations.lakes.contentitems.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: contentitems
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems/{contentitemsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified contentitem resource. Replaces any existing policy.Caller must have Google IAM dataplex.content.setIamPolicy permission on the resource.
      operationId: dataplex.projects.locations.lakes.contentitems.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentitemsId
          required: true
          schema:
            type: string
      x-stackQL-resource: contentitems_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content/{contentId}:
    parameters: *ref_1
    delete:
      description: Delete a content.
      operationId: dataplex.projects.locations.lakes.content.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentId
          required: true
          schema:
            type: string
      x-stackQL-resource: content
      x-stackQL-verb: delete
    get:
      description: Get a content resource.
      operationId: dataplex.projects.locations.lakes.content.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: content
      x-stackQL-verb: select
    patch:
      description: Update a content. Only supports full resource update.
      operationId: dataplex.projects.locations.lakes.content.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: content
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content:
    parameters: *ref_1
    get:
      description: List content.
      operationId: dataplex.projects.locations.lakes.content.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListContentResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: content
      x-stackQL-verb: select
    post:
      description: Create a content.
      operationId: dataplex.projects.locations.lakes.content.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: content
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content/{contentId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified contentitem resource. Replaces any existing policy.Caller must have Google IAM dataplex.content.setIamPolicy permission on the resource.
      operationId: dataplex.projects.locations.lakes.content.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentId
          required: true
          schema:
            type: string
      x-stackQL-resource: content_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content/{contentId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: 'Returns the caller''s permissions on a resource. If the resource does not exist, an empty set of permissions is returned (a NOT_FOUND error is not returned).A caller is not required to have Google IAM permission to make this request.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataplex.projects.locations.lakes.content.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentId
          required: true
          schema:
            type: string
      x-stackQL-resource: content_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content/{contentId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: Gets the access control policy for a contentitem resource. A NOT_FOUND error is returned if the resource does not exist. An empty policy is returned if the resource exists but does not have a policy set on it.Caller must have Google IAM dataplex.content.getIamPolicy permission on the resource.
      operationId: dataplex.projects.locations.lakes.content.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: content_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}/jobs/{jobsId}:
    parameters: *ref_1
    get:
      description: Get DataScanJob resource.
      operationId: dataplex.projects.locations.dataScans.jobs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1DataScanJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}/jobs:
    parameters: *ref_1
    get:
      description: Lists DataScanJobs under the given dataScan.
      operationId: dataplex.projects.locations.dataScans.jobs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListDataScanJobsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.dataScans.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: data_scans_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}:
    parameters: *ref_1
    patch:
      description: Update the dataScan resource.
      operationId: dataplex.projects.locations.dataScans.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1DataScan'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: data_scans
      x-stackQL-verb: exec
    delete:
      description: Delete the dataScan resource.
      operationId: dataplex.projects.locations.dataScans.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_scans
      x-stackQL-verb: delete
    get:
      description: Get dataScan resource.
      operationId: dataplex.projects.locations.dataScans.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1DataScan'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: data_scans
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/dataScans:
    parameters: *ref_1
    get:
      description: Lists dataScans.
      operationId: dataplex.projects.locations.dataScans.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListDataScansResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: data_scans
      x-stackQL-verb: select
    post:
      description: Creates a dataScan resource.
      operationId: dataplex.projects.locations.dataScans.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1DataScan'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: dataScanId
          schema:
            type: string
      x-stackQL-resource: data_scans
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataplex.projects.locations.dataScans.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_scans_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}:run:
    parameters: *ref_1
    post:
      description: Run an on demand execution of a DataScan.
      operationId: dataplex.projects.locations.dataScans.run
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1RunDataScanRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1RunDataScanResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_scans
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
      operationId: dataplex.projects.locations.dataScans.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_scans_iam_policies
      x-stackQL-verb: exec
