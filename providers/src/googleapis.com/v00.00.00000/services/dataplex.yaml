openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Cloud Dataplex API
  description: Dataplex API is used to manage the lifecycle of data lakes.
  version: v1
  x-discovery-doc-revision: '20230102'
  x-generated-date: '2023-01-19'
externalDocs:
  url: https://cloud.google.com/dataplex/docs
servers:
  - url: https://dataplex.googleapis.com
components:
  schemas:
    GoogleCloudDataplexV1CancelJobRequest:
      id: GoogleCloudDataplexV1CancelJobRequest
      description: Cancel task jobs.
      type: object
      properties: {}
    GoogleIamV1Policy:
      description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources.A Policy is a collection of bindings. A binding binds one or more members, or principals, to a single role. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A role is a named list of permissions; each role can be an IAM predefined role or a user-created custom role.For some types of Google Cloud resources, a binding can also specify a condition, which is a logical expression that allows access to a resource only if the expression evaluates to true. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).JSON example: { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp(''2020-10-01T00:00:00.000Z'')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } YAML example: bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the IAM documentation (https://cloud.google.com/iam/docs/).'
      type: object
      properties:
        version:
          format: int32
          type: integer
          description: 'Specifies the format of the policy.Valid values are 0, 1, and 3. Requests that specify an invalid value are rejected.Any operation that affects conditional role bindings must specify version 3. This requirement applies to the following operations: Getting a policy that includes a conditional role binding Adding a conditional role binding to a policy Changing a conditional role binding in a policy Removing any role binding, with or without a condition, from a policy that includes conditionsImportant: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy. If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost.If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).'
        bindings:
          type: array
          description: Associates a list of members, or principals, with a role. Optionally, may specify a condition that determines how and when the bindings are applied. Each of the bindings must contain at least one principal.The bindings in a Policy can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the bindings grant 50 different roles to user:alice@example.com, and not to any other principal, then you can add another 1,450 principals to the bindings in the Policy.
          items:
            $ref: '#/components/schemas/GoogleIamV1Binding'
        etag:
          format: byte
          type: string
          description: 'etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the etag in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An etag is returned in the response to getIamPolicy, and systems are expected to put that etag in the request to setIamPolicy to ensure that their change will be applied to the same version of the policy.Important: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy. If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost.'
        auditConfigs:
          type: array
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: '#/components/schemas/GoogleIamV1AuditConfig'
      id: GoogleIamV1Policy
    GoogleCloudDataplexV1Schema:
      type: object
      properties:
        userManaged:
          type: boolean
          description: Required. Set to true if user-managed or false if managed by Dataplex. The default is false (managed by Dataplex). Set to falseto enable Dataplex discovery to update the schema. including new data discovery, schema inference, and schema evolution. Users retain the ability to input and edit the schema. Dataplex treats schema input by the user as though produced by a previous Dataplex discovery operation, and it will evolve the schema and take action based on that treatment. Set to true to fully manage the entity schema. This setting guarantees that Dataplex will not change schema fields.
        partitionFields:
          description: Optional. The sequence of fields describing the partition structure in entities. If this field is empty, there are no partitions within the data.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1SchemaPartitionField'
        partitionStyle:
          description: Optional. The structure of paths containing partition data within the entity.
          enum:
            - PARTITION_STYLE_UNSPECIFIED
            - HIVE_COMPATIBLE
          type: string
          enumDescriptions:
            - PartitionStyle unspecified
            - 'Partitions are hive-compatible. Examples: gs://bucket/path/to/table/dt=2019-10-31/lang=en, gs://bucket/path/to/table/dt=2019-10-31/lang=en/late.'
        fields:
          description: 'Optional. The sequence of fields describing data in table entities. Note: BigQuery SchemaFields are immutable.'
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1SchemaSchemaField'
          type: array
      description: Schema information describing the structure and layout of the data.
      id: GoogleCloudDataplexV1Schema
    GoogleCloudDataplexV1DataScanEventDataProfileResult:
      type: object
      description: Data profile result for data scan job.
      id: GoogleCloudDataplexV1DataScanEventDataProfileResult
      properties:
        rowCount:
          description: The count of rows processed in the data scan job.
          format: int64
          type: string
    GoogleCloudDataplexV1DataQualityRuleRegexExpectation:
      description: Evaluates whether each column value matches a specified regex.
      type: object
      id: GoogleCloudDataplexV1DataQualityRuleRegexExpectation
      properties:
        regex:
          type: string
          description: A regular expression the column value is expected to match.
    GoogleCloudDataplexV1ListDataScansResponse:
      id: GoogleCloudDataplexV1ListDataScansResponse
      properties:
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
        unreachable:
          items:
            type: string
          description: Locations that could not be reached.
          type: array
        dataScans:
          description: DataScans (BASIC view only) under the given parent location.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1DataScan'
      type: object
      description: List dataScans response.
    GoogleCloudDataplexV1DataProfileResult:
      id: GoogleCloudDataplexV1DataProfileResult
      properties:
        profile:
          description: The profile information per field.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileResultProfile'
        rowCount:
          format: int64
          description: The count of rows scanned.
          type: string
        scannedData:
          $ref: '#/components/schemas/GoogleCloudDataplexV1ScannedData'
          description: The data scanned for this result.
      description: DataProfileResult defines the output of DataProfileScan. Each field of the table will have field type specific profile result.
      type: object
    GoogleCloudDataplexV1ListEntitiesResponse:
      description: List metadata entities response.
      id: GoogleCloudDataplexV1ListEntitiesResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: Token to retrieve the next page of results, or empty if there are no remaining results in the list.
        entities:
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Entity'
          description: Entities in the specified parent zone.
          type: array
    GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility:
      description: Provides compatibility information for a specific metadata store.
      properties:
        compatible:
          description: Output only. Whether the entity is compatible and can be represented in the metadata store.
          type: boolean
          readOnly: true
        reason:
          type: string
          description: Output only. Provides additional detail if the entity is incompatible with the metadata store.
          readOnly: true
      type: object
      id: GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility
    GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo:
      description: The profile information for a double type field.
      id: GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo
      type: object
      properties:
        standardDeviation:
          type: number
          format: double
          description: Standard deviation of non-null values in the scanned data. NaN, if the field has a NaN.
        average:
          description: Average of non-null values in the scanned data. NaN, if the field has a NaN.
          type: number
          format: double
        quartiles:
          items:
            format: double
            type: number
          description: 'A quartile divides the number of data points into four parts, or quarters, of more-or-less equal size. Three main quartiles used are: The first quartile (Q1) splits off the lowest 25% of data from the highest 75%. It is also known as the lower or 25th empirical quartile, as 25% of the data is below this point. The second quartile (Q2) is the median of a data set. So, 50% of the data lies below this point. The third quartile (Q3) splits off the highest 25% of data from the lowest 75%. It is known as the upper or 75th empirical quartile, as 75% of the data lies below this point. Here, the quartiles is provided as an ordered list of quartile values for the scanned data, occurring in order Q1, median, Q3.'
          type: array
        max:
          description: Maximum of non-null values in the scanned data. NaN, if the field has a NaN.
          format: double
          type: number
        min:
          format: double
          type: number
          description: Minimum of non-null values in the scanned data. NaN, if the field has a NaN.
    GoogleCloudDataplexV1ListLakesResponse:
      properties:
        unreachableLocations:
          items:
            type: string
          type: array
          description: Locations that could not be reached.
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
        lakes:
          description: Lakes under the given parent location.
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Lake'
          type: array
      id: GoogleCloudDataplexV1ListLakesResponse
      description: List lakes response.
      type: object
    GoogleCloudDataplexV1TaskExecutionSpec:
      properties:
        project:
          type: string
          description: Optional. The project in which jobs are run. By default, the project containing the Lake is used. If a project is provided, the ExecutionSpec.service_account must belong to this project.
        maxJobExecutionLifetime:
          format: google-duration
          description: Optional. The maximum duration after which the job execution is expired.
          type: string
        args:
          additionalProperties:
            type: string
          description: 'Optional. The arguments to pass to the task. The args can use placeholders of the format ${placeholder} as part of key/value string. These will be interpolated before passing the args to the driver. Currently supported placeholders: - ${task_id} - ${job_time} To pass positional args, set the key as TASK_ARGS. The value should be a comma-separated string of all the positional arguments. To use a delimiter other than comma, refer to https://cloud.google.com/sdk/gcloud/reference/topic/escaping. In case of other keys being present in the args, then TASK_ARGS will be passed as the last argument.'
          type: object
        serviceAccount:
          description: Required. Service account to use to execute a task. If not provided, the default Compute service account for the project is used.
          type: string
        kmsKey:
          description: 'Optional. The Cloud KMS key to use for encryption, of the form: projects/{project_number}/locations/{location_id}/keyRings/{key-ring-name}/cryptoKeys/{key-name}.'
          type: string
      type: object
      description: Execution related settings, like retry and service_account.
      id: GoogleCloudDataplexV1TaskExecutionSpec
    GoogleCloudDataplexV1DataProfileSpec:
      type: object
      id: GoogleCloudDataplexV1DataProfileSpec
      properties: {}
      description: DataProfileScan related setting.
    GoogleLongrunningCancelOperationRequest:
      properties: {}
      id: GoogleLongrunningCancelOperationRequest
      description: The request message for Operations.CancelOperation.
      type: object
    GoogleCloudDataplexV1ActionMissingData:
      id: GoogleCloudDataplexV1ActionMissingData
      type: object
      description: Action details for absence of data detected by discovery.
      properties: {}
    GoogleCloudDataplexV1RunDataScanRequest:
      description: Run DataScan Request
      type: object
      properties: {}
      id: GoogleCloudDataplexV1RunDataScanRequest
    GoogleCloudDataplexV1AssetDiscoveryStatusStats:
      id: GoogleCloudDataplexV1AssetDiscoveryStatusStats
      description: The aggregated data statistics for the asset reported by discovery.
      type: object
      properties:
        tables:
          type: string
          format: int64
          description: The count of table entities within the referenced resource.
        filesets:
          description: The count of fileset entities within the referenced resource.
          format: int64
          type: string
        dataSize:
          type: string
          format: int64
          description: The number of stored data bytes within the referenced resource.
        dataItems:
          type: string
          format: int64
          description: The count of data items within the referenced resource.
    GoogleCloudDataplexV1Entity:
      description: Represents tables and fileset metadata contained within a zone.
      type: object
      properties:
        uid:
          readOnly: true
          type: string
          description: Output only. System generated unique ID for the Entity. This ID will be different if the Entity is deleted and re-created with the same name.
        updateTime:
          description: Output only. The time when the entity was last updated.
          format: google-datetime
          readOnly: true
          type: string
        format:
          $ref: '#/components/schemas/GoogleCloudDataplexV1StorageFormat'
          description: Required. Identifies the storage format of the entity data. It does not apply to entities with data stored in BigQuery.
        id:
          description: Required. A user-provided entity ID. It is mutable, and will be used as the published table name. Specifying a new ID in an update entity request will override the existing value. The ID must contain only letters (a-z, A-Z), numbers (0-9), and underscores. Must begin with a letter and consist of 256 or fewer characters.
          type: string
        type:
          type: string
          description: Required. Immutable. The type of entity.
          enum:
            - TYPE_UNSPECIFIED
            - TABLE
            - FILESET
          enumDescriptions:
            - Type unspecified.
            - Structured and semi-structured data.
            - Unstructured data.
        catalogEntry:
          readOnly: true
          description: Output only. The name of the associated Data Catalog entry.
          type: string
        dataPath:
          description: Required. Immutable. The storage path of the entity data. For Cloud Storage data, this is the fully-qualified path to the entity, such as gs://bucket/path/to/data. For BigQuery data, this is the name of the table resource, such as projects/project_id/datasets/dataset_id/tables/table_id.
          type: string
        system:
          enumDescriptions:
            - Storage system unspecified.
            - The entity data is contained within a Cloud Storage bucket.
            - The entity data is contained within a BigQuery dataset.
          description: Required. Immutable. Identifies the storage system of the entity data.
          type: string
          enum:
            - STORAGE_SYSTEM_UNSPECIFIED
            - CLOUD_STORAGE
            - BIGQUERY
        dataPathPattern:
          type: string
          description: 'Optional. The set of items within the data path constituting the data in the entity, represented as a glob path. Example: gs://bucket/path/to/data/**/*.csv.'
        etag:
          type: string
          description: Optional. The etag associated with the entity, which can be retrieved with a GetEntity request. Required for update and delete requests.
        description:
          type: string
          description: Optional. User friendly longer description text. Must be shorter than or equal to 1024 characters.
        asset:
          type: string
          description: Required. Immutable. The ID of the asset associated with the storage location containing the entity data. The entity must be with in the same zone with the asset.
        access:
          readOnly: true
          description: Output only. Identifies the access mechanism to the entity. Not user settable.
          $ref: '#/components/schemas/GoogleCloudDataplexV1StorageAccess'
        createTime:
          format: google-datetime
          type: string
          description: Output only. The time when the entity was created.
          readOnly: true
        compatibility:
          readOnly: true
          description: Output only. Metadata stores that the entity is compatible with.
          $ref: '#/components/schemas/GoogleCloudDataplexV1EntityCompatibilityStatus'
        displayName:
          description: Optional. Display name must be shorter than or equal to 256 characters.
          type: string
        name:
          readOnly: true
          description: 'Output only. The resource name of the entity, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{id}.'
          type: string
        schema:
          $ref: '#/components/schemas/GoogleCloudDataplexV1Schema'
          description: Required. The description of the data structure and layout. The schema is not included in list responses. It is only included in SCHEMA and FULL entity views of a GetEntity response.
      id: GoogleCloudDataplexV1Entity
    GoogleCloudDataplexV1EntityCompatibilityStatus:
      properties:
        hiveMetastore:
          description: Output only. Whether this entity is compatible with Hive Metastore.
          $ref: '#/components/schemas/GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility'
          readOnly: true
        bigquery:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility'
          description: Output only. Whether this entity is compatible with BigQuery.
      description: Provides compatibility information for various metadata stores.
      id: GoogleCloudDataplexV1EntityCompatibilityStatus
      type: object
    GoogleCloudDataplexV1AssetResourceSpec:
      type: object
      description: Identifies the cloud resource that is referenced by this asset.
      id: GoogleCloudDataplexV1AssetResourceSpec
      properties:
        name:
          type: string
          description: 'Immutable. Relative name of the cloud resource that contains the data that is being managed within a lake. For example: projects/{project_number}/buckets/{bucket_id} projects/{project_number}/datasets/{dataset_id}'
        readAccessMode:
          enum:
            - ACCESS_MODE_UNSPECIFIED
            - DIRECT
            - MANAGED
          enumDescriptions:
            - Access mode unspecified.
            - Default. Data is accessed directly using storage APIs.
            - Data is accessed through a managed interface using BigQuery APIs.
          description: Optional. Determines how read permissions are handled for each asset and their associated tables. Only available to storage buckets assets.
          type: string
        type:
          description: Required. Immutable. Type of resource.
          type: string
          enumDescriptions:
            - Type not specified.
            - Cloud Storage bucket.
            - BigQuery dataset.
          enum:
            - TYPE_UNSPECIFIED
            - STORAGE_BUCKET
            - BIGQUERY_DATASET
    GoogleCloudDataplexV1JobEvent:
      properties:
        endTime:
          type: string
          format: google-datetime
          description: The time when the job ended running.
        serviceJob:
          type: string
          description: The reference to the job within the service.
        service:
          description: The service used to execute the job.
          enum:
            - SERVICE_UNSPECIFIED
            - DATAPROC
          type: string
          enumDescriptions:
            - Unspecified service.
            - Cloud Dataproc.
        type:
          description: The type of the job.
          enum:
            - TYPE_UNSPECIFIED
            - SPARK
            - NOTEBOOK
          type: string
          enumDescriptions:
            - Unspecified job type.
            - Spark jobs.
            - Notebook jobs.
        state:
          enumDescriptions:
            - Unspecified job state.
            - Job successfully completed.
            - Job was unsuccessful.
            - Job was cancelled by the user.
            - Job was cancelled or aborted via the service executing the job.
          enum:
            - STATE_UNSPECIFIED
            - SUCCEEDED
            - FAILED
            - CANCELLED
            - ABORTED
          description: The job state on completion.
          type: string
        jobId:
          description: The unique id identifying the job.
          type: string
        retries:
          description: The number of retries.
          format: int32
          type: integer
        startTime:
          description: The time when the job started running.
          type: string
          format: google-datetime
        message:
          type: string
          description: The log message.
      type: object
      id: GoogleCloudDataplexV1JobEvent
      description: The payload associated with Job logs that contains events describing jobs that have run within a Lake.
    GoogleCloudDataplexV1DataQualityResult:
      type: object
      description: The output of a DataQualityScan.
      properties:
        dimensions:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityDimensionResult'
          description: A list of results at the dimension level.
        rowCount:
          format: int64
          type: string
          description: The count of rows processed.
        scannedData:
          $ref: '#/components/schemas/GoogleCloudDataplexV1ScannedData'
          description: The data scanned for this result.
        passed:
          type: boolean
          description: Overall data quality result -- true if all rules passed.
        rules:
          description: A list of all the rules in a job, and their results.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityRuleResult'
      id: GoogleCloudDataplexV1DataQualityResult
    GoogleCloudDataplexV1DataQualityRuleResult:
      properties:
        passed:
          description: Whether the rule passed or failed.
          type: boolean
        nullCount:
          type: string
          description: The number of rows with null values in the specified column.
          format: int64
        rule:
          description: The rule specified in the DataQualitySpec, as is.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityRule'
        evaluatedCount:
          type: string
          description: The number of rows a rule was evaluated against. This field is only valid for ColumnMap type rules.Evaluated count can be configured to either include all rows (default) - with null rows automatically failing rule evaluation, or exclude null rows from the evaluated_count, by setting ignore_nulls = true.
          format: int64
        failingRowsQuery:
          type: string
          description: The query to find rows that did not pass this rule. Only applies to ColumnMap and RowCondition rules.
        passRatio:
          description: The ratio of passed_count / evaluated_count. This field is only valid for ColumnMap type rules.
          type: number
          format: double
        passedCount:
          description: The number of rows which passed a rule evaluation. This field is only valid for ColumnMap type rules.
          type: string
          format: int64
      description: DataQualityRuleResult provides a more detailed, per-rule view of the results.
      id: GoogleCloudDataplexV1DataQualityRuleResult
      type: object
    GoogleCloudDataplexV1RunTaskRequest:
      id: GoogleCloudDataplexV1RunTaskRequest
      type: object
      properties: {}
    GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfo:
      id: GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfo
      properties:
        topNValues:
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValue'
          type: array
          description: The list of top N non-null values and number of times they occur in the scanned data. N is 10 or equal to the number of distinct values in the field, whichever is smaller. Not available for complex non-groupable field type RECORD and fields with REPEATABLE mode.
        doubleProfile:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo'
          description: Double type field information.
        nullRatio:
          format: double
          description: Ratio of rows with null value against total scanned rows.
          type: number
        integerProfile:
          description: Integer type field information.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfo'
        distinctRatio:
          type: number
          description: Ratio of rows with distinct values against total scanned rows. Not available for complex non-groupable field type RECORD and fields with REPEATABLE mode.
          format: double
        stringProfile:
          description: String type field information.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfo'
      description: The profile information for each field type.
      type: object
    GoogleCloudDataplexV1EnvironmentSessionStatus:
      type: object
      id: GoogleCloudDataplexV1EnvironmentSessionStatus
      properties:
        active:
          type: boolean
          readOnly: true
          description: Output only. Queries over sessions to mark whether the environment is currently active or not
    GoogleCloudDataplexV1ScannedDataIncrementalField:
      description: A data range denoted by a pair of start/end values of a field.
      properties:
        field:
          type: string
          description: The field that contains values which monotonically increases over time (e.g. a timestamp column).
        start:
          description: Value that marks the start of the range.
          type: string
        end:
          type: string
          description: Value that marks the end of the range.
      id: GoogleCloudDataplexV1ScannedDataIncrementalField
      type: object
    GoogleCloudDataplexV1DataQualityDimensionResult:
      id: GoogleCloudDataplexV1DataQualityDimensionResult
      properties:
        passed:
          type: boolean
          description: Whether the dimension passed or failed.
      type: object
      description: DataQualityDimensionResult provides a more detailed, per-dimension view of the results.
    GoogleCloudDataplexV1EnvironmentEndpoints:
      id: GoogleCloudDataplexV1EnvironmentEndpoints
      type: object
      properties:
        sql:
          type: string
          readOnly: true
          description: Output only. URI to serve SQL APIs
        notebooks:
          description: Output only. URI to serve notebook APIs
          readOnly: true
          type: string
    GoogleCloudDataplexV1DataSource:
      description: The data source for DataScan.
      properties:
        entity:
          type: string
          description: 'Immutable. The Dataplex entity that represents the data source (e.g. BigQuery table) for DataScan, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}.'
      id: GoogleCloudDataplexV1DataSource
      type: object
    GoogleCloudDataplexV1ListAssetsResponse:
      type: object
      id: GoogleCloudDataplexV1ListAssetsResponse
      description: List assets response.
      properties:
        assets:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Asset'
          description: Asset under the given parent zone.
        nextPageToken:
          type: string
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
    GoogleIamV1AuditConfig:
      id: GoogleIamV1AuditConfig
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs.If there are AuditConfigs for both allServices and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted.Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.'
      type: object
      properties:
        auditLogConfigs:
          type: array
          description: The configuration for logging of each type of permission.
          items:
            $ref: '#/components/schemas/GoogleIamV1AuditLogConfig'
        service:
          description: Specifies a service that will be enabled for audit logging. For example, storage.googleapis.com, cloudsql.googleapis.com. allServices is a special value that covers all services.
          type: string
    GoogleCloudDataplexV1AssetDiscoveryStatus:
      type: object
      description: Status of discovery for an asset.
      properties:
        updateTime:
          format: google-datetime
          type: string
          description: Last update time of the status.
        stats:
          description: Data Stats of the asset reported by discovery.
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetDiscoveryStatusStats'
        lastRunDuration:
          format: google-duration
          type: string
          description: The duration of the last discovery run.
        lastRunTime:
          format: google-datetime
          type: string
          description: The start time of the last discovery run.
        message:
          description: Additional information about the current state.
          type: string
        state:
          enumDescriptions:
            - State is unspecified.
            - Discovery for the asset is scheduled.
            - Discovery for the asset is running.
            - Discovery for the asset is currently paused (e.g. due to a lack of available resources). It will be automatically resumed.
            - Discovery for the asset is disabled.
          enum:
            - STATE_UNSPECIFIED
            - SCHEDULED
            - IN_PROGRESS
            - PAUSED
            - DISABLED
          type: string
          description: The current status of the discovery feature.
      id: GoogleCloudDataplexV1AssetDiscoveryStatus
    GoogleCloudDataplexV1ListDataScanJobsResponse:
      properties:
        nextPageToken:
          type: string
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
        dataScanJobs:
          description: DataScanJobs (BASIC view only) under a given dataScan.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1DataScanJob'
      description: List DataScanJobs response.
      type: object
      id: GoogleCloudDataplexV1ListDataScanJobsResponse
    GoogleCloudDataplexV1SchemaSchemaField:
      id: GoogleCloudDataplexV1SchemaSchemaField
      type: object
      description: Represents a column field within a table schema.
      properties:
        fields:
          type: array
          description: Optional. Any nested field for complex types.
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1SchemaSchemaField'
        name:
          description: Required. The name of the field. Must contain only letters, numbers and underscores, with a maximum length of 767 characters, and must begin with a letter or underscore.
          type: string
        description:
          description: Optional. User friendly field description. Must be less than or equal to 1024 characters.
          type: string
        mode:
          enum:
            - MODE_UNSPECIFIED
            - REQUIRED
            - NULLABLE
            - REPEATED
          type: string
          enumDescriptions:
            - Mode unspecified.
            - The field has required semantics.
            - The field has optional semantics, and may be null.
            - The field has repeated (0 or more) semantics, and is a list of values.
          description: Required. Additional field semantics.
        type:
          type: string
          description: Required. The type of field.
          enum:
            - TYPE_UNSPECIFIED
            - BOOLEAN
            - BYTE
            - INT16
            - INT32
            - INT64
            - FLOAT
            - DOUBLE
            - DECIMAL
            - STRING
            - BINARY
            - TIMESTAMP
            - DATE
            - TIME
            - RECORD
            - 'NULL'
          enumDescriptions:
            - SchemaType unspecified.
            - Boolean field.
            - Single byte numeric field.
            - 16-bit numeric field.
            - 32-bit numeric field.
            - 64-bit numeric field.
            - Floating point numeric field.
            - Double precision numeric field.
            - Real value numeric field.
            - Sequence of characters field.
            - Sequence of bytes field.
            - Date and time field.
            - Date field.
            - Time field.
            - Structured field. Nested fields that define the structure of the map. If all nested fields are nullable, this field represents a union.
            - Null field that does not have values.
    GoogleCloudDataplexV1TaskNotebookTaskConfig:
      properties:
        archiveUris:
          items:
            type: string
          description: 'Optional. Cloud Storage URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.'
          type: array
        fileUris:
          items:
            type: string
          type: array
          description: Optional. Cloud Storage URIs of files to be placed in the working directory of each executor.
        notebook:
          description: Required. Path to input notebook. This can be the Cloud Storage URI of the notebook file or the path to a Notebook Content. The execution args are accessible as environment variables (TASK_key=value).
          type: string
        infrastructureSpec:
          description: Optional. Infrastructure specification for the execution.
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskInfrastructureSpec'
      id: GoogleCloudDataplexV1TaskNotebookTaskConfig
      type: object
      description: Config for running scheduled notebooks.
    GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources:
      id: GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources
      description: Compute resources associated with the analyze interactive workloads.
      properties:
        diskSizeGb:
          format: int32
          type: integer
          description: Optional. Size in GB of the disk. Default is 100 GB.
        nodeCount:
          format: int32
          description: Optional. Total number of nodes in the sessions created for this environment.
          type: integer
        maxNodeCount:
          description: Optional. Max configurable nodes. If max_node_count > node_count, then auto-scaling is enabled.
          format: int32
          type: integer
      type: object
    GoogleIamV1TestIamPermissionsRequest:
      properties:
        permissions:
          description: The set of permissions to check for the resource. Permissions with wildcards (such as * or storage.*) are not allowed. For more information see IAM Overview (https://cloud.google.com/iam/docs/overview#permissions).
          type: array
          items:
            type: string
      description: Request message for TestIamPermissions method.
      type: object
      id: GoogleIamV1TestIamPermissionsRequest
    GoogleCloudDataplexV1Action:
      id: GoogleCloudDataplexV1Action
      type: object
      properties:
        zone:
          description: 'Output only. The relative resource name of the zone, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.'
          type: string
          readOnly: true
        invalidDataFormat:
          $ref: '#/components/schemas/GoogleCloudDataplexV1ActionInvalidDataFormat'
          description: Details for issues related to invalid or unsupported data formats.
        failedSecurityPolicyApply:
          $ref: '#/components/schemas/GoogleCloudDataplexV1ActionFailedSecurityPolicyApply'
          description: Details for issues related to applying security policy.
        incompatibleDataSchema:
          $ref: '#/components/schemas/GoogleCloudDataplexV1ActionIncompatibleDataSchema'
          description: Details for issues related to incompatible schemas detected within data.
        invalidDataPartition:
          description: Details for issues related to invalid or unsupported data partition structure.
          $ref: '#/components/schemas/GoogleCloudDataplexV1ActionInvalidDataPartition'
        detectTime:
          type: string
          format: google-datetime
          description: The time that the issue was detected.
        lake:
          description: 'Output only. The relative resource name of the lake, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}.'
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
          description: 'Output only. The relative resource name of the action, of the form: projects/{project}/locations/{location}/lakes/{lake}/actions/{action} projects/{project}/locations/{location}/lakes/{lake}/zones/{zone}/actions/{action} projects/{project}/locations/{location}/lakes/{lake}/zones/{zone}/assets/{asset}/actions/{action}.'
        asset:
          description: 'Output only. The relative resource name of the asset, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/assets/{asset_id}.'
          type: string
          readOnly: true
        category:
          description: The category of issue associated with the action.
          enumDescriptions:
            - Unspecified category.
            - Resource management related issues.
            - Security policy related issues.
            - Data and discovery related issues.
          type: string
          enum:
            - CATEGORY_UNSPECIFIED
            - RESOURCE_MANAGEMENT
            - SECURITY_POLICY
            - DATA_DISCOVERY
        missingData:
          $ref: '#/components/schemas/GoogleCloudDataplexV1ActionMissingData'
          description: Details for issues related to absence of data within managed resources.
        dataLocations:
          type: array
          description: The list of data locations associated with this action. Cloud Storage locations are represented as URI paths(E.g. gs://bucket/table1/year=2020/month=Jan/). BigQuery locations refer to resource names(E.g. bigquery.googleapis.com/projects/project-id/datasets/dataset-id).
          items:
            type: string
        unauthorizedResource:
          description: Details for issues related to lack of permissions to access data resources.
          $ref: '#/components/schemas/GoogleCloudDataplexV1ActionUnauthorizedResource'
        invalidDataOrganization:
          description: Details for issues related to invalid data arrangement.
          $ref: '#/components/schemas/GoogleCloudDataplexV1ActionInvalidDataOrganization'
        issue:
          type: string
          description: Detailed description of the issue requiring action.
        missingResource:
          description: Details for issues related to absence of a managed resource.
          $ref: '#/components/schemas/GoogleCloudDataplexV1ActionMissingResource'
      description: Action represents an issue requiring administrator action for resolution.
    GoogleCloudDataplexV1ListActionsResponse:
      properties:
        actions:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Action'
          description: Actions under the given parent lake/zone/asset.
        nextPageToken:
          type: string
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
      description: List actions response.
      type: object
      id: GoogleCloudDataplexV1ListActionsResponse
    GoogleCloudDataplexV1Trigger:
      id: GoogleCloudDataplexV1Trigger
      description: DataScan scheduling and trigger settings.
      properties:
        onDemand:
          $ref: '#/components/schemas/GoogleCloudDataplexV1TriggerOnDemand'
          description: The scan runs once via RunDataScan API.
        schedule:
          $ref: '#/components/schemas/GoogleCloudDataplexV1TriggerSchedule'
          description: The scan is scheduled to run periodically.
      type: object
    GoogleIamV1Binding:
      id: GoogleIamV1Binding
      description: Associates members, or principals, with a role.
      properties:
        condition:
          description: The condition that is associated with this binding.If the condition evaluates to true, then this binding applies to the current request.If the condition evaluates to false, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).
          $ref: '#/components/schemas/GoogleTypeExpr'
        members:
          items:
            type: string
          description: 'Specifies the principals requesting access for a Google Cloud resource. members can have the following values: allUsers: A special identifier that represents anyone who is on the internet; with or without a Google account. allAuthenticatedUsers: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. user:{emailid}: An email address that represents a specific Google account. For example, alice@example.com . serviceAccount:{emailid}: An email address that represents a Google service account. For example, my-other-app@appspot.gserviceaccount.com. serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]: An identifier for a Kubernetes service account (https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, my-project.svc.id.goog[my-namespace/my-kubernetes-sa]. group:{emailid}: An email address that represents a Google group. For example, admins@example.com. deleted:user:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a user that has been recently deleted. For example, alice@example.com?uid=123456789012345678901. If the user is recovered, this value reverts to user:{emailid} and the recovered user retains the role in the binding. deleted:serviceAccount:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901. If the service account is undeleted, this value reverts to serviceAccount:{emailid} and the undeleted service account retains the role in the binding. deleted:group:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, admins@example.com?uid=123456789012345678901. If the group is recovered, this value reverts to group:{emailid} and the recovered group retains the role in the binding. domain:{domain}: The G Suite domain (primary) that represents all the users of that domain. For example, google.com or example.com.'
          type: array
        role:
          type: string
          description: Role that is assigned to the list of members, or principals. For example, roles/viewer, roles/editor, or roles/owner.
      type: object
    GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime:
      properties:
        imageVersion:
          type: string
          description: Required. Dataplex Image version.
        javaLibraries:
          type: array
          items:
            type: string
          description: Optional. List of Java jars to be included in the runtime environment. Valid input includes Cloud Storage URIs to Jar binaries. For example, gs://bucket-name/my/path/to/file.jar
        pythonPackages:
          type: array
          description: Optional. A list of python packages to be installed. Valid formats include Cloud Storage URI to a PIP installable library. For example, gs://bucket-name/my/path/to/lib.tar.gz
          items:
            type: string
        properties:
          type: object
          description: Optional. Spark properties to provide configuration for use in sessions created for this environment. The properties to set on daemon config files. Property keys are specified in prefix:property format. The prefix must be "spark".
          additionalProperties:
            type: string
      id: GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime
      description: Software Runtime Configuration to run Analyze.
      type: object
    GoogleCloudDataplexV1TaskSparkTaskConfig:
      description: User-specified config for running a Spark task.
      properties:
        fileUris:
          type: array
          description: Optional. Cloud Storage URIs of files to be placed in the working directory of each executor.
          items:
            type: string
        sqlScriptFile:
          description: A reference to a query file. This can be the Cloud Storage URI of the query file or it can the path to a SqlScript Content. The execution args are used to declare a set of script variables (set key="value";).
          type: string
        sqlScript:
          description: The query text. The execution args are used to declare a set of script variables (set key="value";).
          type: string
        mainJarFileUri:
          type: string
          description: The Cloud Storage URI of the jar file that contains the main class. The execution args are passed in as a sequence of named process arguments (--key=value).
        infrastructureSpec:
          description: Optional. Infrastructure specification for the execution.
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskInfrastructureSpec'
        mainClass:
          type: string
          description: The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris. The execution args are passed in as a sequence of named process arguments (--key=value).
        archiveUris:
          type: array
          description: 'Optional. Cloud Storage URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.'
          items:
            type: string
        pythonScriptFile:
          type: string
          description: The Gcloud Storage URI of the main Python file to use as the driver. Must be a .py file. The execution args are passed in as a sequence of named process arguments (--key=value).
      type: object
      id: GoogleCloudDataplexV1TaskSparkTaskConfig
    GoogleCloudDataplexV1SchemaPartitionField:
      properties:
        type:
          enum:
            - TYPE_UNSPECIFIED
            - BOOLEAN
            - BYTE
            - INT16
            - INT32
            - INT64
            - FLOAT
            - DOUBLE
            - DECIMAL
            - STRING
            - BINARY
            - TIMESTAMP
            - DATE
            - TIME
            - RECORD
            - 'NULL'
          enumDescriptions:
            - SchemaType unspecified.
            - Boolean field.
            - Single byte numeric field.
            - 16-bit numeric field.
            - 32-bit numeric field.
            - 64-bit numeric field.
            - Floating point numeric field.
            - Double precision numeric field.
            - Real value numeric field.
            - Sequence of characters field.
            - Sequence of bytes field.
            - Date and time field.
            - Date field.
            - Time field.
            - Structured field. Nested fields that define the structure of the map. If all nested fields are nullable, this field represents a union.
            - Null field that does not have values.
          type: string
          description: Required. Immutable. The type of field.
        name:
          description: Required. Partition field name must consist of letters, numbers, and underscores only, with a maximum of length of 256 characters, and must begin with a letter or underscore..
          type: string
      type: object
      id: GoogleCloudDataplexV1SchemaPartitionField
      description: 'Represents a key field within the entity''s partition structure. You could have up to 20 partition fields, but only the first 10 partitions have the filtering ability due to performance consideration. Note: Partition fields are immutable.'
    GoogleCloudDataplexV1DataQualityRuleUniquenessExpectation:
      properties: {}
      type: object
      id: GoogleCloudDataplexV1DataQualityRuleUniquenessExpectation
      description: Evaluates whether the column has duplicates.
    GoogleCloudDataplexV1Zone:
      type: object
      description: A zone represents a logical group of related assets within a lake. A zone can be used to map to organizational structure or represent stages of data readiness from raw to curated. It provides managing behavior that is shared or inherited by all contained assets.
      properties:
        name:
          readOnly: true
          type: string
          description: 'Output only. The relative resource name of the zone, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.'
        discoverySpec:
          description: Optional. Specification of the discovery feature applied to data in this zone.
          $ref: '#/components/schemas/GoogleCloudDataplexV1ZoneDiscoverySpec'
        type:
          enumDescriptions:
            - Zone type not specified.
            - A zone that contains data that needs further processing before it is considered generally ready for consumption and analytics workloads.
            - A zone that contains data that is considered to be ready for broader consumption and analytics workloads. Curated structured data stored in Cloud Storage must conform to certain file formats (parquet, avro and orc) and organized in a hive-compatible directory layout.
          description: Required. Immutable. The type of the zone.
          enum:
            - TYPE_UNSPECIFIED
            - RAW
            - CURATED
          type: string
        displayName:
          type: string
          description: Optional. User friendly display name.
        state:
          type: string
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - DELETING
            - ACTION_REQUIRED
          description: Output only. Current state of the zone.
          enumDescriptions:
            - State is not specified.
            - Resource is active, i.e., ready to use.
            - Resource is under creation.
            - Resource is under deletion.
            - Resource is active but has unresolved actions.
          readOnly: true
        assetStatus:
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetStatus'
          description: Output only. Aggregated status of the underlying assets of the zone.
          readOnly: true
        labels:
          type: object
          description: Optional. User defined labels for the zone.
          additionalProperties:
            type: string
        description:
          description: Optional. Description of the zone.
          type: string
        uid:
          description: Output only. System generated globally unique ID for the zone. This ID will be different if the zone is deleted and re-created with the same name.
          type: string
          readOnly: true
        updateTime:
          format: google-datetime
          type: string
          description: Output only. The time when the zone was last updated.
          readOnly: true
        resourceSpec:
          $ref: '#/components/schemas/GoogleCloudDataplexV1ZoneResourceSpec'
          description: Required. Specification of the resources that are referenced by the assets within this zone.
        createTime:
          description: Output only. The time when the zone was created.
          format: google-datetime
          type: string
          readOnly: true
      id: GoogleCloudDataplexV1Zone
    GoogleCloudDataplexV1RunTaskResponse:
      id: GoogleCloudDataplexV1RunTaskResponse
      type: object
      properties:
        job:
          $ref: '#/components/schemas/GoogleCloudDataplexV1Job'
          description: Jobs created by RunTask API.
    GoogleCloudDataplexV1ActionFailedSecurityPolicyApply:
      description: Failed to apply security policy to the managed resource(s) under a lake, zone or an asset. For a lake or zone resource, one or more underlying assets has a failure applying security policy to the associated managed resource.
      properties:
        asset:
          type: string
          description: Resource name of one of the assets with failing security policy application. Populated for a lake or zone resource only.
      type: object
      id: GoogleCloudDataplexV1ActionFailedSecurityPolicyApply
    GoogleCloudDataplexV1AssetSecurityStatus:
      type: object
      description: Security policy status of the asset. Data security policy, i.e., readers, writers & owners, should be specified in the lake/zone/asset IAM policy.
      properties:
        message:
          description: Additional information about the current state.
          type: string
        state:
          enumDescriptions:
            - State unspecified.
            - Security policy has been successfully applied to the attached resource.
            - Security policy is in the process of being applied to the attached resource.
            - Security policy could not be applied to the attached resource due to errors.
          enum:
            - STATE_UNSPECIFIED
            - READY
            - APPLYING
            - ERROR
          type: string
          description: The current state of the security policy applied to the attached resource.
        updateTime:
          type: string
          description: Last update time of the status.
          format: google-datetime
      id: GoogleCloudDataplexV1AssetSecurityStatus
    GoogleCloudDataplexV1AssetDiscoverySpec:
      properties:
        includePatterns:
          type: array
          description: Optional. The list of patterns to apply for selecting data to include during discovery if only a subset of the data should considered. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
          items:
            type: string
        excludePatterns:
          items:
            type: string
          type: array
          description: Optional. The list of patterns to apply for selecting data to exclude during discovery. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
        csvOptions:
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions'
          description: Optional. Configuration for CSV data.
        jsonOptions:
          description: Optional. Configuration for Json data.
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions'
        schedule:
          type: string
          description: 'Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running discovery periodically. Successive discovery runs must be scheduled at least 60 minutes apart. The default value is to run discovery every 60 minutes. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *.'
        enabled:
          description: Optional. Whether discovery is enabled.
          type: boolean
      id: GoogleCloudDataplexV1AssetDiscoverySpec
      description: Settings to manage the metadata discovery and publishing for an asset.
      type: object
    GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork:
      id: GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork
      properties:
        subNetwork:
          type: string
          description: Optional. The Cloud VPC sub-network in which the job is run.
        network:
          type: string
          description: Optional. The Cloud VPC network in which the job is run. By default, the Cloud VPC network named Default within the project is used.
        networkTags:
          description: Optional. List of network tags to apply to the job.
          items:
            type: string
          type: array
      type: object
      description: Cloud VPC Network used to run the infrastructure.
    GoogleCloudDataplexV1StorageFormatCsvOptions:
      type: object
      id: GoogleCloudDataplexV1StorageFormatCsvOptions
      properties:
        encoding:
          description: Optional. The character encoding of the data. Accepts "US-ASCII", "UTF-8", and "ISO-8859-1". Defaults to UTF-8 if unspecified.
          type: string
        headerRows:
          format: int32
          type: integer
          description: Optional. The number of rows to interpret as header rows that should be skipped when reading data rows. Defaults to 0.
        quote:
          type: string
          description: Optional. The character used to quote column values. Accepts '"' (double quotation mark) or ''' (single quotation mark). Defaults to '"' (double quotation mark) if unspecified.
        delimiter:
          type: string
          description: Optional. The delimiter used to separate values. Defaults to ','.
      description: Describes CSV and similar semi-structured data formats.
    GoogleCloudDataplexV1SessionEventQueryDetail:
      type: object
      id: GoogleCloudDataplexV1SessionEventQueryDetail
      properties:
        dataProcessedBytes:
          description: The data processed by the query.
          format: int64
          type: string
        duration:
          type: string
          description: Time taken for execution of the query.
          format: google-duration
        resultSizeBytes:
          type: string
          description: The size of results the query produced.
          format: int64
        queryText:
          type: string
          description: The query text executed.
        engine:
          enumDescriptions:
            - An unspecified Engine type.
            - Spark-sql engine is specified in Query.
            - BigQuery engine is specified in Query.
          description: Query Execution engine.
          type: string
          enum:
            - ENGINE_UNSPECIFIED
            - SPARK_SQL
            - BIGQUERY
        queryId:
          type: string
          description: The unique Query id identifying the query.
      description: Execution details of the query.
    GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime:
      properties:
        pythonPackages:
          type: array
          description: Optional. A list of python packages to be installed. Valid formats include Cloud Storage URI to a PIP installable library. For example, gs://bucket-name/my/path/to/lib.tar.gz
          items:
            type: string
        properties:
          description: Optional. Override to common configuration of open source components installed on the Dataproc cluster. The properties to set on daemon config files. Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. For more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).
          type: object
          additionalProperties:
            type: string
        javaJars:
          type: array
          items:
            type: string
          description: Optional. A list of Java JARS to add to the classpath. Valid input includes Cloud Storage URIs to Jar binaries. For example, gs://bucket-name/my/path/to/file.jar
        image:
          description: Optional. Container image to use.
          type: string
      type: object
      id: GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime
      description: Container Image Runtime Configuration used with Batch execution.
    GoogleCloudDataplexV1AssetResourceStatus:
      properties:
        message:
          description: Additional information about the current state.
          type: string
        updateTime:
          format: google-datetime
          type: string
          description: Last update time of the status.
        state:
          enumDescriptions:
            - State unspecified.
            - Resource does not have any errors.
            - Resource has errors.
          enum:
            - STATE_UNSPECIFIED
            - READY
            - ERROR
          description: The current state of the managed resource.
          type: string
      description: Status of the resource referenced by an asset.
      type: object
      id: GoogleCloudDataplexV1AssetResourceStatus
    GoogleCloudDataplexV1DataProfileResultProfileField:
      properties:
        profile:
          description: Profile information for the corresponding field.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfo'
        type:
          type: string
          description: 'The field data type. Possible values include: STRING BYTE INT64 INT32 INT16 DOUBLE FLOAT DECIMAL BOOLEAN BINARY TIMESTAMP DATE TIME NULL RECORD'
        mode:
          description: 'The mode of the field. Possible values include: REQUIRED, if it is a required field. NULLABLE, if it is an optional field. REPEATED, if it is a repeated field.'
          type: string
        name:
          type: string
          description: The name of the field.
      id: GoogleCloudDataplexV1DataProfileResultProfileField
      type: object
      description: A field within a table.
    GoogleCloudDataplexV1ActionUnauthorizedResource:
      id: GoogleCloudDataplexV1ActionUnauthorizedResource
      properties: {}
      type: object
      description: Action details for unauthorized resource issues raised to indicate that the service account associated with the lake instance is not authorized to access or manage the resource associated with an asset.
    GoogleCloudDataplexV1DiscoveryEvent:
      type: object
      properties:
        zoneId:
          description: The id of the associated zone.
          type: string
        partition:
          description: Details about the partition associated with the event.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DiscoveryEventPartitionDetails'
        message:
          description: The log message.
          type: string
        action:
          description: Details about the action associated with the event.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DiscoveryEventActionDetails'
        lakeId:
          type: string
          description: The id of the associated lake.
        dataLocation:
          type: string
          description: The data location associated with the event.
        config:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DiscoveryEventConfigDetails'
          description: Details about discovery configuration in effect.
        assetId:
          type: string
          description: The id of the associated asset.
        entity:
          description: Details about the entity associated with the event.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DiscoveryEventEntityDetails'
        type:
          enum:
            - EVENT_TYPE_UNSPECIFIED
            - CONFIG
            - ENTITY_CREATED
            - ENTITY_UPDATED
            - ENTITY_DELETED
            - PARTITION_CREATED
            - PARTITION_UPDATED
            - PARTITION_DELETED
          enumDescriptions:
            - An unspecified event type.
            - An event representing discovery configuration in effect.
            - An event representing a metadata entity being created.
            - An event representing a metadata entity being updated.
            - An event representing a metadata entity being deleted.
            - An event representing a partition being created.
            - An event representing a partition being updated.
            - An event representing a partition being deleted.
          description: The type of the event being logged.
          type: string
      id: GoogleCloudDataplexV1DiscoveryEvent
      description: The payload associated with Discovery data processing.
    GoogleCloudDataplexV1ListJobsResponse:
      type: object
      id: GoogleCloudDataplexV1ListJobsResponse
      description: List jobs response.
      properties:
        nextPageToken:
          type: string
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
        jobs:
          description: Jobs under a given task.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Job'
    GoogleCloudDataplexV1ZoneDiscoverySpec:
      description: Settings to manage the metadata discovery and publishing in a zone.
      type: object
      properties:
        jsonOptions:
          $ref: '#/components/schemas/GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions'
          description: Optional. Configuration for Json data.
        excludePatterns:
          description: Optional. The list of patterns to apply for selecting data to exclude during discovery. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
          type: array
          items:
            type: string
        schedule:
          type: string
          description: 'Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running discovery periodically. Successive discovery runs must be scheduled at least 60 minutes apart. The default value is to run discovery every 60 minutes. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *.'
        csvOptions:
          description: Optional. Configuration for CSV data.
          $ref: '#/components/schemas/GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions'
        enabled:
          type: boolean
          description: Required. Whether discovery is enabled.
        includePatterns:
          type: array
          description: Optional. The list of patterns to apply for selecting data to include during discovery if only a subset of the data should considered. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
          items:
            type: string
      id: GoogleCloudDataplexV1ZoneDiscoverySpec
    GoogleCloudDataplexV1ContentNotebook:
      type: object
      id: GoogleCloudDataplexV1ContentNotebook
      properties:
        kernelType:
          type: string
          description: Required. Kernel Type of the notebook.
          enum:
            - KERNEL_TYPE_UNSPECIFIED
            - PYTHON3
          enumDescriptions:
            - Kernel Type unspecified.
            - Python 3 Kernel.
      description: Configuration for Notebook content.
    GoogleCloudDataplexV1DataScanEventDataQualityResult:
      id: GoogleCloudDataplexV1DataScanEventDataQualityResult
      type: object
      properties:
        passed:
          description: Whether the data quality result was pass or not.
          type: boolean
        dimensionPassed:
          type: object
          additionalProperties:
            type: boolean
          description: The result of each dimension for data quality result. The key of the map is the name of the dimension. The value is the bool value depicting whether the dimension result was pass or not.
        rowCount:
          type: string
          description: The count of rows processed in the data scan job.
          format: int64
      description: Data quality result for data scan job.
    GoogleCloudDataplexV1Task:
      properties:
        executionSpec:
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskExecutionSpec'
          description: Required. Spec related to how a task is executed.
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time when the task was created.
        spark:
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskSparkTaskConfig'
          description: Config related to running custom Spark tasks.
        updateTime:
          format: google-datetime
          description: Output only. The time when the task was last updated.
          readOnly: true
          type: string
        executionStatus:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskExecutionStatus'
          description: Output only. Status of the latest task executions.
        name:
          description: 'Output only. The relative resource name of the task, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/ tasks/{task_id}.'
          type: string
          readOnly: true
        description:
          description: Optional. Description of the task.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. User-defined labels for the task.
          type: object
        uid:
          description: Output only. System generated globally unique ID for the task. This ID will be different if the task is deleted and re-created with the same name.
          readOnly: true
          type: string
        state:
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - DELETING
            - ACTION_REQUIRED
          description: Output only. Current state of the task.
          type: string
          enumDescriptions:
            - State is not specified.
            - Resource is active, i.e., ready to use.
            - Resource is under creation.
            - Resource is under deletion.
            - Resource is active but has unresolved actions.
        displayName:
          description: Optional. User friendly display name.
          type: string
        notebook:
          description: Config related to running scheduled Notebooks.
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskNotebookTaskConfig'
        triggerSpec:
          description: Required. Spec related to how often and when a task should be triggered.
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskTriggerSpec'
      type: object
      description: A task represents a user-visible job.
      id: GoogleCloudDataplexV1Task
    GoogleCloudDataplexV1DiscoveryEventEntityDetails:
      description: Details about the entity.
      properties:
        type:
          type: string
          description: The type of the entity resource.
          enum:
            - ENTITY_TYPE_UNSPECIFIED
            - TABLE
            - FILESET
          enumDescriptions:
            - An unspecified event type.
            - Entities representing structured data.
            - Entities representing unstructured data.
        entity:
          description: The name of the entity resource. The name is the fully-qualified resource name.
          type: string
      type: object
      id: GoogleCloudDataplexV1DiscoveryEventEntityDetails
    GoogleCloudDataplexV1ListZonesResponse:
      type: object
      description: List zones response.
      id: GoogleCloudDataplexV1ListZonesResponse
      properties:
        zones:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Zone'
          description: Zones under the given parent lake.
        nextPageToken:
          type: string
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
    GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation:
      id: GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation
      description: 'Evaluates whether the provided expression is true.The SQL expression needs to use BigQuery standard SQL syntax and should produce a scalar boolean result.Example: MIN(col1) >= 0'
      properties:
        sqlExpression:
          type: string
          description: The SQL expression.
      type: object
    GoogleCloudDataplexV1DiscoveryEventConfigDetails:
      id: GoogleCloudDataplexV1DiscoveryEventConfigDetails
      description: Details about configuration events.
      properties:
        parameters:
          additionalProperties:
            type: string
          description: A list of discovery configuration parameters in effect. The keys are the field paths within DiscoverySpec. Eg. includePatterns, excludePatterns, csvOptions.disableTypeInference, etc.
          type: object
      type: object
    GoogleCloudDataplexV1ListContentResponse:
      properties:
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
        content:
          description: Content under the given parent lake.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      type: object
      description: List content response.
      id: GoogleCloudDataplexV1ListContentResponse
    GoogleCloudDataplexV1ListSessionsResponse:
      description: List sessions response.
      type: object
      id: GoogleCloudDataplexV1ListSessionsResponse
      properties:
        sessions:
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Session'
          description: Sessions under a given environment.
          type: array
        nextPageToken:
          type: string
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
    GoogleCloudDataplexV1ActionInvalidDataPartition:
      id: GoogleCloudDataplexV1ActionInvalidDataPartition
      description: Action details for invalid or unsupported partitions detected by discovery.
      properties:
        expectedStructure:
          type: string
          enumDescriptions:
            - PartitionStructure unspecified.
            - Consistent hive-style partition definition (both raw and curated zone).
            - Hive style partition definition (curated zone only).
          description: The issue type of InvalidDataPartition.
          enum:
            - PARTITION_STRUCTURE_UNSPECIFIED
            - CONSISTENT_KEYS
            - HIVE_STYLE_KEYS
      type: object
    GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions:
      properties:
        headerRows:
          description: Optional. The number of rows to interpret as header rows that should be skipped when reading data rows.
          type: integer
          format: int32
        delimiter:
          description: Optional. The delimiter being used to separate values. This defaults to ','.
          type: string
        encoding:
          description: Optional. The character encoding of the data. The default is UTF-8.
          type: string
        disableTypeInference:
          type: boolean
          description: Optional. Whether to disable the inference of data type for CSV data. If true, all columns will be registered as strings.
      id: GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions
      description: Describe CSV and similar semi-structured data formats.
      type: object
    GoogleCloudDataplexV1DataProfileResultProfile:
      description: Contains name, type, mode and field type specific profile information.
      type: object
      properties:
        fields:
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileResultProfileField'
          description: List of fields with structural and profile information for each field.
          type: array
      id: GoogleCloudDataplexV1DataProfileResultProfile
    GoogleCloudDataplexV1Asset:
      type: object
      id: GoogleCloudDataplexV1Asset
      description: An asset represents a cloud resource that is being managed within a lake as a member of a zone.
      properties:
        name:
          readOnly: true
          type: string
          description: 'Output only. The relative resource name of the asset, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/assets/{asset_id}.'
        discoverySpec:
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetDiscoverySpec'
          description: Optional. Specification of the discovery feature applied to data referenced by this asset. When this spec is left unset, the asset will use the spec set on the parent zone.
        discoveryStatus:
          description: Output only. Status of the discovery feature applied to data referenced by this asset.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetDiscoveryStatus'
        updateTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time when the asset was last updated.
          type: string
        createTime:
          description: Output only. The time when the asset was created.
          type: string
          readOnly: true
          format: google-datetime
        description:
          description: Optional. Description of the asset.
          type: string
        resourceStatus:
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetResourceStatus'
          description: Output only. Status of the resource referenced by this asset.
          readOnly: true
        displayName:
          type: string
          description: Optional. User friendly display name.
        securityStatus:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetSecurityStatus'
          description: Output only. Status of the security policy applied to resource referenced by this asset.
        state:
          type: string
          readOnly: true
          description: Output only. Current state of the asset.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - DELETING
            - ACTION_REQUIRED
          enumDescriptions:
            - State is not specified.
            - Resource is active, i.e., ready to use.
            - Resource is under creation.
            - Resource is under deletion.
            - Resource is active but has unresolved actions.
        resourceSpec:
          description: Required. Specification of the resource that is referenced by this asset.
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetResourceSpec'
        labels:
          description: Optional. User defined labels for the asset.
          additionalProperties:
            type: string
          type: object
        uid:
          readOnly: true
          type: string
          description: Output only. System generated globally unique ID for the asset. This ID will be different if the asset is deleted and re-created with the same name.
    GoogleCloudDataplexV1ActionMissingResource:
      properties: {}
      description: Action details for resource references in assets that cannot be located.
      id: GoogleCloudDataplexV1ActionMissingResource
      type: object
    GoogleCloudDataplexV1Lake:
      description: A lake is a centralized repository for managing enterprise data across the organization distributed across many cloud projects, and stored in a variety of storage services such as Google Cloud Storage and BigQuery. The resources attached to a lake are referred to as managed resources. Data within these managed resources can be structured or unstructured. A lake provides data admins with tools to organize, secure and manage their data at scale, and provides data scientists and data engineers an integrated experience to easily search, discover, analyze and transform data and associated metadata.
      type: object
      properties:
        serviceAccount:
          readOnly: true
          type: string
          description: Output only. Service account associated with this lake. This service account must be authorized to access or operate on resources managed by the lake.
        metastoreStatus:
          description: Output only. Metastore status of the lake.
          $ref: '#/components/schemas/GoogleCloudDataplexV1LakeMetastoreStatus'
          readOnly: true
        name:
          readOnly: true
          description: 'Output only. The relative resource name of the lake, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}.'
          type: string
        displayName:
          type: string
          description: Optional. User friendly display name.
        assetStatus:
          readOnly: true
          description: Output only. Aggregated status of the underlying assets of the lake.
          $ref: '#/components/schemas/GoogleCloudDataplexV1AssetStatus'
        metastore:
          description: Optional. Settings to manage lake and Dataproc Metastore service instance association.
          $ref: '#/components/schemas/GoogleCloudDataplexV1LakeMetastore'
        labels:
          additionalProperties:
            type: string
          type: object
          description: Optional. User-defined labels for the lake.
        state:
          type: string
          enumDescriptions:
            - State is not specified.
            - Resource is active, i.e., ready to use.
            - Resource is under creation.
            - Resource is under deletion.
            - Resource is active but has unresolved actions.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - DELETING
            - ACTION_REQUIRED
          description: Output only. Current state of the lake.
          readOnly: true
        description:
          type: string
          description: Optional. Description of the lake.
        updateTime:
          readOnly: true
          description: Output only. The time when the lake was last updated.
          format: google-datetime
          type: string
        uid:
          readOnly: true
          description: Output only. System generated globally unique ID for the lake. This ID will be different if the lake is deleted and re-created with the same name.
          type: string
        createTime:
          format: google-datetime
          readOnly: true
          description: Output only. The time when the lake was created.
          type: string
      id: GoogleCloudDataplexV1Lake
    GoogleCloudDataplexV1Partition:
      properties:
        name:
          readOnly: true
          type: string
          description: Output only. Partition values used in the HTTP URL must be double encoded. For example, url_encode(url_encode(value)) can be used to encode "US:CA/CA#Sunnyvale so that the request URL ends with "/partitions/US%253ACA/CA%2523Sunnyvale". The name field in the response retains the encoded format.
        values:
          items:
            type: string
          type: array
          description: Required. Immutable. The set of values representing the partition, which correspond to the partition schema defined in the parent entity.
        location:
          description: Required. Immutable. The location of the entity data within the partition, for example, gs://bucket/path/to/entity/key1=value1/key2=value2. Or projects//datasets//tables/
          type: string
        etag:
          type: string
          description: Optional. The etag for this partition.
      type: object
      description: Represents partition metadata contained within entity instances.
      id: GoogleCloudDataplexV1Partition
    GoogleCloudDataplexV1DataQualityRuleRangeExpectation:
      id: GoogleCloudDataplexV1DataQualityRuleRangeExpectation
      description: Evaluates whether each column value lies between a specified range.
      type: object
      properties:
        strictMinEnabled:
          description: Optional. Whether each value needs to be strictly greater than ('>') the minimum, or if equality is allowed.Only relevant if a min_value has been defined. Default = false.
          type: boolean
        strictMaxEnabled:
          description: Optional. Whether each value needs to be strictly lesser than ('<') the maximum, or if equality is allowed.Only relevant if a max_value has been defined. Default = false.
          type: boolean
        maxValue:
          type: string
          description: Optional. The maximum column value allowed for a row to pass this validation. At least one of min_value and max_value need to be provided.
        minValue:
          description: Optional. The minimum column value allowed for a row to pass this validation. At least one of min_value and max_value need to be provided.
          type: string
    GoogleCloudDataplexV1EnvironmentSessionSpec:
      properties:
        maxIdleDuration:
          format: google-duration
          type: string
          description: Optional. The idle time configuration of the session. The session will be auto-terminated at the end of this period.
        enableFastStartup:
          description: Optional. If True, this causes sessions to be pre-created and available for faster startup to enable interactive exploration use-cases. This defaults to False to avoid additional billed charges. These can only be set to True for the environment with name set to "default", and with default configuration.
          type: boolean
      id: GoogleCloudDataplexV1EnvironmentSessionSpec
      type: object
    GoogleCloudDataplexV1TaskInfrastructureSpec:
      type: object
      description: Configuration for the underlying infrastructure used to run workloads.
      id: GoogleCloudDataplexV1TaskInfrastructureSpec
      properties:
        containerImage:
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime'
          description: Container Image Runtime Configuration.
        batch:
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources'
          description: Compute resources needed for a Task when using Dataproc Serverless.
        vpcNetwork:
          $ref: '#/components/schemas/GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork'
          description: Vpc network.
    GoogleLongrunningListOperationsResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        operations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
          description: A list of operations that matches the specified filter in the request.
      description: The response message for Operations.ListOperations.
      id: GoogleLongrunningListOperationsResponse
    GoogleCloudDataplexV1EnvironmentInfrastructureSpec:
      properties:
        compute:
          description: Optional. Compute resources needed for analyze interactive workloads.
          $ref: '#/components/schemas/GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources'
        osImage:
          description: Required. Software Runtime Configuration for analyze interactive workloads.
          $ref: '#/components/schemas/GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime'
      id: GoogleCloudDataplexV1EnvironmentInfrastructureSpec
      type: object
      description: Configuration for the underlying infrastructure used to run workloads.
    GoogleIamV1AuditLogConfig:
      type: object
      id: GoogleIamV1AuditLogConfig
      description: 'Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables ''DATA_READ'' and ''DATA_WRITE'' logging, while exempting jose@example.com from DATA_READ logging.'
      properties:
        exemptedMembers:
          type: array
          items:
            type: string
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
        logType:
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          type: string
          description: The log type that this config enables.
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
    GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions:
      id: GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions
      properties:
        disableTypeInference:
          type: boolean
          description: Optional. Whether to disable the inference of data type for Json data. If true, all columns will be registered as their primitive types (strings, number or boolean).
        encoding:
          type: string
          description: Optional. The character encoding of the data. The default is UTF-8.
      description: Describe JSON data format.
      type: object
    GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions:
      type: object
      properties:
        disableTypeInference:
          type: boolean
          description: Optional. Whether to disable the inference of data type for CSV data. If true, all columns will be registered as strings.
        headerRows:
          format: int32
          description: Optional. The number of rows to interpret as header rows that should be skipped when reading data rows.
          type: integer
        delimiter:
          description: Optional. The delimiter being used to separate values. This defaults to ','.
          type: string
        encoding:
          description: Optional. The character encoding of the data. The default is UTF-8.
          type: string
      description: Describe CSV and similar semi-structured data formats.
      id: GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions
    GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValue:
      description: Top N non-null values in the scanned data.
      id: GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValue
      properties:
        value:
          type: string
          description: String value of a top N non-null value.
        count:
          format: int64
          description: Count of the corresponding value in the scanned data.
          type: string
      type: object
    GoogleCloudDataplexV1DiscoveryEventPartitionDetails:
      description: Details about the partition.
      properties:
        entity:
          type: string
          description: The name to the containing entity resource. The name is the fully-qualified resource name.
        type:
          type: string
          enum:
            - ENTITY_TYPE_UNSPECIFIED
            - TABLE
            - FILESET
          description: The type of the containing entity resource.
          enumDescriptions:
            - An unspecified event type.
            - Entities representing structured data.
            - Entities representing unstructured data.
        partition:
          description: The name to the partition resource. The name is the fully-qualified resource name.
          type: string
        sampledDataLocations:
          description: The locations of the data items (e.g., a Cloud Storage objects) sampled for metadata inference.
          items:
            type: string
          type: array
      id: GoogleCloudDataplexV1DiscoveryEventPartitionDetails
      type: object
    GoogleCloudDataplexV1DataScanExecutionSpec:
      id: GoogleCloudDataplexV1DataScanExecutionSpec
      properties:
        trigger:
          $ref: '#/components/schemas/GoogleCloudDataplexV1Trigger'
          description: Optional. Spec related to how often and when a scan should be triggered.If not specified, the default is OnDemand, which means the scan will not run until the user calls RunDataScan API.
        field:
          type: string
          description: Immutable. The unnested field (of type Date or Timestamp) that contains values which monotonically increase over time.If not specified, a data scan will run for all data in the table.
      type: object
      description: DataScan execution settings.
    GoogleCloudDataplexV1OperationMetadata:
      id: GoogleCloudDataplexV1OperationMetadata
      description: Represents the metadata of a long-running operation.
      properties:
        statusMessage:
          readOnly: true
          type: string
          description: Output only. Human-readable status of the operation, if any.
        createTime:
          description: Output only. The time the operation was created.
          type: string
          readOnly: true
          format: google-datetime
        verb:
          type: string
          readOnly: true
          description: Output only. Name of the verb executed by the operation.
        apiVersion:
          type: string
          description: Output only. API version used to start the operation.
          readOnly: true
        requestedCancellation:
          type: boolean
          readOnly: true
          description: Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to Code.CANCELLED.
        target:
          type: string
          readOnly: true
          description: Output only. Server-defined resource path for the target of the operation.
        endTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The time the operation finished running.
      type: object
    GoogleCloudDataplexV1DataScanExecutionStatus:
      properties:
        latestJobEndTime:
          type: string
          description: The time when the latest DataScanJob ended.
          format: google-datetime
        latestJobStartTime:
          format: google-datetime
          description: The time when the latest DataScanJob started.
          type: string
      type: object
      id: GoogleCloudDataplexV1DataScanExecutionStatus
      description: Status of the data scan execution.
    GoogleCloudDataplexV1ActionInvalidDataOrganization:
      id: GoogleCloudDataplexV1ActionInvalidDataOrganization
      description: Action details for invalid data arrangement.
      properties: {}
      type: object
    GoogleCloudDataplexV1DiscoveryEventActionDetails:
      properties:
        type:
          type: string
          description: The type of action. Eg. IncompatibleDataSchema, InvalidDataFormat
      description: Details about the action.
      type: object
      id: GoogleCloudDataplexV1DiscoveryEventActionDetails
    GoogleCloudDataplexV1DataScanJob:
      description: A DataScanJob represents an instance of DataScan execution.
      properties:
        dataQualitySpec:
          description: Output only. DataQualityScan related setting.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualitySpec'
        dataQualityResult:
          description: Output only. The result of the data quality scan.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityResult'
          readOnly: true
        dataProfileSpec:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileSpec'
          readOnly: true
          description: Output only. DataProfileScan related setting.
        dataProfileResult:
          readOnly: true
          description: Output only. The result of the data profile scan.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileResult'
        uid:
          readOnly: true
          type: string
          description: Output only. System generated globally unique ID for the DataScanJob.
        startTime:
          description: Output only. The time when the DataScanJob was started.
          format: google-datetime
          type: string
          readOnly: true
        state:
          readOnly: true
          enumDescriptions:
            - The DataScanJob state is unspecified.
            - The DataScanJob is running.
            - The DataScanJob is canceling.
            - The DataScanJob cancellation was successful.
            - The DataScanJob completed successfully.
            - The DataScanJob is no longer running due to an error.
            - The DataScanJob has been created but not started to run yet.
          enum:
            - STATE_UNSPECIFIED
            - RUNNING
            - CANCELING
            - CANCELLED
            - SUCCEEDED
            - FAILED
            - PENDING
          description: Output only. Execution state for the DataScanJob.
          type: string
        message:
          type: string
          readOnly: true
          description: Output only. Additional information about the current state.
        name:
          type: string
          readOnly: true
          description: 'Output only. The relative resource name of the DataScanJob, of the form: projects/{project}/locations/{location_id}/dataScans/{datascan_id}/jobs/{job_id}, where project refers to a project_id or project_number and location_id refers to a GCP region.'
        endTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time when the DataScanJob ended.
        type:
          enum:
            - DATA_SCAN_TYPE_UNSPECIFIED
            - DATA_QUALITY
            - DATA_PROFILE
          readOnly: true
          type: string
          enumDescriptions:
            - The DataScan type is unspecified.
            - Data Quality scan.
            - Data Profile scan.
          description: Output only. The type of the parent DataScan.
      type: object
      id: GoogleCloudDataplexV1DataScanJob
    GoogleCloudDataplexV1RunDataScanResponse:
      description: Run DataScan Response.
      id: GoogleCloudDataplexV1RunDataScanResponse
      type: object
      properties:
        job:
          description: DataScanJob created by RunDataScan request.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataScanJob'
    GoogleCloudDataplexV1ActionIncompatibleDataSchema:
      description: Action details for incompatible schemas detected by discovery.
      id: GoogleCloudDataplexV1ActionIncompatibleDataSchema
      properties:
        table:
          type: string
          description: The name of the table containing invalid data.
        newSchema:
          description: The new and incompatible schema within the table. The schema is provided as a JSON formatted structured listing columns and data types.
          type: string
        schemaChange:
          enumDescriptions:
            - Schema change unspecified.
            - Newly discovered schema is incompatible with existing schema.
            - Newly discovered schema has changed from existing schema for data in a curated zone.
          description: Whether the action relates to a schema that is incompatible or modified.
          enum:
            - SCHEMA_CHANGE_UNSPECIFIED
            - INCOMPATIBLE
            - MODIFIED
          type: string
        sampledDataLocations:
          description: The list of data locations sampled and used for format/schema inference.
          type: array
          items:
            type: string
        existingSchema:
          type: string
          description: The existing and expected schema of the table. The schema is provided as a JSON formatted structure listing columns and data types.
      type: object
    GoogleLongrunningOperation:
      description: This resource represents a long-running operation that is the result of a network API call.
      type: object
      properties:
        name:
          type: string
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the name should be a resource name ending with operations/{unique_id}.
        done:
          description: If the value is false, it means the operation is still in progress. If true, the operation is completed, and either error or response is available.
          type: boolean
        error:
          description: The error result of the operation in case of failure or cancellation.
          $ref: '#/components/schemas/GoogleRpcStatus'
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
        response:
          description: The normal response of the operation in case of success. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse.
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
      id: GoogleLongrunningOperation
    GoogleCloudDataplexV1ListTasksResponse:
      type: object
      properties:
        unreachableLocations:
          type: array
          description: Locations that could not be reached.
          items:
            type: string
        tasks:
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Task'
          description: Tasks under the given parent lake.
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
      id: GoogleCloudDataplexV1ListTasksResponse
      description: List tasks response.
    GoogleCloudDataplexV1TaskExecutionStatus:
      id: GoogleCloudDataplexV1TaskExecutionStatus
      type: object
      properties:
        latestJob:
          description: Output only. latest job execution
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1Job'
        updateTime:
          type: string
          description: Output only. Last update time of the status.
          readOnly: true
          format: google-datetime
      description: Status of the task execution (e.g. Jobs).
    GoogleCloudDataplexV1DataScanEvent:
      properties:
        endTime:
          format: google-datetime
          description: The time when the data scan job finished.
          type: string
        dataQuality:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataScanEventDataQualityResult'
          description: Data quality result for data quality type data scan.
        jobId:
          type: string
          description: The identifier of the specific data scan job this log entry is for.
        message:
          type: string
          description: The message describing the data scan job event.
        scope:
          type: string
          enum:
            - SCOPE_UNSPECIFIED
            - FULL
            - INCREMENTAL
          enumDescriptions:
            - An unspecified scope type.
            - Data scan runs on all of the data.
            - Data scan runs on incremental data.
          description: The scope of the data scan (e.g. full, incremental).
        state:
          description: The status of the data scan job.
          enumDescriptions:
            - Unspecified job state.
            - Data scan started.
            - Data scan successfully completed.
            - Data scan was unsuccessful.
            - Data scan was cancelled.
          enum:
            - STATE_UNSPECIFIED
            - STARTED
            - SUCCEEDED
            - FAILED
            - CANCELLED
          type: string
        type:
          type: string
          enumDescriptions:
            - An unspecified data scan type.
            - Data scan for data profile.
            - Data scan for data quality.
          enum:
            - SCAN_TYPE_UNSPECIFIED
            - DATA_PROFILE
            - DATA_QUALITY
          description: The type of the data scan.
        dataProfile:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataScanEventDataProfileResult'
          description: Data profile result for data profile type data scan.
        startTime:
          description: The time when the data scan job started to run.
          type: string
          format: google-datetime
        dataSource:
          type: string
          description: The data source of the data scan
        specVersion:
          type: string
          description: A version identifier of the spec which was used to execute this job.
        trigger:
          enumDescriptions:
            - An unspecified trigger type.
            - Data scan triggers on demand.
            - Data scan triggers as per schedule.
          enum:
            - TRIGGER_UNSPECIFIED
            - ON_DEMAND
            - SCHEDULE
          description: The trigger type of the data scan job.
          type: string
      type: object
      id: GoogleCloudDataplexV1DataScanEvent
      description: These messages contain information about the execution of a datascan. The monitored resource is 'DataScan'
    GoogleCloudDataplexV1DataScan:
      type: object
      properties:
        executionStatus:
          readOnly: true
          description: Output only. Status of the data scan execution.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataScanExecutionStatus'
        uid:
          readOnly: true
          type: string
          description: Output only. System generated globally unique ID for the scan. This ID will be different if the scan is deleted and re-created with the same name.
        name:
          type: string
          readOnly: true
          description: 'Output only. The relative resource name of the scan, of the form: projects/{project}/locations/{location_id}/dataScans/{datascan_id}, where project refers to a project_id or project_number and location_id refers to a GCP region.'
        dataProfileResult:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileResult'
          description: Output only. The result of the data profile scan.
        displayName:
          type: string
          description: Optional. User friendly display name. Must be between 1-256 characters.
        type:
          enumDescriptions:
            - The DataScan type is unspecified.
            - Data Quality scan.
            - Data Profile scan.
          enum:
            - DATA_SCAN_TYPE_UNSPECIFIED
            - DATA_QUALITY
            - DATA_PROFILE
          description: Output only. The type of DataScan.
          readOnly: true
          type: string
        dataQualitySpec:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualitySpec'
          description: DataQualityScan related setting.
        updateTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time when the scan was last updated.
        description:
          type: string
          description: Optional. Description of the scan. Must be between 1-1024 characters.
        labels:
          description: Optional. User-defined labels for the scan.
          additionalProperties:
            type: string
          type: object
        data:
          description: Required. The data source for DataScan.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataSource'
        dataQualityResult:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityResult'
          description: Output only. The result of the data quality scan.
          readOnly: true
        state:
          description: Output only. Current state of the DataScan.
          type: string
          readOnly: true
          enumDescriptions:
            - State is not specified.
            - Resource is active, i.e., ready to use.
            - Resource is under creation.
            - Resource is under deletion.
            - Resource is active but has unresolved actions.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - DELETING
            - ACTION_REQUIRED
        executionSpec:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataScanExecutionSpec'
          description: Optional. DataScan execution settings.If not specified, the fields in it will use their default values.
        dataProfileSpec:
          description: DataProfileScan related setting.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataProfileSpec'
        createTime:
          description: Output only. The time when the scan was created.
          type: string
          format: google-datetime
          readOnly: true
      description: 'Represents a user-visible job which provides the insights for the related data source.For example: Data Quality: generates queries based on the rules and runs against the data to get data quality check results. Data Profile: analyzes the data in table(s) and generates insights about the structure, content and relationships (such as null percent, cardinality, min/max/mean, etc).'
      id: GoogleCloudDataplexV1DataScan
    Empty:
      type: object
      properties: {}
      id: Empty
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } '
    GoogleCloudDataplexV1DataQualitySpec:
      id: GoogleCloudDataplexV1DataQualitySpec
      properties:
        rules:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityRule'
          description: The list of rules to evaluate against a data source. At least one rule is required.
      type: object
      description: DataQualityScan related setting.
    GoogleCloudDataplexV1ListPartitionsResponse:
      description: List metadata partitions response.
      id: GoogleCloudDataplexV1ListPartitionsResponse
      properties:
        nextPageToken:
          type: string
          description: Token to retrieve the next page of results, or empty if there are no remaining results in the list.
        partitions:
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Partition'
          description: Partitions under the specified parent entity.
          type: array
      type: object
    GoogleCloudDataplexV1StorageFormat:
      type: object
      properties:
        json:
          description: Optional. Additional information about CSV formatted data.
          $ref: '#/components/schemas/GoogleCloudDataplexV1StorageFormatJsonOptions'
        format:
          readOnly: true
          enum:
            - FORMAT_UNSPECIFIED
            - PARQUET
            - AVRO
            - ORC
            - CSV
            - JSON
            - IMAGE
            - AUDIO
            - VIDEO
            - TEXT
            - TFRECORD
            - OTHER
            - UNKNOWN
          type: string
          description: Output only. The data format associated with the stored data, which represents content type values. The value is inferred from mime type.
          enumDescriptions:
            - Format unspecified.
            - Parquet-formatted structured data.
            - Avro-formatted structured data.
            - Orc-formatted structured data.
            - Csv-formatted semi-structured data.
            - Json-formatted semi-structured data.
            - Image data formats (such as jpg and png).
            - Audio data formats (such as mp3, and wav).
            - Video data formats (such as mp4 and mpg).
            - Textual data formats (such as txt and xml).
            - TensorFlow record format.
            - Data that doesn't match a specific format.
            - Data of an unknown format.
        iceberg:
          description: Optional. Additional information about iceberg tables.
          $ref: '#/components/schemas/GoogleCloudDataplexV1StorageFormatIcebergOptions'
        csv:
          description: Optional. Additional information about CSV formatted data.
          $ref: '#/components/schemas/GoogleCloudDataplexV1StorageFormatCsvOptions'
        mimeType:
          description: 'Required. The mime type descriptor for the data. Must match the pattern {type}/{subtype}. Supported values: application/x-parquet application/x-avro application/x-orc application/x-tfrecord application/x-parquet+iceberg application/x-avro+iceberg application/x-orc+iceberg application/json application/{subtypes} text/csv text/ image/{image subtype} video/{video subtype} audio/{audio subtype}'
          type: string
        compressionFormat:
          type: string
          enumDescriptions:
            - CompressionFormat unspecified. Implies uncompressed data.
            - GZip compressed set of files.
            - BZip2 compressed set of files.
          description: Optional. The compression type associated with the stored data. If unspecified, the data is uncompressed.
          enum:
            - COMPRESSION_FORMAT_UNSPECIFIED
            - GZIP
            - BZIP2
      description: Describes the format of the data within its storage location.
      id: GoogleCloudDataplexV1StorageFormat
    GoogleCloudDataplexV1ActionInvalidDataFormat:
      description: Action details for invalid or unsupported data files detected by discovery.
      id: GoogleCloudDataplexV1ActionInvalidDataFormat
      type: object
      properties:
        newFormat:
          type: string
          description: The new unexpected data format within the entity.
        expectedFormat:
          description: The expected data format of the entity.
          type: string
        sampledDataLocations:
          type: array
          description: The list of data locations sampled and used for format/schema inference.
          items:
            type: string
    GoogleCloudDataplexV1DataQualityRuleSetExpectation:
      description: Evaluates whether each column value is contained by a specified set.
      id: GoogleCloudDataplexV1DataQualityRuleSetExpectation
      properties:
        values:
          description: Expected values for the column value.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDataplexV1StorageFormatJsonOptions:
      description: Describes JSON data format.
      type: object
      properties:
        encoding:
          type: string
          description: Optional. The character encoding of the data. Accepts "US-ASCII", "UTF-8" and "ISO-8859-1". Defaults to UTF-8 if not specified.
      id: GoogleCloudDataplexV1StorageFormatJsonOptions
    GoogleCloudDataplexV1ListEnvironmentsResponse:
      properties:
        nextPageToken:
          type: string
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
        environments:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDataplexV1Environment'
          description: Environments under the given parent lake.
      id: GoogleCloudDataplexV1ListEnvironmentsResponse
      description: List environments response.
      type: object
    GoogleCloudDataplexV1TriggerOnDemand:
      id: GoogleCloudDataplexV1TriggerOnDemand
      properties: {}
      type: object
      description: The scan runs once via RunDataScan API.
    GoogleCloudLocationLocation:
      description: A resource that represents Google Cloud Platform location.
      properties:
        name:
          type: string
          description: 'Resource name for the location, which may vary between implementations. For example: "projects/example-project/locations/us-east1"'
        displayName:
          type: string
          description: The friendly name for this location, typically a nearby city name. For example, "Tokyo".
        metadata:
          type: object
          description: Service-specific metadata. For example the available capacity at the given location.
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        labels:
          type: object
          additionalProperties:
            type: string
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"} '
        locationId:
          type: string
          description: 'The canonical id for this location. For example: "us-east1".'
      id: GoogleCloudLocationLocation
      type: object
    GoogleCloudDataplexV1SessionEvent:
      id: GoogleCloudDataplexV1SessionEvent
      description: These messages contain information about sessions within an environment. The monitored resource is 'Environment'.
      properties:
        eventSucceeded:
          type: boolean
          description: The status of the event.
        sessionId:
          description: Unique identifier for the session.
          type: string
        query:
          description: The execution details of the query.
          $ref: '#/components/schemas/GoogleCloudDataplexV1SessionEventQueryDetail'
        unassignedDuration:
          format: google-duration
          type: string
          description: The idle duration of a warm pooled session before it is assigned to user.
        fastStartupEnabled:
          type: boolean
          description: If the session is associated with an environment with fast startup enabled, and was created before being assigned to a user.
        message:
          type: string
          description: The log message.
        type:
          type: string
          description: The type of the event.
          enumDescriptions:
            - An unspecified event type.
            - Event when the session is assigned to a user.
            - Event for stop of a session.
            - Query events in the session.
            - Event for creation of a cluster. It is not yet assigned to a user. This comes before START in the sequence
          enum:
            - EVENT_TYPE_UNSPECIFIED
            - START
            - STOP
            - QUERY
            - CREATE
        userId:
          description: The information about the user that created the session. It will be the email address of the user.
          type: string
      type: object
    GoogleTypeExpr:
      properties:
        location:
          description: Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
          type: string
        description:
          description: Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
          type: string
        title:
          type: string
          description: Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
        expression:
          type: string
          description: Textual representation of an expression in Common Expression Language syntax.
      type: object
      description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec.Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != ''private'' && document.type != ''internal''" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "''New message received at '' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.'
      id: GoogleTypeExpr
    GoogleCloudDataplexV1TaskTriggerSpec:
      description: Task scheduling and trigger settings.
      id: GoogleCloudDataplexV1TaskTriggerSpec
      type: object
      properties:
        maxRetries:
          type: integer
          format: int32
          description: Optional. Number of retry attempts before aborting. Set to zero to never attempt to retry a failed task.
        schedule:
          description: 'Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running tasks periodically. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or "TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *. This field is required for RECURRING tasks.'
          type: string
        type:
          enum:
            - TYPE_UNSPECIFIED
            - ON_DEMAND
            - RECURRING
          description: Required. Immutable. Trigger type of the user-specified Task.
          enumDescriptions:
            - Unspecified trigger type.
            - The task runs one-time shortly after Task Creation.
            - The task is scheduled to run periodically.
          type: string
        startTime:
          format: google-datetime
          description: Optional. The first run of the task will be after this time. If not specified, the task will run shortly after being submitted if ON_DEMAND and based on the schedule if RECURRING.
          type: string
        disabled:
          type: boolean
          description: Optional. Prevent the task from executing. This does not cancel already running tasks. It is intended to temporarily disable RECURRING tasks.
    GoogleCloudDataplexV1StorageAccess:
      id: GoogleCloudDataplexV1StorageAccess
      description: Describes the access mechanism of the data within its storage location.
      type: object
      properties:
        read:
          description: Output only. Describes the read access mechanism of the data. Not user settable.
          enum:
            - ACCESS_MODE_UNSPECIFIED
            - DIRECT
            - MANAGED
          type: string
          enumDescriptions:
            - Access mode unspecified.
            - Default. Data is accessed directly using storage APIs.
            - Data is accessed through a managed interface using BigQuery APIs.
          readOnly: true
    GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources:
      properties:
        executorsCount:
          type: integer
          description: Optional. Total number of job executors. Executor Count should be between 2 and 100. Default=2
          format: int32
        maxExecutorsCount:
          type: integer
          format: int32
          description: Optional. Max configurable executors. If max_executors_count > executors_count, then auto-scaling is enabled. Max Executor Count should be between 2 and 1000. Default=1000
      type: object
      description: Batch compute resources associated with the task.
      id: GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources
    GoogleCloudDataplexV1ZoneResourceSpec:
      description: Settings for resources attached as assets within a zone.
      type: object
      id: GoogleCloudDataplexV1ZoneResourceSpec
      properties:
        locationType:
          enum:
            - LOCATION_TYPE_UNSPECIFIED
            - SINGLE_REGION
            - MULTI_REGION
          enumDescriptions:
            - Unspecified location type.
            - Resources that are associated with a single region.
            - Resources that are associated with a multi-region location.
          description: Required. Immutable. The location type of the resources that are allowed to be attached to the assets within this zone.
          type: string
    GoogleCloudDataplexV1Job:
      id: GoogleCloudDataplexV1Job
      type: object
      properties:
        state:
          enumDescriptions:
            - The job state is unknown.
            - The job is running.
            - The job is cancelling.
            - The job cancellation was successful.
            - The job completed successfully.
            - The job is no longer running due to an error.
            - The job was cancelled outside of Dataplex.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - RUNNING
            - CANCELLING
            - CANCELLED
            - SUCCEEDED
            - FAILED
            - ABORTED
          description: Output only. Execution state for the job.
          readOnly: true
        message:
          type: string
          description: Output only. Additional information about the current state.
          readOnly: true
        retryCount:
          readOnly: true
          format: uint32
          type: integer
          description: Output only. The number of times the job has been retried (excluding the initial attempt).
        name:
          readOnly: true
          type: string
          description: 'Output only. The relative resource name of the job, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/tasks/{task_id}/jobs/{job_id}.'
        endTime:
          type: string
          description: Output only. The time when the job ended.
          format: google-datetime
          readOnly: true
        startTime:
          description: Output only. The time when the job was started.
          readOnly: true
          type: string
          format: google-datetime
        serviceJob:
          readOnly: true
          type: string
          description: Output only. The full resource name for the job run under a particular service.
        service:
          readOnly: true
          type: string
          enumDescriptions:
            - Service used to run the job is unspecified.
            - Dataproc service is used to run this job.
          description: Output only. The underlying service running a job.
          enum:
            - SERVICE_UNSPECIFIED
            - DATAPROC
        uid:
          type: string
          readOnly: true
          description: Output only. System generated globally unique ID for the job.
      description: A job represents an instance of a task.
    GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfo:
      type: object
      properties:
        standardDeviation:
          format: double
          type: number
          description: Standard deviation of non-null values in the scanned data. NaN, if the field has a NaN.
        quartiles:
          items:
            format: int64
            type: string
          type: array
          description: 'A quartile divides the number of data points into four parts, or quarters, of more-or-less equal size. Three main quartiles used are: The first quartile (Q1) splits off the lowest 25% of data from the highest 75%. It is also known as the lower or 25th empirical quartile, as 25% of the data is below this point. The second quartile (Q2) is the median of a data set. So, 50% of the data lies below this point. The third quartile (Q3) splits off the highest 25% of data from the lowest 75%. It is known as the upper or 75th empirical quartile, as 75% of the data lies below this point. Here, the quartiles is provided as an ordered list of quartile values for the scanned data, occurring in order Q1, median, Q3.'
        average:
          description: Average of non-null values in the scanned data. NaN, if the field has a NaN.
          type: number
          format: double
        max:
          description: Maximum of non-null values in the scanned data. NaN, if the field has a NaN.
          type: string
          format: int64
        min:
          format: int64
          type: string
          description: Minimum of non-null values in the scanned data. NaN, if the field has a NaN.
      id: GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfo
      description: The profile information for an integer type field.
    GoogleCloudDataplexV1DataQualityRuleNonNullExpectation:
      properties: {}
      id: GoogleCloudDataplexV1DataQualityRuleNonNullExpectation
      type: object
      description: Evaluates whether each column value is null.
    GoogleCloudDataplexV1ContentSqlScript:
      type: object
      description: Configuration for the Sql Script content.
      id: GoogleCloudDataplexV1ContentSqlScript
      properties:
        engine:
          enum:
            - QUERY_ENGINE_UNSPECIFIED
            - SPARK
          enumDescriptions:
            - Value was unspecified.
            - Spark SQL Query.
          type: string
          description: Required. Query Engine to be used for the Sql Query.
    GoogleCloudDataplexV1TriggerSchedule:
      type: object
      description: The scan is scheduled to run periodically.
      properties:
        cron:
          description: 'Required. Cron (https://en.wikipedia.org/wiki/Cron) schedule for running scans periodically.To explicitly set a timezone in the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or "TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database (wikipedia (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)). For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *.This field is required for Schedule scans.'
          type: string
      id: GoogleCloudDataplexV1TriggerSchedule
    GoogleCloudDataplexV1AssetStatus:
      description: Aggregated status of the underlying assets of a lake or zone.
      properties:
        activeAssets:
          description: Number of active assets.
          type: integer
          format: int32
        securityPolicyApplyingAssets:
          description: Number of assets that are in process of updating the security policy on attached resources.
          type: integer
          format: int32
        updateTime:
          format: google-datetime
          type: string
          description: Last update time of the status.
      id: GoogleCloudDataplexV1AssetStatus
      type: object
    GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation:
      type: object
      description: 'Evaluates whether each row passes the specified condition.The SQL expression needs to use BigQuery standard SQL syntax and should produce a boolean value per row as the result.Example: col1 >= 0 AND col2 < 10'
      properties:
        sqlExpression:
          type: string
          description: The SQL expression.
      id: GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation
    GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfo:
      id: GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfo
      properties:
        minLength:
          format: int64
          type: string
          description: Minimum length of non-null values in the scanned data.
        averageLength:
          format: double
          type: number
          description: Average length of non-null values in the scanned data.
        maxLength:
          type: string
          format: int64
          description: Maximum length of non-null values in the scanned data.
      description: The profile information for a string type field.
      type: object
    GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation:
      type: object
      properties:
        strictMinEnabled:
          type: boolean
          description: Whether column statistic needs to be strictly greater than ('>') the minimum, or if equality is allowed.Only relevant if a min_value has been defined. Default = false.
        maxValue:
          type: string
          description: The maximum column statistic value allowed for a row to pass this validation.At least one of min_value and max_value need to be provided.
        minValue:
          type: string
          description: The minimum column statistic value allowed for a row to pass this validation.At least one of min_value and max_value need to be provided.
        strictMaxEnabled:
          description: Whether column statistic needs to be strictly lesser than ('<') the maximum, or if equality is allowed.Only relevant if a max_value has been defined. Default = false.
          type: boolean
        statistic:
          enum:
            - STATISTIC_UNDEFINED
            - MEAN
            - MIN
            - MAX
          enumDescriptions:
            - Unspecified statistic type
            - Evaluate the column mean
            - Evaluate the column min
            - Evaluate the column max
          type: string
      id: GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation
      description: Evaluates whether the column aggregate statistic lies between a specified range.
    GoogleCloudDataplexV1Session:
      id: GoogleCloudDataplexV1Session
      properties:
        userId:
          description: Output only. Email of user running the session.
          type: string
          readOnly: true
        state:
          readOnly: true
          type: string
          enumDescriptions:
            - State is not specified.
            - Resource is active, i.e., ready to use.
            - Resource is under creation.
            - Resource is under deletion.
            - Resource is active but has unresolved actions.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - DELETING
            - ACTION_REQUIRED
        name:
          type: string
          readOnly: true
          description: 'Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/environment/{environment_id}/sessions/{session_id}'
        createTime:
          type: string
          description: Output only. Session start time.
          readOnly: true
          format: google-datetime
      description: Represents an active analyze session running for a user.
      type: object
    GoogleCloudDataplexV1ScannedData:
      type: object
      description: The data scanned during processing (e.g. in incremental DataScan)
      properties:
        incrementalField:
          $ref: '#/components/schemas/GoogleCloudDataplexV1ScannedDataIncrementalField'
          description: The range denoted by values of an incremental field
      id: GoogleCloudDataplexV1ScannedData
    GoogleCloudDataplexV1LakeMetastoreStatus:
      id: GoogleCloudDataplexV1LakeMetastoreStatus
      type: object
      description: Status of Lake and Dataproc Metastore service instance association.
      properties:
        message:
          type: string
          description: Additional information about the current status.
        updateTime:
          type: string
          description: Last update time of the metastore status of the lake.
          format: google-datetime
        endpoint:
          type: string
          description: The URI of the endpoint used to access the Metastore service.
        state:
          enumDescriptions:
            - Unspecified.
            - A Metastore service instance is not associated with the lake.
            - A Metastore service instance is attached to the lake.
            - Attach/detach is in progress.
            - Attach/detach could not be done due to errors.
          description: Current state of association.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - NONE
            - READY
            - UPDATING
            - ERROR
    GoogleIamV1SetIamPolicyRequest:
      id: GoogleIamV1SetIamPolicyRequest
      properties:
        updateMask:
          description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used:paths: "bindings, etag"'
          type: string
          format: google-fieldmask
        policy:
          description: 'REQUIRED: The complete policy to be applied to the resource. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.'
          $ref: '#/components/schemas/GoogleIamV1Policy'
      type: object
      description: Request message for SetIamPolicy method.
    GoogleCloudDataplexV1Environment:
      id: GoogleCloudDataplexV1Environment
      description: Environment represents a user-visible compute infrastructure for analytics within a lake.
      type: object
      properties:
        state:
          readOnly: true
          enumDescriptions:
            - State is not specified.
            - Resource is active, i.e., ready to use.
            - Resource is under creation.
            - Resource is under deletion.
            - Resource is active but has unresolved actions.
          description: Output only. Current state of the environment.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - DELETING
            - ACTION_REQUIRED
          type: string
        name:
          description: 'Output only. The relative resource name of the environment, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/environment/{environment_id}'
          type: string
          readOnly: true
        sessionStatus:
          $ref: '#/components/schemas/GoogleCloudDataplexV1EnvironmentSessionStatus'
          readOnly: true
          description: Output only. Status of sessions created for this environment.
        displayName:
          description: Optional. User friendly display name.
          type: string
        updateTime:
          description: Output only. The time when the environment was last updated.
          format: google-datetime
          type: string
          readOnly: true
        labels:
          additionalProperties:
            type: string
          description: Optional. User defined labels for the environment.
          type: object
        description:
          description: Optional. Description of the environment.
          type: string
        uid:
          description: Output only. System generated globally unique ID for the environment. This ID will be different if the environment is deleted and re-created with the same name.
          type: string
          readOnly: true
        infrastructureSpec:
          description: Required. Infrastructure specification for the Environment.
          $ref: '#/components/schemas/GoogleCloudDataplexV1EnvironmentInfrastructureSpec'
        sessionSpec:
          $ref: '#/components/schemas/GoogleCloudDataplexV1EnvironmentSessionSpec'
          description: Optional. Configuration for sessions created for this environment.
        createTime:
          type: string
          description: Output only. Environment creation time.
          format: google-datetime
          readOnly: true
        endpoints:
          $ref: '#/components/schemas/GoogleCloudDataplexV1EnvironmentEndpoints'
          description: Output only. URI Endpoints to access sessions associated with the Environment.
          readOnly: true
    GoogleCloudDataplexV1DataQualityRule:
      id: GoogleCloudDataplexV1DataQualityRule
      type: object
      properties:
        nonNullExpectation:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityRuleNonNullExpectation'
          description: ColumnMap rule which evaluates whether each column value is null.
        column:
          description: Optional. The unnested column which this rule is evaluated against.
          type: string
        dimension:
          description: Required. The dimension a rule belongs to. Results are also aggregated at the dimension level. Supported dimensions are "COMPLETENESS", "ACCURACY", "CONSISTENCY", "VALIDITY", "UNIQUENESS", "INTEGRITY"
          type: string
        statisticRangeExpectation:
          description: ColumnAggregate rule which evaluates whether the column aggregate statistic lies between a specified range.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation'
        setExpectation:
          description: ColumnMap rule which evaluates whether each column value is contained by a specified set.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityRuleSetExpectation'
        threshold:
          format: double
          type: number
          description: Optional. The minimum ratio of passing_rows / total_rows required to pass this rule, with a range of 0.0, 1.0.0 indicates default value (i.e. 1.0).
        ignoreNull:
          description: Optional. Rows with null values will automatically fail a rule, unless ignore_null is true. In that case, such null rows are trivially considered passing.Only applicable to ColumnMap rules.
          type: boolean
        rangeExpectation:
          description: ColumnMap rule which evaluates whether each column value lies between a specified range.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityRuleRangeExpectation'
        uniquenessExpectation:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityRuleUniquenessExpectation'
          description: ColumnAggregate rule which evaluates whether the column has duplicates.
        rowConditionExpectation:
          description: Table rule which evaluates whether each row passes the specified condition.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation'
        regexExpectation:
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityRuleRegexExpectation'
          description: ColumnMap rule which evaluates whether each column value matches a specified regex.
        tableConditionExpectation:
          description: Table rule which evaluates whether the provided expression is true.
          $ref: '#/components/schemas/GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation'
      description: A rule captures data quality intent about a data source.
    GoogleIamV1TestIamPermissionsResponse:
      properties:
        permissions:
          description: A subset of TestPermissionsRequest.permissions that the caller is allowed.
          items:
            type: string
          type: array
      description: Response message for TestIamPermissions method.
      id: GoogleIamV1TestIamPermissionsResponse
      type: object
    GoogleCloudDataplexV1LakeMetastore:
      properties:
        service:
          description: 'Optional. A relative reference to the Dataproc Metastore (https://cloud.google.com/dataproc-metastore/docs) service associated with the lake: projects/{project_id}/locations/{location_id}/services/{service_id}'
          type: string
      id: GoogleCloudDataplexV1LakeMetastore
      type: object
      description: Settings to manage association of Dataproc Metastore with a lake.
    GoogleCloudLocationListLocationsResponse:
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        locations:
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/GoogleCloudLocationLocation'
          type: array
      description: The response message for Locations.ListLocations.
      id: GoogleCloudLocationListLocationsResponse
      type: object
    GoogleCloudDataplexV1StorageFormatIcebergOptions:
      id: GoogleCloudDataplexV1StorageFormatIcebergOptions
      type: object
      properties:
        metadataLocation:
          description: Optional. The location of where the iceberg metadata is present, must be within the table path
          type: string
      description: Describes Iceberg data format.
    GoogleRpcStatus:
      properties:
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          type: array
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
      description: 'The Status type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC (https://github.com/grpc). Each Status message contains three pieces of data: error code, error message, and error details.You can find out more about this error model and how to work with it in the API Design Guide (https://cloud.google.com/apis/design/errors).'
      type: object
      id: GoogleRpcStatus
    GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions:
      id: GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions
      properties:
        disableTypeInference:
          type: boolean
          description: Optional. Whether to disable the inference of data type for Json data. If true, all columns will be registered as their primitive types (strings, number or boolean).
        encoding:
          type: string
          description: Optional. The character encoding of the data. The default is UTF-8.
      description: Describe JSON data format.
      type: object
    GoogleCloudDataplexV1Content:
      description: Content represents a user-visible notebook or a sql script
      properties:
        name:
          readOnly: true
          type: string
          description: 'Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}'
        uid:
          description: Output only. System generated globally unique ID for the content. This ID will be different if the content is deleted and re-created with the same name.
          type: string
          readOnly: true
        labels:
          type: object
          description: Optional. User defined labels for the content.
          additionalProperties:
            type: string
        sqlScript:
          description: Sql Script related configurations.
          $ref: '#/components/schemas/GoogleCloudDataplexV1ContentSqlScript'
        path:
          description: Required. The path for the Content file, represented as directory structure. Unique within a lake. Limited to alphanumerics, hyphens, underscores, dots and slashes.
          type: string
        updateTime:
          description: Output only. The time when the content was last updated.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Optional. Description of the content.
          type: string
        dataText:
          type: string
          description: Required. Content data in string format.
        notebook:
          description: Notebook related configurations.
          $ref: '#/components/schemas/GoogleCloudDataplexV1ContentNotebook'
        createTime:
          format: google-datetime
          description: Output only. Content creation time.
          type: string
          readOnly: true
      type: object
      id: GoogleCloudDataplexV1Content
  parameters:
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    data_attribute_bindings_iam_policies:
      id: google.dataplex.data_attribute_bindings_iam_policies
      name: data_attribute_bindings_iam_policies
      title: Data_attribute_bindings_iam_policies
      methods:
        projects_locations_dataAttributeBindings_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataAttributeBindings~1{dataAttributeBindingsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_dataAttributeBindings_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataAttributeBindings~1{dataAttributeBindingsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_dataAttributeBindings_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataAttributeBindings~1{dataAttributeBindingsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_attribute_bindings_iam_policies/methods/projects_locations_dataAttributeBindings_getIamPolicy'
        insert: []
        update: []
        delete: []
    operations:
      id: google.dataplex.operations
      name: operations
      title: Operations
      methods:
        projects_locations_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_delete'
    sessions:
      id: google.dataplex.sessions
      name: sessions
      title: Sessions
      methods:
        projects_locations_lakes_environments_sessions_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments~1{environmentsId}~1sessions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sessions/methods/projects_locations_lakes_environments_sessions_list'
        insert: []
        update: []
        delete: []
    environments:
      id: google.dataplex.environments
      name: environments
      title: Environments
      methods:
        projects_locations_lakes_environments_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments~1{environmentsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_environments_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments~1{environmentsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_environments_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments~1{environmentsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_environments_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_environments_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/environments/methods/projects_locations_lakes_environments_get'
          - $ref: '#/components/x-stackQL-resources/environments/methods/projects_locations_lakes_environments_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/environments/methods/projects_locations_lakes_environments_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/environments/methods/projects_locations_lakes_environments_delete'
    environments_iam_policies:
      id: google.dataplex.environments_iam_policies
      name: environments_iam_policies
      title: Environments_iam_policies
      methods:
        projects_locations_lakes_environments_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments~1{environmentsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_environments_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments~1{environmentsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_environments_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments~1{environmentsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/environments_iam_policies/methods/projects_locations_lakes_environments_getIamPolicy'
        insert: []
        update: []
        delete: []
    zones_iam_policies:
      id: google.dataplex.zones_iam_policies
      name: zones_iam_policies
      title: Zones_iam_policies
      methods:
        projects_locations_lakes_zones_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_iam_policies/methods/projects_locations_lakes_zones_getIamPolicy'
        insert: []
        update: []
        delete: []
    zones:
      id: google.dataplex.zones
      name: zones
      title: Zones
      methods:
        projects_locations_lakes_zones_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones/methods/projects_locations_lakes_zones_get'
          - $ref: '#/components/x-stackQL-resources/zones/methods/projects_locations_lakes_zones_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/zones/methods/projects_locations_lakes_zones_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/zones/methods/projects_locations_lakes_zones_delete'
    actions:
      id: google.dataplex.actions
      name: actions
      title: Actions
      methods:
        projects_locations_lakes_zones_actions_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1actions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_assets_actions_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets~1{assetsId}~1actions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_actions_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1actions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/actions/methods/projects_locations_lakes_zones_assets_actions_list'
          - $ref: '#/components/x-stackQL-resources/actions/methods/projects_locations_lakes_zones_actions_list'
          - $ref: '#/components/x-stackQL-resources/actions/methods/projects_locations_lakes_actions_list'
        insert: []
        update: []
        delete: []
    assets:
      id: google.dataplex.assets
      name: assets
      title: Assets
      methods:
        projects_locations_lakes_zones_assets_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets~1{assetsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_assets_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets~1{assetsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_assets_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets~1{assetsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_assets_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_assets_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/assets/methods/projects_locations_lakes_zones_assets_get'
          - $ref: '#/components/x-stackQL-resources/assets/methods/projects_locations_lakes_zones_assets_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/assets/methods/projects_locations_lakes_zones_assets_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/assets/methods/projects_locations_lakes_zones_assets_delete'
    assets_iam_policies:
      id: google.dataplex.assets_iam_policies
      name: assets_iam_policies
      title: Assets_iam_policies
      methods:
        projects_locations_lakes_zones_assets_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets~1{assetsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_assets_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets~1{assetsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_assets_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets~1{assetsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/assets_iam_policies/methods/projects_locations_lakes_zones_assets_getIamPolicy'
        insert: []
        update: []
        delete: []
    entities:
      id: google.dataplex.entities
      name: entities
      title: Entities
      methods:
        projects_locations_lakes_zones_entities_update:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1entities~1{entitiesId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_entities_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1entities~1{entitiesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_entities_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1entities~1{entitiesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_entities_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1entities/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_entities_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1entities/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/entities/methods/projects_locations_lakes_zones_entities_get'
          - $ref: '#/components/x-stackQL-resources/entities/methods/projects_locations_lakes_zones_entities_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/entities/methods/projects_locations_lakes_zones_entities_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/entities/methods/projects_locations_lakes_zones_entities_delete'
    partitions:
      id: google.dataplex.partitions
      name: partitions
      title: Partitions
      methods:
        projects_locations_lakes_zones_entities_partitions_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1entities~1{entitiesId}~1partitions~1{partitionsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_entities_partitions_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1entities~1{entitiesId}~1partitions~1{partitionsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_entities_partitions_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1entities~1{entitiesId}~1partitions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_zones_entities_partitions_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1entities~1{entitiesId}~1partitions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/partitions/methods/projects_locations_lakes_zones_entities_partitions_get'
          - $ref: '#/components/x-stackQL-resources/partitions/methods/projects_locations_lakes_zones_entities_partitions_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/partitions/methods/projects_locations_lakes_zones_entities_partitions_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/partitions/methods/projects_locations_lakes_zones_entities_partitions_delete'
    jobs:
      id: google.dataplex.jobs
      name: jobs
      title: Jobs
      methods:
        projects_locations_lakes_tasks_jobs_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}~1jobs~1{jobsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_tasks_jobs_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}~1jobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_tasks_jobs_cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}~1jobs~1{jobsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_dataScans_jobs_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}~1jobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_dataScans_jobs_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}~1jobs~1{jobsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/projects_locations_lakes_tasks_jobs_get'
          - $ref: '#/components/x-stackQL-resources/jobs/methods/projects_locations_lakes_tasks_jobs_list'
          - $ref: '#/components/x-stackQL-resources/jobs/methods/projects_locations_dataScans_jobs_get'
          - $ref: '#/components/x-stackQL-resources/jobs/methods/projects_locations_dataScans_jobs_list'
        insert: []
        update: []
        delete: []
    tasks:
      id: google.dataplex.tasks
      name: tasks
      title: Tasks
      methods:
        projects_locations_lakes_tasks_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_tasks_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_tasks_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_tasks_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_tasks_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_tasks_run:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}:run/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tasks/methods/projects_locations_lakes_tasks_get'
          - $ref: '#/components/x-stackQL-resources/tasks/methods/projects_locations_lakes_tasks_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/tasks/methods/projects_locations_lakes_tasks_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/tasks/methods/projects_locations_lakes_tasks_delete'
    tasks_iam_policies:
      id: google.dataplex.tasks_iam_policies
      name: tasks_iam_policies
      title: Tasks_iam_policies
      methods:
        projects_locations_lakes_tasks_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_tasks_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_tasks_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tasks_iam_policies/methods/projects_locations_lakes_tasks_getIamPolicy'
        insert: []
        update: []
        delete: []
    contentitems:
      id: google.dataplex.contentitems
      name: contentitems
      title: Contentitems
      methods:
        projects_locations_lakes_contentitems_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1contentitems~1{contentitemsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_contentitems_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1contentitems~1{contentitemsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_contentitems_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1contentitems~1{contentitemsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_contentitems_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1contentitems/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_contentitems_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1contentitems/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/contentitems/methods/projects_locations_lakes_contentitems_get'
          - $ref: '#/components/x-stackQL-resources/contentitems/methods/projects_locations_lakes_contentitems_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/contentitems/methods/projects_locations_lakes_contentitems_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/contentitems/methods/projects_locations_lakes_contentitems_delete'
    contentitems_iam_policies:
      id: google.dataplex.contentitems_iam_policies
      name: contentitems_iam_policies
      title: Contentitems_iam_policies
      methods:
        projects_locations_lakes_contentitems_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1contentitems~1{contentitemsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_contentitems_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1contentitems~1{contentitemsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_contentitems_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1contentitems~1{contentitemsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/contentitems_iam_policies/methods/projects_locations_lakes_contentitems_getIamPolicy'
        insert: []
        update: []
        delete: []
    content:
      id: google.dataplex.content
      name: content
      title: Content
      methods:
        projects_locations_lakes_content_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1content~1{contentId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_content_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1content~1{contentId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_content_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1content~1{contentId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_content_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1content/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_content_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1content/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/content/methods/projects_locations_lakes_content_get'
          - $ref: '#/components/x-stackQL-resources/content/methods/projects_locations_lakes_content_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/content/methods/projects_locations_lakes_content_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/content/methods/projects_locations_lakes_content_delete'
    content_iam_policies:
      id: google.dataplex.content_iam_policies
      name: content_iam_policies
      title: Content_iam_policies
      methods:
        projects_locations_lakes_content_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1content~1{contentId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_content_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1content~1{contentId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_content_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1content~1{contentId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/content_iam_policies/methods/projects_locations_lakes_content_getIamPolicy'
        insert: []
        update: []
        delete: []
    lakes:
      id: google.dataplex.lakes
      name: lakes
      title: Lakes
      methods:
        projects_locations_lakes_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lakes/methods/projects_locations_lakes_get'
          - $ref: '#/components/x-stackQL-resources/lakes/methods/projects_locations_lakes_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/lakes/methods/projects_locations_lakes_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/lakes/methods/projects_locations_lakes_delete'
    lakes_iam_policies:
      id: google.dataplex.lakes_iam_policies
      name: lakes_iam_policies
      title: Lakes_iam_policies
      methods:
        projects_locations_lakes_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_lakes_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lakes_iam_policies/methods/projects_locations_lakes_getIamPolicy'
        insert: []
        update: []
        delete: []
    data_scans:
      id: google.dataplex.data_scans
      name: data_scans
      title: Data_scans
      methods:
        projects_locations_dataScans_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_dataScans_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_dataScans_run:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}:run/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_dataScans_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_dataScans_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_dataScans_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_scans/methods/projects_locations_dataScans_get'
          - $ref: '#/components/x-stackQL-resources/data_scans/methods/projects_locations_dataScans_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/data_scans/methods/projects_locations_dataScans_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/data_scans/methods/projects_locations_dataScans_delete'
    data_scans_iam_policies:
      id: google.dataplex.data_scans_iam_policies
      name: data_scans_iam_policies
      title: Data_scans_iam_policies
      methods:
        projects_locations_dataScans_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_dataScans_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_dataScans_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_scans_iam_policies/methods/projects_locations_dataScans_getIamPolicy'
        insert: []
        update: []
        delete: []
    attributes_iam_policies:
      id: google.dataplex.attributes_iam_policies
      name: attributes_iam_policies
      title: Attributes_iam_policies
      methods:
        projects_locations_dataTaxonomies_attributes_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}~1attributes~1{attributesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_dataTaxonomies_attributes_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}~1attributes~1{attributesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_dataTaxonomies_attributes_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}~1attributes~1{attributesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/attributes_iam_policies/methods/projects_locations_dataTaxonomies_attributes_getIamPolicy'
        insert: []
        update: []
        delete: []
    data_taxonomies_iam_policies:
      id: google.dataplex.data_taxonomies_iam_policies
      name: data_taxonomies_iam_policies
      title: Data_taxonomies_iam_policies
      methods:
        projects_locations_dataTaxonomies_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_dataTaxonomies_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_dataTaxonomies_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_taxonomies_iam_policies/methods/projects_locations_dataTaxonomies_getIamPolicy'
        insert: []
        update: []
        delete: []
    locations:
      id: google.dataplex.locations
      name: locations
      title: Locations
      methods:
        projects_locations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_list'
        insert: []
        update: []
        delete: []
    data_attribute_bindings_iam_bindings:
      id: google.dataplex.data_attribute_bindings_iam_bindings
      name: data_attribute_bindings_iam_bindings
      title: data_attribute_bindings_iam_bindings
      methods:
        projects_locations_dataAttributeBindings_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataAttributeBindings~1{dataAttributeBindingsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/data_attribute_bindings_iam_bindings/methods/projects_locations_dataAttributeBindings_getIamPolicy'
    data_attribute_bindings_iam_audit_configs:
      id: google.dataplex.data_attribute_bindings_iam_audit_configs
      name: data_attribute_bindings_iam_audit_configs
      title: data_attribute_bindings_iam_audit_configs
      methods:
        projects_locations_dataAttributeBindings_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataAttributeBindings~1{dataAttributeBindingsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: auditConfigs
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/data_attribute_bindings_iam_audit_configs/methods/projects_locations_dataAttributeBindings_getIamPolicy'
    environments_iam_bindings:
      id: google.dataplex.environments_iam_bindings
      name: environments_iam_bindings
      title: environments_iam_bindings
      methods:
        projects_locations_lakes_environments_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments~1{environmentsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/environments_iam_bindings/methods/projects_locations_lakes_environments_getIamPolicy'
    environments_iam_audit_configs:
      id: google.dataplex.environments_iam_audit_configs
      name: environments_iam_audit_configs
      title: environments_iam_audit_configs
      methods:
        projects_locations_lakes_environments_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1environments~1{environmentsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: auditConfigs
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/environments_iam_audit_configs/methods/projects_locations_lakes_environments_getIamPolicy'
    zones_iam_bindings:
      id: google.dataplex.zones_iam_bindings
      name: zones_iam_bindings
      title: zones_iam_bindings
      methods:
        projects_locations_lakes_zones_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/zones_iam_bindings/methods/projects_locations_lakes_zones_getIamPolicy'
    zones_iam_audit_configs:
      id: google.dataplex.zones_iam_audit_configs
      name: zones_iam_audit_configs
      title: zones_iam_audit_configs
      methods:
        projects_locations_lakes_zones_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: auditConfigs
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/zones_iam_audit_configs/methods/projects_locations_lakes_zones_getIamPolicy'
    assets_iam_bindings:
      id: google.dataplex.assets_iam_bindings
      name: assets_iam_bindings
      title: assets_iam_bindings
      methods:
        projects_locations_lakes_zones_assets_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets~1{assetsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/assets_iam_bindings/methods/projects_locations_lakes_zones_assets_getIamPolicy'
    assets_iam_audit_configs:
      id: google.dataplex.assets_iam_audit_configs
      name: assets_iam_audit_configs
      title: assets_iam_audit_configs
      methods:
        projects_locations_lakes_zones_assets_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1zones~1{zonesId}~1assets~1{assetsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: auditConfigs
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/assets_iam_audit_configs/methods/projects_locations_lakes_zones_assets_getIamPolicy'
    tasks_iam_bindings:
      id: google.dataplex.tasks_iam_bindings
      name: tasks_iam_bindings
      title: tasks_iam_bindings
      methods:
        projects_locations_lakes_tasks_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/tasks_iam_bindings/methods/projects_locations_lakes_tasks_getIamPolicy'
    tasks_iam_audit_configs:
      id: google.dataplex.tasks_iam_audit_configs
      name: tasks_iam_audit_configs
      title: tasks_iam_audit_configs
      methods:
        projects_locations_lakes_tasks_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1tasks~1{tasksId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: auditConfigs
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/tasks_iam_audit_configs/methods/projects_locations_lakes_tasks_getIamPolicy'
    contentitems_iam_bindings:
      id: google.dataplex.contentitems_iam_bindings
      name: contentitems_iam_bindings
      title: contentitems_iam_bindings
      methods:
        projects_locations_lakes_contentitems_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1contentitems~1{contentitemsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/contentitems_iam_bindings/methods/projects_locations_lakes_contentitems_getIamPolicy'
    contentitems_iam_audit_configs:
      id: google.dataplex.contentitems_iam_audit_configs
      name: contentitems_iam_audit_configs
      title: contentitems_iam_audit_configs
      methods:
        projects_locations_lakes_contentitems_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1contentitems~1{contentitemsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: auditConfigs
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/contentitems_iam_audit_configs/methods/projects_locations_lakes_contentitems_getIamPolicy'
    content_iam_bindings:
      id: google.dataplex.content_iam_bindings
      name: content_iam_bindings
      title: content_iam_bindings
      methods:
        projects_locations_lakes_content_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1content~1{contentId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/content_iam_bindings/methods/projects_locations_lakes_content_getIamPolicy'
    content_iam_audit_configs:
      id: google.dataplex.content_iam_audit_configs
      name: content_iam_audit_configs
      title: content_iam_audit_configs
      methods:
        projects_locations_lakes_content_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}~1content~1{contentId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: auditConfigs
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/content_iam_audit_configs/methods/projects_locations_lakes_content_getIamPolicy'
    lakes_iam_bindings:
      id: google.dataplex.lakes_iam_bindings
      name: lakes_iam_bindings
      title: lakes_iam_bindings
      methods:
        projects_locations_lakes_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/lakes_iam_bindings/methods/projects_locations_lakes_getIamPolicy'
    lakes_iam_audit_configs:
      id: google.dataplex.lakes_iam_audit_configs
      name: lakes_iam_audit_configs
      title: lakes_iam_audit_configs
      methods:
        projects_locations_lakes_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1lakes~1{lakesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: auditConfigs
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/lakes_iam_audit_configs/methods/projects_locations_lakes_getIamPolicy'
    data_scans_iam_bindings:
      id: google.dataplex.data_scans_iam_bindings
      name: data_scans_iam_bindings
      title: data_scans_iam_bindings
      methods:
        projects_locations_dataScans_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/data_scans_iam_bindings/methods/projects_locations_dataScans_getIamPolicy'
    data_scans_iam_audit_configs:
      id: google.dataplex.data_scans_iam_audit_configs
      name: data_scans_iam_audit_configs
      title: data_scans_iam_audit_configs
      methods:
        projects_locations_dataScans_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataScans~1{dataScansId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: auditConfigs
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/data_scans_iam_audit_configs/methods/projects_locations_dataScans_getIamPolicy'
    attributes_iam_bindings:
      id: google.dataplex.attributes_iam_bindings
      name: attributes_iam_bindings
      title: attributes_iam_bindings
      methods:
        projects_locations_dataTaxonomies_attributes_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}~1attributes~1{attributesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/attributes_iam_bindings/methods/projects_locations_dataTaxonomies_attributes_getIamPolicy'
    attributes_iam_audit_configs:
      id: google.dataplex.attributes_iam_audit_configs
      name: attributes_iam_audit_configs
      title: attributes_iam_audit_configs
      methods:
        projects_locations_dataTaxonomies_attributes_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}~1attributes~1{attributesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: auditConfigs
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/attributes_iam_audit_configs/methods/projects_locations_dataTaxonomies_attributes_getIamPolicy'
    data_taxonomies_iam_bindings:
      id: google.dataplex.data_taxonomies_iam_bindings
      name: data_taxonomies_iam_bindings
      title: data_taxonomies_iam_bindings
      methods:
        projects_locations_dataTaxonomies_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/data_taxonomies_iam_bindings/methods/projects_locations_dataTaxonomies_getIamPolicy'
    data_taxonomies_iam_audit_configs:
      id: google.dataplex.data_taxonomies_iam_audit_configs
      name: data_taxonomies_iam_audit_configs
      title: data_taxonomies_iam_audit_configs
      methods:
        projects_locations_dataTaxonomies_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dataTaxonomies~1{dataTaxonomiesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: auditConfigs
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/data_taxonomies_iam_audit_configs/methods/projects_locations_dataTaxonomies_getIamPolicy'
paths:
  /v1/projects/{projectsId}/locations/{locationsId}/dataAttributeBindings/{dataAttributeBindingsId}:setIamPolicy:
    parameters: &ref_1
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
      operationId: dataplex.projects.locations.dataAttributeBindings.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataAttributeBindingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_attribute_bindings_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/dataAttributeBindings/{dataAttributeBindingsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataplex.projects.locations.dataAttributeBindings.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataAttributeBindingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_attribute_bindings_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/dataAttributeBindings/{dataAttributeBindingsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.dataAttributeBindings.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataAttributeBindingsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: data_attribute_bindings_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: dataplex.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
    delete:
      description: Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns google.rpc.Code.UNIMPLEMENTED.
      operationId: dataplex.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns UNIMPLEMENTED.NOTE: the name binding allows API services to override the binding to use different resource name schemes, such as users/*/operations. To override the binding, API services can add a binding such as "/v1/{name=users/*}/operations" to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.'
      operationId: dataplex.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to Code.CANCELLED.
      operationId: dataplex.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleLongrunningCancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}/sessions:
    parameters: *ref_1
    get:
      description: Lists session resources in an environment.
      operationId: dataplex.projects.locations.lakes.environments.sessions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListSessionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: sessions
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}:
    parameters: *ref_1
    delete:
      description: Delete the environment resource. All the child resources must have been deleted before environment deletion can be initiated.
      operationId: dataplex.projects.locations.lakes.environments.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-verb: delete
    patch:
      description: Update the environment resource.
      operationId: dataplex.projects.locations.lakes.environments.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Environment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: environments
      x-stackQL-verb: exec
    get:
      description: Get environment resource.
      operationId: dataplex.projects.locations.lakes.environments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Environment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments:
    parameters: *ref_1
    post:
      description: Create an environment resource.
      operationId: dataplex.projects.locations.lakes.environments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Environment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: environmentId
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-verb: insert
    get:
      description: Lists environments under the given lake.
      operationId: dataplex.projects.locations.lakes.environments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListEnvironmentsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataplex.projects.locations.lakes.environments.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: environments_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
      operationId: dataplex.projects.locations.lakes.environments.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: environments_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.lakes.environments.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: environments_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataplex.projects.locations.lakes.zones.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
      x-stackQL-resource: zones_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.lakes.zones.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: zones_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}:
    parameters: *ref_1
    delete:
      description: Deletes a zone resource. All assets within a zone must be deleted before the zone can be deleted.
      operationId: dataplex.projects.locations.lakes.zones.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
      x-stackQL-resource: zones
      x-stackQL-verb: delete
    get:
      description: Retrieves a zone resource.
      operationId: dataplex.projects.locations.lakes.zones.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Zone'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
      x-stackQL-resource: zones
      x-stackQL-verb: select
    patch:
      description: Updates a zone resource.
      operationId: dataplex.projects.locations.lakes.zones.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Zone'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: zones
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones:
    parameters: *ref_1
    get:
      description: Lists zone resources in a lake.
      operationId: dataplex.projects.locations.lakes.zones.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListZonesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: zones
      x-stackQL-verb: select
    post:
      description: Creates a zone resource within a lake.
      operationId: dataplex.projects.locations.lakes.zones.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Zone'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: zoneId
          schema:
            type: string
      x-stackQL-resource: zones
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
      operationId: dataplex.projects.locations.lakes.zones.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
      x-stackQL-resource: zones_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/actions:
    parameters: *ref_1
    get:
      description: Lists action resources in a zone.
      operationId: dataplex.projects.locations.lakes.zones.actions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListActionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: actions
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}:
    parameters: *ref_1
    get:
      description: Retrieves an asset resource.
      operationId: dataplex.projects.locations.lakes.zones.assets.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Asset'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-verb: select
    delete:
      description: Deletes an asset resource. The referenced storage resource is detached (default) or deleted based on the associated Lifecycle policy.
      operationId: dataplex.projects.locations.lakes.zones.assets.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-verb: delete
    patch:
      description: Updates an asset resource.
      operationId: dataplex.projects.locations.lakes.zones.assets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Asset'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: assets
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataplex.projects.locations.lakes.zones.assets.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: assets_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
      operationId: dataplex.projects.locations.lakes.zones.assets.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: assets_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.lakes.zones.assets.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: assets_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets:
    parameters: *ref_1
    get:
      description: Lists asset resources in a zone.
      operationId: dataplex.projects.locations.lakes.zones.assets.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListAssetsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-verb: select
    post:
      description: Creates an asset resource.
      operationId: dataplex.projects.locations.lakes.zones.assets.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Asset'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: assetId
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}/actions:
    parameters: *ref_1
    get:
      description: Lists action resources in an asset.
      operationId: dataplex.projects.locations.lakes.zones.assets.actions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListActionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: actions
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities/{entitiesId}:
    parameters: *ref_1
    put:
      description: Update a metadata entity. Only supports full resource update.
      operationId: dataplex.projects.locations.lakes.zones.entities.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Entity'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Entity'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: entitiesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: entities
      x-stackQL-verb: exec
    delete:
      description: Delete a metadata entity.
      operationId: dataplex.projects.locations.lakes.zones.entities.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: entitiesId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
      x-stackQL-resource: entities
      x-stackQL-verb: delete
    get:
      description: Get a metadata entity.
      operationId: dataplex.projects.locations.lakes.zones.entities.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Entity'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: entitiesId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: entities
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities:
    parameters: *ref_1
    get:
      description: List metadata entities in a zone.
      operationId: dataplex.projects.locations.lakes.zones.entities.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListEntitiesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: entities
      x-stackQL-verb: select
    post:
      description: Create a metadata entity.
      operationId: dataplex.projects.locations.lakes.zones.entities.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Entity'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Entity'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: entities
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities/{entitiesId}/partitions/{partitionsId}:
    parameters: *ref_1
    get:
      description: Get a metadata partition of an entity.
      operationId: dataplex.projects.locations.lakes.zones.entities.partitions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Partition'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: entitiesId
          required: true
          schema:
            type: string
        - in: path
          name: partitionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: partitions
      x-stackQL-verb: select
    delete:
      description: Delete a metadata partition.
      operationId: dataplex.projects.locations.lakes.zones.entities.partitions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: entitiesId
          required: true
          schema:
            type: string
        - in: path
          name: partitionsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
      x-stackQL-resource: partitions
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities/{entitiesId}/partitions:
    parameters: *ref_1
    post:
      description: Create a metadata partition.
      operationId: dataplex.projects.locations.lakes.zones.entities.partitions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Partition'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Partition'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: entitiesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: partitions
      x-stackQL-verb: insert
    get:
      description: List metadata partitions of an entity.
      operationId: dataplex.projects.locations.lakes.zones.entities.partitions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListPartitionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: zonesId
          required: true
          schema:
            type: string
        - in: path
          name: entitiesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: partitions
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/actions:
    parameters: *ref_1
    get:
      description: Lists action resources in a lake.
      operationId: dataplex.projects.locations.lakes.actions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListActionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: actions
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}/jobs/{jobsId}:
    parameters: *ref_1
    get:
      description: Get job resource.
      operationId: dataplex.projects.locations.lakes.tasks.jobs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Job'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}/jobs:
    parameters: *ref_1
    get:
      description: Lists Jobs under the given task.
      operationId: dataplex.projects.locations.lakes.tasks.jobs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListJobsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: jobs
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}/jobs/{jobsId}:cancel:
    parameters: *ref_1
    post:
      description: Cancel jobs running for the task resource.
      operationId: dataplex.projects.locations.lakes.tasks.jobs.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1CancelJobRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks:
    parameters: *ref_1
    get:
      description: Lists tasks under the given lake.
      operationId: dataplex.projects.locations.lakes.tasks.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListTasksResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: tasks
      x-stackQL-verb: select
    post:
      description: Creates a task resource within a lake.
      operationId: dataplex.projects.locations.lakes.tasks.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Task'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: taskId
          schema:
            type: string
      x-stackQL-resource: tasks
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}:
    parameters: *ref_1
    get:
      description: Get task resource.
      operationId: dataplex.projects.locations.lakes.tasks.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Task'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
      x-stackQL-resource: tasks
      x-stackQL-verb: select
    patch:
      description: Update the task resource.
      operationId: dataplex.projects.locations.lakes.tasks.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Task'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: tasks
      x-stackQL-verb: exec
    delete:
      description: Delete the task resource.
      operationId: dataplex.projects.locations.lakes.tasks.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
      x-stackQL-resource: tasks
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.lakes.tasks.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: tasks_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataplex.projects.locations.lakes.tasks.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
      x-stackQL-resource: tasks_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}:run:
    parameters: *ref_1
    post:
      description: Run an on demand execution of a Task.
      operationId: dataplex.projects.locations.lakes.tasks.run
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1RunTaskRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1RunTaskResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
      x-stackQL-resource: tasks
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
      operationId: dataplex.projects.locations.lakes.tasks.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
      x-stackQL-resource: tasks_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems/{contentitemsId}:
    parameters: *ref_1
    patch:
      description: Update a content. Only supports full resource update.
      operationId: dataplex.projects.locations.lakes.contentitems.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentitemsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: contentitems
      x-stackQL-verb: exec
    delete:
      description: Delete a content.
      operationId: dataplex.projects.locations.lakes.contentitems.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentitemsId
          required: true
          schema:
            type: string
      x-stackQL-resource: contentitems
      x-stackQL-verb: delete
    get:
      description: Get a content resource.
      operationId: dataplex.projects.locations.lakes.contentitems.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentitemsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: contentitems
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems/{contentitemsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified contentitem resource. Replaces any existing policy.Caller must have Google IAM dataplex.content.setIamPolicy permission on the resource.
      operationId: dataplex.projects.locations.lakes.contentitems.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentitemsId
          required: true
          schema:
            type: string
      x-stackQL-resource: contentitems_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems:
    parameters: *ref_1
    post:
      description: Create a content.
      operationId: dataplex.projects.locations.lakes.contentitems.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: contentitems
      x-stackQL-verb: insert
    get:
      description: List content.
      operationId: dataplex.projects.locations.lakes.contentitems.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListContentResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: contentitems
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems/{contentitemsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: 'Returns the caller''s permissions on a resource. If the resource does not exist, an empty set of permissions is returned (a NOT_FOUND error is not returned).A caller is not required to have Google IAM permission to make this request.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataplex.projects.locations.lakes.contentitems.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentitemsId
          required: true
          schema:
            type: string
      x-stackQL-resource: contentitems_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems/{contentitemsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: Gets the access control policy for a contentitem resource. A NOT_FOUND error is returned if the resource does not exist. An empty policy is returned if the resource exists but does not have a policy set on it.Caller must have Google IAM dataplex.content.getIamPolicy permission on the resource.
      operationId: dataplex.projects.locations.lakes.contentitems.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentitemsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: contentitems_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content/{contentId}:
    parameters: *ref_1
    delete:
      description: Delete a content.
      operationId: dataplex.projects.locations.lakes.content.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentId
          required: true
          schema:
            type: string
      x-stackQL-resource: content
      x-stackQL-verb: delete
    get:
      description: Get a content resource.
      operationId: dataplex.projects.locations.lakes.content.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: content
      x-stackQL-verb: select
    patch:
      description: Update a content. Only supports full resource update.
      operationId: dataplex.projects.locations.lakes.content.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: content
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content:
    parameters: *ref_1
    get:
      description: List content.
      operationId: dataplex.projects.locations.lakes.content.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListContentResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: content
      x-stackQL-verb: select
    post:
      description: Create a content.
      operationId: dataplex.projects.locations.lakes.content.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Content'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: content
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content/{contentId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: 'Returns the caller''s permissions on a resource. If the resource does not exist, an empty set of permissions is returned (a NOT_FOUND error is not returned).A caller is not required to have Google IAM permission to make this request.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataplex.projects.locations.lakes.content.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentId
          required: true
          schema:
            type: string
      x-stackQL-resource: content_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content/{contentId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified contentitem resource. Replaces any existing policy.Caller must have Google IAM dataplex.content.setIamPolicy permission on the resource.
      operationId: dataplex.projects.locations.lakes.content.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentId
          required: true
          schema:
            type: string
      x-stackQL-resource: content_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content/{contentId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: Gets the access control policy for a contentitem resource. A NOT_FOUND error is returned if the resource does not exist. An empty policy is returned if the resource exists but does not have a policy set on it.Caller must have Google IAM dataplex.content.getIamPolicy permission on the resource.
      operationId: dataplex.projects.locations.lakes.content.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: path
          name: contentId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: content_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/lakes:
    parameters: *ref_1
    get:
      description: Lists lake resources in a project and location.
      operationId: dataplex.projects.locations.lakes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListLakesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: lakes
      x-stackQL-verb: select
    post:
      description: Creates a lake resource.
      operationId: dataplex.projects.locations.lakes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Lake'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: lakeId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: lakes
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.lakes.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: lakes_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
      operationId: dataplex.projects.locations.lakes.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
      x-stackQL-resource: lakes_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataplex.projects.locations.lakes.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
      x-stackQL-resource: lakes_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}:
    parameters: *ref_1
    patch:
      description: Updates a lake resource.
      operationId: dataplex.projects.locations.lakes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1Lake'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: lakes
      x-stackQL-verb: exec
    delete:
      description: Deletes a lake resource. All zones within the lake must be deleted before the lake can be deleted.
      operationId: dataplex.projects.locations.lakes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
      x-stackQL-resource: lakes
      x-stackQL-verb: delete
    get:
      description: Retrieves a lake resource.
      operationId: dataplex.projects.locations.lakes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1Lake'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: lakesId
          required: true
          schema:
            type: string
      x-stackQL-resource: lakes
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}/jobs:
    parameters: *ref_1
    get:
      description: Lists DataScanJobs under the given DataScan.
      operationId: dataplex.projects.locations.dataScans.jobs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListDataScanJobsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: jobs
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}/jobs/{jobsId}:
    parameters: *ref_1
    get:
      description: Gets a DataScanJob resource.
      operationId: dataplex.projects.locations.dataScans.jobs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1DataScanJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/dataScans:
    parameters: *ref_1
    get:
      description: Lists DataScans.
      operationId: dataplex.projects.locations.dataScans.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1ListDataScansResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: data_scans
      x-stackQL-verb: select
    post:
      description: Creates a DataScan resource.
      operationId: dataplex.projects.locations.dataScans.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1DataScan'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: dataScanId
          schema:
            type: string
      x-stackQL-resource: data_scans
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}:run:
    parameters: *ref_1
    post:
      description: Runs an on-demand execution of a DataScan
      operationId: dataplex.projects.locations.dataScans.run
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1RunDataScanRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1RunDataScanResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_scans
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
      operationId: dataplex.projects.locations.dataScans.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_scans_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.dataScans.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: data_scans_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}:
    parameters: *ref_1
    patch:
      description: Updates a DataScan resource.
      operationId: dataplex.projects.locations.dataScans.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDataplexV1DataScan'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: data_scans
      x-stackQL-verb: exec
    get:
      description: Gets a DataScan resource.
      operationId: dataplex.projects.locations.dataScans.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDataplexV1DataScan'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: data_scans
      x-stackQL-verb: select
    delete:
      description: Deletes a DataScan resource.
      operationId: dataplex.projects.locations.dataScans.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_scans
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataplex.projects.locations.dataScans.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataScansId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_scans_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}/attributes/{attributesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataplex.projects.locations.dataTaxonomies.attributes.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
        - in: path
          name: attributesId
          required: true
          schema:
            type: string
      x-stackQL-resource: attributes_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}/attributes/{attributesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
      operationId: dataplex.projects.locations.dataTaxonomies.attributes.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
        - in: path
          name: attributesId
          required: true
          schema:
            type: string
      x-stackQL-resource: attributes_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}/attributes/{attributesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.dataTaxonomies.attributes.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
        - in: path
          name: attributesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: attributes_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataplex.projects.locations.dataTaxonomies.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_taxonomies_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.dataTaxonomies.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: data_taxonomies_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
      operationId: dataplex.projects.locations.dataTaxonomies.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: dataTaxonomiesId
          required: true
          schema:
            type: string
      x-stackQL-resource: data_taxonomies_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: dataplex.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudLocationLocation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations:
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: dataplex.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudLocationListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
