openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Cloud Testing API
  description: Allows developers to run automated tests for their mobile applications on Google infrastructure.
  version: v1
  x-discovery-doc-revision: '20230818'
  x-generated-date: '2023-08-23'
externalDocs:
  url: 'https://developers.google.com/cloud-test-lab/'
servers:
  - url: 'https://testing.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
            'https://www.googleapis.com/auth/cloud-platform.read-only': View your data across Google Cloud services and see the email address of your Google Account
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    Date:
      properties:
        day:
          type: integer
          description: 'Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn''t significant.'
          format: int32
        year:
          type: integer
          format: int32
          description: 'Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.'
        month:
          type: integer
          format: int32
          description: 'Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.'
      id: Date
      description: 'Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp'
      type: object
    XcodeVersion:
      description: An Xcode version that an iOS version is compatible with.
      id: XcodeVersion
      properties:
        tags:
          items:
            type: string
          type: array
          description: 'Tags for this Xcode version. Example: "default".'
        version:
          type: string
          description: 'The id for this version. Example: "9.2".'
      type: object
    IosTestSetup:
      properties:
        pullDirectories:
          type: array
          items:
            $ref: '#/components/schemas/IosDeviceFile'
          description: List of directories on the device to upload to Cloud Storage at the end of the test. Directories should either be in a shared directory (such as /private/var/mobile/Media) or within an accessible directory inside the app's filesystem (such as /Documents) by specifying the bundle ID.
        pushFiles:
          items:
            $ref: '#/components/schemas/IosDeviceFile'
          type: array
          description: List of files to push to the device before starting the test.
        networkProfile:
          description: The network traffic profile used for running the test. Available network profiles can be queried by using the NETWORK_CONFIGURATION environment type when calling TestEnvironmentDiscoveryService.GetTestEnvironmentCatalog.
          type: string
        additionalIpas:
          description: iOS apps to install in addition to those being directly tested.
          items:
            $ref: '#/components/schemas/FileReference'
          type: array
      description: A description of how to set up an iOS device prior to running the test.
      id: IosTestSetup
      type: object
    DeviceIpBlock:
      properties:
        block:
          description: 'An IP address block in CIDR notation eg: 34.68.194.64/29'
          type: string
        form:
          type: string
          description: Whether this block is used by physical or virtual devices
          enumDescriptions:
            - Do not use. For proto versioning only.
            - Android virtual device using Compute Engine native virtualization. Firebase Test Lab only.
            - Actual hardware.
            - Android virtual device using emulator in nested virtualization. Equivalent to Android Studio.
          enum:
            - DEVICE_FORM_UNSPECIFIED
            - VIRTUAL
            - PHYSICAL
            - EMULATOR
        addedDate:
          $ref: '#/components/schemas/Date'
          description: The date this block was added to Firebase Test Lab
      type: object
      description: A single device IP block
      id: DeviceIpBlock
    TestDetails:
      type: object
      id: TestDetails
      properties:
        progressMessages:
          items:
            type: string
          type: array
          description: 'Output only. Human-readable, detailed descriptions of the test''s progress. For example: "Provisioning a device", "Starting Test". During the course of execution new data may be appended to the end of progress_messages.'
        errorMessage:
          type: string
          description: 'Output only. If the TestState is ERROR, then this string will contain human-readable details about the error.'
      description: Additional details about the progress of the running test.
    Service:
      description: 'The section of an tag. https://developer.android.com/guide/topics/manifest/service-element'
      type: object
      properties:
        name:
          type: string
          description: 'The android:name value'
        intentFilter:
          type: array
          description: Intent filters in the service
          items:
            $ref: '#/components/schemas/IntentFilter'
      id: Service
    AndroidTestLoop:
      id: AndroidTestLoop
      description: 'A test of an Android Application with a Test Loop. The intent \ will be implicitly added, since Games is the only user of this api, for the time being.'
      properties:
        appApk:
          description: The APK for the application under test.
          $ref: '#/components/schemas/FileReference'
        scenarioLabels:
          description: 'The list of scenario labels that should be run during the test. The scenario labels should map to labels defined in the application''s manifest. For example, player_experience and com.google.test.loops.player_experience add all of the loops labeled in the manifest with the com.google.test.loops.player_experience name to the execution. Scenarios can also be specified in the scenarios field.'
          type: array
          items:
            type: string
        appPackageId:
          type: string
          description: The java package for the application under test. The default is determined by examining the application's manifest.
        appBundle:
          description: A multi-apk app bundle for the application under test.
          $ref: '#/components/schemas/AppBundle'
        scenarios:
          items:
            type: integer
            format: int32
          description: 'The list of scenarios that should be run during the test. The default is all test loops, derived from the application''s manifest.'
          type: array
      type: object
    FileReference:
      description: 'A reference to a file, used for user inputs.'
      properties:
        gcsPath:
          description: 'A path to a file in Google Cloud Storage. Example: gs://build-app-1414623860166/app%40debug-unaligned.apk These paths are expected to be url encoded (percent encoding)'
          type: string
      id: FileReference
      type: object
    DeviceIpBlockCatalog:
      description: List of IP blocks used by the Firebase Test Lab
      type: object
      properties:
        ipBlocks:
          type: array
          items:
            $ref: '#/components/schemas/DeviceIpBlock'
          description: The device IP blocks used by Firebase Test Lab
      id: DeviceIpBlockCatalog
    AppBundle:
      properties:
        bundleLocation:
          $ref: '#/components/schemas/FileReference'
          description: .aab file representing the app bundle under test.
      type: object
      id: AppBundle
      description: 'An Android App Bundle file format, containing a BundleConfig.pb file, a base module directory, zero or more dynamic feature module directories. See https://developer.android.com/guide/app-bundle/build for guidance on building App Bundles.'
    IosDeviceFile:
      properties:
        content:
          $ref: '#/components/schemas/FileReference'
          description: The source file
        devicePath:
          type: string
          description: 'Location of the file on the device, inside the app''s sandboxed filesystem'
        bundleId:
          description: 'The bundle id of the app where this file lives. iOS apps sandbox their own filesystem, so app files must specify which app installed on the device.'
          type: string
      description: A file or directory to install on the device before the test starts.
      type: object
      id: IosDeviceFile
    Orientation:
      description: Screen orientation of the device.
      properties:
        tags:
          type: array
          items:
            type: string
          description: 'Tags for this dimension. Example: "default".'
        id:
          type: string
          description: 'The id for this orientation. Example: "portrait".'
        name:
          type: string
          description: 'A human-friendly name for this orientation. Example: "portrait".'
      id: Orientation
      type: object
    AndroidRuntimeConfiguration:
      id: AndroidRuntimeConfiguration
      description: Android configuration that can be selected at the time a test is run.
      type: object
      properties:
        locales:
          type: array
          items:
            $ref: '#/components/schemas/Locale'
          description: The set of available locales.
        orientations:
          description: The set of available orientations.
          items:
            $ref: '#/components/schemas/Orientation'
          type: array
    RegularFile:
      properties:
        devicePath:
          type: string
          description: 'Required. Where to put the content on the device. Must be an absolute, allowlisted path. If the file exists, it will be replaced. The following device-side directories and any of their subdirectories are allowlisted: ${EXTERNAL_STORAGE}, /sdcard, or /storage ${ANDROID_DATA}/local/tmp, or /data/local/tmp Specifying a path outside of these directory trees is invalid. The paths /sdcard and /data will be made available and treated as implicit path substitutions. E.g. if /sdcard on a particular device does not map to external storage, the system will replace it with the external storage path prefix for that device and copy the file there. It is strongly advised to use the Environment API in app and test code to access files on the device in a portable way.'
        content:
          description: Required. The source file.
          $ref: '#/components/schemas/FileReference'
      type: object
      description: A file or directory to install on the device before the test starts.
      id: RegularFile
    AndroidVersion:
      description: A version of the Android OS.
      type: object
      id: AndroidVersion
      properties:
        id:
          description: An opaque id for this Android version. Use this id to invoke the TestExecutionService.
          type: string
        versionString:
          description: 'A string representing this version of the Android OS. Examples: "4.3", "4.4".'
          type: string
        tags:
          items:
            type: string
          type: array
          description: 'Tags for this dimension. Examples: "default", "preview", "deprecated".'
        codeName:
          type: string
          description: 'The code name for this Android version. Examples: "JellyBean", "KitKat".'
        apiLevel:
          format: int32
          description: 'The API level for this Android version. Examples: 18, 19.'
          type: integer
        releaseDate:
          $ref: '#/components/schemas/Date'
          description: The date this Android version became available in the market.
        distribution:
          description: Market share for this version.
          $ref: '#/components/schemas/Distribution'
    ManualSharding:
      id: ManualSharding
      properties:
        testTargetsForShard:
          items:
            $ref: '#/components/schemas/TestTargetsForShard'
          description: 'Required. Group of packages, classes, and/or test methods to be run for each manually-created shard. You must specify at least one shard if this field is present. When you select one or more physical devices, the number of repeated test_targets_for_shard must be <= 50. When you select one or more ARM virtual devices, it must be <= 100. When you select only x86 virtual devices, it must be <= 500.'
          type: array
      description: 'Shards test cases into the specified groups of packages, classes, and/or methods. With manual sharding enabled, specifying test targets via environment_variables or in InstrumentationTest is invalid.'
      type: object
    PerAndroidVersionInfo:
      properties:
        versionId:
          type: string
          description: An Android version.
        deviceCapacity:
          type: string
          description: The number of online devices for an Android version.
          enum:
            - DEVICE_CAPACITY_UNSPECIFIED
            - DEVICE_CAPACITY_HIGH
            - DEVICE_CAPACITY_MEDIUM
            - DEVICE_CAPACITY_LOW
            - DEVICE_CAPACITY_NONE
          enumDescriptions:
            - The value of device capacity is unknown or unset.
            - 'Devices that are high in capacity (The lab has a large number of these devices). These devices are generally suggested for running a large number of simultaneous tests (e.g. more than 100 tests). Please note that high capacity devices do not guarantee short wait times due to several factors: 1. Traffic (how heavily they are used at any given moment) 2. High capacity devices are prioritized for certain usages, which may cause user tests to be slower than selecting other similar device types.'
            - 'Devices that are medium in capacity (The lab has a decent number of these devices, though not as many as high capacity devices). These devices are suitable for fewer test runs (e.g. fewer than 100 tests) and only for low shard counts (e.g. less than 10 shards).'
            - 'Devices that are low in capacity (The lab has a small number of these devices). These devices may be used if users need to test on this specific device model and version. Please note that due to low capacity, the tests may take much longer to finish, especially if a large number of tests are invoked at once. These devices are not suitable for test sharding.'
            - 'Devices that are completely missing from the lab. These devices are unavailable either temporarily or permanently and should not be requested. If the device is also marked as deprecated, this state is very likely permanent.'
      type: object
      description: A version-specific information of an Android model.
      id: PerAndroidVersionInfo
    Shard:
      type: object
      description: Output only. Details about the shard.
      properties:
        estimatedShardDuration:
          readOnly: true
          type: string
          description: 'Output only. The estimated shard duration based on previous test case timing records, if available.'
          format: google-duration
        numShards:
          format: int32
          description: Output only. The total number of shards.
          readOnly: true
          type: integer
        testTargetsForShard:
          $ref: '#/components/schemas/TestTargetsForShard'
          description: Output only. Test targets for each shard. Only set for manual sharding.
          readOnly: true
        shardIndex:
          readOnly: true
          description: Output only. The index of the shard among all the shards.
          type: integer
          format: int32
      id: Shard
    NoActivityIntent:
      type: object
      description: Skips the starting activity
      id: NoActivityIntent
      properties: {}
    ObbFile:
      id: ObbFile
      description: An opaque binary blob file to install on the device before the test starts.
      type: object
      properties:
        obbFileName:
          description: 'Required. OBB file name which must conform to the format as specified by Android e.g. [main|patch].0300110.com.example.android.obb which will be installed into \/Android/obb/\/ on the device.'
          type: string
        obb:
          $ref: '#/components/schemas/FileReference'
          description: Required. Opaque Binary Blob (OBB) file(s) to install on the device.
    IosRoboTest:
      properties:
        appBundleId:
          description: The bundle ID for the app-under-test. This is determined by examining the application's "Info.plist" file.
          type: string
        roboScript:
          $ref: '#/components/schemas/FileReference'
          description: 'An optional Roboscript to customize the crawl. See https://firebase.google.com/docs/test-lab/android/robo-scripts-reference for more information about Roboscripts.'
        appIpa:
          description: Required. The ipa stored at this file should be used to run the test.
          $ref: '#/components/schemas/FileReference'
      type: object
      id: IosRoboTest
      description: A test that explores an iOS application on an iOS device.
    SystraceSetup:
      id: SystraceSetup
      type: object
      properties:
        durationSeconds:
          format: int32
          type: integer
          description: Systrace duration in seconds. Should be between 1 and 30 seconds. 0 disables systrace.
          deprecated: true
    EnvironmentMatrix:
      type: object
      description: The matrix of environments in which the test is to be executed.
      properties:
        iosDeviceList:
          $ref: '#/components/schemas/IosDeviceList'
          description: A list of iOS devices.
        androidMatrix:
          $ref: '#/components/schemas/AndroidMatrix'
          description: A matrix of Android devices.
        androidDeviceList:
          description: A list of Android devices; the test will be run only on the specified devices.
          $ref: '#/components/schemas/AndroidDeviceList'
      id: EnvironmentMatrix
    EnvironmentVariable:
      type: object
      properties:
        key:
          type: string
          description: Key for the environment variable.
        value:
          description: Value for the environment variable.
          type: string
      id: EnvironmentVariable
      description: A key-value pair passed as an environment variable to the test.
    ProvidedSoftwareCatalog:
      type: object
      id: ProvidedSoftwareCatalog
      description: The currently provided software environment on the devices under test.
      properties:
        orchestratorVersion:
          type: string
          description: 'Deprecated: Use AndroidX Test Orchestrator going forward. A string representing the current version of Android Test Orchestrator that is used in the environment. The package is available at https://maven.google.com/web/index.html#com.android.support.test:orchestrator.'
          deprecated: true
        androidxOrchestratorVersion:
          type: string
          description: 'A string representing the current version of AndroidX Test Orchestrator that is used in the environment. The package is available at https://maven.google.com/web/index.html#androidx.test:orchestrator.'
    IntentFilter:
      description: 'The section of an tag. https://developer.android.com/guide/topics/manifest/intent-filter-element.html'
      type: object
      properties:
        categoryNames:
          type: array
          items:
            type: string
          description: 'The android:name value of the tag.'
        actionNames:
          type: array
          items:
            type: string
          description: 'The android:name value of the tag.'
        mimeType:
          type: string
          description: 'The android:mimeType value of the tag.'
      id: IntentFilter
    UniformSharding:
      type: object
      id: UniformSharding
      properties:
        numShards:
          description: 'Required. The total number of shards to create. This must always be a positive number that is no greater than the total number of test cases. When you select one or more physical devices, the number of shards must be <= 50. When you select one or more ARM virtual devices, it must be <= 100. When you select only x86 virtual devices, it must be <= 500.'
          format: int32
          type: integer
      description: 'Uniformly shards test cases given a total number of shards. For instrumentation tests, it will be translated to "-e numShard" and "-e shardIndex" AndroidJUnitRunner arguments. With uniform sharding enabled, specifying either of these sharding arguments via `environment_variables` is invalid. Based on the sharding mechanism AndroidJUnitRunner uses, there is no guarantee that test cases will be distributed uniformly across all shards.'
    ToolResultsStep:
      properties:
        historyId:
          description: Output only. A tool results history ID.
          type: string
        executionId:
          description: Output only. A tool results execution ID.
          type: string
        projectId:
          type: string
          description: Output only. The cloud project that owns the tool results step.
        stepId:
          description: Output only. A tool results step ID.
          type: string
      id: ToolResultsStep
      type: object
      description: Represents a tool results step resource. This has the results of a TestExecution.
    TestSetup:
      type: object
      description: A description of how to set up the Android device prior to running the test.
      properties:
        filesToPush:
          items:
            $ref: '#/components/schemas/DeviceFile'
          type: array
          description: List of files to push to the device before starting the test.
        directoriesToPull:
          items:
            type: string
          description: 'List of directories on the device to upload to GCS at the end of the test; they must be absolute paths under /sdcard, /storage or /data/local/tmp. Path names are restricted to characters a-z A-Z 0-9 _ - . + and / Note: The paths /sdcard and /data will be made available and treated as implicit path substitutions. E.g. if /sdcard on a particular device does not map to external storage, the system will replace it with the external storage path prefix for that device.'
          type: array
        dontAutograntPermissions:
          description: Whether to prevent all runtime permissions to be granted at app install
          type: boolean
        networkProfile:
          description: The network traffic profile used for running the test. Available network profiles can be queried by using the NETWORK_CONFIGURATION environment type when calling TestEnvironmentDiscoveryService.GetTestEnvironmentCatalog.
          type: string
        account:
          $ref: '#/components/schemas/Account'
          description: The device will be logged in on this account for the duration of the test.
        systrace:
          $ref: '#/components/schemas/SystraceSetup'
          deprecated: true
          description: 'Systrace configuration for the run. Deprecated: Systrace used Python 2 which was sunsetted on 2020-01-01. Systrace is no longer supported in the Cloud Testing API, and no Systrace file will be provided in the results.'
        environmentVariables:
          description: Environment variables to set for the test (only applicable for instrumentation tests).
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
        additionalApks:
          description: APKs to install in addition to those being directly tested. Currently capped at 100.
          items:
            $ref: '#/components/schemas/Apk'
          type: array
      id: TestSetup
    AndroidDevice:
      id: AndroidDevice
      description: A single Android device.
      type: object
      properties:
        orientation:
          description: Required. How the device is oriented during the test. Use the TestEnvironmentDiscoveryService to get supported options.
          type: string
        locale:
          description: Required. The locale the test device used for testing. Use the TestEnvironmentDiscoveryService to get supported options.
          type: string
        androidModelId:
          type: string
          description: Required. The id of the Android device to be used. Use the TestEnvironmentDiscoveryService to get supported options.
        androidVersionId:
          description: Required. The id of the Android OS version to be used. Use the TestEnvironmentDiscoveryService to get supported options.
          type: string
    Apk:
      description: An Android package file to install.
      type: object
      id: Apk
      properties:
        packageName:
          description: The java package for the APK to be installed. Value is determined by examining the application's manifest.
          type: string
        location:
          description: The path to an APK to be installed on the device before the test begins.
          $ref: '#/components/schemas/FileReference'
    ResultStorage:
      type: object
      description: Locations where the results of running the test are stored.
      properties:
        toolResultsHistory:
          $ref: '#/components/schemas/ToolResultsHistory'
          description: 'The tool results history that contains the tool results execution that results are written to. If not provided, the service will choose an appropriate value.'
        resultsUrl:
          description: Output only. URL to the results in the Firebase Web Console.
          type: string
        googleCloudStorage:
          $ref: '#/components/schemas/GoogleCloudStorage'
          description: Required.
        toolResultsExecution:
          description: Output only. The tool results execution that results are written to.
          $ref: '#/components/schemas/ToolResultsExecution'
      id: ResultStorage
    NetworkConfigurationCatalog:
      type: object
      properties:
        configurations:
          type: array
          items:
            $ref: '#/components/schemas/NetworkConfiguration'
      id: NetworkConfigurationCatalog
    ClientInfoDetail:
      id: ClientInfoDetail
      description: 'Key-value pair of detailed information about the client which invoked the test. Examples: {''Version'', ''1.0''}, {''Release Track'', ''BETA''}.'
      type: object
      properties:
        value:
          description: Required. The value of detailed client information.
          type: string
        key:
          description: Required. The key of detailed client information.
          type: string
    IosRuntimeConfiguration:
      description: iOS configuration that can be selected at the time a test is run.
      properties:
        orientations:
          type: array
          description: The set of available orientations.
          items:
            $ref: '#/components/schemas/Orientation'
        locales:
          description: The set of available locales.
          type: array
          items:
            $ref: '#/components/schemas/Locale'
      type: object
      id: IosRuntimeConfiguration
    CancelTestMatrixResponse:
      id: CancelTestMatrixResponse
      description: Response containing the current state of the specified test matrix.
      type: object
      properties:
        testState:
          description: 'The current rolled-up state of the test matrix. If this state is already final, then the cancelation request will have no effect.'
          enumDescriptions:
            - Do not use. For proto versioning only.
            - The execution or matrix is being validated.
            - The execution or matrix is waiting for resources to become available.
            - The execution is currently being processed. Can only be set on an execution.
            - 'The execution or matrix has terminated normally. On a matrix this means that the matrix level processing completed normally, but individual executions may be in an ERROR state.'
            - The execution or matrix has stopped because it encountered an infrastructure failure.
            - The execution was not run because it corresponds to a unsupported environment. Can only be set on an execution.
            - 'The execution was not run because the provided inputs are incompatible with the requested environment. Example: requested AndroidVersion is lower than APK''s minSdkVersion Can only be set on an execution.'
            - 'The execution was not run because the provided inputs are incompatible with the requested architecture. Example: requested device does not support running the native code in the supplied APK Can only be set on an execution.'
            - The user cancelled the execution. Can only be set on an execution.
            - 'The execution or matrix was not run because the provided inputs are not valid. Examples: input file is not of the expected type, is malformed/corrupt, or was flagged as malware'
          enum:
            - TEST_STATE_UNSPECIFIED
            - VALIDATING
            - PENDING
            - RUNNING
            - FINISHED
            - ERROR
            - UNSUPPORTED_ENVIRONMENT
            - INCOMPATIBLE_ENVIRONMENT
            - INCOMPATIBLE_ARCHITECTURE
            - CANCELLED
            - INVALID
          type: string
    RoboStartingIntent:
      description: Message for specifying the start activities to crawl.
      type: object
      properties:
        noActivity:
          $ref: '#/components/schemas/NoActivityIntent'
          description: Skips the starting activity
        startActivity:
          description: An intent that starts an activity with specific details.
          $ref: '#/components/schemas/StartActivityIntent'
        timeout:
          type: string
          format: google-duration
          description: Timeout in seconds for each intent.
        launcherActivity:
          $ref: '#/components/schemas/LauncherActivityIntent'
          description: An intent that starts the main launcher activity.
      id: RoboStartingIntent
    DeviceFile:
      properties:
        obbFile:
          $ref: '#/components/schemas/ObbFile'
          description: A reference to an opaque binary blob file.
        regularFile:
          $ref: '#/components/schemas/RegularFile'
          description: A reference to a regular file.
      id: DeviceFile
      type: object
      description: A single device file description.
    TestSpecification:
      type: object
      description: A description of how to run the test.
      id: TestSpecification
      properties:
        disablePerformanceMetrics:
          description: Disables performance metrics recording. May reduce test latency.
          type: boolean
        iosRoboTest:
          description: An iOS Robo test.
          $ref: '#/components/schemas/IosRoboTest'
        androidTestLoop:
          $ref: '#/components/schemas/AndroidTestLoop'
          description: An Android Application with a Test Loop.
        disableVideoRecording:
          description: Disables video recording. May reduce test latency.
          type: boolean
        testSetup:
          description: 'Test setup requirements for Android e.g. files to install, bootstrap scripts.'
          $ref: '#/components/schemas/TestSetup'
        androidInstrumentationTest:
          $ref: '#/components/schemas/AndroidInstrumentationTest'
          description: An Android instrumentation test.
        iosTestLoop:
          $ref: '#/components/schemas/IosTestLoop'
          description: An iOS application with a test loop.
        iosXcTest:
          $ref: '#/components/schemas/IosXcTest'
          description: 'An iOS XCTest, via an .xctestrun file.'
        iosTestSetup:
          $ref: '#/components/schemas/IosTestSetup'
          description: Test setup requirements for iOS.
        androidRoboTest:
          $ref: '#/components/schemas/AndroidRoboTest'
          description: An Android robo test.
        testTimeout:
          description: Max time a test execution is allowed to run before it is automatically cancelled. The default value is 5 min.
          format: google-duration
          type: string
    GoogleAuto:
      description: 'Enables automatic Google account login. If set, the service automatically generates a Google test account and adds it to the device, before executing the test. Note that test accounts might be reused. Many applications show their full set of functionalities when an account is present on the device. Logging into the device with these generated accounts allows testing more functionalities.'
      type: object
      properties: {}
      id: GoogleAuto
    StartActivityIntent:
      type: object
      properties:
        categories:
          items:
            type: string
          type: array
          description: Intent categories to set on the intent.
        action:
          description: Action name. Required for START_ACTIVITY.
          type: string
        uri:
          description: URI for the action.
          type: string
      description: 'A starting intent specified by an action, uri, and categories.'
      id: StartActivityIntent
    AndroidRoboTest:
      id: AndroidRoboTest
      properties:
        maxDepth:
          format: int32
          type: integer
          deprecated: true
          description: The max depth of the traversal stack Robo can explore. Needs to be at least 2 to make Robo explore the app beyond the first activity. Default is 50.
        maxSteps:
          format: int32
          description: The max number of steps Robo can execute. Default is no limit.
          deprecated: true
          type: integer
        roboMode:
          type: string
          enum:
            - ROBO_MODE_UNSPECIFIED
            - ROBO_VERSION_1
            - ROBO_VERSION_2
          description: The mode in which Robo should run. Most clients should allow the server to populate this field automatically.
          enumDescriptions:
            - This means that the server should choose the mode. Recommended.
            - Runs Robo in UIAutomator-only mode without app resigning
            - Runs Robo in standard Espresso with UIAutomator fallback
        roboDirectives:
          items:
            $ref: '#/components/schemas/RoboDirective'
          description: 'A set of directives Robo should apply during the crawl. This allows users to customize the crawl. For example, the username and password for a test account can be provided.'
          type: array
        appPackageId:
          description: The java package for the application under test. The default value is determined by examining the application's manifest.
          type: string
        startingIntents:
          description: 'The intents used to launch the app for the crawl. If none are provided, then the main launcher activity is launched. If some are provided, then only those provided are launched (the main launcher activity must be provided explicitly).'
          items:
            $ref: '#/components/schemas/RoboStartingIntent'
          type: array
        appInitialActivity:
          type: string
          description: The initial activity that should be used to start the app.
        roboScript:
          description: A JSON file with a sequence of actions Robo should perform as a prologue for the crawl.
          $ref: '#/components/schemas/FileReference'
        appBundle:
          $ref: '#/components/schemas/AppBundle'
          description: A multi-apk app bundle for the application under test.
        appApk:
          $ref: '#/components/schemas/FileReference'
          description: The APK for the application under test.
      type: object
      description: 'A test of an android application that explores the application on a virtual or physical Android Device, finding culprits and crashes as it goes.'
    ApkManifest:
      type: object
      properties:
        services:
          description: Services contained in the tag.
          items:
            $ref: '#/components/schemas/Service'
          type: array
        packageName:
          description: 'Full Java-style package name for this application, e.g. "com.example.foo".'
          type: string
        targetSdkVersion:
          type: integer
          format: int32
          description: Specifies the API Level on which the application is designed to run.
        usesFeature:
          description: Feature usage tags defined in the manifest.
          type: array
          items:
            $ref: '#/components/schemas/UsesFeature'
        versionName:
          description: Version number shown to users.
          type: string
        versionCode:
          type: string
          description: Version number used internally by the app.
          format: int64
        maxSdkVersion:
          type: integer
          format: int32
          description: Maximum API level on which the application is designed to run.
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/Metadata'
          description: Meta-data tags defined in the manifest.
        minSdkVersion:
          description: Minimum API level required for the application to run.
          type: integer
          format: int32
        intentFilters:
          items:
            $ref: '#/components/schemas/IntentFilter'
          type: array
        applicationLabel:
          type: string
          description: User-readable name for the application.
        usesPermission:
          items:
            type: string
          description: Permissions declared to be used by the application
          type: array
      description: 'An Android app manifest. See http://developer.android.com/guide/topics/manifest/manifest-intro.html'
      id: ApkManifest
    GoogleCloudStorage:
      id: GoogleCloudStorage
      properties:
        gcsPath:
          description: Required. The path to a directory in GCS that will eventually contain the results for this test. The requesting user must have write access on the bucket in the supplied path.
          type: string
      description: A storage location within Google cloud storage (GCS).
      type: object
    ClientInfo:
      type: object
      properties:
        clientInfoDetails:
          type: array
          description: The list of detailed information about client.
          items:
            $ref: '#/components/schemas/ClientInfoDetail'
        name:
          type: string
          description: 'Required. Client name, such as gcloud.'
      id: ClientInfo
      description: Information about the client which invoked the test.
    AndroidMatrix:
      properties:
        androidVersionIds:
          items:
            type: string
          type: array
          description: Required. The ids of the set of Android OS version to be used. Use the TestEnvironmentDiscoveryService to get supported options.
        orientations:
          type: array
          description: Required. The set of orientations to test with. Use the TestEnvironmentDiscoveryService to get supported options.
          items:
            type: string
        locales:
          type: array
          description: Required. The set of locales the test device will enable for testing. Use the TestEnvironmentDiscoveryService to get supported options.
          items:
            type: string
        androidModelIds:
          type: array
          items:
            type: string
          description: Required. The ids of the set of Android device to be used. Use the TestEnvironmentDiscoveryService to get supported options.
      description: 'A set of Android device configuration permutations is defined by the the cross-product of the given axes. Internally, the given AndroidMatrix will be expanded into a set of AndroidDevices. Only supported permutations will be instantiated. Invalid permutations (e.g., incompatible models/versions) are ignored.'
      type: object
      id: AndroidMatrix
    TestTargetsForShard:
      type: object
      id: TestTargetsForShard
      description: Test targets for a shard.
      properties:
        testTargets:
          items:
            type: string
          description: 'Group of packages, classes, and/or test methods to be run for each shard. The targets need to be specified in AndroidJUnitRunner argument format. For example, "package com.my.packages" "class com.my.package.MyClass". The number of test_targets must be greater than 0.'
          type: array
    AndroidInstrumentationTest:
      properties:
        appPackageId:
          description: The java package for the application under test. The default value is determined by examining the application's manifest.
          type: string
        appApk:
          $ref: '#/components/schemas/FileReference'
          description: The APK for the application under test.
        testPackageId:
          type: string
          description: The java package for the test to be executed. The default value is determined by examining the application's manifest.
        orchestratorOption:
          enumDescriptions:
            - 'Default value: the server will choose the mode. Currently implies that the test will run without the orchestrator. In the future, all instrumentation tests will be run with the orchestrator. Using the orchestrator is highly encouraged because of all the benefits it offers.'
            - Run test using orchestrator. ** Only compatible with AndroidJUnitRunner version 1.1 or higher! ** Recommended.
            - Run test without using orchestrator.
          enum:
            - ORCHESTRATOR_OPTION_UNSPECIFIED
            - USE_ORCHESTRATOR
            - DO_NOT_USE_ORCHESTRATOR
          description: 'The option of whether running each test within its own invocation of instrumentation with Android Test Orchestrator or not. ** Orchestrator is only compatible with AndroidJUnitRunner version 1.1 or higher! ** Orchestrator offers the following benefits: - No shared state - Crashes are isolated - Logs are scoped per test See for more information about Android Test Orchestrator. If not set, the test will be run without the orchestrator.'
          type: string
        shardingOption:
          $ref: '#/components/schemas/ShardingOption'
          description: The option to run tests in multiple shards in parallel.
        appBundle:
          $ref: '#/components/schemas/AppBundle'
          description: A multi-apk app bundle for the application under test.
        testApk:
          description: Required. The APK containing the test code to be executed.
          $ref: '#/components/schemas/FileReference'
        testTargets:
          type: array
          items:
            type: string
          description: 'Each target must be fully qualified with the package name or class name, in one of these formats: - "package package_name" - "class package_name.class_name" - "class package_name.class_name#method_name" If empty, all targets in the module will be run.'
        testRunnerClass:
          type: string
          description: The InstrumentationTestRunner class. The default value is determined by examining the application's manifest.
      id: AndroidInstrumentationTest
      description: 'A test of an Android application that can control an Android component independently of its normal lifecycle. Android instrumentation tests run an application APK and test APK inside the same process on a virtual or physical AndroidDevice. They also specify a test runner class, such as com.google.GoogleTestRunner, which can vary on the specific instrumentation framework chosen. See for more information on types of Android tests.'
      type: object
    LauncherActivityIntent:
      type: object
      id: LauncherActivityIntent
      properties: {}
      description: Specifies an intent that starts the main launcher activity.
    ToolResultsHistory:
      id: ToolResultsHistory
      description: Represents a tool results history resource.
      type: object
      properties:
        projectId:
          description: Required. The cloud project that owns the tool results history.
          type: string
        historyId:
          description: Required. A tool results history ID.
          type: string
    ApkDetail:
      description: Android application details based on application manifest and apk archive contents.
      type: object
      properties:
        apkManifest:
          $ref: '#/components/schemas/ApkManifest'
      id: ApkDetail
    AndroidModel:
      type: object
      description: A description of an Android device tests may be run on.
      properties:
        form:
          type: string
          enum:
            - DEVICE_FORM_UNSPECIFIED
            - VIRTUAL
            - PHYSICAL
            - EMULATOR
          description: Whether this device is virtual or physical.
          enumDescriptions:
            - Do not use. For proto versioning only.
            - Android virtual device using Compute Engine native virtualization. Firebase Test Lab only.
            - Actual hardware.
            - Android virtual device using emulator in nested virtualization. Equivalent to Android Studio.
        brand:
          type: string
          description: 'The company that this device is branded with. Example: "Google", "Samsung".'
        formFactor:
          type: string
          enumDescriptions:
            - Do not use. For proto versioning only.
            - This device has the shape of a phone.
            - This device has the shape of a tablet.
            - This device has the shape of a watch or other wearable.
          description: 'Whether this device is a phone, tablet, wearable, etc.'
          enum:
            - DEVICE_FORM_FACTOR_UNSPECIFIED
            - PHONE
            - TABLET
            - WEARABLE
        tags:
          type: array
          description: 'Tags for this dimension. Examples: "default", "preview", "deprecated".'
          items:
            type: string
        lowFpsVideoRecording:
          type: boolean
          description: True if and only if tests with this model are recorded by stitching together screenshots. See use_low_spec_video_recording in device config.
        screenY:
          format: int32
          description: Screen size in the vertical (Y) dimension measured in pixels.
          type: integer
        name:
          type: string
          description: 'The human-readable marketing name for this device model. Examples: "Nexus 5", "Galaxy S5".'
        supportedVersionIds:
          items:
            type: string
          description: The set of Android versions this device supports.
          type: array
        screenX:
          type: integer
          format: int32
          description: Screen size in the horizontal (X) dimension measured in pixels.
        id:
          type: string
          description: The unique opaque id for this model. Use this for invoking the TestExecutionService.
        thumbnailUrl:
          description: URL of a thumbnail image (photo) of the device.
          type: string
        screenDensity:
          type: integer
          format: int32
          description: Screen density in DPI. This corresponds to ro.sf.lcd_density
        perVersionInfo:
          description: Version-specific information of an Android model.
          type: array
          items:
            $ref: '#/components/schemas/PerAndroidVersionInfo'
        codename:
          description: The name of the industrial design. This corresponds to android.os.Build.DEVICE.
          type: string
        manufacturer:
          type: string
          description: The manufacturer of this device.
        supportedAbis:
          type: array
          items:
            type: string
          description: 'The list of supported ABIs for this device. This corresponds to either android.os.Build.SUPPORTED_ABIS (for API level 21 and above) or android.os.Build.CPU_ABI/CPU_ABI2. The most preferred ABI is the first element in the list. Elements are optionally prefixed by "version_id:" (where version_id is the id of an AndroidVersion), denoting an ABI that is supported only on a particular version.'
      id: AndroidModel
    TestEnvironmentCatalog:
      properties:
        networkConfigurationCatalog:
          $ref: '#/components/schemas/NetworkConfigurationCatalog'
          description: Supported network configurations.
        deviceIpBlockCatalog:
          $ref: '#/components/schemas/DeviceIpBlockCatalog'
          description: The IP blocks used by devices in the test environment.
        iosDeviceCatalog:
          $ref: '#/components/schemas/IosDeviceCatalog'
          description: Supported iOS devices.
        softwareCatalog:
          description: The software test environment provided by TestExecutionService.
          $ref: '#/components/schemas/ProvidedSoftwareCatalog'
        androidDeviceCatalog:
          description: Supported Android devices.
          $ref: '#/components/schemas/AndroidDeviceCatalog'
      id: TestEnvironmentCatalog
      type: object
      description: A description of a test environment.
    ShardingOption:
      properties:
        manualSharding:
          description: 'Shards test cases into the specified groups of packages, classes, and/or methods.'
          $ref: '#/components/schemas/ManualSharding'
        uniformSharding:
          description: Uniformly shards test cases given a total number of shards.
          $ref: '#/components/schemas/UniformSharding'
        smartSharding:
          description: Shards test based on previous test case timing records.
          $ref: '#/components/schemas/SmartSharding'
      description: Options for enabling sharding.
      type: object
      id: ShardingOption
    IosVersion:
      id: IosVersion
      description: An iOS version.
      properties:
        supportedXcodeVersionIds:
          type: array
          description: The available Xcode versions for this version.
          items:
            type: string
        minorVersion:
          description: 'An integer representing the minor iOS version. Examples: "1", "2".'
          format: int32
          type: integer
        tags:
          type: array
          description: 'Tags for this dimension. Examples: "default", "preview", "deprecated".'
          items:
            type: string
        id:
          description: An opaque id for this iOS version. Use this id to invoke the TestExecutionService.
          type: string
        majorVersion:
          description: 'An integer representing the major iOS version. Examples: "8", "9".'
          type: integer
          format: int32
      type: object
    IosDevice:
      id: IosDevice
      description: A single iOS device.
      type: object
      properties:
        locale:
          type: string
          description: Required. The locale the test device used for testing. Use the TestEnvironmentDiscoveryService to get supported options.
        iosVersionId:
          type: string
          description: Required. The id of the iOS major software version to be used. Use the TestEnvironmentDiscoveryService to get supported options.
        orientation:
          type: string
          description: Required. How the device is oriented during the test. Use the TestEnvironmentDiscoveryService to get supported options.
        iosModelId:
          description: Required. The id of the iOS device to be used. Use the TestEnvironmentDiscoveryService to get supported options.
          type: string
    GetApkDetailsResponse:
      id: GetApkDetailsResponse
      properties:
        apkDetail:
          $ref: '#/components/schemas/ApkDetail'
          description: Details of the Android APK.
      description: Response containing the details of the specified Android application APK.
      type: object
    UsesFeature:
      description: 'A tag within a manifest. https://developer.android.com/guide/topics/manifest/uses-feature-element.html'
      id: UsesFeature
      type: object
      properties:
        name:
          type: string
          description: 'The android:name value'
        isRequired:
          description: 'The android:required value'
          type: boolean
    AndroidDeviceList:
      id: AndroidDeviceList
      type: object
      properties:
        androidDevices:
          description: Required. A list of Android devices.
          type: array
          items:
            $ref: '#/components/schemas/AndroidDevice'
      description: A list of Android device configurations in which the test is to be executed.
    IosDeviceList:
      description: A list of iOS device configurations in which the test is to be executed.
      properties:
        iosDevices:
          type: array
          items:
            $ref: '#/components/schemas/IosDevice'
          description: Required. A list of iOS devices.
      id: IosDeviceList
      type: object
    NetworkConfiguration:
      type: object
      properties:
        downRule:
          $ref: '#/components/schemas/TrafficRule'
          description: The emulation rule applying to the download traffic.
        id:
          description: The unique opaque id for this network traffic configuration.
          type: string
        upRule:
          description: The emulation rule applying to the upload traffic.
          $ref: '#/components/schemas/TrafficRule'
      id: NetworkConfiguration
    IosDeviceCatalog:
      properties:
        models:
          type: array
          description: The set of supported iOS device models.
          items:
            $ref: '#/components/schemas/IosModel'
        xcodeVersions:
          description: The set of supported Xcode versions.
          type: array
          items:
            $ref: '#/components/schemas/XcodeVersion'
        versions:
          items:
            $ref: '#/components/schemas/IosVersion'
          description: The set of supported iOS software versions.
          type: array
        runtimeConfiguration:
          $ref: '#/components/schemas/IosRuntimeConfiguration'
          description: The set of supported runtime configurations.
      type: object
      description: The currently supported iOS devices.
      id: IosDeviceCatalog
    Distribution:
      description: Data about the relative number of devices running a given configuration of the Android platform.
      type: object
      properties:
        measurementTime:
          type: string
          format: google-datetime
          description: Output only. The time this distribution was measured.
        marketShare:
          type: number
          description: Output only. The estimated fraction (0-1) of the total market with this configuration.
          format: double
      id: Distribution
    IosXcTest:
      id: IosXcTest
      properties:
        appBundleId:
          type: string
          description: Output only. The bundle id for the application under test.
        xctestrun:
          $ref: '#/components/schemas/FileReference'
          description: 'An .xctestrun file that will override the .xctestrun file in the tests zip. Because the .xctestrun file contains environment variables along with test methods to run and/or ignore, this can be useful for sharding tests. Default is taken from the tests zip.'
        xcodeVersion:
          description: The Xcode version that should be used for the test. Use the TestEnvironmentDiscoveryService to get supported options. Defaults to the latest Xcode version Firebase Test Lab supports.
          type: string
        testsZip:
          $ref: '#/components/schemas/FileReference'
          description: Required. The .zip containing the .xctestrun file and the contents of the DerivedData/Build/Products directory. The .xctestrun file in this zip is ignored if the xctestrun field is specified.
        testSpecialEntitlements:
          type: boolean
          description: The option to test special app entitlements. Setting this would re-sign the app having special entitlements with an explicit application-identifier. Currently supports testing aps-environment entitlement.
      description: 'A test of an iOS application that uses the XCTest framework. Xcode supports the option to "build for testing", which generates an .xctestrun file that contains a test specification (arguments, test methods, etc). This test type accepts a zip file containing the .xctestrun file and the corresponding contents of the Build/Products directory that contains all the binaries needed to run the tests.'
      type: object
    IosModel:
      description: A description of an iOS device tests may be run on.
      properties:
        formFactor:
          description: 'Whether this device is a phone, tablet, wearable, etc.'
          type: string
          enum:
            - DEVICE_FORM_FACTOR_UNSPECIFIED
            - PHONE
            - TABLET
            - WEARABLE
          enumDescriptions:
            - Do not use. For proto versioning only.
            - This device has the shape of a phone.
            - This device has the shape of a tablet.
            - This device has the shape of a watch or other wearable.
        screenX:
          type: integer
          format: int32
          description: Screen size in the horizontal (X) dimension measured in pixels.
        screenDensity:
          description: Screen density in DPI.
          format: int32
          type: integer
        perVersionInfo:
          description: Version-specific information of an iOS model.
          type: array
          items:
            $ref: '#/components/schemas/PerIosVersionInfo'
        supportedVersionIds:
          description: The set of iOS major software versions this device supports.
          type: array
          items:
            type: string
        screenY:
          type: integer
          format: int32
          description: Screen size in the vertical (Y) dimension measured in pixels.
        id:
          type: string
          description: The unique opaque id for this model. Use this for invoking the TestExecutionService.
        name:
          description: 'The human-readable name for this device model. Examples: "iPhone 4s", "iPad Mini 2".'
          type: string
        deviceCapabilities:
          items:
            type: string
          type: array
          description: 'Device capabilities. Copied from https://developer.apple.com/library/archive/documentation/DeviceInformation/Reference/iOSDeviceCompatibility/DeviceCompatibilityMatrix/DeviceCompatibilityMatrix.html'
        tags:
          type: array
          items:
            type: string
          description: 'Tags for this dimension. Examples: "default", "preview", "deprecated".'
      type: object
      id: IosModel
    IosTestLoop:
      type: object
      id: IosTestLoop
      description: A test of an iOS application that implements one or more game loop scenarios. This test type accepts an archived application (.ipa file) and a list of integer scenarios that will be executed on the app sequentially.
      properties:
        appBundleId:
          description: Output only. The bundle id for the application under test.
          type: string
        appIpa:
          $ref: '#/components/schemas/FileReference'
          description: Required. The .ipa of the application to test.
        scenarios:
          type: array
          description: The list of scenarios that should be run during the test. Defaults to the single scenario 0 if unspecified.
          items:
            type: integer
            format: int32
    TestMatrix:
      id: TestMatrix
      type: object
      properties:
        environmentMatrix:
          $ref: '#/components/schemas/EnvironmentMatrix'
          description: Required. The devices the tests are being executed on.
        clientInfo:
          description: Information about the client which invoked the test.
          $ref: '#/components/schemas/ClientInfo'
        failFast:
          type: boolean
          description: 'If true, only a single attempt at most will be made to run each execution/shard in the matrix. Flaky test attempts are not affected. Normally, 2 or more attempts are made if a potential infrastructure issue is detected. This feature is for latency sensitive workloads. The incidence of execution failures may be significantly greater for fail-fast matrices and support is more limited because of that expectation.'
        testMatrixId:
          type: string
          description: Output only. Unique id set by the service.
        testSpecification:
          description: Required. How to run the test.
          $ref: '#/components/schemas/TestSpecification'
        timestamp:
          format: google-datetime
          type: string
          description: Output only. The time this test matrix was initially created.
        resultStorage:
          description: Required. Where the results for the matrix are written.
          $ref: '#/components/schemas/ResultStorage'
        projectId:
          description: The cloud project that owns the test matrix.
          type: string
        invalidMatrixDetails:
          enumDeprecated:
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
          enumDescriptions:
            - Do not use. For proto versioning only.
            - 'The matrix is INVALID, but there are no further details available.'
            - The input app APK could not be parsed.
            - The input test APK could not be parsed.
            - The AndroidManifest.xml could not be found.
            - The APK manifest does not declare a package name.
            - 'The APK application ID (aka package name) is invalid. See also https://developer.android.com/studio/build/application-id'
            - The test package and app package are the same.
            - The test apk does not declare an instrumentation.
            - The input app apk does not have a signature.
            - The test runner class specified by user or in the test APK's manifest file is not compatible with Android Test Orchestrator. Orchestrator is only compatible with AndroidJUnitRunner version 1.1 or higher. Orchestrator can be disabled by using DO_NOT_USE_ORCHESTRATOR OrchestratorOption.
            - 'The test APK does not contain the test runner class specified by the user or in the manifest file. This can be caused by one of the following reasons: - the user provided a runner class name that''s incorrect, or - the test runner isn''t built into the test APK (might be in the app APK instead).'
            - A main launcher activity could not be found.
            - The app declares one or more permissions that are not allowed.
            - There is a conflict in the provided robo_directives.
            - There is at least one invalid resource name in the provided robo directives
            - Invalid definition of action in the robo directives (e.g. a click or ignore action includes an input text field)
            - 'There is no test loop intent filter, or the one that is given is not formatted correctly.'
            - The request contains a scenario label that was not declared in the manifest.
            - There was an error when parsing a label's value.
            - The request contains a scenario number that was not declared in the manifest.
            - Device administrator applications are not allowed.
            - The zipped XCTest was malformed. The zip did not contain a single .xctestrun file and the contents of the DerivedData/Build/Products directory.
            - The zipped XCTest was built for the iOS simulator rather than for a physical device.
            - The .xctestrun file did not specify any test targets.
            - 'One or more of the test targets defined in the .xctestrun file specifies "UseDestinationArtifacts", which is disallowed.'
            - XC tests which run on physical devices must have "IsAppHostedTestBundle" == "true" in the xctestrun file.
            - An Info.plist file in the XCTest zip could not be parsed.
            - The APK is marked as "testOnly". Deprecated and not currently used.
            - The input IPA could not be parsed.
            - The application doesn't register the game loop URL scheme.
            - The iOS application bundle (.app) couldn't be processed.
            - 'APK contains no code. See also https://developer.android.com/guide/topics/manifest/application-element.html#code'
            - 'Either the provided input APK path was malformed, the APK file does not exist, or the user does not have permission to access the APK file.'
            - APK is built for a preview SDK which is unsupported
            - The matrix expanded to contain too many executions.
            - Not enough test quota to run the executions in this matrix.
            - 'A required cloud service api is not activated. See: https://firebase.google.com/docs/test-lab/android/continuous#requirements'
            - There was an unknown permission issue running this test.
          description: Output only. Describes why the matrix is considered invalid. Only useful for matrices in the INVALID state.
          type: string
          enum:
            - INVALID_MATRIX_DETAILS_UNSPECIFIED
            - DETAILS_UNAVAILABLE
            - MALFORMED_APK
            - MALFORMED_TEST_APK
            - NO_MANIFEST
            - NO_PACKAGE_NAME
            - INVALID_PACKAGE_NAME
            - TEST_SAME_AS_APP
            - NO_INSTRUMENTATION
            - NO_SIGNATURE
            - INSTRUMENTATION_ORCHESTRATOR_INCOMPATIBLE
            - NO_TEST_RUNNER_CLASS
            - NO_LAUNCHER_ACTIVITY
            - FORBIDDEN_PERMISSIONS
            - INVALID_ROBO_DIRECTIVES
            - INVALID_RESOURCE_NAME
            - INVALID_DIRECTIVE_ACTION
            - TEST_LOOP_INTENT_FILTER_NOT_FOUND
            - SCENARIO_LABEL_NOT_DECLARED
            - SCENARIO_LABEL_MALFORMED
            - SCENARIO_NOT_DECLARED
            - DEVICE_ADMIN_RECEIVER
            - MALFORMED_XC_TEST_ZIP
            - BUILT_FOR_IOS_SIMULATOR
            - NO_TESTS_IN_XC_TEST_ZIP
            - USE_DESTINATION_ARTIFACTS
            - TEST_NOT_APP_HOSTED
            - PLIST_CANNOT_BE_PARSED
            - TEST_ONLY_APK
            - MALFORMED_IPA
            - MISSING_URL_SCHEME
            - MALFORMED_APP_BUNDLE
            - NO_CODE_APK
            - INVALID_INPUT_APK
            - INVALID_APK_PREVIEW_SDK
            - MATRIX_TOO_LARGE
            - TEST_QUOTA_EXCEEDED
            - SERVICE_NOT_ACTIVATED
            - UNKNOWN_PERMISSION_ERROR
        outcomeSummary:
          enumDescriptions:
            - Do not use. For proto versioning only.
            - 'The test matrix run was successful, for instance: - All the test cases passed. - Robo did not detect a crash of the application under test.'
            - 'A run failed, for instance: - One or more test cases failed. - A test timed out. - The application under test crashed.'
            - Something unexpected happened. The run should still be considered unsuccessful but this is likely a transient problem and re-running the test might be successful.
            - 'All tests were skipped, for instance: - All device configurations were incompatible.'
          description: Output Only. The overall outcome of the test. Only set when the test matrix state is FINISHED.
          enum:
            - OUTCOME_SUMMARY_UNSPECIFIED
            - SUCCESS
            - FAILURE
            - INCONCLUSIVE
            - SKIPPED
          type: string
        state:
          enumDescriptions:
            - Do not use. For proto versioning only.
            - The execution or matrix is being validated.
            - The execution or matrix is waiting for resources to become available.
            - The execution is currently being processed. Can only be set on an execution.
            - 'The execution or matrix has terminated normally. On a matrix this means that the matrix level processing completed normally, but individual executions may be in an ERROR state.'
            - The execution or matrix has stopped because it encountered an infrastructure failure.
            - The execution was not run because it corresponds to a unsupported environment. Can only be set on an execution.
            - 'The execution was not run because the provided inputs are incompatible with the requested environment. Example: requested AndroidVersion is lower than APK''s minSdkVersion Can only be set on an execution.'
            - 'The execution was not run because the provided inputs are incompatible with the requested architecture. Example: requested device does not support running the native code in the supplied APK Can only be set on an execution.'
            - The user cancelled the execution. Can only be set on an execution.
            - 'The execution or matrix was not run because the provided inputs are not valid. Examples: input file is not of the expected type, is malformed/corrupt, or was flagged as malware'
          enum:
            - TEST_STATE_UNSPECIFIED
            - VALIDATING
            - PENDING
            - RUNNING
            - FINISHED
            - ERROR
            - UNSUPPORTED_ENVIRONMENT
            - INCOMPATIBLE_ENVIRONMENT
            - INCOMPATIBLE_ARCHITECTURE
            - CANCELLED
            - INVALID
          description: Output only. Indicates the current progress of the test matrix.
          type: string
        testExecutions:
          type: array
          description: Output only. The list of test executions that the service creates for this matrix.
          items:
            $ref: '#/components/schemas/TestExecution'
        flakyTestAttempts:
          format: int32
          description: 'The number of times a TestExecution should be re-attempted if one or more of its test cases fail for any reason. The maximum number of reruns allowed is 10. Default is 0, which implies no reruns.'
          type: integer
      description: 'TestMatrix captures all details about a test. It contains the environment configuration, test specification, test executions and overall state and outcome.'
    Environment:
      properties:
        iosDevice:
          $ref: '#/components/schemas/IosDevice'
          description: An iOS device which must be used with an iOS test.
        androidDevice:
          description: An Android device which must be used with an Android test.
          $ref: '#/components/schemas/AndroidDevice'
      type: object
      description: The environment in which the test is run.
      id: Environment
    Account:
      id: Account
      description: Identifies an account and how to log into it.
      type: object
      properties:
        googleAuto:
          $ref: '#/components/schemas/GoogleAuto'
          description: An automatic google login account.
    AndroidDeviceCatalog:
      description: The currently supported Android devices.
      type: object
      properties:
        models:
          items:
            $ref: '#/components/schemas/AndroidModel'
          description: The set of supported Android device models.
          type: array
        runtimeConfiguration:
          $ref: '#/components/schemas/AndroidRuntimeConfiguration'
          description: The set of supported runtime configurations.
        versions:
          items:
            $ref: '#/components/schemas/AndroidVersion'
          description: The set of supported Android OS versions.
          type: array
      id: AndroidDeviceCatalog
    Locale:
      properties:
        name:
          description: 'A human-friendly name for this language/locale. Example: "English".'
          type: string
        region:
          type: string
          description: 'A human-friendly string representing the region for this locale. Example: "United States". Not present for every locale.'
        tags:
          items:
            type: string
          type: array
          description: 'Tags for this dimension. Example: "default".'
        id:
          type: string
          description: 'The id for this locale. Example: "en_US".'
      type: object
      description: A location/region designation for language.
      id: Locale
    ToolResultsExecution:
      type: object
      id: ToolResultsExecution
      description: Represents a tool results execution resource. This has the results of a TestMatrix.
      properties:
        projectId:
          type: string
          description: Output only. The cloud project that owns the tool results execution.
        historyId:
          description: Output only. A tool results history ID.
          type: string
        executionId:
          type: string
          description: Output only. A tool results execution ID.
    RoboDirective:
      id: RoboDirective
      description: 'Directs Robo to interact with a specific UI element if it is encountered during the crawl. Currently, Robo can perform text entry or element click.'
      type: object
      properties:
        resourceName:
          type: string
          description: 'Required. The android resource name of the target UI element. For example, in Java: R.string.foo in xml: @string/foo Only the "foo" part is needed. Reference doc: https://developer.android.com/guide/topics/resources/accessing-resources.html'
        actionType:
          type: string
          enumDescriptions:
            - DO NOT USE. For proto versioning only.
            - Direct Robo to click on the specified element. No-op if specified element is not clickable.
            - Direct Robo to enter text on the specified element. No-op if specified element is not enabled or does not allow text entry.
            - Direct Robo to ignore interactions with a specific element.
          description: Required. The type of action that Robo should perform on the specified element.
          enum:
            - ACTION_TYPE_UNSPECIFIED
            - SINGLE_CLICK
            - ENTER_TEXT
            - IGNORE
        inputText:
          description: 'The text that Robo is directed to set. If left empty, the directive will be treated as a CLICK on the element matching the resource_name.'
          type: string
    PerIosVersionInfo:
      description: A version-specific information of an iOS model.
      type: object
      properties:
        deviceCapacity:
          description: The number of online devices for an iOS version.
          type: string
          enumDescriptions:
            - The value of device capacity is unknown or unset.
            - 'Devices that are high in capacity (The lab has a large number of these devices). These devices are generally suggested for running a large number of simultaneous tests (e.g. more than 100 tests). Please note that high capacity devices do not guarantee short wait times due to several factors: 1. Traffic (how heavily they are used at any given moment) 2. High capacity devices are prioritized for certain usages, which may cause user tests to be slower than selecting other similar device types.'
            - 'Devices that are medium in capacity (The lab has a decent number of these devices, though not as many as high capacity devices). These devices are suitable for fewer test runs (e.g. fewer than 100 tests) and only for low shard counts (e.g. less than 10 shards).'
            - 'Devices that are low in capacity (The lab has a small number of these devices). These devices may be used if users need to test on this specific device model and version. Please note that due to low capacity, the tests may take much longer to finish, especially if a large number of tests are invoked at once. These devices are not suitable for test sharding.'
            - 'Devices that are completely missing from the lab. These devices are unavailable either temporarily or permanently and should not be requested. If the device is also marked as deprecated, this state is very likely permanent.'
          enum:
            - DEVICE_CAPACITY_UNSPECIFIED
            - DEVICE_CAPACITY_HIGH
            - DEVICE_CAPACITY_MEDIUM
            - DEVICE_CAPACITY_LOW
            - DEVICE_CAPACITY_NONE
        versionId:
          description: An iOS version.
          type: string
      id: PerIosVersionInfo
    Metadata:
      properties:
        value:
          description: 'The android:value value'
          type: string
        name:
          description: 'The android:name value'
          type: string
      id: Metadata
      description: 'A tag within a manifest. https://developer.android.com/guide/topics/manifest/meta-data-element.html'
      type: object
    TrafficRule:
      properties:
        burst:
          type: number
          description: Burst size in kbits.
          format: float
        delay:
          type: string
          format: google-duration
          description: 'Packet delay, must be >= 0.'
        bandwidth:
          type: number
          format: float
          description: Bandwidth in kbits/second.
        packetLossRatio:
          description: Packet loss ratio (0.0 - 1.0).
          type: number
          format: float
        packetDuplicationRatio:
          format: float
          description: Packet duplication ratio (0.0 - 1.0).
          type: number
      type: object
      id: TrafficRule
      description: Network emulation parameters.
    SmartSharding:
      description: Shards test based on previous test case timing records.
      id: SmartSharding
      properties:
        targetedShardDuration:
          type: string
          format: google-duration
          description: 'The amount of time tests within a shard should take. Default: 300 seconds (5 minutes). The minimum allowed: 120 seconds (2 minutes). The shard count is dynamically set based on time, up to the maximum shard limit (described below). To guarantee at least one test case for each shard, the number of shards will not exceed the number of test cases. Shard duration will be exceeded if: - The maximum shard limit is reached and there is more calculated test time remaining to allocate into shards. - Any individual test is estimated to be longer than the targeted shard duration. Shard duration is not guaranteed because smart sharding uses test case history and default durations which may not be accurate. The rules for finding the test case timing records are: - If the service has processed a test case in the last 30 days, the record of the latest successful test case will be used. - For new test cases, the average duration of other known test cases will be used. - If there are no previous test case timing records available, the default test case duration is 15 seconds. Because the actual shard duration can exceed the targeted shard duration, we recommend that you set the targeted value at least 5 minutes less than the maximum allowed test timeout (45 minutes for physical devices and 60 minutes for virtual), or that you use the custom test timeout value that you set. This approach avoids cancelling the shard before all tests can finish. Note that there is a limit for maximum number of shards. When you select one or more physical devices, the number of shards must be <= 50. When you select one or more ARM virtual devices, it must be <= 100. When you select only x86 virtual devices, it must be <= 500. To guarantee at least one test case for per shard, the number of shards will not exceed the number of test cases. Each shard created counts toward daily test quota.'
      type: object
    TestExecution:
      id: TestExecution
      description: A single test executed in a single environment.
      type: object
      properties:
        testDetails:
          $ref: '#/components/schemas/TestDetails'
          description: Output only. Additional details about the running test.
        matrixId:
          type: string
          description: Output only. Id of the containing TestMatrix.
        timestamp:
          type: string
          format: google-datetime
          description: Output only. The time this test execution was initially created.
        projectId:
          type: string
          description: Output only. The cloud project that owns the test execution.
        state:
          enum:
            - TEST_STATE_UNSPECIFIED
            - VALIDATING
            - PENDING
            - RUNNING
            - FINISHED
            - ERROR
            - UNSUPPORTED_ENVIRONMENT
            - INCOMPATIBLE_ENVIRONMENT
            - INCOMPATIBLE_ARCHITECTURE
            - CANCELLED
            - INVALID
          description: 'Output only. Indicates the current progress of the test execution (e.g., FINISHED).'
          enumDescriptions:
            - Do not use. For proto versioning only.
            - The execution or matrix is being validated.
            - The execution or matrix is waiting for resources to become available.
            - The execution is currently being processed. Can only be set on an execution.
            - 'The execution or matrix has terminated normally. On a matrix this means that the matrix level processing completed normally, but individual executions may be in an ERROR state.'
            - The execution or matrix has stopped because it encountered an infrastructure failure.
            - The execution was not run because it corresponds to a unsupported environment. Can only be set on an execution.
            - 'The execution was not run because the provided inputs are incompatible with the requested environment. Example: requested AndroidVersion is lower than APK''s minSdkVersion Can only be set on an execution.'
            - 'The execution was not run because the provided inputs are incompatible with the requested architecture. Example: requested device does not support running the native code in the supplied APK Can only be set on an execution.'
            - The user cancelled the execution. Can only be set on an execution.
            - 'The execution or matrix was not run because the provided inputs are not valid. Examples: input file is not of the expected type, is malformed/corrupt, or was flagged as malware'
          type: string
        shard:
          description: Output only. Details about the shard.
          $ref: '#/components/schemas/Shard'
        id:
          description: Output only. Unique id set by the service.
          type: string
        testSpecification:
          description: Output only. How to run the test.
          $ref: '#/components/schemas/TestSpecification'
        environment:
          description: Output only. How the host machine(s) are configured.
          $ref: '#/components/schemas/Environment'
        toolResultsStep:
          description: Output only. Where the results for this execution are written.
          $ref: '#/components/schemas/ToolResultsStep'
  parameters:
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
  x-stackQL-resources:
    application_detail_service_apk_details:
      id: google.testing.application_detail_service_apk_details
      name: application_detail_service_apk_details
      title: Application Detail Service Apk Details
      methods:
        get_apk_details:
          operation:
            $ref: '#/paths/~1v1~1applicationDetailService~1getApkDetails/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    test_matrices:
      id: google.testing.test_matrices
      name: test_matrices
      title: Test Matrices
      methods:
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1testMatrices~1{testMatrixId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1testMatrices/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1testMatrices~1{testMatrixId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/test_matrices/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/test_matrices/methods/create'
        update: []
        delete: []
    test_environment_catalog:
      id: google.testing.test_environment_catalog
      name: test_environment_catalog
      title: Test Environment Catalog
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1testEnvironmentCatalog~1{environmentType}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/test_environment_catalog/methods/get'
        insert: []
        update: []
        delete: []
paths:
  /v1/applicationDetailService/getApkDetails:
    parameters: &ref_1
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
    post:
      description: Gets the details of an Android application APK.
      operationId: testing.applicationDetailService.getApkDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileReference'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApkDetailsResponse'
      parameters: []
      x-stackQL-resource: application_detail_service_apk_details
      x-stackQL-method: get_apk_details
      x-stackQL-verb: exec
  '/v1/projects/{projectId}/testMatrices/{testMatrixId}:cancel':
    parameters: *ref_1
    post:
      description: 'Cancels unfinished test executions in a test matrix. This call returns immediately and cancellation proceeds asynchronously. If the matrix is already final, this operation will have no effect. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the Test Matrix does not exist'
      operationId: testing.projects.testMatrices.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelTestMatrixResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: testMatrixId
          required: true
          schema:
            type: string
      x-stackQL-resource: test_matrices
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectId}/testMatrices':
    parameters: *ref_1
    post:
      description: 'Creates and runs a matrix of tests according to the given specifications. Unsupported environments will be returned in the state UNSUPPORTED. A test matrix is limited to use at most 2000 devices in parallel. The returned matrix will not yet contain the executions that will be created for this matrix. Execution creation happens later on and will require a call to GetTestMatrix. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed or if the matrix tries to use too many simultaneous devices.'
      operationId: testing.projects.testMatrices.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestMatrix'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestMatrix'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: test_matrices
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectId}/testMatrices/{testMatrixId}':
    parameters: *ref_1
    get:
      description: 'Checks the status of a test matrix and the executions once they are created. The test matrix will contain the list of test executions to run if and only if the resultStorage.toolResultsExecution fields have been populated. Note: Flaky test executions may be added to the matrix at a later stage. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the Test Matrix does not exist'
      operationId: testing.projects.testMatrices.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestMatrix'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: testMatrixId
          required: true
          schema:
            type: string
      x-stackQL-resource: test_matrices
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/testEnvironmentCatalog/{environmentType}':
    parameters: *ref_1
    get:
      description: 'Gets the catalog of supported test environments. May return any of the following canonical error codes: - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the environment type does not exist - INTERNAL - if an internal error occurred'
      operationId: testing.testEnvironmentCatalog.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestEnvironmentCatalog'
      parameters:
        - in: path
          name: environmentType
          required: true
          schema:
            type: string
        - in: query
          name: projectId
          schema:
            type: string
      x-stackQL-resource: test_environment_catalog
      x-stackQL-method: get
      x-stackQL-verb: select
