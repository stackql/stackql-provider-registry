openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Cloud Testing API
  description: Allows developers to run automated tests for their mobile applications on Google infrastructure.
  version: v1
  x-discovery-doc-revision: '20230822'
  x-generated-date: '2023-09-01'
externalDocs:
  url: 'https://developers.google.com/cloud-test-lab/'
servers:
  - url: 'https://testing.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform.read-only': View your data across Google Cloud services and see the email address of your Google Account
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    AndroidMatrix:
      properties:
        orientations:
          items:
            type: string
          type: array
          description: Required. The set of orientations to test with. Use the TestEnvironmentDiscoveryService to get supported options.
        androidVersionIds:
          type: array
          items:
            type: string
          description: Required. The ids of the set of Android OS version to be used. Use the TestEnvironmentDiscoveryService to get supported options.
        androidModelIds:
          type: array
          items:
            type: string
          description: Required. The ids of the set of Android device to be used. Use the TestEnvironmentDiscoveryService to get supported options.
        locales:
          type: array
          items:
            type: string
          description: Required. The set of locales the test device will enable for testing. Use the TestEnvironmentDiscoveryService to get supported options.
      type: object
      id: AndroidMatrix
      description: 'A set of Android device configuration permutations is defined by the the cross-product of the given axes. Internally, the given AndroidMatrix will be expanded into a set of AndroidDevices. Only supported permutations will be instantiated. Invalid permutations (e.g., incompatible models/versions) are ignored.'
    TestTargetsForShard:
      type: object
      id: TestTargetsForShard
      description: Test targets for a shard.
      properties:
        testTargets:
          description: 'Group of packages, classes, and/or test methods to be run for each shard. The targets need to be specified in AndroidJUnitRunner argument format. For example, "package com.my.packages" "class com.my.package.MyClass". The number of test_targets must be greater than 0.'
          items:
            type: string
          type: array
    AndroidRuntimeConfiguration:
      type: object
      description: Android configuration that can be selected at the time a test is run.
      properties:
        locales:
          description: The set of available locales.
          type: array
          items:
            $ref: '#/components/schemas/Locale'
        orientations:
          items:
            $ref: '#/components/schemas/Orientation'
          type: array
          description: The set of available orientations.
      id: AndroidRuntimeConfiguration
    IosRuntimeConfiguration:
      description: iOS configuration that can be selected at the time a test is run.
      properties:
        orientations:
          type: array
          description: The set of available orientations.
          items:
            $ref: '#/components/schemas/Orientation'
        locales:
          description: The set of available locales.
          items:
            $ref: '#/components/schemas/Locale'
          type: array
      type: object
      id: IosRuntimeConfiguration
    Metadata:
      id: Metadata
      description: 'A tag within a manifest. https://developer.android.com/guide/topics/manifest/meta-data-element.html'
      type: object
      properties:
        value:
          description: 'The android:value value'
          type: string
        name:
          description: 'The android:name value'
          type: string
    ApkManifest:
      description: 'An Android app manifest. See http://developer.android.com/guide/topics/manifest/manifest-intro.html'
      id: ApkManifest
      properties:
        targetSdkVersion:
          format: int32
          description: Specifies the API Level on which the application is designed to run.
          type: integer
        usesFeature:
          description: Feature usage tags defined in the manifest.
          type: array
          items:
            $ref: '#/components/schemas/UsesFeature'
        maxSdkVersion:
          format: int32
          description: Maximum API level on which the application is designed to run.
          type: integer
        metadata:
          description: Meta-data tags defined in the manifest.
          items:
            $ref: '#/components/schemas/Metadata'
          type: array
        minSdkVersion:
          format: int32
          description: Minimum API level required for the application to run.
          type: integer
        services:
          items:
            $ref: '#/components/schemas/Service'
          description: Services contained in the tag.
          type: array
        packageName:
          type: string
          description: 'Full Java-style package name for this application, e.g. "com.example.foo".'
        intentFilters:
          items:
            $ref: '#/components/schemas/IntentFilter'
          type: array
        versionCode:
          format: int64
          description: Version number used internally by the app.
          type: string
        applicationLabel:
          type: string
          description: User-readable name for the application.
        versionName:
          description: Version number shown to users.
          type: string
        usesPermission:
          items:
            type: string
          description: Permissions declared to be used by the application
          type: array
      type: object
    Service:
      id: Service
      type: object
      properties:
        name:
          description: 'The android:name value'
          type: string
        intentFilter:
          type: array
          description: Intent filters in the service
          items:
            $ref: '#/components/schemas/IntentFilter'
      description: 'The section of an tag. https://developer.android.com/guide/topics/manifest/service-element'
    DeviceIpBlockCatalog:
      id: DeviceIpBlockCatalog
      description: List of IP blocks used by the Firebase Test Lab
      properties:
        ipBlocks:
          items:
            $ref: '#/components/schemas/DeviceIpBlock'
          type: array
          description: The device IP blocks used by Firebase Test Lab
      type: object
    StartActivityIntent:
      properties:
        action:
          type: string
          description: Action name. Required for START_ACTIVITY.
        categories:
          items:
            type: string
          type: array
          description: Intent categories to set on the intent.
        uri:
          type: string
          description: URI for the action.
      description: 'A starting intent specified by an action, uri, and categories.'
      id: StartActivityIntent
      type: object
    NetworkConfigurationCatalog:
      type: object
      properties:
        configurations:
          type: array
          items:
            $ref: '#/components/schemas/NetworkConfiguration'
      id: NetworkConfigurationCatalog
    IosDeviceCatalog:
      id: IosDeviceCatalog
      properties:
        xcodeVersions:
          description: The set of supported Xcode versions.
          type: array
          items:
            $ref: '#/components/schemas/XcodeVersion'
        versions:
          items:
            $ref: '#/components/schemas/IosVersion'
          type: array
          description: The set of supported iOS software versions.
        models:
          description: The set of supported iOS device models.
          items:
            $ref: '#/components/schemas/IosModel'
          type: array
        runtimeConfiguration:
          description: The set of supported runtime configurations.
          $ref: '#/components/schemas/IosRuntimeConfiguration'
      description: The currently supported iOS devices.
      type: object
    IosVersion:
      properties:
        tags:
          type: array
          items:
            type: string
          description: 'Tags for this dimension. Examples: "default", "preview", "deprecated".'
        minorVersion:
          description: 'An integer representing the minor iOS version. Examples: "1", "2".'
          format: int32
          type: integer
        supportedXcodeVersionIds:
          description: The available Xcode versions for this version.
          type: array
          items:
            type: string
        id:
          type: string
          description: An opaque id for this iOS version. Use this id to invoke the TestExecutionService.
        majorVersion:
          type: integer
          description: 'An integer representing the major iOS version. Examples: "8", "9".'
          format: int32
      type: object
      id: IosVersion
      description: An iOS version.
    AndroidVersion:
      type: object
      id: AndroidVersion
      description: A version of the Android OS.
      properties:
        apiLevel:
          description: 'The API level for this Android version. Examples: 18, 19.'
          format: int32
          type: integer
        distribution:
          $ref: '#/components/schemas/Distribution'
          description: Market share for this version.
        codeName:
          type: string
          description: 'The code name for this Android version. Examples: "JellyBean", "KitKat".'
        tags:
          description: 'Tags for this dimension. Examples: "default", "preview", "deprecated".'
          items:
            type: string
          type: array
        releaseDate:
          description: The date this Android version became available in the market.
          $ref: '#/components/schemas/Date'
        id:
          type: string
          description: An opaque id for this Android version. Use this id to invoke the TestExecutionService.
        versionString:
          description: 'A string representing this version of the Android OS. Examples: "4.3", "4.4".'
          type: string
    AndroidModel:
      id: AndroidModel
      description: A description of an Android device tests may be run on.
      properties:
        codename:
          description: The name of the industrial design. This corresponds to android.os.Build.DEVICE.
          type: string
        tags:
          items:
            type: string
          description: 'Tags for this dimension. Examples: "default", "preview", "deprecated".'
          type: array
        supportedVersionIds:
          type: array
          description: The set of Android versions this device supports.
          items:
            type: string
        manufacturer:
          description: The manufacturer of this device.
          type: string
        screenX:
          format: int32
          description: Screen size in the horizontal (X) dimension measured in pixels.
          type: integer
        formFactor:
          description: 'Whether this device is a phone, tablet, wearable, etc.'
          enumDescriptions:
            - Do not use. For proto versioning only.
            - This device has the shape of a phone.
            - This device has the shape of a tablet.
            - This device has the shape of a watch or other wearable.
          enum:
            - DEVICE_FORM_FACTOR_UNSPECIFIED
            - PHONE
            - TABLET
            - WEARABLE
          type: string
        lowFpsVideoRecording:
          type: boolean
          description: True if and only if tests with this model are recorded by stitching together screenshots. See use_low_spec_video_recording in device config.
        brand:
          description: 'The company that this device is branded with. Example: "Google", "Samsung".'
          type: string
        perVersionInfo:
          description: Version-specific information of an Android model.
          items:
            $ref: '#/components/schemas/PerAndroidVersionInfo'
          type: array
        thumbnailUrl:
          type: string
          description: URL of a thumbnail image (photo) of the device.
        name:
          description: 'The human-readable marketing name for this device model. Examples: "Nexus 5", "Galaxy S5".'
          type: string
        id:
          description: The unique opaque id for this model. Use this for invoking the TestExecutionService.
          type: string
        supportedAbis:
          type: array
          items:
            type: string
          description: 'The list of supported ABIs for this device. This corresponds to either android.os.Build.SUPPORTED_ABIS (for API level 21 and above) or android.os.Build.CPU_ABI/CPU_ABI2. The most preferred ABI is the first element in the list. Elements are optionally prefixed by "version_id:" (where version_id is the id of an AndroidVersion), denoting an ABI that is supported only on a particular version.'
        screenDensity:
          format: int32
          description: Screen density in DPI. This corresponds to ro.sf.lcd_density
          type: integer
        form:
          description: Whether this device is virtual or physical.
          type: string
          enum:
            - DEVICE_FORM_UNSPECIFIED
            - VIRTUAL
            - PHYSICAL
            - EMULATOR
          enumDescriptions:
            - Do not use. For proto versioning only.
            - Android virtual device using Compute Engine native virtualization. Firebase Test Lab only.
            - Actual hardware.
            - Android virtual device using emulator in nested virtualization. Equivalent to Android Studio.
        screenY:
          description: Screen size in the vertical (Y) dimension measured in pixels.
          type: integer
          format: int32
      type: object
    IosModel:
      properties:
        name:
          description: 'The human-readable name for this device model. Examples: "iPhone 4s", "iPad Mini 2".'
          type: string
        tags:
          type: array
          items:
            type: string
          description: 'Tags for this dimension. Examples: "default", "preview", "deprecated".'
        formFactor:
          enum:
            - DEVICE_FORM_FACTOR_UNSPECIFIED
            - PHONE
            - TABLET
            - WEARABLE
          type: string
          enumDescriptions:
            - Do not use. For proto versioning only.
            - This device has the shape of a phone.
            - This device has the shape of a tablet.
            - This device has the shape of a watch or other wearable.
          description: 'Whether this device is a phone, tablet, wearable, etc.'
        perVersionInfo:
          type: array
          items:
            $ref: '#/components/schemas/PerIosVersionInfo'
          description: Version-specific information of an iOS model.
        id:
          type: string
          description: The unique opaque id for this model. Use this for invoking the TestExecutionService.
        screenDensity:
          description: Screen density in DPI.
          type: integer
          format: int32
        screenY:
          description: Screen size in the vertical (Y) dimension measured in pixels.
          format: int32
          type: integer
        screenX:
          description: Screen size in the horizontal (X) dimension measured in pixels.
          format: int32
          type: integer
        supportedVersionIds:
          description: The set of iOS major software versions this device supports.
          items:
            type: string
          type: array
        deviceCapabilities:
          items:
            type: string
          type: array
          description: 'Device capabilities. Copied from https://developer.apple.com/library/archive/documentation/DeviceInformation/Reference/iOSDeviceCompatibility/DeviceCompatibilityMatrix/DeviceCompatibilityMatrix.html'
      type: object
      id: IosModel
      description: A description of an iOS device tests may be run on.
    RoboDirective:
      type: object
      description: 'Directs Robo to interact with a specific UI element if it is encountered during the crawl. Currently, Robo can perform text entry or element click.'
      id: RoboDirective
      properties:
        inputText:
          description: 'The text that Robo is directed to set. If left empty, the directive will be treated as a CLICK on the element matching the resource_name.'
          type: string
        actionType:
          enum:
            - ACTION_TYPE_UNSPECIFIED
            - SINGLE_CLICK
            - ENTER_TEXT
            - IGNORE
          description: Required. The type of action that Robo should perform on the specified element.
          type: string
          enumDescriptions:
            - DO NOT USE. For proto versioning only.
            - Direct Robo to click on the specified element. No-op if specified element is not clickable.
            - Direct Robo to enter text on the specified element. No-op if specified element is not enabled or does not allow text entry.
            - Direct Robo to ignore interactions with a specific element.
        resourceName:
          description: 'Required. The android resource name of the target UI element. For example, in Java: R.string.foo in xml: @string/foo Only the "foo" part is needed. Reference doc: https://developer.android.com/guide/topics/resources/accessing-resources.html'
          type: string
    SystraceSetup:
      id: SystraceSetup
      type: object
      properties:
        durationSeconds:
          format: int32
          type: integer
          deprecated: true
          description: Systrace duration in seconds. Should be between 1 and 30 seconds. 0 disables systrace.
    ProvidedSoftwareCatalog:
      id: ProvidedSoftwareCatalog
      type: object
      description: The currently provided software environment on the devices under test.
      properties:
        orchestratorVersion:
          deprecated: true
          description: 'Deprecated: Use AndroidX Test Orchestrator going forward. A string representing the current version of Android Test Orchestrator that is used in the environment. The package is available at https://maven.google.com/web/index.html#com.android.support.test:orchestrator.'
          type: string
        androidxOrchestratorVersion:
          description: 'A string representing the current version of AndroidX Test Orchestrator that is used in the environment. The package is available at https://maven.google.com/web/index.html#androidx.test:orchestrator.'
          type: string
    EnvironmentVariable:
      properties:
        key:
          description: Key for the environment variable.
          type: string
        value:
          description: Value for the environment variable.
          type: string
      id: EnvironmentVariable
      type: object
      description: A key-value pair passed as an environment variable to the test.
    ObbFile:
      properties:
        obb:
          $ref: '#/components/schemas/FileReference'
          description: Required. Opaque Binary Blob (OBB) file(s) to install on the device.
        obbFileName:
          description: 'Required. OBB file name which must conform to the format as specified by Android e.g. [main|patch].0300110.com.example.android.obb which will be installed into \/Android/obb/\/ on the device.'
          type: string
      description: An opaque binary blob file to install on the device before the test starts.
      id: ObbFile
      type: object
    ToolResultsStep:
      id: ToolResultsStep
      type: object
      properties:
        historyId:
          type: string
          description: Output only. A tool results history ID.
        stepId:
          description: Output only. A tool results step ID.
          type: string
        projectId:
          type: string
          description: Output only. The cloud project that owns the tool results step.
        executionId:
          description: Output only. A tool results execution ID.
          type: string
      description: Represents a tool results step resource. This has the results of a TestExecution.
    AndroidDeviceList:
      id: AndroidDeviceList
      properties:
        androidDevices:
          type: array
          items:
            $ref: '#/components/schemas/AndroidDevice'
          description: Required. A list of Android devices.
      description: A list of Android device configurations in which the test is to be executed.
      type: object
    SmartSharding:
      properties:
        targetedShardDuration:
          format: google-duration
          type: string
          description: 'The amount of time tests within a shard should take. Default: 300 seconds (5 minutes). The minimum allowed: 120 seconds (2 minutes). The shard count is dynamically set based on time, up to the maximum shard limit (described below). To guarantee at least one test case for each shard, the number of shards will not exceed the number of test cases. Shard duration will be exceeded if: - The maximum shard limit is reached and there is more calculated test time remaining to allocate into shards. - Any individual test is estimated to be longer than the targeted shard duration. Shard duration is not guaranteed because smart sharding uses test case history and default durations which may not be accurate. The rules for finding the test case timing records are: - If the service has processed a test case in the last 30 days, the record of the latest successful test case will be used. - For new test cases, the average duration of other known test cases will be used. - If there are no previous test case timing records available, the default test case duration is 15 seconds. Because the actual shard duration can exceed the targeted shard duration, we recommend that you set the targeted value at least 5 minutes less than the maximum allowed test timeout (45 minutes for physical devices and 60 minutes for virtual), or that you use the custom test timeout value that you set. This approach avoids cancelling the shard before all tests can finish. Note that there is a limit for maximum number of shards. When you select one or more physical devices, the number of shards must be <= 50. When you select one or more ARM virtual devices, it must be <= 100. When you select only x86 virtual devices, it must be <= 500. To guarantee at least one test case for per shard, the number of shards will not exceed the number of test cases. Each shard created counts toward daily test quota.'
      type: object
      description: Shards test based on previous test case timing records.
      id: SmartSharding
    Date:
      description: 'Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp'
      type: object
      properties:
        year:
          type: integer
          description: 'Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.'
          format: int32
        day:
          description: 'Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn''t significant.'
          format: int32
          type: integer
        month:
          description: 'Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.'
          type: integer
          format: int32
      id: Date
    Orientation:
      type: object
      properties:
        id:
          type: string
          description: 'The id for this orientation. Example: "portrait".'
        tags:
          type: array
          items:
            type: string
          description: 'Tags for this dimension. Example: "default".'
        name:
          description: 'A human-friendly name for this orientation. Example: "portrait".'
          type: string
      id: Orientation
      description: Screen orientation of the device.
    AndroidDeviceCatalog:
      type: object
      id: AndroidDeviceCatalog
      properties:
        models:
          description: The set of supported Android device models.
          type: array
          items:
            $ref: '#/components/schemas/AndroidModel'
        runtimeConfiguration:
          description: The set of supported runtime configurations.
          $ref: '#/components/schemas/AndroidRuntimeConfiguration'
        versions:
          type: array
          description: The set of supported Android OS versions.
          items:
            $ref: '#/components/schemas/AndroidVersion'
      description: The currently supported Android devices.
    IntentFilter:
      type: object
      properties:
        categoryNames:
          type: array
          items:
            type: string
          description: 'The android:name value of the tag.'
        mimeType:
          description: 'The android:mimeType value of the tag.'
          type: string
        actionNames:
          type: array
          description: 'The android:name value of the tag.'
          items:
            type: string
      id: IntentFilter
      description: 'The section of an tag. https://developer.android.com/guide/topics/manifest/intent-filter-element.html'
    TestExecution:
      description: A single test executed in a single environment.
      type: object
      id: TestExecution
      properties:
        projectId:
          type: string
          description: Output only. The cloud project that owns the test execution.
        testDetails:
          description: Output only. Additional details about the running test.
          $ref: '#/components/schemas/TestDetails'
        state:
          description: 'Output only. Indicates the current progress of the test execution (e.g., FINISHED).'
          enumDescriptions:
            - Do not use. For proto versioning only.
            - The execution or matrix is being validated.
            - The execution or matrix is waiting for resources to become available.
            - The execution is currently being processed. Can only be set on an execution.
            - 'The execution or matrix has terminated normally. On a matrix this means that the matrix level processing completed normally, but individual executions may be in an ERROR state.'
            - The execution or matrix has stopped because it encountered an infrastructure failure.
            - The execution was not run because it corresponds to a unsupported environment. Can only be set on an execution.
            - 'The execution was not run because the provided inputs are incompatible with the requested environment. Example: requested AndroidVersion is lower than APK''s minSdkVersion Can only be set on an execution.'
            - 'The execution was not run because the provided inputs are incompatible with the requested architecture. Example: requested device does not support running the native code in the supplied APK Can only be set on an execution.'
            - The user cancelled the execution. Can only be set on an execution.
            - 'The execution or matrix was not run because the provided inputs are not valid. Examples: input file is not of the expected type, is malformed/corrupt, or was flagged as malware'
          type: string
          enum:
            - TEST_STATE_UNSPECIFIED
            - VALIDATING
            - PENDING
            - RUNNING
            - FINISHED
            - ERROR
            - UNSUPPORTED_ENVIRONMENT
            - INCOMPATIBLE_ENVIRONMENT
            - INCOMPATIBLE_ARCHITECTURE
            - CANCELLED
            - INVALID
        timestamp:
          description: Output only. The time this test execution was initially created.
          format: google-datetime
          type: string
        environment:
          description: Output only. How the host machine(s) are configured.
          $ref: '#/components/schemas/Environment'
        shard:
          description: Output only. Details about the shard.
          $ref: '#/components/schemas/Shard'
        testSpecification:
          description: Output only. How to run the test.
          $ref: '#/components/schemas/TestSpecification'
        toolResultsStep:
          $ref: '#/components/schemas/ToolResultsStep'
          description: Output only. Where the results for this execution are written.
        matrixId:
          type: string
          description: Output only. Id of the containing TestMatrix.
        id:
          type: string
          description: Output only. Unique id set by the service.
    PerIosVersionInfo:
      id: PerIosVersionInfo
      type: object
      description: A version-specific information of an iOS model.
      properties:
        deviceCapacity:
          description: The number of online devices for an iOS version.
          enum:
            - DEVICE_CAPACITY_UNSPECIFIED
            - DEVICE_CAPACITY_HIGH
            - DEVICE_CAPACITY_MEDIUM
            - DEVICE_CAPACITY_LOW
            - DEVICE_CAPACITY_NONE
          type: string
          enumDescriptions:
            - The value of device capacity is unknown or unset.
            - 'Devices that are high in capacity (The lab has a large number of these devices). These devices are generally suggested for running a large number of simultaneous tests (e.g. more than 100 tests). Please note that high capacity devices do not guarantee short wait times due to several factors: 1. Traffic (how heavily they are used at any given moment) 2. High capacity devices are prioritized for certain usages, which may cause user tests to be slower than selecting other similar device types.'
            - 'Devices that are medium in capacity (The lab has a decent number of these devices, though not as many as high capacity devices). These devices are suitable for fewer test runs (e.g. fewer than 100 tests) and only for low shard counts (e.g. less than 10 shards).'
            - 'Devices that are low in capacity (The lab has a small number of these devices). These devices may be used if users need to test on this specific device model and version. Please note that due to low capacity, the tests may take much longer to finish, especially if a large number of tests are invoked at once. These devices are not suitable for test sharding.'
            - 'Devices that are completely missing from the lab. These devices are unavailable either temporarily or permanently and should not be requested. If the device is also marked as deprecated, this state is very likely permanent.'
        versionId:
          type: string
          description: An iOS version.
    DeviceIpBlock:
      id: DeviceIpBlock
      properties:
        addedDate:
          $ref: '#/components/schemas/Date'
          description: The date this block was added to Firebase Test Lab
        form:
          enum:
            - DEVICE_FORM_UNSPECIFIED
            - VIRTUAL
            - PHYSICAL
            - EMULATOR
          type: string
          description: Whether this block is used by physical or virtual devices
          enumDescriptions:
            - Do not use. For proto versioning only.
            - Android virtual device using Compute Engine native virtualization. Firebase Test Lab only.
            - Actual hardware.
            - Android virtual device using emulator in nested virtualization. Equivalent to Android Studio.
        block:
          type: string
          description: 'An IP address block in CIDR notation eg: 34.68.194.64/29'
      type: object
      description: A single device IP block
    GoogleCloudStorage:
      description: A storage location within Google cloud storage (GCS).
      type: object
      id: GoogleCloudStorage
      properties:
        gcsPath:
          type: string
          description: Required. The path to a directory in GCS that will eventually contain the results for this test. The requesting user must have write access on the bucket in the supplied path.
    ManualSharding:
      type: object
      properties:
        testTargetsForShard:
          description: 'Required. Group of packages, classes, and/or test methods to be run for each manually-created shard. You must specify at least one shard if this field is present. When you select one or more physical devices, the number of repeated test_targets_for_shard must be <= 50. When you select one or more ARM virtual devices, it must be <= 100. When you select only x86 virtual devices, it must be <= 500.'
          items:
            $ref: '#/components/schemas/TestTargetsForShard'
          type: array
      description: 'Shards test cases into the specified groups of packages, classes, and/or methods. With manual sharding enabled, specifying test targets via environment_variables or in InstrumentationTest is invalid.'
      id: ManualSharding
    IosTestSetup:
      type: object
      properties:
        networkProfile:
          description: The network traffic profile used for running the test. Available network profiles can be queried by using the NETWORK_CONFIGURATION environment type when calling TestEnvironmentDiscoveryService.GetTestEnvironmentCatalog.
          type: string
        pullDirectories:
          type: array
          items:
            $ref: '#/components/schemas/IosDeviceFile'
          description: List of directories on the device to upload to Cloud Storage at the end of the test. Directories should either be in a shared directory (such as /private/var/mobile/Media) or within an accessible directory inside the app's filesystem (such as /Documents) by specifying the bundle ID.
        pushFiles:
          type: array
          items:
            $ref: '#/components/schemas/IosDeviceFile'
          description: List of files to push to the device before starting the test.
        additionalIpas:
          description: iOS apps to install in addition to those being directly tested.
          type: array
          items:
            $ref: '#/components/schemas/FileReference'
      id: IosTestSetup
      description: A description of how to set up an iOS device prior to running the test.
    FileReference:
      properties:
        gcsPath:
          description: 'A path to a file in Google Cloud Storage. Example: gs://build-app-1414623860166/app%40debug-unaligned.apk These paths are expected to be url encoded (percent encoding)'
          type: string
      type: object
      description: 'A reference to a file, used for user inputs.'
      id: FileReference
    RegularFile:
      id: RegularFile
      properties:
        content:
          $ref: '#/components/schemas/FileReference'
          description: Required. The source file.
        devicePath:
          type: string
          description: 'Required. Where to put the content on the device. Must be an absolute, allowlisted path. If the file exists, it will be replaced. The following device-side directories and any of their subdirectories are allowlisted: ${EXTERNAL_STORAGE}, /sdcard, or /storage ${ANDROID_DATA}/local/tmp, or /data/local/tmp Specifying a path outside of these directory trees is invalid. The paths /sdcard and /data will be made available and treated as implicit path substitutions. E.g. if /sdcard on a particular device does not map to external storage, the system will replace it with the external storage path prefix for that device and copy the file there. It is strongly advised to use the Environment API in app and test code to access files on the device in a portable way.'
      description: A file or directory to install on the device before the test starts.
      type: object
    ToolResultsExecution:
      description: Represents a tool results execution resource. This has the results of a TestMatrix.
      id: ToolResultsExecution
      properties:
        projectId:
          description: Output only. The cloud project that owns the tool results execution.
          type: string
        executionId:
          description: Output only. A tool results execution ID.
          type: string
        historyId:
          type: string
          description: Output only. A tool results history ID.
      type: object
    ToolResultsHistory:
      id: ToolResultsHistory
      description: Represents a tool results history resource.
      type: object
      properties:
        historyId:
          description: Required. A tool results history ID.
          type: string
        projectId:
          type: string
          description: Required. The cloud project that owns the tool results history.
    TrafficRule:
      properties:
        bandwidth:
          type: number
          format: float
          description: Bandwidth in kbits/second.
        packetLossRatio:
          description: Packet loss ratio (0.0 - 1.0).
          format: float
          type: number
        burst:
          description: Burst size in kbits.
          type: number
          format: float
        delay:
          format: google-duration
          description: 'Packet delay, must be >= 0.'
          type: string
        packetDuplicationRatio:
          type: number
          format: float
          description: Packet duplication ratio (0.0 - 1.0).
      type: object
      id: TrafficRule
      description: Network emulation parameters.
    TestMatrix:
      properties:
        resultStorage:
          $ref: '#/components/schemas/ResultStorage'
          description: Required. Where the results for the matrix are written.
        state:
          description: Output only. Indicates the current progress of the test matrix.
          type: string
          enum:
            - TEST_STATE_UNSPECIFIED
            - VALIDATING
            - PENDING
            - RUNNING
            - FINISHED
            - ERROR
            - UNSUPPORTED_ENVIRONMENT
            - INCOMPATIBLE_ENVIRONMENT
            - INCOMPATIBLE_ARCHITECTURE
            - CANCELLED
            - INVALID
          enumDescriptions:
            - Do not use. For proto versioning only.
            - The execution or matrix is being validated.
            - The execution or matrix is waiting for resources to become available.
            - The execution is currently being processed. Can only be set on an execution.
            - 'The execution or matrix has terminated normally. On a matrix this means that the matrix level processing completed normally, but individual executions may be in an ERROR state.'
            - The execution or matrix has stopped because it encountered an infrastructure failure.
            - The execution was not run because it corresponds to a unsupported environment. Can only be set on an execution.
            - 'The execution was not run because the provided inputs are incompatible with the requested environment. Example: requested AndroidVersion is lower than APK''s minSdkVersion Can only be set on an execution.'
            - 'The execution was not run because the provided inputs are incompatible with the requested architecture. Example: requested device does not support running the native code in the supplied APK Can only be set on an execution.'
            - The user cancelled the execution. Can only be set on an execution.
            - 'The execution or matrix was not run because the provided inputs are not valid. Examples: input file is not of the expected type, is malformed/corrupt, or was flagged as malware'
        projectId:
          type: string
          description: The cloud project that owns the test matrix.
        failFast:
          type: boolean
          description: 'If true, only a single attempt at most will be made to run each execution/shard in the matrix. Flaky test attempts are not affected. Normally, 2 or more attempts are made if a potential infrastructure issue is detected. This feature is for latency sensitive workloads. The incidence of execution failures may be significantly greater for fail-fast matrices and support is more limited because of that expectation.'
        testMatrixId:
          description: Output only. Unique id set by the service.
          type: string
        timestamp:
          type: string
          format: google-datetime
          description: Output only. The time this test matrix was initially created.
        invalidMatrixDetails:
          enumDeprecated:
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
          enum:
            - INVALID_MATRIX_DETAILS_UNSPECIFIED
            - DETAILS_UNAVAILABLE
            - MALFORMED_APK
            - MALFORMED_TEST_APK
            - NO_MANIFEST
            - NO_PACKAGE_NAME
            - INVALID_PACKAGE_NAME
            - TEST_SAME_AS_APP
            - NO_INSTRUMENTATION
            - NO_SIGNATURE
            - INSTRUMENTATION_ORCHESTRATOR_INCOMPATIBLE
            - NO_TEST_RUNNER_CLASS
            - NO_LAUNCHER_ACTIVITY
            - FORBIDDEN_PERMISSIONS
            - INVALID_ROBO_DIRECTIVES
            - INVALID_RESOURCE_NAME
            - INVALID_DIRECTIVE_ACTION
            - TEST_LOOP_INTENT_FILTER_NOT_FOUND
            - SCENARIO_LABEL_NOT_DECLARED
            - SCENARIO_LABEL_MALFORMED
            - SCENARIO_NOT_DECLARED
            - DEVICE_ADMIN_RECEIVER
            - MALFORMED_XC_TEST_ZIP
            - BUILT_FOR_IOS_SIMULATOR
            - NO_TESTS_IN_XC_TEST_ZIP
            - USE_DESTINATION_ARTIFACTS
            - TEST_NOT_APP_HOSTED
            - PLIST_CANNOT_BE_PARSED
            - TEST_ONLY_APK
            - MALFORMED_IPA
            - MISSING_URL_SCHEME
            - MALFORMED_APP_BUNDLE
            - NO_CODE_APK
            - INVALID_INPUT_APK
            - INVALID_APK_PREVIEW_SDK
            - MATRIX_TOO_LARGE
            - TEST_QUOTA_EXCEEDED
            - SERVICE_NOT_ACTIVATED
            - UNKNOWN_PERMISSION_ERROR
          description: Output only. Describes why the matrix is considered invalid. Only useful for matrices in the INVALID state.
          enumDescriptions:
            - Do not use. For proto versioning only.
            - 'The matrix is INVALID, but there are no further details available.'
            - The input app APK could not be parsed.
            - The input test APK could not be parsed.
            - The AndroidManifest.xml could not be found.
            - The APK manifest does not declare a package name.
            - 'The APK application ID (aka package name) is invalid. See also https://developer.android.com/studio/build/application-id'
            - The test package and app package are the same.
            - The test apk does not declare an instrumentation.
            - The input app apk does not have a signature.
            - The test runner class specified by user or in the test APK's manifest file is not compatible with Android Test Orchestrator. Orchestrator is only compatible with AndroidJUnitRunner version 1.1 or higher. Orchestrator can be disabled by using DO_NOT_USE_ORCHESTRATOR OrchestratorOption.
            - 'The test APK does not contain the test runner class specified by the user or in the manifest file. This can be caused by one of the following reasons: - the user provided a runner class name that''s incorrect, or - the test runner isn''t built into the test APK (might be in the app APK instead).'
            - A main launcher activity could not be found.
            - The app declares one or more permissions that are not allowed.
            - There is a conflict in the provided robo_directives.
            - There is at least one invalid resource name in the provided robo directives
            - Invalid definition of action in the robo directives (e.g. a click or ignore action includes an input text field)
            - 'There is no test loop intent filter, or the one that is given is not formatted correctly.'
            - The request contains a scenario label that was not declared in the manifest.
            - There was an error when parsing a label's value.
            - The request contains a scenario number that was not declared in the manifest.
            - Device administrator applications are not allowed.
            - The zipped XCTest was malformed. The zip did not contain a single .xctestrun file and the contents of the DerivedData/Build/Products directory.
            - The zipped XCTest was built for the iOS simulator rather than for a physical device.
            - The .xctestrun file did not specify any test targets.
            - 'One or more of the test targets defined in the .xctestrun file specifies "UseDestinationArtifacts", which is disallowed.'
            - XC tests which run on physical devices must have "IsAppHostedTestBundle" == "true" in the xctestrun file.
            - An Info.plist file in the XCTest zip could not be parsed.
            - The APK is marked as "testOnly". Deprecated and not currently used.
            - The input IPA could not be parsed.
            - The application doesn't register the game loop URL scheme.
            - The iOS application bundle (.app) couldn't be processed.
            - 'APK contains no code. See also https://developer.android.com/guide/topics/manifest/application-element.html#code'
            - 'Either the provided input APK path was malformed, the APK file does not exist, or the user does not have permission to access the APK file.'
            - APK is built for a preview SDK which is unsupported
            - The matrix expanded to contain too many executions.
            - Not enough test quota to run the executions in this matrix.
            - 'A required cloud service api is not activated. See: https://firebase.google.com/docs/test-lab/android/continuous#requirements'
            - There was an unknown permission issue running this test.
          type: string
        testSpecification:
          $ref: '#/components/schemas/TestSpecification'
          description: Required. How to run the test.
        environmentMatrix:
          $ref: '#/components/schemas/EnvironmentMatrix'
          description: Required. The devices the tests are being executed on.
        flakyTestAttempts:
          type: integer
          description: 'The number of times a TestExecution should be re-attempted if one or more of its test cases fail for any reason. The maximum number of reruns allowed is 10. Default is 0, which implies no reruns.'
          format: int32
        outcomeSummary:
          type: string
          enumDescriptions:
            - Do not use. For proto versioning only.
            - 'The test matrix run was successful, for instance: - All the test cases passed. - Robo did not detect a crash of the application under test.'
            - 'A run failed, for instance: - One or more test cases failed. - A test timed out. - The application under test crashed.'
            - Something unexpected happened. The run should still be considered unsuccessful but this is likely a transient problem and re-running the test might be successful.
            - 'All tests were skipped, for instance: - All device configurations were incompatible.'
          description: Output Only. The overall outcome of the test. Only set when the test matrix state is FINISHED.
          enum:
            - OUTCOME_SUMMARY_UNSPECIFIED
            - SUCCESS
            - FAILURE
            - INCONCLUSIVE
            - SKIPPED
        clientInfo:
          $ref: '#/components/schemas/ClientInfo'
          description: Information about the client which invoked the test.
        testExecutions:
          items:
            $ref: '#/components/schemas/TestExecution'
          type: array
          description: Output only. The list of test executions that the service creates for this matrix.
      type: object
      id: TestMatrix
      description: 'TestMatrix captures all details about a test. It contains the environment configuration, test specification, test executions and overall state and outcome.'
    ClientInfo:
      description: Information about the client which invoked the test.
      id: ClientInfo
      type: object
      properties:
        clientInfoDetails:
          items:
            $ref: '#/components/schemas/ClientInfoDetail'
          type: array
          description: The list of detailed information about client.
        name:
          type: string
          description: 'Required. Client name, such as gcloud.'
    Environment:
      type: object
      id: Environment
      description: The environment in which the test is run.
      properties:
        iosDevice:
          $ref: '#/components/schemas/IosDevice'
          description: An iOS device which must be used with an iOS test.
        androidDevice:
          $ref: '#/components/schemas/AndroidDevice'
          description: An Android device which must be used with an Android test.
    ResultStorage:
      properties:
        resultsUrl:
          type: string
          description: Output only. URL to the results in the Firebase Web Console.
        toolResultsHistory:
          $ref: '#/components/schemas/ToolResultsHistory'
          description: 'The tool results history that contains the tool results execution that results are written to. If not provided, the service will choose an appropriate value.'
        toolResultsExecution:
          $ref: '#/components/schemas/ToolResultsExecution'
          description: Output only. The tool results execution that results are written to.
        googleCloudStorage:
          description: Required.
          $ref: '#/components/schemas/GoogleCloudStorage'
      description: Locations where the results of running the test are stored.
      type: object
      id: ResultStorage
    Locale:
      id: Locale
      properties:
        region:
          description: 'A human-friendly string representing the region for this locale. Example: "United States". Not present for every locale.'
          type: string
        name:
          type: string
          description: 'A human-friendly name for this language/locale. Example: "English".'
        tags:
          type: array
          items:
            type: string
          description: 'Tags for this dimension. Example: "default".'
        id:
          type: string
          description: 'The id for this locale. Example: "en_US".'
      description: A location/region designation for language.
      type: object
    AndroidRoboTest:
      description: 'A test of an android application that explores the application on a virtual or physical Android Device, finding culprits and crashes as it goes.'
      id: AndroidRoboTest
      properties:
        roboDirectives:
          description: 'A set of directives Robo should apply during the crawl. This allows users to customize the crawl. For example, the username and password for a test account can be provided.'
          items:
            $ref: '#/components/schemas/RoboDirective'
          type: array
        startingIntents:
          type: array
          items:
            $ref: '#/components/schemas/RoboStartingIntent'
          description: 'The intents used to launch the app for the crawl. If none are provided, then the main launcher activity is launched. If some are provided, then only those provided are launched (the main launcher activity must be provided explicitly).'
        roboMode:
          enum:
            - ROBO_MODE_UNSPECIFIED
            - ROBO_VERSION_1
            - ROBO_VERSION_2
          description: The mode in which Robo should run. Most clients should allow the server to populate this field automatically.
          type: string
          enumDescriptions:
            - This means that the server should choose the mode. Recommended.
            - Runs Robo in UIAutomator-only mode without app resigning
            - Runs Robo in standard Espresso with UIAutomator fallback
        appPackageId:
          type: string
          description: The java package for the application under test. The default value is determined by examining the application's manifest.
        maxDepth:
          description: The max depth of the traversal stack Robo can explore. Needs to be at least 2 to make Robo explore the app beyond the first activity. Default is 50.
          type: integer
          deprecated: true
          format: int32
        appInitialActivity:
          description: The initial activity that should be used to start the app.
          type: string
        roboScript:
          description: A JSON file with a sequence of actions Robo should perform as a prologue for the crawl.
          $ref: '#/components/schemas/FileReference'
        appBundle:
          description: A multi-apk app bundle for the application under test.
          $ref: '#/components/schemas/AppBundle'
        maxSteps:
          type: integer
          deprecated: true
          description: The max number of steps Robo can execute. Default is no limit.
          format: int32
        appApk:
          description: The APK for the application under test.
          $ref: '#/components/schemas/FileReference'
      type: object
    IosRoboTest:
      properties:
        appIpa:
          $ref: '#/components/schemas/FileReference'
          description: Required. The ipa stored at this file should be used to run the test.
        roboScript:
          description: 'An optional Roboscript to customize the crawl. See https://firebase.google.com/docs/test-lab/android/robo-scripts-reference for more information about Roboscripts.'
          $ref: '#/components/schemas/FileReference'
        appBundleId:
          description: The bundle ID for the app-under-test. This is determined by examining the application's "Info.plist" file.
          type: string
      description: A test that explores an iOS application on an iOS device.
      id: IosRoboTest
      type: object
    AndroidTestLoop:
      properties:
        scenarioLabels:
          items:
            type: string
          description: 'The list of scenario labels that should be run during the test. The scenario labels should map to labels defined in the application''s manifest. For example, player_experience and com.google.test.loops.player_experience add all of the loops labeled in the manifest with the com.google.test.loops.player_experience name to the execution. Scenarios can also be specified in the scenarios field.'
          type: array
        appApk:
          $ref: '#/components/schemas/FileReference'
          description: The APK for the application under test.
        appPackageId:
          type: string
          description: The java package for the application under test. The default is determined by examining the application's manifest.
        appBundle:
          $ref: '#/components/schemas/AppBundle'
          description: A multi-apk app bundle for the application under test.
        scenarios:
          description: 'The list of scenarios that should be run during the test. The default is all test loops, derived from the application''s manifest.'
          items:
            type: integer
            format: int32
          type: array
      description: 'A test of an Android Application with a Test Loop. The intent \ will be implicitly added, since Games is the only user of this api, for the time being.'
      type: object
      id: AndroidTestLoop
    NoActivityIntent:
      id: NoActivityIntent
      type: object
      properties: {}
      description: Skips the starting activity
    Distribution:
      id: Distribution
      description: Data about the relative number of devices running a given configuration of the Android platform.
      properties:
        measurementTime:
          description: Output only. The time this distribution was measured.
          format: google-datetime
          type: string
        marketShare:
          description: Output only. The estimated fraction (0-1) of the total market with this configuration.
          type: number
          format: double
      type: object
    EnvironmentMatrix:
      properties:
        androidDeviceList:
          $ref: '#/components/schemas/AndroidDeviceList'
          description: A list of Android devices; the test will be run only on the specified devices.
        iosDeviceList:
          $ref: '#/components/schemas/IosDeviceList'
          description: A list of iOS devices.
        androidMatrix:
          description: A matrix of Android devices.
          $ref: '#/components/schemas/AndroidMatrix'
      id: EnvironmentMatrix
      type: object
      description: The matrix of environments in which the test is to be executed.
    GetApkDetailsResponse:
      description: Response containing the details of the specified Android application APK.
      id: GetApkDetailsResponse
      type: object
      properties:
        apkDetail:
          $ref: '#/components/schemas/ApkDetail'
          description: Details of the Android APK.
    AndroidDevice:
      description: A single Android device.
      id: AndroidDevice
      properties:
        androidVersionId:
          type: string
          description: Required. The id of the Android OS version to be used. Use the TestEnvironmentDiscoveryService to get supported options.
        androidModelId:
          type: string
          description: Required. The id of the Android device to be used. Use the TestEnvironmentDiscoveryService to get supported options.
        locale:
          description: Required. The locale the test device used for testing. Use the TestEnvironmentDiscoveryService to get supported options.
          type: string
        orientation:
          type: string
          description: Required. How the device is oriented during the test. Use the TestEnvironmentDiscoveryService to get supported options.
      type: object
    TestSpecification:
      type: object
      properties:
        iosTestSetup:
          description: Test setup requirements for iOS.
          $ref: '#/components/schemas/IosTestSetup'
        androidRoboTest:
          description: An Android robo test.
          $ref: '#/components/schemas/AndroidRoboTest'
        disableVideoRecording:
          description: Disables video recording. May reduce test latency.
          type: boolean
        testTimeout:
          description: Max time a test execution is allowed to run before it is automatically cancelled. The default value is 5 min.
          format: google-duration
          type: string
        androidTestLoop:
          $ref: '#/components/schemas/AndroidTestLoop'
          description: An Android Application with a Test Loop.
        disablePerformanceMetrics:
          type: boolean
          description: Disables performance metrics recording. May reduce test latency.
        iosXcTest:
          $ref: '#/components/schemas/IosXcTest'
          description: 'An iOS XCTest, via an .xctestrun file.'
        iosRoboTest:
          $ref: '#/components/schemas/IosRoboTest'
          description: An iOS Robo test.
        testSetup:
          description: 'Test setup requirements for Android e.g. files to install, bootstrap scripts.'
          $ref: '#/components/schemas/TestSetup'
        androidInstrumentationTest:
          description: An Android instrumentation test.
          $ref: '#/components/schemas/AndroidInstrumentationTest'
        iosTestLoop:
          description: An iOS application with a test loop.
          $ref: '#/components/schemas/IosTestLoop'
      id: TestSpecification
      description: A description of how to run the test.
    Apk:
      properties:
        location:
          description: The path to an APK to be installed on the device before the test begins.
          $ref: '#/components/schemas/FileReference'
        packageName:
          description: The java package for the APK to be installed. Value is determined by examining the application's manifest.
          type: string
      description: An Android package file to install.
      type: object
      id: Apk
    IosXcTest:
      description: 'A test of an iOS application that uses the XCTest framework. Xcode supports the option to "build for testing", which generates an .xctestrun file that contains a test specification (arguments, test methods, etc). This test type accepts a zip file containing the .xctestrun file and the corresponding contents of the Build/Products directory that contains all the binaries needed to run the tests.'
      type: object
      properties:
        xctestrun:
          description: 'An .xctestrun file that will override the .xctestrun file in the tests zip. Because the .xctestrun file contains environment variables along with test methods to run and/or ignore, this can be useful for sharding tests. Default is taken from the tests zip.'
          $ref: '#/components/schemas/FileReference'
        testsZip:
          $ref: '#/components/schemas/FileReference'
          description: Required. The .zip containing the .xctestrun file and the contents of the DerivedData/Build/Products directory. The .xctestrun file in this zip is ignored if the xctestrun field is specified.
        xcodeVersion:
          description: The Xcode version that should be used for the test. Use the TestEnvironmentDiscoveryService to get supported options. Defaults to the latest Xcode version Firebase Test Lab supports.
          type: string
        testSpecialEntitlements:
          description: The option to test special app entitlements. Setting this would re-sign the app having special entitlements with an explicit application-identifier. Currently supports testing aps-environment entitlement.
          type: boolean
        appBundleId:
          description: Output only. The bundle id for the application under test.
          type: string
      id: IosXcTest
    ClientInfoDetail:
      properties:
        key:
          type: string
          description: Required. The key of detailed client information.
        value:
          type: string
          description: Required. The value of detailed client information.
      id: ClientInfoDetail
      type: object
      description: 'Key-value pair of detailed information about the client which invoked the test. Examples: {''Version'', ''1.0''}, {''Release Track'', ''BETA''}.'
    IosTestLoop:
      properties:
        appBundleId:
          description: Output only. The bundle id for the application under test.
          type: string
        scenarios:
          items:
            format: int32
            type: integer
          description: The list of scenarios that should be run during the test. Defaults to the single scenario 0 if unspecified.
          type: array
        appIpa:
          $ref: '#/components/schemas/FileReference'
          description: Required. The .ipa of the application to test.
      type: object
      description: A test of an iOS application that implements one or more game loop scenarios. This test type accepts an archived application (.ipa file) and a list of integer scenarios that will be executed on the app sequentially.
      id: IosTestLoop
    PerAndroidVersionInfo:
      type: object
      properties:
        deviceCapacity:
          enum:
            - DEVICE_CAPACITY_UNSPECIFIED
            - DEVICE_CAPACITY_HIGH
            - DEVICE_CAPACITY_MEDIUM
            - DEVICE_CAPACITY_LOW
            - DEVICE_CAPACITY_NONE
          type: string
          description: The number of online devices for an Android version.
          enumDescriptions:
            - The value of device capacity is unknown or unset.
            - 'Devices that are high in capacity (The lab has a large number of these devices). These devices are generally suggested for running a large number of simultaneous tests (e.g. more than 100 tests). Please note that high capacity devices do not guarantee short wait times due to several factors: 1. Traffic (how heavily they are used at any given moment) 2. High capacity devices are prioritized for certain usages, which may cause user tests to be slower than selecting other similar device types.'
            - 'Devices that are medium in capacity (The lab has a decent number of these devices, though not as many as high capacity devices). These devices are suitable for fewer test runs (e.g. fewer than 100 tests) and only for low shard counts (e.g. less than 10 shards).'
            - 'Devices that are low in capacity (The lab has a small number of these devices). These devices may be used if users need to test on this specific device model and version. Please note that due to low capacity, the tests may take much longer to finish, especially if a large number of tests are invoked at once. These devices are not suitable for test sharding.'
            - 'Devices that are completely missing from the lab. These devices are unavailable either temporarily or permanently and should not be requested. If the device is also marked as deprecated, this state is very likely permanent.'
        versionId:
          type: string
          description: An Android version.
      description: A version-specific information of an Android model.
      id: PerAndroidVersionInfo
    CancelTestMatrixResponse:
      description: Response containing the current state of the specified test matrix.
      id: CancelTestMatrixResponse
      properties:
        testState:
          type: string
          description: 'The current rolled-up state of the test matrix. If this state is already final, then the cancelation request will have no effect.'
          enum:
            - TEST_STATE_UNSPECIFIED
            - VALIDATING
            - PENDING
            - RUNNING
            - FINISHED
            - ERROR
            - UNSUPPORTED_ENVIRONMENT
            - INCOMPATIBLE_ENVIRONMENT
            - INCOMPATIBLE_ARCHITECTURE
            - CANCELLED
            - INVALID
          enumDescriptions:
            - Do not use. For proto versioning only.
            - The execution or matrix is being validated.
            - The execution or matrix is waiting for resources to become available.
            - The execution is currently being processed. Can only be set on an execution.
            - 'The execution or matrix has terminated normally. On a matrix this means that the matrix level processing completed normally, but individual executions may be in an ERROR state.'
            - The execution or matrix has stopped because it encountered an infrastructure failure.
            - The execution was not run because it corresponds to a unsupported environment. Can only be set on an execution.
            - 'The execution was not run because the provided inputs are incompatible with the requested environment. Example: requested AndroidVersion is lower than APK''s minSdkVersion Can only be set on an execution.'
            - 'The execution was not run because the provided inputs are incompatible with the requested architecture. Example: requested device does not support running the native code in the supplied APK Can only be set on an execution.'
            - The user cancelled the execution. Can only be set on an execution.
            - 'The execution or matrix was not run because the provided inputs are not valid. Examples: input file is not of the expected type, is malformed/corrupt, or was flagged as malware'
      type: object
    TestSetup:
      properties:
        systrace:
          $ref: '#/components/schemas/SystraceSetup'
          description: 'Systrace configuration for the run. Deprecated: Systrace used Python 2 which was sunsetted on 2020-01-01. Systrace is no longer supported in the Cloud Testing API, and no Systrace file will be provided in the results.'
          deprecated: true
        additionalApks:
          items:
            $ref: '#/components/schemas/Apk'
          description: APKs to install in addition to those being directly tested. These will be installed after the app under test. Currently capped at 100.
          type: array
        directoriesToPull:
          type: array
          description: 'List of directories on the device to upload to GCS at the end of the test; they must be absolute paths under /sdcard, /storage or /data/local/tmp. Path names are restricted to characters a-z A-Z 0-9 _ - . + and / Note: The paths /sdcard and /data will be made available and treated as implicit path substitutions. E.g. if /sdcard on a particular device does not map to external storage, the system will replace it with the external storage path prefix for that device.'
          items:
            type: string
        filesToPush:
          type: array
          description: List of files to push to the device before starting the test.
          items:
            $ref: '#/components/schemas/DeviceFile'
        dontAutograntPermissions:
          type: boolean
          description: Whether to prevent all runtime permissions to be granted at app install
        account:
          $ref: '#/components/schemas/Account'
          description: The device will be logged in on this account for the duration of the test.
        networkProfile:
          description: The network traffic profile used for running the test. Available network profiles can be queried by using the NETWORK_CONFIGURATION environment type when calling TestEnvironmentDiscoveryService.GetTestEnvironmentCatalog.
          type: string
        environmentVariables:
          type: array
          description: Environment variables to set for the test (only applicable for instrumentation tests).
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
      description: A description of how to set up the Android device prior to running the test.
      id: TestSetup
      type: object
    Account:
      description: Identifies an account and how to log into it.
      id: Account
      type: object
      properties:
        googleAuto:
          $ref: '#/components/schemas/GoogleAuto'
          description: An automatic google login account.
    TestEnvironmentCatalog:
      description: A description of a test environment.
      type: object
      id: TestEnvironmentCatalog
      properties:
        softwareCatalog:
          description: The software test environment provided by TestExecutionService.
          $ref: '#/components/schemas/ProvidedSoftwareCatalog'
        networkConfigurationCatalog:
          description: Supported network configurations.
          $ref: '#/components/schemas/NetworkConfigurationCatalog'
        iosDeviceCatalog:
          description: Supported iOS devices.
          $ref: '#/components/schemas/IosDeviceCatalog'
        deviceIpBlockCatalog:
          description: The IP blocks used by devices in the test environment.
          $ref: '#/components/schemas/DeviceIpBlockCatalog'
        androidDeviceCatalog:
          description: Supported Android devices.
          $ref: '#/components/schemas/AndroidDeviceCatalog'
    Shard:
      description: Output only. Details about the shard.
      type: object
      id: Shard
      properties:
        testTargetsForShard:
          description: Output only. Test targets for each shard. Only set for manual sharding.
          readOnly: true
          $ref: '#/components/schemas/TestTargetsForShard'
        numShards:
          description: Output only. The total number of shards.
          format: int32
          readOnly: true
          type: integer
        estimatedShardDuration:
          type: string
          readOnly: true
          description: 'Output only. The estimated shard duration based on previous test case timing records, if available.'
          format: google-duration
        shardIndex:
          type: integer
          description: Output only. The index of the shard among all the shards.
          format: int32
          readOnly: true
    RoboStartingIntent:
      properties:
        noActivity:
          description: Skips the starting activity
          $ref: '#/components/schemas/NoActivityIntent'
        launcherActivity:
          $ref: '#/components/schemas/LauncherActivityIntent'
          description: An intent that starts the main launcher activity.
        startActivity:
          description: An intent that starts an activity with specific details.
          $ref: '#/components/schemas/StartActivityIntent'
        timeout:
          format: google-duration
          description: Timeout in seconds for each intent.
          type: string
      id: RoboStartingIntent
      description: Message for specifying the start activities to crawl.
      type: object
    DeviceFile:
      description: A single device file description.
      id: DeviceFile
      properties:
        obbFile:
          $ref: '#/components/schemas/ObbFile'
          description: A reference to an opaque binary blob file.
        regularFile:
          description: A reference to a regular file.
          $ref: '#/components/schemas/RegularFile'
      type: object
    IosDevice:
      description: A single iOS device.
      properties:
        iosModelId:
          description: Required. The id of the iOS device to be used. Use the TestEnvironmentDiscoveryService to get supported options.
          type: string
        iosVersionId:
          type: string
          description: Required. The id of the iOS major software version to be used. Use the TestEnvironmentDiscoveryService to get supported options.
        locale:
          description: Required. The locale the test device used for testing. Use the TestEnvironmentDiscoveryService to get supported options.
          type: string
        orientation:
          description: Required. How the device is oriented during the test. Use the TestEnvironmentDiscoveryService to get supported options.
          type: string
      type: object
      id: IosDevice
    ApkDetail:
      id: ApkDetail
      properties:
        apkManifest:
          $ref: '#/components/schemas/ApkManifest'
      type: object
      description: Android application details based on application manifest and apk archive contents.
    XcodeVersion:
      properties:
        version:
          type: string
          description: 'The id for this version. Example: "9.2".'
        tags:
          items:
            type: string
          type: array
          description: 'Tags for this Xcode version. Example: "default".'
      id: XcodeVersion
      description: An Xcode version that an iOS version is compatible with.
      type: object
    GoogleAuto:
      type: object
      id: GoogleAuto
      properties: {}
      description: 'Enables automatic Google account login. If set, the service automatically generates a Google test account and adds it to the device, before executing the test. Note that test accounts might be reused. Many applications show their full set of functionalities when an account is present on the device. Logging into the device with these generated accounts allows testing more functionalities.'
    ShardingOption:
      properties:
        smartSharding:
          $ref: '#/components/schemas/SmartSharding'
          description: Shards test based on previous test case timing records.
        uniformSharding:
          description: Uniformly shards test cases given a total number of shards.
          $ref: '#/components/schemas/UniformSharding'
        manualSharding:
          description: 'Shards test cases into the specified groups of packages, classes, and/or methods.'
          $ref: '#/components/schemas/ManualSharding'
      type: object
      id: ShardingOption
      description: Options for enabling sharding.
    IosDeviceFile:
      properties:
        content:
          description: The source file
          $ref: '#/components/schemas/FileReference'
        bundleId:
          description: 'The bundle id of the app where this file lives. iOS apps sandbox their own filesystem, so app files must specify which app installed on the device.'
          type: string
        devicePath:
          description: 'Location of the file on the device, inside the app''s sandboxed filesystem'
          type: string
      id: IosDeviceFile
      type: object
      description: A file or directory to install on the device before the test starts.
    NetworkConfiguration:
      id: NetworkConfiguration
      properties:
        upRule:
          $ref: '#/components/schemas/TrafficRule'
          description: The emulation rule applying to the upload traffic.
        id:
          type: string
          description: The unique opaque id for this network traffic configuration.
        downRule:
          description: The emulation rule applying to the download traffic.
          $ref: '#/components/schemas/TrafficRule'
      type: object
    TestDetails:
      properties:
        errorMessage:
          description: 'Output only. If the TestState is ERROR, then this string will contain human-readable details about the error.'
          type: string
        progressMessages:
          type: array
          description: 'Output only. Human-readable, detailed descriptions of the test''s progress. For example: "Provisioning a device", "Starting Test". During the course of execution new data may be appended to the end of progress_messages.'
          items:
            type: string
      type: object
      description: Additional details about the progress of the running test.
      id: TestDetails
    IosDeviceList:
      type: object
      id: IosDeviceList
      properties:
        iosDevices:
          items:
            $ref: '#/components/schemas/IosDevice'
          description: Required. A list of iOS devices.
          type: array
      description: A list of iOS device configurations in which the test is to be executed.
    UniformSharding:
      properties:
        numShards:
          format: int32
          description: 'Required. The total number of shards to create. This must always be a positive number that is no greater than the total number of test cases. When you select one or more physical devices, the number of shards must be <= 50. When you select one or more ARM virtual devices, it must be <= 100. When you select only x86 virtual devices, it must be <= 500.'
          type: integer
      description: 'Uniformly shards test cases given a total number of shards. For instrumentation tests, it will be translated to "-e numShard" and "-e shardIndex" AndroidJUnitRunner arguments. With uniform sharding enabled, specifying either of these sharding arguments via `environment_variables` is invalid. Based on the sharding mechanism AndroidJUnitRunner uses, there is no guarantee that test cases will be distributed uniformly across all shards.'
      type: object
      id: UniformSharding
    LauncherActivityIntent:
      properties: {}
      description: Specifies an intent that starts the main launcher activity.
      type: object
      id: LauncherActivityIntent
    UsesFeature:
      properties:
        name:
          type: string
          description: 'The android:name value'
        isRequired:
          type: boolean
          description: 'The android:required value'
      id: UsesFeature
      type: object
      description: 'A tag within a manifest. https://developer.android.com/guide/topics/manifest/uses-feature-element.html'
    AppBundle:
      id: AppBundle
      type: object
      properties:
        bundleLocation:
          $ref: '#/components/schemas/FileReference'
          description: .aab file representing the app bundle under test.
      description: 'An Android App Bundle file format, containing a BundleConfig.pb file, a base module directory, zero or more dynamic feature module directories. See https://developer.android.com/guide/app-bundle/build for guidance on building App Bundles.'
    AndroidInstrumentationTest:
      type: object
      properties:
        orchestratorOption:
          enumDescriptions:
            - 'Default value: the server will choose the mode. Currently implies that the test will run without the orchestrator. In the future, all instrumentation tests will be run with the orchestrator. Using the orchestrator is highly encouraged because of all the benefits it offers.'
            - Run test using orchestrator. ** Only compatible with AndroidJUnitRunner version 1.1 or higher! ** Recommended.
            - Run test without using orchestrator.
          type: string
          enum:
            - ORCHESTRATOR_OPTION_UNSPECIFIED
            - USE_ORCHESTRATOR
            - DO_NOT_USE_ORCHESTRATOR
          description: 'The option of whether running each test within its own invocation of instrumentation with Android Test Orchestrator or not. ** Orchestrator is only compatible with AndroidJUnitRunner version 1.1 or higher! ** Orchestrator offers the following benefits: - No shared state - Crashes are isolated - Logs are scoped per test See for more information about Android Test Orchestrator. If not set, the test will be run without the orchestrator.'
        testTargets:
          description: 'Each target must be fully qualified with the package name or class name, in one of these formats: - "package package_name" - "class package_name.class_name" - "class package_name.class_name#method_name" If empty, all targets in the module will be run.'
          type: array
          items:
            type: string
        testPackageId:
          description: The java package for the test to be executed. The default value is determined by examining the application's manifest.
          type: string
        appPackageId:
          type: string
          description: The java package for the application under test. The default value is determined by examining the application's manifest.
        appBundle:
          description: A multi-apk app bundle for the application under test.
          $ref: '#/components/schemas/AppBundle'
        appApk:
          $ref: '#/components/schemas/FileReference'
          description: The APK for the application under test.
        testApk:
          $ref: '#/components/schemas/FileReference'
          description: Required. The APK containing the test code to be executed.
        testRunnerClass:
          type: string
          description: The InstrumentationTestRunner class. The default value is determined by examining the application's manifest.
        shardingOption:
          $ref: '#/components/schemas/ShardingOption'
          description: The option to run tests in multiple shards in parallel.
      id: AndroidInstrumentationTest
      description: 'A test of an Android application that can control an Android component independently of its normal lifecycle. Android instrumentation tests run an application APK and test APK inside the same process on a virtual or physical AndroidDevice. They also specify a test runner class, such as com.google.GoogleTestRunner, which can vary on the specific instrumentation framework chosen. See for more information on types of Android tests.'
  parameters:
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
  x-stackQL-resources:
    test_environment_catalog:
      id: google.testing.test_environment_catalog
      name: test_environment_catalog
      title: Test Environment Catalog
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1testEnvironmentCatalog~1{environmentType}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/test_environment_catalog/methods/get'
        insert: []
        update: []
        delete: []
    application_detail_service_apk_details:
      id: google.testing.application_detail_service_apk_details
      name: application_detail_service_apk_details
      title: Application Detail Service Apk Details
      methods:
        get_apk_details:
          operation:
            $ref: '#/paths/~1v1~1applicationDetailService~1getApkDetails/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    test_matrices:
      id: google.testing.test_matrices
      name: test_matrices
      title: Test Matrices
      methods:
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1testMatrices~1{testMatrixId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1testMatrices/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1testMatrices~1{testMatrixId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/test_matrices/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/test_matrices/methods/create'
        update: []
        delete: []
paths:
  '/v1/testEnvironmentCatalog/{environmentType}':
    parameters: &ref_1
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/fields'
    get:
      description: 'Gets the catalog of supported test environments. May return any of the following canonical error codes: - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the environment type does not exist - INTERNAL - if an internal error occurred'
      operationId: testing.testEnvironmentCatalog.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestEnvironmentCatalog'
      parameters:
        - in: path
          name: environmentType
          required: true
          schema:
            type: string
        - in: query
          name: projectId
          schema:
            type: string
      x-stackQL-resource: test_environment_catalog
      x-stackQL-method: get
      x-stackQL-verb: select
  /v1/applicationDetailService/getApkDetails:
    parameters: *ref_1
    post:
      description: Gets the details of an Android application APK.
      operationId: testing.applicationDetailService.getApkDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileReference'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApkDetailsResponse'
      parameters: []
      x-stackQL-resource: application_detail_service_apk_details
      x-stackQL-method: get_apk_details
      x-stackQL-verb: exec
  '/v1/projects/{projectId}/testMatrices/{testMatrixId}:cancel':
    parameters: *ref_1
    post:
      description: 'Cancels unfinished test executions in a test matrix. This call returns immediately and cancellation proceeds asynchronously. If the matrix is already final, this operation will have no effect. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the Test Matrix does not exist'
      operationId: testing.projects.testMatrices.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelTestMatrixResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: testMatrixId
          required: true
          schema:
            type: string
      x-stackQL-resource: test_matrices
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectId}/testMatrices':
    parameters: *ref_1
    post:
      description: 'Creates and runs a matrix of tests according to the given specifications. Unsupported environments will be returned in the state UNSUPPORTED. A test matrix is limited to use at most 2000 devices in parallel. The returned matrix will not yet contain the executions that will be created for this matrix. Execution creation happens later on and will require a call to GetTestMatrix. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed or if the matrix tries to use too many simultaneous devices.'
      operationId: testing.projects.testMatrices.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestMatrix'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestMatrix'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: test_matrices
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectId}/testMatrices/{testMatrixId}':
    parameters: *ref_1
    get:
      description: 'Checks the status of a test matrix and the executions once they are created. The test matrix will contain the list of test executions to run if and only if the resultStorage.toolResultsExecution fields have been populated. Note: Flaky test executions may be added to the matrix at a later stage. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the Test Matrix does not exist'
      operationId: testing.projects.testMatrices.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestMatrix'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: testMatrixId
          required: true
          schema:
            type: string
      x-stackQL-resource: test_matrices
      x-stackQL-method: get
      x-stackQL-verb: select
