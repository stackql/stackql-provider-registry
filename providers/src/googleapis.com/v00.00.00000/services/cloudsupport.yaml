openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Google Cloud Support API
  description: >-
    Manages Google Cloud technical support cases for Customer Care support
    offerings. 
  version: v2
  x-discovery-doc-revision: '20240916'
  x-generated-date: '2024-09-19'
externalDocs:
  url: https://cloud.google.com/support/docs/apis
servers:
  - url: https://cloudsupport.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    ListAttachmentsResponse:
      id: ListAttachmentsResponse
      type: object
      description: The response message for the ListAttachments endpoint.
      properties:
        attachments:
          type: array
          description: The list of attachments associated with a case.
          items:
            $ref: '#/components/schemas/Attachment'
        nextPageToken:
          description: >-
            A token to retrieve the next page of results. Set this in the
            `page_token` field of subsequent `cases.attachments.list` requests.
            If unspecified, there are no more results to retrieve.
          type: string
    Media:
      id: Media
      type: object
      properties:
        hashVerified:
          description: '# gdata.* are outside protos with mising documentation'
          type: boolean
        diffVersionResponse:
          $ref: '#/components/schemas/DiffVersionResponse'
          description: '# gdata.* are outside protos with mising documentation'
        length:
          format: int64
          description: '# gdata.* are outside protos with mising documentation'
          type: string
        path:
          type: string
          description: '# gdata.* are outside protos with mising documentation'
        bigstoreObjectRef:
          format: byte
          description: '# gdata.* are outside protos with mising documentation'
          type: string
          deprecated: true
        compositeMedia:
          type: array
          description: '# gdata.* are outside protos with mising documentation'
          items:
            $ref: '#/components/schemas/CompositeMedia'
        contentType:
          type: string
          description: '# gdata.* are outside protos with mising documentation'
        filename:
          description: '# gdata.* are outside protos with mising documentation'
          type: string
        token:
          type: string
          description: '# gdata.* are outside protos with mising documentation'
        diffUploadRequest:
          $ref: '#/components/schemas/DiffUploadRequest'
          description: '# gdata.* are outside protos with mising documentation'
        algorithm:
          description: '# gdata.* are outside protos with mising documentation'
          deprecated: true
          type: string
        hash:
          type: string
          description: '# gdata.* are outside protos with mising documentation'
          deprecated: true
        referenceType:
          enumDescriptions:
            - '# gdata.* are outside protos with mising documentation'
            - '# gdata.* are outside protos with mising documentation'
            - '# gdata.* are outside protos with mising documentation'
            - '# gdata.* are outside protos with mising documentation'
            - '# gdata.* are outside protos with mising documentation'
            - '# gdata.* are outside protos with mising documentation'
            - '# gdata.* are outside protos with mising documentation'
            - '# gdata.* are outside protos with mising documentation'
            - '# gdata.* are outside protos with mising documentation'
            - '# gdata.* are outside protos with mising documentation'
            - '# gdata.* are outside protos with mising documentation'
            - '# gdata.* are outside protos with mising documentation'
            - '# gdata.* are outside protos with mising documentation'
          type: string
          description: '# gdata.* are outside protos with mising documentation'
          enum:
            - PATH
            - BLOB_REF
            - INLINE
            - GET_MEDIA
            - COMPOSITE_MEDIA
            - BIGSTORE_REF
            - DIFF_VERSION_RESPONSE
            - DIFF_CHECKSUMS_RESPONSE
            - DIFF_DOWNLOAD_RESPONSE
            - DIFF_UPLOAD_REQUEST
            - DIFF_UPLOAD_RESPONSE
            - COSMO_BINARY_REFERENCE
            - ARBITRARY_BYTES
        isPotentialRetry:
          type: boolean
          description: '# gdata.* are outside protos with mising documentation'
        contentTypeInfo:
          $ref: '#/components/schemas/ContentTypeInfo'
          description: '# gdata.* are outside protos with mising documentation'
        blobstore2Info:
          $ref: '#/components/schemas/Blobstore2Info'
          description: '# gdata.* are outside protos with mising documentation'
        downloadParameters:
          description: '# gdata.* are outside protos with mising documentation'
          $ref: '#/components/schemas/DownloadParameters'
        diffChecksumsResponse:
          description: '# gdata.* are outside protos with mising documentation'
          $ref: '#/components/schemas/DiffChecksumsResponse'
        blobRef:
          deprecated: true
          description: '# gdata.* are outside protos with mising documentation'
          format: byte
          type: string
        cosmoBinaryReference:
          description: '# gdata.* are outside protos with mising documentation'
          format: byte
          type: string
        crc32cHash:
          format: uint32
          type: integer
          description: '# gdata.* are outside protos with mising documentation'
        objectId:
          description: '# gdata.* are outside protos with mising documentation'
          $ref: '#/components/schemas/ObjectId'
        sha256Hash:
          type: string
          format: byte
          description: '# gdata.* are outside protos with mising documentation'
        diffUploadResponse:
          description: '# gdata.* are outside protos with mising documentation'
          $ref: '#/components/schemas/DiffUploadResponse'
        timestamp:
          format: uint64
          type: string
          description: '# gdata.* are outside protos with mising documentation'
        sha1Hash:
          format: byte
          description: '# gdata.* are outside protos with mising documentation'
          type: string
        mediaId:
          type: string
          format: byte
          description: '# gdata.* are outside protos with mising documentation'
        diffDownloadResponse:
          description: '# gdata.* are outside protos with mising documentation'
          $ref: '#/components/schemas/DiffDownloadResponse'
        md5Hash:
          description: '# gdata.* are outside protos with mising documentation'
          type: string
          format: byte
        inline:
          format: byte
          description: '# gdata.* are outside protos with mising documentation'
          type: string
      description: '# gdata.* are outside protos with mising documentation'
    Comment:
      properties:
        name:
          description: Output only. Identifier. The resource name of the comment.
          readOnly: true
          type: string
        plainTextBody:
          type: string
          deprecated: true
          readOnly: true
          description: >-
            Output only. DEPRECATED. DO NOT USE. A duplicate of the `body`
            field. This field is only present for legacy reasons.
        body:
          type: string
          description: The full comment body. Maximum of 12800 characters.
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time when the comment was created.
        creator:
          readOnly: true
          description: >-
            Output only. The user or Google Support agent who created the
            comment.
          $ref: '#/components/schemas/Actor'
      description: >-
        A comment associated with a support case. Case comments are the primary
        way for Google Support to communicate with a user who has opened a case.
        When a user responds to Google Support, the user's responses also appear
        as comments.
      id: Comment
      type: object
    CreateAttachmentRequest:
      type: object
      description: The request message for the CreateAttachment endpoint.
      properties:
        attachment:
          $ref: '#/components/schemas/Attachment'
          description: Required. The attachment to be created.
      id: CreateAttachmentRequest
    ListCasesResponse:
      properties:
        cases:
          type: array
          description: >-
            The list of cases associated with the parent after any filters have
            been applied.
          items:
            $ref: '#/components/schemas/Case'
        nextPageToken:
          description: >-
            A token to retrieve the next page of results. Set this in the
            `page_token` field of subsequent `cases.list` requests. If
            unspecified, there are no more results to retrieve.
          type: string
      description: The response message for the ListCases endpoint.
      type: object
      id: ListCasesResponse
    DiffDownloadResponse:
      type: object
      id: DiffDownloadResponse
      description: '# gdata.* are outside protos with mising documentation'
      properties:
        objectLocation:
          $ref: '#/components/schemas/CompositeMedia'
          description: '# gdata.* are outside protos with mising documentation'
    CompositeMedia:
      type: object
      id: CompositeMedia
      description: '# gdata.* are outside protos with mising documentation'
      properties:
        objectId:
          description: '# gdata.* are outside protos with mising documentation'
          $ref: '#/components/schemas/ObjectId'
        md5Hash:
          description: '# gdata.* are outside protos with mising documentation'
          type: string
          format: byte
        path:
          type: string
          description: '# gdata.* are outside protos with mising documentation'
        blobstore2Info:
          $ref: '#/components/schemas/Blobstore2Info'
          description: '# gdata.* are outside protos with mising documentation'
        referenceType:
          type: string
          enumDescriptions:
            - '# gdata.* are outside protos with mising documentation'
            - '# gdata.* are outside protos with mising documentation'
            - '# gdata.* are outside protos with mising documentation'
            - '# gdata.* are outside protos with mising documentation'
            - '# gdata.* are outside protos with mising documentation'
          description: '# gdata.* are outside protos with mising documentation'
          enum:
            - PATH
            - BLOB_REF
            - INLINE
            - BIGSTORE_REF
            - COSMO_BINARY_REFERENCE
        sha1Hash:
          format: byte
          type: string
          description: '# gdata.* are outside protos with mising documentation'
        cosmoBinaryReference:
          type: string
          format: byte
          description: '# gdata.* are outside protos with mising documentation'
        blobRef:
          format: byte
          description: '# gdata.* are outside protos with mising documentation'
          deprecated: true
          type: string
        length:
          description: '# gdata.* are outside protos with mising documentation'
          type: string
          format: int64
        inline:
          type: string
          format: byte
          description: '# gdata.* are outside protos with mising documentation'
        crc32cHash:
          format: uint32
          type: integer
          description: '# gdata.* are outside protos with mising documentation'
    DiffVersionResponse:
      description: '# gdata.* are outside protos with mising documentation'
      id: DiffVersionResponse
      type: object
      properties:
        objectSizeBytes:
          type: string
          description: '# gdata.* are outside protos with mising documentation'
          format: int64
        objectVersion:
          type: string
          description: '# gdata.* are outside protos with mising documentation'
    EscalateCaseRequest:
      properties:
        escalation:
          $ref: '#/components/schemas/Escalation'
          description: The escalation information to be sent with the escalation request.
      description: The request message for the EscalateCase endpoint.
      id: EscalateCaseRequest
      type: object
    ContentTypeInfo:
      description: '# gdata.* are outside protos with mising documentation'
      type: object
      id: ContentTypeInfo
      properties:
        fromUrlPath:
          type: string
          description: '# gdata.* are outside protos with mising documentation'
        fromBytes:
          description: '# gdata.* are outside protos with mising documentation'
          type: string
        fromHeader:
          type: string
          description: '# gdata.* are outside protos with mising documentation'
        fromFileName:
          type: string
          description: '# gdata.* are outside protos with mising documentation'
        bestGuess:
          type: string
          description: '# gdata.* are outside protos with mising documentation'
    CloseCaseRequest:
      type: object
      id: CloseCaseRequest
      properties: {}
      description: The request message for the CloseCase endpoint.
    SearchCasesResponse:
      properties:
        nextPageToken:
          type: string
          description: >-
            A token to retrieve the next page of results. Set this in the
            `page_token` field of subsequent `cases.search` requests. If
            unspecified, there are no more results to retrieve.
        cases:
          items:
            $ref: '#/components/schemas/Case'
          type: array
          description: >-
            The list of cases associated with the parent after any filters have
            been applied.
      description: The response message for the SearchCases endpoint.
      type: object
      id: SearchCasesResponse
    Attachment:
      description: >-
        An Attachment contains metadata about a file that was uploaded to a case
        - it is NOT a file itself. That being said, the name of an Attachment
        object can be used to download its accompanying file through the
        `media.download` endpoint. While attachments can be uploaded in the
        console at the same time as a comment, they're associated on a "case"
        level, not a "comment" level.
      id: Attachment
      properties:
        sizeBytes:
          format: int64
          readOnly: true
          type: string
          description: Output only. The size of the attachment in bytes.
        mimeType:
          type: string
          readOnly: true
          description: Output only. The MIME type of the attachment (e.g. text/plain).
        name:
          readOnly: true
          type: string
          description: Output only. The resource name of the attachment.
        filename:
          description: The filename of the attachment (e.g. `"graph.jpg"`).
          type: string
        creator:
          readOnly: true
          $ref: '#/components/schemas/Actor'
          description: >-
            Output only. The user who uploaded the attachment. Note, the name
            and email will be obfuscated if the attachment was uploaded by
            Google support.
        createTime:
          readOnly: true
          type: string
          description: Output only. The time at which the attachment was created.
          format: google-datetime
      type: object
    ObjectId:
      type: object
      description: '# gdata.* are outside protos with mising documentation'
      properties:
        bucketName:
          type: string
          description: '# gdata.* are outside protos with mising documentation'
        generation:
          type: string
          format: int64
          description: '# gdata.* are outside protos with mising documentation'
        objectName:
          type: string
          description: '# gdata.* are outside protos with mising documentation'
      id: ObjectId
    Case:
      description: >-
        A Case is an object that contains the details of a support case. It
        contains fields for the time it was created, its priority, its
        classification, and more. Cases can also have comments and attachments
        that get added over time. A case is parented by a Google Cloud
        organization or project. Organizations are identified by a number, so
        the name of a case parented by an organization would look like this: ```
        organizations/123/cases/456 ``` Projects have two unique identifiers, an
        ID and a number, and they look like this: ``` projects/abc/cases/456 ```
        ``` projects/123/cases/456 ``` You can use either of them when calling
        the API. To learn more about project identifiers, see
        [AIP-2510](https://google.aip.dev/cloud/2510).
      id: Case
      properties:
        languageCode:
          description: >-
            The language the user has requested to receive support in. This
            should be a BCP 47 language code (e.g., `"en"`, `"zh-CN"`,
            `"zh-TW"`, `"ja"`, `"ko"`). If no language or an unsupported
            language is specified, this field defaults to English (en). Language
            selection during case creation may affect your available support
            options. For a list of supported languages and their support working
            hours, see:
            https://cloud.google.com/support/docs/language-working-hours
          type: string
        classification:
          description: The issue classification applicable to this case.
          $ref: '#/components/schemas/CaseClassification'
        contactEmail:
          type: string
          description: >-
            A user-supplied email address to send case update notifications for.
            This should only be used in BYOID flows, where we cannot infer the
            user's email address directly from their EUCs.
        escalated:
          description: Whether the case is currently escalated.
          type: boolean
        description:
          description: A broad description of the issue.
          type: string
        updateTime:
          type: string
          description: Output only. The time this case was last updated.
          readOnly: true
          format: google-datetime
        priority:
          type: string
          enumDescriptions:
            - Priority is undefined or has not been set yet.
            - Extreme impact on a production service. Service is hard down.
            - >-
              Critical impact on a production service. Service is currently
              unusable.
            - >-
              Severe impact on a production service. Service is usable but
              greatly impaired.
            - >-
              Medium impact on a production service. Service is available, but
              moderately impaired.
            - >-
              General questions or minor issues. Production service is fully
              available.
          enum:
            - PRIORITY_UNSPECIFIED
            - P0
            - P1
            - P2
            - P3
            - P4
          description: The priority of this case.
        name:
          description: The resource name for the case.
          type: string
        testCase:
          description: >-
            Whether this case was created for internal API testing and should
            not be acted on by the support team.
          type: boolean
        timeZone:
          type: string
          description: >-
            The timezone of the user who created the support case. It should be
            in a format IANA recognizes: https://www.iana.org/time-zones. There
            is no additional validation done by the API.
        state:
          readOnly: true
          type: string
          description: Output only. The current status of the support case.
          enumDescriptions:
            - Case is in an unknown state.
            - >-
              The case has been created but no one is assigned to work on it
              yet.
            - The case is currently being handled by Google support.
            - Google is waiting for a response.
            - A solution has been offered for the case, but it isn't yet closed.
            - The case has been resolved.
          enum:
            - STATE_UNSPECIFIED
            - NEW
            - IN_PROGRESS_GOOGLE_SUPPORT
            - ACTION_REQUIRED
            - SOLUTION_PROVIDED
            - CLOSED
        createTime:
          readOnly: true
          description: Output only. The time this case was created.
          type: string
          format: google-datetime
        creator:
          description: >-
            The user who created the case. Note: The name and email will be
            obfuscated if the case was created by Google Support.
          $ref: '#/components/schemas/Actor'
        subscriberEmailAddresses:
          description: The email addresses to receive updates on this case.
          type: array
          items:
            type: string
        displayName:
          description: The short summary of the issue reported in this case.
          type: string
      type: object
    DiffUploadResponse:
      properties:
        originalObject:
          $ref: '#/components/schemas/CompositeMedia'
          description: '# gdata.* are outside protos with mising documentation'
        objectVersion:
          description: '# gdata.* are outside protos with mising documentation'
          type: string
      type: object
      id: DiffUploadResponse
      description: '# gdata.* are outside protos with mising documentation'
    DiffUploadRequest:
      type: object
      properties:
        checksumsInfo:
          description: '# gdata.* are outside protos with mising documentation'
          $ref: '#/components/schemas/CompositeMedia'
        objectVersion:
          description: '# gdata.* are outside protos with mising documentation'
          type: string
        objectInfo:
          $ref: '#/components/schemas/CompositeMedia'
          description: '# gdata.* are outside protos with mising documentation'
      description: '# gdata.* are outside protos with mising documentation'
      id: DiffUploadRequest
    SearchCaseClassificationsResponse:
      description: The response message for SearchCaseClassifications endpoint.
      type: object
      id: SearchCaseClassificationsResponse
      properties:
        caseClassifications:
          items:
            $ref: '#/components/schemas/CaseClassification'
          type: array
          description: The classifications retrieved.
        nextPageToken:
          type: string
          description: >-
            A token to retrieve the next page of results. Set this in the
            `page_token` field of subsequent `caseClassifications.list`
            requests. If unspecified, there are no more results to retrieve.
    DownloadParameters:
      id: DownloadParameters
      properties:
        ignoreRange:
          type: boolean
          description: '# gdata.* are outside protos with mising documentation'
        allowGzipCompression:
          type: boolean
          description: '# gdata.* are outside protos with mising documentation'
      type: object
      description: '# gdata.* are outside protos with mising documentation'
    DiffChecksumsResponse:
      description: '# gdata.* are outside protos with mising documentation'
      properties:
        objectVersion:
          type: string
          description: '# gdata.* are outside protos with mising documentation'
        checksumsLocation:
          description: '# gdata.* are outside protos with mising documentation'
          $ref: '#/components/schemas/CompositeMedia'
        chunkSizeBytes:
          format: int64
          description: '# gdata.* are outside protos with mising documentation'
          type: string
        objectSizeBytes:
          description: '# gdata.* are outside protos with mising documentation'
          type: string
          format: int64
        objectLocation:
          $ref: '#/components/schemas/CompositeMedia'
          description: '# gdata.* are outside protos with mising documentation'
      type: object
      id: DiffChecksumsResponse
    WorkflowOperationMetadata:
      properties:
        workflowOperationType:
          enum:
            - UNKNOWN_OPERATION_TYPE
            - WORKFLOWS_V1
            - WORKFLOWS_V2
          description: Which version of the workflow service this operation came from.
          type: string
          enumDescriptions:
            - Unknown version.
            - Version 1.
            - Version 2.
        namespace:
          description: >-
            The namespace that the job was scheduled in. Must be included in the
            workflow metadata so the workflow status can be retrieved.
          type: string
        operationAction:
          type: string
          enumDescriptions:
            - Operation action is not specified.
            - Operation pertains to the creation of a new support account.
            - Operation pertains to the updating of an existing support account.
            - >-
              Operation pertains to the purchasing of a support plan that may
              either create or update a support account.
          enum:
            - OPERATION_ACTION_UNSPECIFIED
            - CREATE_SUPPORT_ACCOUNT
            - UPDATE_SUPPORT_ACCOUNT
            - PURCHASE_SUPPORT_ACCOUNT
          description: The type of action the operation is classified as.
      id: WorkflowOperationMetadata
      description: Metadata about the operation. Used to lookup the current status.
      type: object
    Actor:
      type: object
      properties:
        displayName:
          type: string
          description: >-
            The name to display for the actor. If not provided, it is inferred
            from credentials supplied during case creation. When an email is
            provided, a display name must also be provided. This will be
            obfuscated if the user is a Google Support agent.
        email:
          description: >-
            The email address of the actor. If not provided, it is inferred from
            the credentials supplied during case creation. When a name is
            provided, an email must also be provided. If the user is a Google
            Support agent, this is obfuscated. This field is deprecated. Use
            **username** field instead.
          type: string
          deprecated: true
        googleSupport:
          type: boolean
          readOnly: true
          description: Output only. Whether the actor is a Google support actor.
        username:
          readOnly: true
          description: >-
            Output only. The username of the actor. It may look like an email or
            other format provided by the identity provider. If not provided, it
            is inferred from the credentials supplied. When a name is provided,
            a username must also be provided. If the user is a Google Support
            agent, this will not be set.
          type: string
      description: >-
        An Actor represents an entity that performed an action. For example, an
        actor could be a user who posted a comment on a support case, a user who
        uploaded an attachment, or a service account that created a support
        case.
      id: Actor
    CaseClassification:
      properties:
        id:
          description: >-
            The unique ID for a classification. Must be specified for case
            creation. To retrieve valid classification IDs for case creation,
            use `caseClassifications.search`. Classification IDs returned by
            `caseClassifications.search` are guaranteed to be valid for at least
            6 months. If a given classification is deactiveated, it will
            immediately stop being returned. After 6 months, `case.create`
            requests using the classification ID will fail.
          type: string
        displayName:
          type: string
          description: >-
            A display name for the classification. The display name is not
            static and can change. To uniquely and consistently identify
            classifications, use the `CaseClassification.id` field.
      type: object
      description: >-
        A Case Classification represents the topic that a case is about. It's
        very important to use accurate classifications, because they're used to
        route your cases to specialists who can help you. A classification
        always has an ID that is its unique identifier. A valid ID is required
        when creating a case.
      id: CaseClassification
    ListCommentsResponse:
      type: object
      properties:
        comments:
          description: List of the comments associated with the case.
          items:
            $ref: '#/components/schemas/Comment'
          type: array
        nextPageToken:
          description: >-
            A token to retrieve the next page of results. Set this in the
            `page_token` field of subsequent `cases.comments.list` requests. If
            unspecified, there are no more results to retrieve.
          type: string
      id: ListCommentsResponse
      description: The response message for the ListComments endpoint.
    Escalation:
      description: An escalation of a support case.
      type: object
      properties:
        justification:
          type: string
          description: >-
            Required. A free text description to accompany the `reason` field
            above. Provides additional context on why the case is being
            escalated.
        reason:
          description: Required. The reason why the Case is being escalated.
          enumDescriptions:
            - >-
              The escalation reason is in an unknown state or has not been
              specified.
            - The case is taking too long to resolve.
            - >-
              The support agent does not have the expertise required to
              successfully resolve the issue.
            - The issue is having a significant business impact.
          type: string
          enum:
            - REASON_UNSPECIFIED
            - RESOLUTION_TIME
            - TECHNICAL_EXPERTISE
            - BUSINESS_IMPACT
      id: Escalation
    Blobstore2Info:
      type: object
      description: '# gdata.* are outside protos with mising documentation'
      properties:
        readToken:
          description: '# gdata.* are outside protos with mising documentation'
          type: string
        downloadReadHandle:
          format: byte
          description: '# gdata.* are outside protos with mising documentation'
          type: string
        uploadMetadataContainer:
          format: byte
          type: string
          description: '# gdata.* are outside protos with mising documentation'
        blobId:
          type: string
          description: '# gdata.* are outside protos with mising documentation'
        blobGeneration:
          type: string
          format: int64
          description: '# gdata.* are outside protos with mising documentation'
      id: Blobstore2Info
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
  x-stackQL-resources:
    media:
      id: google.cloudsupport.media
      name: media
      title: Media
      methods:
        upload:
          operation:
            $ref: '#/paths/~1v2~1{parentType}~1{parent}~1attachments/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    attachments:
      id: google.cloudsupport.attachments
      name: attachments
      title: Attachments
      methods:
        list:
          operation:
            $ref: '#/paths/~1v2~1{parentType}~1{parent}~1attachments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.attachments
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/attachments/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    cases:
      id: google.cloudsupport.cases
      name: cases
      title: Cases
      methods:
        get:
          operation:
            $ref: '#/paths/~1v2~1{name}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v2~1{name}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        escalate:
          operation:
            $ref: '#/paths/~1v2~1{name}/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v2~1{parentType}~1{parent}~1cases/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v2~1{parentType}~1{parent}~1cases/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.cases
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cases/methods/list'
          - $ref: '#/components/x-stackQL-resources/cases/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/cases/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/cases/methods/patch'
        replace: []
        delete: []
    comments:
      id: google.cloudsupport.comments
      name: comments
      title: Comments
      methods:
        list:
          operation:
            $ref: '#/paths/~1v2~1{parentType}~1{parent}~1comments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.comments
        create:
          operation:
            $ref: '#/paths/~1v2~1{parentType}~1{parent}~1comments/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/comments/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/comments/methods/create'
        update: []
        replace: []
        delete: []
    case_classifications:
      id: google.cloudsupport.case_classifications
      name: case_classifications
      title: Case_classifications
      methods:
        search:
          operation:
            $ref: '#/paths/~1v2~1caseClassifications:search/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
paths:
  /v2/{parentType}/{parent}/attachments:
    parameters: &ref_1
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
    post:
      description: >-
        Create a file attachment on a case or Cloud resource. The attachment
        must have the following fields set: `filename`. EXAMPLES: cURL: ```shell
        echo "This text is in a file I'm uploading using CSAPI." \ >
        "./example_file.txt" case="projects/some-project/cases/43594844" curl \
        --header "Authorization: Bearer $(gcloud auth print-access-token)" \
        --data-binary @"./example_file.txt" \
        "https://cloudsupport.googleapis.com/upload/v2beta/$case/attachments?attachment.filename=uploaded_via_curl.txt"
        ``` Python: ```python import googleapiclient.discovery api_version =
        "v2" supportApiService = googleapiclient.discovery.build(
        serviceName="cloudsupport", version=api_version,
        discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}",
        ) file_path = "./example_file.txt" with open(file_path, "w") as file:
        file.write( "This text is inside a file I'm going to upload using the
        Cloud Support API.", ) request = supportApiService.media().upload(
        parent="projects/some-project/cases/43595344", media_body=file_path )
        request.uri = request.uri.split("?")[0] +
        "?attachment.filename=uploaded_via_python.txt" print(request.execute())
        ```
      operationId: cloudsupport.media.upload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAttachmentRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
      parameters:
        - in: path
          name: parentType
          required: true
          schema:
            type: string
        - in: path
          name: parent
          required: true
          schema:
            type: string
    get:
      description: >-
        List all the attachments associated with a support case. EXAMPLES: cURL:
        ```shell case="projects/some-project/cases/23598314" curl \ --header
        "Authorization: Bearer $(gcloud auth print-access-token)" \
        "https://cloudsupport.googleapis.com/v2/$case/attachments" ``` Python:
        ```python import googleapiclient.discovery api_version = "v2"
        supportApiService = googleapiclient.discovery.build(
        serviceName="cloudsupport", version=api_version,
        discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}",
        ) request = ( supportApiService.cases() .attachments()
        .list(parent="projects/some-project/cases/43595344") )
        print(request.execute()) ```
      operationId: cloudsupport.cases.attachments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAttachmentsResponse'
      parameters:
        - in: path
          name: parentType
          required: true
          schema:
            type: string
        - in: path
          name: parent
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v2/{name}:
    parameters: *ref_1
    get:
      description: >-
        Retrieve a case. EXAMPLES: cURL: ```shell
        case="projects/some-project/cases/16033687" curl \ --header
        "Authorization: Bearer $(gcloud auth print-access-token)" \
        "https://cloudsupport.googleapis.com/v2/$case" ``` Python: ```python
        import googleapiclient.discovery api_version = "v2" supportApiService =
        googleapiclient.discovery.build( serviceName="cloudsupport",
        version=api_version,
        discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}",
        ) request = supportApiService.cases().get(
        name="projects/some-project/cases/43595344", ) print(request.execute())
        ```
      operationId: cloudsupport.cases.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Case'
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
    patch:
      description: >-
        Update a case. Only some fields can be updated. EXAMPLES: cURL: ```shell
        case="projects/some-project/cases/43595344" curl \ --request PATCH \
        --header "Authorization: Bearer $(gcloud auth print-access-token)" \
        --header "Content-Type: application/json" \ --data '{ "priority": "P1"
        }' \ "https://cloudsupport.googleapis.com/v2/$case?updateMask=priority"
        ``` Python: ```python import googleapiclient.discovery api_version =
        "v2" supportApiService = googleapiclient.discovery.build(
        serviceName="cloudsupport", version=api_version,
        discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}",
        ) request = supportApiService.cases().patch(
        name="projects/some-project/cases/43112854", body={ "displayName": "This
        is Now a New Title", "priority": "P2", }, ) print(request.execute()) ```
      operationId: cloudsupport.cases.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Case'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Case'
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    post:
      description: >-
        Escalate a case, starting the Google Cloud Support escalation management
        process. This operation is only available for some support services. Go
        to https://cloud.google.com/support and look for 'Technical support
        escalations' in the feature list to find out which ones let you do that.
        EXAMPLES: cURL: ```shell case="projects/some-project/cases/43595344"
        curl \ --request POST \ --header "Authorization: Bearer $(gcloud auth
        print-access-token)" \ --header "Content-Type: application/json" \
        --data '{ "escalation": { "reason": "BUSINESS_IMPACT", "justification":
        "This is a test escalation." } }' \
        "https://cloudsupport.googleapis.com/v2/$case:escalate" ``` Python:
        ```python import googleapiclient.discovery api_version = "v2"
        supportApiService = googleapiclient.discovery.build(
        serviceName="cloudsupport", version=api_version,
        discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}",
        ) request = supportApiService.cases().escalate(
        name="projects/some-project/cases/43595344", body={ "escalation": {
        "reason": "BUSINESS_IMPACT", "justification": "This is a test
        escalation.", }, }, ) print(request.execute()) ```
      operationId: cloudsupport.cases.escalate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EscalateCaseRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Case'
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
  /v2/{parentType}/{parent}/comments:
    parameters: *ref_1
    get:
      description: >-
        List all the comments associated with a case. EXAMPLES: cURL: ```shell
        case="projects/some-project/cases/43595344" curl \ --header
        "Authorization: Bearer $(gcloud auth print-access-token)" \
        "https://cloudsupport.googleapis.com/v2/$case/comments" ``` Python:
        ```python import googleapiclient.discovery api_version = "v2"
        supportApiService = googleapiclient.discovery.build(
        serviceName="cloudsupport", version=api_version,
        discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}",
        ) request = ( supportApiService.cases() .comments()
        .list(parent="projects/some-project/cases/43595344") )
        print(request.execute()) ```
      operationId: cloudsupport.cases.comments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCommentsResponse'
      parameters:
        - in: path
          name: parentType
          required: true
          schema:
            type: string
        - in: path
          name: parent
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: >-
        Add a new comment to a case. The comment must have the following fields
        set: `body`. EXAMPLES: cURL: ```shell
        case="projects/some-project/cases/43591344" curl \ --request POST \
        --header "Authorization: Bearer $(gcloud auth print-access-token)" \
        --header 'Content-Type: application/json' \ --data '{ "body": "This is a
        test comment." }' \
        "https://cloudsupport.googleapis.com/v2/$case/comments" ``` Python:
        ```python import googleapiclient.discovery api_version = "v2"
        supportApiService = googleapiclient.discovery.build(
        serviceName="cloudsupport", version=api_version,
        discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}",
        ) request = ( supportApiService.cases() .comments() .create(
        parent="projects/some-project/cases/43595344", body={"body": "This is a
        test comment."}, ) ) print(request.execute()) ```
      operationId: cloudsupport.cases.comments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
      parameters:
        - in: path
          name: parentType
          required: true
          schema:
            type: string
        - in: path
          name: parent
          required: true
          schema:
            type: string
  /v2/{parentType}/{parent}/cases:
    parameters: *ref_1
    post:
      description: >-
        Create a new case and associate it with a parent. It must have the
        following fields set: `display_name`, `description`, `classification`,
        and `priority`. If you're just testing the API and don't want to route
        your case to an agent, set `testCase=true`. EXAMPLES: cURL: ```shell
        parent="projects/some-project" curl \ --request POST \ --header
        "Authorization: Bearer $(gcloud auth print-access-token)" \ --header
        'Content-Type: application/json' \ --data '{ "display_name": "Test case
        created by me.", "description": "a random test case, feel free to
        close", "classification": { "id":
        "100IK2AKCLHMGRJ9CDGMOCGP8DM6UTB4BT262T31BT1M2T31DHNMENPO6KS36CPJ786L2TBFEHGN6NPI64R3CDHN8880G08I1H3MURR7DHII0GRCDTQM8"
        }, "time_zone": "-07:00", "subscriber_email_addresses": [
        "foo@domain.com", "bar@domain.com" ], "testCase": true, "priority": "P3"
        }' \ "https://cloudsupport.googleapis.com/v2/$parent/cases" ``` Python:
        ```python import googleapiclient.discovery api_version = "v2"
        supportApiService = googleapiclient.discovery.build(
        serviceName="cloudsupport", version=api_version,
        discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}",
        ) request = supportApiService.cases().create(
        parent="projects/some-project", body={ "displayName": "A Test Case",
        "description": "This is a test case.", "testCase": True, "priority":
        "P2", "classification": { "id":
        "100IK2AKCLHMGRJ9CDGMOCGP8DM6UTB4BT262T31BT1M2T31DHNMENPO6KS36CPJ786L2TBFEHGN6NPI64R3CDHN8880G08I1H3MURR7DHII0GRCDTQM8"
        }, }, ) print(request.execute()) ```
      operationId: cloudsupport.cases.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Case'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Case'
      parameters:
        - in: path
          name: parentType
          required: true
          schema:
            type: string
        - in: path
          name: parent
          required: true
          schema:
            type: string
    get:
      description: >-
        Retrieve all cases under a parent, but not its children. For example,
        listing cases under an organization only returns the cases that are
        directly parented by that organization. To retrieve cases under an
        organization and its projects, use `cases.search`. EXAMPLES: cURL:
        ```shell parent="projects/some-project" curl \ --header "Authorization:
        Bearer $(gcloud auth print-access-token)" \
        "https://cloudsupport.googleapis.com/v2/$parent/cases" ``` Python:
        ```python import googleapiclient.discovery api_version = "v2"
        supportApiService = googleapiclient.discovery.build(
        serviceName="cloudsupport", version=api_version,
        discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}",
        ) request =
        supportApiService.cases().list(parent="projects/some-project")
        print(request.execute()) ```
      operationId: cloudsupport.cases.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCasesResponse'
      parameters:
        - in: path
          name: parentType
          required: true
          schema:
            type: string
        - in: path
          name: parent
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v2/caseClassifications:search:
    parameters: *ref_1
    get:
      description: >-
        Retrieve valid classifications to use when creating a support case.
        Classifications are hierarchical. Each classification is a string
        containing all levels of the hierarchy separated by `" > "`. For
        example, `"Technical Issue > Compute > Compute Engine"`. Classification
        IDs returned by this endpoint are valid for at least six months. When a
        classification is deactivated, this endpoint immediately stops returning
        it. After six months, `case.create` requests using the classification
        will fail. EXAMPLES: cURL: ```shell curl \ --header "Authorization:
        Bearer $(gcloud auth print-access-token)" \
        'https://cloudsupport.googleapis.com/v2/caseClassifications:search?query=display_name:"*Compute%20Engine*"'
        ``` Python: ```python import googleapiclient.discovery supportApiService
        = googleapiclient.discovery.build( serviceName="cloudsupport",
        version="v2",
        discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version=v2",
        ) request = supportApiService.caseClassifications().search(
        query='display_name:"*Compute Engine*"' ) print(request.execute()) ```
      operationId: cloudsupport.caseClassifications.search
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchCaseClassificationsResponse'
      parameters:
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: query
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
