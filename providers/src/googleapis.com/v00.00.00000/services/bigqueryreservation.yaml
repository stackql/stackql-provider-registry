openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: BigQuery Reservation API
  description: A service to modify your BigQuery flat-rate reservations.
  version: v1
  x-discovery-doc-revision: '20240905'
  x-generated-date: '2024-09-13'
externalDocs:
  url: https://cloud.google.com/bigquery/
servers:
  - url: https://bigqueryreservation.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/bigquery: >-
              View and manage your data in Google BigQuery and see the email
              address for your Google Account
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    Reservation:
      id: Reservation
      description: A reservation is a mechanism used to guarantee slots to users.
      type: object
      properties:
        name:
          description: >-
            The resource name of the reservation, e.g.,
            `projects/*/locations/*/reservations/team1-prod`. The reservation_id
            must only contain lower case alphanumeric characters or dashes. It
            must start with a letter and must not end with a dash. Its maximum
            length is 64 characters.
          type: string
        slotCapacity:
          description: >-
            Baseline slots available to this reservation. A slot is a unit of
            computational power in BigQuery, and serves as the unit of
            parallelism. Queries using this reservation might use more slots
            during runtime if ignore_idle_slots is set to false, or autoscaling
            is enabled. If edition is EDITION_UNSPECIFIED and total
            slot_capacity of the reservation and its siblings exceeds the total
            slot_count of all capacity commitments, the request will fail with
            `google.rpc.Code.RESOURCE_EXHAUSTED`. If edition is any value but
            EDITION_UNSPECIFIED, then the above requirement is not needed. The
            total slot_capacity of the reservation and its siblings may exceed
            the total slot_count of capacity commitments. In that case, the
            exceeding slots will be charged with the autoscale SKU. You can
            increase the number of baseline slots in a reservation every few
            minutes. If you want to decrease your baseline slots, you are
            limited to once an hour if you have recently changed your baseline
            slot capacity and your baseline slots exceed your committed slots.
            Otherwise, you can decrease your baseline slots every few minutes.
          type: string
          format: int64
        ignoreIdleSlots:
          description: >-
            If false, any query or pipeline job using this reservation will use
            idle slots from other reservations within the same admin project. If
            true, a query or pipeline job using this reservation will execute
            with the slot capacity specified in the slot_capacity field at most.
          type: boolean
        autoscale:
          description: The configuration parameters for the auto scaling feature.
          $ref: '#/components/schemas/Autoscale'
        concurrency:
          description: >-
            Job concurrency target which sets a soft upper bound on the number
            of jobs that can run concurrently in this reservation. This is a
            soft target due to asynchronous nature of the system and various
            optimizations for small queries. Default value is 0 which means that
            concurrency target will be automatically computed by the system.
            NOTE: this field is exposed as target job concurrency in the
            Information Schema, DDL and BQ CLI.
          type: string
          format: int64
        creationTime:
          description: Output only. Creation time of the reservation.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Last update time of the reservation.
          readOnly: true
          type: string
          format: google-datetime
        multiRegionAuxiliary:
          description: >-
            Applicable only for reservations located within one of the BigQuery
            multi-regions (US or EU). If set to true, this reservation is placed
            in the organization's secondary region which is designated for
            disaster recovery purposes. If false, this reservation is placed in
            the organization's default region. NOTE: this is a preview feature.
            Project must be allow-listed in order to set this field.
          type: boolean
        edition:
          description: Edition of the reservation.
          type: string
          enumDescriptions:
            - Default value, which will be treated as ENTERPRISE.
            - Standard edition.
            - Enterprise edition.
            - Enterprise plus edition.
          enum:
            - EDITION_UNSPECIFIED
            - STANDARD
            - ENTERPRISE
            - ENTERPRISE_PLUS
        primaryLocation:
          description: >-
            Optional. The primary location of the reservation. The field is only
            meaningful for reservation used for cross region disaster recovery.
            The field is output only for customers and should not be specified,
            however, the google.api.field_behavior is not set to OUTPUT_ONLY
            since these fields are set in rerouted requests sent across regions.
          type: string
        secondaryLocation:
          description: >-
            Optional. The secondary location of the reservation which is used
            for cross region disaster recovery purposes. Customer can set this
            in create/update reservation calls to create a failover reservation
            or convert a non-failover reservation to a failover reservation.
          type: string
        originalPrimaryLocation:
          description: >-
            Optional. The original primary location of the reservation which is
            set only during its creation and remains unchanged afterwards. It
            can be used by the customer to answer questions about disaster
            recovery billing. The field is output only for customers and should
            not be specified, however, the google.api.field_behavior is not set
            to OUTPUT_ONLY since these fields are set in rerouted requests sent
            across regions.
          type: string
    Autoscale:
      id: Autoscale
      description: Auto scaling settings.
      type: object
      properties:
        currentSlots:
          description: >-
            Output only. The slot capacity added to this reservation when
            autoscale happens. Will be between [0, max_slots].
          readOnly: true
          type: string
          format: int64
        maxSlots:
          description: Number of slots to be scaled when needed.
          type: string
          format: int64
    ListReservationsResponse:
      id: ListReservationsResponse
      description: The response for ReservationService.ListReservations.
      type: object
      properties:
        reservations:
          description: List of reservations visible to the user.
          type: array
          items:
            $ref: '#/components/schemas/Reservation'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    FailoverReservationRequest:
      id: FailoverReservationRequest
      description: The request for ReservationService.FailoverReservation.
      type: object
      properties: {}
    CapacityCommitment:
      id: CapacityCommitment
      description: >-
        Capacity commitment is a way to purchase compute capacity for BigQuery
        jobs (in the form of slots) with some committed period of usage. Annual
        commitments renew by default. Commitments can be removed after their
        commitment end time passes. In order to remove annual commitment, its
        plan needs to be changed to monthly or flex first. A capacity commitment
        resource exists as a child resource of the admin project.
      type: object
      properties:
        name:
          description: >-
            Output only. The resource name of the capacity commitment, e.g.,
            `projects/myproject/locations/US/capacityCommitments/123` The
            commitment_id must only contain lower case alphanumeric characters
            or dashes. It must start with a letter and must not end with a dash.
            Its maximum length is 64 characters.
          readOnly: true
          type: string
        slotCount:
          description: Number of slots in this commitment.
          type: string
          format: int64
        plan:
          description: Capacity commitment commitment plan.
          type: string
          enumDescriptions:
            - >-
              Invalid plan value. Requests with this value will be rejected with
              error code `google.rpc.Code.INVALID_ARGUMENT`.
            - >-
              Flex commitments have committed period of 1 minute after becoming
              ACTIVE. After that, they are not in a committed period anymore and
              can be removed any time.
            - >-
              Same as FLEX, should only be used if flat-rate commitments are
              still available.
            - >-
              Trial commitments have a committed period of 182 days after
              becoming ACTIVE. After that, they are converted to a new
              commitment based on the `renewal_plan`. Default `renewal_plan` for
              Trial commitment is Flex so that it can be deleted right after
              committed period ends.
            - >-
              Monthly commitments have a committed period of 30 days after
              becoming ACTIVE. After that, they are not in a committed period
              anymore and can be removed any time.
            - >-
              Same as MONTHLY, should only be used if flat-rate commitments are
              still available.
            - >-
              Annual commitments have a committed period of 365 days after
              becoming ACTIVE. After that they are converted to a new commitment
              based on the renewal_plan.
            - >-
              Same as ANNUAL, should only be used if flat-rate commitments are
              still available.
            - >-
              3-year commitments have a committed period of 1095(3 * 365) days
              after becoming ACTIVE. After that they are converted to a new
              commitment based on the renewal_plan.
            - >-
              Should only be used for `renewal_plan` and is only meaningful if
              edition is specified to values other than EDITION_UNSPECIFIED.
              Otherwise CreateCapacityCommitmentRequest or
              UpdateCapacityCommitmentRequest will be rejected with error code
              `google.rpc.Code.INVALID_ARGUMENT`. If the renewal_plan is NONE,
              capacity commitment will be removed at the end of its commitment
              period.
          enumDeprecated:
            - false
            - false
            - true
            - true
            - false
            - true
            - false
            - true
            - false
            - false
          enum:
            - COMMITMENT_PLAN_UNSPECIFIED
            - FLEX
            - FLEX_FLAT_RATE
            - TRIAL
            - MONTHLY
            - MONTHLY_FLAT_RATE
            - ANNUAL
            - ANNUAL_FLAT_RATE
            - THREE_YEAR
            - NONE
        state:
          description: Output only. State of the commitment.
          readOnly: true
          type: string
          enumDescriptions:
            - Invalid state value.
            - >-
              Capacity commitment is pending provisioning. Pending capacity
              commitment does not contribute to the project's slot_capacity.
            - >-
              Once slots are provisioned, capacity commitment becomes active.
              slot_count is added to the project's slot_capacity.
            - Capacity commitment is failed to be activated by the backend.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - ACTIVE
            - FAILED
        commitmentStartTime:
          description: >-
            Output only. The start of the current commitment period. It is
            applicable only for ACTIVE capacity commitments.
          readOnly: true
          type: string
          format: google-datetime
        commitmentEndTime:
          description: >-
            Output only. The end of the current commitment period. It is
            applicable only for ACTIVE capacity commitments.
          readOnly: true
          type: string
          format: google-datetime
        failureStatus:
          description: >-
            Output only. For FAILED commitment plan, provides the reason of
            failure.
          readOnly: true
          $ref: '#/components/schemas/Status'
        renewalPlan:
          description: >-
            The plan this capacity commitment is converted to after
            commitment_end_time passes. Once the plan is changed, committed
            period is extended according to commitment plan. Only applicable for
            ANNUAL and TRIAL commitments.
          type: string
          enumDescriptions:
            - >-
              Invalid plan value. Requests with this value will be rejected with
              error code `google.rpc.Code.INVALID_ARGUMENT`.
            - >-
              Flex commitments have committed period of 1 minute after becoming
              ACTIVE. After that, they are not in a committed period anymore and
              can be removed any time.
            - >-
              Same as FLEX, should only be used if flat-rate commitments are
              still available.
            - >-
              Trial commitments have a committed period of 182 days after
              becoming ACTIVE. After that, they are converted to a new
              commitment based on the `renewal_plan`. Default `renewal_plan` for
              Trial commitment is Flex so that it can be deleted right after
              committed period ends.
            - >-
              Monthly commitments have a committed period of 30 days after
              becoming ACTIVE. After that, they are not in a committed period
              anymore and can be removed any time.
            - >-
              Same as MONTHLY, should only be used if flat-rate commitments are
              still available.
            - >-
              Annual commitments have a committed period of 365 days after
              becoming ACTIVE. After that they are converted to a new commitment
              based on the renewal_plan.
            - >-
              Same as ANNUAL, should only be used if flat-rate commitments are
              still available.
            - >-
              3-year commitments have a committed period of 1095(3 * 365) days
              after becoming ACTIVE. After that they are converted to a new
              commitment based on the renewal_plan.
            - >-
              Should only be used for `renewal_plan` and is only meaningful if
              edition is specified to values other than EDITION_UNSPECIFIED.
              Otherwise CreateCapacityCommitmentRequest or
              UpdateCapacityCommitmentRequest will be rejected with error code
              `google.rpc.Code.INVALID_ARGUMENT`. If the renewal_plan is NONE,
              capacity commitment will be removed at the end of its commitment
              period.
          enumDeprecated:
            - false
            - false
            - true
            - true
            - false
            - true
            - false
            - true
            - false
            - false
          enum:
            - COMMITMENT_PLAN_UNSPECIFIED
            - FLEX
            - FLEX_FLAT_RATE
            - TRIAL
            - MONTHLY
            - MONTHLY_FLAT_RATE
            - ANNUAL
            - ANNUAL_FLAT_RATE
            - THREE_YEAR
            - NONE
        multiRegionAuxiliary:
          description: >-
            Applicable only for commitments located within one of the BigQuery
            multi-regions (US or EU). If set to true, this commitment is placed
            in the organization's secondary region which is designated for
            disaster recovery purposes. If false, this commitment is placed in
            the organization's default region. NOTE: this is a preview feature.
            Project must be allow-listed in order to set this field.
          type: boolean
        edition:
          description: Edition of the capacity commitment.
          type: string
          enumDescriptions:
            - Default value, which will be treated as ENTERPRISE.
            - Standard edition.
            - Enterprise edition.
            - Enterprise plus edition.
          enum:
            - EDITION_UNSPECIFIED
            - STANDARD
            - ENTERPRISE
            - ENTERPRISE_PLUS
        isFlatRate:
          description: >-
            Output only. If true, the commitment is a flat-rate commitment,
            otherwise, it's an edition commitment.
          readOnly: true
          type: boolean
    Status:
      id: Status
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    ListCapacityCommitmentsResponse:
      id: ListCapacityCommitmentsResponse
      description: The response for ReservationService.ListCapacityCommitments.
      type: object
      properties:
        capacityCommitments:
          description: List of capacity commitments visible to the user.
          type: array
          items:
            $ref: '#/components/schemas/CapacityCommitment'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    SplitCapacityCommitmentRequest:
      id: SplitCapacityCommitmentRequest
      description: The request for ReservationService.SplitCapacityCommitment.
      type: object
      properties:
        slotCount:
          description: Number of slots in the capacity commitment after the split.
          type: string
          format: int64
    SplitCapacityCommitmentResponse:
      id: SplitCapacityCommitmentResponse
      description: The response for ReservationService.SplitCapacityCommitment.
      type: object
      properties:
        first:
          description: First capacity commitment, result of a split.
          $ref: '#/components/schemas/CapacityCommitment'
        second:
          description: Second capacity commitment, result of a split.
          $ref: '#/components/schemas/CapacityCommitment'
    MergeCapacityCommitmentsRequest:
      id: MergeCapacityCommitmentsRequest
      description: The request for ReservationService.MergeCapacityCommitments.
      type: object
      properties:
        capacityCommitmentIds:
          description: >-
            Ids of capacity commitments to merge. These capacity commitments
            must exist under admin project and location specified in the parent.
            ID is the last portion of capacity commitment name e.g., 'abc' for
            projects/myproject/locations/US/capacityCommitments/abc
          type: array
          items:
            type: string
    Assignment:
      id: Assignment
      description: >-
        An assignment allows a project to submit jobs of a certain type using
        slots from the specified reservation.
      type: object
      properties:
        name:
          description: >-
            Output only. Name of the resource. E.g.:
            `projects/myproject/locations/US/reservations/team1-prod/assignments/123`.
            The assignment_id must only contain lower case alphanumeric
            characters or dashes and the max length is 64 characters.
          readOnly: true
          type: string
        assignee:
          description: >-
            The resource which will use the reservation. E.g.
            `projects/myproject`, `folders/123`, or `organizations/456`.
          type: string
        jobType:
          description: Which type of jobs will use the reservation.
          type: string
          enumDescriptions:
            - >-
              Invalid type. Requests with this value will be rejected with error
              code `google.rpc.Code.INVALID_ARGUMENT`.
            - >-
              Pipeline (load/export) jobs from the project will use the
              reservation.
            - Query jobs from the project will use the reservation.
            - >-
              BigQuery ML jobs that use services external to BigQuery for model
              training. These jobs will not utilize idle slots from other
              reservations.
            - >-
              Background jobs that BigQuery runs for the customers in the
              background.
            - >-
              Continuous SQL jobs will use this reservation. Reservations with
              continuous assignments cannot be mixed with non-continuous
              assignments.
          enum:
            - JOB_TYPE_UNSPECIFIED
            - PIPELINE
            - QUERY
            - ML_EXTERNAL
            - BACKGROUND
            - CONTINUOUS
        state:
          description: Output only. State of the assignment.
          readOnly: true
          type: string
          enumDescriptions:
            - Invalid state value.
            - >-
              Queries from assignee will be executed as on-demand, if related
              assignment is pending.
            - Assignment is ready.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - ACTIVE
    ListAssignmentsResponse:
      id: ListAssignmentsResponse
      description: The response for ReservationService.ListAssignments.
      type: object
      properties:
        assignments:
          description: List of assignments visible to the user.
          type: array
          items:
            $ref: '#/components/schemas/Assignment'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    SearchAssignmentsResponse:
      id: SearchAssignmentsResponse
      description: The response for ReservationService.SearchAssignments.
      type: object
      properties:
        assignments:
          description: List of assignments visible to the user.
          type: array
          items:
            $ref: '#/components/schemas/Assignment'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    SearchAllAssignmentsResponse:
      id: SearchAllAssignmentsResponse
      description: The response for ReservationService.SearchAllAssignments.
      type: object
      properties:
        assignments:
          description: List of assignments visible to the user.
          type: array
          items:
            $ref: '#/components/schemas/Assignment'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    MoveAssignmentRequest:
      id: MoveAssignmentRequest
      description: >-
        The request for ReservationService.MoveAssignment. **Note**:
        "bigquery.reservationAssignments.create" permission is required on the
        destination_id. **Note**: "bigquery.reservationAssignments.create" and
        "bigquery.reservationAssignments.delete" permission are required on the
        related assignee.
      type: object
      properties:
        destinationId:
          description: >-
            The new reservation ID, e.g.:
            `projects/myotherproject/locations/US/reservations/team2-prod`
          type: string
        assignmentId:
          description: >-
            The optional assignment ID. A new assignment name is generated if
            this field is empty. This field can contain only lowercase
            alphanumeric characters or dashes. Max length is 64 characters.
          type: string
    BiReservation:
      id: BiReservation
      description: Represents a BI Reservation.
      type: object
      properties:
        name:
          description: >-
            The resource name of the singleton BI reservation. Reservation names
            have the form
            `projects/{project_id}/locations/{location_id}/biReservation`.
          type: string
        updateTime:
          description: Output only. The last update timestamp of a reservation.
          readOnly: true
          type: string
          format: google-datetime
        size:
          description: Size of a reservation, in bytes.
          type: string
          format: int64
        preferredTables:
          description: Preferred tables to use BI capacity for.
          type: array
          items:
            $ref: '#/components/schemas/TableReference'
    TableReference:
      id: TableReference
      description: >-
        Fully qualified reference to BigQuery table. Internally stored as
        google.cloud.bi.v1.BqTableReference.
      type: object
      properties:
        projectId:
          description: The assigned project ID of the project.
          type: string
        datasetId:
          description: The ID of the dataset in the above project.
          type: string
        tableId:
          description: The ID of the table in the above dataset.
          type: string
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    locations:
      id: google.bigqueryreservation.locations
      name: locations
      title: Locations
      methods:
        search_assignments:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}:searchAssignments/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        search_all_assignments:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}:searchAllAssignments/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    bi_reservation:
      id: google.bigqueryreservation.bi_reservation
      name: bi_reservation
      title: Bi_reservation
      methods:
        get_bi_reservation:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1biReservation/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_bi_reservation:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1biReservation/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/bi_reservation/methods/get_bi_reservation
        insert: []
        update:
          - $ref: >-
              #/components/x-stackQL-resources/bi_reservation/methods/update_bi_reservation
        replace: []
        delete: []
    reservations:
      id: google.bigqueryreservation.reservations
      name: reservations
      title: Reservations
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reservations/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reservations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.reservations
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reservations~1{reservationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reservations~1{reservationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reservations~1{reservationsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        failover_reservation:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reservations~1{reservationsId}:failoverReservation/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/reservations/methods/get'
          - $ref: '#/components/x-stackQL-resources/reservations/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/reservations/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/reservations/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/reservations/methods/delete'
    assignments:
      id: google.bigqueryreservation.assignments
      name: assignments
      title: Assignments
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reservations~1{reservationsId}~1assignments/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reservations~1{reservationsId}~1assignments/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.assignments
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reservations~1{reservationsId}~1assignments~1{assignmentsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reservations~1{reservationsId}~1assignments~1{assignmentsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        move:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reservations~1{reservationsId}~1assignments~1{assignmentsId}:move/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/assignments/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/assignments/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/assignments/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/assignments/methods/delete'
    capacity_commitments:
      id: google.bigqueryreservation.capacity_commitments
      name: capacity_commitments
      title: Capacity_commitments
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1capacityCommitments/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1capacityCommitments/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.capacityCommitments
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1capacityCommitments~1{capacityCommitmentsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1capacityCommitments~1{capacityCommitmentsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1capacityCommitments~1{capacityCommitmentsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        split:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1capacityCommitments~1{capacityCommitmentsId}:split/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        merge:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1capacityCommitments:merge/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/capacity_commitments/methods/get'
          - $ref: '#/components/x-stackQL-resources/capacity_commitments/methods/list'
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/capacity_commitments/methods/create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/capacity_commitments/methods/patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/capacity_commitments/methods/delete
paths:
  /v1/projects/{projectsId}/locations/{locationsId}:searchAssignments:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: >-
        Deprecated: Looks up assignments for a specified resource for a
        particular region. If the request is about a project: 1. Assignments
        created on the project will be returned if they exist. 2. Otherwise
        assignments created on the closest ancestor will be returned. 3.
        Assignments for different JobTypes will all be returned. The same logic
        applies if the request is about a folder. If the request is about an
        organization, then assignments created on the organization will be
        returned (organization doesn't have ancestors). Comparing to
        ListAssignments, there are some behavior differences: 1. permission on
        the assignee will be verified in this API. 2. Hierarchy lookup
        (project->folder->organization) happens in this API. 3. Parent here is
        `projects/*/locations/*`, instead of
        `projects/*/locations/*reservations/*`. **Note** "-" cannot be used for
        projects nor locations.
      operationId: bigqueryreservation.projects.locations.searchAssignments
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchAssignmentsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: query
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:searchAllAssignments:
    parameters: *ref_1
    get:
      description: >-
        Looks up assignments for a specified resource for a particular region.
        If the request is about a project: 1. Assignments created on the project
        will be returned if they exist. 2. Otherwise assignments created on the
        closest ancestor will be returned. 3. Assignments for different JobTypes
        will all be returned. The same logic applies if the request is about a
        folder. If the request is about an organization, then assignments
        created on the organization will be returned (organization doesn't have
        ancestors). Comparing to ListAssignments, there are some behavior
        differences: 1. permission on the assignee will be verified in this API.
        2. Hierarchy lookup (project->folder->organization) happens in this API.
        3. Parent here is `projects/*/locations/*`, instead of
        `projects/*/locations/*reservations/*`.
      operationId: bigqueryreservation.projects.locations.searchAllAssignments
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchAllAssignmentsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: query
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/biReservation:
    parameters: *ref_1
    get:
      description: Retrieves a BI reservation.
      operationId: bigqueryreservation.projects.locations.getBiReservation
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BiReservation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates a BI reservation. Only fields specified in the `field_mask` are
        updated. A singleton BI reservation always exists with default size 0.
        In order to reserve BI capacity it needs to be updated to an amount
        greater than 0. In order to release BI capacity reservation size must be
        set to 0.
      operationId: bigqueryreservation.projects.locations.updateBiReservation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BiReservation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BiReservation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/locations/{locationsId}/reservations:
    parameters: *ref_1
    post:
      description: Creates a new reservation resource.
      operationId: bigqueryreservation.projects.locations.reservations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reservation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: reservationId
          schema:
            type: string
    get:
      description: Lists all the reservations for the project in the specified location.
      operationId: bigqueryreservation.projects.locations.reservations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReservationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/reservations/{reservationsId}:
    parameters: *ref_1
    get:
      description: Returns information about the reservation.
      operationId: bigqueryreservation.projects.locations.reservations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reservationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a reservation. Returns `google.rpc.Code.FAILED_PRECONDITION`
        when reservation has assignments.
      operationId: bigqueryreservation.projects.locations.reservations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reservationsId
          required: true
          schema:
            type: string
    patch:
      description: Updates an existing reservation resource.
      operationId: bigqueryreservation.projects.locations.reservations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reservation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reservationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/locations/{locationsId}/reservations/{reservationsId}:failoverReservation:
    parameters: *ref_1
    post:
      description: >-
        Failover a reservation to the secondary location. The operation should
        be done in the current secondary location, which will be promoted to the
        new primary location for the reservation. Attempting to failover a
        reservation in the current primary location will fail with the error
        code `google.rpc.Code.FAILED_PRECONDITION`.
      operationId: bigqueryreservation.projects.locations.reservations.failoverReservation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FailoverReservationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reservationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/reservations/{reservationsId}/assignments:
    parameters: *ref_1
    post:
      description: >-
        Creates an assignment object which allows the given project to submit
        jobs of a certain type using slots from the specified reservation.
        Currently a resource (project, folder, organization) can only have one
        assignment per each (job_type, location) combination, and that
        reservation will be used for all jobs of the matching type. Different
        assignments can be created on different levels of the projects, folders
        or organization hierarchy. During query execution, the assignment is
        looked up at the project, folder and organization levels in that order.
        The first assignment found is applied to the query. When creating
        assignments, it does not matter if other assignments exist at higher
        levels. Example: * The organization `organizationA` contains two
        projects, `project1` and `project2`. * Assignments for all three
        entities (`organizationA`, `project1`, and `project2`) could all be
        created and mapped to the same or different reservations. "None"
        assignments represent an absence of the assignment. Projects assigned to
        None use on-demand pricing. To create a "None" assignment, use "none" as
        a reservation_id in the parent. Example parent:
        `projects/myproject/locations/US/reservations/none`. Returns
        `google.rpc.Code.PERMISSION_DENIED` if user does not have
        'bigquery.admin' permissions on the project using the reservation and
        the project that owns this reservation. Returns
        `google.rpc.Code.INVALID_ARGUMENT` when location of the assignment does
        not match location of the reservation.
      operationId: bigqueryreservation.projects.locations.reservations.assignments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Assignment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assignment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reservationsId
          required: true
          schema:
            type: string
        - in: query
          name: assignmentId
          schema:
            type: string
    get:
      description: >-
        Lists assignments. Only explicitly created assignments will be returned.
        Example: * Organization `organizationA` contains two projects,
        `project1` and `project2`. * Reservation `res1` exists and was created
        previously. * CreateAssignment was used previously to define the
        following associations between entities and reservations: `` and `` In
        this example, ListAssignments will just return the above two assignments
        for reservation `res1`, and no expansion/merge will happen. The wildcard
        "-" can be used for reservations in the request. In that case all
        assignments belongs to the specified project and location will be
        listed. **Note** "-" cannot be used for projects nor locations.
      operationId: bigqueryreservation.projects.locations.reservations.assignments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssignmentsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reservationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/reservations/{reservationsId}/assignments/{assignmentsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a assignment. No expansion will happen. Example: * Organization
        `organizationA` contains two projects, `project1` and `project2`. *
        Reservation `res1` exists and was created previously. * CreateAssignment
        was used previously to define the following associations between
        entities and reservations: `` and `` In this example, deletion of the ``
        assignment won't affect the other assignment ``. After said deletion,
        queries from `project1` will still use `res1` while queries from
        `project2` will switch to use on-demand mode.
      operationId: bigqueryreservation.projects.locations.reservations.assignments.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reservationsId
          required: true
          schema:
            type: string
        - in: path
          name: assignmentsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates an existing assignment. Only the `priority` field can be
        updated.
      operationId: bigqueryreservation.projects.locations.reservations.assignments.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Assignment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assignment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reservationsId
          required: true
          schema:
            type: string
        - in: path
          name: assignmentsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/locations/{locationsId}/reservations/{reservationsId}/assignments/{assignmentsId}:move:
    parameters: *ref_1
    post:
      description: >-
        Moves an assignment under a new reservation. This differs from removing
        an existing assignment and recreating a new one by providing a
        transactional change that ensures an assignee always has an associated
        reservation.
      operationId: bigqueryreservation.projects.locations.reservations.assignments.move
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveAssignmentRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assignment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reservationsId
          required: true
          schema:
            type: string
        - in: path
          name: assignmentsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/capacityCommitments:
    parameters: *ref_1
    post:
      description: Creates a new capacity commitment resource.
      operationId: bigqueryreservation.projects.locations.capacityCommitments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CapacityCommitment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityCommitment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: enforceSingleAdminProjectPerOrg
          schema:
            type: boolean
        - in: query
          name: capacityCommitmentId
          schema:
            type: string
    get:
      description: Lists all the capacity commitments for the admin project.
      operationId: bigqueryreservation.projects.locations.capacityCommitments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCapacityCommitmentsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/capacityCommitments/{capacityCommitmentsId}:
    parameters: *ref_1
    get:
      description: Returns information about the capacity commitment.
      operationId: bigqueryreservation.projects.locations.capacityCommitments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityCommitment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: capacityCommitmentsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a capacity commitment. Attempting to delete capacity commitment
        before its commitment_end_time will fail with the error code
        `google.rpc.Code.FAILED_PRECONDITION`.
      operationId: bigqueryreservation.projects.locations.capacityCommitments.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: capacityCommitmentsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
    patch:
      description: >-
        Updates an existing capacity commitment. Only `plan` and `renewal_plan`
        fields can be updated. Plan can only be changed to a plan of a longer
        commitment period. Attempting to change to a plan with shorter
        commitment period will fail with the error code
        `google.rpc.Code.FAILED_PRECONDITION`.
      operationId: bigqueryreservation.projects.locations.capacityCommitments.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CapacityCommitment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityCommitment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: capacityCommitmentsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/locations/{locationsId}/capacityCommitments/{capacityCommitmentsId}:split:
    parameters: *ref_1
    post:
      description: >-
        Splits capacity commitment to two commitments of the same plan and
        `commitment_end_time`. A common use case is to enable downgrading
        commitments. For example, in order to downgrade from 10000 slots to
        8000, you might split a 10000 capacity commitment into commitments of
        2000 and 8000. Then, you delete the first one after the commitment end
        time passes.
      operationId: bigqueryreservation.projects.locations.capacityCommitments.split
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SplitCapacityCommitmentRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SplitCapacityCommitmentResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: capacityCommitmentsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/capacityCommitments:merge:
    parameters: *ref_1
    post:
      description: >-
        Merges capacity commitments of the same plan into a single commitment.
        The resulting capacity commitment has the greater commitment_end_time
        out of the to-be-merged capacity commitments. Attempting to merge
        capacity commitments of different plan will fail with the error code
        `google.rpc.Code.FAILED_PRECONDITION`.
      operationId: bigqueryreservation.projects.locations.capacityCommitments.merge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MergeCapacityCommitmentsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityCommitment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
