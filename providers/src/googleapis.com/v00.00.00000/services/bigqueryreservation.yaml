openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: BigQuery Reservation API
  description: A service to modify your BigQuery flat-rate reservations.
  version: v1
  x-discovery-doc-revision: '20221218'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://cloud.google.com/bigquery/
servers:
  - url: https://bigqueryreservation.googleapis.com
components:
  schemas:
    ListCapacityCommitmentsResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
        capacityCommitments:
          description: List of capacity commitments visible to the user.
          type: array
          items:
            $ref: '#/components/schemas/CapacityCommitment'
      description: The response for ReservationService.ListCapacityCommitments.
      id: ListCapacityCommitmentsResponse
    MoveAssignmentRequest:
      id: MoveAssignmentRequest
      description: 'The request for ReservationService.MoveAssignment. **Note**: "bigquery.reservationAssignments.create" permission is required on the destination_id. **Note**: "bigquery.reservationAssignments.create" and "bigquery.reservationAssignments.delete" permission are required on the related assignee.'
      properties:
        destinationId:
          description: 'The new reservation ID, e.g.: `projects/myotherproject/locations/US/reservations/team2-prod`'
          type: string
      type: object
    SplitCapacityCommitmentRequest:
      description: The request for ReservationService.SplitCapacityCommitment.
      type: object
      id: SplitCapacityCommitmentRequest
      properties:
        slotCount:
          description: Number of slots in the capacity commitment after the split.
          format: int64
          type: string
    MergeCapacityCommitmentsRequest:
      id: MergeCapacityCommitmentsRequest
      description: The request for ReservationService.MergeCapacityCommitments.
      properties:
        capacityCommitmentIds:
          type: array
          description: Ids of capacity commitments to merge. These capacity commitments must exist under admin project and location specified in the parent. ID is the last portion of capacity commitment name e.g., 'abc' for projects/myproject/locations/US/capacityCommitments/abc
          items:
            type: string
      type: object
    SearchAllAssignmentsResponse:
      type: object
      description: The response for ReservationService.SearchAllAssignments.
      properties:
        assignments:
          description: List of assignments visible to the user.
          items:
            $ref: '#/components/schemas/Assignment'
          type: array
        nextPageToken:
          type: string
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
      id: SearchAllAssignmentsResponse
    Reservation:
      id: Reservation
      properties:
        creationTime:
          type: string
          description: Output only. Creation time of the reservation.
          format: google-datetime
          readOnly: true
        slotCapacity:
          description: 'Minimum slots available to this reservation. A slot is a unit of computational power in BigQuery, and serves as the unit of parallelism. Queries using this reservation might use more slots during runtime if ignore_idle_slots is set to false. If total slot_capacity of the reservation and its siblings exceeds the total slot_count of all capacity commitments, the request will fail with `google.rpc.Code.RESOURCE_EXHAUSTED`. NOTE: for reservations in US or EU multi-regions, slot capacity constraints are checked separately for default and auxiliary regions. See multi_region_auxiliary flag for more details.'
          type: string
          format: int64
        multiRegionAuxiliary:
          description: Applicable only for reservations located within one of the BigQuery multi-regions (US or EU). If set to true, this reservation is placed in the organization's secondary region which is designated for disaster recovery purposes. If false, this reservation is placed in the organization's default region.
          type: boolean
        concurrency:
          format: int64
          description: 'Job concurrency target which sets a soft upper bound on the number of jobs that can run concurrently in this reservation. This is a soft target due to asynchronous nature of the system and various optimizations for small queries. Default value is 0 which means that concurrency target will be automatically computed by the system. NOTE: this field is exposed as `target_job_concurrency` in the Information Schema, DDL and BQ CLI.'
          type: string
        ignoreIdleSlots:
          type: boolean
          description: If false, any query or pipeline job using this reservation will use idle slots from other reservations within the same admin project. If true, a query or pipeline job using this reservation will execute with the slot capacity specified in the slot_capacity field at most.
        name:
          type: string
          description: The resource name of the reservation, e.g., `projects/*/locations/*/reservations/team1-prod`. The reservation_id must only contain lower case alphanumeric characters or dashes. It must start with a letter and must not end with a dash. Its maximum length is 64 characters.
        updateTime:
          format: google-datetime
          description: Output only. Last update time of the reservation.
          type: string
          readOnly: true
      type: object
      description: A reservation is a mechanism used to guarantee slots to users.
    Empty:
      type: object
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      properties: {}
      id: Empty
    CapacityCommitment:
      id: CapacityCommitment
      description: Capacity commitment is a way to purchase compute capacity for BigQuery jobs (in the form of slots) with some committed period of usage. Annual commitments renew by default. Commitments can be removed after their commitment end time passes. In order to remove annual commitment, its plan needs to be changed to monthly or flex first. A capacity commitment resource exists as a child resource of the admin project.
      type: object
      properties:
        failureStatus:
          description: Output only. For FAILED commitment plan, provides the reason of failure.
          $ref: '#/components/schemas/Status'
          readOnly: true
        renewalPlan:
          enum:
            - COMMITMENT_PLAN_UNSPECIFIED
            - FLEX
            - TRIAL
            - MONTHLY
            - ANNUAL
          type: string
          enumDescriptions:
            - Invalid plan value. Requests with this value will be rejected with error code `google.rpc.Code.INVALID_ARGUMENT`.
            - Flex commitments have committed period of 1 minute after becoming ACTIVE. After that, they are not in a committed period anymore and can be removed any time.
            - Trial commitments have a committed period of 182 days after becoming ACTIVE. After that, they are converted to a new commitment based on the `renewal_plan`. Default `renewal_plan` for Trial commitment is Flex so that it can be deleted right after committed period ends.
            - Monthly commitments have a committed period of 30 days after becoming ACTIVE. After that, they are not in a committed period anymore and can be removed any time.
            - Annual commitments have a committed period of 365 days after becoming ACTIVE. After that they are converted to a new commitment based on the renewal_plan.
          description: The plan this capacity commitment is converted to after commitment_end_time passes. Once the plan is changed, committed period is extended according to commitment plan. Only applicable for ANNUAL and TRIAL commitments.
        plan:
          enum:
            - COMMITMENT_PLAN_UNSPECIFIED
            - FLEX
            - TRIAL
            - MONTHLY
            - ANNUAL
          enumDescriptions:
            - Invalid plan value. Requests with this value will be rejected with error code `google.rpc.Code.INVALID_ARGUMENT`.
            - Flex commitments have committed period of 1 minute after becoming ACTIVE. After that, they are not in a committed period anymore and can be removed any time.
            - Trial commitments have a committed period of 182 days after becoming ACTIVE. After that, they are converted to a new commitment based on the `renewal_plan`. Default `renewal_plan` for Trial commitment is Flex so that it can be deleted right after committed period ends.
            - Monthly commitments have a committed period of 30 days after becoming ACTIVE. After that, they are not in a committed period anymore and can be removed any time.
            - Annual commitments have a committed period of 365 days after becoming ACTIVE. After that they are converted to a new commitment based on the renewal_plan.
          type: string
          description: Capacity commitment commitment plan.
        state:
          readOnly: true
          type: string
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - ACTIVE
            - FAILED
          enumDescriptions:
            - Invalid state value.
            - Capacity commitment is pending provisioning. Pending capacity commitment does not contribute to the project's slot_capacity.
            - Once slots are provisioned, capacity commitment becomes active. slot_count is added to the project's slot_capacity.
            - Capacity commitment is failed to be activated by the backend.
          description: Output only. State of the commitment.
        multiRegionAuxiliary:
          type: boolean
          description: Applicable only for commitments located within one of the BigQuery multi-regions (US or EU). If set to true, this commitment is placed in the organization's secondary region which is designated for disaster recovery purposes. If false, this commitment is placed in the organization's default region.
        slotCount:
          description: Number of slots in this commitment.
          type: string
          format: int64
        name:
          description: Output only. The resource name of the capacity commitment, e.g., `projects/myproject/locations/US/capacityCommitments/123` The commitment_id must only contain lower case alphanumeric characters or dashes. It must start with a letter and must not end with a dash. Its maximum length is 64 characters.
          type: string
          readOnly: true
        commitmentStartTime:
          description: Output only. The start of the current commitment period. It is applicable only for ACTIVE capacity commitments.
          format: google-datetime
          type: string
          readOnly: true
        commitmentEndTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The end of the current commitment period. It is applicable only for ACTIVE capacity commitments.
    ListAssignmentsResponse:
      id: ListAssignmentsResponse
      description: The response for ReservationService.ListAssignments.
      properties:
        assignments:
          items:
            $ref: '#/components/schemas/Assignment'
          description: List of assignments visible to the user.
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
      type: object
    SplitCapacityCommitmentResponse:
      type: object
      description: The response for ReservationService.SplitCapacityCommitment.
      properties:
        second:
          description: Second capacity commitment, result of a split.
          $ref: '#/components/schemas/CapacityCommitment'
        first:
          description: First capacity commitment, result of a split.
          $ref: '#/components/schemas/CapacityCommitment'
      id: SplitCapacityCommitmentResponse
    TableReference:
      id: TableReference
      description: Fully qualified reference to BigQuery table. Internally stored as google.cloud.bi.v1.BqTableReference.
      properties:
        datasetId:
          type: string
          description: The ID of the dataset in the above project.
        tableId:
          description: The ID of the table in the above dataset.
          type: string
        projectId:
          type: string
          description: The assigned project ID of the project.
      type: object
    SearchAssignmentsResponse:
      type: object
      properties:
        assignments:
          description: List of assignments visible to the user.
          type: array
          items:
            $ref: '#/components/schemas/Assignment'
        nextPageToken:
          type: string
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
      id: SearchAssignmentsResponse
      description: The response for ReservationService.SearchAssignments.
    Status:
      id: Status
      properties:
        details:
          type: array
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      type: object
    BiReservation:
      properties:
        updateTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The last update timestamp of a reservation.
        preferredTables:
          items:
            $ref: '#/components/schemas/TableReference'
          type: array
          description: Preferred tables to use BI capacity for.
        name:
          type: string
          description: The resource name of the singleton BI reservation. Reservation names have the form `projects/{project_id}/locations/{location_id}/biReservation`.
        size:
          format: int64
          description: Size of a reservation, in bytes.
          type: string
      type: object
      description: Represents a BI Reservation.
      id: BiReservation
    Assignment:
      id: Assignment
      type: object
      properties:
        assignee:
          description: The resource which will use the reservation. E.g. `projects/myproject`, `folders/123`, or `organizations/456`.
          type: string
        jobType:
          type: string
          enumDescriptions:
            - Invalid type. Requests with this value will be rejected with error code `google.rpc.Code.INVALID_ARGUMENT`.
            - Pipeline (load/export) jobs from the project will use the reservation.
            - Query jobs from the project will use the reservation.
            - BigQuery ML jobs that use services external to BigQuery for model training. These jobs will not utilize idle slots from other reservations.
            - Background jobs that BigQuery runs for the customers in the background.
          enum:
            - JOB_TYPE_UNSPECIFIED
            - PIPELINE
            - QUERY
            - ML_EXTERNAL
            - BACKGROUND
          description: Which type of jobs will use the reservation.
        state:
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - ACTIVE
          enumDescriptions:
            - Invalid state value.
            - Queries from assignee will be executed as on-demand, if related assignment is pending.
            - Assignment is ready.
          description: Output only. State of the assignment.
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
          description: 'Output only. Name of the resource. E.g.: `projects/myproject/locations/US/reservations/team1-prod/assignments/123`. The assignment_id must only contain lower case alphanumeric characters or dashes and the max length is 64 characters.'
      description: An assignment allows a project to submit jobs of a certain type using slots from the specified reservation.
    ListReservationsResponse:
      id: ListReservationsResponse
      properties:
        nextPageToken:
          type: string
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
        reservations:
          description: List of reservations visible to the user.
          type: array
          items:
            $ref: '#/components/schemas/Reservation'
      type: object
      description: The response for ReservationService.ListReservations.
  parameters:
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
            https://www.googleapis.com/auth/bigquery: View and manage your data in Google BigQuery and see the email address for your Google Account
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    locations__bi_reservation:
      id: google.bigqueryreservation.locations__bi_reservation
      name: locations__bi_reservation
      title: Locations__bi_reservation
      methods:
        projects_locations_getBiReservation:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1biReservation/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations__bi_reservation/methods/projects_locations_getBiReservation'
        insert: []
        update: []
        delete: []
    locations:
      id: google.bigqueryreservation.locations
      name: locations
      title: Locations
      methods:
        projects_locations_updateBiReservation:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1biReservation/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_searchAssignments:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}:searchAssignments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_searchAllAssignments:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}:searchAllAssignments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    assignments:
      id: google.bigqueryreservation.assignments
      name: assignments
      title: Assignments
      methods:
        projects_locations_reservations_assignments_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reservations~1{reservationsId}~1assignments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: assignments
        projects_locations_reservations_assignments_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reservations~1{reservationsId}~1assignments/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_reservations_assignments_move:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reservations~1{reservationsId}~1assignments~1{assignmentsId}:move/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_reservations_assignments_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reservations~1{reservationsId}~1assignments~1{assignmentsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_reservations_assignments_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reservations~1{reservationsId}~1assignments~1{assignmentsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/assignments/methods/projects_locations_reservations_assignments_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/assignments/methods/projects_locations_reservations_assignments_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/assignments/methods/projects_locations_reservations_assignments_delete'
    reservations:
      id: google.bigqueryreservation.reservations
      name: reservations
      title: Reservations
      methods:
        projects_locations_reservations_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reservations~1{reservationsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_reservations_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reservations~1{reservationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_reservations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reservations~1{reservationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_reservations_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reservations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_reservations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reservations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: reservations
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/reservations/methods/projects_locations_reservations_get'
          - $ref: '#/components/x-stackQL-resources/reservations/methods/projects_locations_reservations_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/reservations/methods/projects_locations_reservations_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/reservations/methods/projects_locations_reservations_delete'
    capacity_commitments:
      id: google.bigqueryreservation.capacity_commitments
      name: capacity_commitments
      title: Capacity_commitments
      methods:
        projects_locations_capacityCommitments_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1capacityCommitments~1{capacityCommitmentsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_capacityCommitments_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1capacityCommitments~1{capacityCommitmentsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_capacityCommitments_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1capacityCommitments~1{capacityCommitmentsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_capacityCommitments_split:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1capacityCommitments~1{capacityCommitmentsId}:split/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_capacityCommitments_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1capacityCommitments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: capacityCommitments
        projects_locations_capacityCommitments_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1capacityCommitments/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_capacityCommitments_merge:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1capacityCommitments:merge/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/capacity_commitments/methods/projects_locations_capacityCommitments_get'
          - $ref: '#/components/x-stackQL-resources/capacity_commitments/methods/projects_locations_capacityCommitments_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/capacity_commitments/methods/projects_locations_capacityCommitments_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/capacity_commitments/methods/projects_locations_capacityCommitments_delete'
paths:
  /v1/projects/{projectsId}/locations/{locationsId}/biReservation:
    parameters: &ref_1
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/upload_protocol'
    get:
      description: Retrieves a BI reservation.
      operationId: bigqueryreservation.projects.locations.getBiReservation
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BiReservation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations__bi_reservation
      x-stackQL-verb: select
    patch:
      description: Updates a BI reservation. Only fields specified in the `field_mask` are updated. A singleton BI reservation always exists with default size 0. In order to reserve BI capacity it needs to be updated to an amount greater than 0. In order to release BI capacity reservation size must be set to 0.
      operationId: bigqueryreservation.projects.locations.updateBiReservation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BiReservation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BiReservation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}:searchAssignments:
    parameters: *ref_1
    get:
      description: 'Deprecated: Looks up assignments for a specified resource for a particular region. If the request is about a project: 1. Assignments created on the project will be returned if they exist. 2. Otherwise assignments created on the closest ancestor will be returned. 3. Assignments for different JobTypes will all be returned. The same logic applies if the request is about a folder. If the request is about an organization, then assignments created on the organization will be returned (organization doesn''t have ancestors). Comparing to ListAssignments, there are some behavior differences: 1. permission on the assignee will be verified in this API. 2. Hierarchy lookup (project->folder->organization) happens in this API. 3. Parent here is `projects/*/locations/*`, instead of `projects/*/locations/*reservations/*`. **Note** "-" cannot be used for projects nor locations.'
      operationId: bigqueryreservation.projects.locations.searchAssignments
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchAssignmentsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: query
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}:searchAllAssignments:
    parameters: *ref_1
    get:
      description: 'Looks up assignments for a specified resource for a particular region. If the request is about a project: 1. Assignments created on the project will be returned if they exist. 2. Otherwise assignments created on the closest ancestor will be returned. 3. Assignments for different JobTypes will all be returned. The same logic applies if the request is about a folder. If the request is about an organization, then assignments created on the organization will be returned (organization doesn''t have ancestors). Comparing to ListAssignments, there are some behavior differences: 1. permission on the assignee will be verified in this API. 2. Hierarchy lookup (project->folder->organization) happens in this API. 3. Parent here is `projects/*/locations/*`, instead of `projects/*/locations/*reservations/*`.'
      operationId: bigqueryreservation.projects.locations.searchAllAssignments
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchAllAssignmentsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: query
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/reservations/{reservationsId}/assignments:
    parameters: *ref_1
    get:
      description: 'Lists assignments. Only explicitly created assignments will be returned. Example: * Organization `organizationA` contains two projects, `project1` and `project2`. * Reservation `res1` exists and was created previously. * CreateAssignment was used previously to define the following associations between entities and reservations: `` and `` In this example, ListAssignments will just return the above two assignments for reservation `res1`, and no expansion/merge will happen. The wildcard "-" can be used for reservations in the request. In that case all assignments belongs to the specified project and location will be listed. **Note** "-" cannot be used for projects nor locations.'
      operationId: bigqueryreservation.projects.locations.reservations.assignments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssignmentsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reservationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: assignments
      x-stackQL-verb: select
    post:
      description: 'Creates an assignment object which allows the given project to submit jobs of a certain type using slots from the specified reservation. Currently a resource (project, folder, organization) can only have one assignment per each (job_type, location) combination, and that reservation will be used for all jobs of the matching type. Different assignments can be created on different levels of the projects, folders or organization hierarchy. During query execution, the assignment is looked up at the project, folder and organization levels in that order. The first assignment found is applied to the query. When creating assignments, it does not matter if other assignments exist at higher levels. Example: * The organization `organizationA` contains two projects, `project1` and `project2`. * Assignments for all three entities (`organizationA`, `project1`, and `project2`) could all be created and mapped to the same or different reservations. "None" assignments represent an absence of the assignment. Projects assigned to None use on-demand pricing. To create a "None" assignment, use "none" as a reservation_id in the parent. Example parent: `projects/myproject/locations/US/reservations/none`. Returns `google.rpc.Code.PERMISSION_DENIED` if user does not have ''bigquery.admin'' permissions on the project using the reservation and the project that owns this reservation. Returns `google.rpc.Code.INVALID_ARGUMENT` when location of the assignment does not match location of the reservation.'
      operationId: bigqueryreservation.projects.locations.reservations.assignments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Assignment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assignment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reservationsId
          required: true
          schema:
            type: string
        - in: query
          name: assignmentId
          schema:
            type: string
      x-stackQL-resource: assignments
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/reservations/{reservationsId}/assignments/{assignmentsId}:move:
    parameters: *ref_1
    post:
      description: Moves an assignment under a new reservation. This differs from removing an existing assignment and recreating a new one by providing a transactional change that ensures an assignee always has an associated reservation.
      operationId: bigqueryreservation.projects.locations.reservations.assignments.move
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveAssignmentRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assignment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reservationsId
          required: true
          schema:
            type: string
        - in: path
          name: assignmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: assignments
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/reservations/{reservationsId}/assignments/{assignmentsId}:
    parameters: *ref_1
    delete:
      description: 'Deletes a assignment. No expansion will happen. Example: * Organization `organizationA` contains two projects, `project1` and `project2`. * Reservation `res1` exists and was created previously. * CreateAssignment was used previously to define the following associations between entities and reservations: `` and `` In this example, deletion of the `` assignment won''t affect the other assignment ``. After said deletion, queries from `project1` will still use `res1` while queries from `project2` will switch to use on-demand mode.'
      operationId: bigqueryreservation.projects.locations.reservations.assignments.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reservationsId
          required: true
          schema:
            type: string
        - in: path
          name: assignmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: assignments
      x-stackQL-verb: delete
    patch:
      description: Updates an existing assignment. Only the `priority` field can be updated.
      operationId: bigqueryreservation.projects.locations.reservations.assignments.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Assignment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assignment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reservationsId
          required: true
          schema:
            type: string
        - in: path
          name: assignmentsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: assignments
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/reservations/{reservationsId}:
    parameters: *ref_1
    patch:
      description: Updates an existing reservation resource.
      operationId: bigqueryreservation.projects.locations.reservations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reservation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reservationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: reservations
      x-stackQL-verb: exec
    delete:
      description: Deletes a reservation. Returns `google.rpc.Code.FAILED_PRECONDITION` when reservation has assignments.
      operationId: bigqueryreservation.projects.locations.reservations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reservationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: reservations
      x-stackQL-verb: delete
    get:
      description: Returns information about the reservation.
      operationId: bigqueryreservation.projects.locations.reservations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reservationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: reservations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/reservations:
    parameters: *ref_1
    post:
      description: Creates a new reservation resource.
      operationId: bigqueryreservation.projects.locations.reservations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reservation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: reservationId
          schema:
            type: string
      x-stackQL-resource: reservations
      x-stackQL-verb: insert
    get:
      description: Lists all the reservations for the project in the specified location.
      operationId: bigqueryreservation.projects.locations.reservations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReservationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: reservations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/capacityCommitments/{capacityCommitmentsId}:
    parameters: *ref_1
    get:
      description: Returns information about the capacity commitment.
      operationId: bigqueryreservation.projects.locations.capacityCommitments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityCommitment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: capacityCommitmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: capacity_commitments
      x-stackQL-verb: select
    delete:
      description: Deletes a capacity commitment. Attempting to delete capacity commitment before its commitment_end_time will fail with the error code `google.rpc.Code.FAILED_PRECONDITION`.
      operationId: bigqueryreservation.projects.locations.capacityCommitments.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: capacityCommitmentsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: capacity_commitments
      x-stackQL-verb: delete
    patch:
      description: Updates an existing capacity commitment. Only `plan` and `renewal_plan` fields can be updated. Plan can only be changed to a plan of a longer commitment period. Attempting to change to a plan with shorter commitment period will fail with the error code `google.rpc.Code.FAILED_PRECONDITION`.
      operationId: bigqueryreservation.projects.locations.capacityCommitments.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CapacityCommitment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityCommitment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: capacityCommitmentsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: capacity_commitments
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/capacityCommitments/{capacityCommitmentsId}:split:
    parameters: *ref_1
    post:
      description: Splits capacity commitment to two commitments of the same plan and `commitment_end_time`. A common use case is to enable downgrading commitments. For example, in order to downgrade from 10000 slots to 8000, you might split a 10000 capacity commitment into commitments of 2000 and 8000. Then, you delete the first one after the commitment end time passes.
      operationId: bigqueryreservation.projects.locations.capacityCommitments.split
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SplitCapacityCommitmentRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SplitCapacityCommitmentResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: capacityCommitmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: capacity_commitments
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/capacityCommitments:
    parameters: *ref_1
    get:
      description: Lists all the capacity commitments for the admin project.
      operationId: bigqueryreservation.projects.locations.capacityCommitments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCapacityCommitmentsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: capacity_commitments
      x-stackQL-verb: select
    post:
      description: Creates a new capacity commitment resource.
      operationId: bigqueryreservation.projects.locations.capacityCommitments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CapacityCommitment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityCommitment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: capacityCommitmentId
          schema:
            type: string
        - in: query
          name: enforceSingleAdminProjectPerOrg
          schema:
            type: boolean
      x-stackQL-resource: capacity_commitments
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/capacityCommitments:merge:
    parameters: *ref_1
    post:
      description: Merges capacity commitments of the same plan into a single commitment. The resulting capacity commitment has the greater commitment_end_time out of the to-be-merged capacity commitments. Attempting to merge capacity commitments of different plan will fail with the error code `google.rpc.Code.FAILED_PRECONDITION`.
      operationId: bigqueryreservation.projects.locations.capacityCommitments.merge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MergeCapacityCommitmentsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigquery
          Oauth2c:
            - https://www.googleapis.com/auth/bigquery
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityCommitment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: capacity_commitments
      x-stackQL-verb: exec
