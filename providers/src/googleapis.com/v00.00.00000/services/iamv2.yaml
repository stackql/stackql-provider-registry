openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Identity and Access Management (IAM) API
  description: >-
    Manages identity and access control for Google Cloud resources, including
    the creation of service accounts, which you can use to authenticate to
    Google and make API calls. Enabling this API also enables the IAM Service
    Account Credentials API (iamcredentials.googleapis.com). However, disabling
    this API doesn't disable the IAM Service Account Credentials API. 
  version: v2
  x-discovery-doc-revision: '20240904'
  x-generated-date: '2024-09-13'
externalDocs:
  url: https://cloud.google.com/iam/
servers:
  - url: https://iam.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    GoogleLongrunningOperation:
      id: GoogleLongrunningOperation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/GoogleRpcStatus'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    GoogleRpcStatus:
      id: GoogleRpcStatus
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    GoogleIamV2ListPoliciesResponse:
      id: GoogleIamV2ListPoliciesResponse
      description: Response message for `ListPolicies`.
      type: object
      properties:
        policies:
          description: Metadata for the policies that are attached to the resource.
          type: array
          items:
            $ref: '#/components/schemas/GoogleIamV2Policy'
        nextPageToken:
          description: >-
            A page token that you can use in a ListPoliciesRequest to retrieve
            the next page. If this field is omitted, there are no additional
            pages.
          type: string
    GoogleIamV2Policy:
      id: GoogleIamV2Policy
      description: Data for an IAM policy.
      type: object
      properties:
        name:
          description: >-
            Immutable. The resource name of the `Policy`, which must be unique.
            Format: `policies/{attachment_point}/denypolicies/{policy_id}` The
            attachment point is identified by its URL-encoded full resource
            name, which means that the forward-slash character, `/`, must be
            written as `%2F`. For example,
            `policies/cloudresourcemanager.googleapis.com%2Fprojects%2Fmy-project/denypolicies/my-deny-policy`.
            For organizations and folders, use the numeric ID in the full
            resource name. For projects, requests can use the alphanumeric or
            the numeric ID. Responses always contain the numeric ID.
          type: string
        uid:
          description: >-
            Immutable. The globally unique ID of the `Policy`. Assigned
            automatically when the `Policy` is created.
          type: string
        kind:
          description: >-
            Output only. The kind of the `Policy`. Always contains the value
            `DenyPolicy`.
          readOnly: true
          type: string
        displayName:
          description: >-
            A user-specified description of the `Policy`. This value can be up
            to 63 characters.
          type: string
        annotations:
          description: >-
            A key-value map to store arbitrary metadata for the `Policy`. Keys
            can be up to 63 characters. Values can be up to 255 characters.
          type: object
          additionalProperties:
            type: string
        etag:
          description: >-
            An opaque tag that identifies the current version of the `Policy`.
            IAM uses this value to help manage concurrent updates, so they do
            not cause one update to be overwritten by another. If this field is
            present in a CreatePolicyRequest, the value is ignored.
          type: string
        createTime:
          description: Output only. The time when the `Policy` was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time when the `Policy` was last updated.
          readOnly: true
          type: string
          format: google-datetime
        deleteTime:
          description: >-
            Output only. The time when the `Policy` was deleted. Empty if the
            policy is not deleted.
          readOnly: true
          type: string
          format: google-datetime
        rules:
          description: >-
            A list of rules that specify the behavior of the `Policy`. All of
            the rules should be of the `kind` specified in the `Policy`.
          type: array
          items:
            $ref: '#/components/schemas/GoogleIamV2PolicyRule'
    GoogleIamV2PolicyRule:
      id: GoogleIamV2PolicyRule
      description: A single rule in a `Policy`.
      type: object
      properties:
        denyRule:
          description: A rule for a deny policy.
          $ref: '#/components/schemas/GoogleIamV2DenyRule'
        description:
          description: >-
            A user-specified description of the rule. This value can be up to
            256 characters.
          type: string
    GoogleIamV2DenyRule:
      id: GoogleIamV2DenyRule
      description: A deny rule in an IAM deny policy.
      type: object
      properties:
        deniedPrincipals:
          description: >-
            The identities that are prevented from using one or more permissions
            on Google Cloud resources. This field can contain the following
            values: * `principal://goog/subject/{email_id}`: A specific Google
            Account. Includes Gmail, Cloud Identity, and Google Workspace user
            accounts. For example, `principal://goog/subject/alice@example.com`.
            *
            `principal://iam.googleapis.com/projects/-/serviceAccounts/{service_account_id}`:
            A Google Cloud service account. For example,
            `principal://iam.googleapis.com/projects/-/serviceAccounts/my-service-account@iam.gserviceaccount.com`.
            * `principalSet://goog/group/{group_id}`: A Google group. For
            example, `principalSet://goog/group/admins@example.com`. *
            `principalSet://goog/public:all`: A special identifier that
            represents any principal that is on the internet, even if they do
            not have a Google Account or are not logged in. *
            `principalSet://goog/cloudIdentityCustomerId/{customer_id}`: All of
            the principals associated with the specified Google Workspace or
            Cloud Identity customer ID. For example,
            `principalSet://goog/cloudIdentityCustomerId/C01Abc35`. *
            `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workforce identity pool. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`:
            All workforce identities in a group. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All workforce identities with a specific attribute value. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`:
            All identities in a workforce identity pool. *
            `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workload identity pool. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`:
            A workload identity pool group. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All identities in a workload identity pool with a certain attribute.
            *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`:
            All identities in a workload identity pool. *
            `deleted:principal://goog/subject/{email_id}?uid={uid}`: A specific
            Google Account that was deleted recently. For example,
            `deleted:principal://goog/subject/alice@example.com?uid=1234567890`.
            If the Google Account is recovered, this identifier reverts to the
            standard identifier for a Google Account. *
            `deleted:principalSet://goog/group/{group_id}?uid={uid}`: A Google
            group that was deleted recently. For example,
            `deleted:principalSet://goog/group/admins@example.com?uid=1234567890`.
            If the Google group is restored, this identifier reverts to the
            standard identifier for a Google group. *
            `deleted:principal://iam.googleapis.com/projects/-/serviceAccounts/{service_account_id}?uid={uid}`:
            A Google Cloud service account that was deleted recently. For
            example,
            `deleted:principal://iam.googleapis.com/projects/-/serviceAccounts/my-service-account@iam.gserviceaccount.com?uid=1234567890`.
            If the service account is undeleted, this identifier reverts to the
            standard identifier for a service account. *
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            Deleted single identity in a workforce identity pool. For example,
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
          type: array
          items:
            type: string
        exceptionPrincipals:
          description: >-
            The identities that are excluded from the deny rule, even if they
            are listed in the `denied_principals`. For example, you could add a
            Google group to the `denied_principals`, then exclude specific users
            who belong to that group. This field can contain the same values as
            the `denied_principals` field, excluding
            `principalSet://goog/public:all`, which represents all users on the
            internet.
          type: array
          items:
            type: string
        deniedPermissions:
          description: >-
            The permissions that are explicitly denied by this rule. Each
            permission uses the format `{service_fqdn}/{resource}.{verb}`, where
            `{service_fqdn}` is the fully qualified domain name for the service.
            For example, `iam.googleapis.com/roles.list`.
          type: array
          items:
            type: string
        exceptionPermissions:
          description: >-
            Specifies the permissions that this rule excludes from the set of
            denied permissions given by `denied_permissions`. If a permission
            appears in `denied_permissions` _and_ in `exception_permissions`
            then it will _not_ be denied. The excluded permissions can be
            specified using the same syntax as `denied_permissions`.
          type: array
          items:
            type: string
        denialCondition:
          description: >-
            The condition that determines whether this deny rule applies to a
            request. If the condition expression evaluates to `true`, then the
            deny rule is applied; otherwise, the deny rule is not applied. Each
            deny rule is evaluated independently. If this deny rule does not
            apply to a request, other deny rules might still apply. The
            condition can use CEL functions that evaluate [resource
            tags](https://cloud.google.com/iam/help/conditions/resource-tags).
            Other functions and operators are not supported.
          $ref: '#/components/schemas/GoogleTypeExpr'
    GoogleTypeExpr:
      id: GoogleTypeExpr
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      type: object
      properties:
        expression:
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
          type: string
        title:
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
        description:
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
          type: string
        location:
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
          type: string
    GoogleIamAdminV1AuditData:
      id: GoogleIamAdminV1AuditData
      description: >-
        Audit log information specific to Cloud IAM admin APIs. This message is
        serialized as an `Any` type in the `ServiceData` message of an
        `AuditLog` message.
      type: object
      properties:
        permissionDelta:
          description: The permission_delta when when creating or updating a Role.
          $ref: '#/components/schemas/GoogleIamAdminV1AuditDataPermissionDelta'
    GoogleIamAdminV1AuditDataPermissionDelta:
      id: GoogleIamAdminV1AuditDataPermissionDelta
      description: >-
        A PermissionDelta message to record the added_permissions and
        removed_permissions inside a role.
      type: object
      properties:
        addedPermissions:
          description: Added permissions.
          type: array
          items:
            type: string
        removedPermissions:
          description: Removed permissions.
          type: array
          items:
            type: string
    GoogleIamV1LoggingAuditData:
      id: GoogleIamV1LoggingAuditData
      description: >-
        Audit log information specific to Cloud IAM. This message is serialized
        as an `Any` type in the `ServiceData` message of an `AuditLog` message.
      type: object
      properties:
        policyDelta:
          description: Policy delta between the original policy and the newly set policy.
          $ref: '#/components/schemas/GoogleIamV1PolicyDelta'
    GoogleIamV1PolicyDelta:
      id: GoogleIamV1PolicyDelta
      description: The difference delta between two policies.
      type: object
      properties:
        bindingDeltas:
          description: The delta for Bindings between two policies.
          type: array
          items:
            $ref: '#/components/schemas/GoogleIamV1BindingDelta'
    GoogleIamV1BindingDelta:
      id: GoogleIamV1BindingDelta
      description: >-
        One delta entry for Binding. Each individual change (only one member in
        each entry) to a binding will be a separate entry.
      type: object
      properties:
        action:
          description: The action that was performed on a Binding. Required
          type: string
          enumDescriptions:
            - Unspecified.
            - Addition of a Binding.
            - Removal of a Binding.
          enum:
            - ACTION_UNSPECIFIED
            - ADD
            - REMOVE
        role:
          description: >-
            Role that is assigned to `members`. For example, `roles/viewer`,
            `roles/editor`, or `roles/owner`. Required
          type: string
        member:
          description: >-
            A single identity requesting access for a Google Cloud resource.
            Follows the same format of Binding.members. Required
          type: string
        condition:
          description: The condition that is associated with this binding.
          $ref: '#/components/schemas/GoogleTypeExpr'
    GoogleIamV2PolicyOperationMetadata:
      id: GoogleIamV2PolicyOperationMetadata
      description: Metadata for long-running `Policy` operations.
      type: object
      properties:
        createTime:
          description: Timestamp when the `google.longrunning.Operation` was created.
          type: string
          format: google-datetime
    GoogleIamV1betaWorkloadIdentityPoolOperationMetadata:
      id: GoogleIamV1betaWorkloadIdentityPoolOperationMetadata
      description: Metadata for long-running WorkloadIdentityPool operations.
      type: object
      properties: {}
    GoogleCloudCommonOperationMetadata:
      id: GoogleCloudCommonOperationMetadata
      description: Represents the metadata of the long-running operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        target:
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusDetail:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        cancelRequested:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have been cancelled successfully
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
    GoogleIamV3mainOperationMetadata:
      id: GoogleIamV3mainOperationMetadata
      description: Represents the metadata of the long-running operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        target:
          description: Output only. Server-defined resource path for the target of the
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        requestedCancellation:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have successfully been cancelled
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
    GoogleIamV3alphaOperationMetadata:
      id: GoogleIamV3alphaOperationMetadata
      description: Represents the metadata of the long-running operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        target:
          description: Output only. Server-defined resource path for the target of the
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        requestedCancellation:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have successfully been cancelled
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
    GoogleIamV3betaOperationMetadata:
      id: GoogleIamV3betaOperationMetadata
      description: Represents the metadata of the long-running operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        target:
          description: Output only. Server-defined resource path for the target of the
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        requestedCancellation:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have successfully been cancelled
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
    GoogleIamV3OperationMetadata:
      id: GoogleIamV3OperationMetadata
      description: Represents the metadata of the long-running operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        target:
          description: Output only. Server-defined resource path for the target of the
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        requestedCancellation:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have successfully been cancelled
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
    CloudControl2SharedOperationsReconciliationOperationMetadata:
      id: CloudControl2SharedOperationsReconciliationOperationMetadata
      description: >-
        Operation metadata returned by the CLH during resource state
        reconciliation.
      type: object
      properties:
        deleteResource:
          description: DEPRECATED. Use exclusive_action instead.
          deprecated: true
          type: boolean
        exclusiveAction:
          description: Excluisive action returned by the CLH.
          type: string
          enumDescriptions:
            - Unknown repair action.
            - >-
              The resource has to be deleted. When using this bit, the CLH
              should fail the operation. DEPRECATED. Instead use DELETE_RESOURCE
              OperationSignal in SideChannel.
            - >-
              This resource could not be repaired but the repair should be tried
              again at a later time. This can happen if there is a dependency
              that needs to be resolved first- e.g. if a parent resource must be
              repaired before a child resource.
          enumDeprecated:
            - false
            - true
            - false
          enum:
            - UNKNOWN_REPAIR_ACTION
            - DELETE
            - RETRY
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    policies_policies:
      id: google.iamv2.policies_policies
      name: policies_policies
      title: Policies_policies
      methods:
        list_policies:
          operation:
            $ref: '#/paths/~1v2~1policies~1{policiesId}~1{policiesId1}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.policies
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/policies_policies/methods/list_policies
        insert: []
        update: []
        replace: []
        delete: []
    policies_policy:
      id: google.iamv2.policies_policy
      name: policies_policy
      title: Policies_policy
      methods:
        create_policy:
          operation:
            $ref: '#/paths/~1v2~1policies~1{policiesId}~1{policiesId1}/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/policies_policy/methods/create_policy
        update: []
        replace: []
        delete: []
    policies:
      id: google.iamv2.policies
      name: policies
      title: Policies
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v2~1policies~1{policiesId}~1{policiesId1}~1{policiesId2}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: >-
              #/paths/~1v2~1policies~1{policiesId}~1{policiesId1}~1{policiesId2}/put
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v2~1policies~1{policiesId}~1{policiesId1}~1{policiesId2}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/policies/methods/get'
        insert: []
        update: []
        replace:
          - $ref: '#/components/x-stackQL-resources/policies/methods/update'
        delete:
          - $ref: '#/components/x-stackQL-resources/policies/methods/delete'
    operations:
      id: google.iamv2.operations
      name: operations
      title: Operations
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v2~1policies~1{policiesId}~1{policiesId1}~1{policiesId2}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
paths:
  /v2/policies/{policiesId}/{policiesId1}:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: >-
        Retrieves the policies of the specified kind that are attached to a
        resource. The response lists only policy metadata. In particular, policy
        rules are omitted.
      operationId: iam.policies.listPolicies
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV2ListPoliciesResponse'
      parameters:
        - in: path
          name: policiesId
          required: true
          schema:
            type: string
        - in: path
          name: policiesId1
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Creates a policy.
      operationId: iam.policies.createPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV2Policy'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: policiesId
          required: true
          schema:
            type: string
        - in: path
          name: policiesId1
          required: true
          schema:
            type: string
        - in: query
          name: policyId
          schema:
            type: string
  /v2/policies/{policiesId}/{policiesId1}/{policiesId2}:
    parameters: *ref_1
    get:
      description: Gets a policy.
      operationId: iam.policies.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV2Policy'
      parameters:
        - in: path
          name: policiesId
          required: true
          schema:
            type: string
        - in: path
          name: policiesId1
          required: true
          schema:
            type: string
        - in: path
          name: policiesId2
          required: true
          schema:
            type: string
    put:
      description: >-
        Updates the specified policy. You can update only the rules and the
        display name for the policy. To update a policy, you should use a
        read-modify-write loop: 1. Use GetPolicy to read the current version of
        the policy. 2. Modify the policy as needed. 3. Use `UpdatePolicy` to
        write the updated policy. This pattern helps prevent conflicts between
        concurrent updates.
      operationId: iam.policies.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV2Policy'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: policiesId
          required: true
          schema:
            type: string
        - in: path
          name: policiesId1
          required: true
          schema:
            type: string
        - in: path
          name: policiesId2
          required: true
          schema:
            type: string
    delete:
      description: Deletes a policy. This action is permanent.
      operationId: iam.policies.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: policiesId
          required: true
          schema:
            type: string
        - in: path
          name: policiesId1
          required: true
          schema:
            type: string
        - in: path
          name: policiesId2
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
  /v2/policies/{policiesId}/{policiesId1}/{policiesId2}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: iam.policies.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: policiesId
          required: true
          schema:
            type: string
        - in: path
          name: policiesId1
          required: true
          schema:
            type: string
        - in: path
          name: policiesId2
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
