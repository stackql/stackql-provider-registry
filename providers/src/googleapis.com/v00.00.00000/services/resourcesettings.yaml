openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Resource Settings API
  description: >-
    The Resource Settings API allows users to control and modify the behavior of
    their GCP resources (e.g., VM, firewall, Project, etc.) across the Cloud
    Resource Hierarchy.
  version: v1
  x-discovery-doc-revision: '20241103'
  x-generated-date: '2024-11-06'
externalDocs:
  url: https://cloud.google.com/resource-manager/docs/resource-settings/overview
servers:
  - url: https://resourcesettings.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    GoogleCloudResourcesettingsV1ListSettingsResponse:
      type: object
      id: GoogleCloudResourcesettingsV1ListSettingsResponse
      properties:
        nextPageToken:
          description: Unused. A page token used to retrieve the next page.
          type: string
        settings:
          items:
            $ref: '#/components/schemas/GoogleCloudResourcesettingsV1Setting'
          description: >-
            A list of settings that are available at the specified Cloud
            resource.
          type: array
      description: The response from ListSettings.
    GoogleCloudResourcesettingsV1Setting:
      id: GoogleCloudResourcesettingsV1Setting
      properties:
        metadata:
          $ref: '#/components/schemas/GoogleCloudResourcesettingsV1SettingMetadata'
          readOnly: true
          description: >-
            Output only. Metadata about a setting which is not editable by the
            end user.
        etag:
          description: >-
            A fingerprint used for optimistic concurrency. See UpdateSetting for
            more details.
          type: string
        localValue:
          description: >-
            The configured value of the setting at the given parent resource,
            ignoring the resource hierarchy. The data type of Value must always
            be consistent with the data type defined in Setting.metadata.
          $ref: '#/components/schemas/GoogleCloudResourcesettingsV1Value'
        effectiveValue:
          $ref: '#/components/schemas/GoogleCloudResourcesettingsV1Value'
          readOnly: true
          description: >-
            Output only. The effective value of the setting at the given parent
            resource, evaluated based on the resource hierarchy The effective
            value evaluates to one of the following options, in this order. If
            an option is not valid or doesn't exist, then the next option is
            used: 1. The local setting value on the given resource:
            Setting.local_value 2. If one of the given resource's ancestors in
            the resource hierarchy have a local setting value, the local value
            at the nearest such ancestor. 3. The setting's default value:
            SettingMetadata.default_value 4. An empty value, defined as a
            `Value` with all fields unset. The data type of Value must always be
            consistent with the data type defined in Setting.metadata.
        name:
          description: >-
            The resource name of the setting. Must be in one of the following
            forms: * `projects/{project_number}/settings/{setting_name}` *
            `folders/{folder_id}/settings/{setting_name}` *
            `organizations/{organization_id}/settings/{setting_name}` For
            example, "/projects/123/settings/gcp-enableMyFeature"
          type: string
      description: The schema for settings.
      type: object
    GoogleCloudResourcesettingsV1SettingMetadata:
      properties:
        displayName:
          type: string
          description: The human readable name for this setting.
        readOnly:
          type: boolean
          description: >-
            A flag indicating that values of this setting cannot be modified.
            See documentation for the specific setting for updates and reasons.
        description:
          description: A detailed description of what this setting does.
          type: string
        dataType:
          description: The data type for this setting.
          enum:
            - DATA_TYPE_UNSPECIFIED
            - BOOLEAN
            - STRING
            - STRING_SET
            - ENUM_VALUE
            - DURATION_VALUE
            - STRING_MAP
          type: string
          enumDescriptions:
            - Unspecified data type.
            - A boolean setting.
            - A string setting.
            - A string set setting.
            - A Enum setting
            - A Duration setting
            - A string->string map setting
        defaultValue:
          $ref: '#/components/schemas/GoogleCloudResourcesettingsV1Value'
          description: >-
            The value provided by Setting.effective_value if no setting value is
            explicitly set. Note: not all settings have a default value.
      id: GoogleCloudResourcesettingsV1SettingMetadata
      description: Metadata about a setting which is not editable by the end user.
      type: object
    GoogleCloudResourcesettingsV1ValueStringMap:
      id: GoogleCloudResourcesettingsV1ValueStringMap
      description: >-
        A string->string map value that can hold a map of string keys to string
        values. The maximum length of each string is 200 characters and there
        can be a maximum of 50 key-value pairs in the map.
      type: object
      properties:
        mappings:
          additionalProperties:
            type: string
          type: object
          description: The key-value pairs in the map
    GoogleCloudResourcesettingsV1ValueStringSet:
      properties:
        values:
          description: The strings in the set
          type: array
          items:
            type: string
      description: >-
        A string set value that can hold a set of strings. The maximum length of
        each string is 200 characters and there can be a maximum of 50 strings
        in the string set.
      type: object
      id: GoogleCloudResourcesettingsV1ValueStringSet
    GoogleCloudResourcesettingsV1ValueEnumValue:
      properties:
        value:
          description: The value of this enum
          type: string
      id: GoogleCloudResourcesettingsV1ValueEnumValue
      description: >-
        A enum value that can hold any enum type setting values. Each enum type
        is represented by a number, this representation is stored in the
        definitions.
      type: object
    GoogleCloudResourcesettingsV1Value:
      type: object
      description: The data in a setting value.
      id: GoogleCloudResourcesettingsV1Value
      properties:
        booleanValue:
          type: boolean
          description: Defines this value as being a boolean value.
        stringMapValue:
          description: Defines this value as being a StringMap.
          $ref: '#/components/schemas/GoogleCloudResourcesettingsV1ValueStringMap'
        stringSetValue:
          $ref: '#/components/schemas/GoogleCloudResourcesettingsV1ValueStringSet'
          description: Defines this value as being a StringSet.
        stringValue:
          type: string
          description: Defines this value as being a string value.
        durationValue:
          description: Defines this value as being a Duration.
          type: string
          format: google-duration
        enumValue:
          description: Defines this value as being a Enum.
          $ref: '#/components/schemas/GoogleCloudResourcesettingsV1ValueEnumValue'
  parameters:
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
  x-stackQL-resources:
    settings:
      id: google.resourcesettings.settings
      name: settings
      title: Settings
      methods:
        projects_settings_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1settings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.settings
        projects_settings_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1settings~1{settingsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_settings_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1settings~1{settingsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_settings_list:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1settings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.settings
        organizations_settings_get:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1settings~1{settingsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_settings_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1settings~1{settingsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_settings_get:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1settings~1{settingsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_settings_patch:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1settings~1{settingsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_settings_list:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1settings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.settings
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/settings/methods/projects_settings_get
          - $ref: >-
              #/components/x-stackQL-resources/settings/methods/organizations_settings_get
          - $ref: >-
              #/components/x-stackQL-resources/settings/methods/folders_settings_get
          - $ref: >-
              #/components/x-stackQL-resources/settings/methods/projects_settings_list
          - $ref: >-
              #/components/x-stackQL-resources/settings/methods/organizations_settings_list
          - $ref: >-
              #/components/x-stackQL-resources/settings/methods/folders_settings_list
        insert: []
        update:
          - $ref: >-
              #/components/x-stackQL-resources/settings/methods/projects_settings_patch
          - $ref: >-
              #/components/x-stackQL-resources/settings/methods/organizations_settings_patch
          - $ref: >-
              #/components/x-stackQL-resources/settings/methods/folders_settings_patch
        replace: []
        delete: []
paths:
  /v1/projects/{projectsId}/settings:
    parameters: &ref_1
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/access_token'
    get:
      description: >-
        Lists all the settings that are available on the Cloud resource
        `parent`.
      operationId: resourcesettings.projects.settings.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudResourcesettingsV1ListSettingsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/settings/{settingsId}:
    parameters: *ref_1
    patch:
      description: >-
        Updates a specified setting. Returns a `google.rpc.Status` with
        `google.rpc.Code.NOT_FOUND` if the setting does not exist. Returns a
        `google.rpc.Status` with `google.rpc.Code.FAILED_PRECONDITION` if the
        setting is flagged as read only. Returns a `google.rpc.Status` with
        `google.rpc.Code.ABORTED` if the etag supplied in the request does not
        match the persisted etag of the setting value. On success, the response
        will contain only `name`, `local_value` and `etag`. The `metadata` and
        `effective_value` cannot be updated through this API. Note: the supplied
        setting will perform a full overwrite of the `local_value` field.
      operationId: resourcesettings.projects.settings.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudResourcesettingsV1Setting'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudResourcesettingsV1Setting'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: settingsId
          required: true
          schema:
            type: string
    get:
      description: >-
        Returns a specified setting. Returns a `google.rpc.Status` with
        `google.rpc.Code.NOT_FOUND` if the setting does not exist.
      operationId: resourcesettings.projects.settings.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudResourcesettingsV1Setting'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: settingsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
  /v1/organizations/{organizationsId}/settings:
    parameters: *ref_1
    get:
      description: >-
        Lists all the settings that are available on the Cloud resource
        `parent`.
      operationId: resourcesettings.organizations.settings.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudResourcesettingsV1ListSettingsResponse
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: view
          schema:
            type: string
  /v1/organizations/{organizationsId}/settings/{settingsId}:
    parameters: *ref_1
    get:
      description: >-
        Returns a specified setting. Returns a `google.rpc.Status` with
        `google.rpc.Code.NOT_FOUND` if the setting does not exist.
      operationId: resourcesettings.organizations.settings.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudResourcesettingsV1Setting'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: settingsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
    patch:
      description: >-
        Updates a specified setting. Returns a `google.rpc.Status` with
        `google.rpc.Code.NOT_FOUND` if the setting does not exist. Returns a
        `google.rpc.Status` with `google.rpc.Code.FAILED_PRECONDITION` if the
        setting is flagged as read only. Returns a `google.rpc.Status` with
        `google.rpc.Code.ABORTED` if the etag supplied in the request does not
        match the persisted etag of the setting value. On success, the response
        will contain only `name`, `local_value` and `etag`. The `metadata` and
        `effective_value` cannot be updated through this API. Note: the supplied
        setting will perform a full overwrite of the `local_value` field.
      operationId: resourcesettings.organizations.settings.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudResourcesettingsV1Setting'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudResourcesettingsV1Setting'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: settingsId
          required: true
          schema:
            type: string
  /v1/folders/{foldersId}/settings/{settingsId}:
    parameters: *ref_1
    get:
      description: >-
        Returns a specified setting. Returns a `google.rpc.Status` with
        `google.rpc.Code.NOT_FOUND` if the setting does not exist.
      operationId: resourcesettings.folders.settings.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudResourcesettingsV1Setting'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: settingsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
    patch:
      description: >-
        Updates a specified setting. Returns a `google.rpc.Status` with
        `google.rpc.Code.NOT_FOUND` if the setting does not exist. Returns a
        `google.rpc.Status` with `google.rpc.Code.FAILED_PRECONDITION` if the
        setting is flagged as read only. Returns a `google.rpc.Status` with
        `google.rpc.Code.ABORTED` if the etag supplied in the request does not
        match the persisted etag of the setting value. On success, the response
        will contain only `name`, `local_value` and `etag`. The `metadata` and
        `effective_value` cannot be updated through this API. Note: the supplied
        setting will perform a full overwrite of the `local_value` field.
      operationId: resourcesettings.folders.settings.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudResourcesettingsV1Setting'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudResourcesettingsV1Setting'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: settingsId
          required: true
          schema:
            type: string
  /v1/folders/{foldersId}/settings:
    parameters: *ref_1
    get:
      description: >-
        Lists all the settings that are available on the Cloud resource
        `parent`.
      operationId: resourcesettings.folders.settings.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudResourcesettingsV1ListSettingsResponse
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
