openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Library Agent API
  description: A simple Google Example Library API.
  version: v1
  x-discovery-doc-revision: '20250826'
  x-generated-date: '2025-08-28'
externalDocs:
  url: https://cloud.google.com/docs/quota
servers:
  - url: https://libraryagent.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    GoogleExampleLibraryagentV1Shelf:
      id: GoogleExampleLibraryagentV1Shelf
      description: A Shelf contains a collection of books with a theme.
      type: object
      properties:
        name:
          description: >-
            Output only. The resource name of the shelf. Shelf names have the
            form `shelves/{shelf_id}`. The name is ignored when creating a
            shelf.
          type: string
        theme:
          description: The theme of the shelf
          type: string
    GoogleExampleLibraryagentV1ListShelvesResponse:
      id: GoogleExampleLibraryagentV1ListShelvesResponse
      description: Response message for LibraryAgent.ListShelves.
      type: object
      properties:
        shelves:
          description: The list of shelves.
          type: array
          items:
            $ref: '#/components/schemas/GoogleExampleLibraryagentV1Shelf'
        nextPageToken:
          description: >-
            A token to retrieve next page of results. Pass this value in the
            ListShelvesRequest.page_token field in the subsequent call to
            `ListShelves` method to retrieve the next page of results.
          type: string
    GoogleExampleLibraryagentV1Book:
      id: GoogleExampleLibraryagentV1Book
      description: A single book in the library.
      type: object
      properties:
        name:
          description: >-
            The resource name of the book. Book names have the form
            `shelves/{shelf_id}/books/{book_id}`. The name is ignored when
            creating a book.
          type: string
        author:
          description: The name of the book author.
          type: string
        title:
          description: The title of the book.
          type: string
        read:
          description: Value indicating whether the book has been read.
          type: boolean
    GoogleExampleLibraryagentV1ListBooksResponse:
      id: GoogleExampleLibraryagentV1ListBooksResponse
      description: Response message for LibraryAgent.ListBooks.
      type: object
      properties:
        books:
          description: The list of books.
          type: array
          items:
            $ref: '#/components/schemas/GoogleExampleLibraryagentV1Book'
        nextPageToken:
          description: >-
            A token to retrieve next page of results. Pass this value in the
            ListBooksRequest.page_token field in the subsequent call to
            `ListBooks` method to retrieve the next page of results.
          type: string
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    shelves:
      id: google.libraryagent.shelves
      name: shelves
      title: Shelves
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1shelves~1{shelvesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1shelves/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.shelves
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/shelves/methods/get'
          - $ref: '#/components/x-stackQL-resources/shelves/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    books:
      id: google.libraryagent.books
      name: books
      title: Books
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1shelves~1{shelvesId}~1books~1{booksId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1shelves~1{shelvesId}~1books/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.books
        borrow:
          operation:
            $ref: '#/paths/~1v1~1shelves~1{shelvesId}~1books~1{booksId}:borrow/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        return:
          operation:
            $ref: '#/paths/~1v1~1shelves~1{shelvesId}~1books~1{booksId}:return/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/books/methods/get'
          - $ref: '#/components/x-stackQL-resources/books/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
paths:
  /v1/shelves/{shelvesId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Gets a shelf. Returns NOT_FOUND if the shelf does not exist.
      operationId: libraryagent.shelves.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleExampleLibraryagentV1Shelf'
      parameters:
        - in: path
          name: shelvesId
          required: true
          schema:
            type: string
  /v1/shelves:
    parameters: *ref_1
    get:
      description: >-
        Lists shelves. The order is unspecified but deterministic. Newly created
        shelves will not necessarily be added to the end of this list.
      operationId: libraryagent.shelves.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleExampleLibraryagentV1ListShelvesResponse
      parameters:
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/shelves/{shelvesId}/books/{booksId}:
    parameters: *ref_1
    get:
      description: Gets a book. Returns NOT_FOUND if the book does not exist.
      operationId: libraryagent.shelves.books.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleExampleLibraryagentV1Book'
      parameters:
        - in: path
          name: shelvesId
          required: true
          schema:
            type: string
        - in: path
          name: booksId
          required: true
          schema:
            type: string
  /v1/shelves/{shelvesId}/books:
    parameters: *ref_1
    get:
      description: >-
        Lists books in a shelf. The order is unspecified but deterministic.
        Newly created books will not necessarily be added to the end of this
        list. Returns NOT_FOUND if the shelf does not exist.
      operationId: libraryagent.shelves.books.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleExampleLibraryagentV1ListBooksResponse
      parameters:
        - in: path
          name: shelvesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/shelves/{shelvesId}/books/{booksId}:borrow:
    parameters: *ref_1
    post:
      description: >-
        Borrow a book from the library. Returns the book if it is borrowed
        successfully. Returns NOT_FOUND if the book does not exist in the
        library. Returns quota exceeded error if the amount of books borrowed
        exceeds allocation quota in any dimensions.
      operationId: libraryagent.shelves.books.borrow
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleExampleLibraryagentV1Book'
      parameters:
        - in: path
          name: shelvesId
          required: true
          schema:
            type: string
        - in: path
          name: booksId
          required: true
          schema:
            type: string
  /v1/shelves/{shelvesId}/books/{booksId}:return:
    parameters: *ref_1
    post:
      description: >-
        Return a book to the library. Returns the book if it is returned to the
        library successfully. Returns error if the book does not belong to the
        library or the users didn't borrow before.
      operationId: libraryagent.shelves.books.return
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleExampleLibraryagentV1Book'
      parameters:
        - in: path
          name: shelvesId
          required: true
          schema:
            type: string
        - in: path
          name: booksId
          required: true
          schema:
            type: string
