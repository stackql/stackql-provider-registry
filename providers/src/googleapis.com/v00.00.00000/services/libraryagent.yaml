openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Library Agent API
  description: A simple Google Example Library API.
  version: v1
  x-discovery-doc-revision: '20230830'
  x-generated-date: '2023-09-01'
externalDocs:
  url: 'https://cloud.google.com/docs/quota'
servers:
  - url: 'https://libraryagent.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    GoogleExampleLibraryagentV1ListShelvesResponse:
      properties:
        shelves:
          description: The list of shelves.
          type: array
          items:
            $ref: '#/components/schemas/GoogleExampleLibraryagentV1Shelf'
        nextPageToken:
          description: A token to retrieve next page of results. Pass this value in the ListShelvesRequest.page_token field in the subsequent call to `ListShelves` method to retrieve the next page of results.
          type: string
      type: object
      description: Response message for LibraryAgent.ListShelves.
      id: GoogleExampleLibraryagentV1ListShelvesResponse
    GoogleExampleLibraryagentV1Shelf:
      properties:
        theme:
          description: The theme of the shelf
          type: string
        name:
          type: string
          description: 'Output only. The resource name of the shelf. Shelf names have the form `shelves/{shelf_id}`. The name is ignored when creating a shelf.'
      description: A Shelf contains a collection of books with a theme.
      id: GoogleExampleLibraryagentV1Shelf
      type: object
    GoogleExampleLibraryagentV1ListBooksResponse:
      type: object
      id: GoogleExampleLibraryagentV1ListBooksResponse
      properties:
        books:
          description: The list of books.
          type: array
          items:
            $ref: '#/components/schemas/GoogleExampleLibraryagentV1Book'
        nextPageToken:
          description: A token to retrieve next page of results. Pass this value in the ListBooksRequest.page_token field in the subsequent call to `ListBooks` method to retrieve the next page of results.
          type: string
      description: Response message for LibraryAgent.ListBooks.
    GoogleExampleLibraryagentV1Book:
      id: GoogleExampleLibraryagentV1Book
      description: A single book in the library.
      type: object
      properties:
        title:
          description: The title of the book.
          type: string
        read:
          type: boolean
          description: Value indicating whether the book has been read.
        author:
          description: The name of the book author.
          type: string
        name:
          description: 'The resource name of the book. Book names have the form `shelves/{shelf_id}/books/{book_id}`. The name is ignored when creating a book.'
          type: string
  parameters:
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
  x-stackQL-resources:
    books:
      id: google.libraryagent.books
      name: books
      title: Books
      methods:
        borrow:
          operation:
            $ref: '#/paths/~1v1~1shelves~1{shelvesId}~1books~1{booksId}:borrow/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1shelves~1{shelvesId}~1books/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.books
        _list:
          operation:
            $ref: '#/paths/~1v1~1shelves~1{shelvesId}~1books/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        return:
          operation:
            $ref: '#/paths/~1v1~1shelves~1{shelvesId}~1books~1{booksId}:return/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1shelves~1{shelvesId}~1books~1{booksId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/books/methods/get'
          - $ref: '#/components/x-stackQL-resources/books/methods/list'
        insert: []
        update: []
        delete: []
    shelves:
      id: google.libraryagent.shelves
      name: shelves
      title: Shelves
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1shelves/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.shelves
        _list:
          operation:
            $ref: '#/paths/~1v1~1shelves/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1shelves~1{shelvesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/shelves/methods/get'
          - $ref: '#/components/x-stackQL-resources/shelves/methods/list'
        insert: []
        update: []
        delete: []
paths:
  '/v1/shelves/{shelvesId}/books/{booksId}:borrow':
    parameters: &ref_1
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/prettyPrint'
    post:
      description: Borrow a book from the library. Returns the book if it is borrowed successfully. Returns NOT_FOUND if the book does not exist in the library. Returns quota exceeded error if the amount of books borrowed exceeds allocation quota in any dimensions.
      operationId: libraryagent.shelves.books.borrow
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleExampleLibraryagentV1Book'
      parameters:
        - in: path
          name: shelvesId
          required: true
          schema:
            type: string
        - in: path
          name: booksId
          required: true
          schema:
            type: string
      x-stackQL-resource: books
      x-stackQL-method: borrow
      x-stackQL-verb: exec
  '/v1/shelves/{shelvesId}/books':
    parameters: *ref_1
    get:
      description: Lists books in a shelf. The order is unspecified but deterministic. Newly created books will not necessarily be added to the end of this list. Returns NOT_FOUND if the shelf does not exist.
      operationId: libraryagent.shelves.books.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleExampleLibraryagentV1ListBooksResponse'
      parameters:
        - in: path
          name: shelvesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: books
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.books
  '/v1/shelves/{shelvesId}/books/{booksId}:return':
    parameters: *ref_1
    post:
      description: Return a book to the library. Returns the book if it is returned to the library successfully. Returns error if the book does not belong to the library or the users didn't borrow before.
      operationId: libraryagent.shelves.books.return
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleExampleLibraryagentV1Book'
      parameters:
        - in: path
          name: shelvesId
          required: true
          schema:
            type: string
        - in: path
          name: booksId
          required: true
          schema:
            type: string
      x-stackQL-resource: books
      x-stackQL-method: return
      x-stackQL-verb: exec
  '/v1/shelves/{shelvesId}/books/{booksId}':
    parameters: *ref_1
    get:
      description: Gets a book. Returns NOT_FOUND if the book does not exist.
      operationId: libraryagent.shelves.books.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleExampleLibraryagentV1Book'
      parameters:
        - in: path
          name: shelvesId
          required: true
          schema:
            type: string
        - in: path
          name: booksId
          required: true
          schema:
            type: string
      x-stackQL-resource: books
      x-stackQL-method: get
      x-stackQL-verb: select
  /v1/shelves:
    parameters: *ref_1
    get:
      description: Lists shelves. The order is unspecified but deterministic. Newly created shelves will not necessarily be added to the end of this list.
      operationId: libraryagent.shelves.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleExampleLibraryagentV1ListShelvesResponse'
      parameters:
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: shelves
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.shelves
  '/v1/shelves/{shelvesId}':
    parameters: *ref_1
    get:
      description: Gets a shelf. Returns NOT_FOUND if the shelf does not exist.
      operationId: libraryagent.shelves.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleExampleLibraryagentV1Shelf'
      parameters:
        - in: path
          name: shelvesId
          required: true
          schema:
            type: string
      x-stackQL-resource: shelves
      x-stackQL-method: get
      x-stackQL-verb: select
