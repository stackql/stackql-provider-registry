openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Developer Connect API
  description: Connect third-party source code management to Google
  version: v1
  x-discovery-doc-revision: '20240527'
  x-generated-date: '2024-06-02'
externalDocs:
  url: http://cloud.google.com/developer-connect/docs/overview
servers:
  - url: https://developerconnect.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    ListOperationsResponse:
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Operation:
      id: Operation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    Status:
      id: Status
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    CancelOperationRequest:
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
      type: object
      properties: {}
    ListConnectionsResponse:
      id: ListConnectionsResponse
      description: Message for response to listing Connections
      type: object
      properties:
        connections:
          description: The list of Connection
          type: array
          items:
            $ref: '#/components/schemas/Connection'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Connection:
      id: Connection
      description: Message describing Connection object
      type: object
      properties:
        githubConfig:
          description: Configuration for connections to github.com.
          $ref: '#/components/schemas/GitHubConfig'
        name:
          description: >-
            Identifier. The resource name of the connection, in the format
            `projects/{project}/locations/{location}/connections/{connection_id}`.
          type: string
        createTime:
          description: Output only. [Output only] Create timestamp
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. [Output only] Update timestamp
          readOnly: true
          type: string
          format: google-datetime
        deleteTime:
          description: Output only. [Output only] Delete timestamp
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: Optional. Labels as key value pairs
          type: object
          additionalProperties:
            type: string
        installationState:
          description: Output only. Installation state of the Connection.
          readOnly: true
          $ref: '#/components/schemas/InstallationState'
        disabled:
          description: >-
            Optional. If disabled is set to true, functionality is disabled for
            this connection. Repository based API methods and webhooks
            processing for repositories in this connection will be disabled.
          type: boolean
        reconciling:
          description: >-
            Output only. Set to true when the connection is being set up or
            updated in the background.
          readOnly: true
          type: boolean
        annotations:
          description: Optional. Allows clients to store small amounts of arbitrary data.
          type: object
          additionalProperties:
            type: string
        etag:
          description: >-
            Optional. This checksum is computed by the server based on the value
            of other fields, and may be sent on update and delete requests to
            ensure the client has an up-to-date value before proceeding.
          type: string
        uid:
          description: >-
            Output only. A system-assigned unique identifier for a the
            GitRepositoryLink.
          readOnly: true
          type: string
    GitHubConfig:
      id: GitHubConfig
      description: Configuration for connections to github.com.
      type: object
      properties:
        githubApp:
          description: >-
            Required. Immutable. The GitHub Application that was installed to
            the GitHub user or organization.
          type: string
          enumDescriptions:
            - GitHub App not specified.
            - The Developer Connect GitHub Application.
            - The Firebase GitHub Application.
          enum:
            - GIT_HUB_APP_UNSPECIFIED
            - DEVELOPER_CONNECT
            - FIREBASE
        authorizerCredential:
          description: >-
            Optional. OAuth credential of the account that authorized the GitHub
            App. It is recommended to use a robot account instead of a human
            user account. The OAuth token must be tied to the GitHub App of this
            config.
          $ref: '#/components/schemas/OAuthCredential'
        appInstallationId:
          description: Optional. GitHub App installation id.
          type: string
          format: int64
        installationUri:
          description: >-
            Output only. The URI to navigate to in order to manage the
            installation associated with this GitHubConfig.
          readOnly: true
          type: string
    OAuthCredential:
      id: OAuthCredential
      description: >-
        Represents an OAuth token of the account that authorized the Connection,
        and associated metadata.
      type: object
      properties:
        oauthTokenSecretVersion:
          description: >-
            Required. A SecretManager resource containing the OAuth token that
            authorizes the connection. Format:
            `projects/*/secrets/*/versions/*`.
          type: string
        username:
          description: Output only. The username associated with this token.
          readOnly: true
          type: string
    InstallationState:
      id: InstallationState
      description: >-
        Describes stage and necessary actions to be taken by the user to
        complete the installation. Used for GitHub and GitHub Enterprise based
        connections.
      type: object
      properties:
        stage:
          description: Output only. Current step of the installation process.
          readOnly: true
          type: string
          enumDescriptions:
            - No stage specified.
            - >-
              Only for GitHub Enterprise. An App creation has been requested.
              The user needs to confirm the creation in their GitHub enterprise
              host.
            - User needs to authorize the GitHub (or Enterprise) App via OAuth.
            - >-
              User needs to follow the link to install the GitHub (or
              Enterprise) App.
            - Installation process has been completed.
          enum:
            - STAGE_UNSPECIFIED
            - PENDING_CREATE_APP
            - PENDING_USER_OAUTH
            - PENDING_INSTALL_APP
            - COMPLETE
        message:
          description: >-
            Output only. Message of what the user should do next to continue the
            installation. Empty string if the installation is already complete.
          readOnly: true
          type: string
        actionUri:
          description: >-
            Output only. Link to follow for next action. Empty string if the
            installation is already complete.
          readOnly: true
          type: string
    GitRepositoryLink:
      id: GitRepositoryLink
      description: Message describing the GitRepositoryLink object
      type: object
      properties:
        name:
          description: >-
            Identifier. Resource name of the repository, in the format
            `projects/*/locations/*/connections/*/gitRepositoryLinks/*`.
          type: string
        cloneUri:
          description: Required. Git Clone URI.
          type: string
        createTime:
          description: Output only. [Output only] Create timestamp
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. [Output only] Update timestamp
          readOnly: true
          type: string
          format: google-datetime
        deleteTime:
          description: Output only. [Output only] Delete timestamp
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: Optional. Labels as key value pairs
          type: object
          additionalProperties:
            type: string
        etag:
          description: >-
            Optional. This checksum is computed by the server based on the value
            of other fields, and may be sent on update and delete requests to
            ensure the client has an up-to-date value before proceeding.
          type: string
        reconciling:
          description: >-
            Output only. Set to true when the connection is being set up or
            updated in the background.
          readOnly: true
          type: boolean
        annotations:
          description: Optional. Allows clients to store small amounts of arbitrary data.
          type: object
          additionalProperties:
            type: string
        uid:
          description: >-
            Output only. A system-assigned unique identifier for a the
            GitRepositoryLink.
          readOnly: true
          type: string
    ListGitRepositoryLinksResponse:
      id: ListGitRepositoryLinksResponse
      description: Message for response to listing GitRepositoryLinks
      type: object
      properties:
        gitRepositoryLinks:
          description: The list of GitRepositoryLinks
          type: array
          items:
            $ref: '#/components/schemas/GitRepositoryLink'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    FetchReadWriteTokenRequest:
      id: FetchReadWriteTokenRequest
      description: Message for fetching SCM read/write token.
      type: object
      properties: {}
    FetchReadWriteTokenResponse:
      id: FetchReadWriteTokenResponse
      description: Message for responding to get read/write token.
      type: object
      properties:
        token:
          description: The token content.
          type: string
        expirationTime:
          description: Expiration timestamp. Can be empty if unknown or non-expiring.
          type: string
          format: google-datetime
        gitUsername:
          description: >-
            The git_username to specify when making a git clone with the token.
            For example, for GitHub GitRepositoryLinks, this would be
            "x-access-token"
          type: string
    FetchReadTokenRequest:
      id: FetchReadTokenRequest
      description: Message for fetching SCM read token.
      type: object
      properties: {}
    FetchReadTokenResponse:
      id: FetchReadTokenResponse
      description: Message for responding to get read token.
      type: object
      properties:
        token:
          description: The token content.
          type: string
        expirationTime:
          description: Expiration timestamp. Can be empty if unknown or non-expiring.
          type: string
          format: google-datetime
        gitUsername:
          description: >-
            The git_username to specify when making a git clone with the token.
            For example, for GitHub GitRepositoryLinks, this would be
            "x-access-token"
          type: string
    FetchLinkableGitRepositoriesResponse:
      id: FetchLinkableGitRepositoriesResponse
      description: Response message for FetchLinkableGitRepositories.
      type: object
      properties:
        linkableGitRepositories:
          description: The git repositories that can be linked to the connection.
          type: array
          items:
            $ref: '#/components/schemas/LinkableGitRepository'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
    LinkableGitRepository:
      id: LinkableGitRepository
      description: >-
        LinkableGitRepository represents a git repository that can be linked to
        a connection.
      type: object
      properties:
        cloneUri:
          description: The clone uri of the repository.
          type: string
    FetchGitHubInstallationsResponse:
      id: FetchGitHubInstallationsResponse
      description: Response of fetching github installations.
      type: object
      properties:
        installations:
          description: >-
            List of installations available to the OAuth user (for github.com)
            or all the installations (for GitHub enterprise).
          type: array
          items:
            $ref: '#/components/schemas/Installation'
    Installation:
      id: Installation
      description: Represents an installation of the GitHub App.
      type: object
      properties:
        id:
          description: ID of the installation in GitHub.
          type: string
          format: int64
        name:
          description: Name of the GitHub user or organization that owns this installation.
          type: string
        type:
          description: Either "user" or "organization".
          type: string
    FetchGitRefsResponse:
      id: FetchGitRefsResponse
      description: Response for fetching git refs.
      type: object
      properties:
        refNames:
          description: Name of the refs fetched.
          type: array
          items:
            type: string
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
    ListLocationsResponse:
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Location:
      id: Location
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
          additionalProperties:
            type: string
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    OperationMetadata:
      id: OperationMetadata
      description: Represents the metadata of the long-running operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        target:
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        requestedCancellation:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have been cancelled successfully
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    locations:
      id: developerconnect.locations
      name: locations
      title: Locations
      methods:
        _list:
          operation: &ref_1
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response: &ref_2
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        list:
          operation: *ref_1
          response: *ref_2
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
        insert: []
        update: []
        delete: []
    operations:
      id: developerconnect.operations
      name: operations
      title: Operations
      methods:
        _list:
          operation: &ref_3
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get
          response: &ref_4
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        list:
          operation: *ref_3
          response: *ref_4
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    connections:
      id: developerconnect.connections
      name: connections
      title: Connections
      methods:
        _list:
          operation: &ref_5
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connections/get
          response: &ref_6
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.connections
        list:
          operation: *ref_5
          response: *ref_6
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connections/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/connections/methods/list'
          - $ref: '#/components/x-stackQL-resources/connections/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/connections/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/connections/methods/delete'
    connections_linkable_git_repositories:
      id: developerconnect.connections_linkable_git_repositories
      name: connections_linkable_git_repositories
      title: Connections_linkable_git_repositories
      methods:
        fetch_linkable_git_repositories:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}:fetchLinkableGitRepositories/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    connections_github_installations:
      id: developerconnect.connections_github_installations
      name: connections_github_installations
      title: Connections_github_installations
      methods:
        fetchgithub_installations:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}:fetchGitHubInstallations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    git_repository_links:
      id: developerconnect.git_repository_links
      name: git_repository_links
      title: Git_repository_links
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1gitRepositoryLinks/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _list:
          operation: &ref_7
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1gitRepositoryLinks/get
          response: &ref_8
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.gitRepositoryLinks
        list:
          operation: *ref_7
          response: *ref_8
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1gitRepositoryLinks~1{gitRepositoryLinksId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1gitRepositoryLinks~1{gitRepositoryLinksId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/git_repository_links/methods/list'
          - $ref: '#/components/x-stackQL-resources/git_repository_links/methods/get'
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/git_repository_links/methods/create
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/git_repository_links/methods/delete
    git_repository_links_read_write_token:
      id: developerconnect.git_repository_links_read_write_token
      name: git_repository_links_read_write_token
      title: Git_repository_links_read_write_token
      methods:
        fetch_read_write_token:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1gitRepositoryLinks~1{gitRepositoryLinksId}:fetchReadWriteToken/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    git_repository_links_read_token:
      id: developerconnect.git_repository_links_read_token
      name: git_repository_links_read_token
      title: Git_repository_links_read_token
      methods:
        fetch_read_token:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1gitRepositoryLinks~1{gitRepositoryLinksId}:fetchReadToken/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    git_repository_links_git_refs:
      id: developerconnect.git_repository_links_git_refs
      name: git_repository_links_git_refs
      title: Git_repository_links_git_refs
      methods:
        fetch_git_refs:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1gitRepositoryLinks~1{gitRepositoryLinksId}:fetchGitRefs/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  /v1/projects/{projectsId}/locations:
    parameters: &ref_9
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Lists information about the supported locations for this service.
      operationId: developerconnect.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_9
    get:
      description: Gets information about a location.
      operationId: developerconnect.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_9
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: developerconnect.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_9
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: developerconnect.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: developerconnect.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_9
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: developerconnect.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/connections:
    parameters: *ref_9
    get:
      description: Lists Connections in a given project and location.
      operationId: developerconnect.projects.locations.connections.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new Connection in a given project and location.
      operationId: developerconnect.projects.locations.connections.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connection'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: connectionId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}:
    parameters: *ref_9
    get:
      description: Gets details of a single Connection.
      operationId: developerconnect.projects.locations.connections.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
    patch:
      description: Updates the parameters of a single Connection.
      operationId: developerconnect.projects.locations.connections.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connection'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
    delete:
      description: Deletes a single Connection.
      operationId: developerconnect.projects.locations.connections.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}:fetchLinkableGitRepositories:
    parameters: *ref_9
    get:
      description: >-
        FetchLinkableGitRepositories returns a list of git repositories from an
        SCM that are available to be added to a Connection.
      operationId: >-
        developerconnect.projects.locations.connections.fetchLinkableGitRepositories
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchLinkableGitRepositoriesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}:fetchGitHubInstallations:
    parameters: *ref_9
    get:
      description: >-
        FetchGitHubInstallations returns the list of GitHub Installations that
        are available to be added to a Connection. For github.com, only
        installations accessible to the authorizer token are returned. For
        GitHub Enterprise, all installations are returned.
      operationId: developerconnect.projects.locations.connections.fetchGitHubInstallations
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchGitHubInstallationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/gitRepositoryLinks:
    parameters: *ref_9
    post:
      description: >-
        Creates a GitRepositoryLink. Upon linking a Git Repository, Developer
        Connect will configure the Git Repository to send webhook events to
        Developer Connect. Connections that use Firebase GitHub Application will
        have events forwarded to the Firebase service. All other Connections
        will have events forwarded to Cloud Build.
      operationId: >-
        developerconnect.projects.locations.connections.gitRepositoryLinks.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitRepositoryLink'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: query
          name: gitRepositoryLinkId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
    get:
      description: Lists GitRepositoryLinks in a given project, location, and connection.
      operationId: developerconnect.projects.locations.connections.gitRepositoryLinks.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGitRepositoryLinksResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/gitRepositoryLinks/{gitRepositoryLinksId}:
    parameters: *ref_9
    delete:
      description: Deletes a single GitRepositoryLink.
      operationId: >-
        developerconnect.projects.locations.connections.gitRepositoryLinks.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: path
          name: gitRepositoryLinksId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
    get:
      description: Gets details of a single GitRepositoryLink.
      operationId: developerconnect.projects.locations.connections.gitRepositoryLinks.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRepositoryLink'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: path
          name: gitRepositoryLinksId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/gitRepositoryLinks/{gitRepositoryLinksId}:fetchReadWriteToken:
    parameters: *ref_9
    post:
      description: Fetches read/write token of a given gitRepositoryLink.
      operationId: >-
        developerconnect.projects.locations.connections.gitRepositoryLinks.fetchReadWriteToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchReadWriteTokenRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchReadWriteTokenResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: path
          name: gitRepositoryLinksId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/gitRepositoryLinks/{gitRepositoryLinksId}:fetchReadToken:
    parameters: *ref_9
    post:
      description: Fetches read token of a given gitRepositoryLink.
      operationId: >-
        developerconnect.projects.locations.connections.gitRepositoryLinks.fetchReadToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchReadTokenRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchReadTokenResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: path
          name: gitRepositoryLinksId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/gitRepositoryLinks/{gitRepositoryLinksId}:fetchGitRefs:
    parameters: *ref_9
    get:
      description: Fetch the list of branches or tags for a given repository.
      operationId: >-
        developerconnect.projects.locations.connections.gitRepositoryLinks.fetchGitRefs
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchGitRefsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: path
          name: gitRepositoryLinksId
          required: true
          schema:
            type: string
        - in: query
          name: refType
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
