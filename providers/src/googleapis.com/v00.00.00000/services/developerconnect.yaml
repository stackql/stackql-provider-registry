openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Developer Connect API
  description: Connect third-party source code management to Google
  version: v1
  x-discovery-doc-revision: '20250731'
  x-generated-date: '2025-08-28'
externalDocs:
  url: http://cloud.google.com/developer-connect/docs/overview
servers:
  - url: https://developerconnect.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    ListOperationsResponse:
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Operation:
      id: Operation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    Status:
      id: Status
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    CancelOperationRequest:
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
      type: object
      properties: {}
    ListConnectionsResponse:
      id: ListConnectionsResponse
      description: Message for response to listing Connections
      type: object
      properties:
        connections:
          description: The list of Connection
          type: array
          items:
            $ref: '#/components/schemas/Connection'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Connection:
      id: Connection
      description: Message describing Connection object
      type: object
      properties:
        githubConfig:
          description: Configuration for connections to github.com.
          $ref: '#/components/schemas/GitHubConfig'
        githubEnterpriseConfig:
          description: Configuration for connections to an instance of GitHub Enterprise.
          $ref: '#/components/schemas/GitHubEnterpriseConfig'
        gitlabConfig:
          description: Configuration for connections to gitlab.com.
          $ref: '#/components/schemas/GitLabConfig'
        gitlabEnterpriseConfig:
          description: Configuration for connections to an instance of GitLab Enterprise.
          $ref: '#/components/schemas/GitLabEnterpriseConfig'
        bitbucketDataCenterConfig:
          description: >-
            Configuration for connections to an instance of Bitbucket Data
            Center.
          $ref: '#/components/schemas/BitbucketDataCenterConfig'
        bitbucketCloudConfig:
          description: Configuration for connections to an instance of Bitbucket Clouds.
          $ref: '#/components/schemas/BitbucketCloudConfig'
        name:
          description: >-
            Identifier. The resource name of the connection, in the format
            `projects/{project}/locations/{location}/connections/{connection_id}`.
          type: string
        createTime:
          description: Output only. [Output only] Create timestamp
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. [Output only] Update timestamp
          readOnly: true
          type: string
          format: google-datetime
        deleteTime:
          description: Output only. [Output only] Delete timestamp
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: Optional. Labels as key value pairs
          type: object
          additionalProperties:
            type: string
        installationState:
          description: Output only. Installation state of the Connection.
          readOnly: true
          $ref: '#/components/schemas/InstallationState'
        disabled:
          description: >-
            Optional. If disabled is set to true, functionality is disabled for
            this connection. Repository based API methods and webhooks
            processing for repositories in this connection will be disabled.
          type: boolean
        reconciling:
          description: >-
            Output only. Set to true when the connection is being set up or
            updated in the background.
          readOnly: true
          type: boolean
        annotations:
          description: Optional. Allows clients to store small amounts of arbitrary data.
          type: object
          additionalProperties:
            type: string
        etag:
          description: >-
            Optional. This checksum is computed by the server based on the value
            of other fields, and may be sent on update and delete requests to
            ensure the client has an up-to-date value before proceeding.
          type: string
        uid:
          description: Output only. A system-assigned unique identifier for the Connection.
          readOnly: true
          type: string
        cryptoKeyConfig:
          description: >-
            Optional. The crypto key configuration. This field is used by the
            Customer-Managed Encryption Keys (CMEK) feature.
          $ref: '#/components/schemas/CryptoKeyConfig'
        gitProxyConfig:
          description: >-
            Optional. Configuration for the git proxy feature. Enabling the git
            proxy allows clients to perform git operations on the repositories
            linked in the connection.
          $ref: '#/components/schemas/GitProxyConfig'
    GitHubConfig:
      id: GitHubConfig
      description: Configuration for connections to github.com.
      type: object
      properties:
        githubApp:
          description: >-
            Required. Immutable. The GitHub Application that was installed to
            the GitHub user or organization.
          type: string
          enumDescriptions:
            - GitHub App not specified.
            - The Developer Connect GitHub Application.
            - The Firebase GitHub Application.
          enum:
            - GIT_HUB_APP_UNSPECIFIED
            - DEVELOPER_CONNECT
            - FIREBASE
        authorizerCredential:
          description: >-
            Optional. OAuth credential of the account that authorized the GitHub
            App. It is recommended to use a robot account instead of a human
            user account. The OAuth token must be tied to the GitHub App of this
            config.
          $ref: '#/components/schemas/OAuthCredential'
        appInstallationId:
          description: Optional. GitHub App installation id.
          type: string
          format: int64
        installationUri:
          description: >-
            Output only. The URI to navigate to in order to manage the
            installation associated with this GitHubConfig.
          readOnly: true
          type: string
    OAuthCredential:
      id: OAuthCredential
      description: >-
        Represents an OAuth token of the account that authorized the Connection,
        and associated metadata.
      type: object
      properties:
        oauthTokenSecretVersion:
          description: >-
            Required. A SecretManager resource containing the OAuth token that
            authorizes the connection. Format:
            `projects/*/secrets/*/versions/*`.
          type: string
        username:
          description: Output only. The username associated with this token.
          readOnly: true
          type: string
    GitHubEnterpriseConfig:
      id: GitHubEnterpriseConfig
      description: Configuration for connections to an instance of GitHub Enterprise.
      type: object
      properties:
        hostUri:
          description: >-
            Required. The URI of the GitHub Enterprise host this connection is
            for.
          type: string
        appId:
          description: Optional. ID of the GitHub App created from the manifest.
          type: string
          format: int64
        appSlug:
          description: Output only. The URL-friendly name of the GitHub App.
          readOnly: true
          type: string
        privateKeySecretVersion:
          description: >-
            Optional. SecretManager resource containing the private key of the
            GitHub App, formatted as `projects/*/secrets/*/versions/*`.
          type: string
        webhookSecretSecretVersion:
          description: >-
            Optional. SecretManager resource containing the webhook secret of
            the GitHub App, formatted as `projects/*/secrets/*/versions/*`.
          type: string
        appInstallationId:
          description: Optional. ID of the installation of the GitHub App.
          type: string
          format: int64
        installationUri:
          description: >-
            Output only. The URI to navigate to in order to manage the
            installation associated with this GitHubEnterpriseConfig.
          readOnly: true
          type: string
        serviceDirectoryConfig:
          description: >-
            Optional. Configuration for using Service Directory to privately
            connect to a GitHub Enterprise server. This should only be set if
            the GitHub Enterprise server is hosted on-premises and not reachable
            by public internet. If this field is left empty, calls to the GitHub
            Enterprise server will be made over the public internet.
          $ref: '#/components/schemas/ServiceDirectoryConfig'
        serverVersion:
          description: Output only. GitHub Enterprise version installed at the host_uri.
          readOnly: true
          type: string
        sslCaCertificate:
          description: Optional. SSL certificate to use for requests to GitHub Enterprise.
          type: string
    ServiceDirectoryConfig:
      id: ServiceDirectoryConfig
      description: >-
        ServiceDirectoryConfig represents Service Directory configuration for a
        connection.
      type: object
      properties:
        service:
          description: >-
            Required. The Service Directory service name. Format:
            projects/{project}/locations/{location}/namespaces/{namespace}/services/{service}.
          type: string
    GitLabConfig:
      id: GitLabConfig
      description: Configuration for connections to gitlab.com.
      type: object
      properties:
        webhookSecretSecretVersion:
          description: >-
            Required. Immutable. SecretManager resource containing the webhook
            secret of a GitLab project, formatted as
            `projects/*/secrets/*/versions/*`. This is used to validate
            webhooks.
          type: string
        readAuthorizerCredential:
          description: >-
            Required. A GitLab personal access token with the minimum `read_api`
            scope access and a minimum role of `reporter`. The GitLab Projects
            visible to this Personal Access Token will control which Projects
            Developer Connect has access to.
          $ref: '#/components/schemas/UserCredential'
        authorizerCredential:
          description: >-
            Required. A GitLab personal access token with the minimum `api`
            scope access and a minimum role of `maintainer`. The GitLab Projects
            visible to this Personal Access Token will control which Projects
            Developer Connect has access to.
          $ref: '#/components/schemas/UserCredential'
    UserCredential:
      id: UserCredential
      description: >-
        Represents a personal access token that authorized the Connection, and
        associated metadata.
      type: object
      properties:
        userTokenSecretVersion:
          description: >-
            Required. A SecretManager resource containing the user token that
            authorizes the Developer Connect connection. Format:
            `projects/*/secrets/*/versions/*`.
          type: string
        username:
          description: Output only. The username associated with this token.
          readOnly: true
          type: string
    GitLabEnterpriseConfig:
      id: GitLabEnterpriseConfig
      description: Configuration for connections to an instance of GitLab Enterprise.
      type: object
      properties:
        hostUri:
          description: >-
            Required. The URI of the GitLab Enterprise host this connection is
            for.
          type: string
        webhookSecretSecretVersion:
          description: >-
            Required. Immutable. SecretManager resource containing the webhook
            secret of a GitLab project, formatted as
            `projects/*/secrets/*/versions/*`. This is used to validate
            webhooks.
          type: string
        readAuthorizerCredential:
          description: >-
            Required. A GitLab personal access token with the minimum `read_api`
            scope access and a minimum role of `reporter`. The GitLab Projects
            visible to this Personal Access Token will control which Projects
            Developer Connect has access to.
          $ref: '#/components/schemas/UserCredential'
        authorizerCredential:
          description: >-
            Required. A GitLab personal access token with the minimum `api`
            scope access and a minimum role of `maintainer`. The GitLab Projects
            visible to this Personal Access Token will control which Projects
            Developer Connect has access to.
          $ref: '#/components/schemas/UserCredential'
        serviceDirectoryConfig:
          description: >-
            Optional. Configuration for using Service Directory to privately
            connect to a GitLab Enterprise instance. This should only be set if
            the GitLab Enterprise server is hosted on-premises and not reachable
            by public internet. If this field is left empty, calls to the GitLab
            Enterprise server will be made over the public internet.
          $ref: '#/components/schemas/ServiceDirectoryConfig'
        sslCaCertificate:
          description: >-
            Optional. SSL Certificate Authority certificate to use for requests
            to GitLab Enterprise instance.
          type: string
        serverVersion:
          description: >-
            Output only. Version of the GitLab Enterprise server running on the
            `host_uri`.
          readOnly: true
          type: string
    BitbucketDataCenterConfig:
      id: BitbucketDataCenterConfig
      description: Configuration for connections to an instance of Bitbucket Data Center.
      type: object
      properties:
        hostUri:
          description: >-
            Required. The URI of the Bitbucket Data Center host this connection
            is for.
          type: string
        webhookSecretSecretVersion:
          description: >-
            Required. Immutable. SecretManager resource containing the webhook
            secret used to verify webhook events, formatted as
            `projects/*/secrets/*/versions/*`. This is used to validate
            webhooks.
          type: string
        readAuthorizerCredential:
          description: >-
            Required. An http access token with the minimum `Repository read`
            access. It's recommended to use a system account to generate the
            credentials.
          $ref: '#/components/schemas/UserCredential'
        authorizerCredential:
          description: >-
            Required. An http access token with the minimum `Repository admin`
            scope access. This is needed to create webhooks. It's recommended to
            use a system account to generate these credentials.
          $ref: '#/components/schemas/UserCredential'
        serviceDirectoryConfig:
          description: >-
            Optional. Configuration for using Service Directory to privately
            connect to a Bitbucket Data Center instance. This should only be set
            if the Bitbucket Data Center is hosted on-premises and not reachable
            by public internet. If this field is left empty, calls to the
            Bitbucket Data Center will be made over the public internet.
          $ref: '#/components/schemas/ServiceDirectoryConfig'
        sslCaCertificate:
          description: >-
            Optional. SSL certificate authority to trust when making requests to
            Bitbucket Data Center.
          type: string
        serverVersion:
          description: >-
            Output only. Version of the Bitbucket Data Center server running on
            the `host_uri`.
          readOnly: true
          type: string
    BitbucketCloudConfig:
      id: BitbucketCloudConfig
      description: Configuration for connections to an instance of Bitbucket Cloud.
      type: object
      properties:
        workspace:
          description: >-
            Required. The Bitbucket Cloud Workspace ID to be connected to Google
            Cloud Platform.
          type: string
        webhookSecretSecretVersion:
          description: >-
            Required. Immutable. SecretManager resource containing the webhook
            secret used to verify webhook events, formatted as
            `projects/*/secrets/*/versions/*`. This is used to validate and
            create webhooks.
          type: string
        readAuthorizerCredential:
          description: >-
            Required. An access token with the minimum `repository` access. It
            can either be a workspace, project or repository access token. It's
            recommended to use a system account to generate the credentials.
          $ref: '#/components/schemas/UserCredential'
        authorizerCredential:
          description: >-
            Required. An access token with the minimum `repository`,
            `pullrequest` and `webhook` scope access. It can either be a
            workspace, project or repository access token. This is needed to
            create webhooks. It's recommended to use a system account to
            generate these credentials.
          $ref: '#/components/schemas/UserCredential'
    InstallationState:
      id: InstallationState
      description: >-
        Describes stage and necessary actions to be taken by the user to
        complete the installation. Used for GitHub and GitHub Enterprise based
        connections.
      type: object
      properties:
        stage:
          description: Output only. Current step of the installation process.
          readOnly: true
          type: string
          enumDescriptions:
            - No stage specified.
            - >-
              Only for GitHub Enterprise. An App creation has been requested.
              The user needs to confirm the creation in their GitHub enterprise
              host.
            - User needs to authorize the GitHub (or Enterprise) App via OAuth.
            - >-
              User needs to follow the link to install the GitHub (or
              Enterprise) App.
            - Installation process has been completed.
          enum:
            - STAGE_UNSPECIFIED
            - PENDING_CREATE_APP
            - PENDING_USER_OAUTH
            - PENDING_INSTALL_APP
            - COMPLETE
        message:
          description: >-
            Output only. Message of what the user should do next to continue the
            installation. Empty string if the installation is already complete.
          readOnly: true
          type: string
        actionUri:
          description: >-
            Output only. Link to follow for next action. Empty string if the
            installation is already complete.
          readOnly: true
          type: string
    CryptoKeyConfig:
      id: CryptoKeyConfig
      description: >-
        The crypto key configuration. This field is used by the Customer-managed
        encryption keys (CMEK) feature.
      type: object
      properties:
        keyReference:
          description: >-
            Required. The name of the key which is used to encrypt/decrypt
            customer data. For key in Cloud KMS, the key should be in the format
            of `projects/*/locations/*/keyRings/*/cryptoKeys/*`.
          type: string
    GitProxyConfig:
      id: GitProxyConfig
      description: The git proxy configuration.
      type: object
      properties:
        enabled:
          description: >-
            Optional. Setting this to true allows the git proxy to be used for
            performing git operations on the repositories linked in the
            connection.
          type: boolean
    GitRepositoryLink:
      id: GitRepositoryLink
      description: Message describing the GitRepositoryLink object
      type: object
      properties:
        name:
          description: >-
            Identifier. Resource name of the repository, in the format
            `projects/*/locations/*/connections/*/gitRepositoryLinks/*`.
          type: string
        cloneUri:
          description: Required. Git Clone URI.
          type: string
        createTime:
          description: Output only. [Output only] Create timestamp
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. [Output only] Update timestamp
          readOnly: true
          type: string
          format: google-datetime
        deleteTime:
          description: Output only. [Output only] Delete timestamp
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: Optional. Labels as key value pairs
          type: object
          additionalProperties:
            type: string
        etag:
          description: >-
            Optional. This checksum is computed by the server based on the value
            of other fields, and may be sent on update and delete requests to
            ensure the client has an up-to-date value before proceeding.
          type: string
        reconciling:
          description: >-
            Output only. Set to true when the connection is being set up or
            updated in the background.
          readOnly: true
          type: boolean
        annotations:
          description: Optional. Allows clients to store small amounts of arbitrary data.
          type: object
          additionalProperties:
            type: string
        uid:
          description: >-
            Output only. A system-assigned unique identifier for the
            GitRepositoryLink.
          readOnly: true
          type: string
        webhookId:
          description: Output only. External ID of the webhook created for the repository.
          readOnly: true
          type: string
        gitProxyUri:
          description: >-
            Output only. URI to access the linked repository through the Git
            Proxy. This field is only populated if the git proxy is enabled for
            the connection.
          readOnly: true
          type: string
    ListGitRepositoryLinksResponse:
      id: ListGitRepositoryLinksResponse
      description: Message for response to listing GitRepositoryLinks
      type: object
      properties:
        gitRepositoryLinks:
          description: The list of GitRepositoryLinks
          type: array
          items:
            $ref: '#/components/schemas/GitRepositoryLink'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    FetchReadWriteTokenRequest:
      id: FetchReadWriteTokenRequest
      description: Message for fetching SCM read/write token.
      type: object
      properties: {}
    FetchReadWriteTokenResponse:
      id: FetchReadWriteTokenResponse
      description: Message for responding to get read/write token.
      type: object
      properties:
        token:
          description: The token content.
          type: string
        expirationTime:
          description: Expiration timestamp. Can be empty if unknown or non-expiring.
          type: string
          format: google-datetime
        gitUsername:
          description: >-
            The git_username to specify when making a git clone with the token.
            For example, for GitHub GitRepositoryLinks, this would be
            "x-access-token"
          type: string
    FetchReadTokenRequest:
      id: FetchReadTokenRequest
      description: Message for fetching SCM read token.
      type: object
      properties: {}
    FetchReadTokenResponse:
      id: FetchReadTokenResponse
      description: Message for responding to get read token.
      type: object
      properties:
        token:
          description: The token content.
          type: string
        expirationTime:
          description: Expiration timestamp. Can be empty if unknown or non-expiring.
          type: string
          format: google-datetime
        gitUsername:
          description: >-
            The git_username to specify when making a git clone with the token.
            For example, for GitHub GitRepositoryLinks, this would be
            "x-access-token"
          type: string
    FetchLinkableGitRepositoriesResponse:
      id: FetchLinkableGitRepositoriesResponse
      description: Response message for FetchLinkableGitRepositories.
      type: object
      properties:
        linkableGitRepositories:
          description: The git repositories that can be linked to the connection.
          type: array
          items:
            $ref: '#/components/schemas/LinkableGitRepository'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
    LinkableGitRepository:
      id: LinkableGitRepository
      description: >-
        LinkableGitRepository represents a git repository that can be linked to
        a connection.
      type: object
      properties:
        cloneUri:
          description: The clone uri of the repository.
          type: string
    FetchGitHubInstallationsResponse:
      id: FetchGitHubInstallationsResponse
      description: Response of fetching github installations.
      type: object
      properties:
        installations:
          description: >-
            List of installations available to the OAuth user (for github.com)
            or all the installations (for GitHub enterprise).
          type: array
          items:
            $ref: '#/components/schemas/Installation'
    Installation:
      id: Installation
      description: Represents an installation of the GitHub App.
      type: object
      properties:
        id:
          description: ID of the installation in GitHub.
          type: string
          format: int64
        name:
          description: Name of the GitHub user or organization that owns this installation.
          type: string
        type:
          description: Either "user" or "organization".
          type: string
    FetchGitRefsResponse:
      id: FetchGitRefsResponse
      description: Response for fetching git refs.
      type: object
      properties:
        refNames:
          description: Name of the refs fetched.
          type: array
          items:
            type: string
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
    ListAccountConnectorsResponse:
      id: ListAccountConnectorsResponse
      description: Message for response to listing AccountConnectors
      type: object
      properties:
        accountConnectors:
          description: The list of AccountConnectors
          type: array
          items:
            $ref: '#/components/schemas/AccountConnector'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    AccountConnector:
      id: AccountConnector
      description: >-
        AccountConnector encapsulates what a platform administrator needs to
        configure for users to connect to the service providers, which includes,
        among other fields, the OAuth client ID, client secret, and
        authorization and token endpoints.
      type: object
      properties:
        providerOauthConfig:
          description: Provider OAuth config.
          $ref: '#/components/schemas/ProviderOAuthConfig'
        name:
          description: >-
            Identifier. The resource name of the accountConnector, in the format
            `projects/{project}/locations/{location}/accountConnectors/{account_connector_id}`.
          type: string
        createTime:
          description: Output only. The timestamp when the accountConnector was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The timestamp when the accountConnector was updated.
          readOnly: true
          type: string
          format: google-datetime
        annotations:
          description: Optional. Allows users to store small amounts of arbitrary data.
          type: object
          additionalProperties:
            type: string
        etag:
          description: >-
            Optional. This checksum is computed by the server based on the value
            of other fields, and may be sent on update and delete requests to
            ensure the client has an up-to-date value before proceeding.
          type: string
        labels:
          description: Optional. Labels as key value pairs
          type: object
          additionalProperties:
            type: string
        oauthStartUri:
          description: Output only. Start OAuth flow by clicking on this URL.
          readOnly: true
          type: string
    ProviderOAuthConfig:
      id: ProviderOAuthConfig
      description: ProviderOAuthConfig is the OAuth config for a provider.
      type: object
      properties:
        systemProviderId:
          description: Immutable. Developer Connect provided OAuth.
          type: string
          enumDescriptions:
            - No system provider specified.
            - >-
              GitHub provider. Scopes can be found at
              https://docs.github.com/en/apps/oauth-apps/building-oauth-apps/scopes-for-oauth-apps#available-scopes
            - >-
              GitLab provider. Scopes can be found at
              https://docs.gitlab.com/user/profile/personal_access_tokens/#personal-access-token-scopes
            - >-
              Google provider. Recommended scopes:
              "https://www.googleapis.com/auth/drive.readonly",
              "https://www.googleapis.com/auth/documents.readonly"
            - >-
              Sentry provider. Scopes can be found at
              https://docs.sentry.io/api/permissions/
            - Rovo provider. Must select the "rovo" scope.
            - New Relic provider. No scopes are allowed.
            - Datastax provider. No scopes are allowed.
            - Dynatrace provider.
          enum:
            - SYSTEM_PROVIDER_UNSPECIFIED
            - GITHUB
            - GITLAB
            - GOOGLE
            - SENTRY
            - ROVO
            - NEW_RELIC
            - DATASTAX
            - DYNATRACE
        scopes:
          description: >-
            Required. User selected scopes to apply to the Oauth config In the
            event of changing scopes, user records under AccountConnector will
            be deleted and users will re-auth again.
          type: array
          items:
            type: string
    FetchAccessTokenRequest:
      id: FetchAccessTokenRequest
      description: Message for fetching an OAuth access token.
      type: object
      properties: {}
    FetchAccessTokenResponse:
      id: FetchAccessTokenResponse
      description: Message for responding to getting an OAuth access token.
      type: object
      properties:
        token:
          description: The token content.
          type: string
        expirationTime:
          description: Expiration timestamp. Can be empty if unknown or non-expiring.
          type: string
          format: google-datetime
        scopes:
          description: The scopes of the access token.
          type: array
          items:
            type: string
        exchangeError:
          description: >-
            The error resulted from exchanging OAuth tokens from the service
            provider.
          $ref: '#/components/schemas/ExchangeError'
    ExchangeError:
      id: ExchangeError
      description: Message for representing an error from exchanging OAuth tokens.
      type: object
      properties:
        code:
          description: https://datatracker.ietf.org/doc/html/rfc6749#section-5.2 - error
          type: string
        description:
          description: >-
            https://datatracker.ietf.org/doc/html/rfc6749#section-5.2 -
            error_description
          type: string
    ListUsersResponse:
      id: ListUsersResponse
      description: Message for response to listing Users
      type: object
      properties:
        users:
          description: The list of Users
          type: array
          items:
            $ref: '#/components/schemas/User'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    User:
      id: User
      description: >-
        User represents a user connected to the service providers through a
        AccountConnector.
      type: object
      properties:
        name:
          description: >-
            Identifier. Resource name of the user, in the format
            `projects/*/locations/*/accountConnectors/*/users/*`.
          type: string
        displayName:
          description: >-
            Output only. Developer Connect automatically converts user identity
            to some human readable description, e.g., email address.
          readOnly: true
          type: string
        createTime:
          description: Output only. The timestamp when the user was created.
          readOnly: true
          type: string
          format: google-datetime
        lastTokenRequestTime:
          description: Output only. The timestamp when the token was last requested.
          readOnly: true
          type: string
          format: google-datetime
    ListInsightsConfigsResponse:
      id: ListInsightsConfigsResponse
      description: Request for response to listing InsightsConfigs.
      type: object
      properties:
        insightsConfigs:
          description: The list of InsightsConfigs.
          type: array
          items:
            $ref: '#/components/schemas/InsightsConfig'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    InsightsConfig:
      id: InsightsConfig
      description: >-
        The InsightsConfig resource is the core configuration object to capture
        events from your Software Development Lifecycle. It acts as the central
        hub for managing how Developer connect understands your application, its
        runtime environments, and the artifacts deployed within them.
      type: object
      properties:
        appHubApplication:
          description: >-
            Optional. The name of the App Hub Application. Format:
            projects/{project}/locations/{location}/applications/{application}
          type: string
        name:
          description: >-
            Identifier. The name of the InsightsConfig. Format:
            projects/{project}/locations/{location}/insightsConfigs/{insightsConfig}
          type: string
        createTime:
          description: Output only. [Output only] Create timestamp
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. [Output only] Update timestamp
          readOnly: true
          type: string
          format: google-datetime
        runtimeConfigs:
          description: >-
            Output only. The runtime configurations where the application is
            deployed.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/RuntimeConfig'
        artifactConfigs:
          description: >-
            Optional. The artifact configurations of the artifacts that are
            deployed.
          type: array
          items:
            $ref: '#/components/schemas/ArtifactConfig'
        state:
          description: Optional. Output only. The state of the InsightsConfig.
          type: string
          enumDescriptions:
            - No state specified.
            - >-
              The InsightsConfig is pending application discovery/runtime
              discovery.
            - The initial discovery process is complete.
            - The InsightsConfig is in an error state.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - COMPLETE
            - ERROR
        annotations:
          description: >-
            Optional. User specified annotations. See
            https://google.aip.dev/148#annotations for more details such as
            format and size limitations.
          type: object
          additionalProperties:
            type: string
        labels:
          description: Optional. Set of labels associated with an InsightsConfig.
          type: object
          additionalProperties:
            type: string
        reconciling:
          description: >-
            Output only. Reconciling
            (https://google.aip.dev/128#reconciliation). Set to true if the
            current state of InsightsConfig does not match the user's intended
            state, and the service is actively updating the resource to
            reconcile them. This can happen due to user-triggered updates or
            system actions like failover or maintenance.
          readOnly: true
          type: boolean
        errors:
          description: >-
            Output only. Any errors that occurred while setting up the
            InsightsConfig. Each error will be in the format: `field_name:
            error_message`, e.g. GetAppHubApplication: Permission denied while
            getting App Hub application. Please grant permissions to the P4SA.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Status'
    RuntimeConfig:
      id: RuntimeConfig
      description: RuntimeConfig represents the runtimes where the application is deployed.
      type: object
      properties:
        gkeWorkload:
          description: Output only. Google Kubernetes Engine runtime.
          readOnly: true
          $ref: '#/components/schemas/GKEWorkload'
        appHubWorkload:
          description: Output only. App Hub Workload.
          readOnly: true
          $ref: '#/components/schemas/AppHubWorkload'
        uri:
          description: >-
            Required. Immutable. The URI of the runtime configuration. For GKE,
            this is the cluster name. For Cloud Run, this is the service name.
          type: string
        state:
          description: Output only. The state of the Runtime.
          readOnly: true
          type: string
          enumDescriptions:
            - No state specified.
            - The runtime configuration has been linked to the InsightsConfig.
            - The runtime configuration has been unlinked to the InsightsConfig.
          enum:
            - STATE_UNSPECIFIED
            - LINKED
            - UNLINKED
    GKEWorkload:
      id: GKEWorkload
      description: GKEWorkload represents the Google Kubernetes Engine runtime.
      type: object
      properties:
        cluster:
          description: >-
            Required. Immutable. The name of the GKE cluster. Format:
            `projects/{project}/locations/{location}/clusters/{cluster}`.
          type: string
        deployment:
          description: >-
            Output only. The name of the GKE deployment. Format:
            `projects/{project}/locations/{location}/clusters/{cluster}/namespaces/{namespace}/deployments/{deployment}`.
          readOnly: true
          type: string
    AppHubWorkload:
      id: AppHubWorkload
      description: AppHubWorkload represents the App Hub Workload.
      type: object
      properties:
        workload:
          description: >-
            Required. Output only. Immutable. The name of the App Hub Workload.
            Format:
            `projects/{project}/locations/{location}/applications/{application}/workloads/{workload}`.
          readOnly: true
          type: string
        criticality:
          description: Output only. The criticality of the App Hub Workload.
          readOnly: true
          type: string
        environment:
          description: Output only. The environment of the App Hub Workload.
          readOnly: true
          type: string
    ArtifactConfig:
      id: ArtifactConfig
      description: The artifact config of the artifact that is deployed.
      type: object
      properties:
        googleArtifactRegistry:
          description: Optional. Set if the artifact is stored in Artifact registry.
          $ref: '#/components/schemas/GoogleArtifactRegistry'
        googleArtifactAnalysis:
          description: >-
            Optional. Set if the artifact metadata is stored in Artifact
            analysis.
          $ref: '#/components/schemas/GoogleArtifactAnalysis'
        uri:
          description: >-
            Required. Immutable. The URI of the artifact that is deployed. e.g.
            `us-docker.pkg.dev/my-project/my-repo/image`. The URI does not
            include the tag / digest because it captures a lineage of artifacts.
          type: string
    GoogleArtifactRegistry:
      id: GoogleArtifactRegistry
      description: Google Artifact Registry configurations.
      type: object
      properties:
        projectId:
          description: Required. The host project of Artifact Registry.
          type: string
        artifactRegistryPackage:
          description: Required. Immutable. The name of the artifact registry package.
          type: string
    GoogleArtifactAnalysis:
      id: GoogleArtifactAnalysis
      description: Google Artifact Analysis configurations.
      type: object
      properties:
        projectId:
          description: >-
            Required. The project id of the project where the provenance is
            stored.
          type: string
    ProcessGitHubEnterpriseWebhookRequest:
      id: ProcessGitHubEnterpriseWebhookRequest
      description: >-
        RPC request object accepted by the ProcessGitHubEnterpriseWebhook RPC
        method.
      type: object
      properties:
        body:
          description: Required. HTTP request body.
          $ref: '#/components/schemas/HttpBody'
    HttpBody:
      id: HttpBody
      description: >-
        Message that represents an arbitrary HTTP body. It should only be used
        for payload formats that can't be represented as JSON, such as raw
        binary or an HTML page. This message can be used both in streaming and
        non-streaming API methods in the request as well as the response. It can
        be used as a top-level request field, which is convenient if one wants
        to extract parameters from either the URL or HTTP template into the
        request fields and also want access to the raw HTTP body. Example:
        message GetResourceRequest { // A unique request id. string request_id =
        1; // The raw HTTP body is bound to this field. google.api.HttpBody
        http_body = 2; } service ResourceService { rpc
        GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc
        UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); }
        Example with streaming methods: service CaldavService { rpc
        GetCalendar(stream google.api.HttpBody) returns (stream
        google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody)
        returns (stream google.api.HttpBody); } Use of this type only changes
        how the request and response bodies are handled, all other features will
        continue to work unchanged.
      type: object
      properties:
        contentType:
          description: >-
            The HTTP Content-Type header value specifying the content type of
            the body.
          type: string
        data:
          description: The HTTP request/response body as raw binary.
          type: string
          format: byte
        extensions:
          description: >-
            Application specific response metadata. Must be set in the first
            response for streaming APIs.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    ProcessGitLabEnterpriseWebhookRequest:
      id: ProcessGitLabEnterpriseWebhookRequest
      description: >-
        RPC request object accepted by the ProcessGitLabEnterpriseWebhook RPC
        method.
      type: object
      properties:
        body:
          description: Required. HTTP request body.
          $ref: '#/components/schemas/HttpBody'
    ProcessGitLabWebhookRequest:
      id: ProcessGitLabWebhookRequest
      description: RPC request object accepted by the ProcessGitLabWebhook RPC method.
      type: object
      properties:
        body:
          description: Required. HTTP request body.
          $ref: '#/components/schemas/HttpBody'
    ProcessBitbucketDataCenterWebhookRequest:
      id: ProcessBitbucketDataCenterWebhookRequest
      description: >-
        RPC request object accepted by the ProcessBitbucketDataCenterWebhook RPC
        method.
      type: object
      properties:
        body:
          description: Required. HTTP request body.
          $ref: '#/components/schemas/HttpBody'
    ProcessBitbucketCloudWebhookRequest:
      id: ProcessBitbucketCloudWebhookRequest
      description: >-
        RPC request object accepted by the ProcessBitbucketCloudWebhook RPC
        method.
      type: object
      properties:
        body:
          description: Required. HTTP request body.
          $ref: '#/components/schemas/HttpBody'
    ListLocationsResponse:
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Location:
      id: Location
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
          additionalProperties:
            type: string
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    OperationMetadata:
      id: OperationMetadata
      description: Represents the metadata of the long-running operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        target:
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        requestedCancellation:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have been cancelled successfully
            have google.longrunning.Operation.error value with a
            google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    locations:
      id: google.developerconnect.locations
      name: locations
      title: Locations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: google.developerconnect.operations
      name: operations
      title: Operations
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    connections:
      id: google.developerconnect.connections
      name: connections
      title: Connections
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connections/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.connections
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connections/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        processgithub_enterprise_webhook:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connections:processGitHubEnterpriseWebhook/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/connections/methods/get'
          - $ref: '#/components/x-stackQL-resources/connections/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/connections/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/connections/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/connections/methods/delete'
    linkable_git_repositories:
      id: google.developerconnect.linkable_git_repositories
      name: linkable_git_repositories
      title: Linkable_git_repositories
      methods:
        fetch_linkable_git_repositories:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}:fetchLinkableGitRepositories/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/linkable_git_repositories/methods/fetch_linkable_git_repositories
        insert: []
        update: []
        replace: []
        delete: []
    github_installations:
      id: google.developerconnect.github_installations
      name: github_installations
      title: Github_installations
      methods:
        fetchgithub_installations:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}:fetchGitHubInstallations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/github_installations/methods/fetchgithub_installations
        insert: []
        update: []
        replace: []
        delete: []
    git_repository_links:
      id: google.developerconnect.git_repository_links
      name: git_repository_links
      title: Git_repository_links
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1gitRepositoryLinks/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1gitRepositoryLinks/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.gitRepositoryLinks
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1gitRepositoryLinks~1{gitRepositoryLinksId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1gitRepositoryLinks~1{gitRepositoryLinksId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        processgitlab_enterprise_webhook:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1gitRepositoryLinks~1{gitRepositoryLinksId}:processGitLabEnterpriseWebhook/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        processgitlab_webhook:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1gitRepositoryLinks~1{gitRepositoryLinksId}:processGitLabWebhook/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        process_bitbucket_data_center_webhook:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1gitRepositoryLinks~1{gitRepositoryLinksId}:processBitbucketDataCenterWebhook/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        process_bitbucket_cloud_webhook:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1gitRepositoryLinks~1{gitRepositoryLinksId}:processBitbucketCloudWebhook/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/git_repository_links/methods/get'
          - $ref: '#/components/x-stackQL-resources/git_repository_links/methods/list'
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/git_repository_links/methods/create
        update: []
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/git_repository_links/methods/delete
    git_repository_links_read_write_token:
      id: google.developerconnect.git_repository_links_read_write_token
      name: git_repository_links_read_write_token
      title: Git_repository_links_read_write_token
      methods:
        fetch_read_write_token:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1gitRepositoryLinks~1{gitRepositoryLinksId}:fetchReadWriteToken/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/git_repository_links_read_write_token/methods/fetch_read_write_token
        insert: []
        update: []
        replace: []
        delete: []
    git_repository_links_read_token:
      id: google.developerconnect.git_repository_links_read_token
      name: git_repository_links_read_token
      title: Git_repository_links_read_token
      methods:
        fetch_read_token:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1gitRepositoryLinks~1{gitRepositoryLinksId}:fetchReadToken/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/git_repository_links_read_token/methods/fetch_read_token
        insert: []
        update: []
        replace: []
        delete: []
    git_repository_links_git_refs:
      id: google.developerconnect.git_repository_links_git_refs
      name: git_repository_links_git_refs
      title: Git_repository_links_git_refs
      methods:
        fetch_git_refs:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1gitRepositoryLinks~1{gitRepositoryLinksId}:fetchGitRefs/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/git_repository_links_git_refs/methods/fetch_git_refs
        insert: []
        update: []
        replace: []
        delete: []
    account_connectors:
      id: google.developerconnect.account_connectors
      name: account_connectors
      title: Account_connectors
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1accountConnectors/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.accountConnectors
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1accountConnectors/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1accountConnectors~1{accountConnectorsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1accountConnectors~1{accountConnectorsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1accountConnectors~1{accountConnectorsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/account_connectors/methods/get'
          - $ref: '#/components/x-stackQL-resources/account_connectors/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/account_connectors/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/account_connectors/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/account_connectors/methods/delete'
    users_access_token:
      id: google.developerconnect.users_access_token
      name: users_access_token
      title: Users_access_token
      methods:
        fetch_access_token:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1accountConnectors~1{accountConnectorsId}~1users:fetchAccessToken/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/users_access_token/methods/fetch_access_token
        insert: []
        update: []
        replace: []
        delete: []
    users:
      id: google.developerconnect.users
      name: users
      title: Users
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1accountConnectors~1{accountConnectorsId}~1users/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.users
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1accountConnectors~1{accountConnectorsId}~1users~1{usersId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/users/methods/list'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/users/methods/delete'
    users_self:
      id: google.developerconnect.users_self
      name: users_self
      title: Users_self
      methods:
        fetch_self:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1accountConnectors~1{accountConnectorsId}~1users:fetchSelf/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_self:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1accountConnectors~1{accountConnectorsId}~1users:deleteSelf/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/users_self/methods/fetch_self'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/users_self/methods/delete_self'
    insights_configs:
      id: google.developerconnect.insights_configs
      name: insights_configs
      title: Insights_configs
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1insightsConfigs/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.insightsConfigs
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1insightsConfigs/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1insightsConfigs~1{insightsConfigsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1insightsConfigs~1{insightsConfigsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1insightsConfigs~1{insightsConfigsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/insights_configs/methods/get'
          - $ref: '#/components/x-stackQL-resources/insights_configs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/insights_configs/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/insights_configs/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/insights_configs/methods/delete'
paths:
  /v1/projects/{projectsId}/locations:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Lists information about the supported locations for this service.
      operationId: developerconnect.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: extraLocationTypes
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: developerconnect.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: developerconnect.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: developerconnect.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: developerconnect.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        `1`, corresponding to `Code.CANCELLED`.
      operationId: developerconnect.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/connections:
    parameters: *ref_1
    get:
      description: Lists Connections in a given project and location.
      operationId: developerconnect.projects.locations.connections.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new Connection in a given project and location.
      operationId: developerconnect.projects.locations.connections.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connection'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: connectionId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single Connection.
      operationId: developerconnect.projects.locations.connections.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
    patch:
      description: Updates the parameters of a single Connection.
      operationId: developerconnect.projects.locations.connections.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connection'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
    delete:
      description: Deletes a single Connection.
      operationId: developerconnect.projects.locations.connections.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}:fetchLinkableGitRepositories:
    parameters: *ref_1
    get:
      description: >-
        FetchLinkableGitRepositories returns a list of git repositories from an
        SCM that are available to be added to a Connection.
      operationId: >-
        developerconnect.projects.locations.connections.fetchLinkableGitRepositories
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchLinkableGitRepositoriesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}:fetchGitHubInstallations:
    parameters: *ref_1
    get:
      description: >-
        FetchGitHubInstallations returns the list of GitHub Installations that
        are available to be added to a Connection. For github.com, only
        installations accessible to the authorizer token are returned. For
        GitHub Enterprise, all installations are returned.
      operationId: developerconnect.projects.locations.connections.fetchGitHubInstallations
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchGitHubInstallationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/connections:processGitHubEnterpriseWebhook:
    parameters: *ref_1
    post:
      description: >-
        ProcessGitHubEnterpriseWebhook is called by the external GitHub
        Enterprise instances for notifying events.
      operationId: >-
        developerconnect.projects.locations.connections.processGitHubEnterpriseWebhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessGitHubEnterpriseWebhookRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/gitRepositoryLinks:
    parameters: *ref_1
    post:
      description: >-
        Creates a GitRepositoryLink. Upon linking a Git Repository, Developer
        Connect will configure the Git Repository to send webhook events to
        Developer Connect. Connections that use Firebase GitHub Application will
        have events forwarded to the Firebase service. All other Connections
        will have events forwarded to Cloud Build.
      operationId: >-
        developerconnect.projects.locations.connections.gitRepositoryLinks.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitRepositoryLink'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: query
          name: gitRepositoryLinkId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
    get:
      description: Lists GitRepositoryLinks in a given project, location, and connection.
      operationId: developerconnect.projects.locations.connections.gitRepositoryLinks.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGitRepositoryLinksResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/gitRepositoryLinks/{gitRepositoryLinksId}:
    parameters: *ref_1
    delete:
      description: Deletes a single GitRepositoryLink.
      operationId: >-
        developerconnect.projects.locations.connections.gitRepositoryLinks.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: path
          name: gitRepositoryLinksId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
    get:
      description: Gets details of a single GitRepositoryLink.
      operationId: developerconnect.projects.locations.connections.gitRepositoryLinks.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRepositoryLink'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: path
          name: gitRepositoryLinksId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/gitRepositoryLinks/{gitRepositoryLinksId}:fetchReadWriteToken:
    parameters: *ref_1
    post:
      description: Fetches read/write token of a given gitRepositoryLink.
      operationId: >-
        developerconnect.projects.locations.connections.gitRepositoryLinks.fetchReadWriteToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchReadWriteTokenRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchReadWriteTokenResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: path
          name: gitRepositoryLinksId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/gitRepositoryLinks/{gitRepositoryLinksId}:fetchReadToken:
    parameters: *ref_1
    post:
      description: Fetches read token of a given gitRepositoryLink.
      operationId: >-
        developerconnect.projects.locations.connections.gitRepositoryLinks.fetchReadToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchReadTokenRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchReadTokenResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: path
          name: gitRepositoryLinksId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/gitRepositoryLinks/{gitRepositoryLinksId}:fetchGitRefs:
    parameters: *ref_1
    get:
      description: Fetch the list of branches or tags for a given repository.
      operationId: >-
        developerconnect.projects.locations.connections.gitRepositoryLinks.fetchGitRefs
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchGitRefsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: path
          name: gitRepositoryLinksId
          required: true
          schema:
            type: string
        - in: query
          name: refType
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/gitRepositoryLinks/{gitRepositoryLinksId}:processGitLabEnterpriseWebhook:
    parameters: *ref_1
    post:
      description: >-
        ProcessGitLabEnterpriseWebhook is called by the external GitLab
        Enterprise instances for notifying events.
      operationId: >-
        developerconnect.projects.locations.connections.gitRepositoryLinks.processGitLabEnterpriseWebhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessGitLabEnterpriseWebhookRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: path
          name: gitRepositoryLinksId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/gitRepositoryLinks/{gitRepositoryLinksId}:processGitLabWebhook:
    parameters: *ref_1
    post:
      description: ProcessGitLabWebhook is called by the GitLab.com for notifying events.
      operationId: >-
        developerconnect.projects.locations.connections.gitRepositoryLinks.processGitLabWebhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessGitLabWebhookRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: path
          name: gitRepositoryLinksId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/gitRepositoryLinks/{gitRepositoryLinksId}:processBitbucketDataCenterWebhook:
    parameters: *ref_1
    post:
      description: >-
        ProcessBitbucketDataCenterWebhook is called by the external Bitbucket
        Data Center instances for notifying events.
      operationId: >-
        developerconnect.projects.locations.connections.gitRepositoryLinks.processBitbucketDataCenterWebhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessBitbucketDataCenterWebhookRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: path
          name: gitRepositoryLinksId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/gitRepositoryLinks/{gitRepositoryLinksId}:processBitbucketCloudWebhook:
    parameters: *ref_1
    post:
      description: >-
        ProcessBitbucketCloudWebhook is called by the external Bitbucket Cloud
        instances for notifying events.
      operationId: >-
        developerconnect.projects.locations.connections.gitRepositoryLinks.processBitbucketCloudWebhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessBitbucketCloudWebhookRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: path
          name: gitRepositoryLinksId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/accountConnectors:
    parameters: *ref_1
    get:
      description: Lists AccountConnectors in a given project and location.
      operationId: developerconnect.projects.locations.accountConnectors.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccountConnectorsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new AccountConnector in a given project and location.
      operationId: developerconnect.projects.locations.accountConnectors.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountConnector'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: accountConnectorId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/accountConnectors/{accountConnectorsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single AccountConnector.
      operationId: developerconnect.projects.locations.accountConnectors.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountConnector'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: accountConnectorsId
          required: true
          schema:
            type: string
    patch:
      description: Updates the parameters of a single AccountConnector.
      operationId: developerconnect.projects.locations.accountConnectors.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountConnector'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: accountConnectorsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
    delete:
      description: Deletes a single AccountConnector.
      operationId: developerconnect.projects.locations.accountConnectors.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: accountConnectorsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/accountConnectors/{accountConnectorsId}/users:fetchAccessToken:
    parameters: *ref_1
    post:
      description: Fetches OAuth access token based on end user credentials.
      operationId: >-
        developerconnect.projects.locations.accountConnectors.users.fetchAccessToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchAccessTokenRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchAccessTokenResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: accountConnectorsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/accountConnectors/{accountConnectorsId}/users:
    parameters: *ref_1
    get:
      description: Lists Users in a given project, location, and account_connector.
      operationId: developerconnect.projects.locations.accountConnectors.users.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: accountConnectorsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/accountConnectors/{accountConnectorsId}/users/{usersId}:
    parameters: *ref_1
    delete:
      description: Deletes a single User.
      operationId: developerconnect.projects.locations.accountConnectors.users.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: accountConnectorsId
          required: true
          schema:
            type: string
        - in: path
          name: usersId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/accountConnectors/{accountConnectorsId}/users:fetchSelf:
    parameters: *ref_1
    get:
      description: Fetch the User based on the user credentials.
      operationId: developerconnect.projects.locations.accountConnectors.users.fetchSelf
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: accountConnectorsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/accountConnectors/{accountConnectorsId}/users:deleteSelf:
    parameters: *ref_1
    delete:
      description: Delete the User based on the user credentials.
      operationId: developerconnect.projects.locations.accountConnectors.users.deleteSelf
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: accountConnectorsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/insightsConfigs:
    parameters: *ref_1
    get:
      description: Lists InsightsConfigs in a given project and location.
      operationId: developerconnect.projects.locations.insightsConfigs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInsightsConfigsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new InsightsConfig in a given project and location.
      operationId: developerconnect.projects.locations.insightsConfigs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsightsConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: insightsConfigId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/insightsConfigs/{insightsConfigsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single Insight.
      operationId: developerconnect.projects.locations.insightsConfigs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsightsConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightsConfigsId
          required: true
          schema:
            type: string
    patch:
      description: Updates the parameters of a single InsightsConfig.
      operationId: developerconnect.projects.locations.insightsConfigs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsightsConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightsConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
    delete:
      description: Delete a single Insight.
      operationId: developerconnect.projects.locations.insightsConfigs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightsConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
