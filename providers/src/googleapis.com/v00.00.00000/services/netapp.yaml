openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: NetApp API
  description: >-
    Google Cloud NetApp Volumes is a fully-managed, cloud-based data storage
    service that provides advanced data management capabilities and highly
    scalable performance with global availability.
  version: v1
  x-discovery-doc-revision: '20250825'
  x-generated-date: '2025-08-28'
externalDocs:
  url: https://cloud.google.com/netapp/
servers:
  - url: https://netapp.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    ListOperationsResponse:
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Operation:
      id: Operation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    Status:
      id: Status
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    GoogleProtobufEmpty:
      id: GoogleProtobufEmpty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    CancelOperationRequest:
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
      type: object
      properties: {}
    ListStoragePoolsResponse:
      id: ListStoragePoolsResponse
      description: ListStoragePoolsResponse is the response to a ListStoragePoolsRequest.
      type: object
      properties:
        storagePools:
          description: The list of StoragePools
          type: array
          items:
            $ref: '#/components/schemas/StoragePool'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    StoragePool:
      id: StoragePool
      description: >-
        StoragePool is a container for volumes with a service level and
        capacity. Volumes can be created in a pool of sufficient available
        capacity. StoragePool capacity is what you are billed for.
      type: object
      properties:
        name:
          description: Identifier. Name of the storage pool
          type: string
        serviceLevel:
          description: Required. Service level of the storage pool
          type: string
          enumDescriptions:
            - Unspecified service level.
            - Premium service level.
            - Extreme service level.
            - Standard service level.
            - Flex service level.
          enum:
            - SERVICE_LEVEL_UNSPECIFIED
            - PREMIUM
            - EXTREME
            - STANDARD
            - FLEX
        capacityGib:
          description: Required. Capacity in GIB of the pool
          type: string
          format: int64
        volumeCapacityGib:
          description: >-
            Output only. Allocated size of all volumes in GIB in the storage
            pool
          readOnly: true
          type: string
          format: int64
        volumeCount:
          description: Output only. Volume count of the storage pool
          readOnly: true
          type: integer
          format: int32
        state:
          description: Output only. State of the storage pool
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified Storage Pool State
            - Storage Pool State is Ready
            - Storage Pool State is Creating
            - Storage Pool State is Deleting
            - Storage Pool State is Updating
            - Storage Pool State is Restoring
            - Storage Pool State is Disabled
            - Storage Pool State is Error
          enum:
            - STATE_UNSPECIFIED
            - READY
            - CREATING
            - DELETING
            - UPDATING
            - RESTORING
            - DISABLED
            - ERROR
        stateDetails:
          description: Output only. State details of the storage pool
          readOnly: true
          type: string
        createTime:
          description: Output only. Create time of the storage pool
          readOnly: true
          type: string
          format: google-datetime
        description:
          description: Optional. Description of the storage pool
          type: string
        labels:
          description: Optional. Labels as key value pairs
          type: object
          additionalProperties:
            type: string
        network:
          description: >-
            Required. VPC Network name. Format:
            projects/{project}/global/networks/{network}
          type: string
        activeDirectory:
          description: >-
            Optional. Specifies the Active Directory to be used for creating a
            SMB volume.
          type: string
        kmsConfig:
          description: Optional. Specifies the KMS config to be used for volume encryption.
          type: string
        ldapEnabled:
          description: Optional. Flag indicating if the pool is NFS LDAP enabled or not.
          type: boolean
        psaRange:
          description: >-
            Optional. This field is not implemented. The values provided in this
            field are ignored.
          type: string
        encryptionType:
          description: Output only. Specifies the current pool encryption key source.
          readOnly: true
          type: string
          enumDescriptions:
            - The source of the encryption key is not specified.
            - Google managed encryption key.
            - Customer managed encryption key, which is stored in KMS.
          enum:
            - ENCRYPTION_TYPE_UNSPECIFIED
            - SERVICE_MANAGED
            - CLOUD_KMS
        globalAccessAllowed:
          description: >-
            Deprecated. Used to allow SO pool to access AD or DNS server from
            other regions.
          deprecated: true
          type: boolean
        allowAutoTiering:
          description: >-
            Optional. True if the storage pool supports Auto Tiering enabled
            volumes. Default is false. Auto-tiering can be enabled after storage
            pool creation but it can't be disabled once enabled.
          type: boolean
        replicaZone:
          description: Optional. Specifies the replica zone for regional storagePool.
          type: string
        zone:
          description: Optional. Specifies the active zone for regional storagePool.
          type: string
        satisfiesPzs:
          description: Output only. Reserved for future use
          readOnly: true
          type: boolean
        satisfiesPzi:
          description: Output only. Reserved for future use
          readOnly: true
          type: boolean
        customPerformanceEnabled:
          description: >-
            Optional. True if using Independent Scaling of capacity and
            performance (Hyperdisk) By default set to false
          type: boolean
        totalThroughputMibps:
          description: Optional. Custom Performance Total Throughput of the pool (in MiBps)
          type: string
          format: int64
        totalIops:
          description: >-
            Optional. Custom Performance Total IOPS of the pool if not provided,
            it will be calculated based on the total_throughput_mibps
          type: string
          format: int64
        hotTierSizeGib:
          description: >-
            Optional. Total hot tier capacity for the Storage Pool. It is
            applicable only to Flex service level. It should be less than the
            minimum storage pool size and cannot be more than the current
            storage pool size. It cannot be decreased once set.
          type: string
          format: int64
        enableHotTierAutoResize:
          description: >-
            Optional. Flag indicating that the hot-tier threshold will be
            auto-increased by 10% of the hot-tier when it hits 100%. Default is
            true. The increment will kick in only if the new size after
            increment is still less than or equal to storage pool size.
          type: boolean
        qosType:
          description: Optional. QoS (Quality of Service) Type of the storage pool
          type: string
          enumDescriptions:
            - Unspecified QoS Type
            - QoS Type is Auto
            - QoS Type is Manual
          enum:
            - QOS_TYPE_UNSPECIFIED
            - AUTO
            - MANUAL
        availableThroughputMibps:
          description: Output only. Available throughput of the storage pool (in MiB/s).
          readOnly: true
          type: number
          format: double
    ValidateDirectoryServiceRequest:
      id: ValidateDirectoryServiceRequest
      description: >-
        ValidateDirectoryServiceRequest validates the directory service policy
        attached to the storage pool.
      type: object
      properties:
        directoryServiceType:
          description: Type of directory service policy attached to the storage pool.
          type: string
          enumDescriptions:
            - Directory service type is not specified.
            - Active directory policy attached to the storage pool.
          enum:
            - DIRECTORY_SERVICE_TYPE_UNSPECIFIED
            - ACTIVE_DIRECTORY
    SwitchActiveReplicaZoneRequest:
      id: SwitchActiveReplicaZoneRequest
      description: >-
        SwitchActiveReplicaZoneRequest switch the active/replica zone for a
        regional storagePool.
      type: object
      properties: {}
    ListVolumesResponse:
      id: ListVolumesResponse
      description: Message for response to listing Volumes
      type: object
      properties:
        volumes:
          description: The list of Volume
          type: array
          items:
            $ref: '#/components/schemas/Volume'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Volume:
      id: Volume
      description: Volume provides a filesystem that you can mount.
      type: object
      properties:
        name:
          description: Identifier. Name of the volume
          type: string
        state:
          description: Output only. State of the volume
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified Volume State
            - Volume State is Ready
            - Volume State is Creating
            - Volume State is Deleting
            - Volume State is Updating
            - Volume State is Restoring
            - Volume State is Disabled
            - Volume State is Error
            - >-
              Volume State is Preparing. Note that this is different from
              CREATING where CREATING means the volume is being created, while
              PREPARING means the volume is created and now being prepared for
              the replication.
            - Volume State is Read Only
          enum:
            - STATE_UNSPECIFIED
            - READY
            - CREATING
            - DELETING
            - UPDATING
            - RESTORING
            - DISABLED
            - ERROR
            - PREPARING
            - READ_ONLY
        stateDetails:
          description: Output only. State details of the volume
          readOnly: true
          type: string
        createTime:
          description: Output only. Create time of the volume
          readOnly: true
          type: string
          format: google-datetime
        shareName:
          description: Required. Share name of the volume
          type: string
        psaRange:
          description: >-
            Output only. This field is not implemented. The values provided in
            this field are ignored.
          readOnly: true
          type: string
        storagePool:
          description: Required. StoragePool name of the volume
          type: string
        network:
          description: >-
            Output only. VPC Network name. Format:
            projects/{project}/global/networks/{network}
          readOnly: true
          type: string
        serviceLevel:
          description: Output only. Service level of the volume
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified service level.
            - Premium service level.
            - Extreme service level.
            - Standard service level.
            - Flex service level.
          enum:
            - SERVICE_LEVEL_UNSPECIFIED
            - PREMIUM
            - EXTREME
            - STANDARD
            - FLEX
        capacityGib:
          description: Required. Capacity in GIB of the volume
          type: string
          format: int64
        exportPolicy:
          description: Optional. Export policy of the volume
          $ref: '#/components/schemas/ExportPolicy'
        protocols:
          description: Required. Protocols required for the volume
          type: array
          items:
            type: string
            enumDescriptions:
              - Unspecified protocol
              - NFS V3 protocol
              - NFS V4 protocol
              - SMB protocol
            enum:
              - PROTOCOLS_UNSPECIFIED
              - NFSV3
              - NFSV4
              - SMB
        smbSettings:
          description: Optional. SMB share settings for the volume.
          type: array
          items:
            type: string
            enumDescriptions:
              - Unspecified default option
              - SMB setting encrypt data
              - SMB setting browsable
              - SMB setting notify change
              - SMB setting not to notify change
              - SMB setting oplocks
              - SMB setting to show snapshots
              - SMB setting to show previous versions
              - SMB setting to access volume based on enumerartion
              - Continuously available enumeration
            enum:
              - SMB_SETTINGS_UNSPECIFIED
              - ENCRYPT_DATA
              - BROWSABLE
              - CHANGE_NOTIFY
              - NON_BROWSABLE
              - OPLOCKS
              - SHOW_SNAPSHOT
              - SHOW_PREVIOUS_VERSIONS
              - ACCESS_BASED_ENUMERATION
              - CONTINUOUSLY_AVAILABLE
        mountOptions:
          description: Output only. Mount options of this volume
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/MountOption'
        unixPermissions:
          description: >-
            Optional. Default unix style permission (e.g. 777) the mount point
            will be created with. Applicable for NFS protocol types only.
          type: string
        labels:
          description: Optional. Labels as key value pairs
          type: object
          additionalProperties:
            type: string
        description:
          description: Optional. Description of the volume
          type: string
        snapshotPolicy:
          description: Optional. SnapshotPolicy for a volume.
          $ref: '#/components/schemas/SnapshotPolicy'
        snapReserve:
          description: >-
            Optional. Snap_reserve specifies percentage of volume storage
            reserved for snapshot storage. Default is 0 percent.
          type: number
          format: double
        snapshotDirectory:
          description: >-
            Optional. Snapshot_directory if enabled (true) the volume will
            contain a read-only .snapshot directory which provides access to
            each of the volume's snapshots.
          type: boolean
        usedGib:
          description: >-
            Output only. Used capacity in GIB of the volume. This is computed
            periodically and it does not represent the realtime usage.
          readOnly: true
          type: string
          format: int64
        securityStyle:
          description: Optional. Security Style of the Volume
          type: string
          enumDescriptions:
            - SecurityStyle is unspecified
            - SecurityStyle uses NTFS
            - SecurityStyle uses UNIX
          enum:
            - SECURITY_STYLE_UNSPECIFIED
            - NTFS
            - UNIX
        kerberosEnabled:
          description: >-
            Optional. Flag indicating if the volume is a kerberos volume or not,
            export policy rules control kerberos security modes (krb5, krb5i,
            krb5p).
          type: boolean
        ldapEnabled:
          description: >-
            Output only. Flag indicating if the volume is NFS LDAP enabled or
            not.
          readOnly: true
          type: boolean
        activeDirectory:
          description: Output only. Specifies the ActiveDirectory name of a SMB volume.
          readOnly: true
          type: string
        restoreParameters:
          description: Optional. Specifies the source of the volume to be created from.
          $ref: '#/components/schemas/RestoreParameters'
        kmsConfig:
          description: >-
            Output only. Specifies the KMS config to be used for volume
            encryption.
          readOnly: true
          type: string
        encryptionType:
          description: Output only. Specified the current volume encryption key source.
          readOnly: true
          type: string
          enumDescriptions:
            - The source of the encryption key is not specified.
            - Google managed encryption key.
            - Customer managed encryption key, which is stored in KMS.
          enum:
            - ENCRYPTION_TYPE_UNSPECIFIED
            - SERVICE_MANAGED
            - CLOUD_KMS
        hasReplication:
          description: >-
            Output only. Indicates whether the volume is part of a replication
            relationship.
          readOnly: true
          type: boolean
        backupConfig:
          description: BackupConfig of the volume.
          $ref: '#/components/schemas/BackupConfig'
        restrictedActions:
          description: Optional. List of actions that are restricted on this volume.
          type: array
          items:
            type: string
            enumDescriptions:
              - Unspecified restricted action
              - Prevent volume from being deleted when mounted.
            enum:
              - RESTRICTED_ACTION_UNSPECIFIED
              - DELETE
        largeCapacity:
          description: >-
            Optional. Flag indicating if the volume will be a large capacity
            volume or a regular volume.
          type: boolean
        multipleEndpoints:
          description: >-
            Optional. Flag indicating if the volume will have an IP address per
            node for volumes supporting multiple IP endpoints. Only the volume
            with large_capacity will be allowed to have multiple endpoints.
          type: boolean
        tieringPolicy:
          description: Tiering policy for the volume.
          $ref: '#/components/schemas/TieringPolicy'
        replicaZone:
          description: Output only. Specifies the replica zone for regional volume.
          readOnly: true
          type: string
        zone:
          description: Output only. Specifies the active zone for regional volume.
          readOnly: true
          type: string
        coldTierSizeGib:
          description: >-
            Output only. Size of the volume cold tier data rounded down to the
            nearest GiB.
          readOnly: true
          type: string
          format: int64
        hybridReplicationParameters:
          description: Optional. The Hybrid Replication parameters for the volume.
          $ref: '#/components/schemas/HybridReplicationParameters'
        throughputMibps:
          description: Optional. Throughput of the volume (in MiB/s)
          type: number
          format: double
    ExportPolicy:
      id: ExportPolicy
      description: Defines the export policy for the volume.
      type: object
      properties:
        rules:
          description: Required. List of export policy rules
          type: array
          items:
            $ref: '#/components/schemas/SimpleExportPolicyRule'
    SimpleExportPolicyRule:
      id: SimpleExportPolicyRule
      description: An export policy rule describing various export options.
      type: object
      properties:
        allowedClients:
          description: Comma separated list of allowed clients IP addresses
          type: string
        hasRootAccess:
          description: Whether Unix root access will be granted.
          type: string
        accessType:
          description: Access type (ReadWrite, ReadOnly, None)
          type: string
          enumDescriptions:
            - Unspecified Access Type
            - Read Only
            - Read Write
            - None
          enum:
            - ACCESS_TYPE_UNSPECIFIED
            - READ_ONLY
            - READ_WRITE
            - READ_NONE
        nfsv3:
          description: NFS V3 protocol.
          type: boolean
        nfsv4:
          description: NFS V4 protocol.
          type: boolean
        kerberos5ReadOnly:
          description: >-
            If enabled (true) the rule defines a read only access for clients
            matching the 'allowedClients' specification. It enables nfs clients
            to mount using 'authentication' kerberos security mode.
          type: boolean
        kerberos5ReadWrite:
          description: >-
            If enabled (true) the rule defines read and write access for clients
            matching the 'allowedClients' specification. It enables nfs clients
            to mount using 'authentication' kerberos security mode. The
            'kerberos5ReadOnly' value be ignored if this is enabled.
          type: boolean
        kerberos5iReadOnly:
          description: >-
            If enabled (true) the rule defines a read only access for clients
            matching the 'allowedClients' specification. It enables nfs clients
            to mount using 'integrity' kerberos security mode.
          type: boolean
        kerberos5iReadWrite:
          description: >-
            If enabled (true) the rule defines read and write access for clients
            matching the 'allowedClients' specification. It enables nfs clients
            to mount using 'integrity' kerberos security mode. The
            'kerberos5iReadOnly' value be ignored if this is enabled.
          type: boolean
        kerberos5pReadOnly:
          description: >-
            If enabled (true) the rule defines a read only access for clients
            matching the 'allowedClients' specification. It enables nfs clients
            to mount using 'privacy' kerberos security mode.
          type: boolean
        kerberos5pReadWrite:
          description: >-
            If enabled (true) the rule defines read and write access for clients
            matching the 'allowedClients' specification. It enables nfs clients
            to mount using 'privacy' kerberos security mode. The
            'kerberos5pReadOnly' value be ignored if this is enabled.
          type: boolean
    MountOption:
      id: MountOption
      description: View only mount options for a volume.
      type: object
      properties:
        export:
          description: Export string
          type: string
        exportFull:
          description: Full export string
          type: string
        protocol:
          description: Protocol to mount with.
          type: string
          enumDescriptions:
            - Unspecified protocol
            - NFS V3 protocol
            - NFS V4 protocol
            - SMB protocol
          enum:
            - PROTOCOLS_UNSPECIFIED
            - NFSV3
            - NFSV4
            - SMB
        instructions:
          description: Instructions for mounting
          type: string
        ipAddress:
          description: Output only. IP Address.
          readOnly: true
          type: string
    SnapshotPolicy:
      id: SnapshotPolicy
      description: Snapshot Policy for a volume.
      type: object
      properties:
        enabled:
          description: >-
            If enabled, make snapshots automatically according to the schedules.
            Default is false.
          type: boolean
        hourlySchedule:
          description: Hourly schedule policy.
          $ref: '#/components/schemas/HourlySchedule'
        dailySchedule:
          description: Daily schedule policy.
          $ref: '#/components/schemas/DailySchedule'
        weeklySchedule:
          description: Weekly schedule policy.
          $ref: '#/components/schemas/WeeklySchedule'
        monthlySchedule:
          description: Monthly schedule policy.
          $ref: '#/components/schemas/MonthlySchedule'
    HourlySchedule:
      id: HourlySchedule
      description: Make a snapshot every hour e.g. at 04:00, 05:00, 06:00.
      type: object
      properties:
        snapshotsToKeep:
          description: The maximum number of Snapshots to keep for the hourly schedule
          type: number
          format: double
        minute:
          description: >-
            Set the minute of the hour to start the snapshot (0-59), defaults to
            the top of the hour (0).
          type: number
          format: double
    DailySchedule:
      id: DailySchedule
      description: Make a snapshot every day e.g. at 04:00, 05:20, 23:50
      type: object
      properties:
        snapshotsToKeep:
          description: The maximum number of Snapshots to keep for the hourly schedule
          type: number
          format: double
        minute:
          description: >-
            Set the minute of the hour to start the snapshot (0-59), defaults to
            the top of the hour (0).
          type: number
          format: double
        hour:
          description: Set the hour to start the snapshot (0-23), defaults to midnight (0).
          type: number
          format: double
    WeeklySchedule:
      id: WeeklySchedule
      description: >-
        Make a snapshot every week e.g. at Monday 04:00, Wednesday 05:20, Sunday
        23:50
      type: object
      properties:
        snapshotsToKeep:
          description: The maximum number of Snapshots to keep for the hourly schedule
          type: number
          format: double
        minute:
          description: >-
            Set the minute of the hour to start the snapshot (0-59), defaults to
            the top of the hour (0).
          type: number
          format: double
        hour:
          description: Set the hour to start the snapshot (0-23), defaults to midnight (0).
          type: number
          format: double
        day:
          description: >-
            Set the day or days of the week to make a snapshot. Accepts a comma
            separated days of the week. Defaults to 'Sunday'.
          type: string
    MonthlySchedule:
      id: MonthlySchedule
      description: Make a snapshot once a month e.g. at 2nd 04:00, 7th 05:20, 24th 23:50
      type: object
      properties:
        snapshotsToKeep:
          description: The maximum number of Snapshots to keep for the hourly schedule
          type: number
          format: double
        minute:
          description: >-
            Set the minute of the hour to start the snapshot (0-59), defaults to
            the top of the hour (0).
          type: number
          format: double
        hour:
          description: Set the hour to start the snapshot (0-23), defaults to midnight (0).
          type: number
          format: double
        daysOfMonth:
          description: >-
            Set the day or days of the month to make a snapshot (1-31). Accepts
            a comma separated number of days. Defaults to '1'.
          type: string
    RestoreParameters:
      id: RestoreParameters
      description: The RestoreParameters if volume is created from a snapshot or backup.
      type: object
      properties:
        sourceSnapshot:
          description: >-
            Full name of the snapshot resource. Format:
            projects/{project}/locations/{location}/volumes/{volume}/snapshots/{snapshot}
          type: string
        sourceBackup:
          description: >-
            Full name of the backup resource. Format:
            projects/{project}/locations/{location}/backupVaults/{backup_vault_id}/backups/{backup_id}
          type: string
    BackupConfig:
      id: BackupConfig
      description: BackupConfig contains backup related config on a volume.
      type: object
      properties:
        backupPolicies:
          description: >-
            Optional. When specified, schedule backups will be created based on
            the policy configuration.
          type: array
          items:
            type: string
        backupVault:
          description: >-
            Optional. Name of backup vault. Format:
            projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}
          type: string
        scheduledBackupEnabled:
          description: >-
            Optional. When set to true, scheduled backup is enabled on the
            volume. This field should be nil when there's no backup policy
            attached.
          type: boolean
        backupChainBytes:
          description: >-
            Output only. Total size of all backups in a chain in bytes =
            baseline backup size + sum(incremental backup size).
          readOnly: true
          type: string
          format: int64
    TieringPolicy:
      id: TieringPolicy
      description: Defines tiering policy for the volume.
      type: object
      properties:
        tierAction:
          description: >-
            Optional. Flag indicating if the volume has tiering policy
            enable/pause. Default is PAUSED.
          type: string
          enumDescriptions:
            - Unspecified.
            - When tiering is enabled, new cold data will be tiered.
            - >-
              When paused, tiering won't be performed on new data. Existing data
              stays tiered until accessed.
          enum:
            - TIER_ACTION_UNSPECIFIED
            - ENABLED
            - PAUSED
        coolingThresholdDays:
          description: >-
            Optional. Time in days to mark the volume's data block as cold and
            make it eligible for tiering, can be range from 2-183. Default is
            31.
          type: integer
          format: int32
        hotTierBypassModeEnabled:
          description: >-
            Optional. Flag indicating that the hot tier bypass mode is enabled.
            Default is false. This is only applicable to Flex service level.
          type: boolean
    HybridReplicationParameters:
      id: HybridReplicationParameters
      description: The Hybrid Replication parameters for the volume.
      type: object
      properties:
        replication:
          description: Required. Desired name for the replication of this volume.
          type: string
        peerVolumeName:
          description: >-
            Required. Name of the user's local source volume to be peered with
            the destination volume.
          type: string
        peerClusterName:
          description: >-
            Required. Name of the user's local source cluster to be peered with
            the destination cluster.
          type: string
        peerSvmName:
          description: >-
            Required. Name of the user's local source vserver svm to be peered
            with the destination vserver svm.
          type: string
        peerIpAddresses:
          description: Required. List of node ip addresses to be peered with.
          type: array
          items:
            type: string
        clusterLocation:
          description: >-
            Optional. Name of source cluster location associated with the Hybrid
            replication. This is a free-form field for the display purpose only.
          type: string
        description:
          description: Optional. Description of the replication.
          type: string
        labels:
          description: >-
            Optional. Labels to be added to the replication as the key value
            pairs.
          type: object
          additionalProperties:
            type: string
        replicationSchedule:
          description: Optional. Replication Schedule for the replication created.
          type: string
          enumDescriptions:
            - Unspecified HybridReplicationSchedule
            - Replication happens once every 10 minutes.
            - Replication happens once every hour.
            - Replication happens once every day.
          enum:
            - HYBRID_REPLICATION_SCHEDULE_UNSPECIFIED
            - EVERY_10_MINUTES
            - HOURLY
            - DAILY
        hybridReplicationType:
          description: Optional. Type of the hybrid replication.
          type: string
          enumDescriptions:
            - Unspecified hybrid replication type.
            - Hybrid replication type for migration.
            - Hybrid replication type for continuous replication.
            - >-
              New field for reversible OnPrem replication, to be used for data
              protection.
            - >-
              New field for reversible OnPrem replication, to be used for data
              protection.
          enum:
            - VOLUME_HYBRID_REPLICATION_TYPE_UNSPECIFIED
            - MIGRATION
            - CONTINUOUS_REPLICATION
            - ONPREM_REPLICATION
            - REVERSE_ONPREM_REPLICATION
        largeVolumeConstituentCount:
          description: Optional. Constituent volume count for large volume.
          type: integer
          format: int32
    RevertVolumeRequest:
      id: RevertVolumeRequest
      description: RevertVolumeRequest reverts the given volume to the specified snapshot.
      type: object
      properties:
        snapshotId:
          description: >-
            Required. The snapshot resource ID, in the format 'my-snapshot',
            where the specified ID is the {snapshot_id} of the fully qualified
            name like
            projects/{project_id}/locations/{location_id}/volumes/{volume_id}/snapshots/{snapshot_id}
          type: string
    ListSnapshotsResponse:
      id: ListSnapshotsResponse
      description: ListSnapshotsResponse is the result of ListSnapshotsRequest.
      type: object
      properties:
        snapshots:
          description: A list of snapshots in the project for the specified volume.
          type: array
          items:
            $ref: '#/components/schemas/Snapshot'
        nextPageToken:
          description: >-
            The token you can use to retrieve the next page of results. Not
            returned if there are no more results in the list.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Snapshot:
      id: Snapshot
      description: Snapshot is a point-in-time version of a Volume's content.
      type: object
      properties:
        name:
          description: >-
            Identifier. The resource name of the snapshot. Format:
            `projects/{project_id}/locations/{location}/volumes/{volume_id}/snapshots/{snapshot_id}`.
          type: string
        state:
          description: Output only. The snapshot state.
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified Snapshot State
            - Snapshot State is Ready
            - Snapshot State is Creating
            - Snapshot State is Deleting
            - Snapshot State is Updating
            - Snapshot State is Disabled
            - Snapshot State is Error
          enum:
            - STATE_UNSPECIFIED
            - READY
            - CREATING
            - DELETING
            - UPDATING
            - DISABLED
            - ERROR
        stateDetails:
          description: Output only. State details of the storage pool
          readOnly: true
          type: string
        description:
          description: >-
            A description of the snapshot with 2048 characters or less. Requests
            with longer descriptions will be rejected.
          type: string
        usedBytes:
          description: Output only. Current storage usage for the snapshot in bytes.
          readOnly: true
          type: number
          format: double
        createTime:
          description: Output only. The time when the snapshot was created.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: Resource labels to represent user provided metadata.
          type: object
          additionalProperties:
            type: string
    ListActiveDirectoriesResponse:
      id: ListActiveDirectoriesResponse
      description: >-
        ListActiveDirectoriesResponse contains all the active directories
        requested.
      type: object
      properties:
        activeDirectories:
          description: The list of active directories.
          type: array
          items:
            $ref: '#/components/schemas/ActiveDirectory'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    ActiveDirectory:
      id: ActiveDirectory
      description: >-
        ActiveDirectory is the public representation of the active directory
        config.
      type: object
      properties:
        name:
          description: >-
            Identifier. The resource name of the active directory. Format:
            `projects/{project_number}/locations/{location_id}/activeDirectories/{active_directory_id}`.
          type: string
        createTime:
          description: Output only. Create time of the active directory.
          readOnly: true
          type: string
          format: google-datetime
        state:
          description: Output only. The state of the AD.
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified Active Directory State
            - Active Directory State is Creating
            - Active Directory State is Ready
            - Active Directory State is Updating
            - Active Directory State is In use
            - Active Directory State is Deleting
            - Active Directory State is Error
            - Active Directory State is Diagnosing.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - READY
            - UPDATING
            - IN_USE
            - DELETING
            - ERROR
            - DIAGNOSING
        domain:
          description: Required. Name of the Active Directory domain
          type: string
        site:
          description: >-
            The Active Directory site the service will limit Domain Controller
            discovery too.
          type: string
        dns:
          description: >-
            Required. Comma separated list of DNS server IP addresses for the
            Active Directory domain.
          type: string
        netBiosPrefix:
          description: Required. NetBIOSPrefix is used as a prefix for SMB server name.
          type: string
        organizationalUnit:
          description: >-
            The Organizational Unit (OU) within the Windows Active Directory the
            user belongs to.
          type: string
        aesEncryption:
          description: If enabled, AES encryption will be enabled for SMB communication.
          type: boolean
        username:
          description: Required. Username of the Active Directory domain administrator.
          type: string
        password:
          description: Required. Password of the Active Directory domain administrator.
          type: string
        backupOperators:
          description: >-
            Optional. Users to be added to the Built-in Backup Operator active
            directory group.
          type: array
          items:
            type: string
        administrators:
          description: Optional. Users to be added to the Built-in Admininstrators group.
          type: array
          items:
            type: string
        securityOperators:
          description: Optional. Domain users to be given the SeSecurityPrivilege.
          type: array
          items:
            type: string
        kdcHostname:
          description: >-
            Name of the active directory machine. This optional parameter is
            used only while creating kerberos volume
          type: string
        kdcIp:
          description: KDC server IP address for the active directory machine.
          type: string
        nfsUsersWithLdap:
          description: >-
            If enabled, will allow access to local users and LDAP users. If
            access is needed for only LDAP users, it has to be disabled.
          type: boolean
        description:
          description: Description of the active directory.
          type: string
        ldapSigning:
          description: Specifies whether or not the LDAP traffic needs to be signed.
          type: boolean
        encryptDcConnections:
          description: >-
            If enabled, traffic between the SMB server to Domain Controller (DC)
            will be encrypted.
          type: boolean
        labels:
          description: Labels for the active directory.
          type: object
          additionalProperties:
            type: string
        stateDetails:
          description: Output only. The state details of the Active Directory.
          readOnly: true
          type: string
    ListKmsConfigsResponse:
      id: ListKmsConfigsResponse
      description: ListKmsConfigsResponse is the response to a ListKmsConfigsRequest.
      type: object
      properties:
        kmsConfigs:
          description: The list of KmsConfigs
          type: array
          items:
            $ref: '#/components/schemas/KmsConfig'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    KmsConfig:
      id: KmsConfig
      description: KmsConfig is the customer managed encryption key(CMEK) configuration.
      type: object
      properties:
        name:
          description: Identifier. Name of the KmsConfig.
          type: string
        cryptoKeyName:
          description: >-
            Required. Customer managed crypto key resource full name. Format:
            projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{key}.
          type: string
        state:
          description: Output only. State of the KmsConfig.
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified KmsConfig State
            - KmsConfig State is Ready
            - KmsConfig State is Creating
            - KmsConfig State is Deleting
            - KmsConfig State is Updating
            - KmsConfig State is In Use.
            - KmsConfig State is Error
            - KmsConfig State is Pending to verify crypto key access.
            - >-
              KmsConfig State is Not accessbile by the SDE service account to
              the crypto key.
            - KmsConfig State is Disabling.
            - KmsConfig State is Disabled.
            - >-
              KmsConfig State is Migrating. The existing volumes are migrating
              from SMEK to CMEK.
          enum:
            - STATE_UNSPECIFIED
            - READY
            - CREATING
            - DELETING
            - UPDATING
            - IN_USE
            - ERROR
            - KEY_CHECK_PENDING
            - KEY_NOT_REACHABLE
            - DISABLING
            - DISABLED
            - MIGRATING
        stateDetails:
          description: Output only. State details of the KmsConfig.
          readOnly: true
          type: string
        createTime:
          description: Output only. Create time of the KmsConfig.
          readOnly: true
          type: string
          format: google-datetime
        description:
          description: Description of the KmsConfig.
          type: string
        labels:
          description: Labels as key value pairs
          type: object
          additionalProperties:
            type: string
        instructions:
          description: >-
            Output only. Instructions to provide the access to the customer
            provided encryption key.
          readOnly: true
          type: string
        serviceAccount:
          description: >-
            Output only. The Service account which will have access to the
            customer provided encryption key.
          readOnly: true
          type: string
    EncryptVolumesRequest:
      id: EncryptVolumesRequest
      description: >-
        EncryptVolumesRequest specifies the KMS config to encrypt existing
        volumes.
      type: object
      properties: {}
    VerifyKmsConfigRequest:
      id: VerifyKmsConfigRequest
      description: VerifyKmsConfigRequest specifies the KMS config to be validated.
      type: object
      properties: {}
    VerifyKmsConfigResponse:
      id: VerifyKmsConfigResponse
      description: >-
        VerifyKmsConfigResponse contains the information if the config is
        correctly and error message.
      type: object
      properties:
        healthy:
          description: >-
            Output only. If the customer key configured correctly to the encrypt
            volume.
          readOnly: true
          type: boolean
        healthError:
          description: Output only. Error message if config is not healthy.
          readOnly: true
          type: string
        instructions:
          description: >-
            Output only. Instructions for the customers to provide the access to
            the encryption key.
          readOnly: true
          type: string
    ListReplicationsResponse:
      id: ListReplicationsResponse
      description: ListReplicationsResponse is the result of ListReplicationsRequest.
      type: object
      properties:
        replications:
          description: A list of replications in the project for the specified volume.
          type: array
          items:
            $ref: '#/components/schemas/Replication'
        nextPageToken:
          description: >-
            The token you can use to retrieve the next page of results. Not
            returned if there are no more results in the list.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Replication:
      id: Replication
      description: >-
        Replication is a nested resource under Volume, that describes a
        cross-region replication relationship between 2 volumes in different
        regions.
      type: object
      properties:
        name:
          description: >-
            Identifier. The resource name of the Replication. Format:
            `projects/{project_id}/locations/{location}/volumes/{volume_id}/replications/{replication_id}`.
          type: string
        state:
          description: Output only. State of the replication.
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified replication State
            - Replication is creating.
            - Replication is ready.
            - Replication is updating.
            - Replication is deleting.
            - Replication is in error state.
            - Replication is waiting for cluster peering to be established.
            - Replication is waiting for SVM peering to be established.
            - >-
              Replication is waiting for Commands to be executed on Onprem
              ONTAP.
            - >-
              Onprem ONTAP is destination and Replication can only be managed
              from Onprem.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - READY
            - UPDATING
            - DELETING
            - ERROR
            - PENDING_CLUSTER_PEERING
            - PENDING_SVM_PEERING
            - PENDING_REMOTE_RESYNC
            - EXTERNALLY_MANAGED_REPLICATION
        stateDetails:
          description: Output only. State details of the replication.
          readOnly: true
          type: string
        role:
          description: Output only. Indicates whether this points to source or destination.
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified replication role
            - Indicates Source volume.
            - Indicates Destination volume.
          enum:
            - REPLICATION_ROLE_UNSPECIFIED
            - SOURCE
            - DESTINATION
        replicationSchedule:
          description: Required. Indicates the schedule for replication.
          type: string
          enumDescriptions:
            - Unspecified ReplicationSchedule
            - Replication happens once every 10 minutes.
            - Replication happens once every hour.
            - Replication happens once every day.
          enum:
            - REPLICATION_SCHEDULE_UNSPECIFIED
            - EVERY_10_MINUTES
            - HOURLY
            - DAILY
        mirrorState:
          description: Output only. Indicates the state of mirroring.
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified MirrorState
            - Destination volume is being prepared.
            - >-
              Destination volume has been initialized and is ready to receive
              replication transfers.
            - Destination volume is not receiving replication transfers.
            - Incremental replication is in progress.
            - Baseline replication is in progress.
            - Replication is aborted.
            - Replication is being managed from Onprem ONTAP.
            - Peering is yet to be established.
          enum:
            - MIRROR_STATE_UNSPECIFIED
            - PREPARING
            - MIRRORED
            - STOPPED
            - TRANSFERRING
            - BASELINE_TRANSFERRING
            - ABORTED
            - EXTERNALLY_MANAGED
            - PENDING_PEERING
        healthy:
          description: >-
            Output only. Condition of the relationship. Can be one of the
            following: - true: The replication relationship is healthy. It has
            not missed the most recent scheduled transfer. - false: The
            replication relationship is not healthy. It has missed the most
            recent scheduled transfer.
          readOnly: true
          type: boolean
        createTime:
          description: Output only. Replication create time.
          readOnly: true
          type: string
          format: google-datetime
        destinationVolume:
          description: >-
            Output only. Full name of destination volume resource. Example :
            "projects/{project}/locations/{location}/volumes/{volume_id}"
          readOnly: true
          type: string
        transferStats:
          description: Output only. Replication transfer statistics.
          readOnly: true
          $ref: '#/components/schemas/TransferStats'
        labels:
          description: Resource labels to represent user provided metadata.
          type: object
          additionalProperties:
            type: string
        description:
          description: A description about this replication relationship.
          type: string
        destinationVolumeParameters:
          description: Required. Input only. Destination volume parameters
          $ref: '#/components/schemas/DestinationVolumeParameters'
        sourceVolume:
          description: >-
            Output only. Full name of source volume resource. Example :
            "projects/{project}/locations/{location}/volumes/{volume_id}"
          readOnly: true
          type: string
        hybridPeeringDetails:
          description: Output only. Hybrid peering details.
          readOnly: true
          $ref: '#/components/schemas/HybridPeeringDetails'
        clusterLocation:
          description: Optional. Location of the user cluster.
          type: string
        hybridReplicationType:
          description: Output only. Type of the hybrid replication.
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified hybrid replication type.
            - Hybrid replication type for migration.
            - Hybrid replication type for continuous replication.
            - >-
              New field for reversible OnPrem replication, to be used for data
              protection.
            - >-
              Hybrid replication type for incremental Transfer in the reverse
              direction (GCNV is source and Onprem is destination)
          enum:
            - HYBRID_REPLICATION_TYPE_UNSPECIFIED
            - MIGRATION
            - CONTINUOUS_REPLICATION
            - ONPREM_REPLICATION
            - REVERSE_ONPREM_REPLICATION
        hybridReplicationUserCommands:
          description: >-
            Output only. Copy pastable snapmirror commands to be executed on
            onprem cluster by the customer.
          readOnly: true
          $ref: '#/components/schemas/UserCommands'
    TransferStats:
      id: TransferStats
      description: TransferStats reports all statistics related to replication transfer.
      type: object
      properties:
        transferBytes:
          description: >-
            Cumulative bytes transferred so far for the replication
            relationship.
          type: string
          format: int64
        totalTransferDuration:
          description: >-
            Cumulative time taken across all transfers for the replication
            relationship.
          type: string
          format: google-duration
        lastTransferBytes:
          description: Last transfer size in bytes.
          type: string
          format: int64
        lastTransferDuration:
          description: Time taken during last transfer.
          type: string
          format: google-duration
        lagDuration:
          description: >-
            Lag duration indicates the duration by which Destination region
            volume content lags behind the primary region volume content.
          type: string
          format: google-duration
        updateTime:
          description: Time when progress was updated last.
          type: string
          format: google-datetime
        lastTransferEndTime:
          description: Time when last transfer completed.
          type: string
          format: google-datetime
        lastTransferError:
          description: A message describing the cause of the last transfer failure.
          type: string
    DestinationVolumeParameters:
      id: DestinationVolumeParameters
      description: >-
        DestinationVolumeParameters specify input parameters used for creating
        destination volume.
      type: object
      properties:
        storagePool:
          description: Required. Existing destination StoragePool name.
          type: string
        volumeId:
          description: >-
            Desired destination volume resource id. If not specified, source
            volume's resource id will be used. This value must start with a
            lowercase letter followed by up to 62 lowercase letters, numbers, or
            hyphens, and cannot end with a hyphen.
          type: string
        shareName:
          description: >-
            Destination volume's share name. If not specified, source volume's
            share name will be used.
          type: string
        description:
          description: Description for the destination volume.
          type: string
        tieringPolicy:
          description: Optional. Tiering policy for the volume.
          $ref: '#/components/schemas/TieringPolicy'
    HybridPeeringDetails:
      id: HybridPeeringDetails
      description: HybridPeeringDetails contains details about the hybrid peering.
      type: object
      properties:
        subnetIp:
          description: Output only. IP address of the subnet.
          readOnly: true
          type: string
        command:
          description: >-
            Output only. Copy-paste-able commands to be used on user's ONTAP to
            accept peering requests.
          readOnly: true
          type: string
        commandExpiryTime:
          description: >-
            Output only. Expiration time for the peering command to be executed
            on user's ONTAP.
          readOnly: true
          type: string
          format: google-datetime
        passphrase:
          description: >-
            Output only. Temporary passphrase generated to accept cluster
            peering command.
          readOnly: true
          type: string
        peerVolumeName:
          description: >-
            Output only. Name of the user's local source volume to be peered
            with the destination volume.
          readOnly: true
          type: string
        peerClusterName:
          description: >-
            Output only. Name of the user's local source cluster to be peered
            with the destination cluster.
          readOnly: true
          type: string
        peerSvmName:
          description: >-
            Output only. Name of the user's local source vserver svm to be
            peered with the destination vserver svm.
          readOnly: true
          type: string
    UserCommands:
      id: UserCommands
      description: UserCommands contains the commands to be executed by the customer.
      type: object
      properties:
        commands:
          description: Output only. List of commands to be executed by the customer.
          readOnly: true
          type: array
          items:
            type: string
    StopReplicationRequest:
      id: StopReplicationRequest
      description: StopReplicationRequest stops a replication until resumed.
      type: object
      properties:
        force:
          description: >-
            Indicates whether to stop replication forcefully while data transfer
            is in progress. Warning! if force is true, this will abort any
            current transfers and can lead to data loss due to partial transfer.
            If force is false, stop replication will fail while data transfer is
            in progress and you will need to retry later.
          type: boolean
    ResumeReplicationRequest:
      id: ResumeReplicationRequest
      description: ResumeReplicationRequest resumes a stopped replication.
      type: object
      properties: {}
    ReverseReplicationDirectionRequest:
      id: ReverseReplicationDirectionRequest
      description: >-
        ReverseReplicationDirectionRequest reverses direction of replication.
        Source becomes destination and destination becomes source.
      type: object
      properties: {}
    EstablishPeeringRequest:
      id: EstablishPeeringRequest
      description: >-
        EstablishPeeringRequest establishes cluster and svm peerings between the
        source and the destination replications.
      type: object
      properties:
        peerClusterName:
          description: >-
            Required. Name of the user's local source cluster to be peered with
            the destination cluster.
          type: string
        peerSvmName:
          description: >-
            Required. Name of the user's local source vserver svm to be peered
            with the destination vserver svm.
          type: string
        peerIpAddresses:
          description: Optional. List of IPv4 ip addresses to be used for peering.
          type: array
          items:
            type: string
        peerVolumeName:
          description: >-
            Required. Name of the user's local source volume to be peered with
            the destination volume.
          type: string
    SyncReplicationRequest:
      id: SyncReplicationRequest
      description: SyncReplicationRequest syncs the replication from source to destination.
      type: object
      properties: {}
    BackupVault:
      id: BackupVault
      description: A NetApp BackupVault.
      type: object
      properties:
        name:
          description: >-
            Identifier. The resource name of the backup vault. Format:
            `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}`.
          type: string
        state:
          description: Output only. The backup vault state.
          readOnly: true
          type: string
          enumDescriptions:
            - State not set.
            - BackupVault is being created.
            - BackupVault is available for use.
            - BackupVault is being deleted.
            - BackupVault is not valid and cannot be used.
            - BackupVault is being updated.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - ERROR
            - UPDATING
        createTime:
          description: Output only. Create time of the backup vault.
          readOnly: true
          type: string
          format: google-datetime
        description:
          description: Description of the backup vault.
          type: string
        labels:
          description: Resource labels to represent user provided metadata.
          type: object
          additionalProperties:
            type: string
        backupVaultType:
          description: Optional. Type of backup vault to be created. Default is IN_REGION.
          type: string
          enumDescriptions:
            - BackupVault type not set.
            - BackupVault type is IN_REGION.
            - BackupVault type is CROSS_REGION.
          enum:
            - BACKUP_VAULT_TYPE_UNSPECIFIED
            - IN_REGION
            - CROSS_REGION
        sourceRegion:
          description: >-
            Output only. Region in which the backup vault is created. Format:
            `projects/{project_id}/locations/{location}`
          readOnly: true
          type: string
        backupRegion:
          description: >-
            Optional. Region where the backups are stored. Format:
            `projects/{project_id}/locations/{location}`
          type: string
        sourceBackupVault:
          description: >-
            Output only. Name of the Backup vault created in source region.
            Format:
            `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}`
          readOnly: true
          type: string
        destinationBackupVault:
          description: >-
            Output only. Name of the Backup vault created in backup region.
            Format:
            `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}`
          readOnly: true
          type: string
        backupRetentionPolicy:
          description: Optional. Backup retention policy defining the retenton of backups.
          $ref: '#/components/schemas/BackupRetentionPolicy'
    BackupRetentionPolicy:
      id: BackupRetentionPolicy
      description: Retention policy for backups in the backup vault
      type: object
      properties:
        backupMinimumEnforcedRetentionDays:
          description: >-
            Required. Minimum retention duration in days for backups in the
            backup vault.
          type: integer
          format: int32
        dailyBackupImmutable:
          description: >-
            Optional. Indicates if the daily backups are immutable. At least one
            of daily_backup_immutable, weekly_backup_immutable,
            monthly_backup_immutable and manual_backup_immutable must be true.
          type: boolean
        weeklyBackupImmutable:
          description: >-
            Optional. Indicates if the weekly backups are immutable. At least
            one of daily_backup_immutable, weekly_backup_immutable,
            monthly_backup_immutable and manual_backup_immutable must be true.
          type: boolean
        monthlyBackupImmutable:
          description: >-
            Optional. Indicates if the monthly backups are immutable. At least
            one of daily_backup_immutable, weekly_backup_immutable,
            monthly_backup_immutable and manual_backup_immutable must be true.
          type: boolean
        manualBackupImmutable:
          description: >-
            Optional. Indicates if the manual backups are immutable. At least
            one of daily_backup_immutable, weekly_backup_immutable,
            monthly_backup_immutable and manual_backup_immutable must be true.
          type: boolean
    ListBackupVaultsResponse:
      id: ListBackupVaultsResponse
      description: ListBackupVaultsResponse is the result of ListBackupVaultsRequest.
      type: object
      properties:
        backupVaults:
          description: A list of backupVaults in the project for the specified location.
          type: array
          items:
            $ref: '#/components/schemas/BackupVault'
        nextPageToken:
          description: >-
            The token you can use to retrieve the next page of results. Not
            returned if there are no more results in the list.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Backup:
      id: Backup
      description: A NetApp Backup.
      type: object
      properties:
        name:
          description: >-
            Identifier. The resource name of the backup. Format:
            `projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}/backups/{backup_id}`.
          type: string
        state:
          description: Output only. The backup state.
          readOnly: true
          type: string
          enumDescriptions:
            - State not set.
            - >-
              Backup is being created. While in this state, the snapshot for the
              backup point-in-time may not have been created yet, and so the
              point-in-time may not have been fixed.
            - >-
              Backup is being uploaded. While in this state, none of the writes
              to the volume will be included in the backup.
            - Backup is available for use.
            - Backup is being deleted.
            - >-
              Backup is not valid and cannot be used for creating new volumes or
              restoring existing volumes.
            - Backup is being updated.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - UPLOADING
            - READY
            - DELETING
            - ERROR
            - UPDATING
        description:
          description: >-
            A description of the backup with 2048 characters or less. Requests
            with longer descriptions will be rejected.
          type: string
        volumeUsageBytes:
          description: >-
            Output only. Size of the file system when the backup was created.
            When creating a new volume from the backup, the volume capacity will
            have to be at least as big.
          readOnly: true
          type: string
          format: int64
        backupType:
          description: >-
            Output only. Type of backup, manually created or created by a backup
            policy.
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified backup type.
            - Manual backup type.
            - Scheduled backup type.
          enum:
            - TYPE_UNSPECIFIED
            - MANUAL
            - SCHEDULED
        sourceVolume:
          description: >-
            Volume full name of this backup belongs to. Format:
            `projects/{projects_id}/locations/{location}/volumes/{volume_id}`
          type: string
        sourceSnapshot:
          description: >-
            If specified, backup will be created from the given snapshot. If not
            specified, there will be a new snapshot taken to initiate the backup
            creation. Format:
            `projects/{project_id}/locations/{location}/volumes/{volume_id}/snapshots/{snapshot_id}`
          type: string
        createTime:
          description: Output only. The time when the backup was created.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: Resource labels to represent user provided metadata.
          type: object
          additionalProperties:
            type: string
        chainStorageBytes:
          description: >-
            Output only. Total size of all backups in a chain in bytes =
            baseline backup size + sum(incremental backup size)
          readOnly: true
          type: string
          format: int64
        satisfiesPzs:
          description: Output only. Reserved for future use
          readOnly: true
          type: boolean
        satisfiesPzi:
          description: Output only. Reserved for future use
          readOnly: true
          type: boolean
        volumeRegion:
          description: >-
            Output only. Region of the volume from which the backup was created.
            Format: `projects/{project_id}/locations/{location}`
          readOnly: true
          type: string
        backupRegion:
          description: >-
            Output only. Region in which backup is stored. Format:
            `projects/{project_id}/locations/{location}`
          readOnly: true
          type: string
        enforcedRetentionEndTime:
          description: Output only. The time until which the backup is not deletable.
          readOnly: true
          type: string
          format: google-datetime
    ListBackupsResponse:
      id: ListBackupsResponse
      description: ListBackupsResponse is the result of ListBackupsRequest.
      type: object
      properties:
        backups:
          description: A list of backups in the project.
          type: array
          items:
            $ref: '#/components/schemas/Backup'
        nextPageToken:
          description: >-
            The token you can use to retrieve the next page of results. Not
            returned if there are no more results in the list.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    BackupPolicy:
      id: BackupPolicy
      description: Backup Policy.
      type: object
      properties:
        name:
          description: >-
            Identifier. The resource name of the backup policy. Format:
            `projects/{project_id}/locations/{location}/backupPolicies/{backup_policy_id}`.
          type: string
        dailyBackupLimit:
          description: >-
            Number of daily backups to keep. Note that the minimum daily backup
            limit is 2.
          type: integer
          format: int32
        weeklyBackupLimit:
          description: >-
            Number of weekly backups to keep. Note that the sum of daily, weekly
            and monthly backups should be greater than 1.
          type: integer
          format: int32
        monthlyBackupLimit:
          description: >-
            Number of monthly backups to keep. Note that the sum of daily,
            weekly and monthly backups should be greater than 1.
          type: integer
          format: int32
        description:
          description: Description of the backup policy.
          type: string
        enabled:
          description: >-
            If enabled, make backups automatically according to the schedules.
            This will be applied to all volumes that have this policy attached
            and enforced on volume level. If not specified, default is true.
          type: boolean
        assignedVolumeCount:
          description: >-
            Output only. The total number of volumes assigned by this backup
            policy.
          readOnly: true
          type: integer
          format: int32
        createTime:
          description: Output only. The time when the backup policy was created.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: Resource labels to represent user provided metadata.
          type: object
          additionalProperties:
            type: string
        state:
          description: Output only. The backup policy state.
          readOnly: true
          type: string
          enumDescriptions:
            - State not set.
            - BackupPolicy is being created.
            - BackupPolicy is available for use.
            - BackupPolicy is being deleted.
            - BackupPolicy is not valid and cannot be used.
            - BackupPolicy is being updated.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - ERROR
            - UPDATING
    ListBackupPoliciesResponse:
      id: ListBackupPoliciesResponse
      description: ListBackupPoliciesResponse contains all the backup policies requested.
      type: object
      properties:
        backupPolicies:
          description: The list of backup policies.
          type: array
          items:
            $ref: '#/components/schemas/BackupPolicy'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    ListQuotaRulesResponse:
      id: ListQuotaRulesResponse
      description: ListQuotaRulesResponse is the response to a ListQuotaRulesRequest.
      type: object
      properties:
        quotaRules:
          description: List of quota rules
          type: array
          items:
            $ref: '#/components/schemas/QuotaRule'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    QuotaRule:
      id: QuotaRule
      description: >-
        QuotaRule specifies the maximum disk space a user or group can use
        within a volume. They can be used for creating default and individual
        quota rules.
      type: object
      properties:
        name:
          description: >-
            Identifier. The resource name of the quota rule. Format:
            `projects/{project_number}/locations/{location_id}/volumes/volumes/{volume_id}/quotaRules/{quota_rule_id}`.
          type: string
        target:
          description: >-
            Optional. The quota rule applies to the specified user or group,
            identified by a Unix UID/GID, Windows SID, or null for default.
          type: string
        type:
          description: Required. The type of quota rule.
          type: string
          enumDescriptions:
            - Unspecified type for quota rule
            - Individual user quota rule
            - Individual group quota rule
            - Default user quota rule
            - Default group quota rule
          enum:
            - TYPE_UNSPECIFIED
            - INDIVIDUAL_USER_QUOTA
            - INDIVIDUAL_GROUP_QUOTA
            - DEFAULT_USER_QUOTA
            - DEFAULT_GROUP_QUOTA
        diskLimitMib:
          description: Required. The maximum allowed disk space in MiB.
          type: integer
          format: int32
        state:
          description: Output only. State of the quota rule
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified state for quota rule
            - Quota rule is creating
            - Quota rule is updating
            - Quota rule is deleting
            - Quota rule is ready
            - Quota rule is in error state.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - UPDATING
            - DELETING
            - READY
            - ERROR
        stateDetails:
          description: Output only. State details of the quota rule
          readOnly: true
          type: string
        createTime:
          description: Output only. Create time of the quota rule
          readOnly: true
          type: string
          format: google-datetime
        description:
          description: Optional. Description of the quota rule
          type: string
        labels:
          description: Optional. Labels of the quota rule
          type: object
          additionalProperties:
            type: string
    ListLocationsResponse:
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Location:
      id: Location
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
          additionalProperties:
            type: string
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    OperationMetadata:
      id: OperationMetadata
      description: Represents the metadata of the long-running operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        target:
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        requestedCancellation:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have been canceled successfully
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
    LocationMetadata:
      id: LocationMetadata
      description: Metadata for a given google.cloud.location.Location.
      type: object
      properties:
        supportedServiceLevels:
          description: Output only. Supported service levels in a location.
          readOnly: true
          type: array
          items:
            type: string
            enumDescriptions:
              - Unspecified service level.
              - Premium service level.
              - Extreme service level.
              - Standard service level.
              - Flex service level.
            enum:
              - SERVICE_LEVEL_UNSPECIFIED
              - PREMIUM
              - EXTREME
              - STANDARD
              - FLEX
        supportedFlexPerformance:
          description: Output only. Supported flex performance in a location.
          readOnly: true
          type: array
          items:
            type: string
            enumDescriptions:
              - Unspecified flex performance.
              - Flex Storage Pool with default performance.
              - Flex Storage Pool with custom performance.
            enum:
              - FLEX_PERFORMANCE_UNSPECIFIED
              - FLEX_PERFORMANCE_DEFAULT
              - FLEX_PERFORMANCE_CUSTOM
        hasVcp:
          description: Output only. Indicates if the location has VCP support.
          readOnly: true
          type: boolean
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    locations:
      id: google.netapp.locations
      name: locations
      title: Locations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: google.netapp.operations
      name: operations
      title: Operations
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    storage_pools:
      id: google.netapp.storage_pools
      name: storage_pools
      title: Storage_pools
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1storagePools/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.storagePools
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1storagePools/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1storagePools~1{storagePoolsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1storagePools~1{storagePoolsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1storagePools~1{storagePoolsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        validate_directory_service:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1storagePools~1{storagePoolsId}:validateDirectoryService/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        switch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1storagePools~1{storagePoolsId}:switch/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/storage_pools/methods/get'
          - $ref: '#/components/x-stackQL-resources/storage_pools/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/storage_pools/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/storage_pools/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/storage_pools/methods/delete'
    volumes:
      id: google.netapp.volumes
      name: volumes
      title: Volumes
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1volumes/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.volumes
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1volumes/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        revert:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}:revert/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/volumes/methods/get'
          - $ref: '#/components/x-stackQL-resources/volumes/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/volumes/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/volumes/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/volumes/methods/delete'
    snapshots:
      id: google.netapp.snapshots
      name: snapshots
      title: Snapshots
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1snapshots/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.snapshots
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1snapshots/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1snapshots~1{snapshotsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1snapshots~1{snapshotsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1snapshots~1{snapshotsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/get'
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/delete'
    replications:
      id: google.netapp.replications
      name: replications
      title: Replications
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1replications/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.replications
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1replications/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1replications~1{replicationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1replications~1{replicationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1replications~1{replicationsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1replications~1{replicationsId}:stop/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        resume:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1replications~1{replicationsId}:resume/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reverse_direction:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1replications~1{replicationsId}:reverseDirection/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        establish_peering:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1replications~1{replicationsId}:establishPeering/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        sync:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1replications~1{replicationsId}:sync/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/replications/methods/get'
          - $ref: '#/components/x-stackQL-resources/replications/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/replications/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/replications/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/replications/methods/delete'
    quota_rules:
      id: google.netapp.quota_rules
      name: quota_rules
      title: Quota_rules
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1quotaRules/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.quotaRules
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1quotaRules/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1quotaRules~1{quotaRulesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1quotaRules~1{quotaRulesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1volumes~1{volumesId}~1quotaRules~1{quotaRulesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/quota_rules/methods/get'
          - $ref: '#/components/x-stackQL-resources/quota_rules/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/quota_rules/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/quota_rules/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/quota_rules/methods/delete'
    active_directories:
      id: google.netapp.active_directories
      name: active_directories
      title: Active_directories
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1activeDirectories/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.activeDirectories
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1activeDirectories/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1activeDirectories~1{activeDirectoriesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1activeDirectories~1{activeDirectoriesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1activeDirectories~1{activeDirectoriesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/active_directories/methods/get'
          - $ref: '#/components/x-stackQL-resources/active_directories/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/active_directories/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/active_directories/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/active_directories/methods/delete'
    kms_configs:
      id: google.netapp.kms_configs
      name: kms_configs
      title: Kms_configs
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1kmsConfigs/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.kmsConfigs
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1kmsConfigs/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1kmsConfigs~1{kmsConfigsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1kmsConfigs~1{kmsConfigsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1kmsConfigs~1{kmsConfigsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        encrypt:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1kmsConfigs~1{kmsConfigsId}:encrypt/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1kmsConfigs~1{kmsConfigsId}:verify/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/kms_configs/methods/get'
          - $ref: '#/components/x-stackQL-resources/kms_configs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/kms_configs/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/kms_configs/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/kms_configs/methods/delete'
    backup_vaults:
      id: google.netapp.backup_vaults
      name: backup_vaults
      title: Backup_vaults
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupVaults/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupVaults/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.backupVaults
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupVaults~1{backupVaultsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupVaults~1{backupVaultsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupVaults~1{backupVaultsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backup_vaults/methods/get'
          - $ref: '#/components/x-stackQL-resources/backup_vaults/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/backup_vaults/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/backup_vaults/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/backup_vaults/methods/delete'
    backups:
      id: google.netapp.backups
      name: backups
      title: Backups
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupVaults~1{backupVaultsId}~1backups/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupVaults~1{backupVaultsId}~1backups/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.backups
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupVaults~1{backupVaultsId}~1backups~1{backupsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupVaults~1{backupVaultsId}~1backups~1{backupsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupVaults~1{backupVaultsId}~1backups~1{backupsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backups/methods/get'
          - $ref: '#/components/x-stackQL-resources/backups/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/backups/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/backups/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/backups/methods/delete'
    backup_policies:
      id: google.netapp.backup_policies
      name: backup_policies
      title: Backup_policies
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPolicies/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPolicies/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.backupPolicies
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPolicies~1{backupPoliciesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPolicies~1{backupPoliciesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPolicies~1{backupPoliciesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backup_policies/methods/get'
          - $ref: '#/components/x-stackQL-resources/backup_policies/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/backup_policies/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/backup_policies/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/backup_policies/methods/delete'
paths:
  /v1/projects/{projectsId}/locations:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Lists information about the supported locations for this service.
      operationId: netapp.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: extraLocationTypes
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: netapp.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: netapp.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: netapp.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: netapp.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        `1`, corresponding to `Code.CANCELLED`.
      operationId: netapp.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/storagePools:
    parameters: *ref_1
    get:
      description: Returns descriptions of all storage pools owned by the caller.
      operationId: netapp.projects.locations.storagePools.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStoragePoolsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
    post:
      description: Creates a new storage pool.
      operationId: netapp.projects.locations.storagePools.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoragePool'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: storagePoolId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/storagePools/{storagePoolsId}:
    parameters: *ref_1
    get:
      description: Returns the description of the specified storage pool by poolId.
      operationId: netapp.projects.locations.storagePools.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoragePool'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: storagePoolsId
          required: true
          schema:
            type: string
    patch:
      description: Updates the storage pool properties with the full spec
      operationId: netapp.projects.locations.storagePools.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoragePool'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: storagePoolsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Warning! This operation will permanently delete the storage pool.
      operationId: netapp.projects.locations.storagePools.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: storagePoolsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/storagePools/{storagePoolsId}:validateDirectoryService:
    parameters: *ref_1
    post:
      description: >-
        ValidateDirectoryService does a connectivity check for a directory
        service policy attached to the storage pool.
      operationId: netapp.projects.locations.storagePools.validateDirectoryService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateDirectoryServiceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: storagePoolsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/storagePools/{storagePoolsId}:switch:
    parameters: *ref_1
    post:
      description: >-
        This operation will switch the active/replica zone for a regional
        storagePool.
      operationId: netapp.projects.locations.storagePools.switch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SwitchActiveReplicaZoneRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: storagePoolsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/volumes:
    parameters: *ref_1
    get:
      description: Lists Volumes in a given project.
      operationId: netapp.projects.locations.volumes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVolumesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new Volume in a given project and location.
      operationId: netapp.projects.locations.volumes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Volume'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: volumeId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:
    parameters: *ref_1
    get:
      description: Gets details of a single Volume.
      operationId: netapp.projects.locations.volumes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
    patch:
      description: Updates the parameters of a single Volume.
      operationId: netapp.projects.locations.volumes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Volume'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a single Volume.
      operationId: netapp.projects.locations.volumes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:revert:
    parameters: *ref_1
    post:
      description: >-
        Revert an existing volume to a specified snapshot. Warning! This
        operation will permanently revert all changes made after the snapshot
        was created.
      operationId: netapp.projects.locations.volumes.revert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevertVolumeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots:
    parameters: *ref_1
    get:
      description: Returns descriptions of all snapshots for a volume.
      operationId: netapp.projects.locations.volumes.snapshots.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSnapshotsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
    post:
      description: Create a new snapshot for a volume.
      operationId: netapp.projects.locations.volumes.snapshots.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Snapshot'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: query
          name: snapshotId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}:
    parameters: *ref_1
    get:
      description: Describe a snapshot for a volume.
      operationId: netapp.projects.locations.volumes.snapshots.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: snapshotsId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a snapshot.
      operationId: netapp.projects.locations.volumes.snapshots.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: snapshotsId
          required: true
          schema:
            type: string
    patch:
      description: Updates the settings of a specific snapshot.
      operationId: netapp.projects.locations.volumes.snapshots.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Snapshot'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: snapshotsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/replications:
    parameters: *ref_1
    get:
      description: Returns descriptions of all replications for a volume.
      operationId: netapp.projects.locations.volumes.replications.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReplicationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
    post:
      description: Create a new replication for a volume.
      operationId: netapp.projects.locations.volumes.replications.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Replication'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: query
          name: replicationId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/replications/{replicationsId}:
    parameters: *ref_1
    get:
      description: Describe a replication for a volume.
      operationId: netapp.projects.locations.volumes.replications.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Replication'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: replicationsId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a replication.
      operationId: netapp.projects.locations.volumes.replications.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: replicationsId
          required: true
          schema:
            type: string
    patch:
      description: Updates the settings of a specific replication.
      operationId: netapp.projects.locations.volumes.replications.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Replication'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: replicationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/replications/{replicationsId}:stop:
    parameters: *ref_1
    post:
      description: Stop Cross Region Replication.
      operationId: netapp.projects.locations.volumes.replications.stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopReplicationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: replicationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/replications/{replicationsId}:resume:
    parameters: *ref_1
    post:
      description: Resume Cross Region Replication.
      operationId: netapp.projects.locations.volumes.replications.resume
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResumeReplicationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: replicationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/replications/{replicationsId}:reverseDirection:
    parameters: *ref_1
    post:
      description: >-
        Reverses direction of replication. Source becomes destination and
        destination becomes source.
      operationId: netapp.projects.locations.volumes.replications.reverseDirection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReverseReplicationDirectionRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: replicationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/replications/{replicationsId}:establishPeering:
    parameters: *ref_1
    post:
      description: Establish replication peering.
      operationId: netapp.projects.locations.volumes.replications.establishPeering
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EstablishPeeringRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: replicationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/replications/{replicationsId}:sync:
    parameters: *ref_1
    post:
      description: >-
        Syncs the replication. This will invoke one time volume data transfer
        from source to destination.
      operationId: netapp.projects.locations.volumes.replications.sync
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncReplicationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: replicationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/quotaRules:
    parameters: *ref_1
    get:
      description: Returns list of all quota rules in a location.
      operationId: netapp.projects.locations.volumes.quotaRules.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListQuotaRulesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new quota rule.
      operationId: netapp.projects.locations.volumes.quotaRules.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuotaRule'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: query
          name: quotaRuleId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/quotaRules/{quotaRulesId}:
    parameters: *ref_1
    get:
      description: Returns details of the specified quota rule.
      operationId: netapp.projects.locations.volumes.quotaRules.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotaRule'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: quotaRulesId
          required: true
          schema:
            type: string
    patch:
      description: Updates a quota rule.
      operationId: netapp.projects.locations.volumes.quotaRules.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuotaRule'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: quotaRulesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a quota rule.
      operationId: netapp.projects.locations.volumes.quotaRules.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: quotaRulesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/activeDirectories:
    parameters: *ref_1
    get:
      description: Lists active directories.
      operationId: netapp.projects.locations.activeDirectories.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListActiveDirectoriesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: >-
        CreateActiveDirectory Creates the active directory specified in the
        request.
      operationId: netapp.projects.locations.activeDirectories.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActiveDirectory'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: activeDirectoryId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/activeDirectories/{activeDirectoriesId}:
    parameters: *ref_1
    get:
      description: Describes a specified active directory.
      operationId: netapp.projects.locations.activeDirectories.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveDirectory'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: activeDirectoriesId
          required: true
          schema:
            type: string
    patch:
      description: Update the parameters of an active directories.
      operationId: netapp.projects.locations.activeDirectories.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActiveDirectory'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: activeDirectoriesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Delete the active directory specified in the request.
      operationId: netapp.projects.locations.activeDirectories.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: activeDirectoriesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/kmsConfigs:
    parameters: *ref_1
    get:
      description: Returns descriptions of all KMS configs owned by the caller.
      operationId: netapp.projects.locations.kmsConfigs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListKmsConfigsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
    post:
      description: Creates a new KMS config.
      operationId: netapp.projects.locations.kmsConfigs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KmsConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: kmsConfigId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/kmsConfigs/{kmsConfigsId}:
    parameters: *ref_1
    get:
      description: Returns the description of the specified KMS config by kms_config_id.
      operationId: netapp.projects.locations.kmsConfigs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KmsConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: kmsConfigsId
          required: true
          schema:
            type: string
    patch:
      description: Updates the Kms config properties with the full spec
      operationId: netapp.projects.locations.kmsConfigs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KmsConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: kmsConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Warning! This operation will permanently delete the Kms config.
      operationId: netapp.projects.locations.kmsConfigs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: kmsConfigsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/kmsConfigs/{kmsConfigsId}:encrypt:
    parameters: *ref_1
    post:
      description: >-
        Encrypt the existing volumes without CMEK encryption with the desired
        the KMS config for the whole region.
      operationId: netapp.projects.locations.kmsConfigs.encrypt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EncryptVolumesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: kmsConfigsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/kmsConfigs/{kmsConfigsId}:verify:
    parameters: *ref_1
    post:
      description: Verifies KMS config reachability.
      operationId: netapp.projects.locations.kmsConfigs.verify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyKmsConfigRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyKmsConfigResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: kmsConfigsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupVaults:
    parameters: *ref_1
    post:
      description: Creates new backup vault
      operationId: netapp.projects.locations.backupVaults.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupVault'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: backupVaultId
          schema:
            type: string
    get:
      description: Returns list of all available backup vaults.
      operationId: netapp.projects.locations.backupVaults.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupVaultsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupVaults/{backupVaultsId}:
    parameters: *ref_1
    get:
      description: Returns the description of the specified backup vault
      operationId: netapp.projects.locations.backupVaults.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupVault'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupVaultsId
          required: true
          schema:
            type: string
    patch:
      description: Updates the settings of a specific backup vault.
      operationId: netapp.projects.locations.backupVaults.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupVault'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupVaultsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Warning! This operation will permanently delete the backup vault.
      operationId: netapp.projects.locations.backupVaults.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupVaultsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupVaults/{backupVaultsId}/backups:
    parameters: *ref_1
    post:
      description: >-
        Creates a backup from the volume specified in the request The backup can
        be created from the given snapshot if specified in the request. If no
        snapshot specified, there'll be a new snapshot taken to initiate the
        backup creation.
      operationId: netapp.projects.locations.backupVaults.backups.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Backup'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupVaultsId
          required: true
          schema:
            type: string
        - in: query
          name: backupId
          schema:
            type: string
    get:
      description: Returns descriptions of all backups for a backupVault.
      operationId: netapp.projects.locations.backupVaults.backups.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupVaultsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupVaults/{backupVaultsId}/backups/{backupsId}:
    parameters: *ref_1
    get:
      description: Returns the description of the specified backup
      operationId: netapp.projects.locations.backupVaults.backups.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupVaultsId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
    delete:
      description: Warning! This operation will permanently delete the backup.
      operationId: netapp.projects.locations.backupVaults.backups.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupVaultsId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
    patch:
      description: Update backup with full spec.
      operationId: netapp.projects.locations.backupVaults.backups.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Backup'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupVaultsId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/locations/{locationsId}/backupPolicies:
    parameters: *ref_1
    post:
      description: Creates new backup policy
      operationId: netapp.projects.locations.backupPolicies.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupPolicy'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: backupPolicyId
          schema:
            type: string
    get:
      description: Returns list of all available backup policies.
      operationId: netapp.projects.locations.backupPolicies.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupPoliciesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupPolicies/{backupPoliciesId}:
    parameters: *ref_1
    get:
      description: >-
        Returns the description of the specified backup policy by
        backup_policy_id.
      operationId: netapp.projects.locations.backupPolicies.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupPolicy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPoliciesId
          required: true
          schema:
            type: string
    patch:
      description: Updates settings of a specific backup policy.
      operationId: netapp.projects.locations.backupPolicies.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupPolicy'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Warning! This operation will permanently delete the backup policy.
      operationId: netapp.projects.locations.backupPolicies.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPoliciesId
          required: true
          schema:
            type: string
