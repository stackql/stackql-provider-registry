openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Recommendations AI (Beta)
  description: 'Note that we now highly recommend new customers to use Retail API, which incorporates the GA version of the Recommendations AI funtionalities. To enable Retail API, please visit https://console.cloud.google.com/apis/library/retail.googleapis.com. The Recommendations AI service enables customers to build end-to-end personalized recommendation systems without requiring a high level of expertise in machine learning, recommendation system, or Google Cloud.'
  version: v1beta1
  x-discovery-doc-revision: '20230810'
  x-generated-date: '2023-09-01'
externalDocs:
  url: 'https://cloud.google.com/recommendations-ai/docs'
servers:
  - url: 'https://recommendationengine.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    GoogleCloudRecommendationengineV1alphaTuningMetadata:
      id: GoogleCloudRecommendationengineV1alphaTuningMetadata
      description: Metadata associated with a tune operation.
      properties:
        recommendationModel:
          description: 'The resource name of the recommendation model that this tune applies to. Format: projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/eventStores/{event_store_id}/recommendationModels/{recommendation_model_id}'
          type: string
      type: object
    GoogleCloudRecommendationengineV1beta1UserEvent:
      type: object
      id: GoogleCloudRecommendationengineV1beta1UserEvent
      description: UserEvent captures all metadata information recommendation engine needs to know about how end users interact with customers' website.
      properties:
        eventDetail:
          $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1EventDetail'
          description: Optional. User event detailed information common across different recommendation types.
        eventType:
          type: string
          description: 'Required. User event type. Allowed values are: * `add-to-cart` Products being added to cart. * `add-to-list` Items being added to a list (shopping list, favorites etc). * `category-page-view` Special pages such as sale or promotion pages viewed. * `checkout-start` User starting a checkout process. * `detail-page-view` Products detail page viewed. * `home-page-view` Homepage viewed. * `page-visit` Generic page visits not included in the event types above. * `purchase-complete` User finishing a purchase. * `refund` Purchased items being refunded or returned. * `remove-from-cart` Products being removed from cart. * `remove-from-list` Items being removed from a list. * `search` Product search. * `shopping-cart-page-view` User viewing a shopping cart. * `impression` List of items displayed. Used by Google Tag Manager.'
        productEventDetail:
          $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1ProductEventDetail'
          description: 'Optional. Retail product specific user event metadata. This field is required for the following event types: * `add-to-cart` * `add-to-list` * `category-page-view` * `checkout-start` * `detail-page-view` * `purchase-complete` * `refund` * `remove-from-cart` * `remove-from-list` * `search` This field is optional for the following event types: * `page-visit` * `shopping-cart-page-view` - note that ''product_event_detail'' should be set for this unless the shopping cart is empty. This field is not allowed for the following event types: * `home-page-view`'
        userInfo:
          $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1UserInfo'
          description: Required. User information.
        eventSource:
          enum:
            - EVENT_SOURCE_UNSPECIFIED
            - AUTOML
            - ECOMMERCE
            - BATCH_UPLOAD
          enumDescriptions:
            - Unspecified event source.
            - The event is ingested via a javascript pixel or Recommendations AI Tag through automl datalayer or JS Macros.
            - The event is ingested via Recommendations AI Tag through Enhanced Ecommerce datalayer.
            - The event is ingested via Import user events API.
          description: Optional. This field should *not* be set when using JavaScript pixel or the Recommendations AI Tag. Defaults to `EVENT_SOURCE_UNSPECIFIED`.
          type: string
        eventTime:
          format: google-datetime
          type: string
          description: Optional. Only required for ImportUserEvents method. Timestamp of user event created.
    GoogleRpcStatus:
      type: object
      properties:
        message:
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
          type: string
        code:
          type: integer
          format: int32
          description: 'The status code, which should be an enum value of google.rpc.Code.'
        details:
          type: array
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
      id: GoogleRpcStatus
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
    GoogleCloudRecommendationengineV1beta1ImportCatalogItemsRequest:
      id: GoogleCloudRecommendationengineV1beta1ImportCatalogItemsRequest
      type: object
      properties:
        inputConfig:
          description: Required. The desired input location of the data.
          $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1InputConfig'
        requestId:
          type: string
          description: 'Optional. Unique identifier provided by client, within the ancestor dataset scope. Ensures idempotency and used for request deduplication. Server-generated if unspecified. Up to 128 characters long. This is returned as google.longrunning.Operation.name in the response.'
        updateMask:
          format: google-fieldmask
          type: string
          description: 'Optional. Indicates which fields in the provided imported ''items'' to update. If not set, will by default update all fields.'
        errorsConfig:
          description: Optional. The desired location of errors incurred during the Import.
          $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1ImportErrorsConfig'
      description: Request message for Import methods.
    GoogleCloudRecommendationengineV1beta1FeatureMap:
      properties:
        categoricalFeatures:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1FeatureMapStringList'
          description: 'Categorical features that can take on one of a limited number of possible values. Some examples would be the brand/maker of a product, or country of a customer. Feature names and values must be UTF-8 encoded strings. For example: `{ "colors": {"value": ["yellow", "green"]}, "sizes": {"value":["S", "M"]}`'
        numericalFeatures:
          type: object
          description: 'Numerical features. Some examples would be the height/weight of a product, or age of a customer. Feature names must be UTF-8 encoded strings. For example: `{ "lengths_cm": {"value":[2.3, 15.4]}, "heights_cm": {"value":[8.1, 6.4]} }`'
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1FeatureMapFloatList'
      type: object
      description: FeatureMap represents extra features that customers want to include in the recommendation model for catalogs/user events as categorical/numerical features.
      id: GoogleCloudRecommendationengineV1beta1FeatureMap
    GoogleCloudRecommendationengineV1beta1ProductDetail:
      description: Detailed product information associated with a user event.
      properties:
        availableQuantity:
          format: int32
          description: 'Optional. Quantity of the products in stock when a user event happens. Optional. If provided, this overrides the available quantity in Catalog for this event. and can only be set if `stock_status` is set to `IN_STOCK`. Note that if an item is out of stock, you must set the `stock_state` field to be `OUT_OF_STOCK`. Leaving this field unspecified / as zero is not sufficient to mark the item out of stock.'
          type: integer
        id:
          type: string
          description: Required. Catalog item ID. UTF-8 encoded string with a length limit of 128 characters.
        itemAttributes:
          description: Optional. Extra features associated with a product in the user event.
          $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1FeatureMap'
        quantity:
          description: 'Optional. Quantity of the product associated with the user event. For example, this field will be 2 if two products are added to the shopping cart for `add-to-cart` event. Required for `add-to-cart`, `add-to-list`, `remove-from-cart`, `checkout-start`, `purchase-complete`, `refund` event types.'
          format: int32
          type: integer
        displayPrice:
          description: 'Optional. Display price of the product (e.g. discounted price). If provided, this will override the display price in Catalog for this product.'
          format: float
          type: number
        currencyCode:
          description: Optional. Currency code for price/costs. Use three-character ISO-4217 code. Required only if originalPrice or displayPrice is set.
          type: string
        originalPrice:
          description: 'Optional. Original price of the product. If provided, this will override the original price in Catalog for this product.'
          type: number
          format: float
        stockState:
          type: string
          description: 'Optional. Item stock state. If provided, this overrides the stock state in Catalog for items in this event.'
          enum:
            - STOCK_STATE_UNSPECIFIED
            - IN_STOCK
            - OUT_OF_STOCK
            - PREORDER
            - BACKORDER
          enumDescriptions:
            - Default item stock status. Should never be used.
            - Item in stock.
            - Item out of stock.
            - Item that is in pre-order state.
            - Item that is back-ordered (i.e. temporarily out of stock).
      id: GoogleCloudRecommendationengineV1beta1ProductDetail
      type: object
    GoogleCloudRecommendationengineV1beta1PurgeUserEventsMetadata:
      id: GoogleCloudRecommendationengineV1beta1PurgeUserEventsMetadata
      type: object
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        operationName:
          type: string
          description: The ID of the request / operation.
      description: Metadata related to the progress of the PurgeUserEvents operation. This will be returned by the google.longrunning.Operation.metadata field.
    GoogleCloudRecommendationengineV1beta1EventDetail:
      properties:
        recommendationToken:
          type: string
          description: 'Optional. Recommendation token included in the recommendation prediction response. This field enables accurate attribution of recommendation model performance. This token enables us to accurately attribute page view or purchase back to the event and the particular predict response containing this clicked/purchased item. If user clicks on product K in the recommendation results, pass the `PredictResponse.recommendationToken` property as a url parameter to product K''s page. When recording events on product K''s page, log the PredictResponse.recommendation_token to this field. Optional, but highly encouraged for user events that are the result of a recommendation prediction query.'
        eventAttributes:
          description: 'Optional. Extra user event features to include in the recommendation model. For product recommendation, an example of extra user information is traffic_channel, i.e. how user arrives at the site. Users can arrive at the site by coming to the site directly, or coming through Google search, and etc.'
          $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1FeatureMap'
        referrerUri:
          description: 'Optional. The referrer url of the current page. When using the JavaScript pixel, this value is filled in automatically.'
          type: string
        experimentIds:
          items:
            type: string
          description: 'Optional. A list of identifiers for the independent experiment groups this user event belongs to. This is used to distinguish between user events associated with different experiment setups (e.g. using Recommendation Engine system, using different recommendation models).'
          type: array
        uri:
          type: string
          description: 'Optional. Complete url (window.location.href) of the user''s current page. When using the JavaScript pixel, this value is filled in automatically. Maximum length 5KB.'
        pageViewId:
          type: string
          description: 'Optional. A unique id of a web page view. This should be kept the same for all user events triggered from the same pageview. For example, an item detail page view could trigger multiple events as the user is browsing the page. The `pageViewId` property should be kept the same for all these events so that they can be grouped together properly. This `pageViewId` will be automatically generated if using the JavaScript pixel.'
      type: object
      description: User event details shared by all recommendation types.
      id: GoogleCloudRecommendationengineV1beta1EventDetail
    GoogleCloudRecommendationengineV1beta1CatalogInlineSource:
      description: The inline source for the input config for ImportCatalogItems method.
      id: GoogleCloudRecommendationengineV1beta1CatalogInlineSource
      properties:
        catalogItems:
          type: array
          description: Optional. A list of catalog items to update/create. Recommended max of 10k items.
          items:
            $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1CatalogItem'
      type: object
    GoogleCloudRecommendationengineV1beta1ImportUserEventsRequest:
      description: Request message for the ImportUserEvents request.
      type: object
      id: GoogleCloudRecommendationengineV1beta1ImportUserEventsRequest
      properties:
        inputConfig:
          description: Required. The desired input location of the data.
          $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1InputConfig'
        errorsConfig:
          description: Optional. The desired location of errors incurred during the Import.
          $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1ImportErrorsConfig'
        requestId:
          type: string
          description: 'Optional. Unique identifier provided by client, within the ancestor dataset scope. Ensures idempotency for expensive long running operations. Server-generated if unspecified. Up to 128 characters long. This is returned as google.longrunning.Operation.name in the response. Note that this field must not be set if the desired input config is catalog_inline_source.'
    GoogleCloudRecommendationengineV1beta1ImportCatalogItemsResponse:
      description: 'Response of the ImportCatalogItemsRequest. If the long running operation is done, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.'
      id: GoogleCloudRecommendationengineV1beta1ImportCatalogItemsResponse
      properties:
        errorsConfig:
          $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1ImportErrorsConfig'
          description: Echoes the destination for the complete errors in the request if set.
        errorSamples:
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
          description: A sample of errors encountered while processing the request.
          type: array
      type: object
    GoogleCloudRecommendationengineV1beta1ListCatalogsResponse:
      id: GoogleCloudRecommendationengineV1beta1ListCatalogsResponse
      description: Response for ListCatalogs method.
      type: object
      properties:
        nextPageToken:
          type: string
          description: 'Pagination token, if not returned indicates the last page.'
        catalogs:
          items:
            $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1Catalog'
          description: Output only. All the customer's catalogs.
          type: array
          readOnly: true
    GoogleCloudRecommendationengineV1beta1FeatureMapStringList:
      id: GoogleCloudRecommendationengineV1beta1FeatureMapStringList
      properties:
        value:
          type: array
          description: String feature value with a length limit of 128 bytes.
          items:
            type: string
      type: object
      description: A list of string features.
    GoogleProtobufEmpty:
      type: object
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      id: GoogleProtobufEmpty
      properties: {}
    GoogleCloudRecommendationengineV1beta1RejoinUserEventsRequest:
      id: GoogleCloudRecommendationengineV1beta1RejoinUserEventsRequest
      type: object
      description: Request message for CatalogRejoin method.
      properties:
        userEventRejoinScope:
          enum:
            - USER_EVENT_REJOIN_SCOPE_UNSPECIFIED
            - JOINED_EVENTS
            - UNJOINED_EVENTS
          description: Required. The type of the catalog rejoin to define the scope and range of the user events to be rejoined with catalog items.
          type: string
          enumDescriptions:
            - Rejoin catalogs with all events including both joined events and unjoined events.
            - Only rejoin catalogs with joined events.
            - Only rejoin catalogs with unjoined events.
    GoogleCloudRecommendationengineV1beta1ProductCatalogItem:
      description: ProductCatalogItem captures item metadata specific to retail products.
      type: object
      id: GoogleCloudRecommendationengineV1beta1ProductCatalogItem
      properties:
        stockState:
          type: string
          description: Optional. Online stock state of the catalog item. Default is `IN_STOCK`.
          enum:
            - STOCK_STATE_UNSPECIFIED
            - IN_STOCK
            - OUT_OF_STOCK
            - PREORDER
            - BACKORDER
          enumDescriptions:
            - Default item stock status. Should never be used.
            - Item in stock.
            - Item out of stock.
            - Item that is in pre-order state.
            - Item that is back-ordered (i.e. temporarily out of stock).
        priceRange:
          description: Optional. The product price range.
          $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1ProductCatalogItemPriceRange'
        currencyCode:
          type: string
          description: Optional. Only required if the price is set. Currency code for price/costs. Use three-character ISO-4217 code.
        costs:
          description: 'Optional. A map to pass the costs associated with the product. For example: {"manufacturing": 45.5} The profit of selling this item is computed like so: * If ''exactPrice'' is provided, profit = displayPrice - sum(costs) * If ''priceRange'' is provided, profit = minPrice - sum(costs)'
          additionalProperties:
            format: float
            type: number
          type: object
        availableQuantity:
          type: string
          description: Optional. The available quantity of the item.
          format: int64
        exactPrice:
          description: Optional. The exact product price.
          $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1ProductCatalogItemExactPrice'
        canonicalProductUri:
          description: Optional. Canonical URL directly linking to the item detail page with a length limit of 5 KiB..
          type: string
        images:
          description: Optional. Product images for the catalog item.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1Image'
    GoogleCloudRecommendationengineV1beta1ListUserEventsResponse:
      id: GoogleCloudRecommendationengineV1beta1ListUserEventsResponse
      properties:
        nextPageToken:
          description: 'If empty, the list is complete. If nonempty, the token to pass to the next request''s ListUserEvents.page_token.'
          type: string
        userEvents:
          type: array
          description: The user events.
          items:
            $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1UserEvent'
      type: object
      description: Response message for ListUserEvents method.
    GoogleCloudRecommendationengineV1beta1PredictResponsePredictionResult:
      description: PredictionResult represents the recommendation prediction results.
      type: object
      id: GoogleCloudRecommendationengineV1beta1PredictResponsePredictionResult
      properties:
        id:
          description: ID of the recommended catalog item
          type: string
        itemMetadata:
          type: object
          additionalProperties:
            type: any
          description: 'Additional item metadata / annotations. Possible values: * `catalogItem`: JSON representation of the catalogItem. Will be set if `returnCatalogItem` is set to true in `PredictRequest.params`. * `score`: Prediction score in double value. Will be set if `returnItemScore` is set to true in `PredictRequest.params`.'
    GoogleApiHttpBody:
      description: 'Message that represents an arbitrary HTTP body. It should only be used for payload formats that can''t be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged.'
      properties:
        data:
          description: The HTTP request/response body as raw binary.
          type: string
          format: byte
        contentType:
          description: The HTTP Content-Type header value specifying the content type of the body.
          type: string
        extensions:
          description: Application specific response metadata. Must be set in the first response for streaming APIs.
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
          type: array
      id: GoogleApiHttpBody
      type: object
    GoogleCloudRecommendationengineV1beta1UserEventInlineSource:
      description: The inline source for the input config for ImportUserEvents method.
      id: GoogleCloudRecommendationengineV1beta1UserEventInlineSource
      type: object
      properties:
        userEvents:
          description: Optional. A list of user events to import. Recommended max of 10k items.
          items:
            $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1UserEvent'
          type: array
    GoogleCloudRecommendationengineV1beta1ImportErrorsConfig:
      description: Configuration of destination for Import related errors.
      type: object
      id: GoogleCloudRecommendationengineV1beta1ImportErrorsConfig
      properties:
        gcsPrefix:
          description: 'Google Cloud Storage path for import errors. This must be an empty, existing Cloud Storage bucket. Import errors will be written to a file in this bucket, one per line, as a JSON-encoded `google.rpc.Status` message.'
          type: string
    GoogleCloudRecommendationengineV1beta1ListCatalogItemsResponse:
      type: object
      properties:
        catalogItems:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1CatalogItem'
          description: The catalog items.
        nextPageToken:
          type: string
          description: 'If empty, the list is complete. If nonempty, the token to pass to the next request''s ListCatalogItemRequest.page_token.'
      id: GoogleCloudRecommendationengineV1beta1ListCatalogItemsResponse
      description: Response message for ListCatalogItems method.
    GoogleCloudRecommendationengineV1beta1ImportUserEventsResponse:
      properties:
        errorSamples:
          type: array
          description: A sample of errors encountered while processing the request.
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        errorsConfig:
          $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1ImportErrorsConfig'
          description: Echoes the destination for the complete errors if this field was set in the request.
        importSummary:
          description: Aggregated statistics of user event import status.
          $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1UserEventImportSummary'
      id: GoogleCloudRecommendationengineV1beta1ImportUserEventsResponse
      type: object
      description: 'Response of the ImportUserEventsRequest. If the long running operation was successful, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.'
    GoogleCloudRecommendationengineV1beta1PredictionApiKeyRegistration:
      type: object
      id: GoogleCloudRecommendationengineV1beta1PredictionApiKeyRegistration
      description: Registered Api Key.
      properties:
        apiKey:
          type: string
          description: The API key.
    GoogleCloudRecommendationengineV1beta1PurgeUserEventsRequest:
      description: Request message for PurgeUserEvents method.
      properties:
        filter:
          description: 'Required. The filter string to specify the events to be deleted. Empty string filter is not allowed. The eligible fields for filtering are: * `eventType`: UserEvent.eventType field of type string. * `eventTime`: in ISO 8601 "zulu" format. * `visitorId`: field of type string. Specifying this will delete all events associated with a visitor. * `userId`: field of type string. Specifying this will delete all events associated with a user. Examples: * Deleting all events in a time range: `eventTime > "2012-04-23T18:25:43.511Z" eventTime < "2012-04-23T18:30:43.511Z"` * Deleting specific eventType in time range: `eventTime > "2012-04-23T18:25:43.511Z" eventType = "detail-page-view"` * Deleting all events for a specific visitor: `visitorId = "visitor1024"` The filtering fields are assumed to have an implicit AND.'
          type: string
        force:
          type: boolean
          description: 'Optional. The default value is false. Override this flag to true to actually perform the purge. If the field is not set to true, a sampling of events to be deleted will be returned.'
      id: GoogleCloudRecommendationengineV1beta1PurgeUserEventsRequest
      type: object
    GoogleCloudRecommendationengineV1beta1ProductCatalogItemExactPrice:
      description: Exact product price.
      id: GoogleCloudRecommendationengineV1beta1ProductCatalogItemExactPrice
      properties:
        originalPrice:
          type: number
          description: 'Optional. Price of the product without any discount. If zero, by default set to be the ''displayPrice''.'
          format: float
        displayPrice:
          format: float
          type: number
          description: Optional. Display price of the product.
      type: object
    GoogleCloudRecommendationengineV1beta1PredictRequest:
      id: GoogleCloudRecommendationengineV1beta1PredictRequest
      description: 'Request message for Predict method. Full resource name of the format: `{name=projects/*/locations/global/catalogs/default_catalog/eventStores/default_event_store/placements/*}` The id of the recommendation engine placement. This id is used to identify the set of models that will be used to make the prediction. We currently support three placements with the following IDs by default: // * `shopping_cart`: Predicts items frequently bought together with one or more catalog items in the same shopping session. Commonly displayed after `add-to-cart` event, on product detail pages, or on the shopping cart page. * `home_page`: Predicts the next product that a user will most likely engage with or purchase based on the shopping or viewing history of the specified `userId` or `visitorId`. For example - Recommendations for you. * `product_detail`: Predicts the next product that a user will most likely engage with or purchase. The prediction is based on the shopping or viewing history of the specified `userId` or `visitorId` and its relevance to a specified `CatalogItem`. Typically used on product detail pages. For example - More items like this. * `recently_viewed_default`: Returns up to 75 items recently viewed by the specified `userId` or `visitorId`, most recent ones first. Returns nothing if neither of them has viewed any items yet. For example - Recently viewed. The full list of available placements can be seen at https://console.cloud.google.com/recommendation/catalogs/default_catalog/placements'
      properties:
        labels:
          additionalProperties:
            type: string
          description: 'Optional. The labels for the predict request. * Label keys can contain lowercase letters, digits and hyphens, must start with a letter, and must end with a letter or digit. * Non-zero label values can contain lowercase letters, digits and hyphens, must start with a letter, and must end with a letter or digit. * No more than 64 labels can be associated with a given request. See https://goo.gl/xmQnxf for more information on and examples of labels.'
          type: object
        pageSize:
          description: 'Optional. Maximum number of results to return per page. Set this property to the number of prediction results required. If zero, the service will choose a reasonable default.'
          format: int32
          type: integer
        dryRun:
          type: boolean
          description: 'Optional. Use dryRun mode for this prediction query. If set to true, a fake model will be used that returns arbitrary catalog items. Note that the dryRun mode should only be used for testing the API, or if the model is not ready.'
        userEvent:
          $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1UserEvent'
          description: 'Required. Context about the user, what they are looking at and what action they took to trigger the predict request. Note that this user event detail won''t be ingested to userEvent logs. Thus, a separate userEvent write request is required for event logging. Don''t set UserInfo.visitor_id or UserInfo.user_id to the same fixed ID for different users. If you are trying to receive non-personalized recommendations (not recommended; this can negatively impact model performance), instead set UserInfo.visitor_id to a random unique ID and leave UserInfo.user_id unset.'
        params:
          description: 'Optional. Additional domain specific parameters for the predictions. Allowed values: * `returnCatalogItem`: Boolean. If set to true, the associated catalogItem object will be returned in the `PredictResponse.PredictionResult.itemMetadata` object in the method response. * `returnItemScore`: Boolean. If set to true, the prediction ''score'' corresponding to each returned item will be set in the `metadata` field in the prediction response. The given ''score'' indicates the probability of an item being clicked/purchased given the user''s context and history. * `strictFiltering`: Boolean. True by default. If set to false, the service will return generic (unfiltered) popular items instead of empty if your filter blocks all prediction results. * `priceRerankLevel`: String. Default empty. If set to be non-empty, then it needs to be one of {''no-price-reranking'', ''low-price-reranking'', ''medium-price-reranking'', ''high-price-reranking''}. This gives request level control and adjust prediction results based on product price. * `diversityLevel`: String. Default empty. If set to be non-empty, then it needs to be one of {''no-diversity'', ''low-diversity'', ''medium-diversity'', ''high-diversity'', ''auto-diversity''}. This gives request level control and adjust prediction results based on product category.'
          additionalProperties:
            type: any
          type: object
        filter:
          description: 'Optional. Filter for restricting prediction results. Accepts values for tags and the `filterOutOfStockItems` flag. * Tag expressions. Restricts predictions to items that match all of the specified tags. Boolean operators `OR` and `NOT` are supported if the expression is enclosed in parentheses, and must be separated from the tag values by a space. `-"tagA"` is also supported and is equivalent to `NOT "tagA"`. Tag values must be double quoted UTF-8 encoded strings with a size limit of 1 KiB. * filterOutOfStockItems. Restricts predictions to items that do not have a stockState value of OUT_OF_STOCK. Examples: * tag=("Red" OR "Blue") tag="New-Arrival" tag=(NOT "promotional") * filterOutOfStockItems tag=(-"promotional") * filterOutOfStockItems If your filter blocks all prediction results, nothing will be returned. If you want generic (unfiltered) popular items to be returned instead, set `strictFiltering` to false in `PredictRequest.params`.'
          type: string
        pageToken:
          type: string
          description: Optional. The previous PredictResponse.next_page_token.
      type: object
    GoogleCloudRecommendationengineV1beta1ImportMetadata:
      id: GoogleCloudRecommendationengineV1beta1ImportMetadata
      description: Metadata related to the progress of the Import operation. This will be returned by the google.longrunning.Operation.metadata field.
      type: object
      properties:
        failureCount:
          type: string
          format: int64
          description: Count of entries that encountered errors while processing.
        createTime:
          format: google-datetime
          type: string
          description: Operation create time.
        updateTime:
          type: string
          description: 'Operation last update time. If the operation is done, this is also the finish time.'
          format: google-datetime
        successCount:
          format: int64
          description: Count of entries that were processed successfully.
          type: string
        operationName:
          description: Name of the operation.
          type: string
        requestId:
          description: Id of the request / operation. This is parroting back the requestId that was passed in the request.
          type: string
    GoogleCloudRecommendationengineV1beta1Image:
      id: GoogleCloudRecommendationengineV1beta1Image
      description: Catalog item thumbnail/detail image.
      type: object
      properties:
        width:
          type: integer
          description: Optional. Width of the image in number of pixels.
          format: int32
        height:
          type: integer
          format: int32
          description: Optional. Height of the image in number of pixels.
        uri:
          description: Required. URL of the image with a length limit of 5 KiB.
          type: string
    GoogleCloudRecommendationengineV1beta1Catalog:
      properties:
        catalogItemLevelConfig:
          $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1CatalogItemLevelConfig'
          description: Required. The catalog item level configuration.
        name:
          type: string
          description: The fully qualified resource name of the catalog.
        displayName:
          description: Required. The catalog display name.
          type: string
        defaultEventStoreId:
          description: Required. The ID of the default event store.
          type: string
      type: object
      id: GoogleCloudRecommendationengineV1beta1Catalog
      description: 'The catalog configuration. Next ID: 5.'
    GoogleCloudRecommendationengineV1alphaRejoinCatalogMetadata:
      properties: {}
      type: object
      description: Metadata for TriggerCatalogRejoin method.
      id: GoogleCloudRecommendationengineV1alphaRejoinCatalogMetadata
    GoogleCloudRecommendationengineV1beta1InputConfig:
      properties:
        catalogInlineSource:
          description: The Inline source for the input content for Catalog items.
          $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1CatalogInlineSource'
        userEventInlineSource:
          description: The Inline source for the input content for UserEvents.
          $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1UserEventInlineSource'
        bigQuerySource:
          description: BigQuery input source.
          $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1BigQuerySource'
        gcsSource:
          description: Google Cloud Storage location for the input content.
          $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1GcsSource'
      description: The input config source.
      type: object
      id: GoogleCloudRecommendationengineV1beta1InputConfig
    GoogleCloudRecommendationengineV1beta1ListPredictionApiKeyRegistrationsResponse:
      type: object
      properties:
        predictionApiKeyRegistrations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1PredictionApiKeyRegistration'
          description: The list of registered API keys.
        nextPageToken:
          type: string
          description: 'If empty, the list is complete. If nonempty, pass the token to the next request''s `ListPredictionApiKeysRegistrationsRequest.pageToken`.'
      id: GoogleCloudRecommendationengineV1beta1ListPredictionApiKeyRegistrationsResponse
      description: Response message for the `ListPredictionApiKeyRegistrations`.
    GoogleCloudRecommendationengineV1beta1CreatePredictionApiKeyRegistrationRequest:
      description: Request message for the `CreatePredictionApiKeyRegistration` method.
      properties:
        predictionApiKeyRegistration:
          description: Required. The prediction API key registration.
          $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1PredictionApiKeyRegistration'
      type: object
      id: GoogleCloudRecommendationengineV1beta1CreatePredictionApiKeyRegistrationRequest
    GoogleCloudRecommendationengineV1beta1CatalogItemLevelConfig:
      type: object
      properties:
        predictItemLevel:
          description: 'Optional. Level of the catalog at which predictions are made. See https://cloud.google.com/recommendations-ai/docs/catalog#catalog-levels for more details.'
          type: string
          enum:
            - CATALOG_ITEM_LEVEL_UNSPECIFIED
            - VARIANT
            - MASTER
          enumDescriptions:
            - Unknown value - should never be used.
            - Catalog items are at variant level.
            - Catalog items are at master level.
        eventItemLevel:
          type: string
          description: 'Optional. Level of the catalog at which events are uploaded. See https://cloud.google.com/recommendations-ai/docs/catalog#catalog-levels for more details.'
          enum:
            - CATALOG_ITEM_LEVEL_UNSPECIFIED
            - VARIANT
            - MASTER
          enumDescriptions:
            - Unknown value - should never be used.
            - Catalog items are at variant level.
            - Catalog items are at master level.
      description: 'Configures the catalog level that users send events to, and the level at which predictions are made.'
      id: GoogleCloudRecommendationengineV1beta1CatalogItemLevelConfig
    GoogleCloudRecommendationengineV1beta1FeatureMapFloatList:
      type: object
      description: A list of float features.
      id: GoogleCloudRecommendationengineV1beta1FeatureMapFloatList
      properties:
        value:
          type: array
          items:
            format: float
            type: number
          description: Float feature value.
    GoogleCloudRecommendationengineV1beta1UserInfo:
      type: object
      id: GoogleCloudRecommendationengineV1beta1UserInfo
      properties:
        userAgent:
          type: string
          description: Optional. User agent as included in the HTTP header. UTF-8 encoded string with a length limit of 1 KiB. This should *not* be set when using the JavaScript pixel or if `directUserRequest` is set.
        directUserRequest:
          description: Optional. Indicates if the request is made directly from the end user in which case the user_agent and ip_address fields can be populated from the HTTP request. This should *not* be set when using the javascript pixel. This flag should be set only if the API request is made directly from the end user such as a mobile app (and not if a gateway or a server is processing and pushing the user events).
          type: boolean
        visitorId:
          description: 'Required. A unique identifier for tracking visitors with a length limit of 128 bytes. For example, this could be implemented with an HTTP cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor logs in or out of the website. Maximum length 128 bytes. Cannot be empty. Don''t set the field to the same fixed ID for different users. This mixes the event history of those users together, which results in degraded model quality.'
          type: string
        userId:
          type: string
          description: 'Optional. Unique identifier for logged-in user with a length limit of 128 bytes. Required only for logged-in users. Don''t set for anonymous users. Don''t set the field to the same fixed ID for different users. This mixes the event history of those users together, which results in degraded model quality.'
        ipAddress:
          description: 'Optional. IP address of the user. This could be either IPv4 (e.g. 104.133.9.80) or IPv6 (e.g. 2001:0db8:85a3:0000:0000:8a2e:0370:7334). This should *not* be set when using the javascript pixel or if `direct_user_request` is set. Used to extract location information for personalization.'
          type: string
      description: Information of end users.
    GoogleCloudRecommendationengineV1alphaTuningResponse:
      description: Response associated with a tune operation.
      type: object
      id: GoogleCloudRecommendationengineV1alphaTuningResponse
      properties: {}
    GoogleCloudRecommendationengineV1beta1CatalogItem:
      description: CatalogItem captures all metadata information of items to be recommended.
      properties:
        categoryHierarchies:
          items:
            $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchy'
          type: array
          description: 'Required. Catalog item categories. This field is repeated for supporting one catalog item belonging to several parallel category hierarchies. For example, if a shoes product belongs to both ["Shoes & Accessories" -> "Shoes"] and ["Sports & Fitness" -> "Athletic Clothing" -> "Shoes"], it could be represented as: "categoryHierarchies": [ { "categories": ["Shoes & Accessories", "Shoes"]}, { "categories": ["Sports & Fitness", "Athletic Clothing", "Shoes"] } ]'
        itemAttributes:
          $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1FeatureMap'
          description: 'Optional. Highly encouraged. Extra catalog item attributes to be included in the recommendation model. For example, for retail products, this could include the store name, vendor, style, color, etc. These are very strong signals for recommendation model, thus we highly recommend providing the item attributes here.'
        description:
          description: Optional. Catalog item description. UTF-8 encoded string with a length limit of 5 KiB.
          type: string
        productMetadata:
          description: Optional. Metadata specific to retail products.
          $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1ProductCatalogItem'
        tags:
          description: Optional. Filtering tags associated with the catalog item. Each tag should be a UTF-8 encoded string with a length limit of 1 KiB. This tag can be used for filtering recommendation results by passing the tag as part of the predict request filter.
          type: array
          items:
            type: string
        id:
          type: string
          description: Required. Catalog item identifier. UTF-8 encoded string with a length limit of 128 bytes. This id must be unique among all catalog items within the same catalog. It should also be used when logging user events in order for the user events to be joined with the Catalog.
        languageCode:
          type: string
          description: 'Optional. Deprecated. The model automatically detects the text language. Your catalog can include text in different languages, but duplicating catalog items to provide text in multiple languages can result in degraded model performance.'
        title:
          type: string
          description: Required. Catalog item title. UTF-8 encoded string with a length limit of 1 KiB.
        itemGroupId:
          description: 'Optional. Variant group identifier for prediction results. UTF-8 encoded string with a length limit of 128 bytes. This field must be enabled before it can be used. [Learn more](/recommendations-ai/docs/catalog#item-group-id).'
          type: string
      id: GoogleCloudRecommendationengineV1beta1CatalogItem
      type: object
    GoogleCloudRecommendationengineV1beta1RejoinUserEventsMetadata:
      description: Metadata for RejoinUserEvents method.
      id: GoogleCloudRecommendationengineV1beta1RejoinUserEventsMetadata
      properties: {}
      type: object
    GoogleCloudRecommendationengineV1beta1ProductEventDetail:
      properties:
        searchQuery:
          description: At least one of search_query or page_categories is required for `search` events. Other event types should not set this field. The user's search query as UTF-8 encoded text with a length limit of 5 KiB.
          type: string
        purchaseTransaction:
          $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1PurchaseTransaction'
          description: Optional. A transaction represents the entire purchase transaction. Required for `purchase-complete` events. Optional for `checkout-start` events. Other event types should not set this field.
        cartId:
          type: string
          description: 'Optional. The id or name of the associated shopping cart. This id is used to associate multiple items added or present in the cart before purchase. This can only be set for `add-to-cart`, `remove-from-cart`, `checkout-start`, `purchase-complete`, or `shopping-cart-page-view` events.'
        productDetails:
          type: array
          description: 'The main product details related to the event. This field is required for the following event types: * `add-to-cart` * `add-to-list` * `checkout-start` * `detail-page-view` * `purchase-complete` * `refund` * `remove-from-cart` * `remove-from-list` This field is optional for the following event types: * `page-visit` * `shopping-cart-page-view` - note that ''product_details'' should be set for this unless the shopping cart is empty. * `search` (highly encouraged) In a `search` event, this field represents the products returned to the end user on the current page (the end user may have not finished broswing the whole page yet). When a new page is returned to the end user, after pagination/filtering/ordering even for the same query, a new SEARCH event with different product_details is desired. The end user may have not finished broswing the whole page yet. This field is not allowed for the following event types: * `category-page-view` * `home-page-view`'
          items:
            $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1ProductDetail'
        pageCategories:
          items:
            $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchy'
          description: 'Required for `category-page-view` events. At least one of search_query or page_categories is required for `search` events. Other event types should not set this field. The categories associated with a category page. Category pages include special pages such as sales or promotions. For instance, a special sale page may have the category hierarchy: categories : ["Sales", "2017 Black Friday Deals"].'
          type: array
        listId:
          description: Required for `add-to-list` and `remove-from-list` events. The id or name of the list that the item is being added to or removed from. Other event types should not set this field.
          type: string
      description: ProductEventDetail captures user event information specific to retail products.
      id: GoogleCloudRecommendationengineV1beta1ProductEventDetail
      type: object
    GoogleCloudRecommendationengineV1beta1RejoinUserEventsResponse:
      description: Response message for RejoinUserEvents method.
      id: GoogleCloudRecommendationengineV1beta1RejoinUserEventsResponse
      properties:
        rejoinedUserEventsCount:
          description: Number of user events that were joined with latest catalog items.
          type: string
          format: int64
      type: object
    GoogleCloudRecommendationengineV1alphaRejoinCatalogResponse:
      type: object
      properties:
        rejoinedUserEventsCount:
          type: string
          format: int64
          description: Number of user events that were joined with latest catalog items.
      id: GoogleCloudRecommendationengineV1alphaRejoinCatalogResponse
      description: Response message for TriggerCatalogRejoin method.
    GoogleCloudRecommendationengineV1beta1BigQuerySource:
      id: GoogleCloudRecommendationengineV1beta1BigQuerySource
      properties:
        gcsStagingDir:
          description: Optional. Intermediate Cloud Storage directory used for the import. Can be specified if one wants to have the BigQuery export to a specific Cloud Storage directory.
          type: string
        dataSchema:
          type: string
          description: 'Optional. The schema to use when parsing the data from the source. Supported values for catalog imports: 1: "catalog_recommendations_ai" using https://cloud.google.com/recommendations-ai/docs/upload-catalog#json (Default for catalogItems.import) 2: "catalog_merchant_center" using https://cloud.google.com/recommendations-ai/docs/upload-catalog#mc Supported values for user event imports: 1: "user_events_recommendations_ai" using https://cloud.google.com/recommendations-ai/docs/manage-user-events#import (Default for userEvents.import) 2. "user_events_ga360" using https://support.google.com/analytics/answer/3437719?hl=en'
        tableId:
          description: Required. The BigQuery table to copy the data from.
          type: string
        datasetId:
          type: string
          description: Required. The BigQuery data set to copy the data from.
        projectId:
          description: 'Optional. The project id (can be project # or id) that the BigQuery source is in. If not specified, inherits the project id from the parent request.'
          type: string
      type: object
      description: BigQuery source import data from.
    GoogleCloudRecommendationengineV1beta1PurchaseTransaction:
      properties:
        revenue:
          format: float
          type: number
          description: 'Required. Total revenue or grand total associated with the transaction. This value include shipping, tax, or other adjustments to total revenue that you want to include as part of your revenue calculations. This field is not required if the event type is `refund`.'
        id:
          type: string
          description: Optional. The transaction ID with a length limit of 128 bytes.
        currencyCode:
          description: Required. Currency code. Use three-character ISO-4217 code. This field is not required if the event type is `refund`.
          type: string
        costs:
          description: 'Optional. All the costs associated with the product. These can be manufacturing costs, shipping expenses not borne by the end user, or any other costs. Total product cost such that profit = revenue - (sum(taxes) + sum(costs)) If product_cost is not set, then profit = revenue - tax - shipping - sum(CatalogItem.costs). If CatalogItem.cost is not specified for one of the items, CatalogItem.cost based profit *cannot* be calculated for this Transaction.'
          type: object
          additionalProperties:
            type: number
            format: float
        taxes:
          description: Optional. All the taxes associated with the transaction.
          type: object
          additionalProperties:
            format: float
            type: number
      description: A transaction represents the entire purchase transaction.
      type: object
      id: GoogleCloudRecommendationengineV1beta1PurchaseTransaction
    GoogleCloudRecommendationengineV1beta1PredictResponse:
      id: GoogleCloudRecommendationengineV1beta1PredictResponse
      type: object
      properties:
        nextPageToken:
          description: 'If empty, the list is complete. If nonempty, the token to pass to the next request''s PredictRequest.page_token.'
          type: string
        results:
          description: A list of recommended items. The order represents the ranking (from the most relevant item to the least).
          items:
            $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1PredictResponsePredictionResult'
          type: array
        dryRun:
          description: True if the dryRun property was set in the request.
          type: boolean
        metadata:
          type: object
          additionalProperties:
            type: any
          description: Additional domain specific prediction response metadata.
        itemsMissingInCatalog:
          description: IDs of items in the request that were missing from the catalog.
          type: array
          items:
            type: string
        recommendationToken:
          description: 'A unique recommendation token. This should be included in the user event logs resulting from this recommendation, which enables accurate attribution of recommendation model performance.'
          type: string
      description: Response message for predict method.
    GoogleCloudRecommendationengineV1beta1ProductCatalogItemPriceRange:
      properties:
        max:
          format: float
          type: number
          description: Required. The maximum product price.
        min:
          format: float
          description: Required. The minimum product price.
          type: number
      type: object
      description: Product price range when there are a range of prices for different variations of the same product.
      id: GoogleCloudRecommendationengineV1beta1ProductCatalogItemPriceRange
    GoogleCloudRecommendationengineV1beta1UserEventImportSummary:
      type: object
      properties:
        joinedEventsCount:
          type: string
          description: Count of user events imported with complete existing catalog information.
          format: int64
        unjoinedEventsCount:
          format: int64
          description: 'Count of user events imported, but with catalog information not found in the imported catalog.'
          type: string
      description: A summary of import result. The UserEventImportSummary summarizes the import status for user events.
      id: GoogleCloudRecommendationengineV1beta1UserEventImportSummary
    GoogleCloudRecommendationengineV1beta1PurgeUserEventsResponse:
      type: object
      properties:
        purgedEventsCount:
          type: string
          description: The total count of events purged as a result of the operation.
          format: int64
        userEventsSample:
          items:
            $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1UserEvent'
          type: array
          description: A sampling of events deleted (or will be deleted) depending on the `force` property in the request. Max of 500 items will be returned.
      id: GoogleCloudRecommendationengineV1beta1PurgeUserEventsResponse
      description: 'Response of the PurgeUserEventsRequest. If the long running operation is successfully done, then this message is returned by the google.longrunning.Operations.response field.'
    GoogleLongrunningListOperationsResponse:
      id: GoogleLongrunningListOperationsResponse
      description: The response message for Operations.ListOperations.
      properties:
        operations:
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
          type: array
          description: A list of operations that matches the specified filter in the request.
        nextPageToken:
          type: string
          description: The standard List next-page token.
      type: object
    GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchy:
      properties:
        categories:
          items:
            type: string
          type: array
          description: Required. Catalog item categories. Each category should be a UTF-8 encoded string with a length limit of 2 KiB. Note that the order in the list denotes the specificity (from least to most specific).
      id: GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchy
      description: Category represents catalog item category hierarchy.
      type: object
    GoogleLongrunningOperation:
      properties:
        metadata:
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
        error:
          description: The error result of the operation in case of failure or cancellation.
          $ref: '#/components/schemas/GoogleRpcStatus'
        response:
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
        name:
          type: string
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
        done:
          type: boolean
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
      description: This resource represents a long-running operation that is the result of a network API call.
      type: object
      id: GoogleLongrunningOperation
    GoogleCloudRecommendationengineV1beta1GcsSource:
      type: object
      properties:
        jsonSchema:
          type: string
          description: 'Optional. The schema to use when parsing the data from the source. Supported values for catalog imports: 1: "catalog_recommendations_ai" using https://cloud.google.com/recommendations-ai/docs/upload-catalog#json (Default for catalogItems.import) 2: "catalog_merchant_center" using https://cloud.google.com/recommendations-ai/docs/upload-catalog#mc Supported values for user events imports: 1: "user_events_recommendations_ai" using https://cloud.google.com/recommendations-ai/docs/manage-user-events#import (Default for userEvents.import) 2. "user_events_ga360" using https://support.google.com/analytics/answer/3437719?hl=en'
        inputUris:
          type: array
          items:
            type: string
          description: 'Required. Google Cloud Storage URIs to input files. URI can be up to 2000 characters long. URIs can match the full object path (for example, `gs://bucket/directory/object.json`) or a pattern matching one or more files, such as `gs://bucket/directory/*.json`. A request can contain at most 100 files, and each file can be up to 2 GB. See [Importing catalog information](/recommendations-ai/docs/upload-catalog) for the expected file format and setup instructions.'
      description: Google Cloud Storage location for input content. format.
      id: GoogleCloudRecommendationengineV1beta1GcsSource
  parameters:
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
  x-stackQL-resources:
    catalogs:
      id: google.recommendationengine.catalogs
      name: catalogs
      title: Catalogs
      methods:
        projects_locations_catalogs_patch:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1catalogs~1{catalogsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_catalogs_list:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1catalogs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.catalogs
        _projects_locations_catalogs_list:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1catalogs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/catalogs/methods/projects_locations_catalogs_list'
        insert: []
        update: []
        delete: []
    catalog_items:
      id: google.recommendationengine.catalog_items
      name: catalog_items
      title: Catalog Items
      methods:
        projects_locations_catalogs_catalog_items_import:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1catalogs~1{catalogsId}~1catalogItems:import/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_catalogs_catalog_items_list:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1catalogs~1{catalogsId}~1catalogItems/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.catalogItems
        _projects_locations_catalogs_catalog_items_list:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1catalogs~1{catalogsId}~1catalogItems/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_catalogs_catalog_items_create:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1catalogs~1{catalogsId}~1catalogItems/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_catalogs_catalog_items_delete:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1catalogs~1{catalogsId}~1catalogItems~1{catalogItemsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_catalogs_catalog_items_get:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1catalogs~1{catalogsId}~1catalogItems~1{catalogItemsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_catalogs_catalog_items_patch:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1catalogs~1{catalogsId}~1catalogItems~1{catalogItemsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/catalog_items/methods/projects_locations_catalogs_catalog_items_get'
          - $ref: '#/components/x-stackQL-resources/catalog_items/methods/projects_locations_catalogs_catalog_items_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/catalog_items/methods/projects_locations_catalogs_catalog_items_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/catalog_items/methods/projects_locations_catalogs_catalog_items_delete'
    operations:
      id: google.recommendationengine.operations
      name: operations
      title: Operations
      methods:
        projects_locations_catalogs_operations_get:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1catalogs~1{catalogsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_catalogs_operations_list:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1catalogs~1{catalogsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _projects_locations_catalogs_operations_list:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1catalogs~1{catalogsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_catalogs_event_stores_operations_list:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1catalogs~1{catalogsId}~1eventStores~1{eventStoresId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _projects_locations_catalogs_event_stores_operations_list:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1catalogs~1{catalogsId}~1eventStores~1{eventStoresId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_catalogs_event_stores_operations_get:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1catalogs~1{catalogsId}~1eventStores~1{eventStoresId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_catalogs_event_stores_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_catalogs_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_catalogs_event_stores_operations_list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_catalogs_operations_list'
        insert: []
        update: []
        delete: []
    placements:
      id: google.recommendationengine.placements
      name: placements
      title: Placements
      methods:
        projects_locations_catalogs_event_stores_placements_predict:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1catalogs~1{catalogsId}~1eventStores~1{eventStoresId}~1placements~1{placementsId}:predict/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    prediction_api_key_registrations:
      id: google.recommendationengine.prediction_api_key_registrations
      name: prediction_api_key_registrations
      title: Prediction Api Key Registrations
      methods:
        projects_locations_catalogs_event_stores_prediction_api_key_registrations_list:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1catalogs~1{catalogsId}~1eventStores~1{eventStoresId}~1predictionApiKeyRegistrations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.predictionApiKeyRegistrations
        _projects_locations_catalogs_event_stores_prediction_api_key_registrations_list:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1catalogs~1{catalogsId}~1eventStores~1{eventStoresId}~1predictionApiKeyRegistrations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_catalogs_event_stores_prediction_api_key_registrations_create:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1catalogs~1{catalogsId}~1eventStores~1{eventStoresId}~1predictionApiKeyRegistrations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_catalogs_event_stores_prediction_api_key_registrations_delete:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1catalogs~1{catalogsId}~1eventStores~1{eventStoresId}~1predictionApiKeyRegistrations~1{predictionApiKeyRegistrationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/prediction_api_key_registrations/methods/projects_locations_catalogs_event_stores_prediction_api_key_registrations_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/prediction_api_key_registrations/methods/projects_locations_catalogs_event_stores_prediction_api_key_registrations_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/prediction_api_key_registrations/methods/projects_locations_catalogs_event_stores_prediction_api_key_registrations_delete'
    user_events:
      id: google.recommendationengine.user_events
      name: user_events
      title: User Events
      methods:
        projects_locations_catalogs_event_stores_user_events_collect:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1catalogs~1{catalogsId}~1eventStores~1{eventStoresId}~1userEvents:collect/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_catalogs_event_stores_user_events_list:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1catalogs~1{catalogsId}~1eventStores~1{eventStoresId}~1userEvents/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.userEvents
        _projects_locations_catalogs_event_stores_user_events_list:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1catalogs~1{catalogsId}~1eventStores~1{eventStoresId}~1userEvents/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_catalogs_event_stores_user_events_write:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1catalogs~1{catalogsId}~1eventStores~1{eventStoresId}~1userEvents:write/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_catalogs_event_stores_user_events_purge:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1catalogs~1{catalogsId}~1eventStores~1{eventStoresId}~1userEvents:purge/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_catalogs_event_stores_user_events_import:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1catalogs~1{catalogsId}~1eventStores~1{eventStoresId}~1userEvents:import/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_catalogs_event_stores_user_events_rejoin:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1catalogs~1{catalogsId}~1eventStores~1{eventStoresId}~1userEvents:rejoin/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/user_events/methods/projects_locations_catalogs_event_stores_user_events_list'
        insert: []
        update: []
        delete: []
paths:
  '/v1beta1/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}':
    parameters: &ref_1
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/fields'
    patch:
      description: Updates the catalog configuration.
      operationId: recommendationengine.projects.locations.catalogs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1Catalog'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1Catalog'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: catalogsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: catalogs
      x-stackQL-method: projects_locations_catalogs_patch
      x-stackQL-verb: exec
  '/v1beta1/projects/{projectsId}/locations/{locationsId}/catalogs':
    parameters: *ref_1
    get:
      description: Lists all the catalog configurations associated with the project.
      operationId: recommendationengine.projects.locations.catalogs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1ListCatalogsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: catalogs
      x-stackQL-method: projects_locations_catalogs_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.catalogs
  '/v1beta1/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/catalogItems:import':
    parameters: *ref_1
    post:
      description: Bulk import of multiple catalog items. Request processing may be synchronous. No partial updating supported. Non-existing items will be created. Operation.response is of type ImportResponse. Note that it is possible for a subset of the items to be successfully updated.
      operationId: recommendationengine.projects.locations.catalogs.catalogItems.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1ImportCatalogItemsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: catalogsId
          required: true
          schema:
            type: string
      x-stackQL-resource: catalog_items
      x-stackQL-method: projects_locations_catalogs_catalog_items_import
      x-stackQL-verb: exec
  '/v1beta1/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/catalogItems':
    parameters: *ref_1
    get:
      description: Gets a list of catalog items.
      operationId: recommendationengine.projects.locations.catalogs.catalogItems.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1ListCatalogItemsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: catalogsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: catalog_items
      x-stackQL-method: projects_locations_catalogs_catalog_items_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.catalogItems
    post:
      description: Creates a catalog item.
      operationId: recommendationengine.projects.locations.catalogs.catalogItems.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1CatalogItem'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1CatalogItem'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: catalogsId
          required: true
          schema:
            type: string
      x-stackQL-resource: catalog_items
      x-stackQL-method: projects_locations_catalogs_catalog_items_create
      x-stackQL-verb: insert
  '/v1beta1/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/catalogItems/{catalogItemsId}':
    parameters: *ref_1
    delete:
      description: Deletes a catalog item.
      operationId: recommendationengine.projects.locations.catalogs.catalogItems.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: catalogsId
          required: true
          schema:
            type: string
        - in: path
          name: catalogItemsId
          required: true
          schema:
            type: string
      x-stackQL-resource: catalog_items
      x-stackQL-method: projects_locations_catalogs_catalog_items_delete
      x-stackQL-verb: delete
    get:
      description: Gets a specific catalog item.
      operationId: recommendationengine.projects.locations.catalogs.catalogItems.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1CatalogItem'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: catalogsId
          required: true
          schema:
            type: string
        - in: path
          name: catalogItemsId
          required: true
          schema:
            type: string
      x-stackQL-resource: catalog_items
      x-stackQL-method: projects_locations_catalogs_catalog_items_get
      x-stackQL-verb: select
    patch:
      description: Updates a catalog item. Partial updating is supported. Non-existing items will be created.
      operationId: recommendationengine.projects.locations.catalogs.catalogItems.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1CatalogItem'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1CatalogItem'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: catalogsId
          required: true
          schema:
            type: string
        - in: path
          name: catalogItemsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: catalog_items
      x-stackQL-method: projects_locations_catalogs_catalog_items_patch
      x-stackQL-verb: exec
  '/v1beta1/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: recommendationengine.projects.locations.catalogs.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: catalogsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_catalogs_operations_get
      x-stackQL-verb: select
  '/v1beta1/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: recommendationengine.projects.locations.catalogs.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: catalogsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_catalogs_operations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1beta1/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/eventStores/{eventStoresId}/placements/{placementsId}:predict':
    parameters: *ref_1
    post:
      description: 'Makes a recommendation prediction. If using API Key based authentication, the API Key must be registered using the PredictionApiKeyRegistry service. [Learn more](https://cloud.google.com/recommendations-ai/docs/setting-up#register-key).'
      operationId: recommendationengine.projects.locations.catalogs.eventStores.placements.predict
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1PredictRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1PredictResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: catalogsId
          required: true
          schema:
            type: string
        - in: path
          name: eventStoresId
          required: true
          schema:
            type: string
        - in: path
          name: placementsId
          required: true
          schema:
            type: string
      x-stackQL-resource: placements
      x-stackQL-method: projects_locations_catalogs_event_stores_placements_predict
      x-stackQL-verb: exec
  '/v1beta1/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/eventStores/{eventStoresId}/predictionApiKeyRegistrations':
    parameters: *ref_1
    get:
      description: List the registered apiKeys for use with predict method.
      operationId: recommendationengine.projects.locations.catalogs.eventStores.predictionApiKeyRegistrations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1ListPredictionApiKeyRegistrationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: catalogsId
          required: true
          schema:
            type: string
        - in: path
          name: eventStoresId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: prediction_api_key_registrations
      x-stackQL-method: projects_locations_catalogs_event_stores_prediction_api_key_registrations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.predictionApiKeyRegistrations
    post:
      description: Register an API key for use with predict method.
      operationId: recommendationengine.projects.locations.catalogs.eventStores.predictionApiKeyRegistrations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1CreatePredictionApiKeyRegistrationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1PredictionApiKeyRegistration'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: catalogsId
          required: true
          schema:
            type: string
        - in: path
          name: eventStoresId
          required: true
          schema:
            type: string
      x-stackQL-resource: prediction_api_key_registrations
      x-stackQL-method: projects_locations_catalogs_event_stores_prediction_api_key_registrations_create
      x-stackQL-verb: insert
  '/v1beta1/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/eventStores/{eventStoresId}/predictionApiKeyRegistrations/{predictionApiKeyRegistrationsId}':
    parameters: *ref_1
    delete:
      description: Unregister an apiKey from using for predict method.
      operationId: recommendationengine.projects.locations.catalogs.eventStores.predictionApiKeyRegistrations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: catalogsId
          required: true
          schema:
            type: string
        - in: path
          name: eventStoresId
          required: true
          schema:
            type: string
        - in: path
          name: predictionApiKeyRegistrationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: prediction_api_key_registrations
      x-stackQL-method: projects_locations_catalogs_event_stores_prediction_api_key_registrations_delete
      x-stackQL-verb: delete
  '/v1beta1/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/eventStores/{eventStoresId}/userEvents:collect':
    parameters: *ref_1
    get:
      description: Writes a single user event from the browser. This uses a GET request to due to browser restriction of POST-ing to a 3rd party domain. This method is used only by the Recommendations AI JavaScript pixel. Users should not call this method directly.
      operationId: recommendationengine.projects.locations.catalogs.eventStores.userEvents.collect
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleApiHttpBody'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: catalogsId
          required: true
          schema:
            type: string
        - in: path
          name: eventStoresId
          required: true
          schema:
            type: string
        - in: query
          name: ets
          schema:
            type: string
        - in: query
          name: userEvent
          schema:
            type: string
        - in: query
          name: uri
          schema:
            type: string
      x-stackQL-resource: user_events
      x-stackQL-method: projects_locations_catalogs_event_stores_user_events_collect
      x-stackQL-verb: exec
  '/v1beta1/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/eventStores/{eventStoresId}/userEvents':
    parameters: *ref_1
    get:
      description: 'Gets a list of user events within a time range, with potential filtering. The method does not list unjoined user events. Unjoined user event definition: when a user event is ingested from Recommendations AI User Event APIs, the catalog item included in the user event is connected with the current catalog. If a catalog item of the ingested event is not in the current catalog, it could lead to degraded model quality. This is called an unjoined event.'
      operationId: recommendationengine.projects.locations.catalogs.eventStores.userEvents.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1ListUserEventsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: catalogsId
          required: true
          schema:
            type: string
        - in: path
          name: eventStoresId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: user_events
      x-stackQL-method: projects_locations_catalogs_event_stores_user_events_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.userEvents
  '/v1beta1/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/eventStores/{eventStoresId}/userEvents:write':
    parameters: *ref_1
    post:
      description: Writes a single user event.
      operationId: recommendationengine.projects.locations.catalogs.eventStores.userEvents.write
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1UserEvent'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1UserEvent'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: catalogsId
          required: true
          schema:
            type: string
        - in: path
          name: eventStoresId
          required: true
          schema:
            type: string
      x-stackQL-resource: user_events
      x-stackQL-method: projects_locations_catalogs_event_stores_user_events_write
      x-stackQL-verb: exec
  '/v1beta1/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/eventStores/{eventStoresId}/userEvents:purge':
    parameters: *ref_1
    post:
      description: 'Deletes permanently all user events specified by the filter provided. Depending on the number of events specified by the filter, this operation could take hours or days to complete. To test a filter, use the list command first.'
      operationId: recommendationengine.projects.locations.catalogs.eventStores.userEvents.purge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1PurgeUserEventsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: catalogsId
          required: true
          schema:
            type: string
        - in: path
          name: eventStoresId
          required: true
          schema:
            type: string
      x-stackQL-resource: user_events
      x-stackQL-method: projects_locations_catalogs_event_stores_user_events_purge
      x-stackQL-verb: exec
  '/v1beta1/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/eventStores/{eventStoresId}/userEvents:import':
    parameters: *ref_1
    post:
      description: Bulk import of User events. Request processing might be synchronous. Events that already exist are skipped. Use this method for backfilling historical user events. Operation.response is of type ImportResponse. Note that it is possible for a subset of the items to be successfully inserted. Operation.metadata is of type ImportMetadata.
      operationId: recommendationengine.projects.locations.catalogs.eventStores.userEvents.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1ImportUserEventsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: catalogsId
          required: true
          schema:
            type: string
        - in: path
          name: eventStoresId
          required: true
          schema:
            type: string
      x-stackQL-resource: user_events
      x-stackQL-method: projects_locations_catalogs_event_stores_user_events_import
      x-stackQL-verb: exec
  '/v1beta1/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/eventStores/{eventStoresId}/userEvents:rejoin':
    parameters: *ref_1
    post:
      description: 'Triggers a user event rejoin operation with latest catalog data. Events will not be annotated with detailed catalog information if catalog item is missing at the time the user event is ingested, and these events are stored as unjoined events with a limited usage on training and serving. This API can be used to trigger a ''join'' operation on specified events with latest version of catalog items. It can also be used to correct events joined with wrong catalog items.'
      operationId: recommendationengine.projects.locations.catalogs.eventStores.userEvents.rejoin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommendationengineV1beta1RejoinUserEventsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: catalogsId
          required: true
          schema:
            type: string
        - in: path
          name: eventStoresId
          required: true
          schema:
            type: string
      x-stackQL-resource: user_events
      x-stackQL-method: projects_locations_catalogs_event_stores_user_events_rejoin
      x-stackQL-verb: exec
  '/v1beta1/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/eventStores/{eventStoresId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: recommendationengine.projects.locations.catalogs.eventStores.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: catalogsId
          required: true
          schema:
            type: string
        - in: path
          name: eventStoresId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_catalogs_event_stores_operations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1beta1/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/eventStores/{eventStoresId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: recommendationengine.projects.locations.catalogs.eventStores.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: catalogsId
          required: true
          schema:
            type: string
        - in: path
          name: eventStoresId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_catalogs_event_stores_operations_get
      x-stackQL-verb: select
