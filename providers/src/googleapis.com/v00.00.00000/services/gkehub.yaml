openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: GKE Hub API
  description: ''
  version: v1
  x-discovery-doc-revision: '20230728'
  x-generated-date: '2023-08-10'
externalDocs:
  url: 'https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster'
servers:
  - url: 'https://gkehub.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    Location:
      description: A resource that represents a Google Cloud location.
      properties:
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
        metadata:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
          description: Service-specific metadata. For example the available capacity at the given location.
        labels:
          type: object
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          additionalProperties:
            type: string
        displayName:
          description: 'The friendly name for this location, typically a nearby city name. For example, "Tokyo".'
          type: string
        locationId:
          type: string
          description: 'The canonical id for this location. For example: `"us-east1"`.'
      type: object
      id: Location
    ConfigManagementConfigSyncState:
      type: object
      description: State information for ConfigSync
      properties:
        syncState:
          description: The state of ConfigSync's process to sync configs to a cluster
          $ref: '#/components/schemas/ConfigManagementSyncState'
        deploymentState:
          description: 'Information about the deployment of ConfigSync, including the version of the various Pods deployed'
          $ref: '#/components/schemas/ConfigManagementConfigSyncDeploymentState'
        version:
          description: The version of ConfigSync deployed
          $ref: '#/components/schemas/ConfigManagementConfigSyncVersion'
        errors:
          items:
            $ref: '#/components/schemas/ConfigManagementConfigSyncError'
          description: Errors pertaining to the installation of Config Sync.
          type: array
      id: ConfigManagementConfigSyncState
    Binding:
      type: object
      properties:
        members:
          description: 'Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.'
          type: array
          items:
            type: string
        role:
          description: 'Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.'
          type: string
        condition:
          $ref: '#/components/schemas/Expr'
          description: 'The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
      id: Binding
      description: 'Associates `members`, or principals, with a `role`.'
    CancelOperationRequest:
      id: CancelOperationRequest
      properties: {}
      type: object
      description: The request message for Operations.CancelOperation.
    ConfigManagementHierarchyControllerDeploymentState:
      description: Deployment state for Hierarchy Controller
      type: object
      properties:
        extension:
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - 'Deployment was attempted to be installed, but has errors'
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          description: The deployment state for Hierarchy Controller extension (e.g. v0.7.0-hc.1)
        hnc:
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          description: The deployment state for open source HNC (e.g. v0.7.0-hc.0)
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - 'Deployment was attempted to be installed, but has errors'
      id: ConfigManagementHierarchyControllerDeploymentState
    ConfigManagementMembershipSpec:
      id: ConfigManagementMembershipSpec
      type: object
      description: '**Anthos Config Management**: Configuration for a single cluster. Intended to parallel the ConfigManagement CR.'
      properties:
        hierarchyController:
          $ref: '#/components/schemas/ConfigManagementHierarchyControllerConfig'
          description: Hierarchy Controller configuration for the cluster.
        policyController:
          description: Policy Controller configuration for the cluster.
          $ref: '#/components/schemas/ConfigManagementPolicyController'
        version:
          description: Version of ACM installed.
          type: string
        configSync:
          description: Config Sync configuration for the cluster.
          $ref: '#/components/schemas/ConfigManagementConfigSync'
        management:
          type: string
          enum:
            - MANAGEMENT_UNSPECIFIED
            - MANAGEMENT_AUTOMATIC
            - MANAGEMENT_MANUAL
          description: Enables automatic Feature management.
          enumDescriptions:
            - Unspecified
            - Google will manage the Feature for the cluster.
            - User will manually manage the Feature for the cluster.
        cluster:
          type: string
          description: 'The user-specified cluster name used by Config Sync cluster-name-selector annotation or ClusterSelector, for applying configs to only a subset of clusters. Omit this field if the cluster''s fleet membership name is used by Config Sync cluster-name-selector annotation or ClusterSelector. Set this field if a name different from the cluster''s fleet membership name is used by Config Sync cluster-name-selector annotation or ClusterSelector.'
    FeatureResourceState:
      description: FeatureResourceState describes the state of a Feature *resource* in the GkeHub API. See `FeatureState` for the "running state" of the Feature in the Hub and across Memberships.
      properties:
        state:
          description: The current state of the Feature resource in the Hub API.
          type: string
          enumDescriptions:
            - State is unknown or not set.
            - 'The Feature is being enabled, and the Feature resource is being created. Once complete, the corresponding Feature will be enabled in this Hub.'
            - 'The Feature is enabled in this Hub, and the Feature resource is fully available.'
            - 'The Feature is being disabled in this Hub, and the Feature resource is being deleted.'
            - The Feature resource is being updated.
            - The Feature resource is being updated by the Hub Service.
          enum:
            - STATE_UNSPECIFIED
            - ENABLING
            - ACTIVE
            - DISABLING
            - UPDATING
            - SERVICE_UPDATING
      type: object
      id: FeatureResourceState
    Empty:
      type: object
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      id: Empty
      properties: {}
    ServiceMeshDataPlaneManagement:
      id: ServiceMeshDataPlaneManagement
      description: Status of data plane management. Only reported per-member.
      type: object
      properties:
        details:
          description: Explanation of the status.
          type: array
          items:
            $ref: '#/components/schemas/ServiceMeshStatusDetails'
        state:
          enum:
            - LIFECYCLE_STATE_UNSPECIFIED
            - DISABLED
            - FAILED_PRECONDITION
            - PROVISIONING
            - ACTIVE
            - STALLED
            - NEEDS_ATTENTION
            - DEGRADED
          enumDescriptions:
            - Unspecified
            - DISABLED means that the component is not enabled.
            - FAILED_PRECONDITION means that provisioning cannot proceed because of some characteristic of the member cluster.
            - PROVISIONING means that provisioning is in progress.
            - ACTIVE means that the component is ready for use.
            - STALLED means that provisioning could not be done.
            - 'NEEDS_ATTENTION means that the component is ready, but some user intervention is required. (For example that the user should migrate workloads to a new control plane revision.)'
            - 'DEGRADED means that the component is ready, but operating in a degraded state.'
          type: string
          description: Lifecycle status of data plane management.
    ScopeLifecycleState:
      properties:
        code:
          readOnly: true
          enumDescriptions:
            - The code is not set.
            - The scope is being created.
            - The scope active.
            - The scope is being deleted.
            - The scope is being updated.
          description: Output only. The current state of the scope resource.
          enum:
            - CODE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - UPDATING
          type: string
      type: object
      id: ScopeLifecycleState
      description: ScopeLifecycleState describes the state of a Scope resource.
    RBACRoleBindingLifecycleState:
      description: RBACRoleBindingLifecycleState describes the state of a RbacRoleBinding resource.
      properties:
        code:
          readOnly: true
          description: Output only. The current state of the rbacrolebinding resource.
          enumDescriptions:
            - The code is not set.
            - The rbacrolebinding is being created.
            - The rbacrolebinding active.
            - The rbacrolebinding is being deleted.
            - The rbacrolebinding is being updated.
          enum:
            - CODE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - UPDATING
          type: string
      type: object
      id: RBACRoleBindingLifecycleState
    ListScopeRBACRoleBindingsResponse:
      properties:
        nextPageToken:
          description: A token to request the next page of resources from the `ListScopeRBACRoleBindings` method. The value of an empty string means that there are no more resources to return.
          type: string
        rbacrolebindings:
          items:
            $ref: '#/components/schemas/RBACRoleBinding'
          description: The list of Scope RBACRoleBindings.
          type: array
      type: object
      description: List of Scope RBACRoleBindings.
      id: ListScopeRBACRoleBindingsResponse
    Membership:
      description: Membership contains information about a member cluster.
      id: Membership
      properties:
        deleteTime:
          readOnly: true
          type: string
          description: Output only. When the Membership was deleted.
          format: google-datetime
        state:
          readOnly: true
          $ref: '#/components/schemas/MembershipState'
          description: Output only. State of the Membership resource.
        endpoint:
          description: Optional. Endpoint information to reach this member.
          $ref: '#/components/schemas/MembershipEndpoint'
        name:
          description: 'Output only. The full, unique name of this Membership resource in the format `projects/*/locations/*/memberships/{membership_id}`, set during creation. `membership_id` must be a valid RFC 1123 compliant DNS label: 1. At most 63 characters in length 2. It must consist of lower case alphanumeric characters or `-` 3. It must start and end with an alphanumeric character Which can be expressed as the regex: `[a-z0-9]([-a-z0-9]*[a-z0-9])?`, with a maximum length of 63 characters.'
          readOnly: true
          type: string
        externalId:
          description: 'Optional. An externally-generated and managed ID for this Membership. This ID may be modified after creation, but this is not recommended. The ID must match the regex: `a-zA-Z0-9*` If this Membership represents a Kubernetes cluster, this value should be set to the UID of the `kube-system` namespace object.'
          type: string
        authority:
          description: 'Optional. How to identify workloads from this Membership. See the documentation on Workload Identity for more details: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity'
          $ref: '#/components/schemas/Authority'
        uniqueId:
          readOnly: true
          description: 'Output only. Google-generated UUID for this resource. This is unique across all Membership resources. If a Membership resource is deleted and another resource with the same name is created, it gets a different unique_id.'
          type: string
        createTime:
          format: google-datetime
          type: string
          description: Output only. When the Membership was created.
          readOnly: true
        lastConnectionTime:
          format: google-datetime
          type: string
          readOnly: true
          description: 'Output only. For clusters using Connect, the timestamp of the most recent connection established with Google Cloud. This time is updated every several minutes, not continuously. For clusters that do not use GKE Connect, or that have never connected successfully, this field will be unset.'
        monitoringConfig:
          description: Optional. The monitoring config information for this membership.
          $ref: '#/components/schemas/MonitoringConfig'
        updateTime:
          readOnly: true
          description: Output only. When the Membership was last updated.
          type: string
          format: google-datetime
        labels:
          description: Optional. Labels for this membership.
          type: object
          additionalProperties:
            type: string
        description:
          description: 'Output only. Description of this membership, limited to 63 characters. Must match the regex: `a-zA-Z0-9*` This field is present for legacy purposes.'
          readOnly: true
          type: string
      type: object
    MembershipState:
      description: MembershipState describes the state of a Membership resource.
      id: MembershipState
      type: object
      properties:
        code:
          enum:
            - CODE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - UPDATING
            - SERVICE_UPDATING
          description: Output only. The current state of the Membership resource.
          enumDescriptions:
            - The code is not set.
            - The cluster is being registered.
            - The cluster is registered.
            - The cluster is being unregistered.
            - The Membership is being updated.
            - The Membership is being updated by the Hub Service.
          type: string
          readOnly: true
    MembershipFeatureSpec:
      description: 'MembershipFeatureSpec contains configuration information for a single Membership. NOTE: Please use snake case in your feature name.'
      type: object
      properties:
        fleetobservability:
          description: Fleet observability membership spec
          $ref: '#/components/schemas/FleetObservabilityMembershipSpec'
        origin:
          $ref: '#/components/schemas/Origin'
          description: Whether this per-Membership spec was inherited from a fleet-level default. This field can be updated by users by either overriding a Membership config (updated to USER implicitly) or setting to FLEET explicitly.
        mesh:
          description: Anthos Service Mesh-specific spec
          $ref: '#/components/schemas/ServiceMeshMembershipSpec'
        identityservice:
          $ref: '#/components/schemas/IdentityServiceMembershipSpec'
          description: Identity Service-specific spec.
        configmanagement:
          description: Config Management-specific spec.
          $ref: '#/components/schemas/ConfigManagementMembershipSpec'
      id: MembershipFeatureSpec
    MultiCloudCluster:
      id: MultiCloudCluster
      type: object
      description: MultiCloudCluster contains information specific to GKE Multi-Cloud clusters.
      properties:
        resourceLink:
          type: string
          description: 'Immutable. Self-link of the Google Cloud resource for the GKE Multi-Cloud cluster. For example: //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/awsClusters/my-cluster //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/azureClusters/my-cluster //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/attachedClusters/my-cluster'
        clusterMissing:
          type: boolean
          description: Output only. If cluster_missing is set then it denotes that API(gkemulticloud.googleapis.com) resource for this GKE Multi-Cloud cluster no longer exists.
          readOnly: true
    ConnectAgentResource:
      description: ConnectAgentResource represents a Kubernetes resource manifest for Connect Agent deployment.
      type: object
      properties:
        type:
          description: Kubernetes type of the resource.
          $ref: '#/components/schemas/TypeMeta'
        manifest:
          type: string
          description: YAML manifest of the resource.
      id: ConnectAgentResource
    ConfigManagementConfigSyncVersion:
      description: Specific versioning information pertaining to ConfigSync's Pods
      id: ConfigManagementConfigSyncVersion
      properties:
        syncer:
          description: Version of the deployed syncer pod
          type: string
        gitSync:
          description: Version of the deployed git-sync pod
          type: string
        reconcilerManager:
          type: string
          description: Version of the deployed reconciler-manager pod
        importer:
          description: Version of the deployed importer pod
          type: string
        rootReconciler:
          type: string
          description: Version of the deployed reconciler container in root-reconciler pod
        monitor:
          description: Version of the deployed monitor pod
          type: string
        admissionWebhook:
          type: string
          description: Version of the deployed admission_webhook pod
      type: object
    IdentityServiceAuthMethod:
      properties:
        azureadConfig:
          $ref: '#/components/schemas/IdentityServiceAzureADConfig'
          description: AzureAD specific Configuration.
        googleConfig:
          description: GoogleConfig specific configuration.
          $ref: '#/components/schemas/IdentityServiceGoogleConfig'
        oidcConfig:
          $ref: '#/components/schemas/IdentityServiceOidcConfig'
          description: OIDC specific configuration.
        proxy:
          type: string
          description: Proxy server address to use for auth method.
        name:
          type: string
          description: Identifier for auth config.
      id: IdentityServiceAuthMethod
      description: 'Configuration of an auth method for a member/cluster. Only one authentication method (e.g., OIDC and LDAP) can be set per AuthMethod.'
      type: object
    ServiceMeshMembershipState:
      description: '**Service Mesh**: State for a single Membership, as analyzed by the Service Mesh Hub Controller.'
      properties:
        controlPlaneManagement:
          readOnly: true
          $ref: '#/components/schemas/ServiceMeshControlPlaneManagement'
          description: Output only. Status of control plane management
        dataPlaneManagement:
          $ref: '#/components/schemas/ServiceMeshDataPlaneManagement'
          readOnly: true
          description: Output only. Status of data plane management.
      type: object
      id: ServiceMeshMembershipState
    ConfigManagementConfigSyncDeploymentState:
      type: object
      description: The state of ConfigSync's deployment on a cluster
      id: ConfigManagementConfigSyncDeploymentState
      properties:
        syncer:
          type: string
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          description: Deployment state of the syncer pod
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - 'Deployment was attempted to be installed, but has errors'
        reconcilerManager:
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - 'Deployment was attempted to be installed, but has errors'
          description: Deployment state of reconciler-manager pod
        rootReconciler:
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - 'Deployment was attempted to be installed, but has errors'
          description: Deployment state of root-reconciler
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
        monitor:
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - 'Deployment was attempted to be installed, but has errors'
          description: Deployment state of the monitor pod
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
        importer:
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - 'Deployment was attempted to be installed, but has errors'
          description: Deployment state of the importer pod
        gitSync:
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          type: string
          description: Deployment state of the git-sync pod
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - 'Deployment was attempted to be installed, but has errors'
        admissionWebhook:
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - 'Deployment was attempted to be installed, but has errors'
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          description: Deployment state of admission-webhook
    FleetObservabilityLoggingConfig:
      type: object
      description: LoggingConfig defines the configuration for different types of logs.
      properties:
        defaultConfig:
          $ref: '#/components/schemas/FleetObservabilityRoutingConfig'
          description: Specified if applying the default routing config to logs not specified in other configs.
        fleetScopeLogsConfig:
          description: Specified if applying the routing config to all logs for all fleet scopes.
          $ref: '#/components/schemas/FleetObservabilityRoutingConfig'
      id: FleetObservabilityLoggingConfig
    Status:
      id: Status
      description: Status specifies state for the subcomponent.
      type: object
      properties:
        code:
          type: string
          description: Code specifies AppDevExperienceFeature's subcomponent ready state.
          enumDescriptions:
            - Not set.
            - AppDevExperienceFeature's specified subcomponent is ready.
            - 'AppDevExperienceFeature''s specified subcomponent ready state is false. This means AppDevExperienceFeature has encountered an issue that blocks all, or a portion, of its normal operation. See the `description` for more details.'
            - AppDevExperienceFeature's specified subcomponent has a pending or unknown state.
          enum:
            - CODE_UNSPECIFIED
            - OK
            - FAILED
            - UNKNOWN
        description:
          description: 'Description is populated if Code is Failed, explaining why it has failed.'
          type: string
    GenerateConnectManifestResponse:
      id: GenerateConnectManifestResponse
      type: object
      properties:
        manifest:
          items:
            $ref: '#/components/schemas/ConnectAgentResource'
          description: The ordered list of Kubernetes resources that need to be applied to the cluster for GKE Connect agent installation/upgrade.
          type: array
      description: GenerateConnectManifestResponse contains manifest information for installing/upgrading a Connect agent.
    CommonFeatureState:
      description: CommonFeatureState contains Hub-wide Feature status information.
      type: object
      id: CommonFeatureState
      properties:
        appdevexperience:
          $ref: '#/components/schemas/AppDevExperienceFeatureState'
          description: Appdevexperience specific state.
        fleetobservability:
          description: FleetObservability feature state.
          $ref: '#/components/schemas/FleetObservabilityFeatureState'
        state:
          readOnly: true
          description: Output only. The "running state" of the Feature in this Hub.
          $ref: '#/components/schemas/FeatureState'
    SetIamPolicyRequest:
      id: SetIamPolicyRequest
      description: Request message for `SetIamPolicy` method.
      type: object
      properties:
        policy:
          description: 'REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.'
          $ref: '#/components/schemas/Policy'
        updateMask:
          type: string
          format: google-fieldmask
          description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`'
    ConfigManagementConfigSyncError:
      id: ConfigManagementConfigSyncError
      properties:
        errorMessage:
          description: A string representing the user facing error message
          type: string
      type: object
      description: Errors pertaining to the installation of Config Sync
    Feature:
      id: Feature
      type: object
      properties:
        fleetDefaultMemberConfig:
          description: Optional. Feature configuration applicable to all memberships of the fleet.
          $ref: '#/components/schemas/CommonFleetDefaultMemberConfigSpec'
        name:
          description: 'Output only. The full, unique name of this Feature resource in the format `projects/*/locations/*/features/*`.'
          type: string
          readOnly: true
        labels:
          additionalProperties:
            type: string
          type: object
          description: Labels for this Feature.
        updateTime:
          readOnly: true
          description: Output only. When the Feature resource was last updated.
          type: string
          format: google-datetime
        createTime:
          description: Output only. When the Feature resource was created.
          readOnly: true
          type: string
          format: google-datetime
        scopeSpecs:
          additionalProperties:
            $ref: '#/components/schemas/ScopeFeatureSpec'
          description: 'Optional. Scope-specific configuration for this Feature. If this Feature does not support any per-Scope configuration, this field may be unused. The keys indicate which Scope the configuration is for, in the form: `projects/{p}/locations/global/scopes/{s}` Where {p} is the project, {s} is a valid Scope in this project. {p} WILL match the Feature''s project. {p} will always be returned as the project number, but the project ID is also accepted during input. If the same Scope is specified in the map twice (using the project ID form, and the project number form), exactly ONE of the entries will be saved, with no guarantees as to which. For this reason, it is recommended the same format be used for all entries when mutating a Feature.'
          type: object
        resourceState:
          description: Output only. State of the Feature resource itself.
          readOnly: true
          $ref: '#/components/schemas/FeatureResourceState'
        spec:
          $ref: '#/components/schemas/CommonFeatureSpec'
          description: 'Optional. Hub-wide Feature configuration. If this Feature does not support any Hub-wide configuration, this field may be unused.'
        membershipStates:
          readOnly: true
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MembershipFeatureState'
          description: 'Output only. Membership-specific Feature status. If this Feature does report any per-Membership status, this field may be unused. The keys indicate which Membership the state is for, in the form: `projects/{p}/locations/{l}/memberships/{m}` Where {p} is the project number, {l} is a valid location and {m} is a valid Membership in this project at that location. {p} MUST match the Feature''s project number.'
        deleteTime:
          type: string
          description: Output only. When the Feature resource was deleted.
          readOnly: true
          format: google-datetime
        state:
          description: Output only. The Hub-wide Feature state.
          $ref: '#/components/schemas/CommonFeatureState'
          readOnly: true
        scopeStates:
          type: object
          readOnly: true
          additionalProperties:
            $ref: '#/components/schemas/ScopeFeatureState'
          description: 'Output only. Scope-specific Feature status. If this Feature does report any per-Scope status, this field may be unused. The keys indicate which Scope the state is for, in the form: `projects/{p}/locations/global/scopes/{s}` Where {p} is the project, {s} is a valid Scope in this project. {p} WILL match the Feature''s project.'
        membershipSpecs:
          additionalProperties:
            $ref: '#/components/schemas/MembershipFeatureSpec'
          type: object
          description: 'Optional. Membership-specific configuration for this Feature. If this Feature does not support any per-Membership configuration, this field may be unused. The keys indicate which Membership the configuration is for, in the form: `projects/{p}/locations/{l}/memberships/{m}` Where {p} is the project, {l} is a valid location and {m} is a valid Membership in this project at that location. {p} WILL match the Feature''s project. {p} will always be returned as the project number, but the project ID is also accepted during input. If the same Membership is specified in the map twice (using the project ID form, and the project number form), exactly ONE of the entries will be saved, with no guarantees as to which. For this reason, it is recommended the same format be used for all entries when mutating a Feature.'
      description: Feature represents the settings and status of any Hub Feature.
    ListFeaturesResponse:
      id: ListFeaturesResponse
      properties:
        resources:
          items:
            $ref: '#/components/schemas/Feature'
          description: The list of matching Features
          type: array
        nextPageToken:
          description: A token to request the next page of resources from the `ListFeatures` method. The value of an empty string means that there are no more resources to return.
          type: string
      type: object
      description: Response message for the `GkeHub.ListFeatures` method.
    ConfigManagementSyncError:
      type: object
      id: ConfigManagementSyncError
      description: An ACM created error representing a problem syncing configurations
      properties:
        errorMessage:
          type: string
          description: A description of the error
        errorResources:
          description: 'A list of config(s) associated with the error, if any'
          type: array
          items:
            $ref: '#/components/schemas/ConfigManagementErrorResource'
        code:
          type: string
          description: An ACM defined error code
    ConfigManagementHierarchyControllerConfig:
      type: object
      properties:
        enabled:
          description: Whether Hierarchy Controller is enabled in this cluster.
          type: boolean
        enableHierarchicalResourceQuota:
          type: boolean
          description: Whether hierarchical resource quota is enabled in this cluster.
        enablePodTreeLabels:
          description: Whether pod tree labels are enabled in this cluster.
          type: boolean
      id: ConfigManagementHierarchyControllerConfig
      description: Configuration for Hierarchy Controller
    GoogleRpcStatus:
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      properties:
        code:
          format: int32
          type: integer
          description: 'The status code, which should be an enum value of google.rpc.Code.'
        details:
          items:
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
        message:
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
          type: string
      type: object
      id: GoogleRpcStatus
    ServiceMeshStatusDetails:
      type: object
      properties:
        code:
          description: A machine-readable code that further describes a broad status.
          type: string
        details:
          description: Human-readable explanation of code.
          type: string
      id: ServiceMeshStatusDetails
      description: Structured and human-readable details for a status.
    KubernetesResource:
      properties:
        resourceOptions:
          description: Optional. Options for Kubernetes resource generation.
          $ref: '#/components/schemas/ResourceOptions'
        membershipCrManifest:
          description: 'Input only. The YAML representation of the Membership CR. This field is ignored for GKE clusters where Hub can read the CR directly. Callers should provide the CR that is currently present in the cluster during CreateMembership or UpdateMembership, or leave this field empty if none exists. The CR manifest is used to validate the cluster has not been registered with another Membership.'
          type: string
        connectResources:
          readOnly: true
          description: 'Output only. The Kubernetes resources for installing the GKE Connect agent This field is only populated in the Membership returned from a successful long-running operation from CreateMembership or UpdateMembership. It is not populated during normal GetMembership or ListMemberships requests. To get the resource manifest after the initial registration, the caller should make a UpdateMembership call with an empty field mask.'
          items:
            $ref: '#/components/schemas/ResourceManifest'
          type: array
        membershipResources:
          readOnly: true
          items:
            $ref: '#/components/schemas/ResourceManifest'
          description: 'Output only. Additional Kubernetes resources that need to be applied to the cluster after Membership creation, and after every update. This field is only populated in the Membership returned from a successful long-running operation from CreateMembership or UpdateMembership. It is not populated during normal GetMembership or ListMemberships requests. To get the resource manifest after the initial registration, the caller should make a UpdateMembership call with an empty field mask.'
          type: array
      id: KubernetesResource
      description: 'KubernetesResource contains the YAML manifests and configuration for Membership Kubernetes resources in the cluster. After CreateMembership or UpdateMembership, these resources should be re-applied in the cluster.'
      type: object
    ConfigManagementPolicyControllerState:
      id: ConfigManagementPolicyControllerState
      properties:
        migration:
          $ref: '#/components/schemas/ConfigManagementPolicyControllerMigration'
          description: Record state of ACM -> PoCo Hub migration for this feature.
        version:
          $ref: '#/components/schemas/ConfigManagementPolicyControllerVersion'
          description: The version of Gatekeeper Policy Controller deployed.
        deploymentState:
          description: The state about the policy controller installation.
          $ref: '#/components/schemas/ConfigManagementGatekeeperDeploymentState'
      type: object
      description: State for PolicyControllerState.
    ConfigManagementOperatorState:
      id: ConfigManagementOperatorState
      description: State information for an ACM's Operator
      properties:
        errors:
          description: Install errors.
          items:
            $ref: '#/components/schemas/ConfigManagementInstallError'
          type: array
        deploymentState:
          type: string
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          description: The state of the Operator's deployment
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - 'Deployment was attempted to be installed, but has errors'
        version:
          type: string
          description: The semenatic version number of the operator
      type: object
    ListMembershipBindingsResponse:
      type: object
      description: List of MembershipBindings.
      properties:
        nextPageToken:
          description: A token to request the next page of resources from the `ListMembershipBindings` method. The value of an empty string means that there are no more resources to return.
          type: string
        membershipBindings:
          description: The list of membership_bindings
          type: array
          items:
            $ref: '#/components/schemas/MembershipBinding'
      id: ListMembershipBindingsResponse
    FleetObservabilityFeatureSpec:
      type: object
      id: FleetObservabilityFeatureSpec
      description: '**Fleet Observability**: The Hub-wide input for the FleetObservability feature.'
      properties:
        loggingConfig:
          description: 'Specified if fleet logging feature is enabled for the entire fleet. If UNSPECIFIED, fleet logging feature is disabled for the entire fleet.'
          $ref: '#/components/schemas/FleetObservabilityLoggingConfig'
    CommonFleetDefaultMemberConfigSpec:
      properties: {}
      type: object
      id: CommonFleetDefaultMemberConfigSpec
      description: CommonFleetDefaultMemberConfigSpec contains default configuration information for memberships of a fleet
    FleetObservabilityMembershipState:
      description: '**FleetObservability**: Membership-specific Feature state for fleetobservability.'
      properties: {}
      id: FleetObservabilityMembershipState
      type: object
    Policy:
      type: object
      description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp(''2020-10-01T00:00:00.000Z'')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).'
      properties:
        etag:
          format: byte
          type: string
          description: '`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.'
        version:
          type: integer
          description: 'Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
          format: int32
        bindings:
          description: 'Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.'
          items:
            $ref: '#/components/schemas/Binding'
          type: array
        auditConfigs:
          items:
            $ref: '#/components/schemas/AuditConfig'
          type: array
          description: Specifies cloud audit logging configuration for this policy.
      id: Policy
    KubernetesMetadata:
      type: object
      description: KubernetesMetadata provides informational metadata for Memberships representing Kubernetes clusters.
      id: KubernetesMetadata
      properties:
        nodeProviderId:
          readOnly: true
          type: string
          description: 'Output only. Node providerID as reported by the first node in the list of nodes on the Kubernetes endpoint. On Kubernetes platforms that support zero-node clusters (like GKE-on-GCP), the node_count will be zero and the node_provider_id will be empty.'
        memoryMb:
          format: int32
          type: integer
          description: 'Output only. The total memory capacity as reported by the sum of all Kubernetes nodes resources, defined in MB.'
          readOnly: true
        vcpuCount:
          type: integer
          format: int32
          description: Output only. vCPU count as reported by Kubernetes nodes resources.
          readOnly: true
        kubernetesApiServerVersion:
          description: Output only. Kubernetes API server version string as reported by `/version`.
          readOnly: true
          type: string
        nodeCount:
          readOnly: true
          type: integer
          description: Output only. Node count as reported by Kubernetes nodes resources.
          format: int32
        updateTime:
          description: Output only. The time at which these details were last updated. This update_time is different from the Membership-level update_time since EndpointDetails are updated internally for API consumers.
          type: string
          readOnly: true
          format: google-datetime
    FleetObservabilityFleetObservabilityLoggingState:
      description: Feature state for logging feature.
      id: FleetObservabilityFleetObservabilityLoggingState
      type: object
      properties:
        scopeLog:
          $ref: '#/components/schemas/FleetObservabilityFleetObservabilityBaseFeatureState'
          description: The base feature state of fleet scope log.
        defaultLog:
          $ref: '#/components/schemas/FleetObservabilityFleetObservabilityBaseFeatureState'
          description: The base feature state of fleet default log.
    IdentityServiceGoogleConfig:
      properties:
        disable:
          type: boolean
          description: Disable automatic configuration of Google Plugin on supported platforms.
      description: Configuration for the Google Plugin Auth flow.
      type: object
      id: IdentityServiceGoogleConfig
    ServiceMeshControlPlaneManagement:
      properties:
        details:
          items:
            $ref: '#/components/schemas/ServiceMeshStatusDetails'
          description: Explanation of state.
          type: array
        state:
          description: LifecycleState of control plane management.
          enumDescriptions:
            - Unspecified
            - DISABLED means that the component is not enabled.
            - FAILED_PRECONDITION means that provisioning cannot proceed because of some characteristic of the member cluster.
            - PROVISIONING means that provisioning is in progress.
            - ACTIVE means that the component is ready for use.
            - STALLED means that provisioning could not be done.
            - 'NEEDS_ATTENTION means that the component is ready, but some user intervention is required. (For example that the user should migrate workloads to a new control plane revision.)'
            - 'DEGRADED means that the component is ready, but operating in a degraded state.'
          enum:
            - LIFECYCLE_STATE_UNSPECIFIED
            - DISABLED
            - FAILED_PRECONDITION
            - PROVISIONING
            - ACTIVE
            - STALLED
            - NEEDS_ATTENTION
            - DEGRADED
          type: string
      type: object
      description: Status of control plane management.
      id: ServiceMeshControlPlaneManagement
    FleetLifecycleState:
      description: FleetLifecycleState describes the state of a Fleet resource.
      properties:
        code:
          type: string
          description: Output only. The current state of the Fleet resource.
          enum:
            - CODE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - UPDATING
          enumDescriptions:
            - The code is not set.
            - The fleet is being created.
            - The fleet active.
            - The fleet is being deleted.
            - The fleet is being updated.
          readOnly: true
      type: object
      id: FleetLifecycleState
    MembershipBindingLifecycleState:
      description: MembershipBindingLifecycleState describes the state of a Binding resource.
      id: MembershipBindingLifecycleState
      type: object
      properties:
        code:
          type: string
          enum:
            - CODE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - UPDATING
          description: Output only. The current state of the MembershipBinding resource.
          enumDescriptions:
            - The code is not set.
            - The membershipbinding is being created.
            - The membershipbinding active.
            - The membershipbinding is being deleted.
            - The membershipbinding is being updated.
          readOnly: true
    FleetObservabilityMembershipSpec:
      properties: {}
      id: FleetObservabilityMembershipSpec
      description: '**FleetObservability**: The membership-specific input for FleetObservability feature.'
      type: object
    AuditLogConfig:
      id: AuditLogConfig
      type: object
      properties:
        logType:
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          description: The log type that this config enables.
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          type: string
        exemptedMembers:
          type: array
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
          items:
            type: string
      description: 'Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables ''DATA_READ'' and ''DATA_WRITE'' logging, while exempting jose@example.com from DATA_READ logging.'
    ApplianceCluster:
      description: ApplianceCluster contains information specific to GDC Edge Appliance Clusters.
      type: object
      id: ApplianceCluster
      properties:
        resourceLink:
          description: 'Immutable. Self-link of the Google Cloud resource for the Appliance Cluster. For example: //transferappliance.googleapis.com/projects/my-project/locations/us-west1-a/appliances/my-appliance'
          type: string
    TestIamPermissionsResponse:
      id: TestIamPermissionsResponse
      description: Response message for `TestIamPermissions` method.
      properties:
        permissions:
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
          items:
            type: string
          type: array
      type: object
    AuditConfig:
      type: object
      properties:
        service:
          description: 'Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.'
          type: string
        auditLogConfigs:
          type: array
          description: The configuration for logging of each type of permission.
          items:
            $ref: '#/components/schemas/AuditLogConfig'
      id: AuditConfig
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.'
    FeatureState:
      type: object
      id: FeatureState
      description: 'FeatureState describes the high-level state of a Feature. It may be used to describe a Feature''s state at the environ-level, or per-membershop, depending on the context.'
      properties:
        updateTime:
          format: google-datetime
          type: string
          description: The time this status and any related Feature-specific details were updated.
        code:
          enum:
            - CODE_UNSPECIFIED
            - OK
            - WARNING
            - ERROR
          description: 'The high-level, machine-readable status of this Feature.'
          enumDescriptions:
            - Unknown or not set.
            - The Feature is operating normally.
            - 'The Feature has encountered an issue, and is operating in a degraded state. The Feature may need intervention to return to normal operation. See the description and any associated Feature-specific details for more information.'
            - The Feature is not operating or is in a severely degraded state. The Feature may need intervention to return to normal operation. See the description and any associated Feature-specific details for more information.
          type: string
        description:
          type: string
          description: A human-readable description of the current status.
    Scope:
      type: object
      properties:
        name:
          type: string
          description: 'The resource name for the scope `projects/{project}/locations/{location}/scopes/{scope}`'
        deleteTime:
          format: google-datetime
          description: Output only. When the scope was deleted.
          type: string
          readOnly: true
        namespaceLabels:
          additionalProperties:
            type: string
          description: 'Optional. Scope-level cluster namespace labels. For the member clusters bound to the Scope, these labels are applied to each namespace under the Scope. Scope-level labels take precedence over Namespace-level labels (`namespace_labels` in the Fleet Namespace resource) if they share a key. Keys and values must be Kubernetes-conformant.'
          type: object
        updateTime:
          format: google-datetime
          description: Output only. When the scope was last updated.
          type: string
          readOnly: true
        labels:
          type: object
          additionalProperties:
            type: string
          description: Optional. Labels for this Scope.
        state:
          description: Output only. State of the scope resource.
          $ref: '#/components/schemas/ScopeLifecycleState'
          readOnly: true
        uid:
          type: string
          description: 'Output only. Google-generated UUID for this resource. This is unique across all scope resources. If a scope resource is deleted and another resource with the same name is created, it gets a different uid.'
          readOnly: true
        createTime:
          type: string
          format: google-datetime
          description: Output only. When the scope was created.
          readOnly: true
        allMemberships:
          type: boolean
          description: 'If true, all Memberships in the Fleet bind to this Scope.'
      id: Scope
      description: Scope represents a Scope in a Fleet.
    MembershipEndpoint:
      description: 'MembershipEndpoint contains information needed to contact a Kubernetes API, endpoint and any additional Kubernetes metadata.'
      type: object
      properties:
        gkeCluster:
          $ref: '#/components/schemas/GkeCluster'
          description: Optional. Specific information for a GKE-on-GCP cluster.
        kubernetesResource:
          $ref: '#/components/schemas/KubernetesResource'
          description: 'Optional. The in-cluster Kubernetes Resources that should be applied for a correctly registered cluster, in the steady state. These resources: * Ensure that the cluster is exclusively registered to one and only one Hub Membership. * Propagate Workload Pool Information available in the Membership Authority field. * Ensure proper initial configuration of default Hub Features.'
        edgeCluster:
          $ref: '#/components/schemas/EdgeCluster'
          description: Optional. Specific information for a Google Edge cluster.
        googleManaged:
          type: boolean
          description: Output only. Whether the lifecycle of this membership is managed by a google cluster platform service.
          readOnly: true
        applianceCluster:
          $ref: '#/components/schemas/ApplianceCluster'
          description: Optional. Specific information for a GDC Edge Appliance cluster.
        onPremCluster:
          description: 'Optional. Specific information for a GKE On-Prem cluster. An onprem user-cluster who has no resourceLink is not allowed to use this field, it should have a nil "type" instead.'
          $ref: '#/components/schemas/OnPremCluster'
        kubernetesMetadata:
          $ref: '#/components/schemas/KubernetesMetadata'
          description: Output only. Useful Kubernetes-specific metadata.
          readOnly: true
        multiCloudCluster:
          $ref: '#/components/schemas/MultiCloudCluster'
          description: Optional. Specific information for a GKE Multi-Cloud cluster.
      id: MembershipEndpoint
    ConfigManagementSyncState:
      id: ConfigManagementSyncState
      description: State indicating an ACM's progress syncing configurations to a cluster
      type: object
      properties:
        code:
          type: string
          enumDescriptions:
            - ACM cannot determine a sync code
            - ACM successfully synced the git Repo with the cluster
            - ACM is in the progress of syncing a new change
            - 'Indicates an error configuring ACM, and user action is required'
            - 'ACM has been installed (operator manifest deployed), but not configured.'
            - ACM has not been installed (no operator pod found)
            - Error authorizing with the cluster
            - Cluster could not be reached
          description: Sync status code
          enum:
            - SYNC_CODE_UNSPECIFIED
            - SYNCED
            - PENDING
            - ERROR
            - NOT_CONFIGURED
            - NOT_INSTALLED
            - UNAUTHORIZED
            - UNREACHABLE
        importToken:
          description: Token indicating the state of the importer.
          type: string
        errors:
          type: array
          description: 'A list of errors resulting from problematic configs. This list will be truncated after 100 errors, although it is unlikely for that many errors to simultaneously exist.'
          items:
            $ref: '#/components/schemas/ConfigManagementSyncError'
        lastSyncTime:
          format: google-datetime
          description: Timestamp type of when ACM last successfully synced the repo
          type: string
        syncToken:
          type: string
          description: Token indicating the state of the syncer.
        sourceToken:
          description: Token indicating the state of the repo.
          type: string
        lastSync:
          type: string
          deprecated: true
          description: 'Deprecated: use last_sync_time instead. Timestamp of when ACM last successfully synced the repo The time format is specified in https://golang.org/pkg/time/#Time.String'
    FleetObservabilityFeatureError:
      type: object
      properties:
        description:
          description: A human-readable description of the current status.
          type: string
        code:
          type: string
          description: The code of the error.
      description: All error details of the fleet observability feature.
      id: FleetObservabilityFeatureError
    ListFleetsResponse:
      id: ListFleetsResponse
      type: object
      description: Response message for the `GkeHub.ListFleetsResponse` method.
      properties:
        fleets:
          items:
            $ref: '#/components/schemas/Fleet'
          description: The list of matching fleets.
          type: array
        nextPageToken:
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. The token is only valid for 1h.'
          type: string
    ResourceManifest:
      type: object
      id: ResourceManifest
      properties:
        manifest:
          type: string
          description: YAML manifest of the resource.
        clusterScoped:
          type: boolean
          description: 'Whether the resource provided in the manifest is `cluster_scoped`. If unset, the manifest is assumed to be namespace scoped. This field is used for REST mapping when applying the resource in a cluster.'
      description: ResourceManifest represents a single Kubernetes resource to be applied to the cluster.
    MembershipFeatureState:
      id: MembershipFeatureState
      properties:
        servicemesh:
          description: Service Mesh-specific state.
          $ref: '#/components/schemas/ServiceMeshMembershipState'
        identityservice:
          $ref: '#/components/schemas/IdentityServiceMembershipState'
          description: Identity Service-specific state.
        appdevexperience:
          $ref: '#/components/schemas/AppDevExperienceFeatureState'
          description: Appdevexperience specific state.
        state:
          description: The high-level state of this Feature for a single membership.
          $ref: '#/components/schemas/FeatureState'
        configmanagement:
          $ref: '#/components/schemas/ConfigManagementMembershipState'
          description: Config Management-specific state.
        fleetobservability:
          $ref: '#/components/schemas/FleetObservabilityMembershipState'
          description: Fleet observability membership state.
      type: object
      description: MembershipFeatureState contains Feature status information for a single Membership.
    Origin:
      description: Origin defines where this MembershipFeatureSpec originated from.
      type: object
      properties:
        type:
          enum:
            - TYPE_UNSPECIFIED
            - FLEET
            - USER
          type: string
          enumDescriptions:
            - Type is unknown or not set.
            - Per-Membership spec was inherited from the fleet-level default.
            - Per-Membership spec was inherited from a user specification.
          description: Type specifies which type of origin is set.
      id: Origin
    ConfigManagementInstallError:
      type: object
      description: Errors pertaining to the installation of ACM
      properties:
        errorMessage:
          description: A string representing the user facing error message
          type: string
      id: ConfigManagementInstallError
    ConfigManagementHierarchyControllerState:
      properties:
        state:
          $ref: '#/components/schemas/ConfigManagementHierarchyControllerDeploymentState'
          description: The deployment state for Hierarchy Controller
        version:
          $ref: '#/components/schemas/ConfigManagementHierarchyControllerVersion'
          description: The version for Hierarchy Controller
      description: State for Hierarchy Controller
      type: object
      id: ConfigManagementHierarchyControllerState
    ConfigManagementGitConfig:
      description: Git repo configuration for a single cluster.
      type: object
      properties:
        syncBranch:
          type: string
          description: 'The branch of the repository to sync from. Default: master.'
        syncRev:
          description: Git revision (tag or hash) to check out. Default HEAD.
          type: string
        syncRepo:
          type: string
          description: The URL of the Git repository to use as the source of truth.
        gcpServiceAccountEmail:
          type: string
          description: The Google Cloud Service Account Email used for auth when secret_type is gcpServiceAccount.
        syncWaitSecs:
          description: 'Period in seconds between consecutive syncs. Default: 15.'
          format: int64
          type: string
        secretType:
          description: 'Type of secret configured for access to the Git repo. Must be one of ssh, cookiefile, gcenode, token, gcpserviceaccount or none. The validation of this is case-sensitive. Required.'
          type: string
        policyDir:
          description: 'The path within the Git repository that represents the top level of the repo to sync. Default: the root directory of the repository.'
          type: string
        httpsProxy:
          type: string
          description: URL for the HTTPS proxy to be used when communicating with the Git repo.
      id: ConfigManagementGitConfig
    IdentityServiceMembershipSpec:
      properties:
        authMethods:
          description: A member may support multiple auth methods.
          type: array
          items:
            $ref: '#/components/schemas/IdentityServiceAuthMethod'
      type: object
      description: '**Anthos Identity Service**: Configuration for a single Membership.'
      id: IdentityServiceMembershipSpec
    ConfigManagementPolicyController:
      id: ConfigManagementPolicyController
      type: object
      properties:
        logDeniesEnabled:
          description: Logs all denies and dry run failures.
          type: boolean
        updateTime:
          type: string
          format: google-datetime
          description: Output only. Last time this membership spec was updated.
          readOnly: true
        monitoring:
          $ref: '#/components/schemas/ConfigManagementPolicyControllerMonitoring'
          description: Monitoring specifies the configuration of monitoring.
        enabled:
          type: boolean
          description: 'Enables the installation of Policy Controller. If false, the rest of PolicyController fields take no effect.'
        referentialRulesEnabled:
          type: boolean
          description: Enables the ability to use Constraint Templates that reference to objects other than the object currently being evaluated.
        exemptableNamespaces:
          description: The set of namespaces that are excluded from Policy Controller checks. Namespaces do not need to currently exist on the cluster.
          type: array
          items:
            type: string
        templateLibraryInstalled:
          type: boolean
          description: Installs the default template library along with Policy Controller.
        auditIntervalSeconds:
          format: int64
          type: string
          description: 'Sets the interval for Policy Controller Audit Scans (in seconds). When set to 0, this disables audit functionality altogether.'
        mutationEnabled:
          type: boolean
          description: 'Enable or disable mutation in policy controller. If true, mutation CRDs, webhook and controller deployment will be deployed to the cluster.'
      description: Configuration for Policy Controller
    OperationMetadata:
      type: object
      id: OperationMetadata
      properties:
        apiVersion:
          readOnly: true
          description: Output only. API version used to start the operation.
          type: string
        statusDetail:
          type: string
          description: 'Output only. Human-readable status of the operation, if any.'
          readOnly: true
        target:
          readOnly: true
          type: string
          description: Output only. Server-defined resource path for the target of the operation.
        cancelRequested:
          readOnly: true
          type: boolean
          description: 'Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        createTime:
          type: string
          format: google-datetime
          description: Output only. The time the operation was created.
          readOnly: true
        endTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time the operation finished running.
          type: string
      description: Represents the metadata of the long-running operation.
    RBACRoleBinding:
      description: RBACRoleBinding represents a rbacrolebinding across the Fleet
      type: object
      properties:
        createTime:
          readOnly: true
          type: string
          description: Output only. When the rbacrolebinding was created.
          format: google-datetime
        state:
          $ref: '#/components/schemas/RBACRoleBindingLifecycleState'
          readOnly: true
          description: Output only. State of the rbacrolebinding resource.
        user:
          description: 'user is the name of the user as seen by the kubernetes cluster, example "alice" or "alice@domain.tld"'
          type: string
        group:
          type: string
          description: 'group is the group, as seen by the kubernetes cluster.'
        uid:
          description: 'Output only. Google-generated UUID for this resource. This is unique across all rbacrolebinding resources. If a rbacrolebinding resource is deleted and another resource with the same name is created, it gets a different uid.'
          type: string
          readOnly: true
        role:
          $ref: '#/components/schemas/Role'
          description: Required. Role to bind to the principal
        labels:
          description: Optional. Labels for this RBACRolebinding.
          type: object
          additionalProperties:
            type: string
        name:
          type: string
          description: 'The resource name for the rbacrolebinding `projects/{project}/locations/{location}/namespaces/{namespace}/rbacrolebindings/{rbacrolebinding}` or `projects/{project}/locations/{location}/memberships/{membership}/rbacrolebindings/{rbacrolebinding}`'
        updateTime:
          description: Output only. When the rbacrolebinding was last updated.
          format: google-datetime
          readOnly: true
          type: string
        deleteTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. When the rbacrolebinding was deleted.
      id: RBACRoleBinding
    EdgeCluster:
      type: object
      description: EdgeCluster contains information specific to Google Edge Clusters.
      properties:
        resourceLink:
          description: 'Immutable. Self-link of the Google Cloud resource for the Edge Cluster. For example: //edgecontainer.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster'
          type: string
      id: EdgeCluster
    NamespaceLifecycleState:
      description: NamespaceLifecycleState describes the state of a Namespace resource.
      type: object
      properties:
        code:
          enumDescriptions:
            - The code is not set.
            - The namespace is being created.
            - The namespace active.
            - The namespace is being deleted.
            - The namespace is being updated.
          readOnly: true
          description: Output only. The current state of the Namespace resource.
          enum:
            - CODE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - UPDATING
          type: string
      id: NamespaceLifecycleState
    Expr:
      description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != ''private'' && document.type != ''internal''" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "''New message received at '' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.'
      id: Expr
      properties:
        title:
          type: string
          description: 'Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.'
        expression:
          description: Textual representation of an expression in Common Expression Language syntax.
          type: string
        description:
          type: string
          description: 'Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.'
        location:
          type: string
          description: 'Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.'
      type: object
    Operation:
      type: object
      id: Operation
      properties:
        error:
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: The error result of the operation in case of failure or cancellation.
        name:
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
          type: string
        metadata:
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
        response:
          description: 'The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
          type: boolean
      description: This resource represents a long-running operation that is the result of a network API call.
    ConfigManagementConfigSync:
      id: ConfigManagementConfigSync
      type: object
      description: Configuration for Config Sync
      properties:
        metricsGcpServiceAccountEmail:
          description: The Email of the Google Cloud Service Account (GSA) used for exporting Config Sync metrics to Cloud Monitoring and Cloud Monarch when Workload Identity is enabled. The GSA should have the Monitoring Metric Writer (roles/monitoring.metricWriter) IAM role. The Kubernetes ServiceAccount `default` in the namespace `config-management-monitoring` should be bound to the GSA. This field is required when automatic Feature management is enabled.
          type: string
        sourceFormat:
          type: string
          description: Specifies whether the Config Sync Repo is in "hierarchical" or "unstructured" mode.
        allowVerticalScale:
          deprecated: true
          type: boolean
          description: Set to true to allow the vertical scaling. Defaults to false which disallows vertical scaling. This field is deprecated.
        git:
          $ref: '#/components/schemas/ConfigManagementGitConfig'
          description: Git repo configuration for the cluster.
        preventDrift:
          type: boolean
          description: 'Set to true to enable the Config Sync admission webhook to prevent drifts. If set to `false`, disables the Config Sync admission webhook and does not prevent drifts.'
        stopSyncing:
          description: Set to true to stop syncing configs for a single cluster when automatic Feature management is enabled. Default to false. The field will be ignored when automatic Feature management is disabled.
          type: boolean
        enabled:
          description: 'Enables the installation of ConfigSync. If set to true, ConfigSync resources will be created and the other ConfigSync fields will be applied if exist. If set to false, all other ConfigSync fields will be ignored, ConfigSync resources will be deleted. If omitted, ConfigSync resources will be managed depends on the presence of the git or oci field.'
          type: boolean
        oci:
          description: OCI repo configuration for the cluster
          $ref: '#/components/schemas/ConfigManagementOciConfig'
    FleetObservabilityFeatureState:
      description: '**FleetObservability**: Hub-wide Feature for FleetObservability feature. state.'
      properties:
        monitoring:
          description: The feature state of fleet monitoring.
          $ref: '#/components/schemas/FleetObservabilityFleetObservabilityMonitoringState'
        logging:
          description: The feature state of default logging.
          $ref: '#/components/schemas/FleetObservabilityFleetObservabilityLoggingState'
      id: FleetObservabilityFeatureState
      type: object
    ListMembershipsResponse:
      type: object
      id: ListMembershipsResponse
      description: Response message for the `GkeHub.ListMemberships` method.
      properties:
        nextPageToken:
          description: A token to request the next page of resources from the `ListMemberships` method. The value of an empty string means that there are no more resources to return.
          type: string
        unreachable:
          description: List of locations that could not be reached while fetching this list.
          items:
            type: string
          type: array
        resources:
          description: The list of matching Memberships.
          type: array
          items:
            $ref: '#/components/schemas/Membership'
    FleetObservabilityFleetObservabilityMonitoringState:
      description: Feature state for monitoring feature.
      type: object
      id: FleetObservabilityFleetObservabilityMonitoringState
      properties:
        state:
          description: The base feature state of fleet monitoring feature.
          $ref: '#/components/schemas/FleetObservabilityFleetObservabilityBaseFeatureState'
    Namespace:
      properties:
        namespaceLabels:
          type: object
          additionalProperties:
            type: string
          description: Optional. Namespace-level cluster namespace labels. These labels are applied to the related namespace of the member clusters bound to the parent Scope. Scope-level labels (`namespace_labels` in the Fleet Scope resource) take precedence over Namespace-level labels if they share a key. Keys and values must be Kubernetes-conformant.
        scope:
          type: string
          description: Required. Scope associated with the namespace
        createTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. When the namespace was created.
        deleteTime:
          description: Output only. When the namespace was deleted.
          type: string
          readOnly: true
          format: google-datetime
        uid:
          readOnly: true
          type: string
          description: 'Output only. Google-generated UUID for this resource. This is unique across all namespace resources. If a namespace resource is deleted and another resource with the same name is created, it gets a different uid.'
        updateTime:
          description: Output only. When the namespace was last updated.
          readOnly: true
          type: string
          format: google-datetime
        name:
          type: string
          description: 'The resource name for the namespace `projects/{project}/locations/{location}/namespaces/{namespace}`'
        labels:
          type: object
          additionalProperties:
            type: string
          description: Optional. Labels for this Namespace.
        state:
          $ref: '#/components/schemas/NamespaceLifecycleState'
          readOnly: true
          description: Output only. State of the namespace resource.
      type: object
      description: Namespace represents a namespace across the Fleet
      id: Namespace
    ConfigManagementHierarchyControllerVersion:
      description: Version for Hierarchy Controller
      properties:
        extension:
          type: string
          description: Version for Hierarchy Controller extension
        hnc:
          description: Version for open source HNC
          type: string
      id: ConfigManagementHierarchyControllerVersion
      type: object
    IdentityServiceAzureADConfig:
      id: IdentityServiceAzureADConfig
      properties:
        tenant:
          description: Kind of Azure AD account to be authenticated. Supported values are or for accounts belonging to a specific tenant.
          type: string
        clientSecret:
          description: Input only. Unencrypted AzureAD client secret will be passed to the GKE Hub CLH.
          type: string
        encryptedClientSecret:
          format: byte
          description: Output only. Encrypted AzureAD client secret.
          type: string
          readOnly: true
        clientId:
          type: string
          description: ID for the registered client application that makes authentication requests to the Azure AD identity provider.
        kubectlRedirectUri:
          type: string
          description: The redirect URL that kubectl uses for authorization.
      description: Configuration for the AzureAD Auth flow.
      type: object
    Role:
      type: object
      description: Role is the type for Kubernetes roles
      properties:
        predefinedRole:
          enumDescriptions:
            - UNKNOWN
            - ADMIN has EDIT and RBAC permissions
            - EDIT can edit all resources except RBAC
            - VIEW can only read resources
            - ANTHOS_SUPPORT gives Google Support read-only access to a number of cluster resources.
          type: string
          description: predefined_role is the Kubernetes default role to use
          enum:
            - UNKNOWN
            - ADMIN
            - EDIT
            - VIEW
            - ANTHOS_SUPPORT
      id: Role
    TestIamPermissionsRequest:
      type: object
      properties:
        permissions:
          items:
            type: string
          description: 'The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).'
          type: array
      id: TestIamPermissionsRequest
      description: Request message for `TestIamPermissions` method.
    Fleet:
      id: Fleet
      properties:
        deleteTime:
          format: google-datetime
          description: Output only. When the Fleet was deleted.
          type: string
          readOnly: true
        labels:
          description: Optional. Labels for this Fleet.
          type: object
          additionalProperties:
            type: string
        state:
          readOnly: true
          $ref: '#/components/schemas/FleetLifecycleState'
          description: Output only. State of the namespace resource.
        displayName:
          type: string
          description: 'Optional. A user-assigned display name of the Fleet. When present, it must be between 4 to 30 characters. Allowed characters are: lowercase and uppercase letters, numbers, hyphen, single-quote, double-quote, space, and exclamation point. Example: `Production Fleet`'
        uid:
          description: 'Output only. Google-generated UUID for this resource. This is unique across all Fleet resources. If a Fleet resource is deleted and another resource with the same name is created, it gets a different uid.'
          type: string
          readOnly: true
        createTime:
          description: Output only. When the Fleet was created.
          format: google-datetime
          type: string
          readOnly: true
        updateTime:
          description: Output only. When the Fleet was last updated.
          readOnly: true
          type: string
          format: google-datetime
        name:
          description: 'Output only. The full, unique resource name of this fleet in the format of `projects/{project}/locations/{location}/fleets/{fleet}`. Each Google Cloud project can have at most one fleet resource, named "default".'
          type: string
          readOnly: true
      description: Fleet contains the Fleet-wide metadata and configuration.
      type: object
    CommonFeatureSpec:
      description: CommonFeatureSpec contains Hub-wide configuration information
      properties:
        multiclusteringress:
          description: Multicluster Ingress-specific spec.
          $ref: '#/components/schemas/MultiClusterIngressFeatureSpec'
        appdevexperience:
          $ref: '#/components/schemas/AppDevExperienceFeatureSpec'
          description: Appdevexperience specific spec.
        fleetobservability:
          description: FleetObservability feature spec.
          $ref: '#/components/schemas/FleetObservabilityFeatureSpec'
      id: CommonFeatureSpec
      type: object
    ConfigManagementMembershipState:
      description: '**Anthos Config Management**: State for a single cluster.'
      id: ConfigManagementMembershipState
      properties:
        clusterName:
          type: string
          description: 'This field is set to the `cluster_name` field of the Membership Spec if it is not empty. Otherwise, it is set to the cluster''s fleet membership name.'
        operatorState:
          description: Current install status of ACM's Operator
          $ref: '#/components/schemas/ConfigManagementOperatorState'
        configSyncState:
          description: Current sync status
          $ref: '#/components/schemas/ConfigManagementConfigSyncState'
        policyControllerState:
          description: PolicyController status
          $ref: '#/components/schemas/ConfigManagementPolicyControllerState'
        membershipSpec:
          description: 'Membership configuration in the cluster. This represents the actual state in the cluster, while the MembershipSpec in the FeatureSpec represents the intended state'
          $ref: '#/components/schemas/ConfigManagementMembershipSpec'
        hierarchyControllerState:
          $ref: '#/components/schemas/ConfigManagementHierarchyControllerState'
          description: Hierarchy Controller status
      type: object
    ListLocationsResponse:
      id: ListLocationsResponse
      properties:
        locations:
          items:
            $ref: '#/components/schemas/Location'
          type: array
          description: A list of locations that matches the specified filter in the request.
        nextPageToken:
          description: The standard List next-page token.
          type: string
      description: The response message for Locations.ListLocations.
      type: object
    MembershipBinding:
      type: object
      description: 'MembershipBinding is a subresource of a Membership, representing what Fleet Scopes (or other, future Fleet resources) a Membership is bound to.'
      properties:
        uid:
          readOnly: true
          type: string
          description: 'Output only. Google-generated UUID for this resource. This is unique across all membershipbinding resources. If a membershipbinding resource is deleted and another resource with the same name is created, it gets a different uid.'
        state:
          readOnly: true
          $ref: '#/components/schemas/MembershipBindingLifecycleState'
          description: Output only. State of the membership binding resource.
        updateTime:
          type: string
          format: google-datetime
          description: Output only. When the membership binding was last updated.
          readOnly: true
        fleet:
          description: Whether the membershipbinding is Fleet-wide; true means that this Membership should be bound to all Namespaces in this entire Fleet.
          type: boolean
        deleteTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. When the membership binding was deleted.
        name:
          description: 'The resource name for the membershipbinding itself `projects/{project}/locations/{location}/memberships/{membership}/bindings/{membershipbinding}`'
          type: string
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. When the membership binding was created.
        scope:
          type: string
          description: A Scope resource name in the format `projects/*/locations/*/scopes/*`.
        labels:
          type: object
          description: Optional. Labels for this MembershipBinding.
          additionalProperties:
            type: string
      id: MembershipBinding
    ConfigManagementPolicyControllerVersion:
      id: ConfigManagementPolicyControllerVersion
      properties:
        version:
          type: string
          description: 'The gatekeeper image tag that is composed of ACM version, git tag, build number.'
      type: object
      description: The build version of Gatekeeper Policy Controller is using.
    AppDevExperienceFeatureState:
      properties:
        networkingInstallSucceeded:
          description: Status of subcomponent that detects configured Service Mesh resources.
          $ref: '#/components/schemas/Status'
      id: AppDevExperienceFeatureState
      type: object
      description: State for App Dev Exp Feature.
    FleetObservabilityFleetObservabilityBaseFeatureState:
      type: object
      properties:
        errors:
          description: Errors after reconciling the monitoring and logging feature if the code is not OK.
          items:
            $ref: '#/components/schemas/FleetObservabilityFeatureError'
          type: array
        code:
          enum:
            - CODE_UNSPECIFIED
            - OK
            - ERROR
          description: 'The high-level, machine-readable status of this Feature.'
          type: string
          enumDescriptions:
            - Unknown or not set.
            - The Feature is operating normally.
            - The Feature is encountering errors in the reconciliation. The Feature may need intervention to return to normal operation. See the description and any associated Feature-specific details for more information.
      id: FleetObservabilityFleetObservabilityBaseFeatureState
      description: Base state for fleet observability feature.
    ListScopeNamespacesResponse:
      id: ListScopeNamespacesResponse
      properties:
        nextPageToken:
          type: string
          description: A token to request the next page of resources from the `ListNamespaces` method. The value of an empty string means that there are no more resources to return.
        scopeNamespaces:
          type: array
          items:
            $ref: '#/components/schemas/Namespace'
          description: The list of fleet namespaces
      type: object
      description: List of fleet namespaces.
    TypeMeta:
      description: TypeMeta is the type information needed for content unmarshalling of Kubernetes resources in the manifest.
      properties:
        kind:
          type: string
          description: Kind of the resource (e.g. Deployment).
        apiVersion:
          description: APIVersion of the resource (e.g. v1).
          type: string
      id: TypeMeta
      type: object
    ConfigManagementGatekeeperDeploymentState:
      description: State of Policy Controller installation.
      properties:
        gatekeeperAudit:
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - 'Deployment was attempted to be installed, but has errors'
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          description: Status of gatekeeper-audit deployment.
        gatekeeperControllerManagerState:
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - 'Deployment was attempted to be installed, but has errors'
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          type: string
          description: Status of gatekeeper-controller-manager pod.
        gatekeeperMutation:
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - 'Deployment was attempted to be installed, but has errors'
          description: Status of the pod serving the mutation webhook.
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
      type: object
      id: ConfigManagementGatekeeperDeploymentState
    Authority:
      properties:
        issuer:
          type: string
          description: 'Optional. A JSON Web Token (JWT) issuer URI. `issuer` must start with `https://` and be a valid URL with length <2000 characters. If set, then Google will allow valid OIDC tokens from this issuer to authenticate within the workload_identity_pool. OIDC discovery will be performed on this URI to validate tokens from the issuer. Clearing `issuer` disables Workload Identity. `issuer` cannot be directly modified; it must be cleared (and Workload Identity disabled) before using a new issuer (and re-enabling Workload Identity).'
        identityProvider:
          readOnly: true
          description: Output only. An identity provider that reflects the `issuer` in the workload identity pool.
          type: string
        workloadIdentityPool:
          readOnly: true
          type: string
          description: 'Output only. The name of the workload identity pool in which `issuer` will be recognized. There is a single Workload Identity Pool per Hub that is shared between all Memberships that belong to that Hub. For a Hub hosted in {PROJECT_ID}, the workload pool format is `{PROJECT_ID}.hub.id.goog`, although this is subject to change in newer versions of this API.'
        oidcJwks:
          description: 'Optional. OIDC verification keys for this Membership in JWKS format (RFC 7517). When this field is set, OIDC discovery will NOT be performed on `issuer`, and instead OIDC tokens will be validated using this field.'
          type: string
          format: byte
      id: Authority
      description: 'Authority encodes how Google will recognize identities from this Membership. See the workload identity documentation for more details: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity'
      type: object
    AppDevExperienceFeatureSpec:
      description: Spec for App Dev Experience Feature.
      id: AppDevExperienceFeatureSpec
      type: object
      properties: {}
    ScopeFeatureState:
      type: object
      description: ScopeFeatureState contains Scope-wide Feature status information.
      properties:
        state:
          description: Output only. The "running state" of the Feature in this Scope.
          readOnly: true
          $ref: '#/components/schemas/FeatureState'
      id: ScopeFeatureState
    ListScopesResponse:
      properties:
        scopes:
          type: array
          items:
            $ref: '#/components/schemas/Scope'
          description: The list of Scopes
        nextPageToken:
          description: A token to request the next page of resources from the `ListScopes` method. The value of an empty string means that there are no more resources to return.
          type: string
      description: List of Scopes.
      type: object
      id: ListScopesResponse
    ConfigManagementGroupVersionKind:
      properties:
        version:
          type: string
          description: Kubernetes Version
        kind:
          description: Kubernetes Kind
          type: string
        group:
          type: string
          description: Kubernetes Group
      description: A Kubernetes object's GVK
      id: ConfigManagementGroupVersionKind
      type: object
    IdentityServiceOidcConfig:
      description: Configuration for OIDC Auth flow.
      properties:
        certificateAuthorityData:
          type: string
          description: PEM-encoded CA for OIDC provider.
        userPrefix:
          type: string
          description: Prefix to prepend to user name.
        clientId:
          type: string
          description: ID for OIDC client application.
        kubectlRedirectUri:
          description: Registered redirect uri to redirect users going through OAuth flow using kubectl plugin.
          type: string
        enableAccessToken:
          type: boolean
          description: Enable access token.
        extraParams:
          description: Comma-separated list of key-value pairs.
          type: string
        groupsClaim:
          description: Claim in OIDC ID token that holds group information.
          type: string
        clientSecret:
          type: string
          description: Input only. Unencrypted OIDC client secret will be passed to the GKE Hub CLH.
        scopes:
          description: Comma-separated list of identifiers.
          type: string
        encryptedClientSecret:
          type: string
          description: Output only. Encrypted OIDC Client secret
          format: byte
          readOnly: true
        deployCloudConsoleProxy:
          description: Flag to denote if reverse proxy is used to connect to auth provider. This flag should be set to true when provider is not reachable by Google Cloud Console.
          type: boolean
        userClaim:
          description: Claim in OIDC ID token that holds username.
          type: string
        groupPrefix:
          type: string
          description: Prefix to prepend to group name.
        issuerUri:
          description: URI for the OIDC provider. This should point to the level below .well-known/openid-configuration.
          type: string
      id: IdentityServiceOidcConfig
      type: object
    IdentityServiceMembershipState:
      type: object
      id: IdentityServiceMembershipState
      properties:
        state:
          description: Deployment state on this member
          enumDescriptions:
            - Unspecified state
            - deployment succeeds
            - Failure with error.
          type: string
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - OK
            - ERROR
        installedVersion:
          type: string
          description: Installed AIS version. This is the AIS version installed on this member. The values makes sense iff state is OK.
        failureReason:
          description: The reason of the failure.
          type: string
        memberConfig:
          $ref: '#/components/schemas/IdentityServiceMembershipSpec'
          description: Last reconciled membership configuration
      description: '**Anthos Identity Service**: State for a single Membership.'
    ConfigManagementPolicyControllerMigration:
      type: object
      description: State for the migration of PolicyController from ACM -> PoCo Hub.
      properties:
        stage:
          enum:
            - STAGE_UNSPECIFIED
            - ACM_MANAGED
            - POCO_MANAGED
          description: Stage of the migration.
          type: string
          enumDescriptions:
            - Unknown state of migration.
            - ACM Hub/Operator manages policycontroller. No migration yet completed.
            - All migrations steps complete; Poco Hub now manages policycontroller.
        copyTime:
          type: string
          description: Last time this membership spec was copied to PoCo feature.
          format: google-datetime
      id: ConfigManagementPolicyControllerMigration
    OnPremCluster:
      type: object
      id: OnPremCluster
      properties:
        resourceLink:
          type: string
          description: 'Immutable. Self-link of the Google Cloud resource for the GKE On-Prem cluster. For example: //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/vmwareClusters/my-cluster //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/bareMetalClusters/my-cluster'
        clusterType:
          enumDescriptions:
            - The ClusterType is not set.
            - The ClusterType is bootstrap cluster.
            - The ClusterType is baremetal hybrid cluster.
            - The ClusterType is baremetal standalone cluster.
            - The ClusterType is user cluster.
          description: Immutable. The on prem cluster's type.
          enum:
            - CLUSTERTYPE_UNSPECIFIED
            - BOOTSTRAP
            - HYBRID
            - STANDALONE
            - USER
          type: string
        adminCluster:
          type: boolean
          description: Immutable. Whether the cluster is an admin cluster.
        clusterMissing:
          type: boolean
          readOnly: true
          description: Output only. If cluster_missing is set then it denotes that API(gkeonprem.googleapis.com) resource for this GKE On-Prem cluster no longer exists.
      description: OnPremCluster contains information specific to GKE On-Prem clusters.
    ListOperationsResponse:
      type: object
      description: The response message for Operations.ListOperations.
      id: ListOperationsResponse
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          items:
            $ref: '#/components/schemas/Operation'
          type: array
          description: A list of operations that matches the specified filter in the request.
    ConfigManagementOciConfig:
      id: ConfigManagementOciConfig
      description: OCI repo configuration for a single cluster
      properties:
        policyDir:
          description: 'The absolute path of the directory that contains the local resources. Default: the root directory of the image.'
          type: string
        gcpServiceAccountEmail:
          description: The Google Cloud Service Account Email used for auth when secret_type is gcpServiceAccount.
          type: string
        syncWaitSecs:
          description: 'Period in seconds between consecutive syncs. Default: 15.'
          format: int64
          type: string
        syncRepo:
          type: string
          description: The OCI image repository URL for the package to sync from. e.g. `LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY_NAME/PACKAGE_NAME`.
        secretType:
          description: Type of secret configured for access to the Git repo.
          type: string
      type: object
    MonitoringConfig:
      properties:
        clusterHash:
          description: 'Immutable. Cluster hash, this is a unique string generated by google code, which does not contain any PII, which we can use to reference the cluster. This is expected to be created by the monitoring stack and persisted into the Cluster object as well as to GKE-Hub.'
          type: string
        location:
          type: string
          description: Immutable. Location used to report Metrics
        kubernetesMetricsPrefix:
          type: string
          description: 'Kubernetes system metrics, if available, are written to this prefix. This defaults to kubernetes.io for GKE, and kubernetes.io/anthos for Anthos eventually. Noted: Anthos MultiCloud will have kubernetes.io prefix today but will migration to be under kubernetes.io/anthos'
        cluster:
          description: 'Immutable. Cluster name used to report metrics. For Anthos on VMWare/Baremetal, it would be in format `memberClusters/cluster_name`; And for Anthos on MultiCloud, it would be in format `{azureClusters, awsClusters}/cluster_name`.'
          type: string
        projectId:
          description: Immutable. Project used to report Metrics
          type: string
      description: This field informs Fleet-based applications/services/UIs with the necessary information for where each underlying Cluster reports its metrics.
      type: object
      id: MonitoringConfig
    ServiceMeshMembershipSpec:
      description: '**Service Mesh**: Spec for a single Membership for the servicemesh feature'
      id: ServiceMeshMembershipSpec
      properties:
        management:
          enumDescriptions:
            - Unspecified
            - Google should manage my Service Mesh for the cluster.
            - User will manually configure their service mesh components.
          enum:
            - MANAGEMENT_UNSPECIFIED
            - MANAGEMENT_AUTOMATIC
            - MANAGEMENT_MANUAL
          type: string
          description: Enables automatic Service Mesh management.
        controlPlane:
          enum:
            - CONTROL_PLANE_MANAGEMENT_UNSPECIFIED
            - AUTOMATIC
            - MANUAL
          deprecated: true
          enumDescriptions:
            - Unspecified
            - 'Google should provision a control plane revision and make it available in the cluster. Google will enroll this revision in a release channel and keep it up to date. The control plane revision may be a managed service, or a managed install.'
            - 'User will manually configure the control plane (e.g. via CLI, or via the ControlPlaneRevision KRM API)'
          type: string
          description: 'Deprecated: use `management` instead Enables automatic control plane management.'
      type: object
    ScopeFeatureSpec:
      type: object
      id: ScopeFeatureSpec
      properties: {}
      description: ScopeFeatureSpec contains feature specs for a fleet scope.
    GkeCluster:
      type: object
      properties:
        resourceLink:
          description: 'Immutable. Self-link of the Google Cloud resource for the GKE cluster. For example: //container.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster Zonal clusters are also supported.'
          type: string
        clusterMissing:
          type: boolean
          readOnly: true
          description: Output only. If cluster_missing is set then it denotes that the GKE cluster no longer exists in the GKE Control Plane.
      description: GkeCluster contains information specific to GKE clusters.
      id: GkeCluster
    MultiClusterIngressFeatureSpec:
      id: MultiClusterIngressFeatureSpec
      type: object
      description: '**Multi-cluster Ingress**: The configuration for the MultiClusterIngress feature.'
      properties:
        configMembership:
          type: string
          description: 'Fully-qualified Membership name which hosts the MultiClusterIngress CRD. Example: `projects/foo-proj/locations/global/memberships/bar`'
    ConfigManagementPolicyControllerMonitoring:
      type: object
      id: ConfigManagementPolicyControllerMonitoring
      description: 'PolicyControllerMonitoring specifies the backends Policy Controller should export metrics to. For example, to specify metrics should be exported to Cloud Monitoring and Prometheus, specify backends: ["cloudmonitoring", "prometheus"]'
      properties:
        backends:
          description: Specifies the list of backends Policy Controller will export to. An empty list would effectively disable metrics export.
          type: array
          items:
            enumDescriptions:
              - Backend cannot be determined
              - Prometheus backend for monitoring
              - Stackdriver/Cloud Monitoring backend for monitoring
            enum:
              - MONITORING_BACKEND_UNSPECIFIED
              - PROMETHEUS
              - CLOUD_MONITORING
            type: string
    ConfigManagementErrorResource:
      properties:
        resourceName:
          type: string
          description: Metadata name of the resource that is causing an error
        resourceNamespace:
          type: string
          description: Namespace of the resource that is causing an error
        sourcePath:
          description: Path in the git repo of the erroneous config
          type: string
        resourceGvk:
          description: Group/version/kind of the resource that is causing an error
          $ref: '#/components/schemas/ConfigManagementGroupVersionKind'
      id: ConfigManagementErrorResource
      type: object
      description: Model for a config file in the git repo with an associated Sync error
    ResourceOptions:
      id: ResourceOptions
      description: ResourceOptions represent options for Kubernetes resource generation.
      properties:
        v1beta1Crd:
          type: boolean
          description: Optional. Use `apiextensions/v1beta1` instead of `apiextensions/v1` for CustomResourceDefinition resources. This option should be set for clusters with Kubernetes apiserver versions <1.16.
        connectVersion:
          description: 'Optional. The Connect agent version to use for connect_resources. Defaults to the latest GKE Connect version. The version must be a currently supported version, obsolete versions will be rejected.'
          type: string
        k8sVersion:
          type: string
          description: 'Optional. Major version of the Kubernetes cluster. This is only used to determine which version to use for the CustomResourceDefinition resources, `apiextensions/v1beta1` or`apiextensions/v1`.'
      type: object
    FleetObservabilityRoutingConfig:
      description: RoutingConfig configures the behaviour of fleet logging feature.
      properties:
        mode:
          type: string
          description: mode configures the logs routing mode.
          enumDescriptions:
            - 'If UNSPECIFIED, fleet logging feature is disabled.'
            - logs will be copied to the destination project.
            - logs will be moved to the destination project.
          enum:
            - MODE_UNSPECIFIED
            - COPY
            - MOVE
      id: FleetObservabilityRoutingConfig
      type: object
  parameters:
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
  x-stackQL-resources:
    scopes:
      id: google.gkehub.scopes
      name: scopes
      title: Scopes
      methods:
        projects_locations_scopes_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_scopes_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_scopes_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_scopes_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.scopes
        _projects_locations_scopes_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_scopes_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/scopes/methods/projects_locations_scopes_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/scopes/methods/projects_locations_scopes_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/scopes/methods/projects_locations_scopes_delete'
    scopes_iam_policies:
      id: google.gkehub.scopes_iam_policies
      name: scopes_iam_policies
      title: Scopes Iam Policies
      methods:
        projects_locations_scopes_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_scopes_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_scopes_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/scopes_iam_policies/methods/projects_locations_scopes_get_iam_policy'
        insert: []
        update: []
        delete: []
    rbacrolebindings:
      id: google.gkehub.rbacrolebindings
      name: rbacrolebindings
      title: Rbacrolebindings
      methods:
        projects_locations_scopes_rbacrolebindings_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}~1rbacrolebindings~1{rbacrolebindingsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_scopes_rbacrolebindings_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}~1rbacrolebindings~1{rbacrolebindingsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_scopes_rbacrolebindings_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}~1rbacrolebindings~1{rbacrolebindingsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_scopes_rbacrolebindings_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}~1rbacrolebindings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.rbacrolebindings
        _projects_locations_scopes_rbacrolebindings_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}~1rbacrolebindings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_scopes_rbacrolebindings_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}~1rbacrolebindings/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/rbacrolebindings/methods/projects_locations_scopes_rbacrolebindings_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/rbacrolebindings/methods/projects_locations_scopes_rbacrolebindings_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/rbacrolebindings/methods/projects_locations_scopes_rbacrolebindings_delete'
    namespaces:
      id: google.gkehub.namespaces
      name: namespaces
      title: Namespaces
      methods:
        projects_locations_scopes_namespaces_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}~1namespaces/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_scopes_namespaces_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}~1namespaces/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.scopeNamespaces
        _projects_locations_scopes_namespaces_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}~1namespaces/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_scopes_namespaces_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}~1namespaces~1{namespacesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_scopes_namespaces_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}~1namespaces~1{namespacesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_scopes_namespaces_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}~1namespaces~1{namespacesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/namespaces/methods/projects_locations_scopes_namespaces_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/namespaces/methods/projects_locations_scopes_namespaces_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/namespaces/methods/projects_locations_scopes_namespaces_delete'
    features:
      id: google.gkehub.features
      name: features
      title: Features
      methods:
        projects_locations_features_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1features/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_features_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1features/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.resources
        _projects_locations_features_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1features/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_features_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1features~1{featuresId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_features_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1features~1{featuresId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_features_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1features~1{featuresId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/features/methods/projects_locations_features_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/features/methods/projects_locations_features_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/features/methods/projects_locations_features_delete'
    features_iam_policies:
      id: google.gkehub.features_iam_policies
      name: features_iam_policies
      title: Features Iam Policies
      methods:
        projects_locations_features_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1features~1{featuresId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_features_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1features~1{featuresId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_features_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1features~1{featuresId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/features_iam_policies/methods/projects_locations_features_get_iam_policy'
        insert: []
        update: []
        delete: []
    operations:
      id: google.gkehub.operations
      name: operations
      title: Operations
      methods:
        projects_locations_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _projects_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_delete'
    bindings:
      id: google.gkehub.bindings
      name: bindings
      title: Bindings
      methods:
        projects_locations_memberships_bindings_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}~1bindings/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_bindings_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}~1bindings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.membershipBindings
        _projects_locations_memberships_bindings_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}~1bindings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_bindings_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}~1bindings~1{bindingsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_bindings_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}~1bindings~1{bindingsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_bindings_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}~1bindings~1{bindingsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/bindings/methods/projects_locations_memberships_bindings_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/bindings/methods/projects_locations_memberships_bindings_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/bindings/methods/projects_locations_memberships_bindings_delete'
    memberships:
      id: google.gkehub.memberships
      name: memberships
      title: Memberships
      methods:
        projects_locations_memberships_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.unreachable
        _projects_locations_memberships_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_generate_connect_manifest:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}:generateConnectManifest/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/memberships/methods/projects_locations_memberships_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/memberships/methods/projects_locations_memberships_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/memberships/methods/projects_locations_memberships_delete'
    memberships_iam_policies:
      id: google.gkehub.memberships_iam_policies
      name: memberships_iam_policies
      title: Memberships Iam Policies
      methods:
        projects_locations_memberships_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/memberships_iam_policies/methods/projects_locations_memberships_get_iam_policy'
        insert: []
        update: []
        delete: []
    fleets:
      id: google.gkehub.fleets
      name: fleets
      title: Fleets
      methods:
        projects_locations_fleets_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1fleets~1{fleetsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_fleets_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1fleets~1{fleetsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_fleets_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1fleets~1{fleetsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_fleets_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1fleets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.fleets
        _projects_locations_fleets_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1fleets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_fleets_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1fleets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_locations_fleets_list:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1fleets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.fleets
        _organizations_locations_fleets_list:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1fleets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/fleets/methods/projects_locations_fleets_list'
          - $ref: '#/components/x-stackQL-resources/fleets/methods/organizations_locations_fleets_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/fleets/methods/projects_locations_fleets_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/fleets/methods/projects_locations_fleets_delete'
    locations:
      id: google.gkehub.locations
      name: locations
      title: Locations
      methods:
        projects_locations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        _projects_locations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_list'
        insert: []
        update: []
        delete: []
paths:
  '/v1/projects/{projectsId}/locations/{locationsId}/scopes/{scopesId}':
    parameters: &ref_1
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/key'
    delete:
      description: Deletes a Scope.
      operationId: gkehub.projects.locations.scopes.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
      x-stackQL-resource: scopes
      x-stackQL-method: projects_locations_scopes_delete
      x-stackQL-verb: delete
    get:
      description: Returns the details of a Scope.
      operationId: gkehub.projects.locations.scopes.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scope'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
      x-stackQL-resource: scopes
      x-stackQL-method: projects_locations_scopes_get
      x-stackQL-verb: exec
    patch:
      description: Updates a scopes.
      operationId: gkehub.projects.locations.scopes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Scope'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: scopes
      x-stackQL-method: projects_locations_scopes_patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/scopes/{scopesId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: gkehub.projects.locations.scopes.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: scopes_iam_policies
      x-stackQL-method: projects_locations_scopes_get_iam_policy
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/scopes/{scopesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: gkehub.projects.locations.scopes.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
      x-stackQL-resource: scopes_iam_policies
      x-stackQL-method: projects_locations_scopes_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/scopes/{scopesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: gkehub.projects.locations.scopes.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
      x-stackQL-resource: scopes_iam_policies
      x-stackQL-method: projects_locations_scopes_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/scopes':
    parameters: *ref_1
    get:
      description: Lists Scopes.
      operationId: gkehub.projects.locations.scopes.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListScopesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: scopes
      x-stackQL-method: projects_locations_scopes_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.scopes
    post:
      description: Creates a Scope.
      operationId: gkehub.projects.locations.scopes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Scope'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: scopeId
          schema:
            type: string
      x-stackQL-resource: scopes
      x-stackQL-method: projects_locations_scopes_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/scopes/{scopesId}/rbacrolebindings/{rbacrolebindingsId}':
    parameters: *ref_1
    patch:
      description: Updates a Scope RBACRoleBinding.
      operationId: gkehub.projects.locations.scopes.rbacrolebindings.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RBACRoleBinding'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
        - in: path
          name: rbacrolebindingsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: rbacrolebindings
      x-stackQL-method: projects_locations_scopes_rbacrolebindings_patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a Scope RBACRoleBinding.
      operationId: gkehub.projects.locations.scopes.rbacrolebindings.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
        - in: path
          name: rbacrolebindingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: rbacrolebindings
      x-stackQL-method: projects_locations_scopes_rbacrolebindings_delete
      x-stackQL-verb: delete
    get:
      description: Returns the details of a Scope RBACRoleBinding.
      operationId: gkehub.projects.locations.scopes.rbacrolebindings.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RBACRoleBinding'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
        - in: path
          name: rbacrolebindingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: rbacrolebindings
      x-stackQL-method: projects_locations_scopes_rbacrolebindings_get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/scopes/{scopesId}/rbacrolebindings':
    parameters: *ref_1
    get:
      description: Lists all Scope RBACRoleBindings.
      operationId: gkehub.projects.locations.scopes.rbacrolebindings.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListScopeRBACRoleBindingsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: rbacrolebindings
      x-stackQL-method: projects_locations_scopes_rbacrolebindings_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.rbacrolebindings
    post:
      description: Creates a Scope RBACRoleBinding.
      operationId: gkehub.projects.locations.scopes.rbacrolebindings.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RBACRoleBinding'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
        - in: query
          name: rbacrolebindingId
          schema:
            type: string
      x-stackQL-resource: rbacrolebindings
      x-stackQL-method: projects_locations_scopes_rbacrolebindings_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/scopes/{scopesId}/namespaces':
    parameters: *ref_1
    post:
      description: Creates a fleet namespace.
      operationId: gkehub.projects.locations.scopes.namespaces.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Namespace'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
        - in: query
          name: scopeNamespaceId
          schema:
            type: string
      x-stackQL-resource: namespaces
      x-stackQL-method: projects_locations_scopes_namespaces_create
      x-stackQL-verb: insert
    get:
      description: Lists fleet namespaces.
      operationId: gkehub.projects.locations.scopes.namespaces.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListScopeNamespacesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: namespaces
      x-stackQL-method: projects_locations_scopes_namespaces_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.scopeNamespaces
  '/v1/projects/{projectsId}/locations/{locationsId}/scopes/{scopesId}/namespaces/{namespacesId}':
    parameters: *ref_1
    get:
      description: Returns the details of a fleet namespace.
      operationId: gkehub.projects.locations.scopes.namespaces.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Namespace'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: namespaces
      x-stackQL-method: projects_locations_scopes_namespaces_get
      x-stackQL-verb: exec
    patch:
      description: Updates a fleet namespace.
      operationId: gkehub.projects.locations.scopes.namespaces.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Namespace'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: namespaces
      x-stackQL-method: projects_locations_scopes_namespaces_patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a fleet namespace.
      operationId: gkehub.projects.locations.scopes.namespaces.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: namespaces
      x-stackQL-method: projects_locations_scopes_namespaces_delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/features':
    parameters: *ref_1
    post:
      description: Adds a new Feature.
      operationId: gkehub.projects.locations.features.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feature'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: featureId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: features
      x-stackQL-method: projects_locations_features_create
      x-stackQL-verb: insert
    get:
      description: Lists Features in a given project and location.
      operationId: gkehub.projects.locations.features.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFeaturesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: features
      x-stackQL-method: projects_locations_features_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.resources
  '/v1/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: gkehub.projects.locations.features.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: features_iam_policies
      x-stackQL-method: projects_locations_features_get_iam_policy
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: gkehub.projects.locations.features.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
      x-stackQL-resource: features_iam_policies
      x-stackQL-method: projects_locations_features_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/features/{featuresId}':
    parameters: *ref_1
    delete:
      description: Removes a Feature.
      operationId: gkehub.projects.locations.features.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: features
      x-stackQL-method: projects_locations_features_delete
      x-stackQL-verb: delete
    patch:
      description: Updates an existing Feature.
      operationId: gkehub.projects.locations.features.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feature'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: features
      x-stackQL-method: projects_locations_features_patch
      x-stackQL-verb: exec
    get:
      description: Gets details of a single Feature.
      operationId: gkehub.projects.locations.features.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
      x-stackQL-resource: features
      x-stackQL-method: projects_locations_features_get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: gkehub.projects.locations.features.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
      x-stackQL-resource: features_iam_policies
      x-stackQL-method: projects_locations_features_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: gkehub.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_get
      x-stackQL-verb: exec
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: gkehub.projects.locations.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: gkehub.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: gkehub.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}/bindings':
    parameters: *ref_1
    post:
      description: Creates a MembershipBinding.
      operationId: gkehub.projects.locations.memberships.bindings.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembershipBinding'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: query
          name: membershipBindingId
          schema:
            type: string
      x-stackQL-resource: bindings
      x-stackQL-method: projects_locations_memberships_bindings_create
      x-stackQL-verb: insert
    get:
      description: Lists MembershipBindings.
      operationId: gkehub.projects.locations.memberships.bindings.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMembershipBindingsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: bindings
      x-stackQL-method: projects_locations_memberships_bindings_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.membershipBindings
  '/v1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}/bindings/{bindingsId}':
    parameters: *ref_1
    patch:
      description: Updates a MembershipBinding.
      operationId: gkehub.projects.locations.memberships.bindings.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembershipBinding'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: path
          name: bindingsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: bindings
      x-stackQL-method: projects_locations_memberships_bindings_patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a MembershipBinding.
      operationId: gkehub.projects.locations.memberships.bindings.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: path
          name: bindingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: bindings
      x-stackQL-method: projects_locations_memberships_bindings_delete
      x-stackQL-verb: delete
    get:
      description: Returns the details of a MembershipBinding.
      operationId: gkehub.projects.locations.memberships.bindings.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipBinding'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: path
          name: bindingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: bindings
      x-stackQL-method: projects_locations_memberships_bindings_get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/memberships':
    parameters: *ref_1
    get:
      description: Lists Memberships in a given project and location.
      operationId: gkehub.projects.locations.memberships.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMembershipsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-method: projects_locations_memberships_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.unreachable
    post:
      description: 'Creates a new Membership. **This is currently only supported for GKE clusters on Google Cloud**. To register other clusters, follow the instructions at https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster.'
      operationId: gkehub.projects.locations.memberships.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Membership'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: membershipId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-method: projects_locations_memberships_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}':
    parameters: *ref_1
    delete:
      description: 'Removes a Membership. **This is currently only supported for GKE clusters on Google Cloud**. To unregister other clusters, follow the instructions at https://cloud.google.com/anthos/multicluster-management/connect/unregistering-a-cluster.'
      operationId: gkehub.projects.locations.memberships.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: memberships
      x-stackQL-method: projects_locations_memberships_delete
      x-stackQL-verb: delete
    get:
      description: Gets the details of a Membership.
      operationId: gkehub.projects.locations.memberships.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Membership'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-method: projects_locations_memberships_get
      x-stackQL-verb: exec
    patch:
      description: Updates an existing Membership.
      operationId: gkehub.projects.locations.memberships.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Membership'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-method: projects_locations_memberships_patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:generateConnectManifest':
    parameters: *ref_1
    get:
      description: Generates the manifest for deployment of the GKE connect agent. **This method is used internally by Google-provided libraries.** Most clients should not need to call this method directly.
      operationId: gkehub.projects.locations.memberships.generateConnectManifest
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateConnectManifestResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: query
          name: registry
          schema:
            type: string
        - in: query
          name: version
          schema:
            type: string
        - in: query
          name: imagePullSecretContent
          schema:
            type: string
        - in: query
          name: isUpgrade
          schema:
            type: boolean
        - in: query
          name: proxy
          schema:
            type: string
        - in: query
          name: namespace
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-method: projects_locations_memberships_generate_connect_manifest
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: gkehub.projects.locations.memberships.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
      x-stackQL-resource: memberships_iam_policies
      x-stackQL-method: projects_locations_memberships_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: gkehub.projects.locations.memberships.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
      x-stackQL-resource: memberships_iam_policies
      x-stackQL-method: projects_locations_memberships_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: gkehub.projects.locations.memberships.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: memberships_iam_policies
      x-stackQL-method: projects_locations_memberships_get_iam_policy
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/fleets/{fleetsId}':
    parameters: *ref_1
    delete:
      description: Removes a Fleet. There must be no memberships remaining in the Fleet.
      operationId: gkehub.projects.locations.fleets.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: fleetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: fleets
      x-stackQL-method: projects_locations_fleets_delete
      x-stackQL-verb: delete
    get:
      description: Returns the details of a fleet.
      operationId: gkehub.projects.locations.fleets.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fleet'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: fleetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: fleets
      x-stackQL-method: projects_locations_fleets_get
      x-stackQL-verb: exec
    patch:
      description: Updates a fleet.
      operationId: gkehub.projects.locations.fleets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fleet'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: fleetsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: fleets
      x-stackQL-method: projects_locations_fleets_patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/fleets':
    parameters: *ref_1
    get:
      description: Returns all fleets within an organization or a project that the caller has access to.
      operationId: gkehub.projects.locations.fleets.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFleetsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: fleets
      x-stackQL-method: projects_locations_fleets_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.fleets
    post:
      description: Creates a fleet.
      operationId: gkehub.projects.locations.fleets.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fleet'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: fleets
      x-stackQL-method: projects_locations_fleets_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}':
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: gkehub.projects.locations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: projects_locations_get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations':
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: gkehub.projects.locations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: projects_locations_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.locations
  '/v1/organizations/{organizationsId}/locations/{locationsId}/fleets':
    parameters: *ref_1
    get:
      description: Returns all fleets within an organization or a project that the caller has access to.
      operationId: gkehub.organizations.locations.fleets.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFleetsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: fleets
      x-stackQL-method: organizations_locations_fleets_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.fleets
