openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: GKE Hub API
  description: ''
  version: v2
  x-discovery-doc-revision: '20250815'
  x-generated-date: '2025-08-28'
externalDocs:
  url: >-
    https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster
servers:
  - url: https://gkehub.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    ListOperationsResponse:
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Operation:
      id: Operation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/GoogleRpcStatus'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    GoogleRpcStatus:
      id: GoogleRpcStatus
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    CancelOperationRequest:
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
      type: object
      properties: {}
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    MembershipFeature:
      id: MembershipFeature
      description: >-
        MembershipFeature represents the settings and status of a Fleet Feature
        enabled on a single Fleet Membership.
      type: object
      properties:
        name:
          description: >-
            Output only. The resource name of the membershipFeature, in the
            format:
            `projects/{project}/locations/{location}/memberships/{membership}/features/{feature}`.
            Note that `membershipFeatures` is shortened to `features` in the
            resource name. (see http://go/aip/122#collection-identifiers)
          readOnly: true
          type: string
        labels:
          description: GCP labels for this MembershipFeature.
          type: object
          additionalProperties:
            type: string
        spec:
          description: Optional. Spec of this membershipFeature.
          $ref: '#/components/schemas/FeatureSpec'
        state:
          description: Output only. State of the this membershipFeature.
          readOnly: true
          $ref: '#/components/schemas/FeatureState'
        lifecycleState:
          description: Output only. Lifecycle information of the resource itself.
          readOnly: true
          $ref: '#/components/schemas/LifecycleState'
        createTime:
          description: Output only. When the MembershipFeature resource was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. When the MembershipFeature resource was last updated.
          readOnly: true
          type: string
          format: google-datetime
        deleteTime:
          description: Output only. When the MembershipFeature resource was deleted.
          readOnly: true
          type: string
          format: google-datetime
    FeatureSpec:
      id: FeatureSpec
      description: FeatureSpec contains user input per-feature spec information.
      type: object
      properties:
        workloadcertificate:
          description: Workloadcertificate-specific FeatureSpec.
          $ref: '#/components/schemas/WorkloadCertificateSpec'
        cloudbuild:
          description: Cloudbuild-specific FeatureSpec.
          $ref: '#/components/schemas/CloudBuildSpec'
        policycontroller:
          description: Policycontroller-specific FeatureSpec.
          $ref: '#/components/schemas/PolicyControllerSpec'
        rbacrolebindingactuation:
          description: Rbacrolebindingactuation-specific FeatureSpec.
          $ref: '#/components/schemas/RBACRoleBindingActuationSpec'
        identityservice:
          description: IdentityService FeatureSpec.
          $ref: '#/components/schemas/IdentityServiceSpec'
        servicemesh:
          description: ServiceMesh Feature Spec.
          $ref: '#/components/schemas/ServiceMeshSpec'
        configmanagement:
          description: Config Management FeatureSpec.
          $ref: '#/components/schemas/ConfigManagementSpec'
        origin:
          description: >-
            Whether this per-Feature spec was inherited from a fleet-level
            default. This field can be updated by users by either overriding a
            Feature config (updated to USER implicitly) or setting to FLEET
            explicitly.
          $ref: '#/components/schemas/Origin'
    WorkloadCertificateSpec:
      id: WorkloadCertificateSpec
      description: >-
        **WorkloadCertificate**: The membership-specific input for
        WorkloadCertificate feature.
      type: object
      properties:
        certificateManagement:
          description: CertificateManagement specifies workload certificate management.
          type: string
          enumDescriptions:
            - Disable workload certificate feature.
            - Disable workload certificate feature.
            - Enable workload certificate feature.
          enum:
            - CERTIFICATE_MANAGEMENT_UNSPECIFIED
            - DISABLED
            - ENABLED
    CloudBuildSpec:
      id: CloudBuildSpec
      description: '**Cloud Build**: Configurations for each Cloud Build enabled cluster.'
      type: object
      properties:
        version:
          description: Version of the cloud build software on the cluster.
          type: string
        securityPolicy:
          description: >-
            Whether it is allowed to run the privileged builds on the cluster or
            not.
          type: string
          enumDescriptions:
            - Unspecified policy
            - Privileged build pods are disallowed
            - Privileged build pods are allowed
          enum:
            - SECURITY_POLICY_UNSPECIFIED
            - NON_PRIVILEGED
            - PRIVILEGED
    PolicyControllerSpec:
      id: PolicyControllerSpec
      description: >-
        **Policy Controller**: Configuration for a single cluster. Intended to
        parallel the PolicyController CR.
      type: object
      properties:
        policyControllerHubConfig:
          description: Policy Controller configuration for the cluster.
          $ref: '#/components/schemas/PolicyControllerHubConfig'
        version:
          description: Version of Policy Controller installed.
          type: string
    PolicyControllerHubConfig:
      id: PolicyControllerHubConfig
      description: Configuration for Policy Controller
      type: object
      properties:
        installSpec:
          description: >-
            The install_spec represents the intended state specified by the
            latest request that mutated install_spec in the feature spec, not
            the lifecycle state of the feature observed by the Hub feature
            controller that is reported in the feature state.
          type: string
          enumDescriptions:
            - Spec is unknown.
            - Request to uninstall Policy Controller.
            - Request to install and enable Policy Controller.
            - >-
              Request to suspend Policy Controller i.e. its webhooks. If Policy
              Controller is not installed, it will be installed but suspended.
            - >-
              Request to stop all reconciliation actions by PoCo Hub controller.
              This is a breakglass mechanism to stop PoCo Hub from affecting
              cluster resources.
          enum:
            - INSTALL_SPEC_UNSPECIFIED
            - INSTALL_SPEC_NOT_INSTALLED
            - INSTALL_SPEC_ENABLED
            - INSTALL_SPEC_SUSPENDED
            - INSTALL_SPEC_DETACHED
        auditIntervalSeconds:
          description: >-
            Sets the interval for Policy Controller Audit Scans (in seconds).
            When set to 0, this disables audit functionality altogether.
          type: string
          format: int64
        exemptableNamespaces:
          description: >-
            The set of namespaces that are excluded from Policy Controller
            checks. Namespaces do not need to currently exist on the cluster.
          type: array
          items:
            type: string
        referentialRulesEnabled:
          description: >-
            Enables the ability to use Constraint Templates that reference to
            objects other than the object currently being evaluated.
          type: boolean
        logDeniesEnabled:
          description: Logs all denies and dry run failures.
          type: boolean
        mutationEnabled:
          description: Enables the ability to mutate resources using Policy Controller.
          type: boolean
        monitoring:
          description: Monitoring specifies the configuration of monitoring.
          $ref: '#/components/schemas/PolicyControllerMonitoringConfig'
        policyContent:
          description: Specifies the desired policy content on the cluster
          $ref: '#/components/schemas/PolicyControllerPolicyContentSpec'
        constraintViolationLimit:
          description: >-
            The maximum number of audit violations to be stored in a constraint.
            If not set, the internal default (currently 20) will be used.
          type: string
          format: int64
        deploymentConfigs:
          description: >-
            Map of deployment configs to deployments (“admission”, “audit”,
            “mutation”).
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/PolicyControllerPolicyControllerDeploymentConfig
    PolicyControllerMonitoringConfig:
      id: PolicyControllerMonitoringConfig
      description: >-
        MonitoringConfig specifies the backends Policy Controller should export
        metrics to. For example, to specify metrics should be exported to Cloud
        Monitoring and Prometheus, specify backends: ["cloudmonitoring",
        "prometheus"]
      type: object
      properties:
        backends:
          description: >-
            Specifies the list of backends Policy Controller will export to. An
            empty list would effectively disable metrics export.
          type: array
          items:
            type: string
            enumDescriptions:
              - Backend cannot be determined
              - Prometheus backend for monitoring
              - Stackdriver/Cloud Monitoring backend for monitoring
            enum:
              - MONITORING_BACKEND_UNSPECIFIED
              - PROMETHEUS
              - CLOUD_MONITORING
    PolicyControllerPolicyContentSpec:
      id: PolicyControllerPolicyContentSpec
      description: >-
        PolicyContentSpec defines the user's desired content configuration on
        the cluster.
      type: object
      properties:
        bundles:
          description: >-
            map of bundle name to BundleInstallSpec. The bundle name maps to the
            `bundleName` key in the `policycontroller.gke.io/constraintData`
            annotation on a constraint.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PolicyControllerBundleInstallSpec'
        templateLibrary:
          description: Configures the installation of the Template Library.
          $ref: '#/components/schemas/PolicyControllerTemplateLibraryConfig'
    PolicyControllerBundleInstallSpec:
      id: PolicyControllerBundleInstallSpec
      description: >-
        BundleInstallSpec is the specification configuration for a single
        managed bundle.
      type: object
      properties:
        exemptedNamespaces:
          description: the set of namespaces to be exempted from the bundle
          type: array
          items:
            type: string
    PolicyControllerTemplateLibraryConfig:
      id: PolicyControllerTemplateLibraryConfig
      description: The config specifying which default library templates to install.
      type: object
      properties:
        installation:
          description: >-
            Configures the manner in which the template library is installed on
            the cluster.
          type: string
          enumDescriptions:
            - No installation strategy has been specified.
            - Do not install the template library.
            - Install the entire template library.
          enum:
            - INSTALLATION_UNSPECIFIED
            - NOT_INSTALLED
            - ALL
    PolicyControllerPolicyControllerDeploymentConfig:
      id: PolicyControllerPolicyControllerDeploymentConfig
      description: Deployment-specific configuration.
      type: object
      properties:
        replicaCount:
          description: Pod replica count.
          type: string
          format: int64
        containerResources:
          description: Container resource requirements.
          $ref: '#/components/schemas/PolicyControllerResourceRequirements'
        podAntiAffinity:
          description: >-
            Pod anti-affinity enablement. Deprecated: use `pod_affinity`
            instead.
          deprecated: true
          type: boolean
        podTolerations:
          description: Pod tolerations of node taints.
          type: array
          items:
            $ref: '#/components/schemas/PolicyControllerToleration'
        podAffinity:
          description: Pod affinity configuration.
          type: string
          enumDescriptions:
            - No affinity configuration has been specified.
            - Affinity configurations will be removed from the deployment.
            - >-
              Anti-affinity configuration will be applied to this deployment.
              Default for admissions deployment.
          enum:
            - AFFINITY_UNSPECIFIED
            - NO_AFFINITY
            - ANTI_AFFINITY
    PolicyControllerResourceRequirements:
      id: PolicyControllerResourceRequirements
      description: ResourceRequirements describes the compute resource requirements.
      type: object
      properties:
        limits:
          description: >-
            Limits describes the maximum amount of compute resources allowed for
            use by the running container.
          $ref: '#/components/schemas/PolicyControllerResourceList'
        requests:
          description: >-
            Requests describes the amount of compute resources reserved for the
            container by the kube-scheduler.
          $ref: '#/components/schemas/PolicyControllerResourceList'
    PolicyControllerResourceList:
      id: PolicyControllerResourceList
      description: ResourceList contains container resource requirements.
      type: object
      properties:
        memory:
          description: Memory requirement expressed in Kubernetes resource units.
          type: string
        cpu:
          description: CPU requirement expressed in Kubernetes resource units.
          type: string
    PolicyControllerToleration:
      id: PolicyControllerToleration
      description: Toleration of a node taint.
      type: object
      properties:
        key:
          description: Matches a taint key (not necessarily unique).
          type: string
        operator:
          description: Matches a taint operator.
          type: string
        value:
          description: Matches a taint value.
          type: string
        effect:
          description: Matches a taint effect.
          type: string
    RBACRoleBindingActuationSpec:
      id: RBACRoleBindingActuationSpec
      description: >-
        **RBAC RoleBinding Actuation**: The membership-specific input for
        RBACRoleBindingActuation feature.
      type: object
      properties: {}
    IdentityServiceSpec:
      id: IdentityServiceSpec
      description: '**IdentityService**: Configuration for a single membership.'
      type: object
      properties:
        authMethods:
          description: A member may support multiple auth methods.
          type: array
          items:
            $ref: '#/components/schemas/IdentityServiceAuthMethod'
        identityServiceOptions:
          description: Optional. non-protocol-related configuration options.
          $ref: '#/components/schemas/IdentityServiceIdentityServiceOptions'
    IdentityServiceAuthMethod:
      id: IdentityServiceAuthMethod
      description: >-
        Configuration of an auth method for a member/cluster. Only one
        authentication method (e.g., OIDC and LDAP) can be set per AuthMethod.
      type: object
      properties:
        oidcConfig:
          description: OIDC specific configuration.
          $ref: '#/components/schemas/IdentityServiceOidcConfig'
        azureadConfig:
          description: AzureAD specific Configuration.
          $ref: '#/components/schemas/IdentityServiceAzureADConfig'
        googleConfig:
          description: GoogleConfig specific configuration
          $ref: '#/components/schemas/IdentityServiceGoogleConfig'
        samlConfig:
          description: SAML specific configuration.
          $ref: '#/components/schemas/IdentityServiceSamlConfig'
        ldapConfig:
          description: LDAP specific configuration.
          $ref: '#/components/schemas/IdentityServiceLdapConfig'
        name:
          description: Identifier for auth config.
          type: string
        proxy:
          description: Proxy server address to use for auth method.
          type: string
    IdentityServiceOidcConfig:
      id: IdentityServiceOidcConfig
      description: Configuration for OIDC Auth flow.
      type: object
      properties:
        clientId:
          description: ID for OIDC client application.
          type: string
        certificateAuthorityData:
          description: PEM-encoded CA for OIDC provider.
          type: string
        issuerUri:
          description: >-
            URI for the OIDC provider. This should point to the level below
            .well-known/openid-configuration.
          type: string
        kubectlRedirectUri:
          description: >-
            Registered redirect uri to redirect users going through OAuth flow
            using kubectl plugin.
          type: string
        scopes:
          description: Comma-separated list of identifiers.
          type: string
        extraParams:
          description: Comma-separated list of key-value pairs.
          type: string
        userClaim:
          description: Claim in OIDC ID token that holds username.
          type: string
        userPrefix:
          description: Prefix to prepend to user name.
          type: string
        groupsClaim:
          description: Claim in OIDC ID token that holds group information.
          type: string
        groupPrefix:
          description: Prefix to prepend to group name.
          type: string
        deployCloudConsoleProxy:
          description: >-
            Flag to denote if reverse proxy is used to connect to auth provider.
            This flag should be set to true when provider is not reachable by
            Google Cloud Console.
          type: boolean
        clientSecret:
          description: >-
            Input only. Unencrypted OIDC client secret will be passed to the GKE
            Hub CLH.
          type: string
        encryptedClientSecret:
          description: Output only. Encrypted OIDC Client secret
          readOnly: true
          type: string
          format: byte
        enableAccessToken:
          description: Enable access token.
          type: boolean
    IdentityServiceAzureADConfig:
      id: IdentityServiceAzureADConfig
      description: Configuration for the AzureAD Auth flow.
      type: object
      properties:
        clientId:
          description: >-
            ID for the registered client application that makes authentication
            requests to the Azure AD identity provider.
          type: string
        tenant:
          description: >-
            Kind of Azure AD account to be authenticated. Supported values are
            or for accounts belonging to a specific tenant.
          type: string
        kubectlRedirectUri:
          description: The redirect URL that kubectl uses for authorization.
          type: string
        clientSecret:
          description: >-
            Input only. Unencrypted AzureAD client secret will be passed to the
            GKE Hub CLH.
          type: string
        encryptedClientSecret:
          description: Output only. Encrypted AzureAD client secret.
          readOnly: true
          type: string
          format: byte
        userClaim:
          description: Optional. Claim in the AzureAD ID Token that holds the user details.
          type: string
        groupFormat:
          description: >-
            Optional. Format of the AzureAD groups that the client wants for
            auth.
          type: string
    IdentityServiceGoogleConfig:
      id: IdentityServiceGoogleConfig
      description: Configuration for the Google Plugin Auth flow.
      type: object
      properties:
        disable:
          description: >-
            Disable automatic configuration of Google Plugin on supported
            platforms.
          type: boolean
    IdentityServiceSamlConfig:
      id: IdentityServiceSamlConfig
      description: Configuration for the SAML Auth flow.
      type: object
      properties:
        identityProviderId:
          description: Required. The entity ID of the SAML IdP.
          type: string
        identityProviderSsoUri:
          description: Required. The URI where the SAML IdP exposes the SSO service.
          type: string
        identityProviderCertificates:
          description: >-
            Required. The list of IdP certificates to validate the SAML response
            against.
          type: array
          items:
            type: string
        userAttribute:
          description: >-
            Optional. The SAML attribute to read username from. If unspecified,
            the username will be read from the NameID element of the assertion
            in SAML response. This value is expected to be a string and will be
            passed along as-is (with the option of being prefixed by the
            `user_prefix`).
          type: string
        groupsAttribute:
          description: >-
            Optional. The SAML attribute to read groups from. This value is
            expected to be a string and will be passed along as-is (with the
            option of being prefixed by the `group_prefix`).
          type: string
        userPrefix:
          description: Optional. Prefix to prepend to user name.
          type: string
        groupPrefix:
          description: Optional. Prefix to prepend to group name.
          type: string
        attributeMapping:
          description: >-
            Optional. The mapping of additional user attributes like nickname,
            birthday and address etc.. `key` is the name of this additional
            attribute. `value` is a string presenting as CEL(common expression
            language, go/cel) used for getting the value from the resources.
            Take nickname as an example, in this case, `key` is
            "attribute.nickname" and `value` is "assertion.nickname".
          type: object
          additionalProperties:
            type: string
    IdentityServiceLdapConfig:
      id: IdentityServiceLdapConfig
      description: Configuration for the LDAP Auth flow.
      type: object
      properties:
        server:
          description: Required. Server settings for the external LDAP server.
          $ref: '#/components/schemas/IdentityServiceServerConfig'
        user:
          description: Required. Defines where users exist in the LDAP directory.
          $ref: '#/components/schemas/IdentityServiceUserConfig'
        group:
          description: >-
            Optional. Contains the properties for locating and authenticating
            groups in the directory.
          $ref: '#/components/schemas/IdentityServiceGroupConfig'
        serviceAccount:
          description: >-
            Required. Contains the credentials of the service account which is
            authorized to perform the LDAP search in the directory. The
            credentials can be supplied by the combination of the DN and
            password or the client certificate.
          $ref: '#/components/schemas/IdentityServiceServiceAccountConfig'
    IdentityServiceServerConfig:
      id: IdentityServiceServerConfig
      description: Server settings for the external LDAP server.
      type: object
      properties:
        host:
          description: >-
            Required. Defines the hostname or IP of the LDAP server. Port is
            optional and will default to 389, if unspecified. For example,
            "ldap.server.example" or "10.10.10.10:389".
          type: string
        connectionType:
          description: >-
            Optional. Defines the connection type to communicate with the LDAP
            server. If `starttls` or `ldaps` is specified, the
            certificate_authority_data should not be empty.
          type: string
        certificateAuthorityData:
          description: >-
            Optional. Contains a Base64 encoded, PEM formatted certificate
            authority certificate for the LDAP server. This must be provided for
            the "ldaps" and "startTLS" connections.
          type: string
          format: byte
    IdentityServiceUserConfig:
      id: IdentityServiceUserConfig
      description: Defines where users exist in the LDAP directory.
      type: object
      properties:
        baseDn:
          description: >-
            Required. The location of the subtree in the LDAP directory to
            search for user entries.
          type: string
        loginAttribute:
          description: >-
            Optional. The name of the attribute which matches against the input
            username. This is used to find the user in the LDAP database e.g.
            "(=)" and is combined with the optional filter field. This defaults
            to "userPrincipalName".
          type: string
        idAttribute:
          description: >-
            Optional. Determines which attribute to use as the user's identity
            after they are authenticated. This is distinct from the
            loginAttribute field to allow users to login with a username, but
            then have their actual identifier be an email address or full
            Distinguished Name (DN). For example, setting loginAttribute to
            "sAMAccountName" and identifierAttribute to "userPrincipalName"
            would allow a user to login as "bsmith", but actual RBAC policies
            for the user would be written as "bsmith@example.com". Using
            "userPrincipalName" is recommended since this will be unique for
            each user. This defaults to "userPrincipalName".
          type: string
        filter:
          description: >-
            Optional. Filter to apply when searching for the user. This can be
            used to further restrict the user accounts which are allowed to
            login. This defaults to "(objectClass=User)".
          type: string
    IdentityServiceGroupConfig:
      id: IdentityServiceGroupConfig
      description: >-
        Contains the properties for locating and authenticating groups in the
        directory.
      type: object
      properties:
        baseDn:
          description: >-
            Required. The location of the subtree in the LDAP directory to
            search for group entries.
          type: string
        idAttribute:
          description: >-
            Optional. The identifying name of each group a user belongs to. For
            example, if this is set to "distinguishedName" then RBACs and other
            group expectations should be written as full DNs. This defaults to
            "distinguishedName".
          type: string
        filter:
          description: >-
            Optional. Optional filter to be used when searching for groups a
            user belongs to. This can be used to explicitly match only certain
            groups in order to reduce the amount of groups returned for each
            user. This defaults to "(objectClass=Group)".
          type: string
    IdentityServiceServiceAccountConfig:
      id: IdentityServiceServiceAccountConfig
      description: >-
        Contains the credentials of the service account which is authorized to
        perform the LDAP search in the directory. The credentials can be
        supplied by the combination of the DN and password or the client
        certificate.
      type: object
      properties:
        simpleBindCredentials:
          description: Credentials for basic auth.
          $ref: '#/components/schemas/IdentityServiceSimpleBindCredentials'
    IdentityServiceSimpleBindCredentials:
      id: IdentityServiceSimpleBindCredentials
      description: The structure holds the LDAP simple binding credential.
      type: object
      properties:
        dn:
          description: >-
            Required. The distinguished name(DN) of the service account
            object/user.
          type: string
        password:
          description: >-
            Required. Input only. The password of the service account
            object/user.
          type: string
        encryptedPassword:
          description: >-
            Output only. The encrypted password of the service account
            object/user.
          readOnly: true
          type: string
          format: byte
    IdentityServiceIdentityServiceOptions:
      id: IdentityServiceIdentityServiceOptions
      description: Holds non-protocol-related configuration options.
      type: object
      properties:
        sessionDuration:
          description: >-
            Determines the lifespan of STS tokens issued by Anthos Identity
            Service.
          type: string
          format: google-duration
        diagnosticInterface:
          description: Configuration options for the AIS diagnostic interface.
          $ref: '#/components/schemas/IdentityServiceDiagnosticInterface'
    IdentityServiceDiagnosticInterface:
      id: IdentityServiceDiagnosticInterface
      description: Configuration options for the AIS diagnostic interface.
      type: object
      properties:
        enabled:
          description: Determines whether to enable the diagnostic interface.
          type: boolean
        expirationTime:
          description: >-
            Determines the expiration time of the diagnostic interface
            enablement. When reached, requests to the interface would be
            automatically rejected.
          type: string
          format: google-datetime
    ServiceMeshSpec:
      id: ServiceMeshSpec
      description: >-
        **Service Mesh**: Spec for a single Membership for the servicemesh
        feature
      type: object
      properties:
        controlPlane:
          description: >-
            Deprecated: use `management` instead Enables automatic control plane
            management.
          deprecated: true
          type: string
          enumDescriptions:
            - Unspecified
            - >-
              Google should provision a control plane revision and make it
              available in the cluster. Google will enroll this revision in a
              release channel and keep it up to date. The control plane revision
              may be a managed service, or a managed install.
            - >-
              User will manually configure the control plane (e.g. via CLI, or
              via the ControlPlaneRevision KRM API)
          enum:
            - CONTROL_PLANE_MANAGEMENT_UNSPECIFIED
            - AUTOMATIC
            - MANUAL
        defaultChannel:
          description: >-
            Determines which release channel to use for default injection and
            service mesh APIs.
          deprecated: true
          type: string
          enumDescriptions:
            - Unspecified
            - >-
              RAPID channel is offered on an early access basis for customers
              who want to test new releases.
            - >-
              REGULAR channel is intended for production users who want to take
              advantage of new features.
            - >-
              STABLE channel includes versions that are known to be stable and
              reliable in production.
          enum:
            - CHANNEL_UNSPECIFIED
            - RAPID
            - REGULAR
            - STABLE
        management:
          description: Optional. Enables automatic Service Mesh management.
          type: string
          enumDescriptions:
            - Unspecified.
            - Google should manage my Service Mesh for the cluster.
            - User will manually configure their service mesh components.
            - >-
              Google should remove any managed Service Mesh components from this
              cluster and deprovision any resources.
          enum:
            - MANAGEMENT_UNSPECIFIED
            - MANAGEMENT_AUTOMATIC
            - MANAGEMENT_MANUAL
            - MANAGEMENT_NOT_INSTALLED
        configApi:
          description: >-
            Optional. Specifies the API that will be used for configuring the
            mesh workloads.
          type: string
          enumDescriptions:
            - Unspecified
            - Use the Istio API for configuration.
            - Use the K8s Gateway API for configuration.
          enum:
            - CONFIG_API_UNSPECIFIED
            - CONFIG_API_ISTIO
            - CONFIG_API_GATEWAY
    ConfigManagementSpec:
      id: ConfigManagementSpec
      description: >-
        **Anthos Config Management**: Configuration for a single cluster.
        Intended to parallel the ConfigManagement CR.
      type: object
      properties:
        configSync:
          description: Optional. Config Sync configuration for the cluster.
          $ref: '#/components/schemas/ConfigManagementConfigSync'
        policyController:
          description: >-
            Optional. Policy Controller configuration for the cluster.
            Deprecated: Configuring Policy Controller through the
            configmanagement feature is no longer recommended. Use the
            policycontroller feature instead.
          deprecated: true
          $ref: '#/components/schemas/ConfigManagementPolicyController'
        binauthz:
          description: >-
            Optional. Binauthz conifguration for the cluster. Deprecated: This
            field will be ignored and should not be set.
          deprecated: true
          $ref: '#/components/schemas/ConfigManagementBinauthzConfig'
        hierarchyController:
          description: >-
            Optional. Hierarchy Controller configuration for the cluster.
            Deprecated: Configuring Hierarchy Controller through the
            configmanagement feature is no longer recommended. Use
            https://github.com/kubernetes-sigs/hierarchical-namespaces instead.
          deprecated: true
          $ref: '#/components/schemas/ConfigManagementHierarchyControllerConfig'
        version:
          description: Optional. Version of ACM installed.
          type: string
        cluster:
          description: >-
            Optional. The user-specified cluster name used by Config Sync
            cluster-name-selector annotation or ClusterSelector, for applying
            configs to only a subset of clusters. Omit this field if the
            cluster's fleet membership name is used by Config Sync
            cluster-name-selector annotation or ClusterSelector. Set this field
            if a name different from the cluster's fleet membership name is used
            by Config Sync cluster-name-selector annotation or ClusterSelector.
          type: string
        management:
          description: Optional. Enables automatic Feature management.
          type: string
          enumDescriptions:
            - Unspecified
            - Google will manage the Feature for the cluster.
            - User will manually manage the Feature for the cluster.
          enum:
            - MANAGEMENT_UNSPECIFIED
            - MANAGEMENT_AUTOMATIC
            - MANAGEMENT_MANUAL
    ConfigManagementConfigSync:
      id: ConfigManagementConfigSync
      description: Configuration for Config Sync
      type: object
      properties:
        git:
          description: Optional. Git repo configuration for the cluster.
          $ref: '#/components/schemas/ConfigManagementGitConfig'
        sourceFormat:
          description: >-
            Optional. Specifies whether the Config Sync Repo is in
            "hierarchical" or "unstructured" mode.
          type: string
        enabled:
          description: >-
            Optional. Enables the installation of ConfigSync. If set to true,
            ConfigSync resources will be created and the other ConfigSync fields
            will be applied if exist. If set to false, all other ConfigSync
            fields will be ignored, ConfigSync resources will be deleted. If
            omitted, ConfigSync resources will be managed depends on the
            presence of the git or oci field.
          type: boolean
        preventDrift:
          description: >-
            Optional. Set to true to enable the Config Sync admission webhook to
            prevent drifts. If set to `false`, disables the Config Sync
            admission webhook and does not prevent drifts.
          type: boolean
        oci:
          description: Optional. OCI repo configuration for the cluster.
          $ref: '#/components/schemas/ConfigManagementOciConfig'
        metricsGcpServiceAccountEmail:
          description: >-
            Optional. The Email of the Google Cloud Service Account (GSA) used
            for exporting Config Sync metrics to Cloud Monitoring and Cloud
            Monarch when Workload Identity is enabled. The GSA should have the
            Monitoring Metric Writer (roles/monitoring.metricWriter) IAM role.
            The Kubernetes ServiceAccount `default` in the namespace
            `config-management-monitoring` should be bound to the GSA.
            Deprecated: If Workload Identity Federation for GKE is enabled,
            Google Cloud Service Account is no longer needed for exporting
            Config Sync metrics:
            https://cloud.google.com/kubernetes-engine/enterprise/config-sync/docs/how-to/monitor-config-sync-cloud-monitoring#custom-monitoring.
          deprecated: true
          type: string
        stopSyncing:
          description: >-
            Optional. Set to true to stop syncing configs for a single cluster.
            Default to false.
          type: boolean
        deploymentOverrides:
          description: Optional. Configuration for deployment overrides.
          type: array
          items:
            $ref: '#/components/schemas/ConfigManagementDeploymentOverride'
    ConfigManagementGitConfig:
      id: ConfigManagementGitConfig
      description: Git repo configuration for a single cluster.
      type: object
      properties:
        syncRepo:
          description: >-
            Required. The URL of the Git repository to use as the source of
            truth.
          type: string
        syncBranch:
          description: >-
            Optional. The branch of the repository to sync from. Default:
            master.
          type: string
        policyDir:
          description: >-
            Optional. The path within the Git repository that represents the top
            level of the repo to sync. Default: the root directory of the
            repository.
          type: string
        syncWaitSecs:
          description: 'Optional. Period in seconds between consecutive syncs. Default: 15.'
          type: string
          format: int64
        syncRev:
          description: Optional. Git revision (tag or hash) to check out. Default HEAD.
          type: string
        secretType:
          description: >-
            Required. Type of secret configured for access to the Git repo. Must
            be one of ssh, cookiefile, gcenode, token, gcpserviceaccount,
            githubapp or none. The validation of this is case-sensitive.
          type: string
        httpsProxy:
          description: >-
            Optional. URL for the HTTPS proxy to be used when communicating with
            the Git repo.
          type: string
        gcpServiceAccountEmail:
          description: >-
            Optional. The Google Cloud Service Account Email used for auth when
            secret_type is gcpServiceAccount.
          type: string
    ConfigManagementOciConfig:
      id: ConfigManagementOciConfig
      description: OCI repo configuration for a single cluster.
      type: object
      properties:
        syncRepo:
          description: >-
            Required. The OCI image repository URL for the package to sync from.
            e.g.
            `LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY_NAME/PACKAGE_NAME`.
          type: string
        policyDir:
          description: >-
            Optional. The absolute path of the directory that contains the local
            resources. Default: the root directory of the image.
          type: string
        syncWaitSecs:
          description: 'Optional. Period in seconds between consecutive syncs. Default: 15.'
          type: string
          format: int64
        secretType:
          description: >-
            Required. Type of secret configured for access to the OCI repo. Must
            be one of gcenode, gcpserviceaccount, k8sserviceaccount or none. The
            validation of this is case-sensitive.
          type: string
        gcpServiceAccountEmail:
          description: >-
            Optional. The Google Cloud Service Account Email used for auth when
            secret_type is gcpServiceAccount.
          type: string
    ConfigManagementDeploymentOverride:
      id: ConfigManagementDeploymentOverride
      description: Configuration for a deployment override.
      type: object
      properties:
        deploymentName:
          description: Required. The name of the deployment resource to be overridden.
          type: string
        deploymentNamespace:
          description: Required. The namespace of the deployment resource to be overridden.
          type: string
        containers:
          description: >-
            Optional. The containers of the deployment resource to be
            overridden.
          type: array
          items:
            $ref: '#/components/schemas/ConfigManagementContainerOverride'
    ConfigManagementContainerOverride:
      id: ConfigManagementContainerOverride
      description: Configuration for a container override.
      type: object
      properties:
        containerName:
          description: Required. The name of the container.
          type: string
        cpuRequest:
          description: Optional. The cpu request of the container.
          type: string
        cpuLimit:
          description: Optional. The cpu limit of the container.
          type: string
        memoryRequest:
          description: Optional. The memory request of the container.
          type: string
        memoryLimit:
          description: Optional. The memory limit of the container.
          type: string
    ConfigManagementPolicyController:
      id: ConfigManagementPolicyController
      description: Configuration for Policy Controller
      type: object
      properties:
        enabled:
          description: >-
            Enables the installation of Policy Controller. If false, the rest of
            PolicyController fields take no effect.
          type: boolean
        templateLibraryInstalled:
          description: Installs the default template library along with Policy Controller.
          type: boolean
        auditIntervalSeconds:
          description: >-
            Sets the interval for Policy Controller Audit Scans (in seconds).
            When set to 0, this disables audit functionality altogether.
          type: string
          format: int64
        exemptableNamespaces:
          description: >-
            The set of namespaces that are excluded from Policy Controller
            checks. Namespaces do not need to currently exist on the cluster.
          type: array
          items:
            type: string
        referentialRulesEnabled:
          description: >-
            Enables the ability to use Constraint Templates that reference to
            objects other than the object currently being evaluated.
          type: boolean
        logDeniesEnabled:
          description: Logs all denies and dry run failures.
          type: boolean
        mutationEnabled:
          description: >-
            Enable or disable mutation in policy controller. If true, mutation
            CRDs, webhook and controller deployment will be deployed to the
            cluster.
          type: boolean
        monitoring:
          description: Monitoring specifies the configuration of monitoring.
          $ref: '#/components/schemas/ConfigManagementPolicyControllerMonitoring'
        updateTime:
          description: Output only. Last time this membership spec was updated.
          readOnly: true
          type: string
          format: google-datetime
    ConfigManagementPolicyControllerMonitoring:
      id: ConfigManagementPolicyControllerMonitoring
      description: >-
        PolicyControllerMonitoring specifies the backends Policy Controller
        should export metrics to. For example, to specify metrics should be
        exported to Cloud Monitoring and Prometheus, specify backends:
        ["cloudmonitoring", "prometheus"]
      type: object
      properties:
        backends:
          description: >-
            Specifies the list of backends Policy Controller will export to. An
            empty list would effectively disable metrics export.
          type: array
          items:
            type: string
            enumDescriptions:
              - Backend cannot be determined
              - Prometheus backend for monitoring
              - Stackdriver/Cloud Monitoring backend for monitoring
            enum:
              - MONITORING_BACKEND_UNSPECIFIED
              - PROMETHEUS
              - CLOUD_MONITORING
    ConfigManagementBinauthzConfig:
      id: ConfigManagementBinauthzConfig
      description: Configuration for Binauthz.
      type: object
      properties:
        enabled:
          description: Whether binauthz is enabled in this cluster.
          type: boolean
    ConfigManagementHierarchyControllerConfig:
      id: ConfigManagementHierarchyControllerConfig
      description: Configuration for Hierarchy Controller.
      type: object
      properties:
        enabled:
          description: Whether Hierarchy Controller is enabled in this cluster.
          type: boolean
        enablePodTreeLabels:
          description: Whether pod tree labels are enabled in this cluster.
          type: boolean
        enableHierarchicalResourceQuota:
          description: Whether hierarchical resource quota is enabled in this cluster.
          type: boolean
    Origin:
      id: Origin
      description: Origin defines where this FeatureSpec originated from.
      type: object
      properties:
        type:
          description: Type specifies which type of origin is set.
          type: string
          enumDescriptions:
            - Type is unknown or not set.
            - Per-Feature spec was inherited from the fleet-level default.
            - >-
              Per-Feature spec was inherited from the fleet-level default but is
              now out of sync with the current default.
            - Per-Feature spec was inherited from a user specification.
          enum:
            - TYPE_UNSPECIFIED
            - FLEET
            - FLEET_OUT_OF_SYNC
            - USER
    FeatureState:
      id: FeatureState
      description: >-
        FeatureState contains high-level state information and per-feature state
        information for this MembershipFeature.
      type: object
      properties:
        clusterupgrade:
          description: Cluster upgrade state.
          $ref: '#/components/schemas/ClusterUpgradeState'
        identityservice:
          description: Identity service state
          $ref: '#/components/schemas/IdentityServiceState'
        servicemesh:
          description: Service mesh state
          $ref: '#/components/schemas/ServiceMeshState'
        metering:
          description: Metering state
          $ref: '#/components/schemas/MeteringState'
        configmanagement:
          description: Config Management state
          $ref: '#/components/schemas/ConfigManagementState'
        policycontroller:
          description: Policy Controller state
          $ref: '#/components/schemas/PolicyControllerState'
        rbacrolebindingactuation:
          description: RBAC Role Binding Actuation state
          $ref: '#/components/schemas/RBACRoleBindingActuationState'
        appdevexperience:
          description: Appdevexperience specific state.
          $ref: '#/components/schemas/AppDevExperienceState'
        state:
          description: The high-level state of this MembershipFeature.
          $ref: '#/components/schemas/State'
    ClusterUpgradeState:
      id: ClusterUpgradeState
      description: Per-membership state for this feature.
      type: object
      properties:
        ignored:
          description: >-
            Whether this membership is ignored by the feature. For example,
            manually upgraded clusters can be ignored if they are newer than the
            default versions of its release channel.
          $ref: '#/components/schemas/ClusterUpgradeIgnoredMembership'
        upgrades:
          description: Actual upgrade state against desired.
          type: array
          items:
            $ref: '#/components/schemas/ClusterUpgradeMembershipGKEUpgradeState'
    ClusterUpgradeIgnoredMembership:
      id: ClusterUpgradeIgnoredMembership
      description: >-
        IgnoredMembership represents a membership ignored by the feature. A
        membership can be ignored because it was manually upgraded to a newer
        version than RC default.
      type: object
      properties:
        reason:
          description: Reason why the membership is ignored.
          type: string
        ignoredTime:
          description: Time when the membership was first set to ignored.
          type: string
          format: google-datetime
    ClusterUpgradeMembershipGKEUpgradeState:
      id: ClusterUpgradeMembershipGKEUpgradeState
      description: MembershipGKEUpgradeState is a GKEUpgrade and its state per-membership.
      type: object
      properties:
        upgrade:
          description: Which upgrade to track the state.
          $ref: '#/components/schemas/ClusterUpgradeGKEUpgrade'
        status:
          description: Status of the upgrade.
          $ref: '#/components/schemas/ClusterUpgradeUpgradeStatus'
    ClusterUpgradeGKEUpgrade:
      id: ClusterUpgradeGKEUpgrade
      description: >-
        GKEUpgrade represents a GKE provided upgrade, e.g., control plane
        upgrade.
      type: object
      properties:
        name:
          description: Name of the upgrade, e.g., "k8s_control_plane".
          type: string
        version:
          description: Version of the upgrade, e.g., "1.22.1-gke.100".
          type: string
    ClusterUpgradeUpgradeStatus:
      id: ClusterUpgradeUpgradeStatus
      description: UpgradeStatus provides status information for each upgrade.
      type: object
      properties:
        code:
          description: Status code of the upgrade.
          type: string
          enumDescriptions:
            - Required by https://linter.aip.dev/126/unspecified.
            - >-
              The upgrade is ineligible. At the scope level, this means the
              upgrade is ineligible for all the clusters in the scope.
            - >-
              The upgrade is pending. At the scope level, this means the upgrade
              is pending for all the clusters in the scope.
            - >-
              The upgrade is in progress. At the scope level, this means the
              upgrade is in progress for at least one cluster in the scope.
            - >-
              The upgrade has finished and is soaking until the soaking time is
              up. At the scope level, this means at least one cluster is in
              soaking while the rest are either soaking or complete.
            - >-
              A cluster will be forced to enter soaking if an upgrade doesn't
              finish within a certain limit, despite it's actual status.
            - >-
              The upgrade has passed all post conditions (soaking). At the scope
              level, this means all eligible clusters are in COMPLETE status.
            - >-
              The upgrade was forced into soaking and the soaking time has
              passed. This is the equivalent of COMPLETE status for upgrades
              that were forced into soaking.
          enum:
            - CODE_UNSPECIFIED
            - INELIGIBLE
            - PENDING
            - IN_PROGRESS
            - SOAKING
            - FORCED_SOAKING
            - COMPLETE
            - FORCED_COMPLETE
        reason:
          description: Reason for this status.
          type: string
        updateTime:
          description: Last timestamp the status was updated.
          type: string
          format: google-datetime
    IdentityServiceState:
      id: IdentityServiceState
      description: >-
        **IdentityService**: State for a single membership, analyzed and
        reported by feature controller.
      type: object
      properties:
        installedVersion:
          description: >-
            Installed AIS version. This is the AIS version installed on this
            member. The values makes sense iff state is OK.
          type: string
        state:
          description: Deployment state on this member
          type: string
          enumDescriptions:
            - Unspecified state
            - deployment succeeds
            - Failure with error.
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - OK
            - ERROR
        failureReason:
          description: The reason of the failure.
          type: string
        memberConfig:
          description: Last reconciled membership configuration
          $ref: '#/components/schemas/IdentityServiceSpec'
    ServiceMeshState:
      id: ServiceMeshState
      description: >-
        **Service Mesh**: State for a single Membership, as analyzed by the
        Service Mesh Hub Controller.
      type: object
      properties:
        analysisMessages:
          description: Output only. Results of running Service Mesh analyzers.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ServiceMeshAnalysisMessage'
        controlPlaneManagement:
          description: Output only. Status of control plane management
          readOnly: true
          $ref: '#/components/schemas/ServiceMeshControlPlaneManagement'
        dataPlaneManagement:
          description: Output only. Status of data plane management.
          readOnly: true
          $ref: '#/components/schemas/ServiceMeshDataPlaneManagement'
        configApiVersion:
          description: >-
            The API version (i.e. Istio CRD version) for configuring service
            mesh in this cluster. This version is influenced by the
            `default_channel` field.
          type: string
        conditions:
          description: Output only. List of conditions reported for this membership.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ServiceMeshCondition'
    ServiceMeshAnalysisMessage:
      id: ServiceMeshAnalysisMessage
      description: >-
        AnalysisMessage is a single message produced by an analyzer, and it used
        to communicate to the end user about the state of their Service Mesh
        configuration.
      type: object
      properties:
        messageBase:
          description: >-
            Details common to all types of Istio and ServiceMesh analysis
            messages.
          $ref: '#/components/schemas/ServiceMeshAnalysisMessageBase'
        description:
          description: >-
            A human readable description of what the error means. It is suitable
            for non-internationalize display purposes.
          type: string
        resourcePaths:
          description: >-
            A list of strings specifying the resource identifiers that were the
            cause of message generation. A "path" here may be: * MEMBERSHIP_ID
            if the cause is a specific member cluster *
            MEMBERSHIP_ID/(NAMESPACE\/)?RESOURCETYPE/NAME if the cause is a
            resource in a cluster
          type: array
          items:
            type: string
        args:
          description: >-
            A UI can combine these args with a template (based on
            message_base.type) to produce an internationalized message.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
    ServiceMeshAnalysisMessageBase:
      id: ServiceMeshAnalysisMessageBase
      description: >-
        AnalysisMessageBase describes some common information that is needed for
        all messages.
      type: object
      properties:
        type:
          description: Represents the specific type of a message.
          $ref: '#/components/schemas/ServiceMeshType'
        level:
          description: Represents how severe a message is.
          type: string
          enumDescriptions:
            - >-
              Illegal. Same
              istio.analysis.v1alpha1.AnalysisMessageBase.Level.UNKNOWN.
            - ERROR represents a misconfiguration that must be fixed.
            - WARNING represents a misconfiguration that should be fixed.
            - INFO represents an informational finding.
          enum:
            - LEVEL_UNSPECIFIED
            - ERROR
            - WARNING
            - INFO
        documentationUrl:
          description: >-
            A url pointing to the Service Mesh or Istio documentation for this
            specific error type.
          type: string
    ServiceMeshType:
      id: ServiceMeshType
      description: >-
        A unique identifier for the type of message. Display_name is intended to
        be human-readable, code is intended to be machine readable. There should
        be a one-to-one mapping between display_name and code. (i.e. do not
        re-use display_names or codes between message types.) See
        istio.analysis.v1alpha1.AnalysisMessageBase.Type
      type: object
      properties:
        displayName:
          description: >-
            A human-readable name for the message type. e.g. "InternalError",
            "PodMissingProxy". This should be the same for all messages of the
            same type. (This corresponds to the `name` field in open-source
            Istio.)
          type: string
        code:
          description: >-
            A 7 character code matching `^IST[0-9]{4}$` or `^ASM[0-9]{4}$`,
            intended to uniquely identify the message type. (e.g. "IST0001" is
            mapped to the "InternalError" message type.)
          type: string
    ServiceMeshControlPlaneManagement:
      id: ServiceMeshControlPlaneManagement
      description: Status of control plane management.
      type: object
      properties:
        details:
          description: Explanation of state.
          type: array
          items:
            $ref: '#/components/schemas/ServiceMeshStatusDetails'
        state:
          description: LifecycleState of control plane management.
          type: string
          enumDescriptions:
            - Unspecified
            - DISABLED means that the component is not enabled.
            - >-
              FAILED_PRECONDITION means that provisioning cannot proceed because
              of some characteristic of the member cluster.
            - PROVISIONING means that provisioning is in progress.
            - ACTIVE means that the component is ready for use.
            - STALLED means that provisioning could not be done.
            - >-
              NEEDS_ATTENTION means that the component is ready, but some user
              intervention is required. (For example that the user should
              migrate workloads to a new control plane revision.)
            - >-
              DEGRADED means that the component is ready, but operating in a
              degraded state.
            - DEPROVISIONING means that deprovisioning is in progress.
          enum:
            - LIFECYCLE_STATE_UNSPECIFIED
            - DISABLED
            - FAILED_PRECONDITION
            - PROVISIONING
            - ACTIVE
            - STALLED
            - NEEDS_ATTENTION
            - DEGRADED
            - DEPROVISIONING
        implementation:
          description: Output only. Implementation of managed control plane.
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified
            - A Google build of istiod is used for the managed control plane.
            - Traffic director is used for the managed control plane.
            - The control plane implementation is being updated.
          enum:
            - IMPLEMENTATION_UNSPECIFIED
            - ISTIOD
            - TRAFFIC_DIRECTOR
            - UPDATING
    ServiceMeshStatusDetails:
      id: ServiceMeshStatusDetails
      description: Structured and human-readable details for a status.
      type: object
      properties:
        code:
          description: A machine-readable code that further describes a broad status.
          type: string
        details:
          description: Human-readable explanation of code.
          type: string
    ServiceMeshDataPlaneManagement:
      id: ServiceMeshDataPlaneManagement
      description: Status of data plane management. Only reported per-member.
      type: object
      properties:
        state:
          description: Lifecycle status of data plane management.
          type: string
          enumDescriptions:
            - Unspecified
            - DISABLED means that the component is not enabled.
            - >-
              FAILED_PRECONDITION means that provisioning cannot proceed because
              of some characteristic of the member cluster.
            - PROVISIONING means that provisioning is in progress.
            - ACTIVE means that the component is ready for use.
            - STALLED means that provisioning could not be done.
            - >-
              NEEDS_ATTENTION means that the component is ready, but some user
              intervention is required. (For example that the user should
              migrate workloads to a new control plane revision.)
            - >-
              DEGRADED means that the component is ready, but operating in a
              degraded state.
            - DEPROVISIONING means that deprovisioning is in progress.
          enum:
            - LIFECYCLE_STATE_UNSPECIFIED
            - DISABLED
            - FAILED_PRECONDITION
            - PROVISIONING
            - ACTIVE
            - STALLED
            - NEEDS_ATTENTION
            - DEGRADED
            - DEPROVISIONING
        details:
          description: Explanation of the status.
          type: array
          items:
            $ref: '#/components/schemas/ServiceMeshStatusDetails'
    ServiceMeshCondition:
      id: ServiceMeshCondition
      description: Condition being reported.
      type: object
      properties:
        code:
          description: >-
            Unique identifier of the condition which describes the condition
            recognizable to the user.
          type: string
          enumDescriptions:
            - Default Unspecified code
            - Mesh IAM permission denied error code
            - Permission denied error code for cross-project
            - CNI config unsupported error code
            - GKE sandbox unsupported error code
            - Nodepool workload identity federation required error code
            - CNI installation failed error code
            - CNI pod unschedulable error code
            - Cluster has zero node code
            - Failure to reconcile CanonicalServices
            - Multiple control planes unsupported error code
            - VPC-SC GA is supported for this control plane.
            - >-
              User is using deprecated ControlPlaneManagement and they have not
              yet set Management.
            - >-
              User is using deprecated ControlPlaneManagement and they have
              already set Management.
            - >-
              Configuration (Istio/k8s resources) failed to apply due to
              internal error.
            - Configuration failed to be applied due to being invalid.
            - >-
              Encountered configuration(s) with possible unintended behavior or
              invalid configuration. These configs may not have been applied.
            - BackendService quota exceeded error code.
            - HealthCheck quota exceeded error code.
            - HTTPRoute quota exceeded error code.
            - TCPRoute quota exceeded error code.
            - TLS routes quota exceeded error code.
            - TrafficPolicy quota exceeded error code.
            - EndpointPolicy quota exceeded error code.
            - Gateway quota exceeded error code.
            - Mesh quota exceeded error code.
            - ServerTLSPolicy quota exceeded error code.
            - ClientTLSPolicy quota exceeded error code.
            - ServiceLBPolicy quota exceeded error code.
            - HTTPFilter quota exceeded error code.
            - TCPFilter quota exceeded error code.
            - NetworkEndpointGroup quota exceeded error code.
            - Legacy istio secrets found for multicluster error code
            - Workload identity required error code
            - Non-standard binary usage error code
            - Unsupported gateway class error code
            - Managed CNI not enabled error code
            - Modernization is scheduled for a cluster.
            - Modernization is in progress for a cluster.
            - Modernization is completed for a cluster.
            - Modernization is aborted for a cluster.
            - Preparing cluster so that its workloads can be migrated.
            - Modernization is stalled for a cluster.
            - Cluster has been prepared for its workloads to be migrated.
            - Migrating the cluster's workloads to the new implementation.
            - Rollback is in progress for modernization of a cluster.
            - Modernization will be scheduled for a fleet.
            - Fleet is opted out from automated modernization.
            - Fleet is eligible for modernization.
            - Modernization of one or more clusters in a fleet is in progress.
            - >-
              Modernization of all the fleet's clusters is complete. Soaking
              before finalizing the modernization.
            - >-
              Modernization is finalized for all clusters in a fleet. Rollback
              is no longer allowed.
            - >-
              Rollback is in progress for modernization of all clusters in a
              fleet.
          enum:
            - CODE_UNSPECIFIED
            - MESH_IAM_PERMISSION_DENIED
            - MESH_IAM_CROSS_PROJECT_PERMISSION_DENIED
            - CNI_CONFIG_UNSUPPORTED
            - GKE_SANDBOX_UNSUPPORTED
            - NODEPOOL_WORKLOAD_IDENTITY_FEDERATION_REQUIRED
            - CNI_INSTALLATION_FAILED
            - CNI_POD_UNSCHEDULABLE
            - CLUSTER_HAS_ZERO_NODES
            - CANONICAL_SERVICE_ERROR
            - UNSUPPORTED_MULTIPLE_CONTROL_PLANES
            - VPCSC_GA_SUPPORTED
            - DEPRECATED_SPEC_CONTROL_PLANE_MANAGEMENT
            - DEPRECATED_SPEC_CONTROL_PLANE_MANAGEMENT_SAFE
            - CONFIG_APPLY_INTERNAL_ERROR
            - CONFIG_VALIDATION_ERROR
            - CONFIG_VALIDATION_WARNING
            - QUOTA_EXCEEDED_BACKEND_SERVICES
            - QUOTA_EXCEEDED_HEALTH_CHECKS
            - QUOTA_EXCEEDED_HTTP_ROUTES
            - QUOTA_EXCEEDED_TCP_ROUTES
            - QUOTA_EXCEEDED_TLS_ROUTES
            - QUOTA_EXCEEDED_TRAFFIC_POLICIES
            - QUOTA_EXCEEDED_ENDPOINT_POLICIES
            - QUOTA_EXCEEDED_GATEWAYS
            - QUOTA_EXCEEDED_MESHES
            - QUOTA_EXCEEDED_SERVER_TLS_POLICIES
            - QUOTA_EXCEEDED_CLIENT_TLS_POLICIES
            - QUOTA_EXCEEDED_SERVICE_LB_POLICIES
            - QUOTA_EXCEEDED_HTTP_FILTERS
            - QUOTA_EXCEEDED_TCP_FILTERS
            - QUOTA_EXCEEDED_NETWORK_ENDPOINT_GROUPS
            - LEGACY_MC_SECRETS
            - WORKLOAD_IDENTITY_REQUIRED
            - NON_STANDARD_BINARY_USAGE
            - UNSUPPORTED_GATEWAY_CLASS
            - MANAGED_CNI_NOT_ENABLED
            - MODERNIZATION_SCHEDULED
            - MODERNIZATION_IN_PROGRESS
            - MODERNIZATION_COMPLETED
            - MODERNIZATION_ABORTED
            - MODERNIZATION_PREPARING
            - MODERNIZATION_STALLED
            - MODERNIZATION_PREPARED
            - MODERNIZATION_MIGRATING_WORKLOADS
            - MODERNIZATION_ROLLING_BACK_CLUSTER
            - MODERNIZATION_WILL_BE_SCHEDULED
            - MODERNIZATION_MANUAL
            - MODERNIZATION_ELIGIBLE
            - MODERNIZATION_MODERNIZING
            - MODERNIZATION_MODERNIZED_SOAKING
            - MODERNIZATION_FINALIZED
            - MODERNIZATION_ROLLING_BACK_FLEET
        documentationLink:
          description: Links contains actionable information.
          type: string
        details:
          description: A short summary about the issue.
          type: string
        severity:
          description: Severity level of the condition.
          type: string
          enumDescriptions:
            - Unspecified severity
            - Indicates an issue that prevents the mesh from operating correctly
            - >-
              Indicates a setting is likely wrong, but the mesh is still able to
              operate
            - An informational message, not requiring any action
          enum:
            - SEVERITY_UNSPECIFIED
            - ERROR
            - WARNING
            - INFO
    MeteringState:
      id: MeteringState
      description: >-
        **Metering**: State for a single membership, analyzed and reported by
        feature controller.
      type: object
      properties:
        lastMeasurementTime:
          description: >-
            The time stamp of the most recent measurement of the number of vCPUs
            in the cluster.
          type: string
          format: google-datetime
        preciseLastMeasuredClusterVcpuCapacity:
          description: >-
            The vCPUs capacity in the cluster according to the most recent
            measurement (1/1000 precision).
          type: number
          format: float
    ConfigManagementState:
      id: ConfigManagementState
      description: '**Anthos Config Management**: State for a single cluster.'
      type: object
      properties:
        clusterName:
          description: >-
            Output only. This field is set to the `cluster_name` field of the
            Membership Spec if it is not empty. Otherwise, it is set to the
            cluster's fleet membership name.
          readOnly: true
          type: string
        membershipSpec:
          description: >-
            Output only. Membership configuration in the cluster. This
            represents the actual state in the cluster, while the MembershipSpec
            in the FeatureSpec represents the intended state.
          readOnly: true
          $ref: '#/components/schemas/ConfigManagementSpec'
        operatorState:
          description: Output only. Current install status of ACM's Operator.
          readOnly: true
          $ref: '#/components/schemas/ConfigManagementOperatorState'
        configSyncState:
          description: Output only. Current sync status.
          readOnly: true
          $ref: '#/components/schemas/ConfigManagementConfigSyncState'
        policyControllerState:
          description: Output only. PolicyController status.
          readOnly: true
          $ref: '#/components/schemas/ConfigManagementPolicyControllerState'
        binauthzState:
          description: Output only. Binauthz status.
          readOnly: true
          $ref: '#/components/schemas/ConfigManagementBinauthzState'
        hierarchyControllerState:
          description: Output only. Hierarchy Controller status.
          readOnly: true
          $ref: '#/components/schemas/ConfigManagementHierarchyControllerState'
    ConfigManagementOperatorState:
      id: ConfigManagementOperatorState
      description: State information for an ACM's Operator.
      type: object
      properties:
        version:
          description: The semenatic version number of the operator.
          type: string
        deploymentState:
          description: The state of the Operator's deployment.
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined.
            - Deployment is not installed.
            - Deployment is installed.
            - Deployment was attempted to be installed, but has errors.
            - Deployment is installing or terminating
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
        errors:
          description: Install errors.
          type: array
          items:
            $ref: '#/components/schemas/ConfigManagementInstallError'
    ConfigManagementInstallError:
      id: ConfigManagementInstallError
      description: Errors pertaining to the installation of ACM.
      type: object
      properties:
        errorMessage:
          description: A string representing the user facing error message.
          type: string
    ConfigManagementConfigSyncState:
      id: ConfigManagementConfigSyncState
      description: State information for ConfigSync.
      type: object
      properties:
        version:
          description: Output only. The version of ConfigSync deployed.
          readOnly: true
          $ref: '#/components/schemas/ConfigManagementConfigSyncVersion'
        deploymentState:
          description: >-
            Output only. Information about the deployment of ConfigSync,
            including the version. of the various Pods deployed
          readOnly: true
          $ref: '#/components/schemas/ConfigManagementConfigSyncDeploymentState'
        syncState:
          description: >-
            Output only. The state of ConfigSync's process to sync configs to a
            cluster.
          readOnly: true
          $ref: '#/components/schemas/ConfigManagementSyncState'
        errors:
          description: Output only. Errors pertaining to the installation of Config Sync.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ConfigManagementConfigSyncError'
        rootsyncCrd:
          description: Output only. The state of the RootSync CRD
          readOnly: true
          type: string
          enumDescriptions:
            - CRD's state cannot be determined
            - CRD is not installed
            - CRD is installed
            - CRD is terminating (i.e., it has been deleted and is cleaning up)
            - CRD is installing
          enum:
            - CRD_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - TERMINATING
            - INSTALLING
        reposyncCrd:
          description: Output only. The state of the Reposync CRD
          readOnly: true
          type: string
          enumDescriptions:
            - CRD's state cannot be determined
            - CRD is not installed
            - CRD is installed
            - CRD is terminating (i.e., it has been deleted and is cleaning up)
            - CRD is installing
          enum:
            - CRD_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - TERMINATING
            - INSTALLING
        state:
          description: >-
            Output only. The state of CS This field summarizes the other fields
            in this message.
          readOnly: true
          type: string
          enumDescriptions:
            - CS's state cannot be determined.
            - CS is not installed.
            - The expected CS version is installed successfully.
            - CS encounters errors.
            - CS is installing or terminating.
          enum:
            - STATE_UNSPECIFIED
            - CONFIG_SYNC_NOT_INSTALLED
            - CONFIG_SYNC_INSTALLED
            - CONFIG_SYNC_ERROR
            - CONFIG_SYNC_PENDING
        clusterLevelStopSyncingState:
          description: >-
            Output only. Whether syncing resources to the cluster is stopped at
            the cluster level.
          readOnly: true
          type: string
          enumDescriptions:
            - State cannot be determined
            - >-
              Syncing resources to the cluster is not stopped at the cluster
              level.
            - >-
              Some reconcilers stop syncing resources to the cluster, while
              others are still syncing.
            - Syncing resources to the cluster is stopped at the cluster level.
          enum:
            - STOP_SYNCING_STATE_UNSPECIFIED
            - NOT_STOPPED
            - PENDING
            - STOPPED
        crCount:
          description: Output only. The number of RootSync and RepoSync CRs in the cluster.
          readOnly: true
          type: integer
          format: int32
    ConfigManagementConfigSyncVersion:
      id: ConfigManagementConfigSyncVersion
      description: Specific versioning information pertaining to ConfigSync's Pods.
      type: object
      properties:
        importer:
          description: Version of the deployed importer pod.
          type: string
        syncer:
          description: Version of the deployed syncer pod.
          type: string
        gitSync:
          description: Version of the deployed git-sync pod.
          type: string
        monitor:
          description: Version of the deployed monitor pod.
          type: string
        reconcilerManager:
          description: Version of the deployed reconciler-manager pod.
          type: string
        rootReconciler:
          description: Version of the deployed reconciler container in root-reconciler pod.
          type: string
        admissionWebhook:
          description: Version of the deployed admission-webhook pod.
          type: string
        resourceGroupControllerManager:
          description: Version of the deployed resource-group-controller-manager pod
          type: string
        otelCollector:
          description: Version of the deployed otel-collector pod
          type: string
    ConfigManagementConfigSyncDeploymentState:
      id: ConfigManagementConfigSyncDeploymentState
      description: The state of ConfigSync's deployment on a cluster.
      type: object
      properties:
        importer:
          description: Deployment state of the importer pod.
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined.
            - Deployment is not installed.
            - Deployment is installed.
            - Deployment was attempted to be installed, but has errors.
            - Deployment is installing or terminating
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
        syncer:
          description: Deployment state of the syncer pod.
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined.
            - Deployment is not installed.
            - Deployment is installed.
            - Deployment was attempted to be installed, but has errors.
            - Deployment is installing or terminating
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
        gitSync:
          description: Deployment state of the git-sync pod.
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined.
            - Deployment is not installed.
            - Deployment is installed.
            - Deployment was attempted to be installed, but has errors.
            - Deployment is installing or terminating
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
        monitor:
          description: Deployment state of the monitor pod.
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined.
            - Deployment is not installed.
            - Deployment is installed.
            - Deployment was attempted to be installed, but has errors.
            - Deployment is installing or terminating
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
        reconcilerManager:
          description: Deployment state of reconciler-manager pod.
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined.
            - Deployment is not installed.
            - Deployment is installed.
            - Deployment was attempted to be installed, but has errors.
            - Deployment is installing or terminating
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
        rootReconciler:
          description: Deployment state of root-reconciler.
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined.
            - Deployment is not installed.
            - Deployment is installed.
            - Deployment was attempted to be installed, but has errors.
            - Deployment is installing or terminating
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
        admissionWebhook:
          description: Deployment state of admission-webhook.
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined.
            - Deployment is not installed.
            - Deployment is installed.
            - Deployment was attempted to be installed, but has errors.
            - Deployment is installing or terminating
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
        resourceGroupControllerManager:
          description: Deployment state of resource-group-controller-manager
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined.
            - Deployment is not installed.
            - Deployment is installed.
            - Deployment was attempted to be installed, but has errors.
            - Deployment is installing or terminating
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
        otelCollector:
          description: Deployment state of otel-collector
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined.
            - Deployment is not installed.
            - Deployment is installed.
            - Deployment was attempted to be installed, but has errors.
            - Deployment is installing or terminating
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
    ConfigManagementSyncState:
      id: ConfigManagementSyncState
      description: State indicating an ACM's progress syncing configurations to a cluster.
      type: object
      properties:
        sourceToken:
          description: Token indicating the state of the repo.
          type: string
        importToken:
          description: Token indicating the state of the importer.
          type: string
        syncToken:
          description: Token indicating the state of the syncer.
          type: string
        lastSync:
          description: >-
            Deprecated: use last_sync_time instead. Timestamp of when ACM last
            successfully synced the repo. The time format is specified in
            https://golang.org/pkg/time/#Time.String
          deprecated: true
          type: string
        lastSyncTime:
          description: Timestamp type of when ACM last successfully synced the repo.
          type: string
          format: google-datetime
        code:
          description: Sync status code.
          type: string
          enumDescriptions:
            - Config Sync cannot determine a sync code
            - Config Sync successfully synced the git Repo with the cluster
            - Config Sync is in the progress of syncing a new change
            - >-
              Indicates an error configuring Config Sync, and user action is
              required
            - Config Sync has been installed but not configured
            - Config Sync has not been installed
            - Error authorizing with the cluster
            - Cluster could not be reached
          enum:
            - SYNC_CODE_UNSPECIFIED
            - SYNCED
            - PENDING
            - ERROR
            - NOT_CONFIGURED
            - NOT_INSTALLED
            - UNAUTHORIZED
            - UNREACHABLE
        errors:
          description: >-
            A list of errors resulting from problematic configs. This list will
            be truncated after 100 errors, although it is unlikely for that many
            errors to simultaneously exist.
          type: array
          items:
            $ref: '#/components/schemas/ConfigManagementSyncError'
    ConfigManagementSyncError:
      id: ConfigManagementSyncError
      description: An ACM created error representing a problem syncing configurations.
      type: object
      properties:
        code:
          description: An ACM defined error code
          type: string
        errorMessage:
          description: A description of the error
          type: string
        errorResources:
          description: A list of config(s) associated with the error, if any
          type: array
          items:
            $ref: '#/components/schemas/ConfigManagementErrorResource'
    ConfigManagementErrorResource:
      id: ConfigManagementErrorResource
      description: Model for a config file in the git repo with an associated Sync error.
      type: object
      properties:
        sourcePath:
          description: Path in the git repo of the erroneous config
          type: string
        resourceName:
          description: Metadata name of the resource that is causing an error
          type: string
        resourceNamespace:
          description: Namespace of the resource that is causing an error
          type: string
        resourceGvk:
          description: Group/version/kind of the resource that is causing an error
          $ref: '#/components/schemas/ConfigManagementGroupVersionKind'
    ConfigManagementGroupVersionKind:
      id: ConfigManagementGroupVersionKind
      description: A Kubernetes object's GVK.
      type: object
      properties:
        group:
          description: Kubernetes Group
          type: string
        version:
          description: Kubernetes Version
          type: string
        kind:
          description: Kubernetes Kind
          type: string
    ConfigManagementConfigSyncError:
      id: ConfigManagementConfigSyncError
      description: Errors pertaining to the installation of Config Sync
      type: object
      properties:
        errorMessage:
          description: A string representing the user facing error message
          type: string
    ConfigManagementPolicyControllerState:
      id: ConfigManagementPolicyControllerState
      description: State for PolicyControllerState.
      type: object
      properties:
        version:
          description: The version of Gatekeeper Policy Controller deployed.
          $ref: '#/components/schemas/ConfigManagementPolicyControllerVersion'
        deploymentState:
          description: The state about the policy controller installation.
          $ref: '#/components/schemas/ConfigManagementGatekeeperDeploymentState'
        migration:
          description: Record state of ACM -> PoCo Hub migration for this feature.
          $ref: '#/components/schemas/ConfigManagementPolicyControllerMigration'
    ConfigManagementPolicyControllerVersion:
      id: ConfigManagementPolicyControllerVersion
      description: The build version of Gatekeeper Policy Controller is using.
      type: object
      properties:
        version:
          description: >-
            The gatekeeper image tag that is composed of ACM version, git tag,
            build number.
          type: string
    ConfigManagementGatekeeperDeploymentState:
      id: ConfigManagementGatekeeperDeploymentState
      description: State of Policy Controller installation.
      type: object
      properties:
        gatekeeperControllerManagerState:
          description: Status of gatekeeper-controller-manager pod.
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined.
            - Deployment is not installed.
            - Deployment is installed.
            - Deployment was attempted to be installed, but has errors.
            - Deployment is installing or terminating
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
        gatekeeperAudit:
          description: Status of gatekeeper-audit deployment.
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined.
            - Deployment is not installed.
            - Deployment is installed.
            - Deployment was attempted to be installed, but has errors.
            - Deployment is installing or terminating
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
        gatekeeperMutation:
          description: Status of the pod serving the mutation webhook.
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined.
            - Deployment is not installed.
            - Deployment is installed.
            - Deployment was attempted to be installed, but has errors.
            - Deployment is installing or terminating
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
    ConfigManagementPolicyControllerMigration:
      id: ConfigManagementPolicyControllerMigration
      description: State for the migration of PolicyController from ACM -> PoCo Hub.
      type: object
      properties:
        stage:
          description: Stage of the migration.
          type: string
          enumDescriptions:
            - Unknown state of migration.
            - >-
              ACM Hub/Operator manages policycontroller. No migration yet
              completed.
            - >-
              All migrations steps complete; Poco Hub now manages
              policycontroller.
          enum:
            - STAGE_UNSPECIFIED
            - ACM_MANAGED
            - POCO_MANAGED
        copyTime:
          description: Last time this membership spec was copied to PoCo feature.
          type: string
          format: google-datetime
    ConfigManagementBinauthzState:
      id: ConfigManagementBinauthzState
      description: State for Binauthz.
      type: object
      properties:
        webhook:
          description: The state of the binauthz webhook.
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined.
            - Deployment is not installed.
            - Deployment is installed.
            - Deployment was attempted to be installed, but has errors.
            - Deployment is installing or terminating
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
        version:
          description: The version of binauthz that is installed.
          $ref: '#/components/schemas/ConfigManagementBinauthzVersion'
    ConfigManagementBinauthzVersion:
      id: ConfigManagementBinauthzVersion
      description: The version of binauthz.
      type: object
      properties:
        webhookVersion:
          description: The version of the binauthz webhook.
          type: string
    ConfigManagementHierarchyControllerState:
      id: ConfigManagementHierarchyControllerState
      description: State for Hierarchy Controller.
      type: object
      properties:
        version:
          description: The version for Hierarchy Controller.
          $ref: '#/components/schemas/ConfigManagementHierarchyControllerVersion'
        state:
          description: The deployment state for Hierarchy Controller.
          $ref: >-
            #/components/schemas/ConfigManagementHierarchyControllerDeploymentState
    ConfigManagementHierarchyControllerVersion:
      id: ConfigManagementHierarchyControllerVersion
      description: Version for Hierarchy Controller.
      type: object
      properties:
        hnc:
          description: Version for open source HNC.
          type: string
        extension:
          description: Version for Hierarchy Controller extension.
          type: string
    ConfigManagementHierarchyControllerDeploymentState:
      id: ConfigManagementHierarchyControllerDeploymentState
      description: Deployment state for Hierarchy Controller
      type: object
      properties:
        hnc:
          description: The deployment state for open source HNC (e.g. v0.7.0-hc.0).
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined.
            - Deployment is not installed.
            - Deployment is installed.
            - Deployment was attempted to be installed, but has errors.
            - Deployment is installing or terminating
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
        extension:
          description: >-
            The deployment state for Hierarchy Controller extension (e.g.
            v0.7.0-hc.1).
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined.
            - Deployment is not installed.
            - Deployment is installed.
            - Deployment was attempted to be installed, but has errors.
            - Deployment is installing or terminating
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
    PolicyControllerState:
      id: PolicyControllerState
      description: '**Policy Controller**: State for a single cluster.'
      type: object
      properties:
        componentStates:
          description: >-
            Currently these include (also serving as map keys): 1. "admission"
            2. "audit" 3. "mutation"
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PolicyControllerOnClusterState'
        state:
          description: >-
            The overall Policy Controller lifecycle state observed by the Hub
            Feature controller.
          type: string
          enumDescriptions:
            - The lifecycle state is unspecified.
            - >-
              The PC does not exist on the given cluster, and no k8s resources
              of any type that are associated with the PC should exist there.
              The cluster does not possess a membership with the PCH.
            - >-
              The PCH possesses a Membership, however the PC is not fully
              installed on the cluster. In this state the hub can be expected to
              be taking actions to install the PC on the cluster.
            - >-
              The PC is fully installed on the cluster and in an operational
              mode. In this state PCH will be reconciling state with the PC, and
              the PC will be performing it's operational tasks per that
              software. Entering a READY state requires that the hub has
              confirmed the PC is installed and its pods are operational with
              the version of the PC the PCH expects.
            - >-
              The PC is fully installed, but in the process of changing the
              configuration (including changing the version of PC either up and
              down, or modifying the manifests of PC) of the resources running
              on the cluster. The PCH has a Membership, is aware of the version
              the cluster should be running in, but has not confirmed for itself
              that the PC is running with that version.
            - >-
              The PC may have resources on the cluster, but the PCH wishes to
              remove the Membership. The Membership still exists.
            - >-
              The PC is not operational, and the PCH is unable to act to make it
              operational. Entering a CLUSTER_ERROR state happens automatically
              when the PCH determines that a PC installed on the cluster is
              non-operative or that the cluster does not meet requirements set
              for the PCH to administer the cluster but has nevertheless been
              given an instruction to do so (such as ‘install').
            - >-
              In this state, the PC may still be operational, and only the PCH
              is unable to act. The hub should not issue instructions to change
              the PC state, or otherwise interfere with the on-cluster
              resources. Entering a HUB_ERROR state happens automatically when
              the PCH determines the hub is in an unhealthy state and it wishes
              to ‘take hands off' to avoid corrupting the PC or other data.
            - >-
              Policy Controller (PC) is installed but suspended. This means that
              the policies are not enforced, but violations are still recorded
              (through audit).
            - >-
              PoCo Hub is not taking any action to reconcile cluster objects.
              Changes to those objects will not be overwritten by PoCo Hub.
          enum:
            - LIFECYCLE_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLING
            - ACTIVE
            - UPDATING
            - DECOMMISSIONING
            - CLUSTER_ERROR
            - HUB_ERROR
            - SUSPENDED
            - DETACHED
        policyContentState:
          description: The overall content state observed by the Hub Feature controller.
          $ref: '#/components/schemas/PolicyControllerPolicyContentState'
    PolicyControllerOnClusterState:
      id: PolicyControllerOnClusterState
      description: >-
        OnClusterState represents the state of a sub-component of Policy
        Controller.
      type: object
      properties:
        state:
          description: The lifecycle state of this component.
          type: string
          enumDescriptions:
            - The lifecycle state is unspecified.
            - >-
              The PC does not exist on the given cluster, and no k8s resources
              of any type that are associated with the PC should exist there.
              The cluster does not possess a membership with the PCH.
            - >-
              The PCH possesses a Membership, however the PC is not fully
              installed on the cluster. In this state the hub can be expected to
              be taking actions to install the PC on the cluster.
            - >-
              The PC is fully installed on the cluster and in an operational
              mode. In this state PCH will be reconciling state with the PC, and
              the PC will be performing it's operational tasks per that
              software. Entering a READY state requires that the hub has
              confirmed the PC is installed and its pods are operational with
              the version of the PC the PCH expects.
            - >-
              The PC is fully installed, but in the process of changing the
              configuration (including changing the version of PC either up and
              down, or modifying the manifests of PC) of the resources running
              on the cluster. The PCH has a Membership, is aware of the version
              the cluster should be running in, but has not confirmed for itself
              that the PC is running with that version.
            - >-
              The PC may have resources on the cluster, but the PCH wishes to
              remove the Membership. The Membership still exists.
            - >-
              The PC is not operational, and the PCH is unable to act to make it
              operational. Entering a CLUSTER_ERROR state happens automatically
              when the PCH determines that a PC installed on the cluster is
              non-operative or that the cluster does not meet requirements set
              for the PCH to administer the cluster but has nevertheless been
              given an instruction to do so (such as ‘install').
            - >-
              In this state, the PC may still be operational, and only the PCH
              is unable to act. The hub should not issue instructions to change
              the PC state, or otherwise interfere with the on-cluster
              resources. Entering a HUB_ERROR state happens automatically when
              the PCH determines the hub is in an unhealthy state and it wishes
              to ‘take hands off' to avoid corrupting the PC or other data.
            - >-
              Policy Controller (PC) is installed but suspended. This means that
              the policies are not enforced, but violations are still recorded
              (through audit).
            - >-
              PoCo Hub is not taking any action to reconcile cluster objects.
              Changes to those objects will not be overwritten by PoCo Hub.
          enum:
            - LIFECYCLE_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLING
            - ACTIVE
            - UPDATING
            - DECOMMISSIONING
            - CLUSTER_ERROR
            - HUB_ERROR
            - SUSPENDED
            - DETACHED
        details:
          description: Surface potential errors or information logs.
          type: string
    PolicyControllerPolicyContentState:
      id: PolicyControllerPolicyContentState
      description: The state of the policy controller policy content
      type: object
      properties:
        templateLibraryState:
          description: The state of the template library
          $ref: '#/components/schemas/PolicyControllerOnClusterState'
        bundleStates:
          description: >-
            The state of the any bundles included in the chosen version of the
            manifest
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PolicyControllerOnClusterState'
        referentialSyncConfigState:
          description: >-
            The state of the referential data sync configuration. This could
            represent the state of either the syncSet object(s) or the config
            object, depending on the version of PoCo configured by the user.
          $ref: '#/components/schemas/PolicyControllerOnClusterState'
    RBACRoleBindingActuationState:
      id: RBACRoleBindingActuationState
      description: >-
        **RBAC RoleBinding Actuation**: A membership-specific Feature state for
        the RBACRoleBindingActuation fleet feature.
      type: object
      properties:
        rbacrolebindingStates:
          description: >-
            Output only. The state of RBACRoleBindings using custom roles that
            exist on the cluster, keyed by RBACRoleBinding resource name with
            format:
            projects/{project}/locations/{location}/scopes/{scope}/rbacrolebindings/{rbacrolebinding}.
          readOnly: true
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RBACRoleBindingActuationRBACRoleBindingState'
    RBACRoleBindingActuationRBACRoleBindingState:
      id: RBACRoleBindingActuationRBACRoleBindingState
      description: >-
        RBACRoleBindingState is the status of an RBACRoleBinding which exists on
        a membership.
      type: object
      properties:
        state:
          description: Output only. The state of the RBACRoleBinding.
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified state.
            - RBACRoleBinding is created properly on the cluster.
            - >-
              The RBACRoleBinding was created on the cluster but the specified
              custom role does not exist on the cluster, hence the
              RBACRoleBinding has no effect.
          enum:
            - ROLE_BINDING_STATE_UNSPECIFIED
            - OK
            - CUSTOM_ROLE_MISSING_FROM_CLUSTER
        description:
          description: The reason for the failure.
          type: string
        updateTime:
          description: The time the RBACRoleBinding status was last updated.
          type: string
          format: google-datetime
    AppDevExperienceState:
      id: AppDevExperienceState
      description: State for App Dev Exp Feature.
      type: object
      properties:
        networkingInstallSucceeded:
          description: >-
            Status of subcomponent that detects configured Service Mesh
            resources.
          $ref: '#/components/schemas/AppDevExperienceStatus'
    AppDevExperienceStatus:
      id: AppDevExperienceStatus
      description: Status specifies state for the subcomponent.
      type: object
      properties:
        code:
          description: Code specifies AppDevExperienceFeature's subcomponent ready state.
          type: string
          enumDescriptions:
            - Not set.
            - AppDevExperienceFeature's specified subcomponent is ready.
            - >-
              AppDevExperienceFeature's specified subcomponent ready state is
              false. This means AppDevExperienceFeature has encountered an issue
              that blocks all, or a portion, of its normal operation. See the
              `description` for more details.
            - >-
              AppDevExperienceFeature's specified subcomponent has a pending or
              unknown state.
          enum:
            - CODE_UNSPECIFIED
            - OK
            - FAILED
            - UNKNOWN
        description:
          description: >-
            Description is populated if Code is Failed, explaining why it has
            failed.
          type: string
    State:
      id: State
      description: High-level state of a MembershipFeature.
      type: object
      properties:
        code:
          description: The high-level, machine-readable status of this MembershipFeature.
          type: string
          enumDescriptions:
            - Unknown or not set.
            - The MembershipFeature is operating normally.
            - >-
              The MembershipFeature has encountered an issue, and is operating
              in a degraded state. The MembershipFeature may need intervention
              to return to normal operation. See the description and any
              associated MembershipFeature-specific details for more
              information.
            - >-
              The MembershipFeature is not operating or is in a severely
              degraded state. The MembershipFeature may need intervention to
              return to normal operation. See the description and any associated
              MembershipFeature-specific details for more information.
          enum:
            - CODE_UNSPECIFIED
            - OK
            - WARNING
            - ERROR
        description:
          description: A human-readable description of the current status.
          type: string
        updateTime:
          description: >-
            The time this status and any related Feature-specific details were
            updated.
          type: string
          format: google-datetime
    LifecycleState:
      id: LifecycleState
      description: >-
        LifecycleState describes the state of a MembershipFeature *resource* in
        the GkeHub API. See `FeatureState` for the "running state" of the
        MembershipFeature.
      type: object
      properties:
        state:
          description: >-
            Output only. The current state of the Feature resource in the Hub
            API.
          readOnly: true
          type: string
          enumDescriptions:
            - State is unknown or not set.
            - >-
              The MembershipFeature is being enabled, and the MembershipFeature
              resource is being created. Once complete, the corresponding
              MembershipFeature will be enabled in this Hub.
            - >-
              The MembershipFeature is enabled in this Hub, and the
              MembershipFeature resource is fully available.
            - >-
              The MembershipFeature is being disabled in this Hub, and the
              MembershipFeature resource is being deleted.
            - The MembershipFeature resource is being updated.
            - >-
              The MembershipFeature resource is being updated by the Hub
              Service.
          enum:
            - STATE_UNSPECIFIED
            - ENABLING
            - ACTIVE
            - DISABLING
            - UPDATING
            - SERVICE_UPDATING
    ListMembershipFeaturesResponse:
      id: ListMembershipFeaturesResponse
      description: Response message for the `GkeHubFeature.ListMembershipFeatures` method.
      type: object
      properties:
        membershipFeatures:
          description: The list of matching MembershipFeatures.
          type: array
          items:
            $ref: '#/components/schemas/MembershipFeature'
        nextPageToken:
          description: >-
            A token to request the next page of resources from the
            `ListMembershipFeatures` method. The value of an empty string means
            that there are no more resources to return.
          type: string
        unreachable:
          description: >-
            List of locations that could not be reached while fetching this
            list.
          type: array
          items:
            type: string
    ListLocationsResponse:
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Location:
      id: Location
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
          additionalProperties:
            type: string
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    OperationMetadata:
      id: OperationMetadata
      description: Metadata of the long-running operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        target:
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusDetail:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        cancelRequested:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have successfully been cancelled
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    locations:
      id: google.gkehub.locations
      name: locations
      title: Locations
      methods:
        projects_locations_list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        projects_locations_get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/locations/methods/projects_locations_get
          - $ref: >-
              #/components/x-stackQL-resources/locations/methods/projects_locations_list
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: google.gkehub.operations
      name: operations
      title: Operations
      methods:
        projects_locations_operations_list:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        projects_locations_operations_get:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_cancel:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_operations_get
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_operations_list
        insert: []
        update: []
        replace: []
        delete: []
    features:
      id: google.gkehub.features
      name: features
      title: Features
      methods:
        projects_locations_memberships_features_get:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}~1features~1{featuresId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_features_delete:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}~1features~1{featuresId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_features_patch:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}~1features~1{featuresId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_features_list:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}~1features/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.membershipFeatures
        projects_locations_memberships_features_create:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}~1features/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/features/methods/projects_locations_memberships_features_get
          - $ref: >-
              #/components/x-stackQL-resources/features/methods/projects_locations_memberships_features_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/features/methods/projects_locations_memberships_features_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/features/methods/projects_locations_memberships_features_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/features/methods/projects_locations_memberships_features_delete
paths:
  /v2/projects/{projectsId}/locations:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Lists information about the supported locations for this service.
      operationId: gkehub.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: extraLocationTypes
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: gkehub.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: gkehub.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: gkehub.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        `1`, corresponding to `Code.CANCELLED`.
      operationId: gkehub.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}/features/{featuresId}:
    parameters: *ref_1
    get:
      description: >-
        ========= MembershipFeature Services ========= Gets details of a
        membershipFeature.
      operationId: gkehub.projects.locations.memberships.features.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipFeature'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
    delete:
      description: Removes a membershipFeature.
      operationId: gkehub.projects.locations.memberships.features.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
    patch:
      description: Updates an existing MembershipFeature.
      operationId: gkehub.projects.locations.memberships.features.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembershipFeature'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
  /v2/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}/features:
    parameters: *ref_1
    get:
      description: Lists MembershipFeatures in a given project and location.
      operationId: gkehub.projects.locations.memberships.features.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMembershipFeaturesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates membershipFeature under a given parent.
      operationId: gkehub.projects.locations.memberships.features.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembershipFeature'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: featureId
          schema:
            type: string
