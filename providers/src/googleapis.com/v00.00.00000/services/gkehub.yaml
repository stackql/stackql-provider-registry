openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: GKE Hub API
  description: ''
  version: v1
  x-discovery-doc-revision: '20230106'
  x-generated-date: '2023-01-19'
externalDocs:
  url: https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster
servers:
  - url: https://gkehub.googleapis.com
components:
  schemas:
    ConfigManagementHierarchyControllerVersion:
      type: object
      properties:
        hnc:
          type: string
          description: Version for open source HNC
        extension:
          type: string
          description: Version for Hierarchy Controller extension
      id: ConfigManagementHierarchyControllerVersion
      description: Version for Hierarchy Controller
    IdentityServiceOidcConfig:
      description: Configuration for OIDC Auth flow.
      id: IdentityServiceOidcConfig
      properties:
        issuerUri:
          description: URI for the OIDC provider. This should point to the level below .well-known/openid-configuration.
          type: string
        userPrefix:
          type: string
          description: Prefix to prepend to user name.
        clientId:
          type: string
          description: ID for OIDC client application.
        encryptedClientSecret:
          readOnly: true
          format: byte
          type: string
          description: Output only. Encrypted OIDC Client secret
        scopes:
          type: string
          description: Comma-separated list of identifiers.
        userClaim:
          description: Claim in OIDC ID token that holds username.
          type: string
        certificateAuthorityData:
          description: PEM-encoded CA for OIDC provider.
          type: string
        clientSecret:
          description: Input only. Unencrypted OIDC client secret will be passed to the GKE Hub CLH.
          type: string
        groupPrefix:
          type: string
          description: Prefix to prepend to group name.
        deployCloudConsoleProxy:
          type: boolean
          description: Flag to denote if reverse proxy is used to connect to auth provider. This flag should be set to true when provider is not reachable by Google Cloud Console.
        extraParams:
          description: Comma-separated list of key-value pairs.
          type: string
        groupsClaim:
          type: string
          description: Claim in OIDC ID token that holds group information.
        kubectlRedirectUri:
          type: string
          description: Registered redirect uri to redirect users going through OAuth flow using kubectl plugin.
        enableAccessToken:
          description: Enable access token.
          type: boolean
      type: object
    MultiCloudCluster:
      id: MultiCloudCluster
      properties:
        clusterMissing:
          description: Output only. If cluster_missing is set then it denotes that API(gkemulticloud.googleapis.com) resource for this GKE Multi-Cloud cluster no longer exists.
          readOnly: true
          type: boolean
        resourceLink:
          type: string
          description: 'Immutable. Self-link of the GCP resource for the GKE Multi-Cloud cluster. For example: //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/awsClusters/my-cluster //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/azureClusters/my-cluster //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/attachedClusters/my-cluster'
      description: MultiCloudCluster contains information specific to GKE Multi-Cloud clusters.
      type: object
    MembershipFeatureState:
      id: MembershipFeatureState
      description: MembershipFeatureState contains Feature status information for a single Membership.
      type: object
      properties:
        servicemesh:
          $ref: '#/components/schemas/ServiceMeshMembershipState'
          description: Service Mesh-specific state.
        fleetobservability:
          description: Fleet observability membership state.
          $ref: '#/components/schemas/FleetObservabilityMembershipState'
        identityservice:
          $ref: '#/components/schemas/IdentityServiceMembershipState'
          description: Identity Service-specific state.
        appdevexperience:
          $ref: '#/components/schemas/AppDevExperienceFeatureState'
          description: Appdevexperience specific state.
        state:
          description: The high-level state of this Feature for a single membership.
          $ref: '#/components/schemas/FeatureState'
        configmanagement:
          description: Config Management-specific state.
          $ref: '#/components/schemas/ConfigManagementMembershipState'
    FleetObservabilityMembershipSpec:
      id: FleetObservabilityMembershipSpec
      properties: {}
      type: object
      description: '**FleetObservability**: The membership-specific input for FleetObservability feature.'
    ConfigManagementPolicyControllerMonitoring:
      properties:
        backends:
          description: Specifies the list of backends Policy Controller will export to. An empty list would effectively disable metrics export.
          items:
            type: string
            enum:
              - MONITORING_BACKEND_UNSPECIFIED
              - PROMETHEUS
              - CLOUD_MONITORING
            enumDescriptions:
              - Backend cannot be determined
              - Prometheus backend for monitoring
              - Stackdriver/Cloud Monitoring backend for monitoring
          type: array
      type: object
      description: 'PolicyControllerMonitoring specifies the backends Policy Controller should export metrics to. For example, to specify metrics should be exported to Cloud Monitoring and Prometheus, specify backends: ["cloudmonitoring", "prometheus"]'
      id: ConfigManagementPolicyControllerMonitoring
    ConfigManagementPolicyControllerVersion:
      id: ConfigManagementPolicyControllerVersion
      type: object
      description: The build version of Gatekeeper Policy Controller is using.
      properties:
        version:
          description: The gatekeeper image tag that is composed of ACM version, git tag, build number.
          type: string
    ConfigManagementGroupVersionKind:
      id: ConfigManagementGroupVersionKind
      description: A Kubernetes object's GVK
      properties:
        version:
          description: Kubernetes Version
          type: string
        kind:
          description: Kubernetes Kind
          type: string
        group:
          description: Kubernetes Group
          type: string
      type: object
    FeatureResourceState:
      type: object
      properties:
        state:
          enum:
            - STATE_UNSPECIFIED
            - ENABLING
            - ACTIVE
            - DISABLING
            - UPDATING
            - SERVICE_UPDATING
          type: string
          description: The current state of the Feature resource in the Hub API.
          enumDescriptions:
            - State is unknown or not set.
            - The Feature is being enabled, and the Feature resource is being created. Once complete, the corresponding Feature will be enabled in this Hub.
            - The Feature is enabled in this Hub, and the Feature resource is fully available.
            - The Feature is being disabled in this Hub, and the Feature resource is being deleted.
            - The Feature resource is being updated.
            - The Feature resource is being updated by the Hub Service.
      description: FeatureResourceState describes the state of a Feature *resource* in the GkeHub API. See `FeatureState` for the "running state" of the Feature in the Hub and across Memberships.
      id: FeatureResourceState
    ConfigManagementConfigSyncState:
      type: object
      description: State information for ConfigSync
      properties:
        syncState:
          $ref: '#/components/schemas/ConfigManagementSyncState'
          description: The state of ConfigSync's process to sync configs to a cluster
        version:
          description: The version of ConfigSync deployed
          $ref: '#/components/schemas/ConfigManagementConfigSyncVersion'
        deploymentState:
          $ref: '#/components/schemas/ConfigManagementConfigSyncDeploymentState'
          description: Information about the deployment of ConfigSync, including the version of the various Pods deployed
      id: ConfigManagementConfigSyncState
    ServiceMeshMembershipState:
      properties:
        dataPlaneManagement:
          description: Output only. Status of data plane management.
          readOnly: true
          $ref: '#/components/schemas/ServiceMeshDataPlaneManagement'
        controlPlaneManagement:
          $ref: '#/components/schemas/ServiceMeshControlPlaneManagement'
          readOnly: true
          description: Output only. Status of control plane management
      type: object
      id: ServiceMeshMembershipState
      description: '**Service Mesh**: State for a single Membership, as analyzed by the Service Mesh Hub Controller.'
    ConfigManagementPolicyControllerState:
      properties:
        version:
          description: The version of Gatekeeper Policy Controller deployed.
          $ref: '#/components/schemas/ConfigManagementPolicyControllerVersion'
        deploymentState:
          $ref: '#/components/schemas/ConfigManagementGatekeeperDeploymentState'
          description: The state about the policy controller installation.
      type: object
      description: State for PolicyControllerState.
      id: ConfigManagementPolicyControllerState
    GenerateConnectManifestResponse:
      type: object
      id: GenerateConnectManifestResponse
      properties:
        manifest:
          description: The ordered list of Kubernetes resources that need to be applied to the cluster for GKE Connect agent installation/upgrade.
          type: array
          items:
            $ref: '#/components/schemas/ConnectAgentResource'
      description: GenerateConnectManifestResponse contains manifest information for installing/upgrading a Connect agent.
    ConfigManagementMembershipState:
      description: '**Anthos Config Management**: State for a single cluster.'
      type: object
      properties:
        membershipSpec:
          description: Membership configuration in the cluster. This represents the actual state in the cluster, while the MembershipSpec in the FeatureSpec represents the intended state
          $ref: '#/components/schemas/ConfigManagementMembershipSpec'
        configSyncState:
          $ref: '#/components/schemas/ConfigManagementConfigSyncState'
          description: Current sync status
        operatorState:
          $ref: '#/components/schemas/ConfigManagementOperatorState'
          description: Current install status of ACM's Operator
        policyControllerState:
          $ref: '#/components/schemas/ConfigManagementPolicyControllerState'
          description: PolicyController status
        hierarchyControllerState:
          description: Hierarchy Controller status
          $ref: '#/components/schemas/ConfigManagementHierarchyControllerState'
        clusterName:
          description: The user-defined name for the cluster used by ClusterSelectors to group clusters together. This should match Membership's membership_name, unless the user installed ACM on the cluster manually prior to enabling the ACM hub feature. Unique within a Anthos Config Management installation.
          type: string
      id: ConfigManagementMembershipState
    ScopeFeatureSpec:
      description: ScopeFeatureSpec contains feature specs for a fleet scope.
      type: object
      id: ScopeFeatureSpec
      properties: {}
    ListOperationsResponse:
      id: ListOperationsResponse
      type: object
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        operations:
          type: array
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Operation'
    FleetObservabilityFeatureState:
      properties: {}
      description: '**FleetObservability**: An empty state left as an example Hub-wide Feature state.'
      type: object
      id: FleetObservabilityFeatureState
    IdentityServiceMembershipState:
      description: '**Anthos Identity Service**: State for a single Membership.'
      type: object
      id: IdentityServiceMembershipState
      properties:
        state:
          type: string
          description: Deployment state on this member
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - OK
            - ERROR
          enumDescriptions:
            - Unspecified state
            - deployment succeeds
            - Failure with error.
        failureReason:
          description: The reason of the failure.
          type: string
        memberConfig:
          description: Last reconciled membership configuration
          $ref: '#/components/schemas/IdentityServiceMembershipSpec'
        installedVersion:
          description: Installed AIS version. This is the AIS version installed on this member. The values makes sense iff state is OK.
          type: string
    Policy:
      properties:
        auditConfigs:
          items:
            $ref: '#/components/schemas/AuditConfig'
          description: Specifies cloud audit logging configuration for this policy.
          type: array
        bindings:
          type: array
          items:
            $ref: '#/components/schemas/Binding'
          description: Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.
        etag:
          description: '`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.'
          type: string
          format: byte
        version:
          type: integer
          format: int32
          description: 'Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
      id: Policy
      type: object
      description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp(''2020-10-01T00:00:00.000Z'')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).'
    AuditConfig:
      properties:
        auditLogConfigs:
          items:
            $ref: '#/components/schemas/AuditLogConfig'
          description: The configuration for logging of each type of permission.
          type: array
        service:
          description: Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
          type: string
      type: object
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.'
      id: AuditConfig
    AuditLogConfig:
      properties:
        exemptedMembers:
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
          items:
            type: string
          type: array
        logType:
          description: The log type that this config enables.
          type: string
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
      description: 'Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables ''DATA_READ'' and ''DATA_WRITE'' logging, while exempting jose@example.com from DATA_READ logging.'
      type: object
      id: AuditLogConfig
    ServiceMeshStatusDetails:
      type: object
      properties:
        code:
          description: A machine-readable code that further describes a broad status.
          type: string
        details:
          type: string
          description: Human-readable explanation of code.
      description: Structured and human-readable details for a status.
      id: ServiceMeshStatusDetails
    CancelOperationRequest:
      type: object
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
      properties: {}
    ApplianceCluster:
      type: object
      description: ApplianceCluster contains information specific to GDC Edge Appliance Clusters.
      properties:
        resourceLink:
          type: string
          description: 'Immutable. Self-link of the GCP resource for the Appliance Cluster. For example: //transferappliance.googleapis.com/projects/my-project/locations/us-west1-a/appliances/my-appliance'
      id: ApplianceCluster
    KubernetesMetadata:
      id: KubernetesMetadata
      properties:
        nodeCount:
          type: integer
          readOnly: true
          description: Output only. Node count as reported by Kubernetes nodes resources.
          format: int32
        nodeProviderId:
          description: Output only. Node providerID as reported by the first node in the list of nodes on the Kubernetes endpoint. On Kubernetes platforms that support zero-node clusters (like GKE-on-GCP), the node_count will be zero and the node_provider_id will be empty.
          readOnly: true
          type: string
        vcpuCount:
          readOnly: true
          type: integer
          format: int32
          description: Output only. vCPU count as reported by Kubernetes nodes resources.
        kubernetesApiServerVersion:
          type: string
          description: Output only. Kubernetes API server version string as reported by `/version`.
          readOnly: true
        updateTime:
          readOnly: true
          description: Output only. The time at which these details were last updated. This update_time is different from the Membership-level update_time since EndpointDetails are updated internally for API consumers.
          format: google-datetime
          type: string
        memoryMb:
          readOnly: true
          description: Output only. The total memory capacity as reported by the sum of all Kubernetes nodes resources, defined in MB.
          format: int32
          type: integer
      description: KubernetesMetadata provides informational metadata for Memberships representing Kubernetes clusters.
      type: object
    ServiceMeshControlPlaneManagement:
      description: Status of control plane management.
      properties:
        state:
          enumDescriptions:
            - Unspecified
            - DISABLED means that the component is not enabled.
            - FAILED_PRECONDITION means that provisioning cannot proceed because of some characteristic of the member cluster.
            - PROVISIONING means that provisioning is in progress.
            - ACTIVE means that the component is ready for use.
            - STALLED means that provisioning could not be done.
            - NEEDS_ATTENTION means that the component is ready, but some user intervention is required. (For example that the user should migrate workloads to a new control plane revision.)
            - DEGRADED means that the component is ready, but operating in a degraded state.
          type: string
          enum:
            - LIFECYCLE_STATE_UNSPECIFIED
            - DISABLED
            - FAILED_PRECONDITION
            - PROVISIONING
            - ACTIVE
            - STALLED
            - NEEDS_ATTENTION
            - DEGRADED
          description: LifecycleState of control plane management.
        details:
          items:
            $ref: '#/components/schemas/ServiceMeshStatusDetails'
          type: array
          description: Explanation of state.
      id: ServiceMeshControlPlaneManagement
      type: object
    Expr:
      description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != ''private'' && document.type != ''internal''" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "''New message received at '' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.'
      type: object
      properties:
        description:
          type: string
          description: Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
        title:
          type: string
          description: Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
        location:
          description: Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
          type: string
        expression:
          description: Textual representation of an expression in Common Expression Language syntax.
          type: string
      id: Expr
    ListLocationsResponse:
      properties:
        locations:
          type: array
          items:
            $ref: '#/components/schemas/Location'
          description: A list of locations that matches the specified filter in the request.
        nextPageToken:
          type: string
          description: The standard List next-page token.
      description: The response message for Locations.ListLocations.
      type: object
      id: ListLocationsResponse
    FleetObservabilityMembershipState:
      description: '**FleetObservability**: An empty state left as an example membership-specific Feature state.'
      type: object
      properties: {}
      id: FleetObservabilityMembershipState
    TestIamPermissionsRequest:
      id: TestIamPermissionsRequest
      type: object
      description: Request message for `TestIamPermissions` method.
      properties:
        permissions:
          items:
            type: string
          description: The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
          type: array
    ConnectAgentResource:
      properties:
        type:
          $ref: '#/components/schemas/TypeMeta'
          description: Kubernetes type of the resource.
        manifest:
          type: string
          description: YAML manifest of the resource.
      type: object
      description: ConnectAgentResource represents a Kubernetes resource manifest for Connect Agent deployment.
      id: ConnectAgentResource
    Empty:
      id: Empty
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      type: object
      properties: {}
    ServiceMeshMembershipSpec:
      id: ServiceMeshMembershipSpec
      type: object
      properties:
        management:
          description: Enables automatic Service Mesh management.
          enum:
            - MANAGEMENT_UNSPECIFIED
            - MANAGEMENT_AUTOMATIC
            - MANAGEMENT_MANUAL
          type: string
          enumDescriptions:
            - Unspecified
            - Google should manage my Service Mesh for the cluster.
            - User will manually configure their service mesh components.
        controlPlane:
          enumDescriptions:
            - Unspecified
            - Google should provision a control plane revision and make it available in the cluster. Google will enroll this revision in a release channel and keep it up to date. The control plane revision may be a managed service, or a managed install.
            - User will manually configure the control plane (e.g. via CLI, or via the ControlPlaneRevision KRM API)
          type: string
          enum:
            - CONTROL_PLANE_MANAGEMENT_UNSPECIFIED
            - AUTOMATIC
            - MANUAL
          description: Enables automatic control plane management.
      description: '**Service Mesh**: Spec for a single Membership for the servicemesh feature'
    GkeCluster:
      properties:
        resourceLink:
          description: 'Immutable. Self-link of the GCP resource for the GKE cluster. For example: //container.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster Zonal clusters are also supported.'
          type: string
        clusterMissing:
          readOnly: true
          type: boolean
          description: Output only. If cluster_missing is set then it denotes that the GKE cluster no longer exists in the GKE Control Plane.
      type: object
      id: GkeCluster
      description: GkeCluster contains information specific to GKE clusters.
    ListFeaturesResponse:
      type: object
      properties:
        resources:
          description: The list of matching Features
          type: array
          items:
            $ref: '#/components/schemas/Feature'
        nextPageToken:
          type: string
          description: A token to request the next page of resources from the `ListFeatures` method. The value of an empty string means that there are no more resources to return.
      id: ListFeaturesResponse
      description: Response message for the `GkeHub.ListFeatures` method.
    ConfigManagementConfigSyncDeploymentState:
      id: ConfigManagementConfigSyncDeploymentState
      properties:
        admissionWebhook:
          type: string
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
          description: Deployment state of admission-webhook
        monitor:
          description: Deployment state of the monitor pod
          type: string
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
        rootReconciler:
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          type: string
          description: Deployment state of root-reconciler
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
        gitSync:
          type: string
          description: Deployment state of the git-sync pod
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
        syncer:
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
          description: Deployment state of the syncer pod
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          type: string
        importer:
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
          description: Deployment state of the importer pod
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
        reconcilerManager:
          type: string
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
          description: Deployment state of reconciler-manager pod
      type: object
      description: The state of ConfigSync's deployment on a cluster
    Authority:
      type: object
      description: 'Authority encodes how Google will recognize identities from this Membership. See the workload identity documentation for more details: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity'
      properties:
        oidcJwks:
          description: Optional. OIDC verification keys for this Membership in JWKS format (RFC 7517). When this field is set, OIDC discovery will NOT be performed on `issuer`, and instead OIDC tokens will be validated using this field.
          format: byte
          type: string
        workloadIdentityPool:
          description: Output only. The name of the workload identity pool in which `issuer` will be recognized. There is a single Workload Identity Pool per Hub that is shared between all Memberships that belong to that Hub. For a Hub hosted in {PROJECT_ID}, the workload pool format is `{PROJECT_ID}.hub.id.goog`, although this is subject to change in newer versions of this API.
          readOnly: true
          type: string
        issuer:
          type: string
          description: Optional. A JSON Web Token (JWT) issuer URI. `issuer` must start with `https://` and be a valid URL with length <2000 characters. If set, then Google will allow valid OIDC tokens from this issuer to authenticate within the workload_identity_pool. OIDC discovery will be performed on this URI to validate tokens from the issuer. Clearing `issuer` disables Workload Identity. `issuer` cannot be directly modified; it must be cleared (and Workload Identity disabled) before using a new issuer (and re-enabling Workload Identity).
        identityProvider:
          description: Output only. An identity provider that reflects the `issuer` in the workload identity pool.
          readOnly: true
          type: string
      id: Authority
    MembershipEndpoint:
      properties:
        kubernetesMetadata:
          $ref: '#/components/schemas/KubernetesMetadata'
          readOnly: true
          description: Output only. Useful Kubernetes-specific metadata.
        gkeCluster:
          description: Optional. Specific information for a GKE-on-GCP cluster.
          $ref: '#/components/schemas/GkeCluster'
        multiCloudCluster:
          $ref: '#/components/schemas/MultiCloudCluster'
          description: Optional. Specific information for a GKE Multi-Cloud cluster.
        kubernetesResource:
          description: 'Optional. The in-cluster Kubernetes Resources that should be applied for a correctly registered cluster, in the steady state. These resources: * Ensure that the cluster is exclusively registered to one and only one Hub Membership. * Propagate Workload Pool Information available in the Membership Authority field. * Ensure proper initial configuration of default Hub Features.'
          $ref: '#/components/schemas/KubernetesResource'
        edgeCluster:
          description: Optional. Specific information for a Google Edge cluster.
          $ref: '#/components/schemas/EdgeCluster'
        applianceCluster:
          description: Optional. Specific information for a GDC Edge Appliance cluster.
          $ref: '#/components/schemas/ApplianceCluster'
        onPremCluster:
          description: Optional. Specific information for a GKE On-Prem cluster. An onprem user-cluster who has no resourceLink is not allowed to use this field, it should have a nil "type" instead.
          $ref: '#/components/schemas/OnPremCluster'
      type: object
      description: MembershipEndpoint contains information needed to contact a Kubernetes API, endpoint and any additional Kubernetes metadata.
      id: MembershipEndpoint
    GoogleRpcStatus:
      type: object
      id: GoogleRpcStatus
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      properties:
        code:
          format: int32
          type: integer
          description: The status code, which should be an enum value of google.rpc.Code.
        details:
          items:
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
            type: object
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          type: array
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
    ConfigManagementSyncState:
      description: State indicating an ACM's progress syncing configurations to a cluster
      properties:
        lastSync:
          type: string
          description: 'Deprecated: use last_sync_time instead. Timestamp of when ACM last successfully synced the repo The time format is specified in https://golang.org/pkg/time/#Time.String'
        syncToken:
          description: Token indicating the state of the syncer.
          type: string
        lastSyncTime:
          format: google-datetime
          description: Timestamp type of when ACM last successfully synced the repo
          type: string
        errors:
          type: array
          description: A list of errors resulting from problematic configs. This list will be truncated after 100 errors, although it is unlikely for that many errors to simultaneously exist.
          items:
            $ref: '#/components/schemas/ConfigManagementSyncError'
        code:
          enum:
            - SYNC_CODE_UNSPECIFIED
            - SYNCED
            - PENDING
            - ERROR
            - NOT_CONFIGURED
            - NOT_INSTALLED
            - UNAUTHORIZED
            - UNREACHABLE
          description: Sync status code
          type: string
          enumDescriptions:
            - ACM cannot determine a sync code
            - ACM successfully synced the git Repo with the cluster
            - ACM is in the progress of syncing a new change
            - Indicates an error configuring ACM, and user action is required
            - ACM has been installed (operator manifest deployed), but not configured.
            - ACM has not been installed (no operator pod found)
            - Error authorizing with the cluster
            - Cluster could not be reached
        sourceToken:
          type: string
          description: Token indicating the state of the repo.
        importToken:
          type: string
          description: Token indicating the state of the importer.
      id: ConfigManagementSyncState
      type: object
    IdentityServiceAuthMethod:
      type: object
      description: Configuration of an auth method for a member/cluster. Only one authentication method (e.g., OIDC and LDAP) can be set per AuthMethod.
      properties:
        name:
          description: Identifier for auth config.
          type: string
        azureadConfig:
          description: AzureAD specific Configuration.
          $ref: '#/components/schemas/IdentityServiceAzureADConfig'
        googleConfig:
          description: GoogleConfig specific configuration
          $ref: '#/components/schemas/IdentityServiceGoogleConfig'
        oidcConfig:
          description: OIDC specific configuration.
          $ref: '#/components/schemas/IdentityServiceOidcConfig'
        proxy:
          type: string
          description: Proxy server address to use for auth method.
      id: IdentityServiceAuthMethod
    ConfigManagementHierarchyControllerState:
      description: State for Hierarchy Controller
      id: ConfigManagementHierarchyControllerState
      type: object
      properties:
        state:
          description: The deployment state for Hierarchy Controller
          $ref: '#/components/schemas/ConfigManagementHierarchyControllerDeploymentState'
        version:
          description: The version for Hierarchy Controller
          $ref: '#/components/schemas/ConfigManagementHierarchyControllerVersion'
    AppDevExperienceFeatureState:
      description: State for App Dev Exp Feature.
      type: object
      properties:
        networkingInstallSucceeded:
          description: Status of subcomponent that detects configured Service Mesh resources.
          $ref: '#/components/schemas/Status'
      id: AppDevExperienceFeatureState
    Status:
      description: Status specifies state for the subcomponent.
      id: Status
      properties:
        description:
          type: string
          description: Description is populated if Code is Failed, explaining why it has failed.
        code:
          enum:
            - CODE_UNSPECIFIED
            - OK
            - FAILED
            - UNKNOWN
          enumDescriptions:
            - Not set.
            - AppDevExperienceFeature's specified subcomponent is ready.
            - AppDevExperienceFeature's specified subcomponent ready state is false. This means AppDevExperienceFeature has encountered an issue that blocks all, or a portion, of its normal operation. See the `description` for more details.
            - AppDevExperienceFeature's specified subcomponent has a pending or unknown state.
          description: Code specifies AppDevExperienceFeature's subcomponent ready state.
          type: string
      type: object
    IdentityServiceGoogleConfig:
      type: object
      description: Configuration for the Google Plugin Auth flow.
      id: IdentityServiceGoogleConfig
      properties:
        disable:
          description: Disable automatic configuration of Google Plugin on supported platforms.
          type: boolean
    Binding:
      properties:
        condition:
          $ref: '#/components/schemas/Expr'
          description: The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        members:
          items:
            type: string
          type: array
          description: 'Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. '
        role:
          description: Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
          type: string
      type: object
      id: Binding
      description: Associates `members`, or principals, with a `role`.
    ResourceOptions:
      type: object
      description: ResourceOptions represent options for Kubernetes resource generation.
      properties:
        k8sVersion:
          type: string
          description: Optional. Major version of the Kubernetes cluster. This is only used to determine which version to use for the CustomResourceDefinition resources, `apiextensions/v1beta1` or`apiextensions/v1`.
        connectVersion:
          description: Optional. The Connect agent version to use for connect_resources. Defaults to the latest GKE Connect version. The version must be a currently supported version, obsolete versions will be rejected.
          type: string
        v1beta1Crd:
          type: boolean
          description: Optional. Use `apiextensions/v1beta1` instead of `apiextensions/v1` for CustomResourceDefinition resources. This option should be set for clusters with Kubernetes apiserver versions <1.16.
      id: ResourceOptions
    IdentityServiceAzureADConfig:
      id: IdentityServiceAzureADConfig
      description: Configuration for the AzureAD Auth flow.
      type: object
      properties:
        clientSecret:
          description: Input only. Unencrypted AzureAD client secret will be passed to the GKE Hub CLH.
          type: string
        encryptedClientSecret:
          description: Output only. Encrypted AzureAD client secret.
          readOnly: true
          format: byte
          type: string
        kubectlRedirectUri:
          type: string
          description: The redirect URL that kubectl uses for authorization.
        clientId:
          description: ID for the registered client application that makes authentication requests to the Azure AD identity provider.
          type: string
        tenant:
          description: Kind of Azure AD account to be authenticated. Supported values are or for accounts belonging to a specific tenant.
          type: string
    EdgeCluster:
      id: EdgeCluster
      type: object
      properties:
        resourceLink:
          type: string
          description: 'Immutable. Self-link of the GCP resource for the Edge Cluster. For example: //edgecontainer.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster'
      description: EdgeCluster contains information specific to Google Edge Clusters.
    Operation:
      properties:
        done:
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
          type: boolean
        error:
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: The error result of the operation in case of failure or cancellation.
        name:
          type: string
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
        response:
          type: object
          description: The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
      id: Operation
      description: This resource represents a long-running operation that is the result of a network API call.
      type: object
    TestIamPermissionsResponse:
      type: object
      id: TestIamPermissionsResponse
      properties:
        permissions:
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
          items:
            type: string
          type: array
      description: Response message for `TestIamPermissions` method.
    ConfigManagementHierarchyControllerDeploymentState:
      properties:
        extension:
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          type: string
          description: The deployment state for Hierarchy Controller extension (e.g. v0.7.0-hc.1)
        hnc:
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
          type: string
          description: The deployment state for open source HNC (e.g. v0.7.0-hc.0)
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
      type: object
      description: Deployment state for Hierarchy Controller
      id: ConfigManagementHierarchyControllerDeploymentState
    ConfigManagementConfigSyncVersion:
      id: ConfigManagementConfigSyncVersion
      description: Specific versioning information pertaining to ConfigSync's Pods
      properties:
        reconcilerManager:
          type: string
          description: Version of the deployed reconciler-manager pod
        admissionWebhook:
          type: string
          description: Version of the deployed admission_webhook pod
        monitor:
          description: Version of the deployed monitor pod
          type: string
        importer:
          type: string
          description: Version of the deployed importer pod
        syncer:
          type: string
          description: Version of the deployed syncer pod
        rootReconciler:
          type: string
          description: Version of the deployed reconciler container in root-reconciler pod
        gitSync:
          type: string
          description: Version of the deployed git-sync pod
      type: object
    SetIamPolicyRequest:
      type: object
      properties:
        updateMask:
          type: string
          description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`'
          format: google-fieldmask
        policy:
          description: 'REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.'
          $ref: '#/components/schemas/Policy'
      id: SetIamPolicyRequest
      description: Request message for `SetIamPolicy` method.
    ConfigManagementOperatorState:
      type: object
      description: State information for an ACM's Operator
      id: ConfigManagementOperatorState
      properties:
        deploymentState:
          description: The state of the Operator's deployment
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
          type: string
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
        errors:
          items:
            $ref: '#/components/schemas/ConfigManagementInstallError'
          type: array
          description: Install errors.
        version:
          description: The semenatic version number of the operator
          type: string
    CommonFeatureState:
      properties:
        state:
          readOnly: true
          $ref: '#/components/schemas/FeatureState'
          description: Output only. The "running state" of the Feature in this Hub.
        appdevexperience:
          $ref: '#/components/schemas/AppDevExperienceFeatureState'
          description: Appdevexperience specific state.
        fleetobservability:
          description: FleetObservability feature state.
          $ref: '#/components/schemas/FleetObservabilityFeatureState'
      id: CommonFeatureState
      type: object
      description: CommonFeatureState contains Hub-wide Feature status information.
    ConfigManagementMembershipSpec:
      id: ConfigManagementMembershipSpec
      description: '**Anthos Config Management**: Configuration for a single cluster. Intended to parallel the ConfigManagement CR.'
      properties:
        hierarchyController:
          $ref: '#/components/schemas/ConfigManagementHierarchyControllerConfig'
          description: Hierarchy Controller configuration for the cluster.
        policyController:
          $ref: '#/components/schemas/ConfigManagementPolicyController'
          description: Policy Controller configuration for the cluster.
        version:
          description: Version of ACM installed.
          type: string
        configSync:
          $ref: '#/components/schemas/ConfigManagementConfigSync'
          description: Config Sync configuration for the cluster.
      type: object
    ConfigManagementConfigSync:
      properties:
        git:
          description: Git repo configuration for the cluster.
          $ref: '#/components/schemas/ConfigManagementGitConfig'
        allowVerticalScale:
          description: Set to true to allow the vertical scaling. Defaults to false which disallows vertical scaling. This field is deprecated.
          type: boolean
        enabled:
          description: Enables the installation of ConfigSync. If set to true, ConfigSync resources will be created and the other ConfigSync fields will be applied if exist. If set to false, all other ConfigSync fields will be ignored, ConfigSync resources will be deleted. If omitted, ConfigSync resources will be managed depends on the presence of git field.
          type: boolean
        oci:
          $ref: '#/components/schemas/ConfigManagementOciConfig'
          description: OCI repo configuration for the cluster
        sourceFormat:
          type: string
          description: Specifies whether the Config Sync Repo is in "hierarchical" or "unstructured" mode.
        preventDrift:
          type: boolean
          description: Set to true to enable the Config Sync admission webhook to prevent drifts. If set to `false`, disables the Config Sync admission webhook and does not prevent drifts.
      description: Configuration for Config Sync
      id: ConfigManagementConfigSync
      type: object
    IdentityServiceMembershipSpec:
      properties:
        authMethods:
          type: array
          description: A member may support multiple auth methods.
          items:
            $ref: '#/components/schemas/IdentityServiceAuthMethod'
      id: IdentityServiceMembershipSpec
      type: object
      description: '**Anthos Identity Service**: Configuration for a single Membership.'
    FleetObservabilityFeatureSpec:
      properties: {}
      id: FleetObservabilityFeatureSpec
      type: object
      description: '**Fleet Observability**: The Hub-wide input for the FleetObservability feature.'
    MultiClusterIngressFeatureSpec:
      type: object
      properties:
        configMembership:
          type: string
          description: 'Fully-qualified Membership name which hosts the MultiClusterIngress CRD. Example: `projects/foo-proj/locations/global/memberships/bar`'
      id: MultiClusterIngressFeatureSpec
      description: '**Multi-cluster Ingress**: The configuration for the MultiClusterIngress feature.'
    KubernetesResource:
      id: KubernetesResource
      properties:
        connectResources:
          readOnly: true
          type: array
          description: Output only. The Kubernetes resources for installing the GKE Connect agent This field is only populated in the Membership returned from a successful long-running operation from CreateMembership or UpdateMembership. It is not populated during normal GetMembership or ListMemberships requests. To get the resource manifest after the initial registration, the caller should make a UpdateMembership call with an empty field mask.
          items:
            $ref: '#/components/schemas/ResourceManifest'
        membershipResources:
          description: Output only. Additional Kubernetes resources that need to be applied to the cluster after Membership creation, and after every update. This field is only populated in the Membership returned from a successful long-running operation from CreateMembership or UpdateMembership. It is not populated during normal GetMembership or ListMemberships requests. To get the resource manifest after the initial registration, the caller should make a UpdateMembership call with an empty field mask.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ResourceManifest'
        membershipCrManifest:
          type: string
          description: Input only. The YAML representation of the Membership CR. This field is ignored for GKE clusters where Hub can read the CR directly. Callers should provide the CR that is currently present in the cluster during CreateMembership or UpdateMembership, or leave this field empty if none exists. The CR manifest is used to validate the cluster has not been registered with another Membership.
        resourceOptions:
          $ref: '#/components/schemas/ResourceOptions'
          description: Optional. Options for Kubernetes resource generation.
      description: KubernetesResource contains the YAML manifests and configuration for Membership Kubernetes resources in the cluster. After CreateMembership or UpdateMembership, these resources should be re-applied in the cluster.
      type: object
    OperationMetadata:
      description: Represents the metadata of the long-running operation.
      id: OperationMetadata
      properties:
        cancelRequested:
          readOnly: true
          description: Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
          type: boolean
        apiVersion:
          type: string
          description: Output only. API version used to start the operation.
          readOnly: true
        statusDetail:
          type: string
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
        endTime:
          readOnly: true
          description: Output only. The time the operation finished running.
          type: string
          format: google-datetime
        verb:
          type: string
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
        target:
          description: Output only. Server-defined resource path for the target of the operation.
          type: string
          readOnly: true
        createTime:
          type: string
          readOnly: true
          description: Output only. The time the operation was created.
          format: google-datetime
      type: object
    AppDevExperienceFeatureSpec:
      id: AppDevExperienceFeatureSpec
      type: object
      properties: {}
      description: Spec for App Dev Experience Feature.
    ConfigManagementGitConfig:
      type: object
      properties:
        syncRepo:
          type: string
          description: The URL of the Git repository to use as the source of truth.
        httpsProxy:
          type: string
          description: URL for the HTTPS proxy to be used when communicating with the Git repo.
        syncWaitSecs:
          format: int64
          description: 'Period in seconds between consecutive syncs. Default: 15.'
          type: string
        syncRev:
          description: Git revision (tag or hash) to check out. Default HEAD.
          type: string
        gcpServiceAccountEmail:
          type: string
          description: The GCP Service Account Email used for auth when secret_type is gcpServiceAccount.
        syncBranch:
          description: 'The branch of the repository to sync from. Default: master.'
          type: string
        secretType:
          type: string
          description: Type of secret configured for access to the Git repo. Must be one of ssh, cookiefile, gcenode, token, gcpserviceaccount or none. The validation of this is case-sensitive. Required.
        policyDir:
          type: string
          description: 'The path within the Git repository that represents the top level of the repo to sync. Default: the root directory of the repository.'
      id: ConfigManagementGitConfig
      description: Git repo configuration for a single cluster.
    FeatureState:
      properties:
        code:
          type: string
          description: The high-level, machine-readable status of this Feature.
          enum:
            - CODE_UNSPECIFIED
            - OK
            - WARNING
            - ERROR
          enumDescriptions:
            - Unknown or not set.
            - The Feature is operating normally.
            - The Feature has encountered an issue, and is operating in a degraded state. The Feature may need intervention to return to normal operation. See the description and any associated Feature-specific details for more information.
            - The Feature is not operating or is in a severely degraded state. The Feature may need intervention to return to normal operation. See the description and any associated Feature-specific details for more information.
        updateTime:
          description: The time this status and any related Feature-specific details were updated.
          format: google-datetime
          type: string
        description:
          description: A human-readable description of the current status.
          type: string
      id: FeatureState
      type: object
      description: FeatureState describes the high-level state of a Feature. It may be used to describe a Feature's state at the environ-level, or per-membershop, depending on the context.
    ConfigManagementSyncError:
      properties:
        code:
          type: string
          description: An ACM defined error code
        errorResources:
          items:
            $ref: '#/components/schemas/ConfigManagementErrorResource'
          description: A list of config(s) associated with the error, if any
          type: array
        errorMessage:
          description: A description of the error
          type: string
      type: object
      description: An ACM created error representing a problem syncing configurations
      id: ConfigManagementSyncError
    ConfigManagementOciConfig:
      type: object
      properties:
        policyDir:
          type: string
          description: 'The absolute path of the directory that contains the local resources. Default: the root directory of the image.'
        gcpServiceAccountEmail:
          type: string
          description: The GCP Service Account Email used for auth when secret_type is gcpServiceAccount.
        syncRepo:
          description: The OCI image repository URL for the package to sync from. e.g. `LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY_NAME/PACKAGE_NAME`.
          type: string
        secretType:
          description: Type of secret configured for access to the Git repo.
          type: string
        syncWaitSecs:
          description: 'Period in seconds between consecutive syncs. Default: 15.'
          type: string
          format: int64
      id: ConfigManagementOciConfig
      description: OCI repo configuration for a single cluster
    ConfigManagementHierarchyControllerConfig:
      id: ConfigManagementHierarchyControllerConfig
      properties:
        enabled:
          type: boolean
          description: Whether Hierarchy Controller is enabled in this cluster.
        enablePodTreeLabels:
          description: Whether pod tree labels are enabled in this cluster.
          type: boolean
        enableHierarchicalResourceQuota:
          type: boolean
          description: Whether hierarchical resource quota is enabled in this cluster.
      description: Configuration for Hierarchy Controller
      type: object
    ScopeFeatureState:
      properties:
        state:
          $ref: '#/components/schemas/FeatureState'
          readOnly: true
          description: Output only. The "running state" of the Feature in this Scope.
      id: ScopeFeatureState
      description: ScopeFeatureState contains Scope-wide Feature status information.
      type: object
    MembershipState:
      id: MembershipState
      properties:
        code:
          description: Output only. The current state of the Membership resource.
          readOnly: true
          enum:
            - CODE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - UPDATING
            - SERVICE_UPDATING
          enumDescriptions:
            - The code is not set.
            - The cluster is being registered.
            - The cluster is registered.
            - The cluster is being unregistered.
            - The Membership is being updated.
            - The Membership is being updated by the Hub Service.
          type: string
      type: object
      description: MembershipState describes the state of a Membership resource.
    CommonFeatureSpec:
      description: CommonFeatureSpec contains Hub-wide configuration information
      id: CommonFeatureSpec
      type: object
      properties:
        appdevexperience:
          description: Appdevexperience specific spec.
          $ref: '#/components/schemas/AppDevExperienceFeatureSpec'
        multiclusteringress:
          description: Multicluster Ingress-specific spec.
          $ref: '#/components/schemas/MultiClusterIngressFeatureSpec'
        fleetobservability:
          $ref: '#/components/schemas/FleetObservabilityFeatureSpec'
          description: FleetObservability feature spec.
    ConfigManagementGatekeeperDeploymentState:
      id: ConfigManagementGatekeeperDeploymentState
      properties:
        gatekeeperMutation:
          description: Status of the pod serving the mutation webhook.
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
          type: string
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
        gatekeeperControllerManagerState:
          description: Status of gatekeeper-controller-manager pod.
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
        gatekeeperAudit:
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          type: string
          description: Status of gatekeeper-audit deployment.
      type: object
      description: State of Policy Controller installation.
    MembershipFeatureSpec:
      id: MembershipFeatureSpec
      description: MembershipFeatureSpec contains configuration information for a single Membership.
      type: object
      properties:
        fleetobservability:
          description: Fleet observability membership spec
          $ref: '#/components/schemas/FleetObservabilityMembershipSpec'
        configmanagement:
          $ref: '#/components/schemas/ConfigManagementMembershipSpec'
          description: Config Management-specific spec.
        mesh:
          $ref: '#/components/schemas/ServiceMeshMembershipSpec'
          description: Anthos Service Mesh-specific spec
        identityservice:
          description: Identity Service-specific spec.
          $ref: '#/components/schemas/IdentityServiceMembershipSpec'
        fleetInherited:
          description: True if value of `feature_spec` was inherited from a fleet-level default.
          type: boolean
    Membership:
      type: object
      description: Membership contains information about a member cluster.
      properties:
        endpoint:
          $ref: '#/components/schemas/MembershipEndpoint'
          description: Optional. Endpoint information to reach this member.
        deleteTime:
          type: string
          description: Output only. When the Membership was deleted.
          format: google-datetime
          readOnly: true
        updateTime:
          description: Output only. When the Membership was last updated.
          format: google-datetime
          readOnly: true
          type: string
        uniqueId:
          type: string
          description: Output only. Google-generated UUID for this resource. This is unique across all Membership resources. If a Membership resource is deleted and another resource with the same name is created, it gets a different unique_id.
          readOnly: true
        lastConnectionTime:
          type: string
          description: Output only. For clusters using Connect, the timestamp of the most recent connection established with Google Cloud. This time is updated every several minutes, not continuously. For clusters that do not use GKE Connect, or that have never connected successfully, this field will be unset.
          readOnly: true
          format: google-datetime
        state:
          description: Output only. State of the Membership resource.
          $ref: '#/components/schemas/MembershipState'
          readOnly: true
        authority:
          description: 'Optional. How to identify workloads from this Membership. See the documentation on Workload Identity for more details: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity'
          $ref: '#/components/schemas/Authority'
        name:
          type: string
          description: 'Output only. The full, unique name of this Membership resource in the format `projects/*/locations/*/memberships/{membership_id}`, set during creation. `membership_id` must be a valid RFC 1123 compliant DNS label: 1. At most 63 characters in length 2. It must consist of lower case alphanumeric characters or `-` 3. It must start and end with an alphanumeric character Which can be expressed as the regex: `[a-z0-9]([-a-z0-9]*[a-z0-9])?`, with a maximum length of 63 characters.'
          readOnly: true
        externalId:
          description: 'Optional. An externally-generated and managed ID for this Membership. This ID may be modified after creation, but this is not recommended. The ID must match the regex: `a-zA-Z0-9*` If this Membership represents a Kubernetes cluster, this value should be set to the UID of the `kube-system` namespace object.'
          type: string
        description:
          type: string
          readOnly: true
          description: 'Output only. Description of this membership, limited to 63 characters. Must match the regex: `a-zA-Z0-9*` This field is present for legacy purposes.'
        createTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. When the Membership was created.
        labels:
          additionalProperties:
            type: string
          description: Optional. GCP labels for this membership.
          type: object
      id: Membership
    ConfigManagementPolicyController:
      properties:
        templateLibraryInstalled:
          type: boolean
          description: Installs the default template library along with Policy Controller.
        enabled:
          type: boolean
          description: Enables the installation of Policy Controller. If false, the rest of PolicyController fields take no effect.
        exemptableNamespaces:
          type: array
          items:
            type: string
          description: The set of namespaces that are excluded from Policy Controller checks. Namespaces do not need to currently exist on the cluster.
        referentialRulesEnabled:
          description: Enables the ability to use Constraint Templates that reference to objects other than the object currently being evaluated.
          type: boolean
        logDeniesEnabled:
          type: boolean
          description: Logs all denies and dry run failures.
        mutationEnabled:
          type: boolean
          description: Enable or disable mutation in policy controller. If true, mutation CRDs, webhook and controller deployment will be deployed to the cluster.
        auditIntervalSeconds:
          type: string
          description: Sets the interval for Policy Controller Audit Scans (in seconds). When set to 0, this disables audit functionality altogether.
          format: int64
        monitoring:
          description: Monitoring specifies the configuration of monitoring.
          $ref: '#/components/schemas/ConfigManagementPolicyControllerMonitoring'
      type: object
      description: Configuration for Policy Controller
      id: ConfigManagementPolicyController
    ListMembershipsResponse:
      id: ListMembershipsResponse
      type: object
      description: Response message for the `GkeHub.ListMemberships` method.
      properties:
        nextPageToken:
          type: string
          description: A token to request the next page of resources from the `ListMemberships` method. The value of an empty string means that there are no more resources to return.
        resources:
          type: array
          description: The list of matching Memberships.
          items:
            $ref: '#/components/schemas/Membership'
        unreachable:
          description: List of locations that could not be reached while fetching this list.
          items:
            type: string
          type: array
    Feature:
      type: object
      properties:
        createTime:
          description: Output only. When the Feature resource was created.
          format: google-datetime
          type: string
          readOnly: true
        deleteTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. When the Feature resource was deleted.
        scopeStates:
          additionalProperties:
            $ref: '#/components/schemas/ScopeFeatureState'
          type: object
          readOnly: true
          description: 'Output only. Scope-specific Feature status. If this Feature does report any per-Scope status, this field may be unused. The keys indicate which Scope the state is for, in the form: `projects/{p}/locations/global/scopes/{s}` Where {p} is the project, {s} is a valid Scope in this project. {p} WILL match the Feature''s project.'
        scopeSpecs:
          additionalProperties:
            $ref: '#/components/schemas/ScopeFeatureSpec'
          description: 'Optional. Scope-specific configuration for this Feature. If this Feature does not support any per-Scope configuration, this field may be unused. The keys indicate which Scope the configuration is for, in the form: `projects/{p}/locations/global/scopes/{s}` Where {p} is the project, {s} is a valid Scope in this project. {p} WILL match the Feature''s project. {p} will always be returned as the project number, but the project ID is also accepted during input. If the same Scope is specified in the map twice (using the project ID form, and the project number form), exactly ONE of the entries will be saved, with no guarantees as to which. For this reason, it is recommended the same format be used for all entries when mutating a Feature.'
          type: object
        labels:
          additionalProperties:
            type: string
          type: object
          description: GCP labels for this Feature.
        state:
          $ref: '#/components/schemas/CommonFeatureState'
          readOnly: true
          description: Output only. The Hub-wide Feature state.
        name:
          readOnly: true
          type: string
          description: Output only. The full, unique name of this Feature resource in the format `projects/*/locations/*/features/*`.
        updateTime:
          format: google-datetime
          type: string
          description: Output only. When the Feature resource was last updated.
          readOnly: true
        membershipSpecs:
          description: 'Optional. Membership-specific configuration for this Feature. If this Feature does not support any per-Membership configuration, this field may be unused. The keys indicate which Membership the configuration is for, in the form: `projects/{p}/locations/{l}/memberships/{m}` Where {p} is the project, {l} is a valid location and {m} is a valid Membership in this project at that location. {p} WILL match the Feature''s project. {p} will always be returned as the project number, but the project ID is also accepted during input. If the same Membership is specified in the map twice (using the project ID form, and the project number form), exactly ONE of the entries will be saved, with no guarantees as to which. For this reason, it is recommended the same format be used for all entries when mutating a Feature.'
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MembershipFeatureSpec'
        membershipStates:
          readOnly: true
          additionalProperties:
            $ref: '#/components/schemas/MembershipFeatureState'
          description: 'Output only. Membership-specific Feature status. If this Feature does report any per-Membership status, this field may be unused. The keys indicate which Membership the state is for, in the form: `projects/{p}/locations/{l}/memberships/{m}` Where {p} is the project number, {l} is a valid location and {m} is a valid Membership in this project at that location. {p} MUST match the Feature''s project number.'
          type: object
        spec:
          $ref: '#/components/schemas/CommonFeatureSpec'
          description: Optional. Hub-wide Feature configuration. If this Feature does not support any Hub-wide configuration, this field may be unused.
        resourceState:
          readOnly: true
          description: Output only. State of the Feature resource itself.
          $ref: '#/components/schemas/FeatureResourceState'
      description: Feature represents the settings and status of any Hub Feature.
      id: Feature
    OnPremCluster:
      description: OnPremCluster contains information specific to GKE On-Prem clusters.
      id: OnPremCluster
      type: object
      properties:
        resourceLink:
          description: 'Immutable. Self-link of the GCP resource for the GKE On-Prem cluster. For example: //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/vmwareClusters/my-cluster //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/bareMetalClusters/my-cluster'
          type: string
        clusterType:
          type: string
          description: Immutable. The on prem cluster's type.
          enumDescriptions:
            - The ClusterType is not set.
            - The ClusterType is bootstrap cluster.
            - The ClusterType is baremetal hybrid cluster.
            - The ClusterType is baremetal standalone cluster.
            - The ClusterType is user cluster.
          enum:
            - CLUSTERTYPE_UNSPECIFIED
            - BOOTSTRAP
            - HYBRID
            - STANDALONE
            - USER
        clusterMissing:
          type: boolean
          description: Output only. If cluster_missing is set then it denotes that API(gkeonprem.googleapis.com) resource for this GKE On-Prem cluster no longer exists.
          readOnly: true
        adminCluster:
          description: Immutable. Whether the cluster is an admin cluster.
          type: boolean
    ResourceManifest:
      properties:
        manifest:
          description: YAML manifest of the resource.
          type: string
        clusterScoped:
          type: boolean
          description: Whether the resource provided in the manifest is `cluster_scoped`. If unset, the manifest is assumed to be namespace scoped. This field is used for REST mapping when applying the resource in a cluster.
      type: object
      id: ResourceManifest
      description: ResourceManifest represents a single Kubernetes resource to be applied to the cluster.
    TypeMeta:
      type: object
      properties:
        kind:
          type: string
          description: Kind of the resource (e.g. Deployment).
        apiVersion:
          description: APIVersion of the resource (e.g. v1).
          type: string
      id: TypeMeta
      description: TypeMeta is the type information needed for content unmarshalling of Kubernetes resources in the manifest.
    ServiceMeshDataPlaneManagement:
      description: Status of data plane management. Only reported per-member.
      type: object
      id: ServiceMeshDataPlaneManagement
      properties:
        state:
          enumDescriptions:
            - Unspecified
            - DISABLED means that the component is not enabled.
            - FAILED_PRECONDITION means that provisioning cannot proceed because of some characteristic of the member cluster.
            - PROVISIONING means that provisioning is in progress.
            - ACTIVE means that the component is ready for use.
            - STALLED means that provisioning could not be done.
            - NEEDS_ATTENTION means that the component is ready, but some user intervention is required. (For example that the user should migrate workloads to a new control plane revision.)
            - DEGRADED means that the component is ready, but operating in a degraded state.
          type: string
          enum:
            - LIFECYCLE_STATE_UNSPECIFIED
            - DISABLED
            - FAILED_PRECONDITION
            - PROVISIONING
            - ACTIVE
            - STALLED
            - NEEDS_ATTENTION
            - DEGRADED
          description: Lifecycle status of data plane management.
        details:
          type: array
          items:
            $ref: '#/components/schemas/ServiceMeshStatusDetails'
          description: Explanation of the status.
    Location:
      id: Location
      properties:
        name:
          type: string
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
        locationId:
          type: string
          description: 'The canonical id for this location. For example: `"us-east1"`.'
        labels:
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          type: object
          additionalProperties:
            type: string
        metadata:
          description: Service-specific metadata. For example the available capacity at the given location.
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
        displayName:
          type: string
          description: The friendly name for this location, typically a nearby city name. For example, "Tokyo".
      type: object
      description: A resource that represents Google Cloud Platform location.
    ConfigManagementErrorResource:
      id: ConfigManagementErrorResource
      type: object
      properties:
        resourceNamespace:
          description: Namespace of the resource that is causing an error
          type: string
        resourceGvk:
          $ref: '#/components/schemas/ConfigManagementGroupVersionKind'
          description: Group/version/kind of the resource that is causing an error
        sourcePath:
          description: Path in the git repo of the erroneous config
          type: string
        resourceName:
          description: Metadata name of the resource that is causing an error
          type: string
      description: Model for a config file in the git repo with an associated Sync error
    ConfigManagementInstallError:
      id: ConfigManagementInstallError
      properties:
        errorMessage:
          type: string
          description: A string representing the user facing error message
      description: Errors pertaining to the installation of ACM
      type: object
  parameters:
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    features:
      id: google.gkehub.features
      name: features
      title: Features
      methods:
        projects_locations_features_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1features~1{featuresId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_features_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1features~1{featuresId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_features_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1features~1{featuresId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_features_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1features/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_features_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1features/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: resources
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/features/methods/projects_locations_features_get'
          - $ref: '#/components/x-stackQL-resources/features/methods/projects_locations_features_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/features/methods/projects_locations_features_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/features/methods/projects_locations_features_delete'
    features_iam_policies:
      id: google.gkehub.features_iam_policies
      name: features_iam_policies
      title: Features_iam_policies
      methods:
        projects_locations_features_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1features~1{featuresId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_features_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1features~1{featuresId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_features_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1features~1{featuresId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/features_iam_policies/methods/projects_locations_features_getIamPolicy'
        insert: []
        update: []
        delete: []
    operations:
      id: google.gkehub.operations
      name: operations
      title: Operations
      methods:
        projects_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: operations
        projects_locations_operations_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_delete'
    memberships:
      id: google.gkehub.memberships
      name: memberships
      title: Memberships
      methods:
        projects_locations_memberships_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_generateConnectManifest:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}:generateConnectManifest/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/memberships/methods/projects_locations_memberships_get'
          - $ref: '#/components/x-stackQL-resources/memberships/methods/projects_locations_memberships_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/memberships/methods/projects_locations_memberships_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/memberships/methods/projects_locations_memberships_delete'
    memberships_iam_policies:
      id: google.gkehub.memberships_iam_policies
      name: memberships_iam_policies
      title: Memberships_iam_policies
      methods:
        projects_locations_memberships_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/memberships_iam_policies/methods/projects_locations_memberships_getIamPolicy'
        insert: []
        update: []
        delete: []
    locations:
      id: google.gkehub.locations
      name: locations
      title: Locations
      methods:
        projects_locations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: locations
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_list'
        insert: []
        update: []
        delete: []
    features_iam_bindings:
      id: google.gkehub.features_iam_bindings
      name: features_iam_bindings
      title: features_iam_bindings
      methods:
        projects_locations_features_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1features~1{featuresId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/features_iam_bindings/methods/projects_locations_features_getIamPolicy'
    features_iam_audit_configs:
      id: google.gkehub.features_iam_audit_configs
      name: features_iam_audit_configs
      title: features_iam_audit_configs
      methods:
        projects_locations_features_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1features~1{featuresId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: auditConfigs
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/features_iam_audit_configs/methods/projects_locations_features_getIamPolicy'
    memberships_iam_bindings:
      id: google.gkehub.memberships_iam_bindings
      name: memberships_iam_bindings
      title: memberships_iam_bindings
      methods:
        projects_locations_memberships_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/memberships_iam_bindings/methods/projects_locations_memberships_getIamPolicy'
    memberships_iam_audit_configs:
      id: google.gkehub.memberships_iam_audit_configs
      name: memberships_iam_audit_configs
      title: memberships_iam_audit_configs
      methods:
        projects_locations_memberships_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: auditConfigs
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/memberships_iam_audit_configs/methods/projects_locations_memberships_getIamPolicy'
paths:
  /v1/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
    delete:
      description: Removes a Feature.
      operationId: gkehub.projects.locations.features.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: features
      x-stackQL-verb: delete
    patch:
      description: Updates an existing Feature.
      operationId: gkehub.projects.locations.features.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feature'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: features
      x-stackQL-verb: exec
    get:
      description: Gets details of a single Feature.
      operationId: gkehub.projects.locations.features.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
      x-stackQL-resource: features
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: gkehub.projects.locations.features.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: features_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/features:
    parameters: *ref_1
    post:
      description: Adds a new Feature.
      operationId: gkehub.projects.locations.features.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feature'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: featureId
          schema:
            type: string
      x-stackQL-resource: features
      x-stackQL-verb: insert
    get:
      description: Lists Features in a given project and location.
      operationId: gkehub.projects.locations.features.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFeaturesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: features
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
      operationId: gkehub.projects.locations.features.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
      x-stackQL-resource: features_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: gkehub.projects.locations.features.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
      x-stackQL-resource: features_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.'
      operationId: gkehub.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    delete:
      description: Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
      operationId: gkehub.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: gkehub.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: gkehub.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/memberships:
    parameters: *ref_1
    post:
      description: Creates a new Membership. **This is currently only supported for GKE clusters on Google Cloud**. To register other clusters, follow the instructions at https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster.
      operationId: gkehub.projects.locations.memberships.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Membership'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: membershipId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-verb: insert
    get:
      description: Lists Memberships in a given project and location.
      operationId: gkehub.projects.locations.memberships.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMembershipsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
      operationId: gkehub.projects.locations.memberships.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
      x-stackQL-resource: memberships_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:generateConnectManifest:
    parameters: *ref_1
    get:
      description: Generates the manifest for deployment of the GKE connect agent. **This method is used internally by Google-provided libraries.** Most clients should not need to call this method directly.
      operationId: gkehub.projects.locations.memberships.generateConnectManifest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateConnectManifestResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: query
          name: registry
          schema:
            type: string
        - in: query
          name: proxy
          schema:
            type: string
        - in: query
          name: version
          schema:
            type: string
        - in: query
          name: namespace
          schema:
            type: string
        - in: query
          name: imagePullSecretContent
          schema:
            type: string
        - in: query
          name: isUpgrade
          schema:
            type: boolean
      x-stackQL-resource: memberships
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:
    parameters: *ref_1
    delete:
      description: Removes a Membership. **This is currently only supported for GKE clusters on Google Cloud**. To unregister other clusters, follow the instructions at https://cloud.google.com/anthos/multicluster-management/connect/unregistering-a-cluster.
      operationId: gkehub.projects.locations.memberships.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-verb: delete
    get:
      description: Gets the details of a Membership.
      operationId: gkehub.projects.locations.memberships.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Membership'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-verb: select
    patch:
      description: Updates an existing Membership.
      operationId: gkehub.projects.locations.memberships.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Membership'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: gkehub.projects.locations.memberships.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: memberships_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: gkehub.projects.locations.memberships.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
      x-stackQL-resource: memberships_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: gkehub.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations:
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: gkehub.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
