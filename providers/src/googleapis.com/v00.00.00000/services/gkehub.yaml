openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: GKE Hub API
  description: ''
  version: v1
  x-discovery-doc-revision: '20240519'
  x-generated-date: '2024-06-03'
externalDocs:
  url: >-
    https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster
servers:
  - url: https://gkehub.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    ListOperationsResponse:
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Operation:
      id: Operation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/GoogleRpcStatus'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    GoogleRpcStatus:
      id: GoogleRpcStatus
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    CancelOperationRequest:
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
      type: object
      properties: {}
    ListMembershipsResponse:
      id: ListMembershipsResponse
      description: Response message for the `GkeHub.ListMemberships` method.
      type: object
      properties:
        resources:
          description: The list of matching Memberships.
          type: array
          items:
            $ref: '#/components/schemas/Membership'
        nextPageToken:
          description: >-
            A token to request the next page of resources from the
            `ListMemberships` method. The value of an empty string means that
            there are no more resources to return.
          type: string
        unreachable:
          description: >-
            List of locations that could not be reached while fetching this
            list.
          type: array
          items:
            type: string
    Membership:
      id: Membership
      description: Membership contains information about a member cluster.
      type: object
      properties:
        endpoint:
          description: Optional. Endpoint information to reach this member.
          $ref: '#/components/schemas/MembershipEndpoint'
        name:
          description: >-
            Output only. The full, unique name of this Membership resource in
            the format `projects/*/locations/*/memberships/{membership_id}`, set
            during creation. `membership_id` must be a valid RFC 1123 compliant
            DNS label: 1. At most 63 characters in length 2. It must consist of
            lower case alphanumeric characters or `-` 3. It must start and end
            with an alphanumeric character Which can be expressed as the regex:
            `[a-z0-9]([-a-z0-9]*[a-z0-9])?`, with a maximum length of 63
            characters.
          readOnly: true
          type: string
        labels:
          description: Optional. Labels for this membership.
          type: object
          additionalProperties:
            type: string
        description:
          description: >-
            Output only. Description of this membership, limited to 63
            characters. Must match the regex: `a-zA-Z0-9*` This field is present
            for legacy purposes.
          readOnly: true
          type: string
        state:
          description: Output only. State of the Membership resource.
          readOnly: true
          $ref: '#/components/schemas/MembershipState'
        createTime:
          description: Output only. When the Membership was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. When the Membership was last updated.
          readOnly: true
          type: string
          format: google-datetime
        deleteTime:
          description: Output only. When the Membership was deleted.
          readOnly: true
          type: string
          format: google-datetime
        externalId:
          description: >-
            Optional. An externally-generated and managed ID for this
            Membership. This ID may be modified after creation, but this is not
            recommended. The ID must match the regex: `a-zA-Z0-9*` If this
            Membership represents a Kubernetes cluster, this value should be set
            to the UID of the `kube-system` namespace object.
          type: string
        lastConnectionTime:
          description: >-
            Output only. For clusters using Connect, the timestamp of the most
            recent connection established with Google Cloud. This time is
            updated every several minutes, not continuously. For clusters that
            do not use GKE Connect, or that have never connected successfully,
            this field will be unset.
          readOnly: true
          type: string
          format: google-datetime
        uniqueId:
          description: >-
            Output only. Google-generated UUID for this resource. This is unique
            across all Membership resources. If a Membership resource is deleted
            and another resource with the same name is created, it gets a
            different unique_id.
          readOnly: true
          type: string
        authority:
          description: >-
            Optional. How to identify workloads from this Membership. See the
            documentation on Workload Identity for more details:
            https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
          $ref: '#/components/schemas/Authority'
        monitoringConfig:
          description: Optional. The monitoring config information for this membership.
          $ref: '#/components/schemas/MonitoringConfig'
    MembershipEndpoint:
      id: MembershipEndpoint
      description: >-
        MembershipEndpoint contains information needed to contact a Kubernetes
        API, endpoint and any additional Kubernetes metadata.
      type: object
      properties:
        gkeCluster:
          description: Optional. Specific information for a GKE-on-GCP cluster.
          $ref: '#/components/schemas/GkeCluster'
        onPremCluster:
          description: >-
            Optional. Specific information for a GKE On-Prem cluster. An onprem
            user-cluster who has no resourceLink is not allowed to use this
            field, it should have a nil "type" instead.
          $ref: '#/components/schemas/OnPremCluster'
        multiCloudCluster:
          description: Optional. Specific information for a GKE Multi-Cloud cluster.
          $ref: '#/components/schemas/MultiCloudCluster'
        edgeCluster:
          description: Optional. Specific information for a Google Edge cluster.
          $ref: '#/components/schemas/EdgeCluster'
        applianceCluster:
          description: Optional. Specific information for a GDC Edge Appliance cluster.
          $ref: '#/components/schemas/ApplianceCluster'
        kubernetesMetadata:
          description: Output only. Useful Kubernetes-specific metadata.
          readOnly: true
          $ref: '#/components/schemas/KubernetesMetadata'
        kubernetesResource:
          description: >-
            Optional. The in-cluster Kubernetes Resources that should be applied
            for a correctly registered cluster, in the steady state. These
            resources: * Ensure that the cluster is exclusively registered to
            one and only one Hub Membership. * Propagate Workload Pool
            Information available in the Membership Authority field. * Ensure
            proper initial configuration of default Hub Features.
          $ref: '#/components/schemas/KubernetesResource'
        googleManaged:
          description: >-
            Output only. Whether the lifecycle of this membership is managed by
            a google cluster platform service.
          readOnly: true
          type: boolean
    GkeCluster:
      id: GkeCluster
      description: GkeCluster contains information specific to GKE clusters.
      type: object
      properties:
        resourceLink:
          description: >-
            Immutable. Self-link of the Google Cloud resource for the GKE
            cluster. For example:
            //container.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster
            Zonal clusters are also supported.
          type: string
        clusterMissing:
          description: >-
            Output only. If cluster_missing is set then it denotes that the GKE
            cluster no longer exists in the GKE Control Plane.
          readOnly: true
          type: boolean
    OnPremCluster:
      id: OnPremCluster
      description: OnPremCluster contains information specific to GKE On-Prem clusters.
      type: object
      properties:
        resourceLink:
          description: >-
            Immutable. Self-link of the Google Cloud resource for the GKE
            On-Prem cluster. For example:
            //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/vmwareClusters/my-cluster
            //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/bareMetalClusters/my-cluster
          type: string
        clusterMissing:
          description: >-
            Output only. If cluster_missing is set then it denotes that
            API(gkeonprem.googleapis.com) resource for this GKE On-Prem cluster
            no longer exists.
          readOnly: true
          type: boolean
        adminCluster:
          description: Immutable. Whether the cluster is an admin cluster.
          type: boolean
        clusterType:
          description: Immutable. The on prem cluster's type.
          type: string
          enumDescriptions:
            - The ClusterType is not set.
            - The ClusterType is bootstrap cluster.
            - The ClusterType is baremetal hybrid cluster.
            - The ClusterType is baremetal standalone cluster.
            - The ClusterType is user cluster.
          enum:
            - CLUSTERTYPE_UNSPECIFIED
            - BOOTSTRAP
            - HYBRID
            - STANDALONE
            - USER
    MultiCloudCluster:
      id: MultiCloudCluster
      description: >-
        MultiCloudCluster contains information specific to GKE Multi-Cloud
        clusters.
      type: object
      properties:
        resourceLink:
          description: >-
            Immutable. Self-link of the Google Cloud resource for the GKE
            Multi-Cloud cluster. For example:
            //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/awsClusters/my-cluster
            //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/azureClusters/my-cluster
            //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/attachedClusters/my-cluster
          type: string
        clusterMissing:
          description: >-
            Output only. If cluster_missing is set then it denotes that
            API(gkemulticloud.googleapis.com) resource for this GKE Multi-Cloud
            cluster no longer exists.
          readOnly: true
          type: boolean
    EdgeCluster:
      id: EdgeCluster
      description: EdgeCluster contains information specific to Google Edge Clusters.
      type: object
      properties:
        resourceLink:
          description: >-
            Immutable. Self-link of the Google Cloud resource for the Edge
            Cluster. For example:
            //edgecontainer.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster
          type: string
    ApplianceCluster:
      id: ApplianceCluster
      description: >-
        ApplianceCluster contains information specific to GDC Edge Appliance
        Clusters.
      type: object
      properties:
        resourceLink:
          description: >-
            Immutable. Self-link of the Google Cloud resource for the Appliance
            Cluster. For example:
            //transferappliance.googleapis.com/projects/my-project/locations/us-west1-a/appliances/my-appliance
          type: string
    KubernetesMetadata:
      id: KubernetesMetadata
      description: >-
        KubernetesMetadata provides informational metadata for Memberships
        representing Kubernetes clusters.
      type: object
      properties:
        kubernetesApiServerVersion:
          description: >-
            Output only. Kubernetes API server version string as reported by
            `/version`.
          readOnly: true
          type: string
        nodeProviderId:
          description: >-
            Output only. Node providerID as reported by the first node in the
            list of nodes on the Kubernetes endpoint. On Kubernetes platforms
            that support zero-node clusters (like GKE-on-GCP), the node_count
            will be zero and the node_provider_id will be empty.
          readOnly: true
          type: string
        nodeCount:
          description: Output only. Node count as reported by Kubernetes nodes resources.
          readOnly: true
          type: integer
          format: int32
        vcpuCount:
          description: Output only. vCPU count as reported by Kubernetes nodes resources.
          readOnly: true
          type: integer
          format: int32
        memoryMb:
          description: >-
            Output only. The total memory capacity as reported by the sum of all
            Kubernetes nodes resources, defined in MB.
          readOnly: true
          type: integer
          format: int32
        updateTime:
          description: >-
            Output only. The time at which these details were last updated. This
            update_time is different from the Membership-level update_time since
            EndpointDetails are updated internally for API consumers.
          readOnly: true
          type: string
          format: google-datetime
    KubernetesResource:
      id: KubernetesResource
      description: >-
        KubernetesResource contains the YAML manifests and configuration for
        Membership Kubernetes resources in the cluster. After CreateMembership
        or UpdateMembership, these resources should be re-applied in the
        cluster.
      type: object
      properties:
        membershipCrManifest:
          description: >-
            Input only. The YAML representation of the Membership CR. This field
            is ignored for GKE clusters where Hub can read the CR directly.
            Callers should provide the CR that is currently present in the
            cluster during CreateMembership or UpdateMembership, or leave this
            field empty if none exists. The CR manifest is used to validate the
            cluster has not been registered with another Membership.
          type: string
        membershipResources:
          description: >-
            Output only. Additional Kubernetes resources that need to be applied
            to the cluster after Membership creation, and after every update.
            This field is only populated in the Membership returned from a
            successful long-running operation from CreateMembership or
            UpdateMembership. It is not populated during normal GetMembership or
            ListMemberships requests. To get the resource manifest after the
            initial registration, the caller should make a UpdateMembership call
            with an empty field mask.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ResourceManifest'
        connectResources:
          description: >-
            Output only. The Kubernetes resources for installing the GKE Connect
            agent This field is only populated in the Membership returned from a
            successful long-running operation from CreateMembership or
            UpdateMembership. It is not populated during normal GetMembership or
            ListMemberships requests. To get the resource manifest after the
            initial registration, the caller should make a UpdateMembership call
            with an empty field mask.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ResourceManifest'
        resourceOptions:
          description: Optional. Options for Kubernetes resource generation.
          $ref: '#/components/schemas/ResourceOptions'
    ResourceManifest:
      id: ResourceManifest
      description: >-
        ResourceManifest represents a single Kubernetes resource to be applied
        to the cluster.
      type: object
      properties:
        manifest:
          description: YAML manifest of the resource.
          type: string
        clusterScoped:
          description: >-
            Whether the resource provided in the manifest is `cluster_scoped`.
            If unset, the manifest is assumed to be namespace scoped. This field
            is used for REST mapping when applying the resource in a cluster.
          type: boolean
    ResourceOptions:
      id: ResourceOptions
      description: ResourceOptions represent options for Kubernetes resource generation.
      type: object
      properties:
        connectVersion:
          description: >-
            Optional. The Connect agent version to use for connect_resources.
            Defaults to the latest GKE Connect version. The version must be a
            currently supported version, obsolete versions will be rejected.
          type: string
        v1beta1Crd:
          description: >-
            Optional. Use `apiextensions/v1beta1` instead of `apiextensions/v1`
            for CustomResourceDefinition resources. This option should be set
            for clusters with Kubernetes apiserver versions <1.16.
          type: boolean
        k8sVersion:
          description: >-
            Optional. Major version of the Kubernetes cluster. This is only used
            to determine which version to use for the CustomResourceDefinition
            resources, `apiextensions/v1beta1` or`apiextensions/v1`.
          type: string
    MembershipState:
      id: MembershipState
      description: MembershipState describes the state of a Membership resource.
      type: object
      properties:
        code:
          description: Output only. The current state of the Membership resource.
          readOnly: true
          type: string
          enumDescriptions:
            - The code is not set.
            - The cluster is being registered.
            - The cluster is registered.
            - The cluster is being unregistered.
            - The Membership is being updated.
            - The Membership is being updated by the Hub Service.
          enum:
            - CODE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - UPDATING
            - SERVICE_UPDATING
    Authority:
      id: Authority
      description: >-
        Authority encodes how Google will recognize identities from this
        Membership. See the workload identity documentation for more details:
        https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
      type: object
      properties:
        issuer:
          description: >-
            Optional. A JSON Web Token (JWT) issuer URI. `issuer` must start
            with `https://` and be a valid URL with length <2000 characters, it
            must use `location` rather than `zone` for GKE clusters. If set,
            then Google will allow valid OIDC tokens from this issuer to
            authenticate within the workload_identity_pool. OIDC discovery will
            be performed on this URI to validate tokens from the issuer.
            Clearing `issuer` disables Workload Identity. `issuer` cannot be
            directly modified; it must be cleared (and Workload Identity
            disabled) before using a new issuer (and re-enabling Workload
            Identity).
          type: string
        workloadIdentityPool:
          description: >-
            Output only. The name of the workload identity pool in which
            `issuer` will be recognized. There is a single Workload Identity
            Pool per Hub that is shared between all Memberships that belong to
            that Hub. For a Hub hosted in {PROJECT_ID}, the workload pool format
            is `{PROJECT_ID}.hub.id.goog`, although this is subject to change in
            newer versions of this API.
          readOnly: true
          type: string
        identityProvider:
          description: >-
            Output only. An identity provider that reflects the `issuer` in the
            workload identity pool.
          readOnly: true
          type: string
        oidcJwks:
          description: >-
            Optional. OIDC verification keys for this Membership in JWKS format
            (RFC 7517). When this field is set, OIDC discovery will NOT be
            performed on `issuer`, and instead OIDC tokens will be validated
            using this field.
          type: string
          format: byte
    MonitoringConfig:
      id: MonitoringConfig
      description: >-
        MonitoringConfig informs Fleet-based applications/services/UIs how the
        metrics for the underlying cluster is reported to cloud monitoring
        services. It can be set from empty to non-empty, but can't be mutated
        directly to prevent accidentally breaking the constinousty of metrics.
      type: object
      properties:
        projectId:
          description: Optional. Project used to report Metrics
          type: string
        location:
          description: Optional. Location used to report Metrics
          type: string
        cluster:
          description: >-
            Optional. Cluster name used to report metrics. For Anthos on
            VMWare/Baremetal/MultiCloud clusters, it would be in format
            {cluster_type}/{cluster_name}, e.g., "awsClusters/cluster_1".
          type: string
        kubernetesMetricsPrefix:
          description: >-
            Optional. Kubernetes system metrics, if available, are written to
            this prefix. This defaults to kubernetes.io for GKE, and
            kubernetes.io/anthos for Anthos eventually. Noted: Anthos MultiCloud
            will have kubernetes.io prefix today but will migration to be under
            kubernetes.io/anthos.
          type: string
        clusterHash:
          description: >-
            Optional. For GKE and Multicloud clusters, this is the UUID of the
            cluster resource. For VMWare and Baremetal clusters, this is the
            kube-system UID.
          type: string
    ListBoundMembershipsResponse:
      id: ListBoundMembershipsResponse
      description: List of Memberships bound to a Scope.
      type: object
      properties:
        memberships:
          description: The list of Memberships bound to the given Scope.
          type: array
          items:
            $ref: '#/components/schemas/Membership'
        unreachable:
          description: >-
            List of locations that could not be reached while fetching this
            list.
          type: array
          items:
            type: string
        nextPageToken:
          description: >-
            A token to request the next page of resources from the
            `ListBoundMemberships` method. The value of an empty string means
            that there are no more resources to return.
          type: string
    ListFeaturesResponse:
      id: ListFeaturesResponse
      description: Response message for the `GkeHub.ListFeatures` method.
      type: object
      properties:
        resources:
          description: The list of matching Features
          type: array
          items:
            $ref: '#/components/schemas/Feature'
        nextPageToken:
          description: >-
            A token to request the next page of resources from the
            `ListFeatures` method. The value of an empty string means that there
            are no more resources to return.
          type: string
    Feature:
      id: Feature
      description: Feature represents the settings and status of any Hub Feature.
      type: object
      properties:
        name:
          description: >-
            Output only. The full, unique name of this Feature resource in the
            format `projects/*/locations/*/features/*`.
          readOnly: true
          type: string
        labels:
          description: Labels for this Feature.
          type: object
          additionalProperties:
            type: string
        resourceState:
          description: Output only. State of the Feature resource itself.
          readOnly: true
          $ref: '#/components/schemas/FeatureResourceState'
        spec:
          description: >-
            Optional. Hub-wide Feature configuration. If this Feature does not
            support any Hub-wide configuration, this field may be unused.
          $ref: '#/components/schemas/CommonFeatureSpec'
        membershipSpecs:
          description: >-
            Optional. Membership-specific configuration for this Feature. If
            this Feature does not support any per-Membership configuration, this
            field may be unused. The keys indicate which Membership the
            configuration is for, in the form:
            `projects/{p}/locations/{l}/memberships/{m}` Where {p} is the
            project, {l} is a valid location and {m} is a valid Membership in
            this project at that location. {p} WILL match the Feature's project.
            {p} will always be returned as the project number, but the project
            ID is also accepted during input. If the same Membership is
            specified in the map twice (using the project ID form, and the
            project number form), exactly ONE of the entries will be saved, with
            no guarantees as to which. For this reason, it is recommended the
            same format be used for all entries when mutating a Feature.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MembershipFeatureSpec'
        state:
          description: Output only. The Hub-wide Feature state.
          readOnly: true
          $ref: '#/components/schemas/CommonFeatureState'
        membershipStates:
          description: >-
            Output only. Membership-specific Feature status. If this Feature
            does report any per-Membership status, this field may be unused. The
            keys indicate which Membership the state is for, in the form:
            `projects/{p}/locations/{l}/memberships/{m}` Where {p} is the
            project number, {l} is a valid location and {m} is a valid
            Membership in this project at that location. {p} MUST match the
            Feature's project number.
          readOnly: true
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MembershipFeatureState'
        createTime:
          description: Output only. When the Feature resource was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. When the Feature resource was last updated.
          readOnly: true
          type: string
          format: google-datetime
        deleteTime:
          description: Output only. When the Feature resource was deleted.
          readOnly: true
          type: string
          format: google-datetime
        fleetDefaultMemberConfig:
          description: >-
            Optional. Feature configuration applicable to all memberships of the
            fleet.
          $ref: '#/components/schemas/CommonFleetDefaultMemberConfigSpec'
        scopeSpecs:
          description: >-
            Optional. Scope-specific configuration for this Feature. If this
            Feature does not support any per-Scope configuration, this field may
            be unused. The keys indicate which Scope the configuration is for,
            in the form: `projects/{p}/locations/global/scopes/{s}` Where {p} is
            the project, {s} is a valid Scope in this project. {p} WILL match
            the Feature's project. {p} will always be returned as the project
            number, but the project ID is also accepted during input. If the
            same Scope is specified in the map twice (using the project ID form,
            and the project number form), exactly ONE of the entries will be
            saved, with no guarantees as to which. For this reason, it is
            recommended the same format be used for all entries when mutating a
            Feature.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ScopeFeatureSpec'
        scopeStates:
          description: >-
            Output only. Scope-specific Feature status. If this Feature does
            report any per-Scope status, this field may be unused. The keys
            indicate which Scope the state is for, in the form:
            `projects/{p}/locations/global/scopes/{s}` Where {p} is the project,
            {s} is a valid Scope in this project. {p} WILL match the Feature's
            project.
          readOnly: true
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ScopeFeatureState'
    FeatureResourceState:
      id: FeatureResourceState
      description: >-
        FeatureResourceState describes the state of a Feature *resource* in the
        GkeHub API. See `FeatureState` for the "running state" of the Feature in
        the Hub and across Memberships.
      type: object
      properties:
        state:
          description: The current state of the Feature resource in the Hub API.
          type: string
          enumDescriptions:
            - State is unknown or not set.
            - >-
              The Feature is being enabled, and the Feature resource is being
              created. Once complete, the corresponding Feature will be enabled
              in this Hub.
            - >-
              The Feature is enabled in this Hub, and the Feature resource is
              fully available.
            - >-
              The Feature is being disabled in this Hub, and the Feature
              resource is being deleted.
            - The Feature resource is being updated.
            - The Feature resource is being updated by the Hub Service.
          enum:
            - STATE_UNSPECIFIED
            - ENABLING
            - ACTIVE
            - DISABLING
            - UPDATING
            - SERVICE_UPDATING
    CommonFeatureSpec:
      id: CommonFeatureSpec
      description: CommonFeatureSpec contains Hub-wide configuration information
      type: object
      properties:
        multiclusteringress:
          description: Multicluster Ingress-specific spec.
          $ref: '#/components/schemas/MultiClusterIngressFeatureSpec'
        appdevexperience:
          description: Appdevexperience specific spec.
          $ref: '#/components/schemas/AppDevExperienceFeatureSpec'
        fleetobservability:
          description: FleetObservability feature spec.
          $ref: '#/components/schemas/FleetObservabilityFeatureSpec'
        clusterupgrade:
          description: ClusterUpgrade (fleet-based) feature spec.
          $ref: '#/components/schemas/ClusterUpgradeFleetSpec'
        dataplanev2:
          description: DataplaneV2 feature spec.
          $ref: '#/components/schemas/DataplaneV2FeatureSpec'
    MultiClusterIngressFeatureSpec:
      id: MultiClusterIngressFeatureSpec
      description: >-
        **Multi-cluster Ingress**: The configuration for the MultiClusterIngress
        feature.
      type: object
      properties:
        configMembership:
          description: >-
            Fully-qualified Membership name which hosts the MultiClusterIngress
            CRD. Example: `projects/foo-proj/locations/global/memberships/bar`
          type: string
    AppDevExperienceFeatureSpec:
      id: AppDevExperienceFeatureSpec
      description: Spec for App Dev Experience Feature.
      type: object
      properties: {}
    FleetObservabilityFeatureSpec:
      id: FleetObservabilityFeatureSpec
      description: >-
        **Fleet Observability**: The Hub-wide input for the FleetObservability
        feature.
      type: object
      properties:
        loggingConfig:
          description: >-
            Specified if fleet logging feature is enabled for the entire fleet.
            If UNSPECIFIED, fleet logging feature is disabled for the entire
            fleet.
          $ref: '#/components/schemas/FleetObservabilityLoggingConfig'
    FleetObservabilityLoggingConfig:
      id: FleetObservabilityLoggingConfig
      description: LoggingConfig defines the configuration for different types of logs.
      type: object
      properties:
        defaultConfig:
          description: >-
            Specified if applying the default routing config to logs not
            specified in other configs.
          $ref: '#/components/schemas/FleetObservabilityRoutingConfig'
        fleetScopeLogsConfig:
          description: >-
            Specified if applying the routing config to all logs for all fleet
            scopes.
          $ref: '#/components/schemas/FleetObservabilityRoutingConfig'
    FleetObservabilityRoutingConfig:
      id: FleetObservabilityRoutingConfig
      description: RoutingConfig configures the behaviour of fleet logging feature.
      type: object
      properties:
        mode:
          description: mode configures the logs routing mode.
          type: string
          enumDescriptions:
            - If UNSPECIFIED, fleet logging feature is disabled.
            - logs will be copied to the destination project.
            - logs will be moved to the destination project.
          enum:
            - MODE_UNSPECIFIED
            - COPY
            - MOVE
    ClusterUpgradeFleetSpec:
      id: ClusterUpgradeFleetSpec
      description: >-
        **ClusterUpgrade**: The configuration for the fleet-level ClusterUpgrade
        feature.
      type: object
      properties:
        upstreamFleets:
          description: >-
            This fleet consumes upgrades that have COMPLETE status code in the
            upstream fleets. See UpgradeStatus.Code for code definitions. The
            fleet name should be either fleet project number or id. This is
            defined as repeated for future proof reasons. Initial implementation
            will enforce at most one upstream fleet.
          type: array
          items:
            type: string
        postConditions:
          description: >-
            Required. Post conditions to evaluate to mark an upgrade COMPLETE.
            Required.
          $ref: '#/components/schemas/ClusterUpgradePostConditions'
        gkeUpgradeOverrides:
          description: Allow users to override some properties of each GKE upgrade.
          type: array
          items:
            $ref: '#/components/schemas/ClusterUpgradeGKEUpgradeOverride'
    ClusterUpgradePostConditions:
      id: ClusterUpgradePostConditions
      description: >-
        Post conditional checks after an upgrade has been applied on all
        eligible clusters.
      type: object
      properties:
        soaking:
          description: >-
            Required. Amount of time to "soak" after a rollout has been finished
            before marking it COMPLETE. Cannot exceed 30 days. Required.
          type: string
          format: google-duration
    ClusterUpgradeGKEUpgradeOverride:
      id: ClusterUpgradeGKEUpgradeOverride
      description: >-
        Properties of a GKE upgrade that can be overridden by the user. For
        example, a user can skip soaking by overriding the soaking to 0.
      type: object
      properties:
        upgrade:
          description: Required. Which upgrade to override. Required.
          $ref: '#/components/schemas/ClusterUpgradeGKEUpgrade'
        postConditions:
          description: >-
            Required. Post conditions to override for the specified upgrade
            (name + version). Required.
          $ref: '#/components/schemas/ClusterUpgradePostConditions'
    ClusterUpgradeGKEUpgrade:
      id: ClusterUpgradeGKEUpgrade
      description: >-
        GKEUpgrade represents a GKE provided upgrade, e.g., control plane
        upgrade.
      type: object
      properties:
        name:
          description: >-
            Name of the upgrade, e.g., "k8s_control_plane". It should be a valid
            upgrade name. It must not exceet 99 characters.
          type: string
        version:
          description: >-
            Version of the upgrade, e.g., "1.22.1-gke.100". It should be a valid
            version. It must not exceet 99 characters.
          type: string
    DataplaneV2FeatureSpec:
      id: DataplaneV2FeatureSpec
      description: '**Dataplane V2**: Spec'
      type: object
      properties:
        enableEncryption:
          description: Enable dataplane-v2 based encryption for multiple clusters.
          type: boolean
    MembershipFeatureSpec:
      id: MembershipFeatureSpec
      description: >-
        MembershipFeatureSpec contains configuration information for a single
        Membership. NOTE: Please use snake case in your feature name.
      type: object
      properties:
        configmanagement:
          description: Config Management-specific spec.
          $ref: '#/components/schemas/ConfigManagementMembershipSpec'
        identityservice:
          description: Identity Service-specific spec.
          $ref: '#/components/schemas/IdentityServiceMembershipSpec'
        mesh:
          description: Anthos Service Mesh-specific spec
          $ref: '#/components/schemas/ServiceMeshMembershipSpec'
        policycontroller:
          description: Policy Controller spec.
          $ref: '#/components/schemas/PolicyControllerMembershipSpec'
        fleetobservability:
          description: Fleet observability membership spec
          $ref: '#/components/schemas/FleetObservabilityMembershipSpec'
        origin:
          description: >-
            Whether this per-Membership spec was inherited from a fleet-level
            default. This field can be updated by users by either overriding a
            Membership config (updated to USER implicitly) or setting to FLEET
            explicitly.
          $ref: '#/components/schemas/Origin'
    ConfigManagementMembershipSpec:
      id: ConfigManagementMembershipSpec
      description: >-
        **Anthos Config Management**: Configuration for a single cluster.
        Intended to parallel the ConfigManagement CR.
      type: object
      properties:
        configSync:
          description: Config Sync configuration for the cluster.
          $ref: '#/components/schemas/ConfigManagementConfigSync'
        policyController:
          description: Policy Controller configuration for the cluster.
          $ref: '#/components/schemas/ConfigManagementPolicyController'
        hierarchyController:
          description: Hierarchy Controller configuration for the cluster.
          $ref: '#/components/schemas/ConfigManagementHierarchyControllerConfig'
        version:
          description: Version of ACM installed.
          type: string
        cluster:
          description: >-
            The user-specified cluster name used by Config Sync
            cluster-name-selector annotation or ClusterSelector, for applying
            configs to only a subset of clusters. Omit this field if the
            cluster's fleet membership name is used by Config Sync
            cluster-name-selector annotation or ClusterSelector. Set this field
            if a name different from the cluster's fleet membership name is used
            by Config Sync cluster-name-selector annotation or ClusterSelector.
          type: string
        management:
          description: Enables automatic Feature management.
          type: string
          enumDescriptions:
            - Unspecified
            - Google will manage the Feature for the cluster.
            - User will manually manage the Feature for the cluster.
          enum:
            - MANAGEMENT_UNSPECIFIED
            - MANAGEMENT_AUTOMATIC
            - MANAGEMENT_MANUAL
    ConfigManagementConfigSync:
      id: ConfigManagementConfigSync
      description: Configuration for Config Sync
      type: object
      properties:
        git:
          description: Git repo configuration for the cluster.
          $ref: '#/components/schemas/ConfigManagementGitConfig'
        sourceFormat:
          description: >-
            Specifies whether the Config Sync Repo is in "hierarchical" or
            "unstructured" mode.
          type: string
        enabled:
          description: >-
            Enables the installation of ConfigSync. If set to true, ConfigSync
            resources will be created and the other ConfigSync fields will be
            applied if exist. If set to false, all other ConfigSync fields will
            be ignored, ConfigSync resources will be deleted. If omitted,
            ConfigSync resources will be managed depends on the presence of the
            git or oci field.
          type: boolean
        preventDrift:
          description: >-
            Set to true to enable the Config Sync admission webhook to prevent
            drifts. If set to `false`, disables the Config Sync admission
            webhook and does not prevent drifts.
          type: boolean
        oci:
          description: OCI repo configuration for the cluster
          $ref: '#/components/schemas/ConfigManagementOciConfig'
        allowVerticalScale:
          description: >-
            Set to true to allow the vertical scaling. Defaults to false which
            disallows vertical scaling. This field is deprecated.
          deprecated: true
          type: boolean
        metricsGcpServiceAccountEmail:
          description: >-
            The Email of the Google Cloud Service Account (GSA) used for
            exporting Config Sync metrics to Cloud Monitoring and Cloud Monarch
            when Workload Identity is enabled. The GSA should have the
            Monitoring Metric Writer (roles/monitoring.metricWriter) IAM role.
            The Kubernetes ServiceAccount `default` in the namespace
            `config-management-monitoring` should be bound to the GSA.
          type: string
    ConfigManagementGitConfig:
      id: ConfigManagementGitConfig
      description: Git repo configuration for a single cluster.
      type: object
      properties:
        syncRepo:
          description: The URL of the Git repository to use as the source of truth.
          type: string
        syncBranch:
          description: 'The branch of the repository to sync from. Default: master.'
          type: string
        policyDir:
          description: >-
            The path within the Git repository that represents the top level of
            the repo to sync. Default: the root directory of the repository.
          type: string
        syncWaitSecs:
          description: 'Period in seconds between consecutive syncs. Default: 15.'
          type: string
          format: int64
        syncRev:
          description: Git revision (tag or hash) to check out. Default HEAD.
          type: string
        secretType:
          description: >-
            Type of secret configured for access to the Git repo. Must be one of
            ssh, cookiefile, gcenode, token, gcpserviceaccount or none. The
            validation of this is case-sensitive. Required.
          type: string
        httpsProxy:
          description: >-
            URL for the HTTPS proxy to be used when communicating with the Git
            repo.
          type: string
        gcpServiceAccountEmail:
          description: >-
            The Google Cloud Service Account Email used for auth when
            secret_type is gcpServiceAccount.
          type: string
    ConfigManagementOciConfig:
      id: ConfigManagementOciConfig
      description: OCI repo configuration for a single cluster
      type: object
      properties:
        syncRepo:
          description: >-
            The OCI image repository URL for the package to sync from. e.g.
            `LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY_NAME/PACKAGE_NAME`.
          type: string
        policyDir:
          description: >-
            The absolute path of the directory that contains the local
            resources. Default: the root directory of the image.
          type: string
        syncWaitSecs:
          description: 'Period in seconds between consecutive syncs. Default: 15.'
          type: string
          format: int64
        secretType:
          description: Type of secret configured for access to the Git repo.
          type: string
        gcpServiceAccountEmail:
          description: >-
            The Google Cloud Service Account Email used for auth when
            secret_type is gcpServiceAccount.
          type: string
    ConfigManagementPolicyController:
      id: ConfigManagementPolicyController
      description: Configuration for Policy Controller
      type: object
      properties:
        enabled:
          description: >-
            Enables the installation of Policy Controller. If false, the rest of
            PolicyController fields take no effect.
          type: boolean
        templateLibraryInstalled:
          description: Installs the default template library along with Policy Controller.
          type: boolean
        auditIntervalSeconds:
          description: >-
            Sets the interval for Policy Controller Audit Scans (in seconds).
            When set to 0, this disables audit functionality altogether.
          type: string
          format: int64
        exemptableNamespaces:
          description: >-
            The set of namespaces that are excluded from Policy Controller
            checks. Namespaces do not need to currently exist on the cluster.
          type: array
          items:
            type: string
        referentialRulesEnabled:
          description: >-
            Enables the ability to use Constraint Templates that reference to
            objects other than the object currently being evaluated.
          type: boolean
        logDeniesEnabled:
          description: Logs all denies and dry run failures.
          type: boolean
        mutationEnabled:
          description: >-
            Enable or disable mutation in policy controller. If true, mutation
            CRDs, webhook and controller deployment will be deployed to the
            cluster.
          type: boolean
        monitoring:
          description: Monitoring specifies the configuration of monitoring.
          $ref: '#/components/schemas/ConfigManagementPolicyControllerMonitoring'
        updateTime:
          description: Output only. Last time this membership spec was updated.
          readOnly: true
          type: string
          format: google-datetime
    ConfigManagementPolicyControllerMonitoring:
      id: ConfigManagementPolicyControllerMonitoring
      description: >-
        PolicyControllerMonitoring specifies the backends Policy Controller
        should export metrics to. For example, to specify metrics should be
        exported to Cloud Monitoring and Prometheus, specify backends:
        ["cloudmonitoring", "prometheus"]
      type: object
      properties:
        backends:
          description: >-
            Specifies the list of backends Policy Controller will export to. An
            empty list would effectively disable metrics export.
          type: array
          items:
            type: string
            enumDescriptions:
              - Backend cannot be determined
              - Prometheus backend for monitoring
              - Stackdriver/Cloud Monitoring backend for monitoring
            enum:
              - MONITORING_BACKEND_UNSPECIFIED
              - PROMETHEUS
              - CLOUD_MONITORING
    ConfigManagementHierarchyControllerConfig:
      id: ConfigManagementHierarchyControllerConfig
      description: Configuration for Hierarchy Controller
      type: object
      properties:
        enabled:
          description: Whether Hierarchy Controller is enabled in this cluster.
          type: boolean
        enablePodTreeLabels:
          description: Whether pod tree labels are enabled in this cluster.
          type: boolean
        enableHierarchicalResourceQuota:
          description: Whether hierarchical resource quota is enabled in this cluster.
          type: boolean
    IdentityServiceMembershipSpec:
      id: IdentityServiceMembershipSpec
      description: '**Anthos Identity Service**: Configuration for a single Membership.'
      type: object
      properties:
        authMethods:
          description: A member may support multiple auth methods.
          type: array
          items:
            $ref: '#/components/schemas/IdentityServiceAuthMethod'
        identityServiceOptions:
          description: Optional. non-protocol-related configuration options.
          $ref: '#/components/schemas/IdentityServiceIdentityServiceOptions'
    IdentityServiceAuthMethod:
      id: IdentityServiceAuthMethod
      description: >-
        Configuration of an auth method for a member/cluster. Only one
        authentication method (e.g., OIDC and LDAP) can be set per AuthMethod.
      type: object
      properties:
        oidcConfig:
          description: OIDC specific configuration.
          $ref: '#/components/schemas/IdentityServiceOidcConfig'
        azureadConfig:
          description: AzureAD specific Configuration.
          $ref: '#/components/schemas/IdentityServiceAzureADConfig'
        googleConfig:
          description: GoogleConfig specific configuration.
          $ref: '#/components/schemas/IdentityServiceGoogleConfig'
        samlConfig:
          description: SAML specific configuration.
          $ref: '#/components/schemas/IdentityServiceSamlConfig'
        ldapConfig:
          description: LDAP specific configuration.
          $ref: '#/components/schemas/IdentityServiceLdapConfig'
        name:
          description: Identifier for auth config.
          type: string
        proxy:
          description: Proxy server address to use for auth method.
          type: string
    IdentityServiceOidcConfig:
      id: IdentityServiceOidcConfig
      description: Configuration for OIDC Auth flow.
      type: object
      properties:
        clientId:
          description: ID for OIDC client application.
          type: string
        certificateAuthorityData:
          description: PEM-encoded CA for OIDC provider.
          type: string
        issuerUri:
          description: >-
            URI for the OIDC provider. This should point to the level below
            .well-known/openid-configuration.
          type: string
        kubectlRedirectUri:
          description: >-
            Registered redirect uri to redirect users going through OAuth flow
            using kubectl plugin.
          type: string
        scopes:
          description: Comma-separated list of identifiers.
          type: string
        extraParams:
          description: Comma-separated list of key-value pairs.
          type: string
        userClaim:
          description: Claim in OIDC ID token that holds username.
          type: string
        userPrefix:
          description: Prefix to prepend to user name.
          type: string
        groupsClaim:
          description: Claim in OIDC ID token that holds group information.
          type: string
        groupPrefix:
          description: Prefix to prepend to group name.
          type: string
        deployCloudConsoleProxy:
          description: >-
            Flag to denote if reverse proxy is used to connect to auth provider.
            This flag should be set to true when provider is not reachable by
            Google Cloud Console.
          type: boolean
        clientSecret:
          description: >-
            Input only. Unencrypted OIDC client secret will be passed to the GKE
            Hub CLH.
          type: string
        encryptedClientSecret:
          description: Output only. Encrypted OIDC Client secret
          readOnly: true
          type: string
          format: byte
        enableAccessToken:
          description: Enable access token.
          type: boolean
    IdentityServiceAzureADConfig:
      id: IdentityServiceAzureADConfig
      description: Configuration for the AzureAD Auth flow.
      type: object
      properties:
        clientId:
          description: >-
            ID for the registered client application that makes authentication
            requests to the Azure AD identity provider.
          type: string
        tenant:
          description: >-
            Kind of Azure AD account to be authenticated. Supported values are
            or for accounts belonging to a specific tenant.
          type: string
        kubectlRedirectUri:
          description: The redirect URL that kubectl uses for authorization.
          type: string
        clientSecret:
          description: >-
            Input only. Unencrypted AzureAD client secret will be passed to the
            GKE Hub CLH.
          type: string
        encryptedClientSecret:
          description: Output only. Encrypted AzureAD client secret.
          readOnly: true
          type: string
          format: byte
        userClaim:
          description: Optional. Claim in the AzureAD ID Token that holds the user details.
          type: string
        groupFormat:
          description: >-
            Optional. Format of the AzureAD groups that the client wants for
            auth.
          type: string
    IdentityServiceGoogleConfig:
      id: IdentityServiceGoogleConfig
      description: Configuration for the Google Plugin Auth flow.
      type: object
      properties:
        disable:
          description: >-
            Disable automatic configuration of Google Plugin on supported
            platforms.
          type: boolean
    IdentityServiceSamlConfig:
      id: IdentityServiceSamlConfig
      description: Configuration for the SAML Auth flow.
      type: object
      properties:
        identityProviderId:
          description: Required. The entity ID of the SAML IdP.
          type: string
        identityProviderSsoUri:
          description: Required. The URI where the SAML IdP exposes the SSO service.
          type: string
        identityProviderCertificates:
          description: >-
            Required. The list of IdP certificates to validate the SAML response
            against.
          type: array
          items:
            type: string
        userAttribute:
          description: >-
            Optional. The SAML attribute to read username from. If unspecified,
            the username will be read from the NameID element of the assertion
            in SAML response. This value is expected to be a string and will be
            passed along as-is (with the option of being prefixed by the
            `user_prefix`).
          type: string
        groupsAttribute:
          description: >-
            Optional. The SAML attribute to read groups from. This value is
            expected to be a string and will be passed along as-is (with the
            option of being prefixed by the `group_prefix`).
          type: string
        userPrefix:
          description: Optional. Prefix to prepend to user name.
          type: string
        groupPrefix:
          description: Optional. Prefix to prepend to group name.
          type: string
        attributeMapping:
          description: >-
            Optional. The mapping of additional user attributes like nickname,
            birthday and address etc.. `key` is the name of this additional
            attribute. `value` is a string presenting as CEL(common expression
            language, go/cel) used for getting the value from the resources.
            Take nickname as an example, in this case, `key` is
            "attribute.nickname" and `value` is "assertion.nickname".
          type: object
          additionalProperties:
            type: string
    IdentityServiceLdapConfig:
      id: IdentityServiceLdapConfig
      description: Configuration for the LDAP Auth flow.
      type: object
      properties:
        server:
          description: Required. Server settings for the external LDAP server.
          $ref: '#/components/schemas/IdentityServiceServerConfig'
        user:
          description: Required. Defines where users exist in the LDAP directory.
          $ref: '#/components/schemas/IdentityServiceUserConfig'
        group:
          description: >-
            Optional. Contains the properties for locating and authenticating
            groups in the directory.
          $ref: '#/components/schemas/IdentityServiceGroupConfig'
        serviceAccount:
          description: >-
            Required. Contains the credentials of the service account which is
            authorized to perform the LDAP search in the directory. The
            credentials can be supplied by the combination of the DN and
            password or the client certificate.
          $ref: '#/components/schemas/IdentityServiceServiceAccountConfig'
    IdentityServiceServerConfig:
      id: IdentityServiceServerConfig
      description: Server settings for the external LDAP server.
      type: object
      properties:
        host:
          description: >-
            Required. Defines the hostname or IP of the LDAP server. Port is
            optional and will default to 389, if unspecified. For example,
            "ldap.server.example" or "10.10.10.10:389".
          type: string
        connectionType:
          description: >-
            Optional. Defines the connection type to communicate with the LDAP
            server. If `starttls` or `ldaps` is specified, the
            certificate_authority_data should not be empty.
          type: string
        certificateAuthorityData:
          description: >-
            Optional. Contains a Base64 encoded, PEM formatted certificate
            authority certificate for the LDAP server. This must be provided for
            the "ldaps" and "startTLS" connections.
          type: string
          format: byte
    IdentityServiceUserConfig:
      id: IdentityServiceUserConfig
      description: Defines where users exist in the LDAP directory.
      type: object
      properties:
        baseDn:
          description: >-
            Required. The location of the subtree in the LDAP directory to
            search for user entries.
          type: string
        loginAttribute:
          description: >-
            Optional. The name of the attribute which matches against the input
            username. This is used to find the user in the LDAP database e.g.
            "(=)" and is combined with the optional filter field. This defaults
            to "userPrincipalName".
          type: string
        idAttribute:
          description: >-
            Optional. Determines which attribute to use as the user's identity
            after they are authenticated. This is distinct from the
            loginAttribute field to allow users to login with a username, but
            then have their actual identifier be an email address or full
            Distinguished Name (DN). For example, setting loginAttribute to
            "sAMAccountName" and identifierAttribute to "userPrincipalName"
            would allow a user to login as "bsmith", but actual RBAC policies
            for the user would be written as "bsmith@example.com". Using
            "userPrincipalName" is recommended since this will be unique for
            each user. This defaults to "userPrincipalName".
          type: string
        filter:
          description: >-
            Optional. Filter to apply when searching for the user. This can be
            used to further restrict the user accounts which are allowed to
            login. This defaults to "(objectClass=User)".
          type: string
    IdentityServiceGroupConfig:
      id: IdentityServiceGroupConfig
      description: >-
        Contains the properties for locating and authenticating groups in the
        directory.
      type: object
      properties:
        baseDn:
          description: >-
            Required. The location of the subtree in the LDAP directory to
            search for group entries.
          type: string
        idAttribute:
          description: >-
            Optional. The identifying name of each group a user belongs to. For
            example, if this is set to "distinguishedName" then RBACs and other
            group expectations should be written as full DNs. This defaults to
            "distinguishedName".
          type: string
        filter:
          description: >-
            Optional. Optional filter to be used when searching for groups a
            user belongs to. This can be used to explicitly match only certain
            groups in order to reduce the amount of groups returned for each
            user. This defaults to "(objectClass=Group)".
          type: string
    IdentityServiceServiceAccountConfig:
      id: IdentityServiceServiceAccountConfig
      description: >-
        Contains the credentials of the service account which is authorized to
        perform the LDAP search in the directory. The credentials can be
        supplied by the combination of the DN and password or the client
        certificate.
      type: object
      properties:
        simpleBindCredentials:
          description: Credentials for basic auth.
          $ref: '#/components/schemas/IdentityServiceSimpleBindCredentials'
    IdentityServiceSimpleBindCredentials:
      id: IdentityServiceSimpleBindCredentials
      description: The structure holds the LDAP simple binding credential.
      type: object
      properties:
        dn:
          description: >-
            Required. The distinguished name(DN) of the service account
            object/user.
          type: string
        password:
          description: >-
            Required. Input only. The password of the service account
            object/user.
          type: string
        encryptedPassword:
          description: >-
            Output only. The encrypted password of the service account
            object/user.
          readOnly: true
          type: string
          format: byte
    IdentityServiceIdentityServiceOptions:
      id: IdentityServiceIdentityServiceOptions
      description: Holds non-protocol-related configuration options.
      type: object
      properties:
        sessionDuration:
          description: >-
            Optional. Determines the lifespan of STS tokens issued by Anthos
            Identity Service.
          type: string
          format: google-duration
    ServiceMeshMembershipSpec:
      id: ServiceMeshMembershipSpec
      description: >-
        **Service Mesh**: Spec for a single Membership for the servicemesh
        feature
      type: object
      properties:
        controlPlane:
          description: >-
            Deprecated: use `management` instead Enables automatic control plane
            management.
          deprecated: true
          type: string
          enumDescriptions:
            - Unspecified
            - >-
              Google should provision a control plane revision and make it
              available in the cluster. Google will enroll this revision in a
              release channel and keep it up to date. The control plane revision
              may be a managed service, or a managed install.
            - >-
              User will manually configure the control plane (e.g. via CLI, or
              via the ControlPlaneRevision KRM API)
          enum:
            - CONTROL_PLANE_MANAGEMENT_UNSPECIFIED
            - AUTOMATIC
            - MANUAL
        management:
          description: Enables automatic Service Mesh management.
          type: string
          enumDescriptions:
            - Unspecified
            - Google should manage my Service Mesh for the cluster.
            - User will manually configure their service mesh components.
          enum:
            - MANAGEMENT_UNSPECIFIED
            - MANAGEMENT_AUTOMATIC
            - MANAGEMENT_MANUAL
    PolicyControllerMembershipSpec:
      id: PolicyControllerMembershipSpec
      description: >-
        **Policy Controller**: Configuration for a single cluster. Intended to
        parallel the PolicyController CR.
      type: object
      properties:
        policyControllerHubConfig:
          description: Policy Controller configuration for the cluster.
          $ref: '#/components/schemas/PolicyControllerHubConfig'
        version:
          description: Version of Policy Controller installed.
          type: string
    PolicyControllerHubConfig:
      id: PolicyControllerHubConfig
      description: Configuration for Policy Controller
      type: object
      properties:
        installSpec:
          description: >-
            The install_spec represents the intended state specified by the
            latest request that mutated install_spec in the feature spec, not
            the lifecycle state of the feature observed by the Hub feature
            controller that is reported in the feature state.
          type: string
          enumDescriptions:
            - Spec is unknown.
            - Request to uninstall Policy Controller.
            - Request to install and enable Policy Controller.
            - >-
              Request to suspend Policy Controller i.e. its webhooks. If Policy
              Controller is not installed, it will be installed but suspended.
            - >-
              Request to stop all reconciliation actions by PoCo Hub controller.
              This is a breakglass mechanism to stop PoCo Hub from affecting
              cluster resources.
          enum:
            - INSTALL_SPEC_UNSPECIFIED
            - INSTALL_SPEC_NOT_INSTALLED
            - INSTALL_SPEC_ENABLED
            - INSTALL_SPEC_SUSPENDED
            - INSTALL_SPEC_DETACHED
        auditIntervalSeconds:
          description: >-
            Sets the interval for Policy Controller Audit Scans (in seconds).
            When set to 0, this disables audit functionality altogether.
          type: string
          format: int64
        exemptableNamespaces:
          description: >-
            The set of namespaces that are excluded from Policy Controller
            checks. Namespaces do not need to currently exist on the cluster.
          type: array
          items:
            type: string
        referentialRulesEnabled:
          description: >-
            Enables the ability to use Constraint Templates that reference to
            objects other than the object currently being evaluated.
          type: boolean
        logDeniesEnabled:
          description: Logs all denies and dry run failures.
          type: boolean
        mutationEnabled:
          description: Enables the ability to mutate resources using Policy Controller.
          type: boolean
        monitoring:
          description: Monitoring specifies the configuration of monitoring.
          $ref: '#/components/schemas/PolicyControllerMonitoringConfig'
        policyContent:
          description: Specifies the desired policy content on the cluster
          $ref: '#/components/schemas/PolicyControllerPolicyContentSpec'
        constraintViolationLimit:
          description: >-
            The maximum number of audit violations to be stored in a constraint.
            If not set, the internal default (currently 20) will be used.
          type: string
          format: int64
        deploymentConfigs:
          description: >-
            Map of deployment configs to deployments ("admission", "audit",
            "mutation').
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/PolicyControllerPolicyControllerDeploymentConfig
    PolicyControllerMonitoringConfig:
      id: PolicyControllerMonitoringConfig
      description: >-
        MonitoringConfig specifies the backends Policy Controller should export
        metrics to. For example, to specify metrics should be exported to Cloud
        Monitoring and Prometheus, specify backends: ["cloudmonitoring",
        "prometheus"]
      type: object
      properties:
        backends:
          description: >-
            Specifies the list of backends Policy Controller will export to. An
            empty list would effectively disable metrics export.
          type: array
          items:
            type: string
            enumDescriptions:
              - Backend cannot be determined
              - Prometheus backend for monitoring
              - Stackdriver/Cloud Monitoring backend for monitoring
            enum:
              - MONITORING_BACKEND_UNSPECIFIED
              - PROMETHEUS
              - CLOUD_MONITORING
    PolicyControllerPolicyContentSpec:
      id: PolicyControllerPolicyContentSpec
      description: >-
        PolicyContentSpec defines the user's desired content configuration on
        the cluster.
      type: object
      properties:
        bundles:
          description: >-
            map of bundle name to BundleInstallSpec. The bundle name maps to the
            `bundleName` key in the `policycontroller.gke.io/constraintData`
            annotation on a constraint.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PolicyControllerBundleInstallSpec'
        templateLibrary:
          description: Configures the installation of the Template Library.
          $ref: '#/components/schemas/PolicyControllerTemplateLibraryConfig'
    PolicyControllerBundleInstallSpec:
      id: PolicyControllerBundleInstallSpec
      description: >-
        BundleInstallSpec is the specification configuration for a single
        managed bundle.
      type: object
      properties:
        exemptedNamespaces:
          description: The set of namespaces to be exempted from the bundle.
          type: array
          items:
            type: string
    PolicyControllerTemplateLibraryConfig:
      id: PolicyControllerTemplateLibraryConfig
      description: The config specifying which default library templates to install.
      type: object
      properties:
        installation:
          description: >-
            Configures the manner in which the template library is installed on
            the cluster.
          type: string
          enumDescriptions:
            - No installation strategy has been specified.
            - Do not install the template library.
            - Install the entire template library.
          enum:
            - INSTALLATION_UNSPECIFIED
            - NOT_INSTALLED
            - ALL
    PolicyControllerPolicyControllerDeploymentConfig:
      id: PolicyControllerPolicyControllerDeploymentConfig
      description: Deployment-specific configuration.
      type: object
      properties:
        replicaCount:
          description: Pod replica count.
          type: string
          format: int64
        containerResources:
          description: Container resource requirements.
          $ref: '#/components/schemas/PolicyControllerResourceRequirements'
        podAntiAffinity:
          description: >-
            Pod anti-affinity enablement. Deprecated: use `pod_affinity`
            instead.
          deprecated: true
          type: boolean
        podTolerations:
          description: Pod tolerations of node taints.
          type: array
          items:
            $ref: '#/components/schemas/PolicyControllerToleration'
        podAffinity:
          description: Pod affinity configuration.
          type: string
          enumDescriptions:
            - No affinity configuration has been specified.
            - Affinity configurations will be removed from the deployment.
            - >-
              Anti-affinity configuration will be applied to this deployment.
              Default for admissions deployment.
          enum:
            - AFFINITY_UNSPECIFIED
            - NO_AFFINITY
            - ANTI_AFFINITY
    PolicyControllerResourceRequirements:
      id: PolicyControllerResourceRequirements
      description: ResourceRequirements describes the compute resource requirements.
      type: object
      properties:
        limits:
          description: >-
            Limits describes the maximum amount of compute resources allowed for
            use by the running container.
          $ref: '#/components/schemas/PolicyControllerResourceList'
        requests:
          description: >-
            Requests describes the amount of compute resources reserved for the
            container by the kube-scheduler.
          $ref: '#/components/schemas/PolicyControllerResourceList'
    PolicyControllerResourceList:
      id: PolicyControllerResourceList
      description: ResourceList contains container resource requirements.
      type: object
      properties:
        memory:
          description: Memory requirement expressed in Kubernetes resource units.
          type: string
        cpu:
          description: CPU requirement expressed in Kubernetes resource units.
          type: string
    PolicyControllerToleration:
      id: PolicyControllerToleration
      description: Toleration of a node taint.
      type: object
      properties:
        key:
          description: Matches a taint key (not necessarily unique).
          type: string
        operator:
          description: Matches a taint operator.
          type: string
        value:
          description: Matches a taint value.
          type: string
        effect:
          description: Matches a taint effect.
          type: string
    FleetObservabilityMembershipSpec:
      id: FleetObservabilityMembershipSpec
      description: >-
        **FleetObservability**: The membership-specific input for
        FleetObservability feature.
      type: object
      properties: {}
    Origin:
      id: Origin
      description: Origin defines where this MembershipFeatureSpec originated from.
      type: object
      properties:
        type:
          description: Type specifies which type of origin is set.
          type: string
          enumDescriptions:
            - Type is unknown or not set.
            - Per-Membership spec was inherited from the fleet-level default.
            - >-
              Per-Membership spec was inherited from the fleet-level default but
              is now out of sync with the current default.
            - Per-Membership spec was inherited from a user specification.
          enum:
            - TYPE_UNSPECIFIED
            - FLEET
            - FLEET_OUT_OF_SYNC
            - USER
    CommonFeatureState:
      id: CommonFeatureState
      description: CommonFeatureState contains Hub-wide Feature status information.
      type: object
      properties:
        appdevexperience:
          description: Appdevexperience specific state.
          $ref: '#/components/schemas/AppDevExperienceFeatureState'
        fleetobservability:
          description: FleetObservability feature state.
          $ref: '#/components/schemas/FleetObservabilityFeatureState'
        clusterupgrade:
          description: ClusterUpgrade fleet-level state.
          $ref: '#/components/schemas/ClusterUpgradeFleetState'
        state:
          description: Output only. The "running state" of the Feature in this Hub.
          readOnly: true
          $ref: '#/components/schemas/FeatureState'
    AppDevExperienceFeatureState:
      id: AppDevExperienceFeatureState
      description: State for App Dev Exp Feature.
      type: object
      properties:
        networkingInstallSucceeded:
          description: >-
            Status of subcomponent that detects configured Service Mesh
            resources.
          $ref: '#/components/schemas/Status'
    Status:
      id: Status
      description: Status specifies state for the subcomponent.
      type: object
      properties:
        code:
          description: Code specifies AppDevExperienceFeature's subcomponent ready state.
          type: string
          enumDescriptions:
            - Not set.
            - AppDevExperienceFeature's specified subcomponent is ready.
            - >-
              AppDevExperienceFeature's specified subcomponent ready state is
              false. This means AppDevExperienceFeature has encountered an issue
              that blocks all, or a portion, of its normal operation. See the
              `description` for more details.
            - >-
              AppDevExperienceFeature's specified subcomponent has a pending or
              unknown state.
          enum:
            - CODE_UNSPECIFIED
            - OK
            - FAILED
            - UNKNOWN
        description:
          description: >-
            Description is populated if Code is Failed, explaining why it has
            failed.
          type: string
    FleetObservabilityFeatureState:
      id: FleetObservabilityFeatureState
      description: >-
        **FleetObservability**: Hub-wide Feature for FleetObservability feature.
        state.
      type: object
      properties:
        logging:
          description: The feature state of default logging.
          $ref: >-
            #/components/schemas/FleetObservabilityFleetObservabilityLoggingState
        monitoring:
          description: The feature state of fleet monitoring.
          $ref: >-
            #/components/schemas/FleetObservabilityFleetObservabilityMonitoringState
    FleetObservabilityFleetObservabilityLoggingState:
      id: FleetObservabilityFleetObservabilityLoggingState
      description: Feature state for logging feature.
      type: object
      properties:
        defaultLog:
          description: The base feature state of fleet default log.
          $ref: >-
            #/components/schemas/FleetObservabilityFleetObservabilityBaseFeatureState
        scopeLog:
          description: The base feature state of fleet scope log.
          $ref: >-
            #/components/schemas/FleetObservabilityFleetObservabilityBaseFeatureState
    FleetObservabilityFleetObservabilityBaseFeatureState:
      id: FleetObservabilityFleetObservabilityBaseFeatureState
      description: Base state for fleet observability feature.
      type: object
      properties:
        code:
          description: The high-level, machine-readable status of this Feature.
          type: string
          enumDescriptions:
            - Unknown or not set.
            - The Feature is operating normally.
            - >-
              The Feature is encountering errors in the reconciliation. The
              Feature may need intervention to return to normal operation. See
              the description and any associated Feature-specific details for
              more information.
          enum:
            - CODE_UNSPECIFIED
            - OK
            - ERROR
        errors:
          description: >-
            Errors after reconciling the monitoring and logging feature if the
            code is not OK.
          type: array
          items:
            $ref: '#/components/schemas/FleetObservabilityFeatureError'
    FleetObservabilityFeatureError:
      id: FleetObservabilityFeatureError
      description: All error details of the fleet observability feature.
      type: object
      properties:
        code:
          description: The code of the error.
          type: string
        description:
          description: A human-readable description of the current status.
          type: string
    FleetObservabilityFleetObservabilityMonitoringState:
      id: FleetObservabilityFleetObservabilityMonitoringState
      description: Feature state for monitoring feature.
      type: object
      properties:
        state:
          description: The base feature state of fleet monitoring feature.
          $ref: >-
            #/components/schemas/FleetObservabilityFleetObservabilityBaseFeatureState
    ClusterUpgradeFleetState:
      id: ClusterUpgradeFleetState
      description: >-
        **ClusterUpgrade**: The state for the fleet-level ClusterUpgrade
        feature.
      type: object
      properties:
        downstreamFleets:
          description: >-
            This fleets whose upstream_fleets contain the current fleet. The
            fleet name should be either fleet project number or id.
          type: array
          items:
            type: string
        ignored:
          description: >-
            A list of memberships ignored by the feature. For example, manually
            upgraded clusters can be ignored if they are newer than the default
            versions of its release channel. The membership resource is in the
            format: `projects/{p}/locations/{l}/membership/{m}`.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ClusterUpgradeIgnoredMembership'
        gkeState:
          description: Feature state for GKE clusters.
          $ref: '#/components/schemas/ClusterUpgradeGKEUpgradeFeatureState'
    ClusterUpgradeIgnoredMembership:
      id: ClusterUpgradeIgnoredMembership
      description: >-
        IgnoredMembership represents a membership ignored by the feature. A
        membership can be ignored because it was manually upgraded to a newer
        version than RC default.
      type: object
      properties:
        reason:
          description: Reason why the membership is ignored.
          type: string
        ignoredTime:
          description: Time when the membership was first set to ignored.
          type: string
          format: google-datetime
    ClusterUpgradeGKEUpgradeFeatureState:
      id: ClusterUpgradeGKEUpgradeFeatureState
      description: >-
        GKEUpgradeFeatureState contains feature states for GKE clusters in the
        scope.
      type: object
      properties:
        upgradeState:
          description: Upgrade state. It will eventually replace `state`.
          type: array
          items:
            $ref: '#/components/schemas/ClusterUpgradeGKEUpgradeState'
        conditions:
          description: Current conditions of the feature.
          type: array
          items:
            $ref: '#/components/schemas/ClusterUpgradeGKEUpgradeFeatureCondition'
    ClusterUpgradeGKEUpgradeState:
      id: ClusterUpgradeGKEUpgradeState
      description: >-
        GKEUpgradeState is a GKEUpgrade and its state at the scope and fleet
        level.
      type: object
      properties:
        upgrade:
          description: Which upgrade to track the state.
          $ref: '#/components/schemas/ClusterUpgradeGKEUpgrade'
        status:
          description: Status of the upgrade.
          $ref: '#/components/schemas/ClusterUpgradeUpgradeStatus'
        stats:
          description: Number of GKE clusters in each status code.
          type: object
          additionalProperties:
            type: string
            format: int64
    ClusterUpgradeUpgradeStatus:
      id: ClusterUpgradeUpgradeStatus
      description: UpgradeStatus provides status information for each upgrade.
      type: object
      properties:
        code:
          description: Status code of the upgrade.
          type: string
          enumDescriptions:
            - Required by https://linter.aip.dev/126/unspecified.
            - >-
              The upgrade is ineligible. At the scope level, this means the
              upgrade is ineligible for all the clusters in the scope.
            - >-
              The upgrade is pending. At the scope level, this means the upgrade
              is pending for all the clusters in the scope.
            - >-
              The upgrade is in progress. At the scope level, this means the
              upgrade is in progress for at least one cluster in the scope.
            - >-
              The upgrade has finished and is soaking until the soaking time is
              up. At the scope level, this means at least one cluster is in
              soaking while the rest are either soaking or complete.
            - >-
              A cluster will be forced to enter soaking if an upgrade doesn't
              finish within a certain limit, despite it's actual status.
            - >-
              The upgrade has passed all post conditions (soaking). At the scope
              level, this means all eligible clusters are in COMPLETE status.
          enum:
            - CODE_UNSPECIFIED
            - INELIGIBLE
            - PENDING
            - IN_PROGRESS
            - SOAKING
            - FORCED_SOAKING
            - COMPLETE
        reason:
          description: Reason for this status.
          type: string
        updateTime:
          description: Last timestamp the status was updated.
          type: string
          format: google-datetime
    ClusterUpgradeGKEUpgradeFeatureCondition:
      id: ClusterUpgradeGKEUpgradeFeatureCondition
      description: >-
        GKEUpgradeFeatureCondition describes the condition of the feature for
        GKE clusters at a certain point of time.
      type: object
      properties:
        type:
          description: Type of the condition, for example, "ready".
          type: string
        status:
          description: Status of the condition, one of True, False, Unknown.
          type: string
        reason:
          description: Reason why the feature is in this status.
          type: string
        updateTime:
          description: Last timestamp the condition was updated.
          type: string
          format: google-datetime
    FeatureState:
      id: FeatureState
      description: >-
        FeatureState describes the high-level state of a Feature. It may be used
        to describe a Feature's state at the environ-level, or per-membershop,
        depending on the context.
      type: object
      properties:
        code:
          description: The high-level, machine-readable status of this Feature.
          type: string
          enumDescriptions:
            - Unknown or not set.
            - The Feature is operating normally.
            - >-
              The Feature has encountered an issue, and is operating in a
              degraded state. The Feature may need intervention to return to
              normal operation. See the description and any associated
              Feature-specific details for more information.
            - >-
              The Feature is not operating or is in a severely degraded state.
              The Feature may need intervention to return to normal operation.
              See the description and any associated Feature-specific details
              for more information.
          enum:
            - CODE_UNSPECIFIED
            - OK
            - WARNING
            - ERROR
        description:
          description: A human-readable description of the current status.
          type: string
        updateTime:
          description: >-
            The time this status and any related Feature-specific details were
            updated.
          type: string
          format: google-datetime
    MembershipFeatureState:
      id: MembershipFeatureState
      description: >-
        MembershipFeatureState contains Feature status information for a single
        Membership.
      type: object
      properties:
        servicemesh:
          description: Service Mesh-specific state.
          $ref: '#/components/schemas/ServiceMeshMembershipState'
        configmanagement:
          description: Config Management-specific state.
          $ref: '#/components/schemas/ConfigManagementMembershipState'
        identityservice:
          description: Identity Service-specific state.
          $ref: '#/components/schemas/IdentityServiceMembershipState'
        appdevexperience:
          description: Appdevexperience specific state.
          $ref: '#/components/schemas/AppDevExperienceFeatureState'
        policycontroller:
          description: Policycontroller-specific state.
          $ref: '#/components/schemas/PolicyControllerMembershipState'
        clusterupgrade:
          description: ClusterUpgrade state.
          $ref: '#/components/schemas/ClusterUpgradeMembershipState'
        fleetobservability:
          description: Fleet observability membership state.
          $ref: '#/components/schemas/FleetObservabilityMembershipState'
        state:
          description: The high-level state of this Feature for a single membership.
          $ref: '#/components/schemas/FeatureState'
    ServiceMeshMembershipState:
      id: ServiceMeshMembershipState
      description: >-
        **Service Mesh**: State for a single Membership, as analyzed by the
        Service Mesh Hub Controller.
      type: object
      properties:
        controlPlaneManagement:
          description: Output only. Status of control plane management
          readOnly: true
          $ref: '#/components/schemas/ServiceMeshControlPlaneManagement'
        dataPlaneManagement:
          description: Output only. Status of data plane management.
          readOnly: true
          $ref: '#/components/schemas/ServiceMeshDataPlaneManagement'
        conditions:
          description: Output only. List of conditions reported for this membership.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ServiceMeshCondition'
    ServiceMeshControlPlaneManagement:
      id: ServiceMeshControlPlaneManagement
      description: Status of control plane management.
      type: object
      properties:
        details:
          description: Explanation of state.
          type: array
          items:
            $ref: '#/components/schemas/ServiceMeshStatusDetails'
        state:
          description: LifecycleState of control plane management.
          type: string
          enumDescriptions:
            - Unspecified
            - DISABLED means that the component is not enabled.
            - >-
              FAILED_PRECONDITION means that provisioning cannot proceed because
              of some characteristic of the member cluster.
            - PROVISIONING means that provisioning is in progress.
            - ACTIVE means that the component is ready for use.
            - STALLED means that provisioning could not be done.
            - >-
              NEEDS_ATTENTION means that the component is ready, but some user
              intervention is required. (For example that the user should
              migrate workloads to a new control plane revision.)
            - >-
              DEGRADED means that the component is ready, but operating in a
              degraded state.
          enum:
            - LIFECYCLE_STATE_UNSPECIFIED
            - DISABLED
            - FAILED_PRECONDITION
            - PROVISIONING
            - ACTIVE
            - STALLED
            - NEEDS_ATTENTION
            - DEGRADED
        implementation:
          description: Output only. Implementation of managed control plane.
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified
            - A Google build of istiod is used for the managed control plane.
            - Traffic director is used for the managed control plane.
            - The control plane implementation is being updated.
          enum:
            - IMPLEMENTATION_UNSPECIFIED
            - ISTIOD
            - TRAFFIC_DIRECTOR
            - UPDATING
    ServiceMeshStatusDetails:
      id: ServiceMeshStatusDetails
      description: Structured and human-readable details for a status.
      type: object
      properties:
        code:
          description: A machine-readable code that further describes a broad status.
          type: string
        details:
          description: Human-readable explanation of code.
          type: string
    ServiceMeshDataPlaneManagement:
      id: ServiceMeshDataPlaneManagement
      description: Status of data plane management. Only reported per-member.
      type: object
      properties:
        state:
          description: Lifecycle status of data plane management.
          type: string
          enumDescriptions:
            - Unspecified
            - DISABLED means that the component is not enabled.
            - >-
              FAILED_PRECONDITION means that provisioning cannot proceed because
              of some characteristic of the member cluster.
            - PROVISIONING means that provisioning is in progress.
            - ACTIVE means that the component is ready for use.
            - STALLED means that provisioning could not be done.
            - >-
              NEEDS_ATTENTION means that the component is ready, but some user
              intervention is required. (For example that the user should
              migrate workloads to a new control plane revision.)
            - >-
              DEGRADED means that the component is ready, but operating in a
              degraded state.
          enum:
            - LIFECYCLE_STATE_UNSPECIFIED
            - DISABLED
            - FAILED_PRECONDITION
            - PROVISIONING
            - ACTIVE
            - STALLED
            - NEEDS_ATTENTION
            - DEGRADED
        details:
          description: Explanation of the status.
          type: array
          items:
            $ref: '#/components/schemas/ServiceMeshStatusDetails'
    ServiceMeshCondition:
      id: ServiceMeshCondition
      description: Condition being reported.
      type: object
      properties:
        code:
          description: >-
            Unique identifier of the condition which describes the condition
            recognizable to the user.
          type: string
          enumDescriptions:
            - Default Unspecified code
            - Mesh IAM permission denied error code
            - CNI config unsupported error code
            - GKE sandbox unsupported error code
            - Nodepool workload identity federation required error code
            - CNI installation failed error code
            - CNI pod unschedulable error code
            - Multiple control planes unsupported error code
            - VPC-SC GA is supported for this control plane.
            - >-
              Configuration (Istio/k8s resources) failed to apply due to
              internal error.
            - Configuration failed to be applied due to being invalid.
            - >-
              Encountered configuration(s) with possible unintended behavior or
              invalid configuration. These configs may not have been applied.
            - BackendService quota exceeded error code.
            - HealthCheck quota exceeded error code.
            - HTTPRoute quota exceeded error code.
            - TCPRoute quota exceeded error code.
            - TLS routes quota exceeded error code.
            - TrafficPolicy quota exceeded error code.
            - EndpointPolicy quota exceeded error code.
            - Gateway quota exceeded error code.
            - Mesh quota exceeded error code.
            - ServerTLSPolicy quota exceeded error code.
            - ClientTLSPolicy quota exceeded error code.
            - ServiceLBPolicy quota exceeded error code.
            - HTTPFilter quota exceeded error code.
            - TCPFilter quota exceeded error code.
            - NetworkEndpointGroup quota exceeded error code.
          enum:
            - CODE_UNSPECIFIED
            - MESH_IAM_PERMISSION_DENIED
            - CNI_CONFIG_UNSUPPORTED
            - GKE_SANDBOX_UNSUPPORTED
            - NODEPOOL_WORKLOAD_IDENTITY_FEDERATION_REQUIRED
            - CNI_INSTALLATION_FAILED
            - CNI_POD_UNSCHEDULABLE
            - UNSUPPORTED_MULTIPLE_CONTROL_PLANES
            - VPCSC_GA_SUPPORTED
            - CONFIG_APPLY_INTERNAL_ERROR
            - CONFIG_VALIDATION_ERROR
            - CONFIG_VALIDATION_WARNING
            - QUOTA_EXCEEDED_BACKEND_SERVICES
            - QUOTA_EXCEEDED_HEALTH_CHECKS
            - QUOTA_EXCEEDED_HTTP_ROUTES
            - QUOTA_EXCEEDED_TCP_ROUTES
            - QUOTA_EXCEEDED_TLS_ROUTES
            - QUOTA_EXCEEDED_TRAFFIC_POLICIES
            - QUOTA_EXCEEDED_ENDPOINT_POLICIES
            - QUOTA_EXCEEDED_GATEWAYS
            - QUOTA_EXCEEDED_MESHES
            - QUOTA_EXCEEDED_SERVER_TLS_POLICIES
            - QUOTA_EXCEEDED_CLIENT_TLS_POLICIES
            - QUOTA_EXCEEDED_SERVICE_LB_POLICIES
            - QUOTA_EXCEEDED_HTTP_FILTERS
            - QUOTA_EXCEEDED_TCP_FILTERS
            - QUOTA_EXCEEDED_NETWORK_ENDPOINT_GROUPS
        documentationLink:
          description: Links contains actionable information.
          type: string
        details:
          description: A short summary about the issue.
          type: string
        severity:
          description: Severity level of the condition.
          type: string
          enumDescriptions:
            - Unspecified severity
            - Indicates an issue that prevents the mesh from operating correctly
            - >-
              Indicates a setting is likely wrong, but the mesh is still able to
              operate
            - An informational message, not requiring any action
          enum:
            - SEVERITY_UNSPECIFIED
            - ERROR
            - WARNING
            - INFO
    ConfigManagementMembershipState:
      id: ConfigManagementMembershipState
      description: '**Anthos Config Management**: State for a single cluster.'
      type: object
      properties:
        clusterName:
          description: >-
            This field is set to the `cluster_name` field of the Membership Spec
            if it is not empty. Otherwise, it is set to the cluster's fleet
            membership name.
          type: string
        membershipSpec:
          description: >-
            Membership configuration in the cluster. This represents the actual
            state in the cluster, while the MembershipSpec in the FeatureSpec
            represents the intended state
          $ref: '#/components/schemas/ConfigManagementMembershipSpec'
        operatorState:
          description: Current install status of ACM's Operator
          $ref: '#/components/schemas/ConfigManagementOperatorState'
        configSyncState:
          description: Current sync status
          $ref: '#/components/schemas/ConfigManagementConfigSyncState'
        policyControllerState:
          description: PolicyController status
          $ref: '#/components/schemas/ConfigManagementPolicyControllerState'
        hierarchyControllerState:
          description: Hierarchy Controller status
          $ref: '#/components/schemas/ConfigManagementHierarchyControllerState'
    ConfigManagementOperatorState:
      id: ConfigManagementOperatorState
      description: State information for an ACM's Operator
      type: object
      properties:
        version:
          description: The semenatic version number of the operator
          type: string
        deploymentState:
          description: The state of the Operator's deployment
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
            - Deployment is installing or terminating
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
        errors:
          description: Install errors.
          type: array
          items:
            $ref: '#/components/schemas/ConfigManagementInstallError'
    ConfigManagementInstallError:
      id: ConfigManagementInstallError
      description: Errors pertaining to the installation of ACM
      type: object
      properties:
        errorMessage:
          description: A string representing the user facing error message
          type: string
    ConfigManagementConfigSyncState:
      id: ConfigManagementConfigSyncState
      description: State information for ConfigSync
      type: object
      properties:
        version:
          description: The version of ConfigSync deployed
          $ref: '#/components/schemas/ConfigManagementConfigSyncVersion'
        deploymentState:
          description: >-
            Information about the deployment of ConfigSync, including the
            version of the various Pods deployed
          $ref: '#/components/schemas/ConfigManagementConfigSyncDeploymentState'
        syncState:
          description: The state of ConfigSync's process to sync configs to a cluster
          $ref: '#/components/schemas/ConfigManagementSyncState'
        errors:
          description: Errors pertaining to the installation of Config Sync.
          type: array
          items:
            $ref: '#/components/schemas/ConfigManagementConfigSyncError'
        rootsyncCrd:
          description: The state of the RootSync CRD
          type: string
          enumDescriptions:
            - CRD's state cannot be determined
            - CRD is not installed
            - CRD is installed
            - CRD is terminating (i.e., it has been deleted and is cleaning up)
            - CRD is installing
          enum:
            - CRD_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - TERMINATING
            - INSTALLING
        reposyncCrd:
          description: The state of the Reposync CRD
          type: string
          enumDescriptions:
            - CRD's state cannot be determined
            - CRD is not installed
            - CRD is installed
            - CRD is terminating (i.e., it has been deleted and is cleaning up)
            - CRD is installing
          enum:
            - CRD_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - TERMINATING
            - INSTALLING
        state:
          description: >-
            The state of CS This field summarizes the other fields in this
            message.
          type: string
          enumDescriptions:
            - CS's state cannot be determined.
            - CS is not installed.
            - The expected CS version is installed successfully.
            - CS encounters errors.
            - CS is installing or terminating.
          enum:
            - STATE_UNSPECIFIED
            - CONFIG_SYNC_NOT_INSTALLED
            - CONFIG_SYNC_INSTALLED
            - CONFIG_SYNC_ERROR
            - CONFIG_SYNC_PENDING
    ConfigManagementConfigSyncVersion:
      id: ConfigManagementConfigSyncVersion
      description: Specific versioning information pertaining to ConfigSync's Pods
      type: object
      properties:
        importer:
          description: Version of the deployed importer pod
          type: string
        syncer:
          description: Version of the deployed syncer pod
          type: string
        gitSync:
          description: Version of the deployed git-sync pod
          type: string
        monitor:
          description: Version of the deployed monitor pod
          type: string
        reconcilerManager:
          description: Version of the deployed reconciler-manager pod
          type: string
        rootReconciler:
          description: Version of the deployed reconciler container in root-reconciler pod
          type: string
        admissionWebhook:
          description: Version of the deployed admission_webhook pod
          type: string
    ConfigManagementConfigSyncDeploymentState:
      id: ConfigManagementConfigSyncDeploymentState
      description: The state of ConfigSync's deployment on a cluster
      type: object
      properties:
        importer:
          description: Deployment state of the importer pod
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
            - Deployment is installing or terminating
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
        syncer:
          description: Deployment state of the syncer pod
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
            - Deployment is installing or terminating
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
        gitSync:
          description: Deployment state of the git-sync pod
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
            - Deployment is installing or terminating
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
        monitor:
          description: Deployment state of the monitor pod
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
            - Deployment is installing or terminating
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
        reconcilerManager:
          description: Deployment state of reconciler-manager pod
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
            - Deployment is installing or terminating
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
        rootReconciler:
          description: Deployment state of root-reconciler
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
            - Deployment is installing or terminating
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
        admissionWebhook:
          description: Deployment state of admission-webhook
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
            - Deployment is installing or terminating
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
    ConfigManagementSyncState:
      id: ConfigManagementSyncState
      description: State indicating an ACM's progress syncing configurations to a cluster
      type: object
      properties:
        sourceToken:
          description: Token indicating the state of the repo.
          type: string
        importToken:
          description: Token indicating the state of the importer.
          type: string
        syncToken:
          description: Token indicating the state of the syncer.
          type: string
        lastSync:
          description: >-
            Deprecated: use last_sync_time instead. Timestamp of when ACM last
            successfully synced the repo The time format is specified in
            https://golang.org/pkg/time/#Time.String
          deprecated: true
          type: string
        lastSyncTime:
          description: Timestamp type of when ACM last successfully synced the repo
          type: string
          format: google-datetime
        code:
          description: Sync status code
          type: string
          enumDescriptions:
            - Config Sync cannot determine a sync code
            - Config Sync successfully synced the git Repo with the cluster
            - Config Sync is in the progress of syncing a new change
            - >-
              Indicates an error configuring Config Sync, and user action is
              required
            - Config Sync has been installed but not configured
            - Config Sync has not been installed
            - Error authorizing with the cluster
            - Cluster could not be reached
          enum:
            - SYNC_CODE_UNSPECIFIED
            - SYNCED
            - PENDING
            - ERROR
            - NOT_CONFIGURED
            - NOT_INSTALLED
            - UNAUTHORIZED
            - UNREACHABLE
        errors:
          description: >-
            A list of errors resulting from problematic configs. This list will
            be truncated after 100 errors, although it is unlikely for that many
            errors to simultaneously exist.
          type: array
          items:
            $ref: '#/components/schemas/ConfigManagementSyncError'
    ConfigManagementSyncError:
      id: ConfigManagementSyncError
      description: An ACM created error representing a problem syncing configurations
      type: object
      properties:
        code:
          description: An ACM defined error code
          type: string
        errorMessage:
          description: A description of the error
          type: string
        errorResources:
          description: A list of config(s) associated with the error, if any
          type: array
          items:
            $ref: '#/components/schemas/ConfigManagementErrorResource'
    ConfigManagementErrorResource:
      id: ConfigManagementErrorResource
      description: Model for a config file in the git repo with an associated Sync error
      type: object
      properties:
        sourcePath:
          description: Path in the git repo of the erroneous config
          type: string
        resourceName:
          description: Metadata name of the resource that is causing an error
          type: string
        resourceNamespace:
          description: Namespace of the resource that is causing an error
          type: string
        resourceGvk:
          description: Group/version/kind of the resource that is causing an error
          $ref: '#/components/schemas/ConfigManagementGroupVersionKind'
    ConfigManagementGroupVersionKind:
      id: ConfigManagementGroupVersionKind
      description: A Kubernetes object's GVK
      type: object
      properties:
        group:
          description: Kubernetes Group
          type: string
        version:
          description: Kubernetes Version
          type: string
        kind:
          description: Kubernetes Kind
          type: string
    ConfigManagementConfigSyncError:
      id: ConfigManagementConfigSyncError
      description: Errors pertaining to the installation of Config Sync
      type: object
      properties:
        errorMessage:
          description: A string representing the user facing error message
          type: string
    ConfigManagementPolicyControllerState:
      id: ConfigManagementPolicyControllerState
      description: State for PolicyControllerState.
      type: object
      properties:
        version:
          description: The version of Gatekeeper Policy Controller deployed.
          $ref: '#/components/schemas/ConfigManagementPolicyControllerVersion'
        deploymentState:
          description: The state about the policy controller installation.
          $ref: '#/components/schemas/ConfigManagementGatekeeperDeploymentState'
        migration:
          description: Record state of ACM -> PoCo Hub migration for this feature.
          $ref: '#/components/schemas/ConfigManagementPolicyControllerMigration'
    ConfigManagementPolicyControllerVersion:
      id: ConfigManagementPolicyControllerVersion
      description: The build version of Gatekeeper Policy Controller is using.
      type: object
      properties:
        version:
          description: >-
            The gatekeeper image tag that is composed of ACM version, git tag,
            build number.
          type: string
    ConfigManagementGatekeeperDeploymentState:
      id: ConfigManagementGatekeeperDeploymentState
      description: State of Policy Controller installation.
      type: object
      properties:
        gatekeeperControllerManagerState:
          description: Status of gatekeeper-controller-manager pod.
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
            - Deployment is installing or terminating
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
        gatekeeperAudit:
          description: Status of gatekeeper-audit deployment.
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
            - Deployment is installing or terminating
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
        gatekeeperMutation:
          description: Status of the pod serving the mutation webhook.
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
            - Deployment is installing or terminating
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
    ConfigManagementPolicyControllerMigration:
      id: ConfigManagementPolicyControllerMigration
      description: State for the migration of PolicyController from ACM -> PoCo Hub.
      type: object
      properties:
        stage:
          description: Stage of the migration.
          type: string
          enumDescriptions:
            - Unknown state of migration.
            - >-
              ACM Hub/Operator manages policycontroller. No migration yet
              completed.
            - >-
              All migrations steps complete; Poco Hub now manages
              policycontroller.
          enum:
            - STAGE_UNSPECIFIED
            - ACM_MANAGED
            - POCO_MANAGED
        copyTime:
          description: Last time this membership spec was copied to PoCo feature.
          type: string
          format: google-datetime
    ConfigManagementHierarchyControllerState:
      id: ConfigManagementHierarchyControllerState
      description: State for Hierarchy Controller
      type: object
      properties:
        version:
          description: The version for Hierarchy Controller
          $ref: '#/components/schemas/ConfigManagementHierarchyControllerVersion'
        state:
          description: The deployment state for Hierarchy Controller
          $ref: >-
            #/components/schemas/ConfigManagementHierarchyControllerDeploymentState
    ConfigManagementHierarchyControllerVersion:
      id: ConfigManagementHierarchyControllerVersion
      description: Version for Hierarchy Controller
      type: object
      properties:
        hnc:
          description: Version for open source HNC
          type: string
        extension:
          description: Version for Hierarchy Controller extension
          type: string
    ConfigManagementHierarchyControllerDeploymentState:
      id: ConfigManagementHierarchyControllerDeploymentState
      description: Deployment state for Hierarchy Controller
      type: object
      properties:
        hnc:
          description: The deployment state for open source HNC (e.g. v0.7.0-hc.0)
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
            - Deployment is installing or terminating
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
        extension:
          description: >-
            The deployment state for Hierarchy Controller extension (e.g.
            v0.7.0-hc.1)
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
            - Deployment is installing or terminating
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
    IdentityServiceMembershipState:
      id: IdentityServiceMembershipState
      description: '**Anthos Identity Service**: State for a single Membership.'
      type: object
      properties:
        installedVersion:
          description: >-
            Installed AIS version. This is the AIS version installed on this
            member. The values makes sense iff state is OK.
          type: string
        state:
          description: Deployment state on this member
          type: string
          enumDescriptions:
            - Unspecified state
            - deployment succeeds
            - Failure with error.
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - OK
            - ERROR
        failureReason:
          description: The reason of the failure.
          type: string
        memberConfig:
          description: Last reconciled membership configuration
          $ref: '#/components/schemas/IdentityServiceMembershipSpec'
    PolicyControllerMembershipState:
      id: PolicyControllerMembershipState
      description: '**Policy Controller**: State for a single cluster.'
      type: object
      properties:
        componentStates:
          description: >-
            Currently these include (also serving as map keys): 1. "admission"
            2. "audit" 3. "mutation"
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PolicyControllerOnClusterState'
        state:
          description: >-
            The overall Policy Controller lifecycle state observed by the Hub
            Feature controller.
          type: string
          enumDescriptions:
            - The lifecycle state is unspecified.
            - >-
              The PC does not exist on the given cluster, and no k8s resources
              of any type that are associated with the PC should exist there.
              The cluster does not possess a membership with the PCH.
            - >-
              The PCH possesses a Membership, however the PC is not fully
              installed on the cluster. In this state the hub can be expected to
              be taking actions to install the PC on the cluster.
            - >-
              The PC is fully installed on the cluster and in an operational
              mode. In this state PCH will be reconciling state with the PC, and
              the PC will be performing it's operational tasks per that
              software. Entering a READY state requires that the hub has
              confirmed the PC is installed and its pods are operational with
              the version of the PC the PCH expects.
            - >-
              The PC is fully installed, but in the process of changing the
              configuration (including changing the version of PC either up and
              down, or modifying the manifests of PC) of the resources running
              on the cluster. The PCH has a Membership, is aware of the version
              the cluster should be running in, but has not confirmed for itself
              that the PC is running with that version.
            - >-
              The PC may have resources on the cluster, but the PCH wishes to
              remove the Membership. The Membership still exists.
            - >-
              The PC is not operational, and the PCH is unable to act to make it
              operational. Entering a CLUSTER_ERROR state happens automatically
              when the PCH determines that a PC installed on the cluster is
              non-operative or that the cluster does not meet requirements set
              for the PCH to administer the cluster but has nevertheless been
              given an instruction to do so (such as 'install').
            - >-
              In this state, the PC may still be operational, and only the PCH
              is unable to act. The hub should not issue instructions to change
              the PC state, or otherwise interfere with the on-cluster
              resources. Entering a HUB_ERROR state happens automatically when
              the PCH determines the hub is in an unhealthy state and it wishes
              to 'take hands off' to avoid corrupting the PC or other data.
            - >-
              Policy Controller (PC) is installed but suspended. This means that
              the policies are not enforced, but violations are still recorded
              (through audit).
            - >-
              PoCo Hub is not taking any action to reconcile cluster objects.
              Changes to those objects will not be overwritten by PoCo Hub.
          enum:
            - LIFECYCLE_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLING
            - ACTIVE
            - UPDATING
            - DECOMMISSIONING
            - CLUSTER_ERROR
            - HUB_ERROR
            - SUSPENDED
            - DETACHED
        policyContentState:
          description: The overall content state observed by the Hub Feature controller.
          $ref: '#/components/schemas/PolicyControllerPolicyContentState'
    PolicyControllerOnClusterState:
      id: PolicyControllerOnClusterState
      description: >-
        OnClusterState represents the state of a sub-component of Policy
        Controller.
      type: object
      properties:
        state:
          description: The lifecycle state of this component.
          type: string
          enumDescriptions:
            - The lifecycle state is unspecified.
            - >-
              The PC does not exist on the given cluster, and no k8s resources
              of any type that are associated with the PC should exist there.
              The cluster does not possess a membership with the PCH.
            - >-
              The PCH possesses a Membership, however the PC is not fully
              installed on the cluster. In this state the hub can be expected to
              be taking actions to install the PC on the cluster.
            - >-
              The PC is fully installed on the cluster and in an operational
              mode. In this state PCH will be reconciling state with the PC, and
              the PC will be performing it's operational tasks per that
              software. Entering a READY state requires that the hub has
              confirmed the PC is installed and its pods are operational with
              the version of the PC the PCH expects.
            - >-
              The PC is fully installed, but in the process of changing the
              configuration (including changing the version of PC either up and
              down, or modifying the manifests of PC) of the resources running
              on the cluster. The PCH has a Membership, is aware of the version
              the cluster should be running in, but has not confirmed for itself
              that the PC is running with that version.
            - >-
              The PC may have resources on the cluster, but the PCH wishes to
              remove the Membership. The Membership still exists.
            - >-
              The PC is not operational, and the PCH is unable to act to make it
              operational. Entering a CLUSTER_ERROR state happens automatically
              when the PCH determines that a PC installed on the cluster is
              non-operative or that the cluster does not meet requirements set
              for the PCH to administer the cluster but has nevertheless been
              given an instruction to do so (such as 'install').
            - >-
              In this state, the PC may still be operational, and only the PCH
              is unable to act. The hub should not issue instructions to change
              the PC state, or otherwise interfere with the on-cluster
              resources. Entering a HUB_ERROR state happens automatically when
              the PCH determines the hub is in an unhealthy state and it wishes
              to 'take hands off' to avoid corrupting the PC or other data.
            - >-
              Policy Controller (PC) is installed but suspended. This means that
              the policies are not enforced, but violations are still recorded
              (through audit).
            - >-
              PoCo Hub is not taking any action to reconcile cluster objects.
              Changes to those objects will not be overwritten by PoCo Hub.
          enum:
            - LIFECYCLE_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLING
            - ACTIVE
            - UPDATING
            - DECOMMISSIONING
            - CLUSTER_ERROR
            - HUB_ERROR
            - SUSPENDED
            - DETACHED
        details:
          description: Surface potential errors or information logs.
          type: string
    PolicyControllerPolicyContentState:
      id: PolicyControllerPolicyContentState
      description: The state of the policy controller policy content
      type: object
      properties:
        templateLibraryState:
          description: The state of the template library
          $ref: '#/components/schemas/PolicyControllerOnClusterState'
        bundleStates:
          description: >-
            The state of the any bundles included in the chosen version of the
            manifest
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PolicyControllerOnClusterState'
        referentialSyncConfigState:
          description: >-
            The state of the referential data sync configuration. This could
            represent the state of either the syncSet object(s) or the config
            object, depending on the version of PoCo configured by the user.
          $ref: '#/components/schemas/PolicyControllerOnClusterState'
    ClusterUpgradeMembershipState:
      id: ClusterUpgradeMembershipState
      description: Per-membership state for this feature.
      type: object
      properties:
        ignored:
          description: >-
            Whether this membership is ignored by the feature. For example,
            manually upgraded clusters can be ignored if they are newer than the
            default versions of its release channel.
          $ref: '#/components/schemas/ClusterUpgradeIgnoredMembership'
        upgrades:
          description: Actual upgrade state against desired.
          type: array
          items:
            $ref: '#/components/schemas/ClusterUpgradeMembershipGKEUpgradeState'
    ClusterUpgradeMembershipGKEUpgradeState:
      id: ClusterUpgradeMembershipGKEUpgradeState
      description: ScopeGKEUpgradeState is a GKEUpgrade and its state per-membership.
      type: object
      properties:
        upgrade:
          description: Which upgrade to track the state.
          $ref: '#/components/schemas/ClusterUpgradeGKEUpgrade'
        status:
          description: Status of the upgrade.
          $ref: '#/components/schemas/ClusterUpgradeUpgradeStatus'
    FleetObservabilityMembershipState:
      id: FleetObservabilityMembershipState
      description: >-
        **FleetObservability**: Membership-specific Feature state for
        fleetobservability.
      type: object
      properties: {}
    CommonFleetDefaultMemberConfigSpec:
      id: CommonFleetDefaultMemberConfigSpec
      description: >-
        CommonFleetDefaultMemberConfigSpec contains default configuration
        information for memberships of a fleet
      type: object
      properties:
        mesh:
          description: Anthos Service Mesh-specific spec
          $ref: '#/components/schemas/ServiceMeshMembershipSpec'
        configmanagement:
          description: Config Management-specific spec.
          $ref: '#/components/schemas/ConfigManagementMembershipSpec'
        identityservice:
          description: Identity Service-specific spec.
          $ref: '#/components/schemas/IdentityServiceMembershipSpec'
        policycontroller:
          description: Policy Controller spec.
          $ref: '#/components/schemas/PolicyControllerMembershipSpec'
    ScopeFeatureSpec:
      id: ScopeFeatureSpec
      description: ScopeFeatureSpec contains feature specs for a fleet scope.
      type: object
      properties: {}
    ScopeFeatureState:
      id: ScopeFeatureState
      description: ScopeFeatureState contains Scope-wide Feature status information.
      type: object
      properties:
        state:
          description: Output only. The "running state" of the Feature in this Scope.
          readOnly: true
          $ref: '#/components/schemas/FeatureState'
    GenerateConnectManifestResponse:
      id: GenerateConnectManifestResponse
      description: >-
        GenerateConnectManifestResponse contains manifest information for
        installing/upgrading a Connect agent.
      type: object
      properties:
        manifest:
          description: >-
            The ordered list of Kubernetes resources that need to be applied to
            the cluster for GKE Connect agent installation/upgrade.
          type: array
          items:
            $ref: '#/components/schemas/ConnectAgentResource'
    ConnectAgentResource:
      id: ConnectAgentResource
      description: >-
        ConnectAgentResource represents a Kubernetes resource manifest for
        Connect Agent deployment.
      type: object
      properties:
        type:
          description: Kubernetes type of the resource.
          $ref: '#/components/schemas/TypeMeta'
        manifest:
          description: YAML manifest of the resource.
          type: string
    TypeMeta:
      id: TypeMeta
      description: >-
        TypeMeta is the type information needed for content unmarshalling of
        Kubernetes resources in the manifest.
      type: object
      properties:
        kind:
          description: Kind of the resource (e.g. Deployment).
          type: string
        apiVersion:
          description: APIVersion of the resource (e.g. v1).
          type: string
    Fleet:
      id: Fleet
      description: Fleet contains the Fleet-wide metadata and configuration.
      type: object
      properties:
        name:
          description: >-
            Output only. The full, unique resource name of this fleet in the
            format of `projects/{project}/locations/{location}/fleets/{fleet}`.
            Each Google Cloud project can have at most one fleet resource, named
            "default".
          readOnly: true
          type: string
        displayName:
          description: >-
            Optional. A user-assigned display name of the Fleet. When present,
            it must be between 4 to 30 characters. Allowed characters are:
            lowercase and uppercase letters, numbers, hyphen, single-quote,
            double-quote, space, and exclamation point. Example: `Production
            Fleet`
          type: string
        createTime:
          description: Output only. When the Fleet was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. When the Fleet was last updated.
          readOnly: true
          type: string
          format: google-datetime
        deleteTime:
          description: Output only. When the Fleet was deleted.
          readOnly: true
          type: string
          format: google-datetime
        uid:
          description: >-
            Output only. Google-generated UUID for this resource. This is unique
            across all Fleet resources. If a Fleet resource is deleted and
            another resource with the same name is created, it gets a different
            uid.
          readOnly: true
          type: string
        state:
          description: Output only. State of the namespace resource.
          readOnly: true
          $ref: '#/components/schemas/FleetLifecycleState'
        defaultClusterConfig:
          description: >-
            Optional. The default cluster configurations to apply across the
            fleet.
          $ref: '#/components/schemas/DefaultClusterConfig'
        labels:
          description: Optional. Labels for this Fleet.
          type: object
          additionalProperties:
            type: string
    FleetLifecycleState:
      id: FleetLifecycleState
      description: FleetLifecycleState describes the state of a Fleet resource.
      type: object
      properties:
        code:
          description: Output only. The current state of the Fleet resource.
          readOnly: true
          type: string
          enumDescriptions:
            - The code is not set.
            - The fleet is being created.
            - The fleet active.
            - The fleet is being deleted.
            - The fleet is being updated.
          enum:
            - CODE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - UPDATING
    DefaultClusterConfig:
      id: DefaultClusterConfig
      description: >-
        DefaultClusterConfig describes the default cluster configurations to be
        applied to all clusters born-in-fleet.
      type: object
      properties:
        securityPostureConfig:
          description: Enable/Disable Security Posture features for the cluster.
          $ref: '#/components/schemas/SecurityPostureConfig'
        binaryAuthorizationConfig:
          description: >-
            Optional. Enable/Disable binary authorization features for the
            cluster.
          $ref: '#/components/schemas/BinaryAuthorizationConfig'
    SecurityPostureConfig:
      id: SecurityPostureConfig
      description: >-
        SecurityPostureConfig defines the flags needed to enable/disable
        features for the Security Posture API.
      type: object
      properties:
        mode:
          description: Sets which mode to use for Security Posture features.
          type: string
          enumDescriptions:
            - Default value not specified.
            - Disables Security Posture features on the cluster.
            - Applies Security Posture features on the cluster.
            - >-
              Applies the Security Posture off cluster Enterprise level
              features.
          enum:
            - MODE_UNSPECIFIED
            - DISABLED
            - BASIC
            - ENTERPRISE
        vulnerabilityMode:
          description: Sets which mode to use for vulnerability scanning.
          type: string
          enumDescriptions:
            - Default value not specified.
            - Disables vulnerability scanning on the cluster.
            - Applies basic vulnerability scanning on the cluster.
            - >-
              Applies the Security Posture's vulnerability on cluster Enterprise
              level features.
          enum:
            - VULNERABILITY_MODE_UNSPECIFIED
            - VULNERABILITY_DISABLED
            - VULNERABILITY_BASIC
            - VULNERABILITY_ENTERPRISE
    BinaryAuthorizationConfig:
      id: BinaryAuthorizationConfig
      description: >-
        BinaryAuthorizationConfig defines the fleet level configuration of
        binary authorization feature.
      type: object
      properties:
        evaluationMode:
          description: Optional. Mode of operation for binauthz policy evaluation.
          type: string
          enumDescriptions:
            - Default value
            - Disable BinaryAuthorization
            - >-
              Use Binary Authorization with the policies specified in
              policy_bindings.
          enum:
            - EVALUATION_MODE_UNSPECIFIED
            - DISABLED
            - POLICY_BINDINGS
        policyBindings:
          description: Optional. Binauthz policies that apply to this cluster.
          type: array
          items:
            $ref: '#/components/schemas/PolicyBinding'
    PolicyBinding:
      id: PolicyBinding
      description: Binauthz policy that applies to this cluster.
      type: object
      properties:
        name:
          description: >-
            The relative resource name of the binauthz platform policy to audit.
            GKE platform policies have the following format:
            `projects/{project_number}/platforms/gke/policies/{policy_id}`.
          type: string
    ListFleetsResponse:
      id: ListFleetsResponse
      description: Response message for the `GkeHub.ListFleetsResponse` method.
      type: object
      properties:
        fleets:
          description: The list of matching fleets.
          type: array
          items:
            $ref: '#/components/schemas/Fleet'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages. The
            token is only valid for 1h.
          type: string
    Namespace:
      id: Namespace
      description: Namespace represents a namespace across the Fleet
      type: object
      properties:
        name:
          description: >-
            The resource name for the namespace
            `projects/{project}/locations/{location}/namespaces/{namespace}`
          type: string
        uid:
          description: >-
            Output only. Google-generated UUID for this resource. This is unique
            across all namespace resources. If a namespace resource is deleted
            and another resource with the same name is created, it gets a
            different uid.
          readOnly: true
          type: string
        createTime:
          description: Output only. When the namespace was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. When the namespace was last updated.
          readOnly: true
          type: string
          format: google-datetime
        deleteTime:
          description: Output only. When the namespace was deleted.
          readOnly: true
          type: string
          format: google-datetime
        state:
          description: Output only. State of the namespace resource.
          readOnly: true
          $ref: '#/components/schemas/NamespaceLifecycleState'
        scope:
          description: Required. Scope associated with the namespace
          type: string
        namespaceLabels:
          description: >-
            Optional. Namespace-level cluster namespace labels. These labels are
            applied to the related namespace of the member clusters bound to the
            parent Scope. Scope-level labels (`namespace_labels` in the Fleet
            Scope resource) take precedence over Namespace-level labels if they
            share a key. Keys and values must be Kubernetes-conformant.
          type: object
          additionalProperties:
            type: string
        labels:
          description: Optional. Labels for this Namespace.
          type: object
          additionalProperties:
            type: string
    NamespaceLifecycleState:
      id: NamespaceLifecycleState
      description: NamespaceLifecycleState describes the state of a Namespace resource.
      type: object
      properties:
        code:
          description: Output only. The current state of the Namespace resource.
          readOnly: true
          type: string
          enumDescriptions:
            - The code is not set.
            - The namespace is being created.
            - The namespace active.
            - The namespace is being deleted.
            - The namespace is being updated.
          enum:
            - CODE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - UPDATING
    ListScopeNamespacesResponse:
      id: ListScopeNamespacesResponse
      description: List of fleet namespaces.
      type: object
      properties:
        scopeNamespaces:
          description: The list of fleet namespaces
          type: array
          items:
            $ref: '#/components/schemas/Namespace'
        nextPageToken:
          description: >-
            A token to request the next page of resources from the
            `ListNamespaces` method. The value of an empty string means that
            there are no more resources to return.
          type: string
    RBACRoleBinding:
      id: RBACRoleBinding
      description: RBACRoleBinding represents a rbacrolebinding across the Fleet
      type: object
      properties:
        user:
          description: >-
            user is the name of the user as seen by the kubernetes cluster,
            example "alice" or "alice@domain.tld"
          type: string
        group:
          description: group is the group, as seen by the kubernetes cluster.
          type: string
        name:
          description: >-
            The resource name for the rbacrolebinding
            `projects/{project}/locations/{location}/scopes/{scope}/rbacrolebindings/{rbacrolebinding}`
            or
            `projects/{project}/locations/{location}/memberships/{membership}/rbacrolebindings/{rbacrolebinding}`
          type: string
        uid:
          description: >-
            Output only. Google-generated UUID for this resource. This is unique
            across all rbacrolebinding resources. If a rbacrolebinding resource
            is deleted and another resource with the same name is created, it
            gets a different uid.
          readOnly: true
          type: string
        createTime:
          description: Output only. When the rbacrolebinding was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. When the rbacrolebinding was last updated.
          readOnly: true
          type: string
          format: google-datetime
        deleteTime:
          description: Output only. When the rbacrolebinding was deleted.
          readOnly: true
          type: string
          format: google-datetime
        state:
          description: Output only. State of the rbacrolebinding resource.
          readOnly: true
          $ref: '#/components/schemas/RBACRoleBindingLifecycleState'
        role:
          description: Required. Role to bind to the principal
          $ref: '#/components/schemas/Role'
        labels:
          description: Optional. Labels for this RBACRolebinding.
          type: object
          additionalProperties:
            type: string
    RBACRoleBindingLifecycleState:
      id: RBACRoleBindingLifecycleState
      description: >-
        RBACRoleBindingLifecycleState describes the state of a RbacRoleBinding
        resource.
      type: object
      properties:
        code:
          description: Output only. The current state of the rbacrolebinding resource.
          readOnly: true
          type: string
          enumDescriptions:
            - The code is not set.
            - The rbacrolebinding is being created.
            - The rbacrolebinding active.
            - The rbacrolebinding is being deleted.
            - The rbacrolebinding is being updated.
          enum:
            - CODE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - UPDATING
    Role:
      id: Role
      description: Role is the type for Kubernetes roles
      type: object
      properties:
        predefinedRole:
          description: predefined_role is the Kubernetes default role to use
          type: string
          enumDescriptions:
            - UNKNOWN
            - ADMIN has EDIT and RBAC permissions
            - EDIT can edit all resources except RBAC
            - VIEW can only read resources
            - >-
              ANTHOS_SUPPORT gives Google Support read-only access to a number
              of cluster resources.
          enum:
            - UNKNOWN
            - ADMIN
            - EDIT
            - VIEW
            - ANTHOS_SUPPORT
    ListScopeRBACRoleBindingsResponse:
      id: ListScopeRBACRoleBindingsResponse
      description: List of Scope RBACRoleBindings.
      type: object
      properties:
        rbacrolebindings:
          description: The list of Scope RBACRoleBindings.
          type: array
          items:
            $ref: '#/components/schemas/RBACRoleBinding'
        nextPageToken:
          description: >-
            A token to request the next page of resources from the
            `ListScopeRBACRoleBindings` method. The value of an empty string
            means that there are no more resources to return.
          type: string
    Scope:
      id: Scope
      description: Scope represents a Scope in a Fleet.
      type: object
      properties:
        name:
          description: >-
            The resource name for the scope
            `projects/{project}/locations/{location}/scopes/{scope}`
          type: string
        uid:
          description: >-
            Output only. Google-generated UUID for this resource. This is unique
            across all scope resources. If a scope resource is deleted and
            another resource with the same name is created, it gets a different
            uid.
          readOnly: true
          type: string
        createTime:
          description: Output only. When the scope was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. When the scope was last updated.
          readOnly: true
          type: string
          format: google-datetime
        deleteTime:
          description: Output only. When the scope was deleted.
          readOnly: true
          type: string
          format: google-datetime
        state:
          description: Output only. State of the scope resource.
          readOnly: true
          $ref: '#/components/schemas/ScopeLifecycleState'
        namespaceLabels:
          description: >-
            Optional. Scope-level cluster namespace labels. For the member
            clusters bound to the Scope, these labels are applied to each
            namespace under the Scope. Scope-level labels take precedence over
            Namespace-level labels (`namespace_labels` in the Fleet Namespace
            resource) if they share a key. Keys and values must be
            Kubernetes-conformant.
          type: object
          additionalProperties:
            type: string
        labels:
          description: Optional. Labels for this Scope.
          type: object
          additionalProperties:
            type: string
    ScopeLifecycleState:
      id: ScopeLifecycleState
      description: ScopeLifecycleState describes the state of a Scope resource.
      type: object
      properties:
        code:
          description: Output only. The current state of the scope resource.
          readOnly: true
          type: string
          enumDescriptions:
            - The code is not set.
            - The scope is being created.
            - The scope active.
            - The scope is being deleted.
            - The scope is being updated.
          enum:
            - CODE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - UPDATING
    ListScopesResponse:
      id: ListScopesResponse
      description: List of Scopes.
      type: object
      properties:
        scopes:
          description: The list of Scopes
          type: array
          items:
            $ref: '#/components/schemas/Scope'
        nextPageToken:
          description: >-
            A token to request the next page of resources from the `ListScopes`
            method. The value of an empty string means that there are no more
            resources to return.
          type: string
    ListPermittedScopesResponse:
      id: ListPermittedScopesResponse
      description: List of permitted Scopes.
      type: object
      properties:
        scopes:
          description: The list of permitted Scopes
          type: array
          items:
            $ref: '#/components/schemas/Scope'
        nextPageToken:
          description: >-
            A token to request the next page of resources from the
            `ListPermittedScopes` method. The value of an empty string means
            that there are no more resources to return.
          type: string
    MembershipBinding:
      id: MembershipBinding
      description: >-
        MembershipBinding is a subresource of a Membership, representing what
        Fleet Scopes (or other, future Fleet resources) a Membership is bound
        to.
      type: object
      properties:
        scope:
          description: >-
            A Scope resource name in the format
            `projects/*/locations/*/scopes/*`.
          type: string
        name:
          description: >-
            The resource name for the membershipbinding itself
            `projects/{project}/locations/{location}/memberships/{membership}/bindings/{membershipbinding}`
          type: string
        uid:
          description: >-
            Output only. Google-generated UUID for this resource. This is unique
            across all membershipbinding resources. If a membershipbinding
            resource is deleted and another resource with the same name is
            created, it gets a different uid.
          readOnly: true
          type: string
        createTime:
          description: Output only. When the membership binding was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. When the membership binding was last updated.
          readOnly: true
          type: string
          format: google-datetime
        deleteTime:
          description: Output only. When the membership binding was deleted.
          readOnly: true
          type: string
          format: google-datetime
        state:
          description: Output only. State of the membership binding resource.
          readOnly: true
          $ref: '#/components/schemas/MembershipBindingLifecycleState'
        labels:
          description: Optional. Labels for this MembershipBinding.
          type: object
          additionalProperties:
            type: string
    MembershipBindingLifecycleState:
      id: MembershipBindingLifecycleState
      description: >-
        MembershipBindingLifecycleState describes the state of a Binding
        resource.
      type: object
      properties:
        code:
          description: Output only. The current state of the MembershipBinding resource.
          readOnly: true
          type: string
          enumDescriptions:
            - The code is not set.
            - The membershipbinding is being created.
            - The membershipbinding active.
            - The membershipbinding is being deleted.
            - The membershipbinding is being updated.
          enum:
            - CODE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - UPDATING
    ListMembershipBindingsResponse:
      id: ListMembershipBindingsResponse
      description: List of MembershipBindings.
      type: object
      properties:
        membershipBindings:
          description: The list of membership_bindings
          type: array
          items:
            $ref: '#/components/schemas/MembershipBinding'
        nextPageToken:
          description: >-
            A token to request the next page of resources from the
            `ListMembershipBindings` method. The value of an empty string means
            that there are no more resources to return.
          type: string
        unreachable:
          description: >-
            List of locations that could not be reached while fetching this
            list.
          type: array
          items:
            type: string
    ListLocationsResponse:
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Location:
      id: Location
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
          additionalProperties:
            type: string
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    SetIamPolicyRequest:
      id: SetIamPolicyRequest
      description: Request message for `SetIamPolicy` method.
      type: object
      properties:
        policy:
          description: >-
            REQUIRED: The complete policy to be applied to the `resource`. The
            size of the policy is limited to a few 10s of KB. An empty policy is
            a valid policy but certain Google Cloud services (such as Projects)
            might reject them.
          $ref: '#/components/schemas/Policy'
        updateMask:
          description: >-
            OPTIONAL: A FieldMask specifying which fields of the policy to
            modify. Only the fields in the mask will be modified. If no mask is
            provided, the following default mask is used: `paths: "bindings,
            etag"`
          type: string
          format: google-fieldmask
    Policy:
      id: Policy
      description: >-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources. A `Policy` is a collection of
        `bindings`. A `binding` binds one or more `members`, or principals, to a
        single `role`. Principals can be user accounts, service accounts, Google
        groups, and domains (such as G Suite). A `role` is a named list of
        permissions; each `role` can be an IAM predefined role or a user-created
        custom role. For some types of Google Cloud resources, a `binding` can
        also specify a `condition`, which is a logical expression that allows
        access to a resource only if the expression evaluates to `true`. A
        condition can add constraints based on attributes of the request, the
        resource, or both. To learn which resources support conditions in their
        IAM policies, see the [IAM
        documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        **JSON example:** ``` { "bindings": [ { "role":
        "roles/resourcemanager.organizationAdmin", "members": [
        "user:mike@example.com", "group:admins@example.com",
        "domain:google.com",
        "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, {
        "role": "roles/resourcemanager.organizationViewer", "members": [
        "user:eve@example.com" ], "condition": { "title": "expirable access",
        "description": "Does not grant access after Sep 2020", "expression":
        "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
        "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: -
        members: - user:mike@example.com - group:admins@example.com -
        domain:google.com -
        serviceAccount:my-project-id@appspot.gserviceaccount.com role:
        roles/resourcemanager.organizationAdmin - members: -
        user:eve@example.com role: roles/resourcemanager.organizationViewer
        condition: title: expirable access description: Does not grant access
        after Sep 2020 expression: request.time <
        timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ```
        For a description of IAM and its features, see the [IAM
        documentation](https://cloud.google.com/iam/docs/).
      type: object
      properties:
        version:
          description: >-
            Specifies the format of the policy. Valid values are `0`, `1`, and
            `3`. Requests that specify an invalid value are rejected. Any
            operation that affects conditional role bindings must specify
            version `3`. This requirement applies to the following operations: *
            Getting a policy that includes a conditional role binding * Adding a
            conditional role binding to a policy * Changing a conditional role
            binding in a policy * Removing any role binding, with or without a
            condition, from a policy that includes conditions **Important:** If
            you use IAM Conditions, you must include the `etag` field whenever
            you call `setIamPolicy`. If you omit this field, then IAM allows you
            to overwrite a version `3` policy with a version `1` policy, and all
            of the conditions in the version `3` policy are lost. If a policy
            does not include any conditions, operations on that policy may
            specify any valid version or leave the field unset. To learn which
            resources support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          type: integer
          format: int32
        bindings:
          description: >-
            Associates a list of `members`, or principals, with a `role`.
            Optionally, may specify a `condition` that determines how and when
            the `bindings` are applied. Each of the `bindings` must contain at
            least one principal. The `bindings` in a `Policy` can refer to up to
            1,500 principals; up to 250 of these principals can be Google
            groups. Each occurrence of a principal counts towards these limits.
            For example, if the `bindings` grant 50 different roles to
            `user:alice@example.com`, and not to any other principal, then you
            can add another 1,450 principals to the `bindings` in the `Policy`.
          type: array
          items:
            $ref: '#/components/schemas/Binding'
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          type: array
          items:
            $ref: '#/components/schemas/AuditConfig'
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy. **Important:** If you use
            IAM Conditions, you must include the `etag` field whenever you call
            `setIamPolicy`. If you omit this field, then IAM allows you to
            overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.
          type: string
          format: byte
    Binding:
      id: Binding
      description: Associates `members`, or principals, with a `role`.
      type: object
      properties:
        role:
          description: >-
            Role that is assigned to the list of `members`, or principals. For
            example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an
            overview of the IAM roles and permissions, see the [IAM
            documentation](https://cloud.google.com/iam/docs/roles-overview).
            For a list of the available pre-defined roles, see
            [here](https://cloud.google.com/iam/docs/understanding-roles).
          type: string
        members:
          description: >-
            Specifies the principals requesting access for a Google Cloud
            resource. `members` can have the following values: * `allUsers`: A
            special identifier that represents anyone who is on the internet;
            with or without a Google account. * `allAuthenticatedUsers`: A
            special identifier that represents anyone who is authenticated with
            a Google account or a service account. Does not include identities
            that come from external identity providers (IdPs) through identity
            federation. * `user:{emailid}`: An email address that represents a
            specific Google account. For example, `alice@example.com` . *
            `serviceAccount:{emailid}`: An email address that represents a
            Google service account. For example,
            `my-other-app@appspot.gserviceaccount.com`. *
            `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
            An identifier for a [Kubernetes service
            account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
            For example,
            `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
            `group:{emailid}`: An email address that represents a Google group.
            For example, `admins@example.com`. * `domain:{domain}`: The G Suite
            domain (primary) that represents all the users of that domain. For
            example, `google.com` or `example.com`. *
            `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workforce identity pool. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`:
            All workforce identities in a group. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All workforce identities with a specific attribute value. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`:
            All identities in a workforce identity pool. *
            `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workload identity pool. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`:
            A workload identity pool group. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All identities in a workload identity pool with a certain attribute.
            *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`:
            All identities in a workload identity pool. *
            `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus
            unique identifier) representing a user that has been recently
            deleted. For example, `alice@example.com?uid=123456789012345678901`.
            If the user is recovered, this value reverts to `user:{emailid}` and
            the recovered user retains the role in the binding. *
            `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
            (plus unique identifier) representing a service account that has
            been recently deleted. For example,
            `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
            If the service account is undeleted, this value reverts to
            `serviceAccount:{emailid}` and the undeleted service account retains
            the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:
            An email address (plus unique identifier) representing a Google
            group that has been recently deleted. For example,
            `admins@example.com?uid=123456789012345678901`. If the group is
            recovered, this value reverts to `group:{emailid}` and the recovered
            group retains the role in the binding. *
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            Deleted single identity in a workforce identity pool. For example,
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
          type: array
          items:
            type: string
        condition:
          description: >-
            The condition that is associated with this binding. If the condition
            evaluates to `true`, then this binding applies to the current
            request. If the condition evaluates to `false`, then this binding
            does not apply to the current request. However, a different role
            binding might grant the same role to one or more of the principals
            in this binding. To learn which resources support conditions in
            their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          $ref: '#/components/schemas/Expr'
    Expr:
      id: Expr
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      type: object
      properties:
        expression:
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
          type: string
        title:
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
        description:
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
          type: string
        location:
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
          type: string
    AuditConfig:
      id: AuditConfig
      description: >-
        Specifies the audit configuration for a service. The configuration
        determines which permission types are logged, and what identities, if
        any, are exempted from logging. An AuditConfig must have one or more
        AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
        specific service, the union of the two AuditConfigs is used for that
        service: the log_types specified in each AuditConfig are enabled, and
        the exempted_members in each AuditLogConfig are exempted. Example Policy
        with multiple AuditConfigs: { "audit_configs": [ { "service":
        "allServices", "audit_log_configs": [ { "log_type": "DATA_READ",
        "exempted_members": [ "user:jose@example.com" ] }, { "log_type":
        "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service":
        "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type":
        "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [
        "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy
        enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts
        `jose@example.com` from DATA_READ logging, and `aliya@example.com` from
        DATA_WRITE logging.
      type: object
      properties:
        service:
          description: >-
            Specifies a service that will be enabled for audit logging. For
            example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
          type: string
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          type: array
          items:
            $ref: '#/components/schemas/AuditLogConfig'
    AuditLogConfig:
      id: AuditLogConfig
      description: >-
        Provides the configuration for logging a type of permissions. Example: {
        "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
        "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This
        enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        jose@example.com from DATA_READ logging.
      type: object
      properties:
        logType:
          description: The log type that this config enables.
          type: string
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
        exemptedMembers:
          description: >-
            Specifies the identities that do not cause logging for this type of
            permission. Follows the same format of Binding.members.
          type: array
          items:
            type: string
    TestIamPermissionsRequest:
      id: TestIamPermissionsRequest
      description: Request message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          description: >-
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as `*` or `storage.*`) are not allowed. For more
            information see [IAM
            Overview](https://cloud.google.com/iam/docs/overview#permissions).
          type: array
          items:
            type: string
    TestIamPermissionsResponse:
      id: TestIamPermissionsResponse
      description: Response message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          description: >-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          type: array
          items:
            type: string
    OperationMetadata:
      id: OperationMetadata
      description: Represents the metadata of the long-running operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        target:
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusDetail:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        cancelRequested:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have successfully been cancelled
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    locations:
      id: google.gkehub.locations
      name: locations
      title: Locations
      methods:
        _projects_locations_list:
          operation: &ref_1
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response: &ref_2
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        projects_locations_list:
          operation: *ref_1
          response: *ref_2
        projects_locations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/locations/methods/projects_locations_get
          - $ref: >-
              #/components/x-stackQL-resources/locations/methods/projects_locations_list
        insert: []
        update: []
        delete: []
    operations:
      id: google.gkehub.operations
      name: operations
      title: Operations
      methods:
        _projects_locations_operations_list:
          operation: &ref_3
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get
          response: &ref_4
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        projects_locations_operations_list:
          operation: *ref_3
          response: *ref_4
        projects_locations_operations_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_operations_get
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_operations_list
        insert: []
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_operations_delete
    memberships:
      id: google.gkehub.memberships
      name: memberships
      title: Memberships
      methods:
        _projects_locations_memberships_list:
          operation: &ref_5
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships/get
          response: &ref_6
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.resources
        projects_locations_memberships_list:
          operation: *ref_5
          response: *ref_6
        projects_locations_memberships_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_generate_connect_manifest:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}:generateConnectManifest/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/memberships/methods/projects_locations_memberships_get
          - $ref: >-
              #/components/x-stackQL-resources/memberships/methods/projects_locations_memberships_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/memberships/methods/projects_locations_memberships_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/memberships/methods/projects_locations_memberships_patch
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/memberships/methods/projects_locations_memberships_delete
    memberships_iam_policies:
      id: google.gkehub.memberships_iam_policies
      name: memberships_iam_policies
      title: Memberships_iam_policies
      methods:
        projects_locations_memberships_set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _projects_locations_memberships_get_iam_policy:
          operation: &ref_7
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}:getIamPolicy/get
          response: &ref_8
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        projects_locations_memberships_get_iam_policy:
          operation: *ref_7
          response: *ref_8
        projects_locations_memberships_test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/memberships_iam_policies/methods/projects_locations_memberships_get_iam_policy
        insert: []
        update: []
        delete: []
    bindings:
      id: google.gkehub.bindings
      name: bindings
      title: Bindings
      methods:
        projects_locations_memberships_bindings_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}~1bindings~1{bindingsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_bindings_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}~1bindings~1{bindingsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_bindings_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}~1bindings~1{bindingsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_bindings_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}~1bindings/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _projects_locations_memberships_bindings_list:
          operation: &ref_9
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}~1bindings/get
          response: &ref_10
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.membershipBindings
        projects_locations_memberships_bindings_list:
          operation: *ref_9
          response: *ref_10
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/bindings/methods/projects_locations_memberships_bindings_get
          - $ref: >-
              #/components/x-stackQL-resources/bindings/methods/projects_locations_memberships_bindings_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/bindings/methods/projects_locations_memberships_bindings_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/bindings/methods/projects_locations_memberships_bindings_patch
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/bindings/methods/projects_locations_memberships_bindings_delete
    scopes_memberships:
      id: google.gkehub.scopes_memberships
      name: scopes_memberships
      title: Scopes_memberships
      methods:
        _projects_locations_scopes_list_memberships:
          operation: &ref_11
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}:listMemberships/get
          response: &ref_12
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.memberships
        projects_locations_scopes_list_memberships:
          operation: *ref_11
          response: *ref_12
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/scopes_memberships/methods/projects_locations_scopes_list_memberships
        insert: []
        update: []
        delete: []
    scopes:
      id: google.gkehub.scopes
      name: scopes
      title: Scopes
      methods:
        projects_locations_scopes_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_scopes_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_scopes_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_scopes_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _projects_locations_scopes_list:
          operation: &ref_13
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes/get
          response: &ref_14
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.scopes
        projects_locations_scopes_list:
          operation: *ref_13
          response: *ref_14
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/scopes/methods/projects_locations_scopes_get
          - $ref: >-
              #/components/x-stackQL-resources/scopes/methods/projects_locations_scopes_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/scopes/methods/projects_locations_scopes_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/scopes/methods/projects_locations_scopes_patch
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/scopes/methods/projects_locations_scopes_delete
    scopes_permitted:
      id: google.gkehub.scopes_permitted
      name: scopes_permitted
      title: Scopes_permitted
      methods:
        _projects_locations_scopes_list_permitted:
          operation: &ref_15
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes:listPermitted/get
          response: &ref_16
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.scopes
        projects_locations_scopes_list_permitted:
          operation: *ref_15
          response: *ref_16
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/scopes_permitted/methods/projects_locations_scopes_list_permitted
        insert: []
        update: []
        delete: []
    scopes_iam_policies:
      id: google.gkehub.scopes_iam_policies
      name: scopes_iam_policies
      title: Scopes_iam_policies
      methods:
        projects_locations_scopes_set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _projects_locations_scopes_get_iam_policy:
          operation: &ref_17
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}:getIamPolicy/get
          response: &ref_18
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        projects_locations_scopes_get_iam_policy:
          operation: *ref_17
          response: *ref_18
        projects_locations_scopes_test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/scopes_iam_policies/methods/projects_locations_scopes_get_iam_policy
        insert: []
        update: []
        delete: []
    namespaces:
      id: google.gkehub.namespaces
      name: namespaces
      title: Namespaces
      methods:
        projects_locations_scopes_namespaces_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}~1namespaces~1{namespacesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_scopes_namespaces_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}~1namespaces~1{namespacesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_scopes_namespaces_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}~1namespaces~1{namespacesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_scopes_namespaces_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}~1namespaces/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _projects_locations_scopes_namespaces_list:
          operation: &ref_19
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}~1namespaces/get
          response: &ref_20
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.scopeNamespaces
        projects_locations_scopes_namespaces_list:
          operation: *ref_19
          response: *ref_20
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/namespaces/methods/projects_locations_scopes_namespaces_get
          - $ref: >-
              #/components/x-stackQL-resources/namespaces/methods/projects_locations_scopes_namespaces_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/namespaces/methods/projects_locations_scopes_namespaces_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/namespaces/methods/projects_locations_scopes_namespaces_patch
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/namespaces/methods/projects_locations_scopes_namespaces_delete
    rbacrolebindings:
      id: google.gkehub.rbacrolebindings
      name: rbacrolebindings
      title: Rbacrolebindings
      methods:
        projects_locations_scopes_rbacrolebindings_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}~1rbacrolebindings~1{rbacrolebindingsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_scopes_rbacrolebindings_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}~1rbacrolebindings~1{rbacrolebindingsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_scopes_rbacrolebindings_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}~1rbacrolebindings~1{rbacrolebindingsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_scopes_rbacrolebindings_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}~1rbacrolebindings/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _projects_locations_scopes_rbacrolebindings_list:
          operation: &ref_21
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}~1rbacrolebindings/get
          response: &ref_22
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.rbacrolebindings
        projects_locations_scopes_rbacrolebindings_list:
          operation: *ref_21
          response: *ref_22
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/rbacrolebindings/methods/projects_locations_scopes_rbacrolebindings_get
          - $ref: >-
              #/components/x-stackQL-resources/rbacrolebindings/methods/projects_locations_scopes_rbacrolebindings_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/rbacrolebindings/methods/projects_locations_scopes_rbacrolebindings_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/rbacrolebindings/methods/projects_locations_scopes_rbacrolebindings_patch
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/rbacrolebindings/methods/projects_locations_scopes_rbacrolebindings_delete
    features:
      id: google.gkehub.features
      name: features
      title: Features
      methods:
        _projects_locations_features_list:
          operation: &ref_23
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1features/get
          response: &ref_24
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.resources
        projects_locations_features_list:
          operation: *ref_23
          response: *ref_24
        projects_locations_features_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1features/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_features_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1features~1{featuresId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_features_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1features~1{featuresId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_features_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1features~1{featuresId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/features/methods/projects_locations_features_get
          - $ref: >-
              #/components/x-stackQL-resources/features/methods/projects_locations_features_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/features/methods/projects_locations_features_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/features/methods/projects_locations_features_patch
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/features/methods/projects_locations_features_delete
    features_iam_policies:
      id: google.gkehub.features_iam_policies
      name: features_iam_policies
      title: Features_iam_policies
      methods:
        projects_locations_features_set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1features~1{featuresId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _projects_locations_features_get_iam_policy:
          operation: &ref_25
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1features~1{featuresId}:getIamPolicy/get
          response: &ref_26
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        projects_locations_features_get_iam_policy:
          operation: *ref_25
          response: *ref_26
        projects_locations_features_test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1features~1{featuresId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/features_iam_policies/methods/projects_locations_features_get_iam_policy
        insert: []
        update: []
        delete: []
    fleets:
      id: google.gkehub.fleets
      name: fleets
      title: Fleets
      methods:
        projects_locations_fleets_create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1fleets/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _projects_locations_fleets_list:
          operation: &ref_27
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1fleets/get
          response: &ref_28
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.fleets
        projects_locations_fleets_list:
          operation: *ref_27
          response: *ref_28
        projects_locations_fleets_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1fleets~1{fleetsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_fleets_patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1fleets~1{fleetsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_fleets_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1fleets~1{fleetsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _organizations_locations_fleets_list:
          operation: &ref_29
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1fleets/get
          response: &ref_30
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.fleets
        organizations_locations_fleets_list:
          operation: *ref_29
          response: *ref_30
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/fleets/methods/projects_locations_fleets_get
          - $ref: >-
              #/components/x-stackQL-resources/fleets/methods/projects_locations_fleets_list
          - $ref: >-
              #/components/x-stackQL-resources/fleets/methods/organizations_locations_fleets_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/fleets/methods/projects_locations_fleets_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/fleets/methods/projects_locations_fleets_patch
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/fleets/methods/projects_locations_fleets_delete
paths:
  /v1/projects/{projectsId}/locations:
    parameters: &ref_31
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Lists information about the supported locations for this service.
      operationId: gkehub.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_31
    get:
      description: Gets information about a location.
      operationId: gkehub.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_31
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: gkehub.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_31
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: gkehub.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: gkehub.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_31
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: gkehub.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/memberships:
    parameters: *ref_31
    get:
      description: Lists Memberships in a given project and location.
      operationId: gkehub.projects.locations.memberships.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMembershipsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: >-
        Creates a new Membership. **This is currently only supported for GKE
        clusters on Google Cloud**. To register other clusters, follow the
        instructions at
        https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster.
      operationId: gkehub.projects.locations.memberships.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Membership'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: membershipId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:
    parameters: *ref_31
    get:
      description: Gets the details of a Membership.
      operationId: gkehub.projects.locations.memberships.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Membership'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Removes a Membership. **This is currently only supported for GKE
        clusters on Google Cloud**. To unregister other clusters, follow the
        instructions at
        https://cloud.google.com/anthos/multicluster-management/connect/unregistering-a-cluster.
      operationId: gkehub.projects.locations.memberships.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
    patch:
      description: Updates an existing Membership.
      operationId: gkehub.projects.locations.memberships.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Membership'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:generateConnectManifest:
    parameters: *ref_31
    get:
      description: >-
        Generates the manifest for deployment of the GKE connect agent. **This
        method is used internally by Google-provided libraries.** Most clients
        should not need to call this method directly.
      operationId: gkehub.projects.locations.memberships.generateConnectManifest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateConnectManifestResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: query
          name: namespace
          schema:
            type: string
        - in: query
          name: proxy
          schema:
            type: string
            format: byte
        - in: query
          name: version
          schema:
            type: string
        - in: query
          name: isUpgrade
          schema:
            type: boolean
        - in: query
          name: registry
          schema:
            type: string
        - in: query
          name: imagePullSecretContent
          schema:
            type: string
            format: byte
  /v1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:setIamPolicy:
    parameters: *ref_31
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: gkehub.projects.locations.memberships.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:getIamPolicy:
    parameters: *ref_31
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: gkehub.projects.locations.memberships.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:testIamPermissions:
    parameters: *ref_31
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: gkehub.projects.locations.memberships.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}/bindings/{bindingsId}:
    parameters: *ref_31
    get:
      description: Returns the details of a MembershipBinding.
      operationId: gkehub.projects.locations.memberships.bindings.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipBinding'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: path
          name: bindingsId
          required: true
          schema:
            type: string
    patch:
      description: Updates a MembershipBinding.
      operationId: gkehub.projects.locations.memberships.bindings.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembershipBinding'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: path
          name: bindingsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a MembershipBinding.
      operationId: gkehub.projects.locations.memberships.bindings.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: path
          name: bindingsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}/bindings:
    parameters: *ref_31
    post:
      description: Creates a MembershipBinding.
      operationId: gkehub.projects.locations.memberships.bindings.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembershipBinding'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: query
          name: membershipBindingId
          schema:
            type: string
    get:
      description: Lists MembershipBindings.
      operationId: gkehub.projects.locations.memberships.bindings.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMembershipBindingsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/scopes/{scopesId}:listMemberships:
    parameters: *ref_31
    get:
      description: >-
        Lists Memberships bound to a Scope. The response includes relevant
        Memberships from all regions.
      operationId: gkehub.projects.locations.scopes.listMemberships
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBoundMembershipsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/scopes/{scopesId}:
    parameters: *ref_31
    get:
      description: Returns the details of a Scope.
      operationId: gkehub.projects.locations.scopes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scope'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
    patch:
      description: Updates a scopes.
      operationId: gkehub.projects.locations.scopes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Scope'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a Scope.
      operationId: gkehub.projects.locations.scopes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/scopes:
    parameters: *ref_31
    post:
      description: Creates a Scope.
      operationId: gkehub.projects.locations.scopes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Scope'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: scopeId
          schema:
            type: string
    get:
      description: Lists Scopes.
      operationId: gkehub.projects.locations.scopes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListScopesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/scopes:listPermitted:
    parameters: *ref_31
    get:
      description: Lists permitted Scopes.
      operationId: gkehub.projects.locations.scopes.listPermitted
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPermittedScopesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/scopes/{scopesId}:setIamPolicy:
    parameters: *ref_31
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: gkehub.projects.locations.scopes.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/scopes/{scopesId}:getIamPolicy:
    parameters: *ref_31
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: gkehub.projects.locations.scopes.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/scopes/{scopesId}:testIamPermissions:
    parameters: *ref_31
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: gkehub.projects.locations.scopes.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/scopes/{scopesId}/namespaces/{namespacesId}:
    parameters: *ref_31
    get:
      description: Returns the details of a fleet namespace.
      operationId: gkehub.projects.locations.scopes.namespaces.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Namespace'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
    patch:
      description: Updates a fleet namespace.
      operationId: gkehub.projects.locations.scopes.namespaces.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Namespace'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a fleet namespace.
      operationId: gkehub.projects.locations.scopes.namespaces.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/scopes/{scopesId}/namespaces:
    parameters: *ref_31
    post:
      description: Creates a fleet namespace.
      operationId: gkehub.projects.locations.scopes.namespaces.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Namespace'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
        - in: query
          name: scopeNamespaceId
          schema:
            type: string
    get:
      description: Lists fleet namespaces.
      operationId: gkehub.projects.locations.scopes.namespaces.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListScopeNamespacesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/scopes/{scopesId}/rbacrolebindings/{rbacrolebindingsId}:
    parameters: *ref_31
    get:
      description: Returns the details of a Scope RBACRoleBinding.
      operationId: gkehub.projects.locations.scopes.rbacrolebindings.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RBACRoleBinding'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
        - in: path
          name: rbacrolebindingsId
          required: true
          schema:
            type: string
    patch:
      description: Updates a Scope RBACRoleBinding.
      operationId: gkehub.projects.locations.scopes.rbacrolebindings.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RBACRoleBinding'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
        - in: path
          name: rbacrolebindingsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a Scope RBACRoleBinding.
      operationId: gkehub.projects.locations.scopes.rbacrolebindings.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
        - in: path
          name: rbacrolebindingsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/scopes/{scopesId}/rbacrolebindings:
    parameters: *ref_31
    post:
      description: Creates a Scope RBACRoleBinding.
      operationId: gkehub.projects.locations.scopes.rbacrolebindings.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RBACRoleBinding'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
        - in: query
          name: rbacrolebindingId
          schema:
            type: string
    get:
      description: Lists all Scope RBACRoleBindings.
      operationId: gkehub.projects.locations.scopes.rbacrolebindings.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListScopeRBACRoleBindingsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/features:
    parameters: *ref_31
    get:
      description: Lists Features in a given project and location.
      operationId: gkehub.projects.locations.features.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFeaturesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Adds a new Feature.
      operationId: gkehub.projects.locations.features.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feature'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: featureId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:
    parameters: *ref_31
    get:
      description: Gets details of a single Feature.
      operationId: gkehub.projects.locations.features.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
    delete:
      description: Removes a Feature.
      operationId: gkehub.projects.locations.features.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
    patch:
      description: Updates an existing Feature.
      operationId: gkehub.projects.locations.features.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feature'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:setIamPolicy:
    parameters: *ref_31
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: gkehub.projects.locations.features.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:getIamPolicy:
    parameters: *ref_31
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: gkehub.projects.locations.features.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:testIamPermissions:
    parameters: *ref_31
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: gkehub.projects.locations.features.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/fleets:
    parameters: *ref_31
    post:
      description: Creates a fleet.
      operationId: gkehub.projects.locations.fleets.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fleet'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
    get:
      description: >-
        Returns all fleets within an organization or a project that the caller
        has access to.
      operationId: gkehub.projects.locations.fleets.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFleetsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/fleets/{fleetsId}:
    parameters: *ref_31
    get:
      description: Returns the details of a fleet.
      operationId: gkehub.projects.locations.fleets.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fleet'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: fleetsId
          required: true
          schema:
            type: string
    patch:
      description: Updates a fleet.
      operationId: gkehub.projects.locations.fleets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fleet'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: fleetsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Removes a Fleet. There must be no memberships remaining in the Fleet.
      operationId: gkehub.projects.locations.fleets.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: fleetsId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/fleets:
    parameters: *ref_31
    get:
      description: >-
        Returns all fleets within an organization or a project that the caller
        has access to.
      operationId: gkehub.organizations.locations.fleets.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFleetsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
