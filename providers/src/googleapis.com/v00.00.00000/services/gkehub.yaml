openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: GKE Hub API
  description: ''
  version: v1
  x-discovery-doc-revision: '20230720'
  x-generated-date: '2023-08-01'
externalDocs:
  url: 'https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster'
servers:
  - url: 'https://gkehub.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    ListScopesResponse:
      properties:
        scopes:
          description: The list of Scopes
          items:
            $ref: '#/components/schemas/Scope'
          type: array
        nextPageToken:
          type: string
          description: A token to request the next page of resources from the `ListScopes` method. The value of an empty string means that there are no more resources to return.
      description: List of Scopes.
      type: object
      id: ListScopesResponse
    FleetObservabilityFleetObservabilityLoggingState:
      description: Feature state for logging feature.
      id: FleetObservabilityFleetObservabilityLoggingState
      properties:
        defaultLog:
          description: The base feature state of fleet default log.
          $ref: '#/components/schemas/FleetObservabilityFleetObservabilityBaseFeatureState'
        scopeLog:
          description: The base feature state of fleet scope log.
          $ref: '#/components/schemas/FleetObservabilityFleetObservabilityBaseFeatureState'
      type: object
    FleetObservabilityMembershipSpec:
      type: object
      properties: {}
      description: '**FleetObservability**: The membership-specific input for FleetObservability feature.'
      id: FleetObservabilityMembershipSpec
    ConfigManagementPolicyController:
      id: ConfigManagementPolicyController
      properties:
        mutationEnabled:
          type: boolean
          description: 'Enable or disable mutation in policy controller. If true, mutation CRDs, webhook and controller deployment will be deployed to the cluster.'
        logDeniesEnabled:
          description: Logs all denies and dry run failures.
          type: boolean
        exemptableNamespaces:
          description: The set of namespaces that are excluded from Policy Controller checks. Namespaces do not need to currently exist on the cluster.
          items:
            type: string
          type: array
        monitoring:
          description: Monitoring specifies the configuration of monitoring.
          $ref: '#/components/schemas/ConfigManagementPolicyControllerMonitoring'
        referentialRulesEnabled:
          type: boolean
          description: Enables the ability to use Constraint Templates that reference to objects other than the object currently being evaluated.
        auditIntervalSeconds:
          description: 'Sets the interval for Policy Controller Audit Scans (in seconds). When set to 0, this disables audit functionality altogether.'
          type: string
          format: int64
        enabled:
          description: 'Enables the installation of Policy Controller. If false, the rest of PolicyController fields take no effect.'
          type: boolean
        templateLibraryInstalled:
          type: boolean
          description: Installs the default template library along with Policy Controller.
        updateTime:
          readOnly: true
          type: string
          description: Output only. Last time this membership spec was updated.
          format: google-datetime
      description: Configuration for Policy Controller
      type: object
    MembershipEndpoint:
      id: MembershipEndpoint
      description: 'MembershipEndpoint contains information needed to contact a Kubernetes API, endpoint and any additional Kubernetes metadata.'
      properties:
        kubernetesResource:
          description: 'Optional. The in-cluster Kubernetes Resources that should be applied for a correctly registered cluster, in the steady state. These resources: * Ensure that the cluster is exclusively registered to one and only one Hub Membership. * Propagate Workload Pool Information available in the Membership Authority field. * Ensure proper initial configuration of default Hub Features.'
          $ref: '#/components/schemas/KubernetesResource'
        gkeCluster:
          description: Optional. Specific information for a GKE-on-GCP cluster.
          $ref: '#/components/schemas/GkeCluster'
        edgeCluster:
          $ref: '#/components/schemas/EdgeCluster'
          description: Optional. Specific information for a Google Edge cluster.
        googleManaged:
          description: Output only. Whether the lifecycle of this membership is managed by a google cluster platform service.
          type: boolean
          readOnly: true
        onPremCluster:
          $ref: '#/components/schemas/OnPremCluster'
          description: 'Optional. Specific information for a GKE On-Prem cluster. An onprem user-cluster who has no resourceLink is not allowed to use this field, it should have a nil "type" instead.'
        applianceCluster:
          $ref: '#/components/schemas/ApplianceCluster'
          description: Optional. Specific information for a GDC Edge Appliance cluster.
        kubernetesMetadata:
          description: Output only. Useful Kubernetes-specific metadata.
          readOnly: true
          $ref: '#/components/schemas/KubernetesMetadata'
        multiCloudCluster:
          $ref: '#/components/schemas/MultiCloudCluster'
          description: Optional. Specific information for a GKE Multi-Cloud cluster.
      type: object
    MembershipBindingLifecycleState:
      type: object
      id: MembershipBindingLifecycleState
      properties:
        code:
          readOnly: true
          enumDescriptions:
            - The code is not set.
            - The membershipbinding is being created.
            - The membershipbinding active.
            - The membershipbinding is being deleted.
            - The membershipbinding is being updated.
          description: Output only. The current state of the MembershipBinding resource.
          enum:
            - CODE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - UPDATING
          type: string
      description: MembershipBindingLifecycleState describes the state of a Binding resource.
    AuditConfig:
      type: object
      id: AuditConfig
      properties:
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          items:
            $ref: '#/components/schemas/AuditLogConfig'
          type: array
        service:
          description: 'Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.'
          type: string
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.'
    IdentityServiceMembershipState:
      properties:
        installedVersion:
          type: string
          description: Installed AIS version. This is the AIS version installed on this member. The values makes sense iff state is OK.
        state:
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - OK
            - ERROR
          type: string
          enumDescriptions:
            - Unspecified state
            - deployment succeeds
            - Failure with error.
          description: Deployment state on this member
        memberConfig:
          description: Last reconciled membership configuration
          $ref: '#/components/schemas/IdentityServiceMembershipSpec'
        failureReason:
          description: The reason of the failure.
          type: string
      type: object
      description: '**Anthos Identity Service**: State for a single Membership.'
      id: IdentityServiceMembershipState
    ConfigManagementConfigSyncDeploymentState:
      properties:
        monitor:
          description: Deployment state of the monitor pod
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - 'Deployment was attempted to be installed, but has errors'
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
        rootReconciler:
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - 'Deployment was attempted to be installed, but has errors'
          description: Deployment state of root-reconciler
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
        admissionWebhook:
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - 'Deployment was attempted to be installed, but has errors'
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          description: Deployment state of admission-webhook
          type: string
        gitSync:
          type: string
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - 'Deployment was attempted to be installed, but has errors'
          description: Deployment state of the git-sync pod
        importer:
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - 'Deployment was attempted to be installed, but has errors'
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          type: string
          description: Deployment state of the importer pod
        reconcilerManager:
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          type: string
          description: Deployment state of reconciler-manager pod
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - 'Deployment was attempted to be installed, but has errors'
        syncer:
          type: string
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - 'Deployment was attempted to be installed, but has errors'
          description: Deployment state of the syncer pod
      id: ConfigManagementConfigSyncDeploymentState
      type: object
      description: The state of ConfigSync's deployment on a cluster
    ConfigManagementGitConfig:
      type: object
      id: ConfigManagementGitConfig
      description: Git repo configuration for a single cluster.
      properties:
        httpsProxy:
          description: URL for the HTTPS proxy to be used when communicating with the Git repo.
          type: string
        syncRepo:
          description: The URL of the Git repository to use as the source of truth.
          type: string
        syncRev:
          description: Git revision (tag or hash) to check out. Default HEAD.
          type: string
        syncWaitSecs:
          description: 'Period in seconds between consecutive syncs. Default: 15.'
          type: string
          format: int64
        policyDir:
          type: string
          description: 'The path within the Git repository that represents the top level of the repo to sync. Default: the root directory of the repository.'
        syncBranch:
          description: 'The branch of the repository to sync from. Default: master.'
          type: string
        gcpServiceAccountEmail:
          type: string
          description: The Google Cloud Service Account Email used for auth when secret_type is gcpServiceAccount.
        secretType:
          description: 'Type of secret configured for access to the Git repo. Must be one of ssh, cookiefile, gcenode, token, gcpserviceaccount or none. The validation of this is case-sensitive. Required.'
          type: string
    FleetObservabilityFeatureState:
      type: object
      id: FleetObservabilityFeatureState
      description: '**FleetObservability**: Hub-wide Feature for FleetObservability feature. state.'
      properties:
        logging:
          $ref: '#/components/schemas/FleetObservabilityFleetObservabilityLoggingState'
          description: The feature state of default logging.
        monitoring:
          $ref: '#/components/schemas/FleetObservabilityFleetObservabilityMonitoringState'
          description: The feature state of fleet monitoring.
    ServiceMeshStatusDetails:
      properties:
        code:
          type: string
          description: A machine-readable code that further describes a broad status.
        details:
          type: string
          description: Human-readable explanation of code.
      description: Structured and human-readable details for a status.
      id: ServiceMeshStatusDetails
      type: object
    ListFleetsResponse:
      description: Response message for the `GkeHub.ListFleetsResponse` method.
      properties:
        fleets:
          items:
            $ref: '#/components/schemas/Fleet'
          type: array
          description: The list of matching fleets.
        nextPageToken:
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. The token is only valid for 1h.'
          type: string
      type: object
      id: ListFleetsResponse
    FleetObservabilityFleetObservabilityMonitoringState:
      id: FleetObservabilityFleetObservabilityMonitoringState
      type: object
      description: Feature state for monitoring feature.
      properties:
        state:
          description: The base feature state of fleet monitoring feature.
          $ref: '#/components/schemas/FleetObservabilityFleetObservabilityBaseFeatureState'
    ListMembershipBindingsResponse:
      id: ListMembershipBindingsResponse
      type: object
      description: List of MembershipBindings.
      properties:
        membershipBindings:
          items:
            $ref: '#/components/schemas/MembershipBinding'
          type: array
          description: The list of membership_bindings
        nextPageToken:
          type: string
          description: A token to request the next page of resources from the `ListMembershipBindings` method. The value of an empty string means that there are no more resources to return.
    ConfigManagementConfigSyncError:
      properties:
        errorMessage:
          description: A string representing the user facing error message
          type: string
      description: Errors pertaining to the installation of Config Sync
      id: ConfigManagementConfigSyncError
      type: object
    Feature:
      type: object
      properties:
        membershipStates:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MembershipFeatureState'
          description: 'Output only. Membership-specific Feature status. If this Feature does report any per-Membership status, this field may be unused. The keys indicate which Membership the state is for, in the form: `projects/{p}/locations/{l}/memberships/{m}` Where {p} is the project number, {l} is a valid location and {m} is a valid Membership in this project at that location. {p} MUST match the Feature''s project number.'
          readOnly: true
        fleetDefaultMemberConfig:
          $ref: '#/components/schemas/CommonFleetDefaultMemberConfigSpec'
          description: Optional. Feature configuration applicable to all memberships of the fleet.
        deleteTime:
          format: google-datetime
          readOnly: true
          description: Output only. When the Feature resource was deleted.
          type: string
        scopeStates:
          additionalProperties:
            $ref: '#/components/schemas/ScopeFeatureState'
          description: 'Output only. Scope-specific Feature status. If this Feature does report any per-Scope status, this field may be unused. The keys indicate which Scope the state is for, in the form: `projects/{p}/locations/global/scopes/{s}` Where {p} is the project, {s} is a valid Scope in this project. {p} WILL match the Feature''s project.'
          type: object
          readOnly: true
        membershipSpecs:
          type: object
          description: 'Optional. Membership-specific configuration for this Feature. If this Feature does not support any per-Membership configuration, this field may be unused. The keys indicate which Membership the configuration is for, in the form: `projects/{p}/locations/{l}/memberships/{m}` Where {p} is the project, {l} is a valid location and {m} is a valid Membership in this project at that location. {p} WILL match the Feature''s project. {p} will always be returned as the project number, but the project ID is also accepted during input. If the same Membership is specified in the map twice (using the project ID form, and the project number form), exactly ONE of the entries will be saved, with no guarantees as to which. For this reason, it is recommended the same format be used for all entries when mutating a Feature.'
          additionalProperties:
            $ref: '#/components/schemas/MembershipFeatureSpec'
        scopeSpecs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ScopeFeatureSpec'
          description: 'Optional. Scope-specific configuration for this Feature. If this Feature does not support any per-Scope configuration, this field may be unused. The keys indicate which Scope the configuration is for, in the form: `projects/{p}/locations/global/scopes/{s}` Where {p} is the project, {s} is a valid Scope in this project. {p} WILL match the Feature''s project. {p} will always be returned as the project number, but the project ID is also accepted during input. If the same Scope is specified in the map twice (using the project ID form, and the project number form), exactly ONE of the entries will be saved, with no guarantees as to which. For this reason, it is recommended the same format be used for all entries when mutating a Feature.'
        resourceState:
          readOnly: true
          $ref: '#/components/schemas/FeatureResourceState'
          description: Output only. State of the Feature resource itself.
        state:
          readOnly: true
          description: Output only. The Hub-wide Feature state.
          $ref: '#/components/schemas/CommonFeatureState'
        labels:
          description: Labels for this Feature.
          type: object
          additionalProperties:
            type: string
        spec:
          $ref: '#/components/schemas/CommonFeatureSpec'
          description: 'Optional. Hub-wide Feature configuration. If this Feature does not support any Hub-wide configuration, this field may be unused.'
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. When the Feature resource was created.
          type: string
        updateTime:
          description: Output only. When the Feature resource was last updated.
          readOnly: true
          format: google-datetime
          type: string
        name:
          readOnly: true
          type: string
          description: 'Output only. The full, unique name of this Feature resource in the format `projects/*/locations/*/features/*`.'
      description: Feature represents the settings and status of any Hub Feature.
      id: Feature
    CancelOperationRequest:
      properties: {}
      description: The request message for Operations.CancelOperation.
      id: CancelOperationRequest
      type: object
    ServiceMeshDataPlaneManagement:
      type: object
      id: ServiceMeshDataPlaneManagement
      properties:
        state:
          enumDescriptions:
            - Unspecified
            - DISABLED means that the component is not enabled.
            - FAILED_PRECONDITION means that provisioning cannot proceed because of some characteristic of the member cluster.
            - PROVISIONING means that provisioning is in progress.
            - ACTIVE means that the component is ready for use.
            - STALLED means that provisioning could not be done.
            - 'NEEDS_ATTENTION means that the component is ready, but some user intervention is required. (For example that the user should migrate workloads to a new control plane revision.)'
            - 'DEGRADED means that the component is ready, but operating in a degraded state.'
          description: Lifecycle status of data plane management.
          enum:
            - LIFECYCLE_STATE_UNSPECIFIED
            - DISABLED
            - FAILED_PRECONDITION
            - PROVISIONING
            - ACTIVE
            - STALLED
            - NEEDS_ATTENTION
            - DEGRADED
          type: string
        details:
          items:
            $ref: '#/components/schemas/ServiceMeshStatusDetails'
          type: array
          description: Explanation of the status.
      description: Status of data plane management. Only reported per-member.
    Empty:
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      id: Empty
      properties: {}
      type: object
    TestIamPermissionsRequest:
      properties:
        permissions:
          items:
            type: string
          description: 'The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).'
          type: array
      id: TestIamPermissionsRequest
      type: object
      description: Request message for `TestIamPermissions` method.
    Policy:
      id: Policy
      type: object
      description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp(''2020-10-01T00:00:00.000Z'')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).'
      properties:
        etag:
          description: '`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.'
          format: byte
          type: string
        bindings:
          description: 'Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.'
          type: array
          items:
            $ref: '#/components/schemas/Binding'
        version:
          type: integer
          format: int32
          description: 'Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
        auditConfigs:
          items:
            $ref: '#/components/schemas/AuditConfig'
          type: array
          description: Specifies cloud audit logging configuration for this policy.
    ConfigManagementInstallError:
      description: Errors pertaining to the installation of ACM
      properties:
        errorMessage:
          description: A string representing the user facing error message
          type: string
      id: ConfigManagementInstallError
      type: object
    FleetObservabilityLoggingConfig:
      type: object
      id: FleetObservabilityLoggingConfig
      properties:
        defaultConfig:
          $ref: '#/components/schemas/FleetObservabilityRoutingConfig'
          description: Specified if applying the default routing config to logs not specified in other configs.
        fleetScopeLogsConfig:
          $ref: '#/components/schemas/FleetObservabilityRoutingConfig'
          description: Specified if applying the routing config to all logs for all fleet scopes.
      description: LoggingConfig defines the configuration for different types of logs.
    EdgeCluster:
      type: object
      description: EdgeCluster contains information specific to Google Edge Clusters.
      properties:
        resourceLink:
          type: string
          description: 'Immutable. Self-link of the Google Cloud resource for the Edge Cluster. For example: //edgecontainer.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster'
      id: EdgeCluster
    IdentityServiceMembershipSpec:
      properties:
        authMethods:
          items:
            $ref: '#/components/schemas/IdentityServiceAuthMethod'
          type: array
          description: A member may support multiple auth methods.
      description: '**Anthos Identity Service**: Configuration for a single Membership.'
      type: object
      id: IdentityServiceMembershipSpec
    ServiceMeshControlPlaneManagement:
      properties:
        state:
          enumDescriptions:
            - Unspecified
            - DISABLED means that the component is not enabled.
            - FAILED_PRECONDITION means that provisioning cannot proceed because of some characteristic of the member cluster.
            - PROVISIONING means that provisioning is in progress.
            - ACTIVE means that the component is ready for use.
            - STALLED means that provisioning could not be done.
            - 'NEEDS_ATTENTION means that the component is ready, but some user intervention is required. (For example that the user should migrate workloads to a new control plane revision.)'
            - 'DEGRADED means that the component is ready, but operating in a degraded state.'
          type: string
          enum:
            - LIFECYCLE_STATE_UNSPECIFIED
            - DISABLED
            - FAILED_PRECONDITION
            - PROVISIONING
            - ACTIVE
            - STALLED
            - NEEDS_ATTENTION
            - DEGRADED
          description: LifecycleState of control plane management.
        details:
          type: array
          items:
            $ref: '#/components/schemas/ServiceMeshStatusDetails'
          description: Explanation of state.
      type: object
      id: ServiceMeshControlPlaneManagement
      description: Status of control plane management.
    ConfigManagementGatekeeperDeploymentState:
      description: State of Policy Controller installation.
      properties:
        gatekeeperControllerManagerState:
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - 'Deployment was attempted to be installed, but has errors'
          description: Status of gatekeeper-controller-manager pod.
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          type: string
        gatekeeperAudit:
          description: Status of gatekeeper-audit deployment.
          type: string
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - 'Deployment was attempted to be installed, but has errors'
        gatekeeperMutation:
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - 'Deployment was attempted to be installed, but has errors'
          description: Status of the pod serving the mutation webhook.
      type: object
      id: ConfigManagementGatekeeperDeploymentState
    AppDevExperienceFeatureState:
      type: object
      id: AppDevExperienceFeatureState
      description: State for App Dev Exp Feature.
      properties:
        networkingInstallSucceeded:
          description: Status of subcomponent that detects configured Service Mesh resources.
          $ref: '#/components/schemas/Status'
    Scope:
      type: object
      id: Scope
      properties:
        uid:
          description: 'Output only. Google-generated UUID for this resource. This is unique across all scope resources. If a scope resource is deleted and another resource with the same name is created, it gets a different uid.'
          readOnly: true
          type: string
        deleteTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. When the scope was deleted.
        state:
          description: Output only. State of the scope resource.
          readOnly: true
          $ref: '#/components/schemas/ScopeLifecycleState'
        labels:
          description: Optional. Labels for this Scope.
          additionalProperties:
            type: string
          type: object
        updateTime:
          description: Output only. When the scope was last updated.
          readOnly: true
          type: string
          format: google-datetime
        name:
          type: string
          description: 'The resource name for the scope `projects/{project}/locations/{location}/scopes/{scope}`'
        allMemberships:
          description: 'If true, all Memberships in the Fleet bind to this Scope.'
          type: boolean
        createTime:
          readOnly: true
          description: Output only. When the scope was created.
          type: string
          format: google-datetime
      description: Scope represents a Scope in a Fleet.
    Authority:
      id: Authority
      properties:
        oidcJwks:
          type: string
          format: byte
          description: 'Optional. OIDC verification keys for this Membership in JWKS format (RFC 7517). When this field is set, OIDC discovery will NOT be performed on `issuer`, and instead OIDC tokens will be validated using this field.'
        identityProvider:
          description: Output only. An identity provider that reflects the `issuer` in the workload identity pool.
          readOnly: true
          type: string
        issuer:
          type: string
          description: 'Optional. A JSON Web Token (JWT) issuer URI. `issuer` must start with `https://` and be a valid URL with length <2000 characters. If set, then Google will allow valid OIDC tokens from this issuer to authenticate within the workload_identity_pool. OIDC discovery will be performed on this URI to validate tokens from the issuer. Clearing `issuer` disables Workload Identity. `issuer` cannot be directly modified; it must be cleared (and Workload Identity disabled) before using a new issuer (and re-enabling Workload Identity).'
        workloadIdentityPool:
          type: string
          description: 'Output only. The name of the workload identity pool in which `issuer` will be recognized. There is a single Workload Identity Pool per Hub that is shared between all Memberships that belong to that Hub. For a Hub hosted in {PROJECT_ID}, the workload pool format is `{PROJECT_ID}.hub.id.goog`, although this is subject to change in newer versions of this API.'
          readOnly: true
      description: 'Authority encodes how Google will recognize identities from this Membership. See the workload identity documentation for more details: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity'
      type: object
    ConfigManagementPolicyControllerMigration:
      type: object
      description: State for the migration of PolicyController from ACM -> PoCo Hub.
      id: ConfigManagementPolicyControllerMigration
      properties:
        copyTime:
          type: string
          format: google-datetime
          description: Last time this membership spec was copied to PoCo feature.
        stage:
          description: Stage of the migration.
          type: string
          enum:
            - STAGE_UNSPECIFIED
            - ACM_MANAGED
            - POCO_MANAGED
          enumDescriptions:
            - Unknown state of migration.
            - ACM Hub/Operator manages policycontroller. No migration yet completed.
            - All migrations steps complete; Poco Hub now manages policycontroller.
    ListMembershipsResponse:
      type: object
      id: ListMembershipsResponse
      properties:
        nextPageToken:
          type: string
          description: A token to request the next page of resources from the `ListMemberships` method. The value of an empty string means that there are no more resources to return.
        resources:
          type: array
          description: The list of matching Memberships.
          items:
            $ref: '#/components/schemas/Membership'
        unreachable:
          type: array
          description: List of locations that could not be reached while fetching this list.
          items:
            type: string
      description: Response message for the `GkeHub.ListMemberships` method.
    ServiceMeshMembershipSpec:
      id: ServiceMeshMembershipSpec
      type: object
      properties:
        controlPlane:
          enum:
            - CONTROL_PLANE_MANAGEMENT_UNSPECIFIED
            - AUTOMATIC
            - MANUAL
          type: string
          enumDescriptions:
            - Unspecified
            - 'Google should provision a control plane revision and make it available in the cluster. Google will enroll this revision in a release channel and keep it up to date. The control plane revision may be a managed service, or a managed install.'
            - 'User will manually configure the control plane (e.g. via CLI, or via the ControlPlaneRevision KRM API)'
          deprecated: true
          description: 'Deprecated: use `management` instead Enables automatic control plane management.'
        management:
          type: string
          description: Enables automatic Service Mesh management.
          enum:
            - MANAGEMENT_UNSPECIFIED
            - MANAGEMENT_AUTOMATIC
            - MANAGEMENT_MANUAL
          enumDescriptions:
            - Unspecified
            - Google should manage my Service Mesh for the cluster.
            - User will manually configure their service mesh components.
      description: '**Service Mesh**: Spec for a single Membership for the servicemesh feature'
    ConfigManagementPolicyControllerState:
      description: State for PolicyControllerState.
      properties:
        migration:
          $ref: '#/components/schemas/ConfigManagementPolicyControllerMigration'
          description: Record state of ACM -> PoCo Hub migration for this feature.
        version:
          $ref: '#/components/schemas/ConfigManagementPolicyControllerVersion'
          description: The version of Gatekeeper Policy Controller deployed.
        deploymentState:
          $ref: '#/components/schemas/ConfigManagementGatekeeperDeploymentState'
          description: The state about the policy controller installation.
      type: object
      id: ConfigManagementPolicyControllerState
    FleetObservabilityFeatureSpec:
      type: object
      id: FleetObservabilityFeatureSpec
      properties:
        loggingConfig:
          $ref: '#/components/schemas/FleetObservabilityLoggingConfig'
          description: 'Specified if fleet logging feature is enabled for the entire fleet. If UNSPECIFIED, fleet logging feature is disabled for the entire fleet.'
      description: '**Fleet Observability**: The Hub-wide input for the FleetObservability feature.'
    Status:
      properties:
        description:
          description: 'Description is populated if Code is Failed, explaining why it has failed.'
          type: string
        code:
          description: Code specifies AppDevExperienceFeature's subcomponent ready state.
          enum:
            - CODE_UNSPECIFIED
            - OK
            - FAILED
            - UNKNOWN
          type: string
          enumDescriptions:
            - Not set.
            - AppDevExperienceFeature's specified subcomponent is ready.
            - 'AppDevExperienceFeature''s specified subcomponent ready state is false. This means AppDevExperienceFeature has encountered an issue that blocks all, or a portion, of its normal operation. See the `description` for more details.'
            - AppDevExperienceFeature's specified subcomponent has a pending or unknown state.
      id: Status
      description: Status specifies state for the subcomponent.
      type: object
    ConfigManagementSyncError:
      description: An ACM created error representing a problem syncing configurations
      properties:
        code:
          type: string
          description: An ACM defined error code
        errorMessage:
          type: string
          description: A description of the error
        errorResources:
          description: 'A list of config(s) associated with the error, if any'
          items:
            $ref: '#/components/schemas/ConfigManagementErrorResource'
          type: array
      type: object
      id: ConfigManagementSyncError
    MultiClusterIngressFeatureSpec:
      properties:
        configMembership:
          type: string
          description: 'Fully-qualified Membership name which hosts the MultiClusterIngress CRD. Example: `projects/foo-proj/locations/global/memberships/bar`'
      type: object
      description: '**Multi-cluster Ingress**: The configuration for the MultiClusterIngress feature.'
      id: MultiClusterIngressFeatureSpec
    Membership:
      description: Membership contains information about a member cluster.
      properties:
        createTime:
          readOnly: true
          type: string
          description: Output only. When the Membership was created.
          format: google-datetime
        externalId:
          description: 'Optional. An externally-generated and managed ID for this Membership. This ID may be modified after creation, but this is not recommended. The ID must match the regex: `a-zA-Z0-9*` If this Membership represents a Kubernetes cluster, this value should be set to the UID of the `kube-system` namespace object.'
          type: string
        description:
          readOnly: true
          description: 'Output only. Description of this membership, limited to 63 characters. Must match the regex: `a-zA-Z0-9*` This field is present for legacy purposes.'
          type: string
        state:
          $ref: '#/components/schemas/MembershipState'
          readOnly: true
          description: Output only. State of the Membership resource.
        monitoringConfig:
          $ref: '#/components/schemas/MonitoringConfig'
          description: Optional. The monitoring config information for this membership.
        authority:
          $ref: '#/components/schemas/Authority'
          description: 'Optional. How to identify workloads from this Membership. See the documentation on Workload Identity for more details: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity'
        lastConnectionTime:
          readOnly: true
          type: string
          description: 'Output only. For clusters using Connect, the timestamp of the most recent connection established with Google Cloud. This time is updated every several minutes, not continuously. For clusters that do not use GKE Connect, or that have never connected successfully, this field will be unset.'
          format: google-datetime
        name:
          description: 'Output only. The full, unique name of this Membership resource in the format `projects/*/locations/*/memberships/{membership_id}`, set during creation. `membership_id` must be a valid RFC 1123 compliant DNS label: 1. At most 63 characters in length 2. It must consist of lower case alphanumeric characters or `-` 3. It must start and end with an alphanumeric character Which can be expressed as the regex: `[a-z0-9]([-a-z0-9]*[a-z0-9])?`, with a maximum length of 63 characters.'
          readOnly: true
          type: string
        updateTime:
          format: google-datetime
          description: Output only. When the Membership was last updated.
          type: string
          readOnly: true
        uniqueId:
          type: string
          readOnly: true
          description: 'Output only. Google-generated UUID for this resource. This is unique across all Membership resources. If a Membership resource is deleted and another resource with the same name is created, it gets a different unique_id.'
        deleteTime:
          description: Output only. When the Membership was deleted.
          type: string
          readOnly: true
          format: google-datetime
        labels:
          additionalProperties:
            type: string
          description: Optional. Labels for this membership.
          type: object
        endpoint:
          $ref: '#/components/schemas/MembershipEndpoint'
          description: Optional. Endpoint information to reach this member.
      id: Membership
      type: object
    GkeCluster:
      description: GkeCluster contains information specific to GKE clusters.
      id: GkeCluster
      properties:
        resourceLink:
          description: 'Immutable. Self-link of the Google Cloud resource for the GKE cluster. For example: //container.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster Zonal clusters are also supported.'
          type: string
        clusterMissing:
          type: boolean
          readOnly: true
          description: Output only. If cluster_missing is set then it denotes that the GKE cluster no longer exists in the GKE Control Plane.
      type: object
    ConfigManagementMembershipState:
      properties:
        clusterName:
          type: string
          description: 'This field is set to the `cluster_name` field of the Membership Spec if it is not empty. Otherwise, it is set to the cluster''s fleet membership name.'
        operatorState:
          description: Current install status of ACM's Operator
          $ref: '#/components/schemas/ConfigManagementOperatorState'
        configSyncState:
          description: Current sync status
          $ref: '#/components/schemas/ConfigManagementConfigSyncState'
        policyControllerState:
          description: PolicyController status
          $ref: '#/components/schemas/ConfigManagementPolicyControllerState'
        hierarchyControllerState:
          description: Hierarchy Controller status
          $ref: '#/components/schemas/ConfigManagementHierarchyControllerState'
        membershipSpec:
          description: 'Membership configuration in the cluster. This represents the actual state in the cluster, while the MembershipSpec in the FeatureSpec represents the intended state'
          $ref: '#/components/schemas/ConfigManagementMembershipSpec'
      type: object
      id: ConfigManagementMembershipState
      description: '**Anthos Config Management**: State for a single cluster.'
    IdentityServiceOidcConfig:
      type: object
      id: IdentityServiceOidcConfig
      properties:
        groupsClaim:
          description: Claim in OIDC ID token that holds group information.
          type: string
        clientSecret:
          description: Input only. Unencrypted OIDC client secret will be passed to the GKE Hub CLH.
          type: string
        enableAccessToken:
          description: Enable access token.
          type: boolean
        encryptedClientSecret:
          description: Output only. Encrypted OIDC Client secret
          format: byte
          type: string
          readOnly: true
        userClaim:
          description: Claim in OIDC ID token that holds username.
          type: string
        clientId:
          type: string
          description: ID for OIDC client application.
        extraParams:
          description: Comma-separated list of key-value pairs.
          type: string
        issuerUri:
          type: string
          description: URI for the OIDC provider. This should point to the level below .well-known/openid-configuration.
        certificateAuthorityData:
          type: string
          description: PEM-encoded CA for OIDC provider.
        kubectlRedirectUri:
          description: Registered redirect uri to redirect users going through OAuth flow using kubectl plugin.
          type: string
        groupPrefix:
          description: Prefix to prepend to group name.
          type: string
        scopes:
          description: Comma-separated list of identifiers.
          type: string
        deployCloudConsoleProxy:
          type: boolean
          description: Flag to denote if reverse proxy is used to connect to auth provider. This flag should be set to true when provider is not reachable by Google Cloud Console.
        userPrefix:
          description: Prefix to prepend to user name.
          type: string
      description: Configuration for OIDC Auth flow.
    ServiceMeshMembershipState:
      description: '**Service Mesh**: State for a single Membership, as analyzed by the Service Mesh Hub Controller.'
      id: ServiceMeshMembershipState
      properties:
        controlPlaneManagement:
          $ref: '#/components/schemas/ServiceMeshControlPlaneManagement'
          readOnly: true
          description: Output only. Status of control plane management
        dataPlaneManagement:
          description: Output only. Status of data plane management.
          readOnly: true
          $ref: '#/components/schemas/ServiceMeshDataPlaneManagement'
      type: object
    OperationMetadata:
      properties:
        apiVersion:
          type: string
          readOnly: true
          description: Output only. API version used to start the operation.
        statusDetail:
          readOnly: true
          type: string
          description: 'Output only. Human-readable status of the operation, if any.'
        target:
          readOnly: true
          type: string
          description: Output only. Server-defined resource path for the target of the operation.
        verb:
          readOnly: true
          type: string
          description: Output only. Name of the verb executed by the operation.
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation was created.
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        cancelRequested:
          description: 'Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
          readOnly: true
          type: boolean
      id: OperationMetadata
      type: object
      description: Represents the metadata of the long-running operation.
    ConfigManagementMembershipSpec:
      id: ConfigManagementMembershipSpec
      type: object
      description: '**Anthos Config Management**: Configuration for a single cluster. Intended to parallel the ConfigManagement CR.'
      properties:
        version:
          description: Version of ACM installed.
          type: string
        hierarchyController:
          description: Hierarchy Controller configuration for the cluster.
          $ref: '#/components/schemas/ConfigManagementHierarchyControllerConfig'
        management:
          description: Enables automatic Feature management.
          enumDescriptions:
            - Unspecified
            - Google will manage the Feature for the cluster.
            - User will manually manage the Feature for the cluster.
          type: string
          enum:
            - MANAGEMENT_UNSPECIFIED
            - MANAGEMENT_AUTOMATIC
            - MANAGEMENT_MANUAL
        cluster:
          description: 'The user-specified cluster name used by Config Sync cluster-name-selector annotation or ClusterSelector, for applying configs to only a subset of clusters. Omit this field if the cluster''s fleet membership name is used by Config Sync cluster-name-selector annotation or ClusterSelector. Set this field if a name different from the cluster''s fleet membership name is used by Config Sync cluster-name-selector annotation or ClusterSelector.'
          type: string
        policyController:
          description: Policy Controller configuration for the cluster.
          $ref: '#/components/schemas/ConfigManagementPolicyController'
        configSync:
          description: Config Sync configuration for the cluster.
          $ref: '#/components/schemas/ConfigManagementConfigSync'
    ConfigManagementOciConfig:
      description: OCI repo configuration for a single cluster
      properties:
        syncRepo:
          type: string
          description: The OCI image repository URL for the package to sync from. e.g. `LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY_NAME/PACKAGE_NAME`.
        gcpServiceAccountEmail:
          type: string
          description: The Google Cloud Service Account Email used for auth when secret_type is gcpServiceAccount.
        secretType:
          description: Type of secret configured for access to the Git repo.
          type: string
        syncWaitSecs:
          format: int64
          type: string
          description: 'Period in seconds between consecutive syncs. Default: 15.'
        policyDir:
          type: string
          description: 'The absolute path of the directory that contains the local resources. Default: the root directory of the image.'
      type: object
      id: ConfigManagementOciConfig
    Expr:
      properties:
        title:
          type: string
          description: 'Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.'
        description:
          type: string
          description: 'Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.'
        expression:
          description: Textual representation of an expression in Common Expression Language syntax.
          type: string
        location:
          type: string
          description: 'Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.'
      id: Expr
      type: object
      description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != ''private'' && document.type != ''internal''" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "''New message received at '' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.'
    TestIamPermissionsResponse:
      id: TestIamPermissionsResponse
      properties:
        permissions:
          items:
            type: string
          type: array
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
      type: object
      description: Response message for `TestIamPermissions` method.
    ScopeFeatureState:
      properties:
        state:
          readOnly: true
          description: Output only. The "running state" of the Feature in this Scope.
          $ref: '#/components/schemas/FeatureState'
      type: object
      description: ScopeFeatureState contains Scope-wide Feature status information.
      id: ScopeFeatureState
    OnPremCluster:
      description: OnPremCluster contains information specific to GKE On-Prem clusters.
      id: OnPremCluster
      type: object
      properties:
        resourceLink:
          description: 'Immutable. Self-link of the Google Cloud resource for the GKE On-Prem cluster. For example: //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/vmwareClusters/my-cluster //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/bareMetalClusters/my-cluster'
          type: string
        adminCluster:
          description: Immutable. Whether the cluster is an admin cluster.
          type: boolean
        clusterType:
          description: Immutable. The on prem cluster's type.
          type: string
          enumDescriptions:
            - The ClusterType is not set.
            - The ClusterType is bootstrap cluster.
            - The ClusterType is baremetal hybrid cluster.
            - The ClusterType is baremetal standalone cluster.
            - The ClusterType is user cluster.
          enum:
            - CLUSTERTYPE_UNSPECIFIED
            - BOOTSTRAP
            - HYBRID
            - STANDALONE
            - USER
        clusterMissing:
          type: boolean
          readOnly: true
          description: Output only. If cluster_missing is set then it denotes that API(gkeonprem.googleapis.com) resource for this GKE On-Prem cluster no longer exists.
    Operation:
      id: Operation
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        done:
          type: boolean
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
        metadata:
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
        error:
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: The error result of the operation in case of failure or cancellation.
        name:
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
          type: string
        response:
          type: object
          description: 'The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
      type: object
    FleetObservabilityFeatureError:
      properties:
        code:
          type: string
          description: The code of the error.
        description:
          description: A human-readable description of the current status.
          type: string
      type: object
      id: FleetObservabilityFeatureError
      description: All error details of the fleet observability feature.
    FleetObservabilityMembershipState:
      type: object
      id: FleetObservabilityMembershipState
      properties: {}
      description: '**FleetObservability**: Membership-specific Feature state for fleetobservability.'
    AuditLogConfig:
      properties:
        logType:
          type: string
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          description: The log type that this config enables.
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
        exemptedMembers:
          type: array
          items:
            type: string
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
      description: 'Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables ''DATA_READ'' and ''DATA_WRITE'' logging, while exempting jose@example.com from DATA_READ logging.'
      type: object
      id: AuditLogConfig
    MembershipState:
      type: object
      id: MembershipState
      description: MembershipState describes the state of a Membership resource.
      properties:
        code:
          readOnly: true
          description: Output only. The current state of the Membership resource.
          enum:
            - CODE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - UPDATING
            - SERVICE_UPDATING
          type: string
          enumDescriptions:
            - The code is not set.
            - The cluster is being registered.
            - The cluster is registered.
            - The cluster is being unregistered.
            - The Membership is being updated.
            - The Membership is being updated by the Hub Service.
    KubernetesMetadata:
      properties:
        nodeProviderId:
          type: string
          readOnly: true
          description: 'Output only. Node providerID as reported by the first node in the list of nodes on the Kubernetes endpoint. On Kubernetes platforms that support zero-node clusters (like GKE-on-GCP), the node_count will be zero and the node_provider_id will be empty.'
        nodeCount:
          description: Output only. Node count as reported by Kubernetes nodes resources.
          format: int32
          type: integer
          readOnly: true
        memoryMb:
          description: 'Output only. The total memory capacity as reported by the sum of all Kubernetes nodes resources, defined in MB.'
          type: integer
          format: int32
          readOnly: true
        vcpuCount:
          description: Output only. vCPU count as reported by Kubernetes nodes resources.
          readOnly: true
          type: integer
          format: int32
        updateTime:
          description: Output only. The time at which these details were last updated. This update_time is different from the Membership-level update_time since EndpointDetails are updated internally for API consumers.
          type: string
          format: google-datetime
          readOnly: true
        kubernetesApiServerVersion:
          description: Output only. Kubernetes API server version string as reported by `/version`.
          type: string
          readOnly: true
      type: object
      id: KubernetesMetadata
      description: KubernetesMetadata provides informational metadata for Memberships representing Kubernetes clusters.
    ApplianceCluster:
      type: object
      id: ApplianceCluster
      description: ApplianceCluster contains information specific to GDC Edge Appliance Clusters.
      properties:
        resourceLink:
          description: 'Immutable. Self-link of the Google Cloud resource for the Appliance Cluster. For example: //transferappliance.googleapis.com/projects/my-project/locations/us-west1-a/appliances/my-appliance'
          type: string
    CommonFeatureSpec:
      properties:
        fleetobservability:
          description: FleetObservability feature spec.
          $ref: '#/components/schemas/FleetObservabilityFeatureSpec'
        appdevexperience:
          description: Appdevexperience specific spec.
          $ref: '#/components/schemas/AppDevExperienceFeatureSpec'
        multiclusteringress:
          description: Multicluster Ingress-specific spec.
          $ref: '#/components/schemas/MultiClusterIngressFeatureSpec'
      id: CommonFeatureSpec
      description: CommonFeatureSpec contains Hub-wide configuration information
      type: object
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the request.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
      type: object
      id: ListOperationsResponse
    ConfigManagementPolicyControllerMonitoring:
      id: ConfigManagementPolicyControllerMonitoring
      type: object
      description: 'PolicyControllerMonitoring specifies the backends Policy Controller should export metrics to. For example, to specify metrics should be exported to Cloud Monitoring and Prometheus, specify backends: ["cloudmonitoring", "prometheus"]'
      properties:
        backends:
          description: Specifies the list of backends Policy Controller will export to. An empty list would effectively disable metrics export.
          type: array
          items:
            type: string
            enumDescriptions:
              - Backend cannot be determined
              - Prometheus backend for monitoring
              - Stackdriver/Cloud Monitoring backend for monitoring
            enum:
              - MONITORING_BACKEND_UNSPECIFIED
              - PROMETHEUS
              - CLOUD_MONITORING
    Binding:
      id: Binding
      type: object
      description: 'Associates `members`, or principals, with a `role`.'
      properties:
        role:
          type: string
          description: 'Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.'
        condition:
          description: 'The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
          $ref: '#/components/schemas/Expr'
        members:
          description: 'Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.'
          type: array
          items:
            type: string
    MembershipFeatureState:
      id: MembershipFeatureState
      type: object
      description: MembershipFeatureState contains Feature status information for a single Membership.
      properties:
        appdevexperience:
          $ref: '#/components/schemas/AppDevExperienceFeatureState'
          description: Appdevexperience specific state.
        fleetobservability:
          $ref: '#/components/schemas/FleetObservabilityMembershipState'
          description: Fleet observability membership state.
        identityservice:
          $ref: '#/components/schemas/IdentityServiceMembershipState'
          description: Identity Service-specific state.
        servicemesh:
          description: Service Mesh-specific state.
          $ref: '#/components/schemas/ServiceMeshMembershipState'
        configmanagement:
          $ref: '#/components/schemas/ConfigManagementMembershipState'
          description: Config Management-specific state.
        state:
          $ref: '#/components/schemas/FeatureState'
          description: The high-level state of this Feature for a single membership.
    AppDevExperienceFeatureSpec:
      description: Spec for App Dev Experience Feature.
      type: object
      properties: {}
      id: AppDevExperienceFeatureSpec
    TypeMeta:
      properties:
        apiVersion:
          type: string
          description: APIVersion of the resource (e.g. v1).
        kind:
          description: Kind of the resource (e.g. Deployment).
          type: string
      id: TypeMeta
      type: object
      description: TypeMeta is the type information needed for content unmarshalling of Kubernetes resources in the manifest.
    Origin:
      properties:
        type:
          description: Type specifies which type of origin is set.
          enumDescriptions:
            - Type is unknown or not set.
            - Per-Membership spec was inherited from the fleet-level default.
            - Per-Membership spec was inherited from a user specification.
          enum:
            - TYPE_UNSPECIFIED
            - FLEET
            - USER
          type: string
      type: object
      id: Origin
      description: Origin defines where this MembershipFeatureSpec originated from.
    CommonFleetDefaultMemberConfigSpec:
      properties: {}
      description: CommonFleetDefaultMemberConfigSpec contains default configuration information for memberships of a fleet
      id: CommonFleetDefaultMemberConfigSpec
      type: object
    FleetObservabilityRoutingConfig:
      type: object
      description: RoutingConfig configures the behaviour of fleet logging feature.
      properties:
        mode:
          enumDescriptions:
            - 'If UNSPECIFIED, fleet logging feature is disabled.'
            - logs will be copied to the destination project.
            - logs will be moved to the destination project.
          enum:
            - MODE_UNSPECIFIED
            - COPY
            - MOVE
          type: string
          description: mode configures the logs routing mode.
      id: FleetObservabilityRoutingConfig
    ConfigManagementPolicyControllerVersion:
      properties:
        version:
          description: 'The gatekeeper image tag that is composed of ACM version, git tag, build number.'
          type: string
      description: The build version of Gatekeeper Policy Controller is using.
      type: object
      id: ConfigManagementPolicyControllerVersion
    ConfigManagementSyncState:
      id: ConfigManagementSyncState
      properties:
        errors:
          items:
            $ref: '#/components/schemas/ConfigManagementSyncError'
          description: 'A list of errors resulting from problematic configs. This list will be truncated after 100 errors, although it is unlikely for that many errors to simultaneously exist.'
          type: array
        importToken:
          type: string
          description: Token indicating the state of the importer.
        syncToken:
          description: Token indicating the state of the syncer.
          type: string
        sourceToken:
          description: Token indicating the state of the repo.
          type: string
        lastSync:
          description: 'Deprecated: use last_sync_time instead. Timestamp of when ACM last successfully synced the repo The time format is specified in https://golang.org/pkg/time/#Time.String'
          type: string
          deprecated: true
        lastSyncTime:
          description: Timestamp type of when ACM last successfully synced the repo
          type: string
          format: google-datetime
        code:
          description: Sync status code
          enum:
            - SYNC_CODE_UNSPECIFIED
            - SYNCED
            - PENDING
            - ERROR
            - NOT_CONFIGURED
            - NOT_INSTALLED
            - UNAUTHORIZED
            - UNREACHABLE
          type: string
          enumDescriptions:
            - ACM cannot determine a sync code
            - ACM successfully synced the git Repo with the cluster
            - ACM is in the progress of syncing a new change
            - 'Indicates an error configuring ACM, and user action is required'
            - 'ACM has been installed (operator manifest deployed), but not configured.'
            - ACM has not been installed (no operator pod found)
            - Error authorizing with the cluster
            - Cluster could not be reached
      description: State indicating an ACM's progress syncing configurations to a cluster
      type: object
    GoogleRpcStatus:
      properties:
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          type: array
          items:
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
            type: object
        code:
          type: integer
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          format: int32
        message:
          type: string
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
      id: GoogleRpcStatus
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      type: object
    FeatureResourceState:
      id: FeatureResourceState
      type: object
      properties:
        state:
          description: The current state of the Feature resource in the Hub API.
          enum:
            - STATE_UNSPECIFIED
            - ENABLING
            - ACTIVE
            - DISABLING
            - UPDATING
            - SERVICE_UPDATING
          enumDescriptions:
            - State is unknown or not set.
            - 'The Feature is being enabled, and the Feature resource is being created. Once complete, the corresponding Feature will be enabled in this Hub.'
            - 'The Feature is enabled in this Hub, and the Feature resource is fully available.'
            - 'The Feature is being disabled in this Hub, and the Feature resource is being deleted.'
            - The Feature resource is being updated.
            - The Feature resource is being updated by the Hub Service.
          type: string
      description: FeatureResourceState describes the state of a Feature *resource* in the GkeHub API. See `FeatureState` for the "running state" of the Feature in the Hub and across Memberships.
    MembershipFeatureSpec:
      description: 'MembershipFeatureSpec contains configuration information for a single Membership. NOTE: Please use snake case in your feature name.'
      id: MembershipFeatureSpec
      properties:
        identityservice:
          $ref: '#/components/schemas/IdentityServiceMembershipSpec'
          description: Identity Service-specific spec.
        fleetobservability:
          $ref: '#/components/schemas/FleetObservabilityMembershipSpec'
          description: Fleet observability membership spec
        configmanagement:
          $ref: '#/components/schemas/ConfigManagementMembershipSpec'
          description: Config Management-specific spec.
        origin:
          description: Whether this per-Membership spec was inherited from a fleet-level default. This field can be updated by users by either overriding a Membership config (updated to USER implicitly) or setting to FLEET explicitly.
          $ref: '#/components/schemas/Origin'
        mesh:
          $ref: '#/components/schemas/ServiceMeshMembershipSpec'
          description: Anthos Service Mesh-specific spec
      type: object
    ConfigManagementConfigSyncVersion:
      properties:
        admissionWebhook:
          description: Version of the deployed admission_webhook pod
          type: string
        gitSync:
          description: Version of the deployed git-sync pod
          type: string
        monitor:
          type: string
          description: Version of the deployed monitor pod
        reconcilerManager:
          type: string
          description: Version of the deployed reconciler-manager pod
        importer:
          description: Version of the deployed importer pod
          type: string
        rootReconciler:
          type: string
          description: Version of the deployed reconciler container in root-reconciler pod
        syncer:
          description: Version of the deployed syncer pod
          type: string
      description: Specific versioning information pertaining to ConfigSync's Pods
      id: ConfigManagementConfigSyncVersion
      type: object
    KubernetesResource:
      type: object
      properties:
        connectResources:
          readOnly: true
          type: array
          description: 'Output only. The Kubernetes resources for installing the GKE Connect agent This field is only populated in the Membership returned from a successful long-running operation from CreateMembership or UpdateMembership. It is not populated during normal GetMembership or ListMemberships requests. To get the resource manifest after the initial registration, the caller should make a UpdateMembership call with an empty field mask.'
          items:
            $ref: '#/components/schemas/ResourceManifest'
        membershipCrManifest:
          type: string
          description: 'Input only. The YAML representation of the Membership CR. This field is ignored for GKE clusters where Hub can read the CR directly. Callers should provide the CR that is currently present in the cluster during CreateMembership or UpdateMembership, or leave this field empty if none exists. The CR manifest is used to validate the cluster has not been registered with another Membership.'
        resourceOptions:
          $ref: '#/components/schemas/ResourceOptions'
          description: Optional. Options for Kubernetes resource generation.
        membershipResources:
          readOnly: true
          description: 'Output only. Additional Kubernetes resources that need to be applied to the cluster after Membership creation, and after every update. This field is only populated in the Membership returned from a successful long-running operation from CreateMembership or UpdateMembership. It is not populated during normal GetMembership or ListMemberships requests. To get the resource manifest after the initial registration, the caller should make a UpdateMembership call with an empty field mask.'
          type: array
          items:
            $ref: '#/components/schemas/ResourceManifest'
      description: 'KubernetesResource contains the YAML manifests and configuration for Membership Kubernetes resources in the cluster. After CreateMembership or UpdateMembership, these resources should be re-applied in the cluster.'
      id: KubernetesResource
    IdentityServiceAzureADConfig:
      id: IdentityServiceAzureADConfig
      properties:
        encryptedClientSecret:
          description: Output only. Encrypted AzureAD client secret.
          readOnly: true
          format: byte
          type: string
        clientSecret:
          type: string
          description: Input only. Unencrypted AzureAD client secret will be passed to the GKE Hub CLH.
        tenant:
          description: Kind of Azure AD account to be authenticated. Supported values are or for accounts belonging to a specific tenant.
          type: string
        kubectlRedirectUri:
          description: The redirect URL that kubectl uses for authorization.
          type: string
        clientId:
          description: ID for the registered client application that makes authentication requests to the Azure AD identity provider.
          type: string
      type: object
      description: Configuration for the AzureAD Auth flow.
    ScopeLifecycleState:
      description: ScopeLifecycleState describes the state of a Scope resource.
      id: ScopeLifecycleState
      properties:
        code:
          description: Output only. The current state of the scope resource.
          enum:
            - CODE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - UPDATING
          enumDescriptions:
            - The code is not set.
            - The scope is being created.
            - The scope active.
            - The scope is being deleted.
            - The scope is being updated.
          readOnly: true
          type: string
      type: object
    ConfigManagementHierarchyControllerDeploymentState:
      properties:
        extension:
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - 'Deployment was attempted to be installed, but has errors'
          description: The deployment state for Hierarchy Controller extension (e.g. v0.7.0-hc.1)
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          type: string
        hnc:
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - 'Deployment was attempted to be installed, but has errors'
          description: The deployment state for open source HNC (e.g. v0.7.0-hc.0)
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
      type: object
      description: Deployment state for Hierarchy Controller
      id: ConfigManagementHierarchyControllerDeploymentState
    ConfigManagementGroupVersionKind:
      type: object
      properties:
        group:
          type: string
          description: Kubernetes Group
        kind:
          description: Kubernetes Kind
          type: string
        version:
          description: Kubernetes Version
          type: string
      description: A Kubernetes object's GVK
      id: ConfigManagementGroupVersionKind
    FeatureState:
      properties:
        code:
          description: 'The high-level, machine-readable status of this Feature.'
          enumDescriptions:
            - Unknown or not set.
            - The Feature is operating normally.
            - 'The Feature has encountered an issue, and is operating in a degraded state. The Feature may need intervention to return to normal operation. See the description and any associated Feature-specific details for more information.'
            - The Feature is not operating or is in a severely degraded state. The Feature may need intervention to return to normal operation. See the description and any associated Feature-specific details for more information.
          type: string
          enum:
            - CODE_UNSPECIFIED
            - OK
            - WARNING
            - ERROR
        description:
          description: A human-readable description of the current status.
          type: string
        updateTime:
          format: google-datetime
          type: string
          description: The time this status and any related Feature-specific details were updated.
      type: object
      id: FeatureState
      description: 'FeatureState describes the high-level state of a Feature. It may be used to describe a Feature''s state at the environ-level, or per-membershop, depending on the context.'
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      id: ListLocationsResponse
      properties:
        locations:
          type: array
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    Location:
      id: Location
      properties:
        labels:
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          type: object
          additionalProperties:
            type: string
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
        metadata:
          description: Service-specific metadata. For example the available capacity at the given location.
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          description: 'The friendly name for this location, typically a nearby city name. For example, "Tokyo".'
          type: string
      description: A resource that represents a Google Cloud location.
      type: object
    ResourceManifest:
      description: ResourceManifest represents a single Kubernetes resource to be applied to the cluster.
      type: object
      id: ResourceManifest
      properties:
        manifest:
          description: YAML manifest of the resource.
          type: string
        clusterScoped:
          description: 'Whether the resource provided in the manifest is `cluster_scoped`. If unset, the manifest is assumed to be namespace scoped. This field is used for REST mapping when applying the resource in a cluster.'
          type: boolean
    ConfigManagementHierarchyControllerVersion:
      description: Version for Hierarchy Controller
      type: object
      id: ConfigManagementHierarchyControllerVersion
      properties:
        extension:
          type: string
          description: Version for Hierarchy Controller extension
        hnc:
          type: string
          description: Version for open source HNC
    ConfigManagementHierarchyControllerState:
      properties:
        version:
          description: The version for Hierarchy Controller
          $ref: '#/components/schemas/ConfigManagementHierarchyControllerVersion'
        state:
          description: The deployment state for Hierarchy Controller
          $ref: '#/components/schemas/ConfigManagementHierarchyControllerDeploymentState'
      description: State for Hierarchy Controller
      id: ConfigManagementHierarchyControllerState
      type: object
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      type: object
      properties:
        policy:
          $ref: '#/components/schemas/Policy'
          description: 'REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.'
        updateMask:
          type: string
          format: google-fieldmask
          description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`'
      id: SetIamPolicyRequest
    FleetLifecycleState:
      id: FleetLifecycleState
      type: object
      properties:
        code:
          description: Output only. The current state of the Fleet resource.
          enumDescriptions:
            - The code is not set.
            - The fleet is being created.
            - The fleet active.
            - The fleet is being deleted.
            - The fleet is being updated.
          type: string
          readOnly: true
          enum:
            - CODE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - UPDATING
      description: FleetLifecycleState describes the state of a Fleet resource.
    ScopeFeatureSpec:
      properties: {}
      description: ScopeFeatureSpec contains feature specs for a fleet scope.
      id: ScopeFeatureSpec
      type: object
    GenerateConnectManifestResponse:
      type: object
      id: GenerateConnectManifestResponse
      description: GenerateConnectManifestResponse contains manifest information for installing/upgrading a Connect agent.
      properties:
        manifest:
          description: The ordered list of Kubernetes resources that need to be applied to the cluster for GKE Connect agent installation/upgrade.
          type: array
          items:
            $ref: '#/components/schemas/ConnectAgentResource'
    ListFeaturesResponse:
      properties:
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
          description: The list of matching Features
        nextPageToken:
          description: A token to request the next page of resources from the `ListFeatures` method. The value of an empty string means that there are no more resources to return.
          type: string
      type: object
      description: Response message for the `GkeHub.ListFeatures` method.
      id: ListFeaturesResponse
    ConfigManagementHierarchyControllerConfig:
      description: Configuration for Hierarchy Controller
      type: object
      properties:
        enablePodTreeLabels:
          type: boolean
          description: Whether pod tree labels are enabled in this cluster.
        enabled:
          type: boolean
          description: Whether Hierarchy Controller is enabled in this cluster.
        enableHierarchicalResourceQuota:
          type: boolean
          description: Whether hierarchical resource quota is enabled in this cluster.
      id: ConfigManagementHierarchyControllerConfig
    IdentityServiceAuthMethod:
      type: object
      id: IdentityServiceAuthMethod
      properties:
        googleConfig:
          description: GoogleConfig specific configuration.
          $ref: '#/components/schemas/IdentityServiceGoogleConfig'
        oidcConfig:
          description: OIDC specific configuration.
          $ref: '#/components/schemas/IdentityServiceOidcConfig'
        proxy:
          type: string
          description: Proxy server address to use for auth method.
        azureadConfig:
          description: AzureAD specific Configuration.
          $ref: '#/components/schemas/IdentityServiceAzureADConfig'
        name:
          description: Identifier for auth config.
          type: string
      description: 'Configuration of an auth method for a member/cluster. Only one authentication method (e.g., OIDC and LDAP) can be set per AuthMethod.'
    IdentityServiceGoogleConfig:
      properties:
        disable:
          description: Disable automatic configuration of Google Plugin on supported platforms.
          type: boolean
      type: object
      description: Configuration for the Google Plugin Auth flow.
      id: IdentityServiceGoogleConfig
    ConfigManagementErrorResource:
      properties:
        sourcePath:
          description: Path in the git repo of the erroneous config
          type: string
        resourceName:
          description: Metadata name of the resource that is causing an error
          type: string
        resourceGvk:
          description: Group/version/kind of the resource that is causing an error
          $ref: '#/components/schemas/ConfigManagementGroupVersionKind'
        resourceNamespace:
          description: Namespace of the resource that is causing an error
          type: string
      id: ConfigManagementErrorResource
      type: object
      description: Model for a config file in the git repo with an associated Sync error
    ConnectAgentResource:
      id: ConnectAgentResource
      type: object
      description: ConnectAgentResource represents a Kubernetes resource manifest for Connect Agent deployment.
      properties:
        manifest:
          description: YAML manifest of the resource.
          type: string
        type:
          $ref: '#/components/schemas/TypeMeta'
          description: Kubernetes type of the resource.
    FleetObservabilityFleetObservabilityBaseFeatureState:
      type: object
      description: Base state for fleet observability feature.
      properties:
        errors:
          items:
            $ref: '#/components/schemas/FleetObservabilityFeatureError'
          description: Errors after reconciling the monitoring and logging feature if the code is not OK.
          type: array
        code:
          type: string
          enumDescriptions:
            - Unknown or not set.
            - The Feature is operating normally.
            - The Feature is encountering errors in the reconciliation. The Feature may need intervention to return to normal operation. See the description and any associated Feature-specific details for more information.
          description: 'The high-level, machine-readable status of this Feature.'
          enum:
            - CODE_UNSPECIFIED
            - OK
            - ERROR
      id: FleetObservabilityFleetObservabilityBaseFeatureState
    ConfigManagementOperatorState:
      properties:
        version:
          description: The semenatic version number of the operator
          type: string
        deploymentState:
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          description: The state of the Operator's deployment
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - 'Deployment was attempted to be installed, but has errors'
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ConfigManagementInstallError'
          description: Install errors.
      id: ConfigManagementOperatorState
      type: object
      description: State information for an ACM's Operator
    MultiCloudCluster:
      description: MultiCloudCluster contains information specific to GKE Multi-Cloud clusters.
      type: object
      id: MultiCloudCluster
      properties:
        clusterMissing:
          description: Output only. If cluster_missing is set then it denotes that API(gkemulticloud.googleapis.com) resource for this GKE Multi-Cloud cluster no longer exists.
          type: boolean
          readOnly: true
        resourceLink:
          type: string
          description: 'Immutable. Self-link of the Google Cloud resource for the GKE Multi-Cloud cluster. For example: //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/awsClusters/my-cluster //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/azureClusters/my-cluster //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/attachedClusters/my-cluster'
    ConfigManagementConfigSync:
      id: ConfigManagementConfigSync
      type: object
      description: Configuration for Config Sync
      properties:
        allowVerticalScale:
          deprecated: true
          type: boolean
          description: Set to true to allow the vertical scaling. Defaults to false which disallows vertical scaling. This field is deprecated.
        stopSyncing:
          type: boolean
          description: Set to true to stop syncing configs for a single cluster when automatic Feature management is enabled. Default to false. The field will be ignored when automatic Feature management is disabled.
        metricsGcpServiceAccountEmail:
          type: string
          description: The Email of the Google Cloud Service Account (GSA) used for exporting Config Sync metrics to Cloud Monitoring and Cloud Monarch when Workload Identity is enabled. The GSA should have the Monitoring Metric Writer (roles/monitoring.metricWriter) IAM role. The Kubernetes ServiceAccount `default` in the namespace `config-management-monitoring` should be bound to the GSA. This field is required when automatic Feature management is enabled.
        sourceFormat:
          type: string
          description: Specifies whether the Config Sync Repo is in "hierarchical" or "unstructured" mode.
        oci:
          $ref: '#/components/schemas/ConfigManagementOciConfig'
          description: OCI repo configuration for the cluster
        git:
          $ref: '#/components/schemas/ConfigManagementGitConfig'
          description: Git repo configuration for the cluster.
        enabled:
          description: 'Enables the installation of ConfigSync. If set to true, ConfigSync resources will be created and the other ConfigSync fields will be applied if exist. If set to false, all other ConfigSync fields will be ignored, ConfigSync resources will be deleted. If omitted, ConfigSync resources will be managed depends on the presence of the git or oci field.'
          type: boolean
        preventDrift:
          description: 'Set to true to enable the Config Sync admission webhook to prevent drifts. If set to `false`, disables the Config Sync admission webhook and does not prevent drifts.'
          type: boolean
    ConfigManagementConfigSyncState:
      description: State information for ConfigSync
      id: ConfigManagementConfigSyncState
      type: object
      properties:
        errors:
          description: Errors pertaining to the installation of Config Sync.
          items:
            $ref: '#/components/schemas/ConfigManagementConfigSyncError'
          type: array
        deploymentState:
          description: 'Information about the deployment of ConfigSync, including the version of the various Pods deployed'
          $ref: '#/components/schemas/ConfigManagementConfigSyncDeploymentState'
        version:
          description: The version of ConfigSync deployed
          $ref: '#/components/schemas/ConfigManagementConfigSyncVersion'
        syncState:
          $ref: '#/components/schemas/ConfigManagementSyncState'
          description: The state of ConfigSync's process to sync configs to a cluster
    Fleet:
      description: Fleet contains the Fleet-wide metadata and configuration.
      properties:
        name:
          readOnly: true
          type: string
          description: 'Output only. The full, unique resource name of this fleet in the format of `projects/{project}/locations/{location}/fleets/{fleet}`. Each Google Cloud project can have at most one fleet resource, named "default".'
        deleteTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. When the Fleet was deleted.
        uid:
          type: string
          readOnly: true
          description: 'Output only. Google-generated UUID for this resource. This is unique across all Fleet resources. If a Fleet resource is deleted and another resource with the same name is created, it gets a different uid.'
        updateTime:
          format: google-datetime
          description: Output only. When the Fleet was last updated.
          readOnly: true
          type: string
        state:
          readOnly: true
          $ref: '#/components/schemas/FleetLifecycleState'
          description: Output only. State of the namespace resource.
        createTime:
          readOnly: true
          description: Output only. When the Fleet was created.
          type: string
          format: google-datetime
        displayName:
          type: string
          description: 'Optional. A user-assigned display name of the Fleet. When present, it must be between 4 to 30 characters. Allowed characters are: lowercase and uppercase letters, numbers, hyphen, single-quote, double-quote, space, and exclamation point. Example: `Production Fleet`'
        labels:
          description: Optional. Labels for this Fleet.
          additionalProperties:
            type: string
          type: object
      id: Fleet
      type: object
    ResourceOptions:
      description: ResourceOptions represent options for Kubernetes resource generation.
      properties:
        connectVersion:
          type: string
          description: 'Optional. The Connect agent version to use for connect_resources. Defaults to the latest GKE Connect version. The version must be a currently supported version, obsolete versions will be rejected.'
        v1beta1Crd:
          description: Optional. Use `apiextensions/v1beta1` instead of `apiextensions/v1` for CustomResourceDefinition resources. This option should be set for clusters with Kubernetes apiserver versions <1.16.
          type: boolean
        k8sVersion:
          description: 'Optional. Major version of the Kubernetes cluster. This is only used to determine which version to use for the CustomResourceDefinition resources, `apiextensions/v1beta1` or`apiextensions/v1`.'
          type: string
      id: ResourceOptions
      type: object
    MembershipBinding:
      description: 'MembershipBinding is a subresource of a Membership, representing what Fleet Scopes (or other, future Fleet resources) a Membership is bound to.'
      id: MembershipBinding
      type: object
      properties:
        scope:
          description: A Scope resource name in the format `projects/*/locations/*/scopes/*`.
          type: string
        createTime:
          description: Output only. When the membership binding was created.
          format: google-datetime
          readOnly: true
          type: string
        fleet:
          type: boolean
          description: Whether the membershipbinding is Fleet-wide; true means that this Membership should be bound to all Namespaces in this entire Fleet.
        name:
          description: 'The resource name for the membershipbinding itself `projects/{project}/locations/{location}/memberships/{membership}/bindings/{membershipbinding}`'
          type: string
        updateTime:
          description: Output only. When the membership binding was last updated.
          readOnly: true
          type: string
          format: google-datetime
        uid:
          readOnly: true
          description: 'Output only. Google-generated UUID for this resource. This is unique across all membershipbinding resources. If a membershipbinding resource is deleted and another resource with the same name is created, it gets a different uid.'
          type: string
        state:
          description: Output only. State of the membership binding resource.
          $ref: '#/components/schemas/MembershipBindingLifecycleState'
          readOnly: true
        labels:
          description: Optional. Labels for this MembershipBinding.
          type: object
          additionalProperties:
            type: string
        deleteTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. When the membership binding was deleted.
    CommonFeatureState:
      type: object
      id: CommonFeatureState
      properties:
        fleetobservability:
          description: FleetObservability feature state.
          $ref: '#/components/schemas/FleetObservabilityFeatureState'
        appdevexperience:
          $ref: '#/components/schemas/AppDevExperienceFeatureState'
          description: Appdevexperience specific state.
        state:
          $ref: '#/components/schemas/FeatureState'
          readOnly: true
          description: Output only. The "running state" of the Feature in this Hub.
      description: CommonFeatureState contains Hub-wide Feature status information.
    MonitoringConfig:
      type: object
      description: This field informs Fleet-based applications/services/UIs with the necessary information for where each underlying Cluster reports its metrics.
      properties:
        cluster:
          type: string
          description: 'Immutable. Cluster name used to report metrics. For Anthos on VMWare/Baremetal, it would be in format `memberClusters/cluster_name`; And for Anthos on MultiCloud, it would be in format `{azureClusters, awsClusters}/cluster_name`.'
        kubernetesMetricsPrefix:
          description: 'Kubernetes system metrics, if available, are written to this prefix. This defaults to kubernetes.io for GKE, and kubernetes.io/anthos for Anthos eventually. Noted: Anthos MultiCloud will have kubernetes.io prefix today but will migration to be under kubernetes.io/anthos'
          type: string
        projectId:
          type: string
          description: Immutable. Project used to report Metrics
        clusterHash:
          type: string
          description: 'Immutable. Cluster hash, this is a unique string generated by google code, which does not contain any PII, which we can use to reference the cluster. This is expected to be created by the monitoring stack and persisted into the Cluster object as well as to GKE-Hub.'
        location:
          description: Immutable. Location used to report Metrics
          type: string
      id: MonitoringConfig
  parameters:
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
  x-stackQL-resources:
    fleets:
      id: google.gkehub.fleets
      name: fleets
      title: Fleets
      methods:
        organizations_locations_fleets_list:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1fleets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_fleets_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1fleets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_fleets_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1fleets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_fleets_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1fleets~1{fleetsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_fleets_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1fleets~1{fleetsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_fleets_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1fleets~1{fleetsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/fleets/methods/organizations_locations_fleets_list'
          - $ref: '#/components/x-stackQL-resources/fleets/methods/projects_locations_fleets_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/fleets/methods/projects_locations_fleets_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/fleets/methods/projects_locations_fleets_delete'
    operations:
      id: google.gkehub.operations
      name: operations
      title: Operations
      methods:
        projects_locations_operations_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_delete'
    features_iam_policies:
      id: google.gkehub.features_iam_policies
      name: features_iam_policies
      title: Features Iam Policies
      methods:
        projects_locations_features_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1features~1{featuresId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_features_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1features~1{featuresId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_features_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1features~1{featuresId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/features_iam_policies/methods/projects_locations_features_get_iam_policy'
        insert: []
        update: []
        delete: []
    features:
      id: google.gkehub.features
      name: features
      title: Features
      methods:
        projects_locations_features_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1features~1{featuresId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_features_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1features~1{featuresId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_features_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1features~1{featuresId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_features_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1features/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_features_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1features/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/features/methods/projects_locations_features_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/features/methods/projects_locations_features_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/features/methods/projects_locations_features_delete'
    scopes_iam_policies:
      id: google.gkehub.scopes_iam_policies
      name: scopes_iam_policies
      title: Scopes Iam Policies
      methods:
        projects_locations_scopes_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_scopes_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_scopes_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/scopes_iam_policies/methods/projects_locations_scopes_get_iam_policy'
        insert: []
        update: []
        delete: []
    scopes:
      id: google.gkehub.scopes
      name: scopes
      title: Scopes
      methods:
        projects_locations_scopes_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_scopes_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_scopes_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes~1{scopesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_scopes_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_scopes_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1scopes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/scopes/methods/projects_locations_scopes_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/scopes/methods/projects_locations_scopes_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/scopes/methods/projects_locations_scopes_delete'
    memberships:
      id: google.gkehub.memberships
      name: memberships
      title: Memberships
      methods:
        projects_locations_memberships_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_generate_connect_manifest:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}:generateConnectManifest/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/memberships/methods/projects_locations_memberships_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/memberships/methods/projects_locations_memberships_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/memberships/methods/projects_locations_memberships_delete'
    memberships_iam_policies:
      id: google.gkehub.memberships_iam_policies
      name: memberships_iam_policies
      title: Memberships Iam Policies
      methods:
        projects_locations_memberships_set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/memberships_iam_policies/methods/projects_locations_memberships_get_iam_policy'
        insert: []
        update: []
        delete: []
    bindings:
      id: google.gkehub.bindings
      name: bindings
      title: Bindings
      methods:
        projects_locations_memberships_bindings_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}~1bindings~1{bindingsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_bindings_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}~1bindings~1{bindingsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_bindings_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}~1bindings~1{bindingsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_bindings_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}~1bindings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_memberships_bindings_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1memberships~1{membershipsId}~1bindings/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/bindings/methods/projects_locations_memberships_bindings_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/bindings/methods/projects_locations_memberships_bindings_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/bindings/methods/projects_locations_memberships_bindings_delete'
    locations:
      id: google.gkehub.locations
      name: locations
      title: Locations
      methods:
        projects_locations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_list'
        insert: []
        update: []
        delete: []
paths:
  '/v1/organizations/{organizationsId}/locations/{locationsId}/fleets':
    parameters: &ref_1
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/uploadType'
    get:
      description: Returns all fleets within an organization or a project that the caller has access to.
      operationId: gkehub.organizations.locations.fleets.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFleetsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: fleets
      x-stackQL-method: organizations_locations_fleets_list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/fleets':
    parameters: *ref_1
    post:
      description: Creates a fleet.
      operationId: gkehub.projects.locations.fleets.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fleet'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: fleets
      x-stackQL-method: projects_locations_fleets_create
      x-stackQL-verb: insert
    get:
      description: Returns all fleets within an organization or a project that the caller has access to.
      operationId: gkehub.projects.locations.fleets.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFleetsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: fleets
      x-stackQL-method: projects_locations_fleets_list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/fleets/{fleetsId}':
    parameters: *ref_1
    get:
      description: Returns the details of a fleet.
      operationId: gkehub.projects.locations.fleets.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fleet'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: fleetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: fleets
      x-stackQL-method: projects_locations_fleets_get
      x-stackQL-verb: exec
    patch:
      description: Updates a fleet.
      operationId: gkehub.projects.locations.fleets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fleet'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: fleetsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: fleets
      x-stackQL-method: projects_locations_fleets_patch
      x-stackQL-verb: exec
    delete:
      description: Removes a Fleet. There must be no memberships remaining in the Fleet.
      operationId: gkehub.projects.locations.fleets.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: fleetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: fleets
      x-stackQL-method: projects_locations_fleets_delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: gkehub.projects.locations.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: gkehub.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: gkehub.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: gkehub.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-method: projects_locations_operations_list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: gkehub.projects.locations.features.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
      x-stackQL-resource: features_iam_policies
      x-stackQL-method: projects_locations_features_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: gkehub.projects.locations.features.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: features_iam_policies
      x-stackQL-method: projects_locations_features_get_iam_policy
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/features/{featuresId}':
    parameters: *ref_1
    get:
      description: Gets details of a single Feature.
      operationId: gkehub.projects.locations.features.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
      x-stackQL-resource: features
      x-stackQL-method: projects_locations_features_get
      x-stackQL-verb: exec
    delete:
      description: Removes a Feature.
      operationId: gkehub.projects.locations.features.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: features
      x-stackQL-method: projects_locations_features_delete
      x-stackQL-verb: delete
    patch:
      description: Updates an existing Feature.
      operationId: gkehub.projects.locations.features.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feature'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: features
      x-stackQL-method: projects_locations_features_patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: gkehub.projects.locations.features.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
      x-stackQL-resource: features_iam_policies
      x-stackQL-method: projects_locations_features_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/features':
    parameters: *ref_1
    post:
      description: Adds a new Feature.
      operationId: gkehub.projects.locations.features.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feature'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: featureId
          schema:
            type: string
      x-stackQL-resource: features
      x-stackQL-method: projects_locations_features_create
      x-stackQL-verb: insert
    get:
      description: Lists Features in a given project and location.
      operationId: gkehub.projects.locations.features.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFeaturesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: features
      x-stackQL-method: projects_locations_features_list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/scopes/{scopesId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: gkehub.projects.locations.scopes.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: scopes_iam_policies
      x-stackQL-method: projects_locations_scopes_get_iam_policy
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/scopes/{scopesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: gkehub.projects.locations.scopes.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
      x-stackQL-resource: scopes_iam_policies
      x-stackQL-method: projects_locations_scopes_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/scopes/{scopesId}':
    parameters: *ref_1
    delete:
      description: Deletes a Scope.
      operationId: gkehub.projects.locations.scopes.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
      x-stackQL-resource: scopes
      x-stackQL-method: projects_locations_scopes_delete
      x-stackQL-verb: delete
    get:
      description: Returns the details of a Scope.
      operationId: gkehub.projects.locations.scopes.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scope'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
      x-stackQL-resource: scopes
      x-stackQL-method: projects_locations_scopes_get
      x-stackQL-verb: exec
    patch:
      description: Updates a scopes.
      operationId: gkehub.projects.locations.scopes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Scope'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: scopes
      x-stackQL-method: projects_locations_scopes_patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/scopes':
    parameters: *ref_1
    post:
      description: Creates a Scope.
      operationId: gkehub.projects.locations.scopes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Scope'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: scopeId
          schema:
            type: string
      x-stackQL-resource: scopes
      x-stackQL-method: projects_locations_scopes_create
      x-stackQL-verb: insert
    get:
      description: Lists Scopes.
      operationId: gkehub.projects.locations.scopes.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListScopesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: scopes
      x-stackQL-method: projects_locations_scopes_list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/scopes/{scopesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: gkehub.projects.locations.scopes.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
      x-stackQL-resource: scopes_iam_policies
      x-stackQL-method: projects_locations_scopes_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}':
    parameters: *ref_1
    get:
      description: Gets the details of a Membership.
      operationId: gkehub.projects.locations.memberships.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Membership'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-method: projects_locations_memberships_get
      x-stackQL-verb: exec
    patch:
      description: Updates an existing Membership.
      operationId: gkehub.projects.locations.memberships.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Membership'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-method: projects_locations_memberships_patch
      x-stackQL-verb: exec
    delete:
      description: 'Removes a Membership. **This is currently only supported for GKE clusters on Google Cloud**. To unregister other clusters, follow the instructions at https://cloud.google.com/anthos/multicluster-management/connect/unregistering-a-cluster.'
      operationId: gkehub.projects.locations.memberships.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-method: projects_locations_memberships_delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: gkehub.projects.locations.memberships.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
      x-stackQL-resource: memberships_iam_policies
      x-stackQL-method: projects_locations_memberships_set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/memberships':
    parameters: *ref_1
    get:
      description: Lists Memberships in a given project and location.
      operationId: gkehub.projects.locations.memberships.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMembershipsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-method: projects_locations_memberships_list
      x-stackQL-verb: select
    post:
      description: 'Creates a new Membership. **This is currently only supported for GKE clusters on Google Cloud**. To register other clusters, follow the instructions at https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster.'
      operationId: gkehub.projects.locations.memberships.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Membership'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: membershipId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-method: projects_locations_memberships_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: gkehub.projects.locations.memberships.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
      x-stackQL-resource: memberships_iam_policies
      x-stackQL-method: projects_locations_memberships_test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: gkehub.projects.locations.memberships.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: memberships_iam_policies
      x-stackQL-method: projects_locations_memberships_get_iam_policy
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:generateConnectManifest':
    parameters: *ref_1
    get:
      description: Generates the manifest for deployment of the GKE connect agent. **This method is used internally by Google-provided libraries.** Most clients should not need to call this method directly.
      operationId: gkehub.projects.locations.memberships.generateConnectManifest
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateConnectManifestResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: query
          name: version
          schema:
            type: string
        - in: query
          name: namespace
          schema:
            type: string
        - in: query
          name: isUpgrade
          schema:
            type: boolean
        - in: query
          name: imagePullSecretContent
          schema:
            type: string
        - in: query
          name: proxy
          schema:
            type: string
        - in: query
          name: registry
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-method: projects_locations_memberships_generate_connect_manifest
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}/bindings/{bindingsId}':
    parameters: *ref_1
    get:
      description: Returns the details of a MembershipBinding.
      operationId: gkehub.projects.locations.memberships.bindings.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipBinding'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: path
          name: bindingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: bindings
      x-stackQL-method: projects_locations_memberships_bindings_get
      x-stackQL-verb: exec
    patch:
      description: Updates a MembershipBinding.
      operationId: gkehub.projects.locations.memberships.bindings.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembershipBinding'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: path
          name: bindingsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: bindings
      x-stackQL-method: projects_locations_memberships_bindings_patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a MembershipBinding.
      operationId: gkehub.projects.locations.memberships.bindings.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: path
          name: bindingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: bindings
      x-stackQL-method: projects_locations_memberships_bindings_delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}/bindings':
    parameters: *ref_1
    get:
      description: Lists MembershipBindings.
      operationId: gkehub.projects.locations.memberships.bindings.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMembershipBindingsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: bindings
      x-stackQL-method: projects_locations_memberships_bindings_list
      x-stackQL-verb: select
    post:
      description: Creates a MembershipBinding.
      operationId: gkehub.projects.locations.memberships.bindings.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembershipBinding'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: query
          name: membershipBindingId
          schema:
            type: string
      x-stackQL-resource: bindings
      x-stackQL-method: projects_locations_memberships_bindings_create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations':
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: gkehub.projects.locations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: projects_locations_list
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}':
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: gkehub.projects.locations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: projects_locations_get
      x-stackQL-verb: exec
