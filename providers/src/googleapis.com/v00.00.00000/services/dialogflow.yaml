openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Dialogflow API
  description: >-
    Builds conversational interfaces (for example, chatbots, and voice-powered
    apps and devices).
  version: v3
  x-discovery-doc-revision: '20240912'
  x-generated-date: '2024-09-19'
externalDocs:
  url: https://cloud.google.com/dialogflow/
servers:
  - url: https://dialogflow.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
            https://www.googleapis.com/auth/dialogflow: View, manage and query your Dialogflow agents
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    GoogleLongrunningListOperationsResponse:
      id: GoogleLongrunningListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    GoogleLongrunningOperation:
      id: GoogleLongrunningOperation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/GoogleRpcStatus'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    GoogleRpcStatus:
      id: GoogleRpcStatus
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    GoogleProtobufEmpty:
      id: GoogleProtobufEmpty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    GoogleCloudDialogflowCxV3ListPagesResponse:
      id: GoogleCloudDialogflowCxV3ListPagesResponse
      description: The response message for Pages.ListPages.
      type: object
      properties:
        pages:
          description: >-
            The list of pages. There will be a maximum number of items returned
            based on the page_size field in the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Page'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    GoogleCloudDialogflowCxV3Page:
      id: GoogleCloudDialogflowCxV3Page
      description: >-
        A Dialogflow CX conversation (session) can be described and visualized
        as a state machine. The states of a CX session are represented by pages.
        For each flow, you define many pages, where your combined pages can
        handle a complete conversation on the topics the flow is designed for.
        At any given moment, exactly one page is the current page, the current
        page is considered active, and the flow associated with that page is
        considered active. Every flow has a special start page. When a flow
        initially becomes active, the start page page becomes the current page.
        For each conversational turn, the current page will either stay the same
        or transition to another page. You configure each page to collect
        information from the end-user that is relevant for the conversational
        state represented by the page. For more information, see the [Page
        guide](https://cloud.google.com/dialogflow/cx/docs/concept/page).
      type: object
      properties:
        name:
          description: >-
            The unique identifier of the page. Required for the Pages.UpdatePage
            method. Pages.CreatePage populates the name automatically. Format:
            `projects//locations//agents//flows//pages/`.
          type: string
        displayName:
          description: >-
            Required. The human-readable name of the page, unique within the
            flow.
          type: string
        description:
          description: The description of the page. The maximum length is 500 characters.
          type: string
        entryFulfillment:
          description: The fulfillment to call when the session is entering the page.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Fulfillment'
        form:
          description: >-
            The form associated with the page, used for collecting parameters
            relevant to the page.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Form'
        transitionRouteGroups:
          description: >-
            Ordered list of `TransitionRouteGroups` added to the page.
            Transition route groups must be unique within a page. If the page
            links both flow-level transition route groups and agent-level
            transition route groups, the flow-level ones will have higher
            priority and will be put before the agent-level ones. * If multiple
            transition routes within a page scope refer to the same intent, then
            the precedence order is: page's transition route -> page's
            transition route group -> flow's transition routes. * If multiple
            transition route groups within a page contain the same intent, then
            the first group in the ordered list takes precedence.
            Format:`projects//locations//agents//flows//transitionRouteGroups/`
            or `projects//locations//agents//transitionRouteGroups/` for
            agent-level groups.
          type: array
          items:
            type: string
        transitionRoutes:
          description: >-
            A list of transitions for the transition rules of this page. They
            route the conversation to another page in the same flow, or another
            flow. When we are in a certain page, the TransitionRoutes are
            evalauted in the following order: * TransitionRoutes defined in the
            page with intent specified. * TransitionRoutes defined in the
            transition route groups with intent specified. * TransitionRoutes
            defined in flow with intent specified. * TransitionRoutes defined in
            the transition route groups with intent specified. *
            TransitionRoutes defined in the page with only condition specified.
            * TransitionRoutes defined in the transition route groups with only
            condition specified.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3TransitionRoute'
        eventHandlers:
          description: >-
            Handlers associated with the page to handle events such as webhook
            errors, no match or no input.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3EventHandler'
        advancedSettings:
          description: >-
            Hierarchical advanced settings for this page. The settings exposed
            at the lower level overrides the settings exposed at the higher
            level.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3AdvancedSettings'
        knowledgeConnectorSettings:
          description: Optional. Knowledge connector configuration.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3KnowledgeConnectorSettings
    GoogleCloudDialogflowCxV3Fulfillment:
      id: GoogleCloudDialogflowCxV3Fulfillment
      description: >-
        A fulfillment can do one or more of the following actions at the same
        time: * Generate rich message responses. * Set parameter values. * Call
        the webhook. Fulfillments can be called at various stages in the Page or
        Form lifecycle. For example, when a DetectIntentRequest drives a session
        to enter a new page, the page's entry fulfillment can add a static
        response to the QueryResult in the returning DetectIntentResponse, call
        the webhook (for example, to load user data from a database), or both.
      type: object
      properties:
        messages:
          description: The list of rich message responses to present to the user.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3ResponseMessage'
        webhook:
          description: >-
            The webhook to call. Format:
            `projects//locations//agents//webhooks/`.
          type: string
        returnPartialResponses:
          description: >-
            Whether Dialogflow should return currently queued fulfillment
            response messages in streaming APIs. If a webhook is specified, it
            happens before Dialogflow invokes webhook. Warning: 1) This flag
            only affects streaming API. Responses are still queued and returned
            once in non-streaming API. 2) The flag can be enabled in any
            fulfillment but only the first 3 partial responses will be returned.
            You may only want to apply it to fulfillments that have slow
            webhooks.
          type: boolean
        tag:
          description: >-
            The value of this field will be populated in the WebhookRequest
            `fulfillmentInfo.tag` field by Dialogflow when the associated
            webhook is called. The tag is typically used by the webhook service
            to identify which fulfillment is being called, but it could be used
            for other purposes. This field is required if `webhook` is
            specified.
          type: string
        setParameterActions:
          description: Set parameter values before executing the webhook.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3FulfillmentSetParameterAction
        conditionalCases:
          description: Conditional cases for this fulfillment.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3FulfillmentConditionalCases
        advancedSettings:
          description: >-
            Hierarchical advanced settings for this fulfillment. The settings
            exposed at the lower level overrides the settings exposed at the
            higher level.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3AdvancedSettings'
        enableGenerativeFallback:
          description: >-
            If the flag is true, the agent will utilize LLM to generate a text
            response. If LLM generation fails, the defined responses in the
            fulfillment will be respected. This flag is only useful for
            fulfillments associated with no-match event handlers.
          type: boolean
    GoogleCloudDialogflowCxV3ResponseMessage:
      id: GoogleCloudDialogflowCxV3ResponseMessage
      description: >-
        Represents a response message that can be returned by a conversational
        agent. Response messages are also used for output audio synthesis. The
        approach is as follows: * If at least one OutputAudioText response is
        present, then all OutputAudioText responses are linearly concatenated,
        and the result is used for output audio synthesis. * If the
        OutputAudioText responses are a mixture of text and SSML, then the
        concatenated result is treated as SSML; otherwise, the result is treated
        as either text or SSML as appropriate. The agent designer should ideally
        use either text or SSML consistently throughout the bot design. *
        Otherwise, all Text responses are linearly concatenated, and the result
        is used for output audio synthesis. This approach allows for more
        sophisticated user experience scenarios, where the text displayed to the
        user may differ from what is heard.
      type: object
      properties:
        text:
          description: Returns a text response.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3ResponseMessageText'
        payload:
          description: Returns a response containing a custom, platform-specific payload.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        conversationSuccess:
          description: Indicates that the conversation succeeded.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess
        outputAudioText:
          description: >-
            A text or ssml response that is preferentially used for TTS output
            audio synthesis, as described in the comment on the ResponseMessage
            message.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText
        liveAgentHandoff:
          description: Hands off conversation to a human agent.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff
        endInteraction:
          description: >-
            Output only. A signal that indicates the interaction with the
            Dialogflow agent has ended. This message is generated by Dialogflow
            only when the conversation reaches `END_SESSION` page. It is not
            supposed to be defined by the user. It's guaranteed that there is at
            most one such message in each response.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3ResponseMessageEndInteraction
        playAudio:
          description: >-
            Signal that the client should play an audio clip hosted at a
            client-specific URI. Dialogflow uses this to construct mixed_audio.
            However, Dialogflow itself does not try to read or process the URI
            in any way.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3ResponseMessagePlayAudio
        mixedAudio:
          description: >-
            Output only. An audio response message composed of both the
            synthesized Dialogflow agent responses and responses defined via
            play_audio. This message is generated by Dialogflow only and not
            supposed to be defined by the user.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3ResponseMessageMixedAudio
        telephonyTransferCall:
          description: >-
            A signal that the client should transfer the phone call connected to
            this agent to a third-party endpoint.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall
        knowledgeInfoCard:
          description: >-
            Represents info card for knowledge answers, to be better rendered in
            Dialogflow Messenger.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCard
        responseType:
          description: Response type.
          type: string
          enumDescriptions:
            - Not specified.
            - The response is from an entry prompt in the page.
            - The response is from form-filling prompt in the page.
            - >-
              The response is from a transition route or an event handler in the
              page or flow or transition route group.
          enum:
            - RESPONSE_TYPE_UNSPECIFIED
            - ENTRY_PROMPT
            - PARAMETER_PROMPT
            - HANDLER_PROMPT
        channel:
          description: >-
            The channel which the response is associated with. Clients can
            specify the channel via QueryParameters.channel, and only associated
            channel response will be returned.
          type: string
    GoogleCloudDialogflowCxV3ResponseMessageText:
      id: GoogleCloudDialogflowCxV3ResponseMessageText
      description: The text response message.
      type: object
      properties:
        text:
          description: >-
            Required. A collection of text response variants. If multiple
            variants are defined, only one text response variant is returned at
            runtime.
          type: array
          items:
            type: string
        allowPlaybackInterruption:
          description: >-
            Output only. Whether the playback of this message can be interrupted
            by the end user's speech and the client can then starts the next
            Dialogflow request.
          readOnly: true
          type: boolean
    GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess:
      id: GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess
      description: >-
        Indicates that the conversation succeeded, i.e., the bot handled the
        issue that the customer talked to it about. Dialogflow only uses this to
        determine which conversations should be counted as successful and
        doesn't process the metadata in this message in any way. Note that
        Dialogflow also considers conversations that get to the conversation end
        page as successful even if they don't return ConversationSuccess. You
        may set this, for example: * In the entry_fulfillment of a Page if
        entering the page indicates that the conversation succeeded. * In a
        webhook response when you determine that you handled the customer issue.
      type: object
      properties:
        metadata:
          description: Custom metadata. Dialogflow doesn't impose any structure on this.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
    GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText:
      id: GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText
      description: >-
        A text or ssml response that is preferentially used for TTS output audio
        synthesis, as described in the comment on the ResponseMessage message.
      type: object
      properties:
        text:
          description: The raw text to be synthesized.
          type: string
        ssml:
          description: >-
            The SSML text to be synthesized. For more information, see
            [SSML](/speech/text-to-speech/docs/ssml).
          type: string
        allowPlaybackInterruption:
          description: >-
            Output only. Whether the playback of this message can be interrupted
            by the end user's speech and the client can then starts the next
            Dialogflow request.
          readOnly: true
          type: boolean
    GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff:
      id: GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff
      description: >-
        Indicates that the conversation should be handed off to a live agent.
        Dialogflow only uses this to determine which conversations were handed
        off to a human agent for measurement purposes. What else to do with this
        signal is up to you and your handoff procedures. You may set this, for
        example: * In the entry_fulfillment of a Page if entering the page
        indicates something went extremely wrong in the conversation. * In a
        webhook response when you determine that the customer issue can only be
        handled by a human.
      type: object
      properties:
        metadata:
          description: >-
            Custom metadata for your handoff procedure. Dialogflow doesn't
            impose any structure on this.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
    GoogleCloudDialogflowCxV3ResponseMessageEndInteraction:
      id: GoogleCloudDialogflowCxV3ResponseMessageEndInteraction
      description: >-
        Indicates that interaction with the Dialogflow agent has ended. This
        message is generated by Dialogflow only and not supposed to be defined
        by the user.
      type: object
      properties: {}
    GoogleCloudDialogflowCxV3ResponseMessagePlayAudio:
      id: GoogleCloudDialogflowCxV3ResponseMessagePlayAudio
      description: >-
        Specifies an audio clip to be played by the client as part of the
        response.
      type: object
      properties:
        audioUri:
          description: >-
            Required. URI of the audio clip. Dialogflow does not impose any
            validation on this value. It is specific to the client that reads
            it.
          type: string
        allowPlaybackInterruption:
          description: >-
            Output only. Whether the playback of this message can be interrupted
            by the end user's speech and the client can then starts the next
            Dialogflow request.
          readOnly: true
          type: boolean
    GoogleCloudDialogflowCxV3ResponseMessageMixedAudio:
      id: GoogleCloudDialogflowCxV3ResponseMessageMixedAudio
      description: >-
        Represents an audio message that is composed of both segments
        synthesized from the Dialogflow agent prompts and ones hosted externally
        at the specified URIs. The external URIs are specified via play_audio.
        This message is generated by Dialogflow only and not supposed to be
        defined by the user.
      type: object
      properties:
        segments:
          description: Segments this audio response is composed of.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment
    GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment:
      id: GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment
      description: Represents one segment of audio.
      type: object
      properties:
        audio:
          description: >-
            Raw audio synthesized from the Dialogflow agent's response using the
            output config specified in the request.
          type: string
          format: byte
        uri:
          description: >-
            Client-specific URI that points to an audio clip accessible to the
            client. Dialogflow does not impose any validation on it.
          type: string
        allowPlaybackInterruption:
          description: >-
            Output only. Whether the playback of this segment can be interrupted
            by the end user's speech and the client should then start the next
            Dialogflow request.
          readOnly: true
          type: boolean
    GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall:
      id: GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall
      description: >-
        Represents the signal that telles the client to transfer the phone call
        connected to the agent to a third-party endpoint.
      type: object
      properties:
        phoneNumber:
          description: >-
            Transfer the call to a phone number in [E.164
            format](https://en.wikipedia.org/wiki/E.164).
          type: string
    GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCard:
      id: GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCard
      description: >-
        Represents info card response. If the response contains generative
        knowledge prediction, Dialogflow will return a payload with Infobot
        Messenger compatible info card. Otherwise, the info card response is
        skipped.
      type: object
      properties: {}
    GoogleCloudDialogflowCxV3FulfillmentSetParameterAction:
      id: GoogleCloudDialogflowCxV3FulfillmentSetParameterAction
      description: Setting a parameter value.
      type: object
      properties:
        parameter:
          description: Display name of the parameter.
          type: string
        value:
          description: The new value of the parameter. A null value clears the parameter.
          type: any
    GoogleCloudDialogflowCxV3FulfillmentConditionalCases:
      id: GoogleCloudDialogflowCxV3FulfillmentConditionalCases
      description: >-
        A list of cascading if-else conditions. Cases are mutually exclusive.
        The first one with a matching condition is selected, all the rest
        ignored.
      type: object
      properties:
        cases:
          description: A list of cascading if-else conditions.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase
    GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase:
      id: GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase
      description: >-
        Each case has a Boolean condition. When it is evaluated to be True, the
        corresponding messages will be selected and evaluated recursively.
      type: object
      properties:
        condition:
          description: >-
            The condition to activate and select this case. Empty means the
            condition is always true. The condition is evaluated against form
            parameters or session parameters. See the [conditions
            reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
          type: string
        caseContent:
          description: A list of case content.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent
    GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent:
      id: GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent
      description: The list of messages or conditional cases to activate for this case.
      type: object
      properties:
        message:
          description: Returned message.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3ResponseMessage'
        additionalCases:
          description: Additional cases to be evaluated.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3FulfillmentConditionalCases
    GoogleCloudDialogflowCxV3AdvancedSettings:
      id: GoogleCloudDialogflowCxV3AdvancedSettings
      description: >-
        Hierarchical advanced settings for
        agent/flow/page/fulfillment/parameter. Settings exposed at lower level
        overrides the settings exposed at higher level. Overriding occurs at the
        sub-setting level. For example, the playback_interruption_settings at
        fulfillment level only overrides the playback_interruption_settings at
        the agent level, leaving other settings at the agent level unchanged.
        DTMF settings does not override each other. DTMF settings set at
        different levels define DTMF detections running in parallel. Hierarchy:
        Agent->Flow->Page->Fulfillment/Parameter.
      type: object
      properties:
        audioExportGcsDestination:
          description: >-
            If present, incoming audio is exported by Dialogflow to the
            configured Google Cloud Storage destination. Exposed at the
            following levels: - Agent level - Flow level
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3GcsDestination'
        speechSettings:
          description: >-
            Settings for speech to text detection. Exposed at the following
            levels: - Agent level - Flow level - Page level - Parameter level
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3AdvancedSettingsSpeechSettings
        dtmfSettings:
          description: >-
            Settings for DTMF. Exposed at the following levels: - Agent level -
            Flow level - Page level - Parameter level.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings
        loggingSettings:
          description: >-
            Settings for logging. Settings for Dialogflow History, Contact
            Center messages, StackDriver logs, and speech logging. Exposed at
            the following levels: - Agent level.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings
    GoogleCloudDialogflowCxV3GcsDestination:
      id: GoogleCloudDialogflowCxV3GcsDestination
      description: >-
        Google Cloud Storage location for a Dialogflow operation that writes or
        exports objects (e.g. exported agent or transcripts) outside of
        Dialogflow.
      type: object
      properties:
        uri:
          description: >-
            Required. The Google Cloud Storage URI for the exported objects. A
            URI is of the form: `gs://bucket/object-name-or-prefix` Whether a
            full object name, or just a prefix, its usage depends on the
            Dialogflow operation.
          type: string
    GoogleCloudDialogflowCxV3AdvancedSettingsSpeechSettings:
      id: GoogleCloudDialogflowCxV3AdvancedSettingsSpeechSettings
      description: Define behaviors of speech to text detection.
      type: object
      properties:
        endpointerSensitivity:
          description: >-
            Sensitivity of the speech model that detects the end of speech.
            Scale from 0 to 100.
          type: integer
          format: int32
        noSpeechTimeout:
          description: Timeout before detecting no speech.
          type: string
          format: google-duration
        useTimeoutBasedEndpointing:
          description: >-
            Use timeout based endpointing, interpreting endpointer sensitivy as
            seconds of timeout value.
          type: boolean
        models:
          description: >-
            Mapping from language to Speech-to-Text model. The mapped
            Speech-to-Text model will be selected for requests from its
            corresponding language. For more information, see [Speech
            models](https://cloud.google.com/dialogflow/cx/docs/concept/speech-models).
          type: object
          additionalProperties:
            type: string
    GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings:
      id: GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings
      description: Define behaviors for DTMF (dual tone multi frequency).
      type: object
      properties:
        enabled:
          description: >-
            If true, incoming audio is processed for DTMF (dual tone multi
            frequency) events. For example, if the caller presses a button on
            their telephone keypad and DTMF processing is enabled, Dialogflow
            will detect the event (e.g. a "3" was pressed) in the incoming audio
            and pass the event to the bot to drive business logic (e.g. when 3
            is pressed, return the account balance).
          type: boolean
        maxDigits:
          description: Max length of DTMF digits.
          type: integer
          format: int32
        finishDigit:
          description: The digit that terminates a DTMF digit sequence.
          type: string
        interdigitTimeoutDuration:
          description: Interdigit timeout setting for matching dtmf input to regex.
          type: string
          format: google-duration
        endpointingTimeoutDuration:
          description: Endpoint timeout setting for matching dtmf input to regex.
          type: string
          format: google-duration
    GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings:
      id: GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings
      description: Define behaviors on logging.
      type: object
      properties:
        enableStackdriverLogging:
          description: Enables Google Cloud Logging.
          type: boolean
        enableInteractionLogging:
          description: Enables DF Interaction logging.
          type: boolean
        enableConsentBasedRedaction:
          description: >-
            Enables consent-based end-user input redaction, if true, a
            pre-defined session parameter
            `$session.params.conversation-redaction` will be used to determine
            if the utterance should be redacted.
          type: boolean
    GoogleCloudDialogflowCxV3Form:
      id: GoogleCloudDialogflowCxV3Form
      description: >-
        A form is a data model that groups related parameters that can be
        collected from the user. The process in which the agent prompts the user
        and collects parameter values from the user is called form filling. A
        form can be added to a page. When form filling is done, the filled
        parameters will be written to the session.
      type: object
      properties:
        parameters:
          description: Parameters to collect from the user.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3FormParameter'
    GoogleCloudDialogflowCxV3FormParameter:
      id: GoogleCloudDialogflowCxV3FormParameter
      description: Represents a form parameter.
      type: object
      properties:
        displayName:
          description: >-
            Required. The human-readable name of the parameter, unique within
            the form.
          type: string
        required:
          description: >-
            Indicates whether the parameter is required. Optional parameters
            will not trigger prompts; however, they are filled if the user
            specifies them. Required parameters must be filled before form
            filling concludes.
          type: boolean
        entityType:
          description: >-
            Required. The entity type of the parameter. Format:
            `projects/-/locations/-/agents/-/entityTypes/` for system entity
            types (for example,
            `projects/-/locations/-/agents/-/entityTypes/sys.date`), or
            `projects//locations//agents//entityTypes/` for developer entity
            types.
          type: string
        isList:
          description: Indicates whether the parameter represents a list of values.
          type: boolean
        fillBehavior:
          description: Required. Defines fill behavior for the parameter.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3FormParameterFillBehavior
        defaultValue:
          description: >-
            The default value of an optional parameter. If the parameter is
            required, the default value will be ignored.
          type: any
        redact:
          description: >-
            Indicates whether the parameter content should be redacted in log.
            If redaction is enabled, the parameter content will be replaced by
            parameter name during logging. Note: the parameter content is
            subject to redaction if either parameter level redaction or entity
            type level redaction is enabled.
          type: boolean
        advancedSettings:
          description: >-
            Hierarchical advanced settings for this parameter. The settings
            exposed at the lower level overrides the settings exposed at the
            higher level.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3AdvancedSettings'
    GoogleCloudDialogflowCxV3FormParameterFillBehavior:
      id: GoogleCloudDialogflowCxV3FormParameterFillBehavior
      description: Configuration for how the filling of a parameter should be handled.
      type: object
      properties:
        initialPromptFulfillment:
          description: >-
            Required. The fulfillment to provide the initial prompt that the
            agent can present to the user in order to fill the parameter.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Fulfillment'
        repromptEventHandlers:
          description: >-
            The handlers for parameter-level events, used to provide reprompt
            for the parameter or transition to a different page/flow. The
            supported events are: * `sys.no-match-`, where N can be from 1 to 6
            * `sys.no-match-default` * `sys.no-input-`, where N can be from 1 to
            6 * `sys.no-input-default` * `sys.invalid-parameter`
            `initial_prompt_fulfillment` provides the first prompt for the
            parameter. If the user's response does not fill the parameter, a
            no-match/no-input event will be triggered, and the fulfillment
            associated with the `sys.no-match-1`/`sys.no-input-1` handler (if
            defined) will be called to provide a prompt. The
            `sys.no-match-2`/`sys.no-input-2` handler (if defined) will respond
            to the next no-match/no-input event, and so on. A
            `sys.no-match-default` or `sys.no-input-default` handler will be
            used to handle all following no-match/no-input events after all
            numbered no-match/no-input handlers for the parameter are consumed.
            A `sys.invalid-parameter` handler can be defined to handle the case
            where the parameter values have been `invalidated` by webhook. For
            example, if the user's response fill the parameter, however the
            parameter was invalidated by webhook, the fulfillment associated
            with the `sys.invalid-parameter` handler (if defined) will be called
            to provide a prompt. If the event handler for the corresponding
            event can't be found on the parameter, `initial_prompt_fulfillment`
            will be re-prompted.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3EventHandler'
    GoogleCloudDialogflowCxV3EventHandler:
      id: GoogleCloudDialogflowCxV3EventHandler
      description: >-
        An event handler specifies an event that can be handled during a
        session. When the specified event happens, the following actions are
        taken in order: * If there is a `trigger_fulfillment` associated with
        the event, it will be called. * If there is a `target_page` associated
        with the event, the session will transition into the specified page. *
        If there is a `target_flow` associated with the event, the session will
        transition into the specified flow.
      type: object
      properties:
        name:
          description: Output only. The unique identifier of this event handler.
          readOnly: true
          type: string
        event:
          description: Required. The name of the event to handle.
          type: string
        triggerFulfillment:
          description: >-
            The fulfillment to call when the event occurs. Handling webhook
            errors with a fulfillment enabled with webhook could cause infinite
            loop. It is invalid to specify such fulfillment for a handler
            handling webhooks.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Fulfillment'
        targetPage:
          description: >-
            The target page to transition to. Format:
            `projects//locations//agents//flows//pages/`.
          type: string
        targetFlow:
          description: >-
            The target flow to transition to. Format:
            `projects//locations//agents//flows/`.
          type: string
        targetPlaybook:
          description: >-
            The target playbook to transition to. Format:
            `projects//locations//agents//playbooks/`.
          type: string
    GoogleCloudDialogflowCxV3TransitionRoute:
      id: GoogleCloudDialogflowCxV3TransitionRoute
      description: >-
        A transition route specifies a intent that can be matched and/or a data
        condition that can be evaluated during a session. When a specified
        transition is matched, the following actions are taken in order: * If
        there is a `trigger_fulfillment` associated with the transition, it will
        be called. * If there is a `target_page` associated with the transition,
        the session will transition into the specified page. * If there is a
        `target_flow` associated with the transition, the session will
        transition into the specified flow.
      type: object
      properties:
        name:
          description: Output only. The unique identifier of this transition route.
          readOnly: true
          type: string
        description:
          description: >-
            Optional. The description of the transition route. The maximum
            length is 500 characters.
          type: string
        intent:
          description: >-
            The unique identifier of an Intent. Format:
            `projects//locations//agents//intents/`. Indicates that the
            transition can only happen when the given intent is matched. At
            least one of `intent` or `condition` must be specified. When both
            `intent` and `condition` are specified, the transition can only
            happen when both are fulfilled.
          type: string
        condition:
          description: >-
            The condition to evaluate against form parameters or session
            parameters. See the [conditions
            reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
            At least one of `intent` or `condition` must be specified. When both
            `intent` and `condition` are specified, the transition can only
            happen when both are fulfilled.
          type: string
        triggerFulfillment:
          description: >-
            The fulfillment to call when the condition is satisfied. At least
            one of `trigger_fulfillment` and `target` must be specified. When
            both are defined, `trigger_fulfillment` is executed first.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Fulfillment'
        targetPage:
          description: >-
            The target page to transition to. Format:
            `projects//locations//agents//flows//pages/`.
          type: string
        targetFlow:
          description: >-
            The target flow to transition to. Format:
            `projects//locations//agents//flows/`.
          type: string
    GoogleCloudDialogflowCxV3KnowledgeConnectorSettings:
      id: GoogleCloudDialogflowCxV3KnowledgeConnectorSettings
      description: >-
        The Knowledge Connector settings for this page or flow. This includes
        information such as the attached Knowledge Bases, and the way to execute
        fulfillment.
      type: object
      properties:
        enabled:
          description: Whether Knowledge Connector is enabled or not.
          type: boolean
        triggerFulfillment:
          description: >-
            The fulfillment to be triggered. When the answers from the Knowledge
            Connector are selected by Dialogflow, you can utitlize the request
            scoped parameter `$request.knowledge.answers` (contains up to the 5
            highest confidence answers) and `$request.knowledge.questions`
            (contains the corresponding questions) to construct the fulfillment.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Fulfillment'
        targetPage:
          description: >-
            The target page to transition to. Format:
            `projects//locations//agents//flows//pages/`.
          type: string
        targetFlow:
          description: >-
            The target flow to transition to. Format:
            `projects//locations//agents//flows/`.
          type: string
        dataStoreConnections:
          description: Optional. List of related data store connections.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3DataStoreConnection'
    GoogleCloudDialogflowCxV3DataStoreConnection:
      id: GoogleCloudDialogflowCxV3DataStoreConnection
      description: >-
        A data store connection. It represents a data store in Discovery Engine
        and the type of the contents it contains.
      type: object
      properties:
        dataStoreType:
          description: The type of the connected data store.
          type: string
          enumDescriptions:
            - >-
              Not specified. This value indicates that the data store type is
              not specified, so it will not be used during search.
            - A data store that contains public web content.
            - A data store that contains unstructured private data.
            - A data store that contains structured data (for example FAQ).
          enum:
            - DATA_STORE_TYPE_UNSPECIFIED
            - PUBLIC_WEB
            - UNSTRUCTURED
            - STRUCTURED
        dataStore:
          description: >-
            The full name of the referenced data store. Formats:
            `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
            `projects/{project}/locations/{location}/dataStores/{data_store}`
          type: string
    GoogleCloudDialogflowCxV3Flow:
      id: GoogleCloudDialogflowCxV3Flow
      description: >-
        Flows represents the conversation flows when you build your chatbot
        agent. A flow consists of many pages connected by the transition routes.
        Conversations always start with the built-in Start Flow (with an all-0
        ID). Transition routes can direct the conversation session from the
        current flow (parent flow) to another flow (sub flow). When the sub flow
        is finished, Dialogflow will bring the session back to the parent flow,
        where the sub flow is started. Usually, when a transition route is
        followed by a matched intent, the intent will be "consumed". This means
        the intent won't activate more transition routes. However, when the
        followed transition route moves the conversation session into a
        different flow, the matched intent can be carried over and to be
        consumed in the target flow.
      type: object
      properties:
        name:
          description: >-
            The unique identifier of the flow. Format:
            `projects//locations//agents//flows/`.
          type: string
        displayName:
          description: Required. The human-readable name of the flow.
          type: string
        description:
          description: >-
            The description of the flow. The maximum length is 500 characters.
            If exceeded, the request is rejected.
          type: string
        transitionRoutes:
          description: >-
            A flow's transition routes serve two purposes: * They are
            responsible for matching the user's first utterances in the flow. *
            They are inherited by every page's transition routes and can support
            use cases such as the user saying "help" or "can I talk to a
            human?", which can be handled in a common way regardless of the
            current page. Transition routes defined in the page have higher
            priority than those defined in the flow. TransitionRoutes are
            evalauted in the following order: * TransitionRoutes with intent
            specified. * TransitionRoutes with only condition specified.
            TransitionRoutes with intent specified are inherited by pages in the
            flow.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3TransitionRoute'
        eventHandlers:
          description: >-
            A flow's event handlers serve two purposes: * They are responsible
            for handling events (e.g. no match, webhook errors) in the flow. *
            They are inherited by every page's event handlers, which can be used
            to handle common events regardless of the current page. Event
            handlers defined in the page have higher priority than those defined
            in the flow. Unlike transition_routes, these handlers are evaluated
            on a first-match basis. The first one that matches the event get
            executed, with the rest being ignored.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3EventHandler'
        transitionRouteGroups:
          description: >-
            A flow's transition route group serve two purposes: * They are
            responsible for matching the user's first utterances in the flow. *
            They are inherited by every page's transition route groups.
            Transition route groups defined in the page have higher priority
            than those defined in the flow. Format:
            `projects//locations//agents//flows//transitionRouteGroups/` or
            `projects//locations//agents//transitionRouteGroups/` for
            agent-level groups.
          type: array
          items:
            type: string
        nluSettings:
          description: NLU related settings of the flow.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3NluSettings'
        advancedSettings:
          description: >-
            Hierarchical advanced settings for this flow. The settings exposed
            at the lower level overrides the settings exposed at the higher
            level.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3AdvancedSettings'
        knowledgeConnectorSettings:
          description: Optional. Knowledge connector configuration.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3KnowledgeConnectorSettings
        multiLanguageSettings:
          description: Optional. Multi-lingual agent settings for this flow.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3FlowMultiLanguageSettings
        locked:
          description: >-
            Indicates whether the flow is locked for changes. If the flow is
            locked, modifications to the flow will be rejected.
          type: boolean
    GoogleCloudDialogflowCxV3NluSettings:
      id: GoogleCloudDialogflowCxV3NluSettings
      description: Settings related to NLU.
      type: object
      properties:
        modelType:
          description: Indicates the type of NLU model.
          type: string
          enumDescriptions:
            - Not specified. `MODEL_TYPE_STANDARD` will be used.
            - Use standard NLU model.
            - Use advanced NLU model.
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - MODEL_TYPE_STANDARD
            - MODEL_TYPE_ADVANCED
        classificationThreshold:
          description: >-
            To filter out false positive results and still get variety in
            matched natural language inputs for your agent, you can tune the
            machine learning classification threshold. If the returned score
            value is less than the threshold value, then a no-match event will
            be triggered. The score values range from 0.0 (completely uncertain)
            to 1.0 (completely certain). If set to 0.0, the default of 0.3 is
            used. You can set a separate classification threshold for the flow
            in each language enabled for the agent.
          type: number
          format: float
        modelTrainingMode:
          description: Indicates NLU model training mode.
          type: string
          enumDescriptions:
            - Not specified. `MODEL_TRAINING_MODE_AUTOMATIC` will be used.
            - >-
              NLU model training is automatically triggered when a flow gets
              modified. User can also manually trigger model training in this
              mode.
            - >-
              User needs to manually trigger NLU model training. Best for large
              flows whose models take long time to train.
          enum:
            - MODEL_TRAINING_MODE_UNSPECIFIED
            - MODEL_TRAINING_MODE_AUTOMATIC
            - MODEL_TRAINING_MODE_MANUAL
    GoogleCloudDialogflowCxV3FlowMultiLanguageSettings:
      id: GoogleCloudDialogflowCxV3FlowMultiLanguageSettings
      description: Settings for multi-lingual agents.
      type: object
      properties:
        enableMultiLanguageDetection:
          description: >-
            Optional. Enable multi-language detection for this flow. This can be
            set only if agent level multi language setting is enabled.
          type: boolean
        supportedResponseLanguageCodes:
          description: >-
            Optional. Agent will respond in the detected language if the
            detected language code is in the supported resolved languages for
            this flow. This will be used only if multi-language training is
            enabled in the agent and multi-language detection is enabled in the
            flow. The supported languages must be a subset of the languages
            supported by the agent.
          type: array
          items:
            type: string
    GoogleCloudDialogflowCxV3ListFlowsResponse:
      id: GoogleCloudDialogflowCxV3ListFlowsResponse
      description: The response message for Flows.ListFlows.
      type: object
      properties:
        flows:
          description: >-
            The list of flows. There will be a maximum number of items returned
            based on the page_size field in the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Flow'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    GoogleCloudDialogflowCxV3TrainFlowRequest:
      id: GoogleCloudDialogflowCxV3TrainFlowRequest
      description: The request message for Flows.TrainFlow.
      type: object
      properties: {}
    GoogleCloudDialogflowCxV3ValidateFlowRequest:
      id: GoogleCloudDialogflowCxV3ValidateFlowRequest
      description: The request message for Flows.ValidateFlow.
      type: object
      properties:
        languageCode:
          description: If not specified, the agent's default language is used.
          type: string
    GoogleCloudDialogflowCxV3FlowValidationResult:
      id: GoogleCloudDialogflowCxV3FlowValidationResult
      description: The response message for Flows.GetFlowValidationResult.
      type: object
      properties:
        name:
          description: >-
            The unique identifier of the flow validation result. Format:
            `projects//locations//agents//flows//validationResult`.
          type: string
        validationMessages:
          description: Contains all validation messages.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3ValidationMessage'
        updateTime:
          description: Last time the flow was validated.
          type: string
          format: google-datetime
    GoogleCloudDialogflowCxV3ValidationMessage:
      id: GoogleCloudDialogflowCxV3ValidationMessage
      description: Agent/flow validation message.
      type: object
      properties:
        resourceType:
          description: The type of the resources where the message is found.
          type: string
          enumDescriptions:
            - Unspecified.
            - Agent.
            - Intent.
            - Intent training phrase.
            - Intent parameter.
            - Multiple intents.
            - Multiple training phrases.
            - Entity type.
            - Multiple entity types.
            - Webhook.
            - Flow.
            - Page.
            - Multiple pages.
            - Transition route group.
            - Agent transition route group.
          enum:
            - RESOURCE_TYPE_UNSPECIFIED
            - AGENT
            - INTENT
            - INTENT_TRAINING_PHRASE
            - INTENT_PARAMETER
            - INTENTS
            - INTENT_TRAINING_PHRASES
            - ENTITY_TYPE
            - ENTITY_TYPES
            - WEBHOOK
            - FLOW
            - PAGE
            - PAGES
            - TRANSITION_ROUTE_GROUP
            - AGENT_TRANSITION_ROUTE_GROUP
        resources:
          description: The names of the resources where the message is found.
          deprecated: true
          type: array
          items:
            type: string
        resourceNames:
          description: The resource names of the resources where the message is found.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3ResourceName'
        severity:
          description: Indicates the severity of the message.
          type: string
          enumDescriptions:
            - Unspecified.
            - The agent doesn't follow Dialogflow best practices.
            - The agent may not behave as expected.
            - The agent may experience failures.
          enum:
            - SEVERITY_UNSPECIFIED
            - INFO
            - WARNING
            - ERROR
        detail:
          description: The message detail.
          type: string
    GoogleCloudDialogflowCxV3ResourceName:
      id: GoogleCloudDialogflowCxV3ResourceName
      description: Resource name and display name.
      type: object
      properties:
        name:
          description: Name.
          type: string
        displayName:
          description: Display name.
          type: string
    GoogleCloudDialogflowCxV3ImportFlowRequest:
      id: GoogleCloudDialogflowCxV3ImportFlowRequest
      description: The request message for Flows.ImportFlow.
      type: object
      properties:
        flowUri:
          description: >-
            The [Google Cloud Storage](https://cloud.google.com/storage/docs/)
            URI to import flow from. The format of this URI must be `gs:///`.
            Dialogflow performs a read operation for the Cloud Storage object on
            the caller's behalf, so your request authentication must have read
            permissions for the object. For more information, see [Dialogflow
            access
            control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
          type: string
        flowContent:
          description: Uncompressed raw byte content for flow.
          type: string
          format: byte
        importOption:
          description: Flow import mode. If not specified, `KEEP` is assumed.
          type: string
          enumDescriptions:
            - Unspecified. Treated as `KEEP`.
            - >-
              Always respect settings in exported flow content. It may cause a
              import failure if some settings (e.g. custom NLU) are not
              supported in the agent to import into.
            - >-
              Fallback to default settings if some settings are not supported in
              the agent to import into. E.g. Standard NLU will be used if custom
              NLU is not available.
          enum:
            - IMPORT_OPTION_UNSPECIFIED
            - KEEP
            - FALLBACK
        flowImportStrategy:
          description: >-
            Optional. Specifies the import strategy used when resolving resource
            conflicts.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3FlowImportStrategy'
    GoogleCloudDialogflowCxV3FlowImportStrategy:
      id: GoogleCloudDialogflowCxV3FlowImportStrategy
      description: >-
        The flow import strategy used for resource conflict resolution
        associated with an ImportFlowRequest.
      type: object
      properties:
        globalImportStrategy:
          description: >-
            Optional. Import strategy for resource conflict resolution, applied
            globally throughout the flow. It will be applied for all display
            name conflicts in the imported content. If not specified,
            'CREATE_NEW' is assumed.
          type: string
          enumDescriptions:
            - Unspecified. Treated as 'CREATE_NEW'.
            - >-
              Create a new resource with a numeric suffix appended to the end of
              the existing display name.
            - >-
              Replace existing resource with incoming resource in the content to
              be imported.
            - >-
              Keep existing resource and discard incoming resource in the
              content to be imported.
            - >-
              Combine existing and incoming resources when a conflict is
              encountered.
            - Throw error if a conflict is encountered.
          enum:
            - IMPORT_STRATEGY_UNSPECIFIED
            - IMPORT_STRATEGY_CREATE_NEW
            - IMPORT_STRATEGY_REPLACE
            - IMPORT_STRATEGY_KEEP
            - IMPORT_STRATEGY_MERGE
            - IMPORT_STRATEGY_THROW_ERROR
    GoogleCloudDialogflowCxV3ExportFlowRequest:
      id: GoogleCloudDialogflowCxV3ExportFlowRequest
      description: The request message for Flows.ExportFlow.
      type: object
      properties:
        flowUri:
          description: >-
            Optional. The [Google Cloud
            Storage](https://cloud.google.com/storage/docs/) URI to export the
            flow to. The format of this URI must be `gs:///`. If left
            unspecified, the serialized flow is returned inline. Dialogflow
            performs a write operation for the Cloud Storage object on the
            caller's behalf, so your request authentication must have write
            permissions for the object. For more information, see [Dialogflow
            access
            control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
          type: string
        includeReferencedFlows:
          description: Optional. Whether to export flows referenced by the specified flow.
          type: boolean
    GoogleCloudDialogflowCxV3SecuritySettings:
      id: GoogleCloudDialogflowCxV3SecuritySettings
      description: >-
        Represents the settings related to security issues, such as data
        redaction and data retention. It may take hours for updates on the
        settings to propagate to all the related components and take effect.
      type: object
      properties:
        name:
          description: >-
            Resource name of the settings. Required for the
            SecuritySettingsService.UpdateSecuritySettings method.
            SecuritySettingsService.CreateSecuritySettings populates the name
            automatically. Format: `projects//locations//securitySettings/`.
          type: string
        displayName:
          description: >-
            Required. The human-readable name of the security settings, unique
            within the location.
          type: string
        redactionStrategy:
          description: Strategy that defines how we do redaction.
          type: string
          enumDescriptions:
            - Do not redact.
            - Call redaction service to clean up the data to be persisted.
          enum:
            - REDACTION_STRATEGY_UNSPECIFIED
            - REDACT_WITH_SERVICE
        redactionScope:
          description: >-
            Defines the data for which Dialogflow applies redaction. Dialogflow
            does not redact data that it does not have access to – for example,
            Cloud logging.
          type: string
          enumDescriptions:
            - Don't redact any kind of data.
            - >-
              On data to be written to disk or similar devices that are capable
              of holding data even if power is disconnected. This includes data
              that are temporarily saved on disk.
          enum:
            - REDACTION_SCOPE_UNSPECIFIED
            - REDACT_DISK_STORAGE
        inspectTemplate:
          description: >-
            [DLP](https://cloud.google.com/dlp/docs) inspect template name. Use
            this template to define inspect base settings. The `DLP Inspect
            Templates Reader` role is needed on the Dialogflow service identity
            service account (has the form
            `service-PROJECT_NUMBER@gcp-sa-dialogflow.iam.gserviceaccount.com`)
            for your agent's project. If empty, we use the default DLP inspect
            config. The template name will have one of the following formats:
            `projects//locations//inspectTemplates/` OR
            `organizations//locations//inspectTemplates/` Note:
            `inspect_template` must be located in the same region as the
            `SecuritySettings`.
          type: string
        deidentifyTemplate:
          description: >-
            [DLP](https://cloud.google.com/dlp/docs) deidentify template name.
            Use this template to define de-identification configuration for the
            content. The `DLP De-identify Templates Reader` role is needed on
            the Dialogflow service identity service account (has the form
            `service-PROJECT_NUMBER@gcp-sa-dialogflow.iam.gserviceaccount.com`)
            for your agent's project. If empty, Dialogflow replaces sensitive
            info with `[redacted]` text. The template name will have one of the
            following formats: `projects//locations//deidentifyTemplates/` OR
            `organizations//locations//deidentifyTemplates/` Note:
            `deidentify_template` must be located in the same region as the
            `SecuritySettings`.
          type: string
        retentionWindowDays:
          description: >-
            Retains the data for the specified number of days. User must set a
            value lower than Dialogflow's default 365d TTL (30 days for Agent
            Assist traffic), higher value will be ignored and use default.
            Setting a value higher than that has no effect. A missing value or
            setting to 0 also means we use default TTL. When data retention
            configuration is changed, it only applies to the data created after
            the change; the TTL of existing data created before the change stays
            intact.
          type: integer
          format: int32
        retentionStrategy:
          description: >-
            Specifies the retention behavior defined by
            SecuritySettings.RetentionStrategy.
          type: string
          enumDescriptions:
            - >-
              Retains the persisted data with Dialogflow's internal default 365d
              TTLs.
            - >-
              Removes data when the conversation ends. If there is no
              Conversation explicitly established, a default conversation ends
              when the corresponding Dialogflow session ends.
          enum:
            - RETENTION_STRATEGY_UNSPECIFIED
            - REMOVE_AFTER_CONVERSATION
        purgeDataTypes:
          description: >-
            List of types of data to remove when retention settings triggers
            purge.
          type: array
          items:
            type: string
            enumDescriptions:
              - Unspecified. Do not use.
              - >-
                Dialogflow history. This does not include Cloud logging, which
                is owned by the user - not Dialogflow.
            enum:
              - PURGE_DATA_TYPE_UNSPECIFIED
              - DIALOGFLOW_HISTORY
        audioExportSettings:
          description: >-
            Controls audio export settings for post-conversation analytics when
            ingesting audio to conversations via Participants.AnalyzeContent or
            Participants.StreamingAnalyzeContent. If retention_strategy is set
            to REMOVE_AFTER_CONVERSATION or audio_export_settings.gcs_bucket is
            empty, audio export is disabled. If audio export is enabled, audio
            is recorded and saved to audio_export_settings.gcs_bucket, subject
            to retention policy of audio_export_settings.gcs_bucket. This
            setting won't effect audio input for implicit sessions via
            Sessions.DetectIntent or Sessions.StreamingDetectIntent.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings
        insightsExportSettings:
          description: >-
            Controls conversation exporting settings to Insights after
            conversation is completed. If retention_strategy is set to
            REMOVE_AFTER_CONVERSATION, Insights export is disabled no matter
            what you configure here.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettings
    GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings:
      id: GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings
      description: Settings for exporting audio.
      type: object
      properties:
        gcsBucket:
          description: >-
            Cloud Storage bucket to export audio record to. Setting this field
            would grant the Storage Object Creator role to the Dialogflow
            Service Agent. API caller that tries to modify this field should
            have the permission of storage.buckets.setIamPolicy.
          type: string
        audioExportPattern:
          description: Filename pattern for exported audio.
          type: string
        enableAudioRedaction:
          description: >-
            Enable audio redaction if it is true. Note that this only redacts
            end-user audio data; Synthesised audio from the virtual agent is not
            redacted.
          type: boolean
        audioFormat:
          description: >-
            File format for exported audio file. Currently only in telephony
            recordings.
          type: string
          enumDescriptions:
            - Unspecified. Do not use.
            - G.711 mu-law PCM with 8kHz sample rate.
            - MP3 file format.
            - OGG Vorbis.
          enum:
            - AUDIO_FORMAT_UNSPECIFIED
            - MULAW
            - MP3
            - OGG
        storeTtsAudio:
          description: >-
            Whether to store TTS audio. By default, TTS audio from the virtual
            agent is not exported.
          type: boolean
    GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettings:
      id: GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettings
      description: >-
        Settings for exporting conversations to
        [Insights](https://cloud.google.com/contact-center/insights/docs).
      type: object
      properties:
        enableInsightsExport:
          description: >-
            If enabled, we will automatically exports conversations to Insights
            and Insights runs its analyzers.
          type: boolean
    GoogleCloudDialogflowCxV3ListSecuritySettingsResponse:
      id: GoogleCloudDialogflowCxV3ListSecuritySettingsResponse
      description: The response message for SecuritySettings.ListSecuritySettings.
      type: object
      properties:
        securitySettings:
          description: The list of security settings.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3SecuritySettings'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    GoogleCloudDialogflowCxV3ListAgentsResponse:
      id: GoogleCloudDialogflowCxV3ListAgentsResponse
      description: The response message for Agents.ListAgents.
      type: object
      properties:
        agents:
          description: >-
            The list of agents. There will be a maximum number of items returned
            based on the page_size field in the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Agent'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    GoogleCloudDialogflowCxV3Agent:
      id: GoogleCloudDialogflowCxV3Agent
      description: >-
        Agents are best described as Natural Language Understanding (NLU)
        modules that transform user requests into actionable data. You can
        include agents in your app, product, or service to determine user intent
        and respond to the user in a natural way. After you create an agent, you
        can add Intents, Entity Types, Flows, Fulfillments, Webhooks,
        TransitionRouteGroups and so on to manage the conversation flows.
      type: object
      properties:
        name:
          description: >-
            The unique identifier of the agent. Required for the
            Agents.UpdateAgent method. Agents.CreateAgent populates the name
            automatically. Format: `projects//locations//agents/`.
          type: string
        displayName:
          description: >-
            Required. The human-readable name of the agent, unique within the
            location.
          type: string
        defaultLanguageCode:
          description: >-
            Required. Immutable. The default language of the agent as a language
            tag. See [Language
            Support](https://cloud.google.com/dialogflow/cx/docs/reference/language)
            for a list of the currently supported language codes. This field
            cannot be set by the Agents.UpdateAgent method.
          type: string
        supportedLanguageCodes:
          description: >-
            The list of all languages supported by the agent (except for the
            `default_language_code`).
          type: array
          items:
            type: string
        timeZone:
          description: >-
            Required. The time zone of the agent from the [time zone
            database](https://www.iana.org/time-zones), e.g., America/New_York,
            Europe/Paris.
          type: string
        description:
          description: >-
            The description of the agent. The maximum length is 500 characters.
            If exceeded, the request is rejected.
          type: string
        avatarUri:
          description: >-
            The URI of the agent's avatar. Avatars are used throughout the
            Dialogflow console and in the self-hosted [Web
            Demo](https://cloud.google.com/dialogflow/docs/integrations/web-demo)
            integration.
          type: string
        speechToTextSettings:
          description: Speech recognition related settings.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3SpeechToTextSettings'
        startFlow:
          description: >-
            Immutable. Name of the start flow in this agent. A start flow will
            be automatically created when the agent is created, and can only be
            deleted by deleting the agent. Format:
            `projects//locations//agents//flows/`.
          type: string
        securitySettings:
          description: >-
            Name of the SecuritySettings reference for the agent. Format:
            `projects//locations//securitySettings/`.
          type: string
        enableStackdriverLogging:
          description: >-
            Indicates if stackdriver logging is enabled for the agent. Please
            use agent.advanced_settings instead.
          deprecated: true
          type: boolean
        enableSpellCorrection:
          description: >-
            Indicates if automatic spell correction is enabled in detect intent
            requests.
          type: boolean
        enableMultiLanguageTraining:
          description: >-
            Optional. Enable training multi-lingual models for this agent. These
            models will be trained on all the languages supported by the agent.
          type: boolean
        locked:
          description: >-
            Indicates whether the agent is locked for changes. If the agent is
            locked, modifications to the agent will be rejected except for
            RestoreAgent.
          type: boolean
        advancedSettings:
          description: >-
            Hierarchical advanced settings for this agent. The settings exposed
            at the lower level overrides the settings exposed at the higher
            level.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3AdvancedSettings'
        gitIntegrationSettings:
          description: Git integration settings for this agent.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3AgentGitIntegrationSettings
        textToSpeechSettings:
          description: >-
            Settings on instructing the speech synthesizer on how to generate
            the output audio content.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3TextToSpeechSettings'
        genAppBuilderSettings:
          description: Gen App Builder-related agent-level settings.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3AgentGenAppBuilderSettings
        answerFeedbackSettings:
          description: Optional. Answer feedback collection settings.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettings
        personalizationSettings:
          description: Optional. Settings for end user personalization.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3AgentPersonalizationSettings
        clientCertificateSettings:
          description: Optional. Settings for custom client certificates.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3AgentClientCertificateSettings
    GoogleCloudDialogflowCxV3SpeechToTextSettings:
      id: GoogleCloudDialogflowCxV3SpeechToTextSettings
      description: Settings related to speech recognition.
      type: object
      properties:
        enableSpeechAdaptation:
          description: Whether to use speech adaptation for speech recognition.
          type: boolean
    GoogleCloudDialogflowCxV3AgentGitIntegrationSettings:
      id: GoogleCloudDialogflowCxV3AgentGitIntegrationSettings
      description: Settings for connecting to Git repository for an agent.
      type: object
      properties:
        githubSettings:
          description: GitHub settings.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettings
    GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettings:
      id: GoogleCloudDialogflowCxV3AgentGitIntegrationSettingsGithubSettings
      description: Settings of integration with GitHub.
      type: object
      properties:
        displayName:
          description: The unique repository display name for the GitHub repository.
          type: string
        repositoryUri:
          description: The GitHub repository URI related to the agent.
          type: string
        trackingBranch:
          description: The branch of the GitHub repository tracked for this agent.
          type: string
        accessToken:
          description: >-
            The access token used to authenticate the access to the GitHub
            repository.
          type: string
        branches:
          description: A list of branches configured to be used from Dialogflow.
          type: array
          items:
            type: string
    GoogleCloudDialogflowCxV3TextToSpeechSettings:
      id: GoogleCloudDialogflowCxV3TextToSpeechSettings
      description: Settings related to speech synthesizing.
      type: object
      properties:
        synthesizeSpeechConfigs:
          description: >-
            Configuration of how speech should be synthesized, mapping from
            language
            (https://cloud.google.com/dialogflow/cx/docs/reference/language) to
            SynthesizeSpeechConfig. These settings affect: - The [phone
            gateway](https://cloud.google.com/dialogflow/cx/docs/concept/integration/phone-gateway)
            synthesize configuration set via Agent.text_to_speech_settings. -
            How speech is synthesized when invoking session APIs.
            Agent.text_to_speech_settings only applies if
            OutputAudioConfig.synthesize_speech_config is not specified.
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3SynthesizeSpeechConfig
    GoogleCloudDialogflowCxV3SynthesizeSpeechConfig:
      id: GoogleCloudDialogflowCxV3SynthesizeSpeechConfig
      description: Configuration of how speech should be synthesized.
      type: object
      properties:
        speakingRate:
          description: >-
            Optional. Speaking rate/speed, in the range [0.25, 4.0]. 1.0 is the
            normal native speed supported by the specific voice. 2.0 is twice as
            fast, and 0.5 is half as fast. If unset(0.0), defaults to the native
            1.0 speed. Any other values < 0.25 or > 4.0 will return an error.
          type: number
          format: double
        pitch:
          description: >-
            Optional. Speaking pitch, in the range [-20.0, 20.0]. 20 means
            increase 20 semitones from the original pitch. -20 means decrease 20
            semitones from the original pitch.
          type: number
          format: double
        volumeGainDb:
          description: >-
            Optional. Volume gain (in dB) of the normal native volume supported
            by the specific voice, in the range [-96.0, 16.0]. If unset, or set
            to a value of 0.0 (dB), will play at normal native signal amplitude.
            A value of -6.0 (dB) will play at approximately half the amplitude
            of the normal native signal amplitude. A value of +6.0 (dB) will
            play at approximately twice the amplitude of the normal native
            signal amplitude. We strongly recommend not to exceed +10 (dB) as
            there's usually no effective increase in loudness for any value
            greater than that.
          type: number
          format: double
        effectsProfileId:
          description: >-
            Optional. An identifier which selects 'audio effects' profiles that
            are applied on (post synthesized) text to speech. Effects are
            applied on top of each other in the order they are given.
          type: array
          items:
            type: string
        voice:
          description: Optional. The desired voice of the synthesized audio.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3VoiceSelectionParams'
    GoogleCloudDialogflowCxV3VoiceSelectionParams:
      id: GoogleCloudDialogflowCxV3VoiceSelectionParams
      description: Description of which voice to use for speech synthesis.
      type: object
      properties:
        name:
          description: >-
            Optional. The name of the voice. If not set, the service will choose
            a voice based on the other parameters such as language_code and
            ssml_gender. For the list of available voices, please refer to
            [Supported voices and
            languages](https://cloud.google.com/text-to-speech/docs/voices).
          type: string
        ssmlGender:
          description: >-
            Optional. The preferred gender of the voice. If not set, the service
            will choose a voice based on the other parameters such as
            language_code and name. Note that this is only a preference, not
            requirement. If a voice of the appropriate gender is not available,
            the synthesizer substitutes a voice with a different gender rather
            than failing the request.
          type: string
          enumDescriptions:
            - >-
              An unspecified gender, which means that the client doesn't care
              which gender the selected voice will have.
            - A male voice.
            - A female voice.
            - A gender-neutral voice.
          enum:
            - SSML_VOICE_GENDER_UNSPECIFIED
            - SSML_VOICE_GENDER_MALE
            - SSML_VOICE_GENDER_FEMALE
            - SSML_VOICE_GENDER_NEUTRAL
    GoogleCloudDialogflowCxV3AgentGenAppBuilderSettings:
      id: GoogleCloudDialogflowCxV3AgentGenAppBuilderSettings
      description: Settings for Gen App Builder.
      type: object
      properties:
        engine:
          description: >-
            Required. The full name of the Gen App Builder engine related to
            this agent if there is one. Format: `projects/{Project
            ID}/locations/{Location ID}/collections/{Collection
            ID}/engines/{Engine ID}`
          type: string
    GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettings:
      id: GoogleCloudDialogflowCxV3AgentAnswerFeedbackSettings
      description: Settings for answer feedback collection.
      type: object
      properties:
        enableAnswerFeedback:
          description: >-
            Optional. If enabled, end users will be able to provide answer
            feedback to Dialogflow responses. Feature works only if interaction
            logging is enabled in the Dialogflow agent.
          type: boolean
    GoogleCloudDialogflowCxV3AgentPersonalizationSettings:
      id: GoogleCloudDialogflowCxV3AgentPersonalizationSettings
      description: Settings for end user personalization.
      type: object
      properties:
        defaultEndUserMetadata:
          description: >-
            Optional. Default end user metadata, used when processing
            DetectIntent requests. Recommended to be filled as a template
            instead of hard-coded value, for example { "age":
            "$session.params.age" }. The data will be merged with the
            QueryParameters.end_user_metadata in
            DetectIntentRequest.query_params during query processing.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
    GoogleCloudDialogflowCxV3AgentClientCertificateSettings:
      id: GoogleCloudDialogflowCxV3AgentClientCertificateSettings
      description: Settings for custom client certificates.
      type: object
      properties:
        sslCertificate:
          description: >-
            Required. The ssl certificate encoded in PEM format. This string
            must include the begin header and end footer lines.
          type: string
        privateKey:
          description: >-
            Required. The name of the SecretManager secret version resource
            storing the private key encoded in PEM format. Format:
            `projects/{project}/secrets/{secret}/versions/{version}`
          type: string
        passphrase:
          description: >-
            Optional. The name of the SecretManager secret version resource
            storing the passphrase. 'passphrase' should be left unset if the
            private key is not encrypted. Format:
            `projects/{project}/secrets/{secret}/versions/{version}`
          type: string
    GoogleCloudDialogflowCxV3ExportAgentRequest:
      id: GoogleCloudDialogflowCxV3ExportAgentRequest
      description: The request message for Agents.ExportAgent.
      type: object
      properties:
        agentUri:
          description: >-
            Optional. The [Google Cloud
            Storage](https://cloud.google.com/storage/docs/) URI to export the
            agent to. The format of this URI must be `gs:///`. If left
            unspecified, the serialized agent is returned inline. Dialogflow
            performs a write operation for the Cloud Storage object on the
            caller's behalf, so your request authentication must have write
            permissions for the object. For more information, see [Dialogflow
            access
            control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
          type: string
        dataFormat:
          description: >-
            Optional. The data format of the exported agent. If not specified,
            `BLOB` is assumed.
          type: string
          enumDescriptions:
            - Unspecified format.
            - Agent content will be exported as raw bytes.
            - Agent content will be exported in JSON Package format.
          enum:
            - DATA_FORMAT_UNSPECIFIED
            - BLOB
            - JSON_PACKAGE
        environment:
          description: >-
            Optional. Environment name. If not set, draft environment is
            assumed. Format: `projects//locations//agents//environments/`.
          type: string
        gitDestination:
          description: Optional. The Git branch to export the agent to.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3ExportAgentRequestGitDestination
        includeBigqueryExportSettings:
          description: Optional. Whether to include BigQuery Export setting.
          type: boolean
    GoogleCloudDialogflowCxV3ExportAgentRequestGitDestination:
      id: GoogleCloudDialogflowCxV3ExportAgentRequestGitDestination
      description: Settings for exporting to a git branch.
      type: object
      properties:
        trackingBranch:
          description: Tracking branch for the git push.
          type: string
        commitMessage:
          description: Commit message for the git push.
          type: string
    GoogleCloudDialogflowCxV3RestoreAgentRequest:
      id: GoogleCloudDialogflowCxV3RestoreAgentRequest
      description: The request message for Agents.RestoreAgent.
      type: object
      properties:
        agentUri:
          description: >-
            The [Google Cloud Storage](https://cloud.google.com/storage/docs/)
            URI to restore agent from. The format of this URI must be `gs:///`.
            Dialogflow performs a read operation for the Cloud Storage object on
            the caller's behalf, so your request authentication must have read
            permissions for the object. For more information, see [Dialogflow
            access
            control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
          type: string
        agentContent:
          description: Uncompressed raw byte content for agent.
          type: string
          format: byte
        gitSource:
          description: Setting for restoring from a git branch
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3RestoreAgentRequestGitSource
        restoreOption:
          description: Agent restore mode. If not specified, `KEEP` is assumed.
          type: string
          enumDescriptions:
            - Unspecified. Treated as KEEP.
            - >-
              Always respect the settings from the exported agent file. It may
              cause a restoration failure if some settings (e.g. model type) are
              not supported in the target agent.
            - >-
              Fallback to default settings if some settings are not supported in
              the target agent.
          enum:
            - RESTORE_OPTION_UNSPECIFIED
            - KEEP
            - FALLBACK
    GoogleCloudDialogflowCxV3RestoreAgentRequestGitSource:
      id: GoogleCloudDialogflowCxV3RestoreAgentRequestGitSource
      description: Settings for restoring from a git branch
      type: object
      properties:
        trackingBranch:
          description: tracking branch for the git pull
          type: string
    GoogleCloudDialogflowCxV3ValidateAgentRequest:
      id: GoogleCloudDialogflowCxV3ValidateAgentRequest
      description: The request message for Agents.ValidateAgent.
      type: object
      properties:
        languageCode:
          description: If not specified, the agent's default language is used.
          type: string
    GoogleCloudDialogflowCxV3AgentValidationResult:
      id: GoogleCloudDialogflowCxV3AgentValidationResult
      description: The response message for Agents.GetAgentValidationResult.
      type: object
      properties:
        name:
          description: >-
            The unique identifier of the agent validation result. Format:
            `projects//locations//agents//validationResult`.
          type: string
        flowValidationResults:
          description: Contains all flow validation results.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3FlowValidationResult'
    GoogleCloudDialogflowCxV3GenerativeSettings:
      id: GoogleCloudDialogflowCxV3GenerativeSettings
      description: Settings for Generative AI.
      type: object
      properties:
        name:
          description: 'Format: `projects//locations//agents//generativeSettings`.'
          type: string
        fallbackSettings:
          description: Settings for Generative Fallback.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3GenerativeSettingsFallbackSettings
        generativeSafetySettings:
          description: Settings for Generative Safety.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3SafetySettings'
        knowledgeConnectorSettings:
          description: Settings for knowledge connector.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3GenerativeSettingsKnowledgeConnectorSettings
        languageCode:
          description: Language for this settings.
          type: string
    GoogleCloudDialogflowCxV3GenerativeSettingsFallbackSettings:
      id: GoogleCloudDialogflowCxV3GenerativeSettingsFallbackSettings
      description: Settings for Generative Fallback.
      type: object
      properties:
        selectedPrompt:
          description: Display name of the selected prompt.
          type: string
        promptTemplates:
          description: >-
            Stored prompts that can be selected, for example default templates
            like "conservative" or "chatty", or user defined ones.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3GenerativeSettingsFallbackSettingsPromptTemplate
    GoogleCloudDialogflowCxV3GenerativeSettingsFallbackSettingsPromptTemplate:
      id: >-
        GoogleCloudDialogflowCxV3GenerativeSettingsFallbackSettingsPromptTemplate
      description: Prompt template.
      type: object
      properties:
        displayName:
          description: Prompt name.
          type: string
        promptText:
          description: >-
            Prompt text that is sent to a LLM on no-match default, placeholders
            are filled downstream. For example: "Here is a conversation
            $conversation, a response is: "
          type: string
        frozen:
          description: >-
            If the flag is true, the prompt is frozen and cannot be modified by
            users.
          type: boolean
    GoogleCloudDialogflowCxV3SafetySettings:
      id: GoogleCloudDialogflowCxV3SafetySettings
      description: Settings for Generative Safety.
      type: object
      properties:
        bannedPhrases:
          description: Banned phrases for generated text.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3SafetySettingsPhrase'
    GoogleCloudDialogflowCxV3SafetySettingsPhrase:
      id: GoogleCloudDialogflowCxV3SafetySettingsPhrase
      description: Text input which can be used for prompt or banned phrases.
      type: object
      properties:
        text:
          description: Required. Text input which can be used for prompt or banned phrases.
          type: string
        languageCode:
          description: Required. Language code of the phrase.
          type: string
    GoogleCloudDialogflowCxV3GenerativeSettingsKnowledgeConnectorSettings:
      id: GoogleCloudDialogflowCxV3GenerativeSettingsKnowledgeConnectorSettings
      description: >-
        Settings for knowledge connector. These parameters are used for LLM
        prompt like "You are . You are a helpful and verbose at , . Your task is
        to help humans on ".
      type: object
      properties:
        business:
          description: >-
            Name of the company, organization or other entity that the agent
            represents. Used for knowledge connector LLM prompt and for
            knowledge search.
          type: string
        agent:
          description: Name of the virtual agent. Used for LLM prompt. Can be left empty.
          type: string
        agentIdentity:
          description: Identity of the agent, e.g. "virtual agent", "AI assistant".
          type: string
        businessDescription:
          description: >-
            Company description, used for LLM prompt, e.g. "a family company
            selling freshly roasted coffee beans".
          type: string
        agentScope:
          description: >-
            Agent scope, e.g. "Example company website", "internal Example
            company website for employees", "manual of car owner".
          type: string
        disableDataStoreFallback:
          description: >-
            Whether to disable fallback to Data Store search results (in case
            the LLM couldn't pick a proper answer). Per default the feature is
            enabled.
          type: boolean
    GoogleCloudDialogflowCxV3ListChangelogsResponse:
      id: GoogleCloudDialogflowCxV3ListChangelogsResponse
      description: The response message for Changelogs.ListChangelogs.
      type: object
      properties:
        changelogs:
          description: >-
            The list of changelogs. There will be a maximum number of items
            returned based on the page_size field in the request. The changelogs
            will be ordered by timestamp.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Changelog'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    GoogleCloudDialogflowCxV3Changelog:
      id: GoogleCloudDialogflowCxV3Changelog
      description: Changelogs represents a change made to a given agent.
      type: object
      properties:
        name:
          description: >-
            The unique identifier of the changelog. Format:
            `projects//locations//agents//changelogs/`.
          type: string
        userEmail:
          description: Email address of the authenticated user.
          type: string
        displayName:
          description: The affected resource display name of the change.
          type: string
        action:
          description: The action of the change.
          type: string
        type:
          description: The affected resource type.
          type: string
        resource:
          description: The affected resource name of the change.
          type: string
        createTime:
          description: The timestamp of the change.
          type: string
          format: google-datetime
        languageCode:
          description: The affected language code of the change.
          type: string
    GoogleCloudDialogflowCxV3ListDeploymentsResponse:
      id: GoogleCloudDialogflowCxV3ListDeploymentsResponse
      description: The response message for Deployments.ListDeployments.
      type: object
      properties:
        deployments:
          description: >-
            The list of deployments. There will be a maximum number of items
            returned based on the page_size field in the request. The list may
            in some cases be empty or contain fewer entries than page_size even
            if this isn't the last page.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Deployment'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    GoogleCloudDialogflowCxV3Deployment:
      id: GoogleCloudDialogflowCxV3Deployment
      description: >-
        Represents a deployment in an environment. A deployment happens when a
        flow version configured to be active in the environment. You can
        configure running pre-deployment steps, e.g. running validation test
        cases, experiment auto-rollout, etc.
      type: object
      properties:
        name:
          description: >-
            The name of the deployment. Format:
            projects//locations//agents//environments//deployments/.
          type: string
        flowVersion:
          description: >-
            The name of the flow version for this deployment. Format:
            projects//locations//agents//flows//versions/.
          type: string
        state:
          description: The current state of the deployment.
          type: string
          enumDescriptions:
            - State unspecified.
            - The deployment is running.
            - The deployment succeeded.
            - The deployment failed.
          enum:
            - STATE_UNSPECIFIED
            - RUNNING
            - SUCCEEDED
            - FAILED
        result:
          description: Result of the deployment.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3DeploymentResult'
        startTime:
          description: Start time of this deployment.
          type: string
          format: google-datetime
        endTime:
          description: End time of this deployment.
          type: string
          format: google-datetime
    GoogleCloudDialogflowCxV3DeploymentResult:
      id: GoogleCloudDialogflowCxV3DeploymentResult
      description: Result of the deployment.
      type: object
      properties:
        deploymentTestResults:
          description: >-
            Results of test cases running before the deployment. Format:
            `projects//locations//agents//testCases//results/`.
          type: array
          items:
            type: string
        experiment:
          description: >-
            The name of the experiment triggered by this deployment. Format:
            projects//locations//agents//environments//experiments/.
          type: string
    GoogleCloudDialogflowCxV3EntityType:
      id: GoogleCloudDialogflowCxV3EntityType
      description: >-
        Entities are extracted from user input and represent parameters that are
        meaningful to your application. For example, a date range, a proper name
        such as a geographic location or landmark, and so on. Entities represent
        actionable data for your application. When you define an entity, you can
        also include synonyms that all map to that entity. For example, "soft
        drink", "soda", "pop", and so on. There are three types of entities: *
        **System** - entities that are defined by the Dialogflow API for common
        data types such as date, time, currency, and so on. A system entity is
        represented by the `EntityType` type. * **Custom** - entities that are
        defined by you that represent actionable data that is meaningful to your
        application. For example, you could define a `pizza.sauce` entity for
        red or white pizza sauce, a `pizza.cheese` entity for the different
        types of cheese on a pizza, a `pizza.topping` entity for different
        toppings, and so on. A custom entity is represented by the `EntityType`
        type. * **User** - entities that are built for an individual user such
        as favorites, preferences, playlists, and so on. A user entity is
        represented by the SessionEntityType type. For more information about
        entity types, see the [Dialogflow
        documentation](https://cloud.google.com/dialogflow/docs/entities-overview).
      type: object
      properties:
        name:
          description: >-
            The unique identifier of the entity type. Required for
            EntityTypes.UpdateEntityType. Format:
            `projects//locations//agents//entityTypes/`.
          type: string
        displayName:
          description: >-
            Required. The human-readable name of the entity type, unique within
            the agent.
          type: string
        kind:
          description: Required. Indicates the kind of entity type.
          type: string
          enumDescriptions:
            - Not specified. This value should be never used.
            - >-
              Map entity types allow mapping of a group of synonyms to a
              canonical value.
            - >-
              List entity types contain a set of entries that do not map to
              canonical values. However, list entity types can contain
              references to other entity types (with or without aliases).
            - >-
              Regexp entity types allow to specify regular expressions in
              entries values.
          enum:
            - KIND_UNSPECIFIED
            - KIND_MAP
            - KIND_LIST
            - KIND_REGEXP
        autoExpansionMode:
          description: Indicates whether the entity type can be automatically expanded.
          type: string
          enumDescriptions:
            - Auto expansion disabled for the entity.
            - >-
              Allows an agent to recognize values that have not been explicitly
              listed in the entity.
          enum:
            - AUTO_EXPANSION_MODE_UNSPECIFIED
            - AUTO_EXPANSION_MODE_DEFAULT
        entities:
          description: The collection of entity entries associated with the entity type.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3EntityTypeEntity'
        excludedPhrases:
          description: >-
            Collection of exceptional words and phrases that shouldn't be
            matched. For example, if you have a size entity type with entry
            `giant`(an adjective), you might consider adding `giants`(a noun) as
            an exclusion. If the kind of entity type is `KIND_MAP`, then the
            phrases specified by entities and excluded phrases should be
            mutually exclusive.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3EntityTypeExcludedPhrase
        enableFuzzyExtraction:
          description: Enables fuzzy entity extraction during classification.
          type: boolean
        redact:
          description: >-
            Indicates whether parameters of the entity type should be redacted
            in log. If redaction is enabled, page parameters and intent
            parameters referring to the entity type will be replaced by
            parameter name when logging.
          type: boolean
    GoogleCloudDialogflowCxV3EntityTypeEntity:
      id: GoogleCloudDialogflowCxV3EntityTypeEntity
      description: An **entity entry** for an associated entity type.
      type: object
      properties:
        value:
          description: >-
            Required. The primary value associated with this entity entry. For
            example, if the entity type is *vegetable*, the value could be
            *scallions*. For `KIND_MAP` entity types: * A canonical value to be
            used in place of synonyms. For `KIND_LIST` entity types: * A string
            that can contain references to other entity types (with or without
            aliases).
          type: string
        synonyms:
          description: >-
            Required. A collection of value synonyms. For example, if the entity
            type is *vegetable*, and `value` is *scallions*, a synonym could be
            *green onions*. For `KIND_LIST` entity types: * This collection must
            contain exactly one synonym equal to `value`.
          type: array
          items:
            type: string
    GoogleCloudDialogflowCxV3EntityTypeExcludedPhrase:
      id: GoogleCloudDialogflowCxV3EntityTypeExcludedPhrase
      description: An excluded entity phrase that should not be matched.
      type: object
      properties:
        value:
          description: Required. The word or phrase to be excluded.
          type: string
    GoogleCloudDialogflowCxV3ListEntityTypesResponse:
      id: GoogleCloudDialogflowCxV3ListEntityTypesResponse
      description: The response message for EntityTypes.ListEntityTypes.
      type: object
      properties:
        entityTypes:
          description: >-
            The list of entity types. There will be a maximum number of items
            returned based on the page_size field in the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3EntityType'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    GoogleCloudDialogflowCxV3ExportEntityTypesRequest:
      id: GoogleCloudDialogflowCxV3ExportEntityTypesRequest
      description: The request message for EntityTypes.ExportEntityTypes.
      type: object
      properties:
        entityTypes:
          description: >-
            Required. The name of the entity types to export. Format:
            `projects//locations//agents//entityTypes/`.
          type: array
          items:
            type: string
        entityTypesUri:
          description: >-
            Optional. The [Google Cloud
            Storage](https://cloud.google.com/storage/docs/) URI to export the
            entity types to. The format of this URI must be `gs:///`. Dialogflow
            performs a write operation for the Cloud Storage object on the
            caller's behalf, so your request authentication must have write
            permissions for the object. For more information, see [Dialogflow
            access
            control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
          type: string
        entityTypesContentInline:
          description: Optional. The option to return the serialized entity types inline.
          type: boolean
        dataFormat:
          description: >-
            Optional. The data format of the exported entity types. If not
            specified, `BLOB` is assumed.
          type: string
          enumDescriptions:
            - Unspecified format. Treated as `BLOB`.
            - EntityTypes will be exported as raw bytes.
            - EntityTypes will be exported in JSON Package format.
          enum:
            - DATA_FORMAT_UNSPECIFIED
            - BLOB
            - JSON_PACKAGE
        languageCode:
          description: >-
            Optional. The language to retrieve the entity type for. The
            following fields are language dependent: *
            `EntityType.entities.value` * `EntityType.entities.synonyms` *
            `EntityType.excluded_phrases.value` If not specified, all language
            dependent fields will be retrieved. [Many
            languages](https://cloud.google.com/dialogflow/docs/reference/language)
            are supported. Note: languages must be enabled in the agent before
            they can be used.
          type: string
    GoogleCloudDialogflowCxV3ImportEntityTypesRequest:
      id: GoogleCloudDialogflowCxV3ImportEntityTypesRequest
      description: The request message for EntityTypes.ImportEntityTypes.
      type: object
      properties:
        entityTypesUri:
          description: >-
            The [Google Cloud Storage](https://cloud.google.com/storage/docs/)
            URI to import entity types from. The format of this URI must be
            `gs:///`. Dialogflow performs a read operation for the Cloud Storage
            object on the caller's behalf, so your request authentication must
            have read permissions for the object. For more information, see
            [Dialogflow access
            control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
          type: string
        entityTypesContent:
          description: Uncompressed byte content of entity types.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3InlineSource'
        mergeOption:
          description: Required. Merge option for importing entity types.
          type: string
          enumDescriptions:
            - Unspecified. If used, system uses REPORT_CONFLICT as default.
            - >-
              Replace the original entity type in the agent with the new entity
              type when display name conflicts exist.
            - >-
              Merge the original entity type with the new entity type when
              display name conflicts exist.
            - >-
              Create new entity types with new display names to differentiate
              them from the existing entity types when display name conflicts
              exist.
            - >-
              Report conflict information if display names conflict is detected.
              Otherwise, import entity types.
            - >-
              Keep the original entity type and discard the conflicting new
              entity type when display name conflicts exist.
          enum:
            - MERGE_OPTION_UNSPECIFIED
            - REPLACE
            - MERGE
            - RENAME
            - REPORT_CONFLICT
            - KEEP
        targetEntityType:
          description: >-
            Optional. The target entity type to import into. Format:
            `projects//locations//agents//entity_types/`. If set, there should
            be only one entity type included in entity_types, of which the type
            should match the type of the target entity type. All entities in the
            imported entity type will be added to the target entity type.
          type: string
    GoogleCloudDialogflowCxV3InlineSource:
      id: GoogleCloudDialogflowCxV3InlineSource
      description: >-
        Inline source for a Dialogflow operation that reads or imports objects
        (e.g. intents) into Dialogflow.
      type: object
      properties:
        content:
          description: The uncompressed byte content for the objects.
          type: string
          format: byte
    GoogleCloudDialogflowCxV3ListIntentsResponse:
      id: GoogleCloudDialogflowCxV3ListIntentsResponse
      description: The response message for Intents.ListIntents.
      type: object
      properties:
        intents:
          description: >-
            The list of intents. There will be a maximum number of items
            returned based on the page_size field in the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Intent'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    GoogleCloudDialogflowCxV3Intent:
      id: GoogleCloudDialogflowCxV3Intent
      description: >-
        An intent represents a user's intent to interact with a conversational
        agent. You can provide information for the Dialogflow API to use to
        match user input to an intent by adding training phrases (i.e., examples
        of user input) to your intent.
      type: object
      properties:
        name:
          description: >-
            The unique identifier of the intent. Required for the
            Intents.UpdateIntent method. Intents.CreateIntent populates the name
            automatically. Format: `projects//locations//agents//intents/`.
          type: string
        displayName:
          description: >-
            Required. The human-readable name of the intent, unique within the
            agent.
          type: string
        trainingPhrases:
          description: >-
            The collection of training phrases the agent is trained on to
            identify the intent.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3IntentTrainingPhrase'
        parameters:
          description: The collection of parameters associated with the intent.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3IntentParameter'
        priority:
          description: >-
            The priority of this intent. Higher numbers represent higher
            priorities. - If the supplied value is unspecified or 0, the service
            translates the value to 500,000, which corresponds to the `Normal`
            priority in the console. - If the supplied value is negative, the
            intent is ignored in runtime detect intent requests.
          type: integer
          format: int32
        isFallback:
          description: >-
            Indicates whether this is a fallback intent. Currently only default
            fallback intent is allowed in the agent, which is added upon agent
            creation. Adding training phrases to fallback intent is useful in
            the case of requests that are mistakenly matched, since training
            phrases assigned to fallback intents act as negative examples that
            triggers no-match event.
          type: boolean
        labels:
          description: >-
            The key/value metadata to label an intent. Labels can contain
            lowercase letters, digits and the symbols '-' and '_'. International
            characters are allowed, including letters from unicase alphabets.
            Keys must start with a letter. Keys and values can be no longer than
            63 characters and no more than 128 bytes. Prefix "sys-" is reserved
            for Dialogflow defined labels. Currently allowed Dialogflow defined
            labels include: * sys-head * sys-contextual The above labels do not
            require value. "sys-head" means the intent is a head intent.
            "sys.contextual" means the intent is a contextual intent.
          type: object
          additionalProperties:
            type: string
        description:
          description: >-
            Human readable description for better understanding an intent like
            its scope, content, result etc. Maximum character limit: 140
            characters.
          type: string
    GoogleCloudDialogflowCxV3IntentTrainingPhrase:
      id: GoogleCloudDialogflowCxV3IntentTrainingPhrase
      description: >-
        Represents an example that the agent is trained on to identify the
        intent.
      type: object
      properties:
        id:
          description: Output only. The unique identifier of the training phrase.
          type: string
        parts:
          description: >-
            Required. The ordered list of training phrase parts. The parts are
            concatenated in order to form the training phrase. Note: The API
            does not automatically annotate training phrases like the Dialogflow
            Console does. Note: Do not forget to include whitespace at part
            boundaries, so the training phrase is well formatted when the parts
            are concatenated. If the training phrase does not need to be
            annotated with parameters, you just need a single part with only the
            Part.text field set. If you want to annotate the training phrase,
            you must create multiple parts, where the fields of each part are
            populated in one of two ways: - `Part.text` is set to a part of the
            phrase that has no parameters. - `Part.text` is set to a part of the
            phrase that you want to annotate, and the `parameter_id` field is
            set.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3IntentTrainingPhrasePart
        repeatCount:
          description: Indicates how many times this example was added to the intent.
          type: integer
          format: int32
    GoogleCloudDialogflowCxV3IntentTrainingPhrasePart:
      id: GoogleCloudDialogflowCxV3IntentTrainingPhrasePart
      description: Represents a part of a training phrase.
      type: object
      properties:
        text:
          description: Required. The text for this part.
          type: string
        parameterId:
          description: >-
            The parameter used to annotate this part of the training phrase.
            This field is required for annotated parts of the training phrase.
          type: string
    GoogleCloudDialogflowCxV3IntentParameter:
      id: GoogleCloudDialogflowCxV3IntentParameter
      description: Represents an intent parameter.
      type: object
      properties:
        id:
          description: >-
            Required. The unique identifier of the parameter. This field is used
            by training phrases to annotate their parts.
          type: string
        entityType:
          description: >-
            Required. The entity type of the parameter. Format:
            `projects/-/locations/-/agents/-/entityTypes/` for system entity
            types (for example,
            `projects/-/locations/-/agents/-/entityTypes/sys.date`), or
            `projects//locations//agents//entityTypes/` for developer entity
            types.
          type: string
        isList:
          description: Indicates whether the parameter represents a list of values.
          type: boolean
        redact:
          description: >-
            Indicates whether the parameter content should be redacted in log.
            If redaction is enabled, the parameter content will be replaced by
            parameter name during logging. Note: the parameter content is
            subject to redaction if either parameter level redaction or entity
            type level redaction is enabled.
          type: boolean
    GoogleCloudDialogflowCxV3ImportIntentsRequest:
      id: GoogleCloudDialogflowCxV3ImportIntentsRequest
      description: The request message for Intents.ImportIntents.
      type: object
      properties:
        intentsUri:
          description: >-
            The [Google Cloud Storage](https://cloud.google.com/storage/docs/)
            URI to import intents from. The format of this URI must be `gs:///`.
            Dialogflow performs a read operation for the Cloud Storage object on
            the caller's behalf, so your request authentication must have read
            permissions for the object. For more information, see [Dialogflow
            access
            control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
          type: string
        intentsContent:
          description: Uncompressed byte content of intents.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3InlineSource'
        mergeOption:
          description: >-
            Merge option for importing intents. If not specified, `REJECT` is
            assumed.
          type: string
          enumDescriptions:
            - Unspecified. Should not be used.
            - >-
              DEPRECATED: Please use REPORT_CONFLICT instead. Fail the request
              if there are intents whose display names conflict with the display
              names of intents in the agent.
            - >-
              Replace the original intent in the agent with the new intent when
              display name conflicts exist.
            - >-
              Merge the original intent with the new intent when display name
              conflicts exist.
            - >-
              Create new intents with new display names to differentiate them
              from the existing intents when display name conflicts exist.
            - >-
              Report conflict information if display names conflict is detected.
              Otherwise, import intents.
            - >-
              Keep the original intent and discard the conflicting new intent
              when display name conflicts exist.
          enumDeprecated:
            - false
            - true
            - false
            - false
            - false
            - false
            - false
          enum:
            - MERGE_OPTION_UNSPECIFIED
            - REJECT
            - REPLACE
            - MERGE
            - RENAME
            - REPORT_CONFLICT
            - KEEP
    GoogleCloudDialogflowCxV3ExportIntentsRequest:
      id: GoogleCloudDialogflowCxV3ExportIntentsRequest
      description: The request message for Intents.ExportIntents.
      type: object
      properties:
        intents:
          description: >-
            Required. The name of the intents to export. Format:
            `projects//locations//agents//intents/`.
          type: array
          items:
            type: string
        intentsUri:
          description: >-
            Optional. The [Google Cloud
            Storage](https://cloud.google.com/storage/docs/) URI to export the
            intents to. The format of this URI must be `gs:///`. Dialogflow
            performs a write operation for the Cloud Storage object on the
            caller's behalf, so your request authentication must have write
            permissions for the object. For more information, see [Dialogflow
            access
            control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
          type: string
        intentsContentInline:
          description: Optional. The option to return the serialized intents inline.
          type: boolean
        dataFormat:
          description: >-
            Optional. The data format of the exported intents. If not specified,
            `BLOB` is assumed.
          type: string
          enumDescriptions:
            - Unspecified format. Treated as `BLOB`.
            - Intents will be exported as raw bytes.
            - Intents will be exported in JSON format.
            - Intents will be exported in CSV format.
          enum:
            - DATA_FORMAT_UNSPECIFIED
            - BLOB
            - JSON
            - CSV
    GoogleCloudDialogflowCxV3ListSessionEntityTypesResponse:
      id: GoogleCloudDialogflowCxV3ListSessionEntityTypesResponse
      description: The response message for SessionEntityTypes.ListSessionEntityTypes.
      type: object
      properties:
        sessionEntityTypes:
          description: >-
            The list of session entity types. There will be a maximum number of
            items returned based on the page_size field in the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3SessionEntityType'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    GoogleCloudDialogflowCxV3SessionEntityType:
      id: GoogleCloudDialogflowCxV3SessionEntityType
      description: >-
        Session entity types are referred to as **User** entity types and are
        entities that are built for an individual user such as favorites,
        preferences, playlists, and so on. You can redefine a session entity
        type at the session level to extend or replace a custom entity type at
        the user session level (we refer to the entity types defined at the
        agent level as "custom entity types"). Note: session entity types apply
        to all queries, regardless of the language. For more information about
        entity types, see the [Dialogflow
        documentation](https://cloud.google.com/dialogflow/docs/entities-overview).
      type: object
      properties:
        name:
          description: >-
            Required. The unique identifier of the session entity type. Format:
            `projects//locations//agents//sessions//entityTypes/` or
            `projects//locations//agents//environments//sessions//entityTypes/`.
            If `Environment ID` is not specified, we assume default 'draft'
            environment.
          type: string
        entityOverrideMode:
          description: >-
            Required. Indicates whether the additional data should override or
            supplement the custom entity type definition.
          type: string
          enumDescriptions:
            - Not specified. This value should be never used.
            - >-
              The collection of session entities overrides the collection of
              entities in the corresponding custom entity type.
            - >-
              The collection of session entities extends the collection of
              entities in the corresponding custom entity type. Note: Even in
              this override mode calls to `ListSessionEntityTypes`,
              `GetSessionEntityType`, `CreateSessionEntityType` and
              `UpdateSessionEntityType` only return the additional entities
              added in this session entity type. If you want to get the
              supplemented list, please call EntityTypes.GetEntityType on the
              custom entity type and merge.
          enum:
            - ENTITY_OVERRIDE_MODE_UNSPECIFIED
            - ENTITY_OVERRIDE_MODE_OVERRIDE
            - ENTITY_OVERRIDE_MODE_SUPPLEMENT
        entities:
          description: >-
            Required. The collection of entities to override or supplement the
            custom entity type.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3EntityTypeEntity'
    GoogleCloudDialogflowCxV3DetectIntentRequest:
      id: GoogleCloudDialogflowCxV3DetectIntentRequest
      description: The request to detect user's intent.
      type: object
      properties:
        queryParams:
          description: The parameters of this query.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3QueryParameters'
        queryInput:
          description: Required. The input specification.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3QueryInput'
        outputAudioConfig:
          description: Instructs the speech synthesizer how to generate the output audio.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3OutputAudioConfig'
    GoogleCloudDialogflowCxV3QueryParameters:
      id: GoogleCloudDialogflowCxV3QueryParameters
      description: Represents the parameters of a conversational query.
      type: object
      properties:
        timeZone:
          description: >-
            The time zone of this conversational query from the [time zone
            database](https://www.iana.org/time-zones), e.g., America/New_York,
            Europe/Paris. If not provided, the time zone specified in the agent
            is used.
          type: string
        geoLocation:
          description: The geo location of this conversational query.
          $ref: '#/components/schemas/GoogleTypeLatLng'
        sessionEntityTypes:
          description: >-
            Additional session entity types to replace or extend developer
            entity types with. The entity synonyms apply to all languages and
            persist for the session of this query.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3SessionEntityType'
        payload:
          description: >-
            This field can be used to pass custom data into the webhook
            associated with the agent. Arbitrary JSON objects are supported.
            Some integrations that query a Dialogflow agent may provide
            additional information in the payload. In particular, for the
            Dialogflow Phone Gateway integration, this field has the form: ``` {
            "telephony": { "caller_id": "+18558363987" } } ```
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        parameters:
          description: >-
            Additional parameters to be put into session parameters. To remove a
            parameter from the session, clients should explicitly set the
            parameter value to null. You can reference the session parameters in
            the agent with the following format: $session.params.parameter-id.
            Depending on your protocol or client library language, this is a
            map, associative array, symbol table, dictionary, or JSON object
            composed of a collection of (MapKey, MapValue) pairs: * MapKey type:
            string * MapKey value: parameter name * MapValue type: If
            parameter's entity type is a composite entity then use map,
            otherwise, depending on the parameter value type, it could be one of
            string, number, boolean, null, list or map. * MapValue value: If
            parameter's entity type is a composite entity then use map from
            composite entity property names to property values, otherwise, use
            parameter value.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        currentPage:
          description: >-
            The unique identifier of the page to override the current page in
            the session. Format: `projects//locations//agents//flows//pages/`.
            If `current_page` is specified, the previous state of the session
            will be ignored by Dialogflow, including the previous page and the
            previous session parameters. In most cases, current_page and
            parameters should be configured together to direct a session to a
            specific state.
          type: string
        disableWebhook:
          description: Whether to disable webhook calls for this request.
          type: boolean
        analyzeQueryTextSentiment:
          description: >-
            Configures whether sentiment analysis should be performed. If not
            provided, sentiment analysis is not performed.
          type: boolean
        webhookHeaders:
          description: >-
            This field can be used to pass HTTP headers for a webhook call.
            These headers will be sent to webhook along with the headers that
            have been configured through Dialogflow web console. The headers
            defined within this field will overwrite the headers configured
            through Dialogflow console if there is a conflict. Header names are
            case-insensitive. Google's specified headers are not allowed.
            Including: "Host", "Content-Length", "Connection", "From",
            "User-Agent", "Accept-Encoding", "If-Modified-Since",
            "If-None-Match", "X-Forwarded-For", etc.
          type: object
          additionalProperties:
            type: string
        flowVersions:
          description: >-
            A list of flow versions to override for the request. Format:
            `projects//locations//agents//flows//versions/`. If version 1 of
            flow X is included in this list, the traffic of flow X will go
            through version 1 regardless of the version configuration in the
            environment. Each flow can have at most one version specified in
            this list.
          type: array
          items:
            type: string
        channel:
          description: >-
            The channel which this query is for. If specified, only the
            ResponseMessage associated with the channel will be returned. If no
            ResponseMessage is associated with the channel, it falls back to the
            ResponseMessage with unspecified channel. If unspecified, the
            ResponseMessage with unspecified channel will be returned.
          type: string
        sessionTtl:
          description: >-
            Optional. Configure lifetime of the Dialogflow session. By default,
            a Dialogflow session remains active and its data is stored for 30
            minutes after the last request is sent for the session. This value
            should be no longer than 1 day.
          type: string
          format: google-duration
        endUserMetadata:
          description: >-
            Optional. Information about the end-user to improve the relevance
            and accuracy of generative answers. This will be interpreted and
            used by a language model, so, for good results, the data should be
            self-descriptive, and in a simple structure. Example: ```json {
            "subscription plan": "Business Premium Plus", "devices owned": [
            {"model": "Google Pixel 7"}, {"model": "Google Pixel Tablet"} ] }
            ```
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        searchConfig:
          description: Optional. Search configuration for UCS search queries.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3SearchConfig'
        populateDataStoreConnectionSignals:
          description: >-
            Optional. If set to true and data stores are involved in serving the
            request then
            DetectIntentResponse.query_result.data_store_connection_signals will
            be filled with data that can help evaluations.
          type: boolean
    GoogleTypeLatLng:
      id: GoogleTypeLatLng
      description: >-
        An object that represents a latitude/longitude pair. This is expressed
        as a pair of doubles to represent degrees latitude and degrees
        longitude. Unless specified otherwise, this object must conform to the
        WGS84 standard. Values must be within normalized ranges.
      type: object
      properties:
        latitude:
          description: The latitude in degrees. It must be in the range [-90.0, +90.0].
          type: number
          format: double
        longitude:
          description: The longitude in degrees. It must be in the range [-180.0, +180.0].
          type: number
          format: double
    GoogleCloudDialogflowCxV3SearchConfig:
      id: GoogleCloudDialogflowCxV3SearchConfig
      description: Search configuration for UCS search queries.
      type: object
      properties:
        boostSpecs:
          description: Optional. Boosting configuration for the datastores.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3BoostSpecs'
        filterSpecs:
          description: Optional. Filter configuration for the datastores.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3FilterSpecs'
    GoogleCloudDialogflowCxV3BoostSpecs:
      id: GoogleCloudDialogflowCxV3BoostSpecs
      description: Boost specifications for data stores.
      type: object
      properties:
        dataStores:
          description: >-
            Optional. Data Stores where the boosting configuration is applied.
            The full names of the referenced data stores. Formats:
            `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
            `projects/{project}/locations/{location}/dataStores/{data_store}`
          type: array
          items:
            type: string
        spec:
          description: Optional. A list of boosting specifications.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3BoostSpec'
    GoogleCloudDialogflowCxV3BoostSpec:
      id: GoogleCloudDialogflowCxV3BoostSpec
      description: >-
        Boost specification to boost certain documents. A copy of
        google.cloud.discoveryengine.v1main.BoostSpec, field documentation is
        available at
        https://cloud.google.com/generative-ai-app-builder/docs/reference/rest/v1alpha/BoostSpec
      type: object
      properties:
        conditionBoostSpecs:
          description: >-
            Optional. Condition boost specifications. If a document matches
            multiple conditions in the specifictions, boost scores from these
            specifications are all applied and combined in a non-linear way.
            Maximum number of specifications is 20.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3BoostSpecConditionBoostSpec
    GoogleCloudDialogflowCxV3BoostSpecConditionBoostSpec:
      id: GoogleCloudDialogflowCxV3BoostSpecConditionBoostSpec
      description: Boost applies to documents which match a condition.
      type: object
      properties:
        condition:
          description: >-
            Optional. An expression which specifies a boost condition. The
            syntax and supported fields are the same as a filter expression.
            Examples: * To boost documents with document ID "doc_1" or "doc_2",
            and color "Red" or "Blue": * (id: ANY("doc_1", "doc_2")) AND (color:
            ANY("Red","Blue"))
          type: string
        boost:
          description: >-
            Optional. Strength of the condition boost, which should be in [-1,
            1]. Negative boost means demotion. Default is 0.0. Setting to 1.0
            gives the document a big promotion. However, it does not necessarily
            mean that the boosted document will be the top result at all times,
            nor that other documents will be excluded. Results could still be
            shown even when none of them matches the condition. And results that
            are significantly more relevant to the search query can still trump
            your heavily favored but irrelevant documents. Setting to -1.0 gives
            the document a big demotion. However, results that are deeply
            relevant might still be shown. The document will have an upstream
            battle to get a fairly high ranking, but it is not blocked out
            completely. Setting to 0.0 means no boost applied. The boosting
            condition is ignored.
          type: number
          format: float
        boostControlSpec:
          description: >-
            Optional. Complex specification for custom ranking based on customer
            defined attribute value.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3BoostSpecConditionBoostSpecBoostControlSpec
    GoogleCloudDialogflowCxV3BoostSpecConditionBoostSpecBoostControlSpec:
      id: GoogleCloudDialogflowCxV3BoostSpecConditionBoostSpecBoostControlSpec
      description: >-
        Specification for custom ranking based on customer specified attribute
        value. It provides more controls for customized ranking than the simple
        (condition, boost) combination above.
      type: object
      properties:
        fieldName:
          description: >-
            Optional. The name of the field whose value will be used to
            determine the boost amount.
          type: string
        attributeType:
          description: >-
            Optional. The attribute type to be used to determine the boost
            amount. The attribute value can be derived from the field value of
            the specified field_name. In the case of numerical it is
            straightforward i.e. attribute_value = numerical_field_value. In the
            case of freshness however, attribute_value = (time.now() -
            datetime_field_value).
          type: string
          enumDescriptions:
            - Unspecified AttributeType.
            - >-
              The value of the numerical field will be used to dynamically
              update the boost amount. In this case, the attribute_value (the x
              value) of the control point will be the actual value of the
              numerical field for which the boost_amount is specified.
            - >-
              For the freshness use case the attribute value will be the
              duration between the current time and the date in the datetime
              field specified. The value must be formatted as an XSD
              `dayTimeDuration` value (a restricted subset of an ISO 8601
              duration value). The pattern for this is: `nDnM]`. E.g. `5D`,
              `3DT12H30M`, `T24H`.
          enum:
            - ATTRIBUTE_TYPE_UNSPECIFIED
            - NUMERICAL
            - FRESHNESS
        interpolationType:
          description: >-
            Optional. The interpolation type to be applied to connect the
            control points listed below.
          type: string
          enumDescriptions:
            - >-
              Interpolation type is unspecified. In this case, it defaults to
              Linear.
            - Piecewise linear interpolation will be applied.
          enum:
            - INTERPOLATION_TYPE_UNSPECIFIED
            - LINEAR
        controlPoints:
          description: >-
            Optional. The control points used to define the curve. The monotonic
            function (defined through the interpolation_type above) passes
            through the control points listed here.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3BoostSpecConditionBoostSpecBoostControlSpecControlPoint
    GoogleCloudDialogflowCxV3BoostSpecConditionBoostSpecBoostControlSpecControlPoint:
      id: >-
        GoogleCloudDialogflowCxV3BoostSpecConditionBoostSpecBoostControlSpecControlPoint
      description: >-
        The control points used to define the curve. The curve defined through
        these control points can only be monotonically increasing or
        decreasing(constant values are acceptable).
      type: object
      properties:
        attributeValue:
          description: >-
            Optional. Can be one of: 1. The numerical field value. 2. The
            duration spec for freshness: The value must be formatted as an XSD
            `dayTimeDuration` value (a restricted subset of an ISO 8601 duration
            value). The pattern for this is: `nDnM]`.
          type: string
        boostAmount:
          description: >-
            Optional. The value between -1 to 1 by which to boost the score if
            the attribute_value evaluates to the value specified above.
          type: number
          format: float
    GoogleCloudDialogflowCxV3FilterSpecs:
      id: GoogleCloudDialogflowCxV3FilterSpecs
      description: Filter specifications for data stores.
      type: object
      properties:
        dataStores:
          description: >-
            Optional. Data Stores where the boosting configuration is applied.
            The full names of the referenced data stores. Formats:
            `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
            `projects/{project}/locations/{location}/dataStores/{data_store}`
          type: array
          items:
            type: string
        filter:
          description: >-
            Optional. The filter expression to be applied. Expression syntax is
            documented at
            https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata#filter-expression-syntax
          type: string
    GoogleCloudDialogflowCxV3QueryInput:
      id: GoogleCloudDialogflowCxV3QueryInput
      description: >-
        Represents the query input. It can contain one of: 1. A conversational
        query in the form of text. 2. An intent query that specifies which
        intent to trigger. 3. Natural language speech audio to be processed. 4.
        An event to be triggered. 5. DTMF digits to invoke an intent and fill in
        parameter value. 6. The results of a tool executed by the client.
      type: object
      properties:
        text:
          description: The natural language text to be processed.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3TextInput'
        intent:
          description: The intent to be triggered.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3IntentInput'
        audio:
          description: The natural language speech audio to be processed.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3AudioInput'
        event:
          description: The event to be triggered.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3EventInput'
        dtmf:
          description: The DTMF event to be handled.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3DtmfInput'
        languageCode:
          description: >-
            Required. The language of the input. See [Language
            Support](https://cloud.google.com/dialogflow/cx/docs/reference/language)
            for a list of the currently supported language codes. Note that
            queries in the same session do not necessarily need to specify the
            same language.
          type: string
    GoogleCloudDialogflowCxV3TextInput:
      id: GoogleCloudDialogflowCxV3TextInput
      description: Represents the natural language text to be processed.
      type: object
      properties:
        text:
          description: Required. The UTF-8 encoded natural language text to be processed.
          type: string
    GoogleCloudDialogflowCxV3IntentInput:
      id: GoogleCloudDialogflowCxV3IntentInput
      description: >-
        Represents the intent to trigger programmatically rather than as a
        result of natural language processing.
      type: object
      properties:
        intent:
          description: >-
            Required. The unique identifier of the intent. Format:
            `projects//locations//agents//intents/`.
          type: string
    GoogleCloudDialogflowCxV3AudioInput:
      id: GoogleCloudDialogflowCxV3AudioInput
      description: Represents the natural speech audio to be processed.
      type: object
      properties:
        config:
          description: >-
            Required. Instructs the speech recognizer how to process the speech
            audio.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3InputAudioConfig'
        audio:
          description: >-
            The natural language speech audio to be processed. A single request
            can contain up to 2 minutes of speech audio data. The transcribed
            text cannot contain more than 256 bytes. For non-streaming audio
            detect intent, both `config` and `audio` must be provided. For
            streaming audio detect intent, `config` must be provided in the
            first request and `audio` must be provided in all following
            requests.
          type: string
          format: byte
    GoogleCloudDialogflowCxV3InputAudioConfig:
      id: GoogleCloudDialogflowCxV3InputAudioConfig
      description: Instructs the speech recognizer on how to process the audio content.
      type: object
      properties:
        audioEncoding:
          description: Required. Audio encoding of the audio content to process.
          type: string
          enumDescriptions:
            - Not specified.
            - Uncompressed 16-bit signed little-endian samples (Linear PCM).
            - >-
              [`FLAC`](https://xiph.org/flac/documentation.html) (Free Lossless
              Audio Codec) is the recommended encoding because it is lossless
              (therefore recognition is not compromised) and requires only about
              half the bandwidth of `LINEAR16`. `FLAC` stream encoding supports
              16-bit and 24-bit samples, however, not all fields in `STREAMINFO`
              are supported.
            - >-
              8-bit samples that compand 14-bit audio samples using G.711
              PCMU/mu-law.
            - >-
              Adaptive Multi-Rate Narrowband codec. `sample_rate_hertz` must be
              8000.
            - >-
              Adaptive Multi-Rate Wideband codec. `sample_rate_hertz` must be
              16000.
            - >-
              Opus encoded audio frames in Ogg container
              ([OggOpus](https://wiki.xiph.org/OggOpus)). `sample_rate_hertz`
              must be 16000.
            - >-
              Although the use of lossy encodings is not recommended, if a very
              low bitrate encoding is required, `OGG_OPUS` is highly preferred
              over Speex encoding. The [Speex](https://speex.org/) encoding
              supported by Dialogflow API has a header byte in each block, as in
              MIME type `audio/x-speex-with-header-byte`. It is a variant of the
              RTP Speex encoding defined in [RFC
              5574](https://tools.ietf.org/html/rfc5574). The stream is a
              sequence of blocks, one block per RTP packet. Each block starts
              with a byte containing the length of the block, in bytes, followed
              by one or more frames of Speex data, padded to an integral number
              of bytes (octets) as specified in RFC 5574. In other words, each
              RTP header is replaced with a single byte containing the block
              length. Only Speex wideband is supported. `sample_rate_hertz` must
              be 16000.
          enum:
            - AUDIO_ENCODING_UNSPECIFIED
            - AUDIO_ENCODING_LINEAR_16
            - AUDIO_ENCODING_FLAC
            - AUDIO_ENCODING_MULAW
            - AUDIO_ENCODING_AMR
            - AUDIO_ENCODING_AMR_WB
            - AUDIO_ENCODING_OGG_OPUS
            - AUDIO_ENCODING_SPEEX_WITH_HEADER_BYTE
        sampleRateHertz:
          description: >-
            Sample rate (in Hertz) of the audio content sent in the query. Refer
            to [Cloud Speech API
            documentation](https://cloud.google.com/speech-to-text/docs/basics)
            for more details.
          type: integer
          format: int32
        enableWordInfo:
          description: >-
            Optional. If `true`, Dialogflow returns SpeechWordInfo in
            StreamingRecognitionResult with information about the recognized
            speech words, e.g. start and end time offsets. If false or
            unspecified, Speech doesn't return any word-level information.
          type: boolean
        phraseHints:
          description: >-
            Optional. A list of strings containing words and phrases that the
            speech recognizer should recognize with higher likelihood. See [the
            Cloud Speech
            documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints)
            for more details.
          type: array
          items:
            type: string
        model:
          description: >-
            Optional. Which Speech model to select for the given request. For
            more information, see [Speech
            models](https://cloud.google.com/dialogflow/cx/docs/concept/speech-models).
          type: string
        modelVariant:
          description: Optional. Which variant of the Speech model to use.
          type: string
          enumDescriptions:
            - >-
              No model variant specified. In this case Dialogflow defaults to
              USE_BEST_AVAILABLE.
            - >-
              Use the best available variant of the Speech model that the caller
              is eligible for.
            - >-
              Use standard model variant even if an enhanced model is available.
              See the [Cloud Speech
              documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models)
              for details about enhanced models.
            - >-
              Use an enhanced model variant: * If an enhanced variant does not
              exist for the given model and request language, Dialogflow falls
              back to the standard variant. The [Cloud Speech
              documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models)
              describes which models have enhanced variants.
          enum:
            - SPEECH_MODEL_VARIANT_UNSPECIFIED
            - USE_BEST_AVAILABLE
            - USE_STANDARD
            - USE_ENHANCED
        singleUtterance:
          description: >-
            Optional. If `false` (default), recognition does not cease until the
            client closes the stream. If `true`, the recognizer will detect a
            single spoken utterance in input audio. Recognition ceases when it
            detects the audio's voice has stopped or paused. In this case, once
            a detected intent is received, the client should close the stream
            and start a new request with a new stream as needed. Note: This
            setting is relevant only for streaming methods.
          type: boolean
        bargeInConfig:
          description: >-
            Configuration of barge-in behavior during the streaming of input
            audio.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3BargeInConfig'
        optOutConformerModelMigration:
          description: >-
            If `true`, the request will opt out for STT conformer model
            migration. This field will be deprecated once force migration takes
            place in June 2024. Please refer to [Dialogflow CX Speech model
            migration](https://cloud.google.com/dialogflow/cx/docs/concept/speech-model-migration).
          type: boolean
    GoogleCloudDialogflowCxV3BargeInConfig:
      id: GoogleCloudDialogflowCxV3BargeInConfig
      description: >-
        Configuration of the barge-in behavior. Barge-in instructs the API to
        return a detected utterance at a proper time while the client is playing
        back the response audio from a previous request. When the client sees
        the utterance, it should stop the playback and immediately get ready for
        receiving the responses for the current request. The barge-in handling
        requires the client to start streaming audio input as soon as it starts
        playing back the audio from the previous response. The playback is
        modeled into two phases: * No barge-in phase: which goes first and
        during which speech detection should not be carried out. * Barge-in
        phase: which follows the no barge-in phase and during which the API
        starts speech detection and may inform the client that an utterance has
        been detected. Note that no-speech event is not expected in this phase.
        The client provides this configuration in terms of the durations of
        those two phases. The durations are measured in terms of the audio
        length from the the start of the input audio. No-speech event is a
        response with END_OF_UTTERANCE without any transcript following up.
      type: object
      properties:
        noBargeInDuration:
          description: >-
            Duration that is not eligible for barge-in at the beginning of the
            input audio.
          type: string
          format: google-duration
        totalDuration:
          description: Total duration for the playback at the beginning of the input audio.
          type: string
          format: google-duration
    GoogleCloudDialogflowCxV3EventInput:
      id: GoogleCloudDialogflowCxV3EventInput
      description: Represents the event to trigger.
      type: object
      properties:
        event:
          description: Name of the event.
          type: string
    GoogleCloudDialogflowCxV3DtmfInput:
      id: GoogleCloudDialogflowCxV3DtmfInput
      description: Represents the input for dtmf event.
      type: object
      properties:
        digits:
          description: The dtmf digits.
          type: string
        finishDigit:
          description: The finish digit (if any).
          type: string
    GoogleCloudDialogflowCxV3OutputAudioConfig:
      id: GoogleCloudDialogflowCxV3OutputAudioConfig
      description: >-
        Instructs the speech synthesizer how to generate the output audio
        content.
      type: object
      properties:
        audioEncoding:
          description: Required. Audio encoding of the synthesized audio content.
          type: string
          enumDescriptions:
            - Not specified.
            - >-
              Uncompressed 16-bit signed little-endian samples (Linear PCM).
              Audio content returned as LINEAR16 also contains a WAV header.
            - MP3 audio at 32kbps.
            - MP3 audio at 64kbps.
            - >-
              Opus encoded audio wrapped in an ogg container. The result will be
              a file which can be played natively on Android, and in browsers
              (at least Chrome and Firefox). The quality of the encoding is
              considerably higher than MP3 while using approximately the same
              bitrate.
            - >-
              8-bit samples that compand 14-bit audio samples using G.711
              PCMU/mu-law.
          enum:
            - OUTPUT_AUDIO_ENCODING_UNSPECIFIED
            - OUTPUT_AUDIO_ENCODING_LINEAR_16
            - OUTPUT_AUDIO_ENCODING_MP3
            - OUTPUT_AUDIO_ENCODING_MP3_64_KBPS
            - OUTPUT_AUDIO_ENCODING_OGG_OPUS
            - OUTPUT_AUDIO_ENCODING_MULAW
        sampleRateHertz:
          description: >-
            Optional. The synthesis sample rate (in hertz) for this audio. If
            not provided, then the synthesizer will use the default sample rate
            based on the audio encoding. If this is different from the voice's
            natural sample rate, then the synthesizer will honor this request by
            converting to the desired sample rate (which might result in worse
            audio quality).
          type: integer
          format: int32
        synthesizeSpeechConfig:
          description: >-
            Optional. Configuration of how speech should be synthesized. If not
            specified, Agent.text_to_speech_settings is applied.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3SynthesizeSpeechConfig'
    GoogleCloudDialogflowCxV3DetectIntentResponse:
      id: GoogleCloudDialogflowCxV3DetectIntentResponse
      description: The message returned from the DetectIntent method.
      type: object
      properties:
        responseId:
          description: >-
            Output only. The unique identifier of the response. It can be used
            to locate a response in the training example set or for reporting
            issues.
          type: string
        queryResult:
          description: The result of the conversational query.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3QueryResult'
        outputAudio:
          description: >-
            The audio data bytes encoded as specified in the request. Note: The
            output audio is generated based on the values of default platform
            text responses found in the `query_result.response_messages` field.
            If multiple default text responses exist, they will be concatenated
            when generating audio. If no default platform text responses exist,
            the generated audio content will be empty. In some scenarios,
            multiple output audio fields may be present in the response
            structure. In these cases, only the top-most-level audio output has
            content.
          type: string
          format: byte
        outputAudioConfig:
          description: >-
            The config used by the speech synthesizer to generate the output
            audio.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3OutputAudioConfig'
        responseType:
          description: Response type.
          type: string
          enumDescriptions:
            - Not specified. This should never happen.
            - >-
              Partial response. e.g. Aggregated responses in a Fulfillment that
              enables `return_partial_response` can be returned as partial
              response. WARNING: partial response is not eligible for barge-in.
            - Final response.
          enum:
            - RESPONSE_TYPE_UNSPECIFIED
            - PARTIAL
            - FINAL
        allowCancellation:
          description: >-
            Indicates whether the partial response can be cancelled when a later
            response arrives. e.g. if the agent specified some music as partial
            response, it can be cancelled.
          type: boolean
    GoogleCloudDialogflowCxV3QueryResult:
      id: GoogleCloudDialogflowCxV3QueryResult
      description: Represents the result of a conversational query.
      type: object
      properties:
        text:
          description: >-
            If natural language text was provided as input, this field will
            contain a copy of the text.
          type: string
        triggerIntent:
          description: >-
            If an intent was provided as input, this field will contain a copy
            of the intent identifier. Format:
            `projects//locations//agents//intents/`.
          type: string
        transcript:
          description: >-
            If natural language speech audio was provided as input, this field
            will contain the transcript for the audio.
          type: string
        triggerEvent:
          description: >-
            If an event was provided as input, this field will contain the name
            of the event.
          type: string
        dtmf:
          description: >-
            If a DTMF was provided as input, this field will contain a copy of
            the DtmfInput.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3DtmfInput'
        languageCode:
          description: >-
            The language that was triggered during intent detection. See
            [Language
            Support](https://cloud.google.com/dialogflow/cx/docs/reference/language)
            for a list of the currently supported language codes.
          type: string
        parameters:
          description: >-
            The collected session parameters. Depending on your protocol or
            client library language, this is a map, associative array, symbol
            table, dictionary, or JSON object composed of a collection of
            (MapKey, MapValue) pairs: * MapKey type: string * MapKey value:
            parameter name * MapValue type: If parameter's entity type is a
            composite entity then use map, otherwise, depending on the parameter
            value type, it could be one of string, number, boolean, null, list
            or map. * MapValue value: If parameter's entity type is a composite
            entity then use map from composite entity property names to property
            values, otherwise, use parameter value.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        responseMessages:
          description: >-
            The list of rich messages returned to the client. Responses vary
            from simple text messages to more sophisticated, structured payloads
            used to drive complex logic.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3ResponseMessage'
        webhookStatuses:
          description: The list of webhook call status in the order of call sequence.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        webhookPayloads:
          description: >-
            The list of webhook payload in WebhookResponse.payload, in the order
            of call sequence. If some webhook call fails or doesn't return any
            payload, an empty `Struct` would be used instead.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object.
        currentPage:
          description: >-
            The current Page. Some, not all fields are filled in this message,
            including but not limited to `name` and `display_name`.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Page'
        intent:
          description: >-
            The Intent that matched the conversational query. Some, not all
            fields are filled in this message, including but not limited to:
            `name` and `display_name`. This field is deprecated, please use
            QueryResult.match instead.
          deprecated: true
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Intent'
        intentDetectionConfidence:
          description: >-
            The intent detection confidence. Values range from 0.0 (completely
            uncertain) to 1.0 (completely certain). This value is for
            informational purpose only and is only used to help match the best
            intent within the classification threshold. This value may change
            for the same end-user expression at any time due to a model
            retraining or change in implementation. This field is deprecated,
            please use QueryResult.match instead.
          deprecated: true
          type: number
          format: float
        match:
          description: Intent match result, could be an intent or an event.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Match'
        diagnosticInfo:
          description: >-
            The free-form diagnostic info. For example, this field could contain
            webhook call latency. The fields of this data can change without
            notice, so you should not write code that depends on its structure.
            One of the fields is called "Alternative Matched Intents", which may
            aid with debugging. The following describes these intent results: -
            The list is empty if no intent was matched to end-user input. - Only
            intents that are referenced in the currently active flow are
            included. - The matched intent is included. - Other intents that
            could have matched end-user input, but did not match because they
            are referenced by intent routes that are out of
            [scope](https://cloud.google.com/dialogflow/cx/docs/concept/handler#scope),
            are included. - Other intents referenced by intent routes in scope
            that matched end-user input, but had a lower confidence score.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        sentimentAnalysisResult:
          description: >-
            The sentiment analyss result, which depends on
            `analyze_query_text_sentiment`, specified in the request.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3SentimentAnalysisResult
        advancedSettings:
          description: >-
            Returns the current advanced settings including IVR settings. Even
            though the operations configured by these settings are performed by
            Dialogflow, the client may need to perform special logic at the
            moment. For example, if Dialogflow exports audio to Google Cloud
            Storage, then the client may need to wait for the resulting object
            to appear in the bucket before proceeding.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3AdvancedSettings'
        allowAnswerFeedback:
          description: >-
            Indicates whether the Thumbs up/Thumbs down rating controls are need
            to be shown for the response in the Dialogflow Messenger widget.
          type: boolean
        dataStoreConnectionSignals:
          description: >-
            Optional. Data store connection feature output signals. Filled only
            when data stores are involved in serving the query and
            DetectIntentRequest.populate data_store_connection_quality_signals
            is set to true in the request.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3DataStoreConnectionSignals
    GoogleCloudDialogflowCxV3Match:
      id: GoogleCloudDialogflowCxV3Match
      description: Represents one match result of MatchIntent.
      type: object
      properties:
        intent:
          description: >-
            The Intent that matched the query. Some, not all fields are filled
            in this message, including but not limited to: `name` and
            `display_name`. Only filled for `INTENT` match type.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Intent'
        event:
          description: >-
            The event that matched the query. Filled for `EVENT`, `NO_MATCH` and
            `NO_INPUT` match types.
          type: string
        parameters:
          description: >-
            The collection of parameters extracted from the query. Depending on
            your protocol or client library language, this is a map, associative
            array, symbol table, dictionary, or JSON object composed of a
            collection of (MapKey, MapValue) pairs: * MapKey type: string *
            MapKey value: parameter name * MapValue type: If parameter's entity
            type is a composite entity then use map, otherwise, depending on the
            parameter value type, it could be one of string, number, boolean,
            null, list or map. * MapValue value: If parameter's entity type is a
            composite entity then use map from composite entity property names
            to property values, otherwise, use parameter value.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        resolvedInput:
          description: >-
            Final text input which was matched during MatchIntent. This value
            can be different from original input sent in request because of
            spelling correction or other processing.
          type: string
        matchType:
          description: Type of this Match.
          type: string
          enumDescriptions:
            - Not specified. Should never be used.
            - The query was matched to an intent.
            - The query directly triggered an intent.
            - The query was used for parameter filling.
            - No match was found for the query.
            - Indicates an empty query.
            - The query directly triggered an event.
            - The query was matched to a Knowledge Connector answer.
            - The query was handled by a `Playbook`.
          enum:
            - MATCH_TYPE_UNSPECIFIED
            - INTENT
            - DIRECT_INTENT
            - PARAMETER_FILLING
            - NO_MATCH
            - NO_INPUT
            - EVENT
            - KNOWLEDGE_CONNECTOR
            - PLAYBOOK
        confidence:
          description: >-
            The confidence of this match. Values range from 0.0 (completely
            uncertain) to 1.0 (completely certain). This value is for
            informational purpose only and is only used to help match the best
            intent within the classification threshold. This value may change
            for the same end-user expression at any time due to a model
            retraining or change in implementation.
          type: number
          format: float
    GoogleCloudDialogflowCxV3SentimentAnalysisResult:
      id: GoogleCloudDialogflowCxV3SentimentAnalysisResult
      description: >-
        The result of sentiment analysis. Sentiment analysis inspects user input
        and identifies the prevailing subjective opinion, especially to
        determine a user's attitude as positive, negative, or neutral.
      type: object
      properties:
        score:
          description: >-
            Sentiment score between -1.0 (negative sentiment) and 1.0 (positive
            sentiment).
          type: number
          format: float
        magnitude:
          description: >-
            A non-negative number in the [0, +inf) range, which represents the
            absolute magnitude of sentiment, regardless of score (positive or
            negative).
          type: number
          format: float
    GoogleCloudDialogflowCxV3DataStoreConnectionSignals:
      id: GoogleCloudDialogflowCxV3DataStoreConnectionSignals
      description: >-
        Data store connection feature output signals. Might be only partially
        field if processing stop before the final answer. Reasons for this can
        be, but are not limited to: empty UCS search results, positive RAI check
        outcome, grounding failure, ...
      type: object
      properties:
        rewriterModelCallSignals:
          description: Optional. Diagnostic info related to the rewriter model call.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3DataStoreConnectionSignalsRewriterModelCallSignals
        rewrittenQuery:
          description: Optional. Rewritten string query used for search.
          type: string
        searchSnippets:
          description: Optional. Search snippets included in the answer generation prompt.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3DataStoreConnectionSignalsSearchSnippet
        answerGenerationModelCallSignals:
          description: >-
            Optional. Diagnostic info related to the answer generation model
            call.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3DataStoreConnectionSignalsAnswerGenerationModelCallSignals
        answer:
          description: Optional. The final compiled answer.
          type: string
        answerParts:
          description: >-
            Optional. Answer parts with relevant citations. Concatenation of
            texts should add up the `answer` (not counting whitespaces).
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3DataStoreConnectionSignalsAnswerPart
        citedSnippets:
          description: >-
            Optional. Snippets cited by the answer generation model from the
            most to least relevant.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3DataStoreConnectionSignalsCitedSnippet
        groundingSignals:
          description: Optional. Grounding signals.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3DataStoreConnectionSignalsGroundingSignals
        safetySignals:
          description: Optional. Safety check result.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3DataStoreConnectionSignalsSafetySignals
    GoogleCloudDialogflowCxV3DataStoreConnectionSignalsRewriterModelCallSignals:
      id: >-
        GoogleCloudDialogflowCxV3DataStoreConnectionSignalsRewriterModelCallSignals
      description: Diagnostic info related to the rewriter model call.
      type: object
      properties:
        renderedPrompt:
          description: Prompt as sent to the model.
          type: string
        modelOutput:
          description: Output of the generative model.
          type: string
        model:
          description: >-
            Name of the generative model. For example, "gemini-ultra",
            "gemini-pro", "gemini-1.5-flash" etc. Defaults to "Other" if the
            model is unknown.
          type: string
    GoogleCloudDialogflowCxV3DataStoreConnectionSignalsSearchSnippet:
      id: GoogleCloudDialogflowCxV3DataStoreConnectionSignalsSearchSnippet
      description: Search snippet details.
      type: object
      properties:
        documentTitle:
          description: Title of the enclosing document.
          type: string
        documentUri:
          description: Uri for the document. Present if specified for the document.
          type: string
        text:
          description: Text included in the prompt.
          type: string
    GoogleCloudDialogflowCxV3DataStoreConnectionSignalsAnswerGenerationModelCallSignals:
      id: >-
        GoogleCloudDialogflowCxV3DataStoreConnectionSignalsAnswerGenerationModelCallSignals
      description: Diagnostic info related to the answer generation model call.
      type: object
      properties:
        renderedPrompt:
          description: Prompt as sent to the model.
          type: string
        modelOutput:
          description: Output of the generative model.
          type: string
        model:
          description: >-
            Name of the generative model. For example, "gemini-ultra",
            "gemini-pro", "gemini-1.5-flash" etc. Defaults to "Other" if the
            model is unknown.
          type: string
    GoogleCloudDialogflowCxV3DataStoreConnectionSignalsAnswerPart:
      id: GoogleCloudDialogflowCxV3DataStoreConnectionSignalsAnswerPart
      description: Answer part with citation.
      type: object
      properties:
        text:
          description: Substring of the answer.
          type: string
        supportingIndices:
          description: Citations for this answer part. Indices of `search_snippets`.
          type: array
          items:
            type: integer
            format: int32
    GoogleCloudDialogflowCxV3DataStoreConnectionSignalsCitedSnippet:
      id: GoogleCloudDialogflowCxV3DataStoreConnectionSignalsCitedSnippet
      description: Snippet cited by the answer generation model.
      type: object
      properties:
        searchSnippet:
          description: Details of the snippet.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3DataStoreConnectionSignalsSearchSnippet
        snippetIndex:
          description: Index of the snippet in `search_snippets` field.
          type: integer
          format: int32
    GoogleCloudDialogflowCxV3DataStoreConnectionSignalsGroundingSignals:
      id: GoogleCloudDialogflowCxV3DataStoreConnectionSignalsGroundingSignals
      description: Grounding signals.
      type: object
      properties:
        decision:
          description: Represents the decision of the grounding check.
          type: string
          enumDescriptions:
            - Decision not specified.
            - Grounding have accepted the answer.
            - Grounding have rejected the answer.
          enum:
            - GROUNDING_DECISION_UNSPECIFIED
            - ACCEPTED_BY_GROUNDING
            - REJECTED_BY_GROUNDING
        score:
          description: Grounding score bucket setting.
          type: string
          enumDescriptions:
            - Score not specified.
            - We have very low confidence that the answer is grounded.
            - We have low confidence that the answer is grounded.
            - We have medium confidence that the answer is grounded.
            - We have high confidence that the answer is grounded.
            - We have very high confidence that the answer is grounded.
          enum:
            - GROUNDING_SCORE_BUCKET_UNSPECIFIED
            - VERY_LOW
            - LOW
            - MEDIUM
            - HIGH
            - VERY_HIGH
    GoogleCloudDialogflowCxV3DataStoreConnectionSignalsSafetySignals:
      id: GoogleCloudDialogflowCxV3DataStoreConnectionSignalsSafetySignals
      description: Safety check results.
      type: object
      properties:
        decision:
          description: Safety decision.
          type: string
          enumDescriptions:
            - Decision not specified.
            - No manual or automatic safety check fired.
            - One ore more safety checks fired.
          enum:
            - SAFETY_DECISION_UNSPECIFIED
            - ACCEPTED_BY_SAFETY_CHECK
            - REJECTED_BY_SAFETY_CHECK
        bannedPhraseMatch:
          description: Specifies banned phrase match subject.
          type: string
          enumDescriptions:
            - No banned phrase check was executed.
            - All banned phrase checks led to no match.
            - A banned phrase matched the query.
            - A banned phrase matched the response.
          enum:
            - BANNED_PHRASE_MATCH_UNSPECIFIED
            - BANNED_PHRASE_MATCH_NONE
            - BANNED_PHRASE_MATCH_QUERY
            - BANNED_PHRASE_MATCH_RESPONSE
        matchedBannedPhrase:
          description: The matched banned phrase if there was a match.
          type: string
    GoogleCloudDialogflowCxV3MatchIntentRequest:
      id: GoogleCloudDialogflowCxV3MatchIntentRequest
      description: Request of MatchIntent.
      type: object
      properties:
        queryParams:
          description: The parameters of this query.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3QueryParameters'
        queryInput:
          description: Required. The input specification.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3QueryInput'
        persistParameterChanges:
          description: Persist session parameter changes from `query_params`.
          type: boolean
    GoogleCloudDialogflowCxV3MatchIntentResponse:
      id: GoogleCloudDialogflowCxV3MatchIntentResponse
      description: Response of MatchIntent.
      type: object
      properties:
        text:
          description: >-
            If natural language text was provided as input, this field will
            contain a copy of the text.
          type: string
        triggerIntent:
          description: >-
            If an intent was provided as input, this field will contain a copy
            of the intent identifier. Format:
            `projects//locations//agents//intents/`.
          type: string
        transcript:
          description: >-
            If natural language speech audio was provided as input, this field
            will contain the transcript for the audio.
          type: string
        triggerEvent:
          description: >-
            If an event was provided as input, this field will contain a copy of
            the event name.
          type: string
        matches:
          description: >-
            Match results, if more than one, ordered descendingly by the
            confidence we have that the particular intent matches the query.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Match'
        currentPage:
          description: >-
            The current Page. Some, not all fields are filled in this message,
            including but not limited to `name` and `display_name`.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Page'
    GoogleCloudDialogflowCxV3FulfillIntentRequest:
      id: GoogleCloudDialogflowCxV3FulfillIntentRequest
      description: Request of FulfillIntent
      type: object
      properties:
        matchIntentRequest:
          description: >-
            Must be same as the corresponding MatchIntent request, otherwise the
            behavior is undefined.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3MatchIntentRequest'
        match:
          description: The matched intent/event to fulfill.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Match'
        outputAudioConfig:
          description: Instructs the speech synthesizer how to generate output audio.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3OutputAudioConfig'
    GoogleCloudDialogflowCxV3FulfillIntentResponse:
      id: GoogleCloudDialogflowCxV3FulfillIntentResponse
      description: Response of FulfillIntent
      type: object
      properties:
        responseId:
          description: >-
            Output only. The unique identifier of the response. It can be used
            to locate a response in the training example set or for reporting
            issues.
          type: string
        queryResult:
          description: The result of the conversational query.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3QueryResult'
        outputAudio:
          description: >-
            The audio data bytes encoded as specified in the request. Note: The
            output audio is generated based on the values of default platform
            text responses found in the `query_result.response_messages` field.
            If multiple default text responses exist, they will be concatenated
            when generating audio. If no default platform text responses exist,
            the generated audio content will be empty. In some scenarios,
            multiple output audio fields may be present in the response
            structure. In these cases, only the top-most-level audio output has
            content.
          type: string
          format: byte
        outputAudioConfig:
          description: >-
            The config used by the speech synthesizer to generate the output
            audio.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3OutputAudioConfig'
    GoogleCloudDialogflowCxV3SubmitAnswerFeedbackRequest:
      id: GoogleCloudDialogflowCxV3SubmitAnswerFeedbackRequest
      description: The request to set the feedback for a bot answer.
      type: object
      properties:
        responseId:
          description: >-
            Required. ID of the response to update its feedback. This is the
            same as DetectIntentResponse.response_id.
          type: string
        answerFeedback:
          description: Required. Feedback provided for a bot answer.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3AnswerFeedback'
        updateMask:
          description: >-
            Optional. The mask to control which fields to update. If the mask is
            not present, all fields will be updated.
          type: string
          format: google-fieldmask
    GoogleCloudDialogflowCxV3AnswerFeedback:
      id: GoogleCloudDialogflowCxV3AnswerFeedback
      description: Stores information about feedback provided by users about a response.
      type: object
      properties:
        rating:
          description: Optional. Rating from user for the specific Dialogflow response.
          type: string
          enumDescriptions:
            - Rating not specified.
            - Thumbs up feedback from user.
            - Thumbs down feedback from user.
          enum:
            - RATING_UNSPECIFIED
            - THUMBS_UP
            - THUMBS_DOWN
        ratingReason:
          description: >-
            Optional. In case of thumbs down rating provided, users can
            optionally provide context about the rating.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3AnswerFeedbackRatingReason
        customRating:
          description: >-
            Optional. Custom rating from the user about the provided answer,
            with maximum length of 1024 characters. For example, client could
            use a customized JSON object to indicate the rating.
          type: string
    GoogleCloudDialogflowCxV3AnswerFeedbackRatingReason:
      id: GoogleCloudDialogflowCxV3AnswerFeedbackRatingReason
      description: Stores extra information about why users provided thumbs down rating.
      type: object
      properties:
        reasonLabels:
          description: >-
            Optional. Custom reason labels for thumbs down rating provided by
            the user. The maximum number of labels allowed is 10 and the maximum
            length of a single label is 128 characters.
          type: array
          items:
            type: string
        feedback:
          description: >-
            Optional. Additional feedback about the rating. This field can be
            populated without choosing a predefined `reason`.
          type: string
    GoogleCloudDialogflowCxV3ListTransitionRouteGroupsResponse:
      id: GoogleCloudDialogflowCxV3ListTransitionRouteGroupsResponse
      description: >-
        The response message for
        TransitionRouteGroups.ListTransitionRouteGroups.
      type: object
      properties:
        transitionRouteGroups:
          description: >-
            The list of transition route groups. There will be a maximum number
            of items returned based on the page_size field in the request. The
            list may in some cases be empty or contain fewer entries than
            page_size even if this isn't the last page.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3TransitionRouteGroup'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    GoogleCloudDialogflowCxV3TransitionRouteGroup:
      id: GoogleCloudDialogflowCxV3TransitionRouteGroup
      description: >-
        A TransitionRouteGroup represents a group of `TransitionRoutes` to be
        used by a Page.
      type: object
      properties:
        name:
          description: >-
            The unique identifier of the transition route group.
            TransitionRouteGroups.CreateTransitionRouteGroup populates the name
            automatically. Format:
            `projects//locations//agents//flows//transitionRouteGroups/` .
          type: string
        displayName:
          description: >-
            Required. The human-readable name of the transition route group,
            unique within the flow. The display name can be no longer than 30
            characters.
          type: string
        transitionRoutes:
          description: Transition routes associated with the TransitionRouteGroup.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3TransitionRoute'
    GoogleCloudDialogflowCxV3ListTestCasesResponse:
      id: GoogleCloudDialogflowCxV3ListTestCasesResponse
      description: The response message for TestCases.ListTestCases.
      type: object
      properties:
        testCases:
          description: >-
            The list of test cases. There will be a maximum number of items
            returned based on the page_size field in the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3TestCase'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    GoogleCloudDialogflowCxV3TestCase:
      id: GoogleCloudDialogflowCxV3TestCase
      description: Represents a test case.
      type: object
      properties:
        name:
          description: >-
            The unique identifier of the test case. TestCases.CreateTestCase
            will populate the name automatically. Otherwise use format:
            `projects//locations//agents//testCases/`.
          type: string
        tags:
          description: >-
            Tags are short descriptions that users may apply to test cases for
            organizational and filtering purposes. Each tag should start with
            "#" and has a limit of 30 characters.
          type: array
          items:
            type: string
        displayName:
          description: >-
            Required. The human-readable name of the test case, unique within
            the agent. Limit of 200 characters.
          type: string
        notes:
          description: >-
            Additional freeform notes about the test case. Limit of 400
            characters.
          type: string
        testConfig:
          description: Config for the test case.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3TestConfig'
        testCaseConversationTurns:
          description: >-
            The conversation turns uttered when the test case was created, in
            chronological order. These include the canonical set of agent
            utterances that should occur when the agent is working properly.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3ConversationTurn'
        creationTime:
          description: Output only. When the test was created.
          readOnly: true
          type: string
          format: google-datetime
        lastTestResult:
          description: The latest test result.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3TestCaseResult'
    GoogleCloudDialogflowCxV3TestConfig:
      id: GoogleCloudDialogflowCxV3TestConfig
      description: Represents configurations for a test case.
      type: object
      properties:
        trackingParameters:
          description: Session parameters to be compared when calculating differences.
          type: array
          items:
            type: string
        flow:
          description: >-
            Flow name to start the test case with. Format:
            `projects//locations//agents//flows/`. Only one of `flow` and `page`
            should be set to indicate the starting point of the test case. If
            neither is set, the test case will start with start page on the
            default start flow.
          type: string
        page:
          description: >-
            The page to start the test case with. Format:
            `projects//locations//agents//flows//pages/`. Only one of `flow` and
            `page` should be set to indicate the starting point of the test
            case. If neither is set, the test case will start with start page on
            the default start flow.
          type: string
    GoogleCloudDialogflowCxV3ConversationTurn:
      id: GoogleCloudDialogflowCxV3ConversationTurn
      description: >-
        One interaction between a human and virtual agent. The human provides
        some input and the virtual agent provides a response.
      type: object
      properties:
        userInput:
          description: The user input.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3ConversationTurnUserInput
        virtualAgentOutput:
          description: The virtual agent output.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput
    GoogleCloudDialogflowCxV3ConversationTurnUserInput:
      id: GoogleCloudDialogflowCxV3ConversationTurnUserInput
      description: The input from the human user.
      type: object
      properties:
        input:
          description: Supports text input, event input, dtmf input in the test case.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3QueryInput'
        injectedParameters:
          description: >-
            Parameters that need to be injected into the conversation during
            intent detection.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        isWebhookEnabled:
          description: >-
            If webhooks should be allowed to trigger in response to the user
            utterance. Often if parameters are injected, webhooks should not be
            enabled.
          type: boolean
        enableSentimentAnalysis:
          description: Whether sentiment analysis is enabled.
          type: boolean
    GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput:
      id: GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput
      description: The output from the virtual agent.
      type: object
      properties:
        sessionParameters:
          description: The session parameters available to the bot at this point.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        differences:
          description: >-
            Output only. If this is part of a result conversation turn, the list
            of differences between the original run and the replay for this
            output, if any.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3TestRunDifference'
        diagnosticInfo:
          description: >-
            Required. Input only. The diagnostic info output for the turn.
            Required to calculate the testing coverage.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        triggeredIntent:
          description: >-
            The Intent that triggered the response. Only name and displayName
            will be set.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Intent'
        currentPage:
          description: >-
            The Page on which the utterance was spoken. Only name and
            displayName will be set.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Page'
        textResponses:
          description: The text responses from the agent for the turn.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3ResponseMessageText'
        status:
          description: >-
            Response error from the agent in the test result. If set, other
            output is empty.
          $ref: '#/components/schemas/GoogleRpcStatus'
    GoogleCloudDialogflowCxV3TestRunDifference:
      id: GoogleCloudDialogflowCxV3TestRunDifference
      description: >-
        The description of differences between original and replayed agent
        output.
      type: object
      properties:
        type:
          description: The type of diff.
          type: string
          enumDescriptions:
            - Should never be used.
            - The intent.
            - The page.
            - The parameters.
            - The message utterance.
            - The flow.
          enum:
            - DIFF_TYPE_UNSPECIFIED
            - INTENT
            - PAGE
            - PARAMETERS
            - UTTERANCE
            - FLOW
        description:
          description: >-
            A human readable description of the diff, showing the actual output
            vs expected output.
          type: string
    GoogleCloudDialogflowCxV3TestCaseResult:
      id: GoogleCloudDialogflowCxV3TestCaseResult
      description: Represents a result from running a test case in an agent environment.
      type: object
      properties:
        name:
          description: >-
            The resource name for the test case result. Format:
            `projects//locations//agents//testCases//results/`.
          type: string
        environment:
          description: >-
            Environment where the test was run. If not set, it indicates the
            draft environment.
          type: string
        conversationTurns:
          description: >-
            The conversation turns uttered during the test case replay in
            chronological order.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3ConversationTurn'
        testResult:
          description: Whether the test case passed in the agent environment.
          type: string
          enumDescriptions:
            - Not specified. Should never be used.
            - The test passed.
            - The test did not pass.
          enum:
            - TEST_RESULT_UNSPECIFIED
            - PASSED
            - FAILED
        testTime:
          description: The time that the test was run.
          type: string
          format: google-datetime
    GoogleCloudDialogflowCxV3BatchDeleteTestCasesRequest:
      id: GoogleCloudDialogflowCxV3BatchDeleteTestCasesRequest
      description: The request message for TestCases.BatchDeleteTestCases.
      type: object
      properties:
        names:
          description: >-
            Required. Format of test case names:
            `projects//locations//agents//testCases/`.
          type: array
          items:
            type: string
    GoogleCloudDialogflowCxV3RunTestCaseRequest:
      id: GoogleCloudDialogflowCxV3RunTestCaseRequest
      description: The request message for TestCases.RunTestCase.
      type: object
      properties:
        environment:
          description: >-
            Optional. Environment name. If not set, draft environment is
            assumed. Format: `projects//locations//agents//environments/`.
          type: string
    GoogleCloudDialogflowCxV3BatchRunTestCasesRequest:
      id: GoogleCloudDialogflowCxV3BatchRunTestCasesRequest
      description: The request message for TestCases.BatchRunTestCases.
      type: object
      properties:
        environment:
          description: >-
            Optional. If not set, draft environment is assumed. Format:
            `projects//locations//agents//environments/`.
          type: string
        testCases:
          description: 'Required. Format: `projects//locations//agents//testCases/`.'
          type: array
          items:
            type: string
    GoogleCloudDialogflowCxV3CalculateCoverageResponse:
      id: GoogleCloudDialogflowCxV3CalculateCoverageResponse
      description: The response message for TestCases.CalculateCoverage.
      type: object
      properties:
        agent:
          description: >-
            The agent to calculate coverage for. Format:
            `projects//locations//agents/`.
          type: string
        intentCoverage:
          description: Intent coverage.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3IntentCoverage'
        transitionCoverage:
          description: Transition (excluding transition route groups) coverage.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3TransitionCoverage'
        routeGroupCoverage:
          description: Transition route group coverage.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3TransitionRouteGroupCoverage
    GoogleCloudDialogflowCxV3IntentCoverage:
      id: GoogleCloudDialogflowCxV3IntentCoverage
      description: >-
        Intent coverage represents the percentage of all possible intents in the
        agent that are triggered in any of a parent's test cases.
      type: object
      properties:
        intents:
          description: The list of Intents present in the agent
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3IntentCoverageIntent'
        coverageScore:
          description: The percent of intents in the agent that are covered.
          type: number
          format: float
    GoogleCloudDialogflowCxV3IntentCoverageIntent:
      id: GoogleCloudDialogflowCxV3IntentCoverageIntent
      description: The agent's intent.
      type: object
      properties:
        intent:
          description: The intent full resource name
          type: string
        covered:
          description: >-
            Whether the intent is covered by at least one of the agent's test
            cases.
          type: boolean
    GoogleCloudDialogflowCxV3TransitionCoverage:
      id: GoogleCloudDialogflowCxV3TransitionCoverage
      description: >-
        Transition coverage represents the percentage of all possible page
        transitions (page-level transition routes and event handlers, excluding
        transition route groups) present within any of a parent's test cases.
      type: object
      properties:
        transitions:
          description: The list of Transitions present in the agent.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3TransitionCoverageTransition
        coverageScore:
          description: The percent of transitions in the agent that are covered.
          type: number
          format: float
    GoogleCloudDialogflowCxV3TransitionCoverageTransition:
      id: GoogleCloudDialogflowCxV3TransitionCoverageTransition
      description: A transition in a page.
      type: object
      properties:
        source:
          description: The start node of a transition.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3TransitionCoverageTransitionNode
        index:
          description: The index of a transition in the transition list. Starting from 0.
          type: integer
          format: int32
        target:
          description: The end node of a transition.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3TransitionCoverageTransitionNode
        covered:
          description: >-
            Whether the transition is covered by at least one of the agent's
            test cases.
          type: boolean
        transitionRoute:
          description: Intent route or condition route.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3TransitionRoute'
        eventHandler:
          description: Event handler.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3EventHandler'
    GoogleCloudDialogflowCxV3TransitionCoverageTransitionNode:
      id: GoogleCloudDialogflowCxV3TransitionCoverageTransitionNode
      description: The source or target of a transition.
      type: object
      properties:
        page:
          description: >-
            Indicates a transition to a Page. Only some fields such as name and
            displayname will be set.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Page'
        flow:
          description: >-
            Indicates a transition to a Flow. Only some fields such as name and
            displayname will be set.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Flow'
    GoogleCloudDialogflowCxV3TransitionRouteGroupCoverage:
      id: GoogleCloudDialogflowCxV3TransitionRouteGroupCoverage
      description: >-
        Transition route group coverage represents the percentage of all
        possible transition routes present within any of a parent's test cases.
        The results are grouped by the transition route group.
      type: object
      properties:
        coverages:
          description: Transition route group coverages.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3TransitionRouteGroupCoverageCoverage
        coverageScore:
          description: >-
            The percent of transition routes in all the transition route groups
            that are covered.
          type: number
          format: float
    GoogleCloudDialogflowCxV3TransitionRouteGroupCoverageCoverage:
      id: GoogleCloudDialogflowCxV3TransitionRouteGroupCoverageCoverage
      description: Coverage result message for one transition route group.
      type: object
      properties:
        routeGroup:
          description: >-
            Transition route group metadata. Only name and displayName will be
            set.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3TransitionRouteGroup'
        transitions:
          description: >-
            The list of transition routes and coverage in the transition route
            group.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3TransitionRouteGroupCoverageCoverageTransition
        coverageScore:
          description: >-
            The percent of transition routes in the transition route group that
            are covered.
          type: number
          format: float
    GoogleCloudDialogflowCxV3TransitionRouteGroupCoverageCoverageTransition:
      id: GoogleCloudDialogflowCxV3TransitionRouteGroupCoverageCoverageTransition
      description: A transition coverage in a transition route group.
      type: object
      properties:
        transitionRoute:
          description: Intent route or condition route.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3TransitionRoute'
        covered:
          description: >-
            Whether the transition route is covered by at least one of the
            agent's test cases.
          type: boolean
    GoogleCloudDialogflowCxV3ImportTestCasesRequest:
      id: GoogleCloudDialogflowCxV3ImportTestCasesRequest
      description: The request message for TestCases.ImportTestCases.
      type: object
      properties:
        gcsUri:
          description: >-
            The [Google Cloud Storage](https://cloud.google.com/storage/docs/)
            URI to import test cases from. The format of this URI must be
            `gs:///`. Dialogflow performs a read operation for the Cloud Storage
            object on the caller's behalf, so your request authentication must
            have read permissions for the object. For more information, see
            [Dialogflow access
            control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
          type: string
        content:
          description: Uncompressed raw byte content for test cases.
          type: string
          format: byte
    GoogleCloudDialogflowCxV3ExportTestCasesRequest:
      id: GoogleCloudDialogflowCxV3ExportTestCasesRequest
      description: The request message for TestCases.ExportTestCases.
      type: object
      properties:
        gcsUri:
          description: >-
            The [Google Cloud Storage](https://cloud.google.com/storage/docs/)
            URI to export the test cases to. The format of this URI must be
            `gs:///`. If unspecified, the serialized test cases is returned
            inline. Dialogflow performs a write operation for the Cloud Storage
            object on the caller's behalf, so your request authentication must
            have write permissions for the object. For more information, see
            [Dialogflow access
            control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
          type: string
        dataFormat:
          description: >-
            The data format of the exported test cases. If not specified, `BLOB`
            is assumed.
          type: string
          enumDescriptions:
            - Unspecified format.
            - Raw bytes.
            - JSON format.
          enum:
            - DATA_FORMAT_UNSPECIFIED
            - BLOB
            - JSON
        filter:
          description: >-
            The filter expression used to filter exported test cases, see [API
            Filtering](https://aip.dev/160). The expression is case insensitive
            and supports the following syntax: name = [OR name = ] ... For
            example: * "name = t1 OR name = t2" matches the test case with the
            exact resource name "t1" or "t2".
          type: string
    GoogleCloudDialogflowCxV3ListTestCaseResultsResponse:
      id: GoogleCloudDialogflowCxV3ListTestCaseResultsResponse
      description: The response message for TestCases.ListTestCaseResults.
      type: object
      properties:
        testCaseResults:
          description: The list of test case results.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3TestCaseResult'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    GoogleCloudDialogflowCxV3ListWebhooksResponse:
      id: GoogleCloudDialogflowCxV3ListWebhooksResponse
      description: The response message for Webhooks.ListWebhooks.
      type: object
      properties:
        webhooks:
          description: >-
            The list of webhooks. There will be a maximum number of items
            returned based on the page_size field in the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Webhook'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    GoogleCloudDialogflowCxV3Webhook:
      id: GoogleCloudDialogflowCxV3Webhook
      description: >-
        Webhooks host the developer's business logic. During a session, webhooks
        allow the developer to use the data extracted by Dialogflow's natural
        language processing to generate dynamic responses, validate collected
        data, or trigger actions on the backend.
      type: object
      properties:
        name:
          description: >-
            The unique identifier of the webhook. Required for the
            Webhooks.UpdateWebhook method. Webhooks.CreateWebhook populates the
            name automatically. Format:
            `projects//locations//agents//webhooks/`.
          type: string
        displayName:
          description: >-
            Required. The human-readable name of the webhook, unique within the
            agent.
          type: string
        genericWebService:
          description: Configuration for a generic web service.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3WebhookGenericWebService
        serviceDirectory:
          description: >-
            Configuration for a [Service
            Directory](https://cloud.google.com/service-directory) service.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig
        timeout:
          description: >-
            Webhook execution timeout. Execution is considered failed if
            Dialogflow doesn't receive a response from webhook at the end of the
            timeout period. Defaults to 5 seconds, maximum allowed timeout is 30
            seconds.
          type: string
          format: google-duration
        disabled:
          description: Indicates whether the webhook is disabled.
          type: boolean
    GoogleCloudDialogflowCxV3WebhookGenericWebService:
      id: GoogleCloudDialogflowCxV3WebhookGenericWebService
      description: Represents configuration for a generic web service.
      type: object
      properties:
        uri:
          description: >-
            Required. The webhook URI for receiving POST requests. It must use
            https protocol.
          type: string
        username:
          description: The user name for HTTP Basic authentication.
          deprecated: true
          type: string
        password:
          description: The password for HTTP Basic authentication.
          deprecated: true
          type: string
        requestHeaders:
          description: The HTTP request headers to send together with webhook requests.
          type: object
          additionalProperties:
            type: string
        allowedCaCerts:
          description: >-
            Optional. Specifies a list of allowed custom CA certificates (in DER
            format) for HTTPS verification. This overrides the default SSL trust
            store. If this is empty or unspecified, Dialogflow will use Google's
            default trust store to verify certificates. N.B. Make sure the HTTPS
            server certificates are signed with "subject alt name". For instance
            a certificate can be self-signed using the following command, ```
            openssl x509 -req -days 200 -in example.com.csr \ -signkey
            example.com.key \ -out example.com.crt \ -extfile <(printf
            "\nsubjectAltName='DNS:www.example.com'") ```
          type: array
          items:
            type: string
            format: byte
        oauthConfig:
          description: >-
            Optional. The OAuth configuration of the webhook. If specified,
            Dialogflow will initiate the OAuth client credential flow to
            exchange an access token from the 3rd party platform and put it in
            the auth header.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3WebhookGenericWebServiceOAuthConfig
        serviceAgentAuth:
          description: >-
            Optional. Indicate the auth token type generated from the
            [Diglogflow service
            agent](https://cloud.google.com/iam/docs/service-agents#dialogflow-service-agent).
            The generated token is sent in the Authorization header.
          type: string
          enumDescriptions:
            - Service agent auth type unspecified. Default to ID_TOKEN.
            - No token used.
            - >-
              Use [ID
              token](https://cloud.google.com/docs/authentication/token-types#id)
              generated from service agent. This can be used to access Cloud
              Function and Cloud Run after you grant Invoker role to
              `service-@gcp-sa-dialogflow.iam.gserviceaccount.com`.
            - >-
              Use [access
              token](https://cloud.google.com/docs/authentication/token-types#access)
              generated from service agent. This can be used to access other
              Google Cloud APIs after you grant required roles to
              `service-@gcp-sa-dialogflow.iam.gserviceaccount.com`.
          enum:
            - SERVICE_AGENT_AUTH_UNSPECIFIED
            - NONE
            - ID_TOKEN
            - ACCESS_TOKEN
        webhookType:
          description: Optional. Type of the webhook.
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - Represents a standard webhook.
            - Represents a flexible webhook.
          enum:
            - WEBHOOK_TYPE_UNSPECIFIED
            - STANDARD
            - FLEXIBLE
        httpMethod:
          description: >-
            Optional. HTTP method for the flexible webhook calls. Standard
            webhook always uses POST.
          type: string
          enumDescriptions:
            - HTTP method not specified.
            - HTTP POST Method.
            - HTTP GET Method.
            - HTTP HEAD Method.
            - HTTP PUT Method.
            - HTTP DELETE Method.
            - HTTP PATCH Method.
            - HTTP OPTIONS Method.
          enum:
            - HTTP_METHOD_UNSPECIFIED
            - POST
            - GET
            - HEAD
            - PUT
            - DELETE
            - PATCH
            - OPTIONS
        requestBody:
          description: >-
            Optional. Defines a custom JSON object as request body to send to
            flexible webhook.
          type: string
        parameterMapping:
          description: >-
            Optional. Maps the values extracted from specific fields of the
            flexible webhook response into session parameters. - Key: session
            parameter name - Value: field path in the webhook response
          type: object
          additionalProperties:
            type: string
    GoogleCloudDialogflowCxV3WebhookGenericWebServiceOAuthConfig:
      id: GoogleCloudDialogflowCxV3WebhookGenericWebServiceOAuthConfig
      description: >-
        Represents configuration of OAuth client credential flow for 3rd party
        API authentication.
      type: object
      properties:
        clientId:
          description: Required. The client ID provided by the 3rd party platform.
          type: string
        clientSecret:
          description: Required. The client secret provided by the 3rd party platform.
          type: string
        tokenEndpoint:
          description: >-
            Required. The token endpoint provided by the 3rd party platform to
            exchange an access token.
          type: string
        scopes:
          description: Optional. The OAuth scopes to grant.
          type: array
          items:
            type: string
    GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig:
      id: GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig
      description: >-
        Represents configuration for a [Service
        Directory](https://cloud.google.com/service-directory) service.
      type: object
      properties:
        service:
          description: >-
            Required. The name of [Service
            Directory](https://cloud.google.com/service-directory) service.
            Format: `projects//locations//namespaces//services/`. `Location ID`
            of the service directory must be the same as the location of the
            agent.
          type: string
        genericWebService:
          description: Generic Service configuration of this webhook.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3WebhookGenericWebService
    GoogleCloudDialogflowCxV3ListEnvironmentsResponse:
      id: GoogleCloudDialogflowCxV3ListEnvironmentsResponse
      description: The response message for Environments.ListEnvironments.
      type: object
      properties:
        environments:
          description: >-
            The list of environments. There will be a maximum number of items
            returned based on the page_size field in the request. The list may
            in some cases be empty or contain fewer entries than page_size even
            if this isn't the last page.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Environment'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    GoogleCloudDialogflowCxV3Environment:
      id: GoogleCloudDialogflowCxV3Environment
      description: >-
        Represents an environment for an agent. You can create multiple versions
        of your agent and publish them to separate environments. When you edit
        an agent, you are editing the draft agent. At any point, you can save
        the draft agent as an agent version, which is an immutable snapshot of
        your agent. When you save the draft agent, it is published to the
        default environment. When you create agent versions, you can publish
        them to custom environments. You can create a variety of custom
        environments for testing, development, production, etc.
      type: object
      properties:
        name:
          description: >-
            The name of the environment. Format:
            `projects//locations//agents//environments/`.
          type: string
        displayName:
          description: >-
            Required. The human-readable name of the environment (unique in an
            agent). Limit of 64 characters.
          type: string
        description:
          description: >-
            The human-readable description of the environment. The maximum
            length is 500 characters. If exceeded, the request is rejected.
          type: string
        versionConfigs:
          description: >-
            A list of configurations for flow versions. You should include
            version configs for all flows that are reachable from `Start Flow`
            in the agent. Otherwise, an error will be returned.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3EnvironmentVersionConfig
        updateTime:
          description: Output only. Update time of this environment.
          readOnly: true
          type: string
          format: google-datetime
        testCasesConfig:
          description: The test cases config for continuous tests of this environment.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3EnvironmentTestCasesConfig
        webhookConfig:
          description: The webhook configuration for this environment.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3EnvironmentWebhookConfig
    GoogleCloudDialogflowCxV3EnvironmentVersionConfig:
      id: GoogleCloudDialogflowCxV3EnvironmentVersionConfig
      description: Configuration for the version.
      type: object
      properties:
        version:
          description: >-
            Required. Both flow and playbook versions are supported. Format for
            flow version: projects//locations//agents//flows//versions/. Format
            for playbook version:
            projects//locations//agents//playbooks//versions/.
          type: string
    GoogleCloudDialogflowCxV3EnvironmentTestCasesConfig:
      id: GoogleCloudDialogflowCxV3EnvironmentTestCasesConfig
      description: The configuration for continuous tests.
      type: object
      properties:
        testCases:
          description: >-
            A list of test case names to run. They should be under the same
            agent. Format of each test case name:
            `projects//locations//agents//testCases/`
          type: array
          items:
            type: string
        enableContinuousRun:
          description: >-
            Whether to run test cases in TestCasesConfig.test_cases
            periodically. Default false. If set to true, run once a day.
          type: boolean
        enablePredeploymentRun:
          description: >-
            Whether to run test cases in TestCasesConfig.test_cases before
            deploying a flow version to the environment. Default false.
          type: boolean
    GoogleCloudDialogflowCxV3EnvironmentWebhookConfig:
      id: GoogleCloudDialogflowCxV3EnvironmentWebhookConfig
      description: Configuration for webhooks.
      type: object
      properties:
        webhookOverrides:
          description: >-
            The list of webhooks to override for the agent environment. The
            webhook must exist in the agent. You can override fields in
            `generic_web_service` and `service_directory`.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Webhook'
    GoogleCloudDialogflowCxV3LookupEnvironmentHistoryResponse:
      id: GoogleCloudDialogflowCxV3LookupEnvironmentHistoryResponse
      description: The response message for Environments.LookupEnvironmentHistory.
      type: object
      properties:
        environments:
          description: >-
            Represents a list of snapshots for an environment. Time of the
            snapshots is stored in `update_time`.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Environment'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    GoogleCloudDialogflowCxV3RunContinuousTestRequest:
      id: GoogleCloudDialogflowCxV3RunContinuousTestRequest
      description: The request message for Environments.RunContinuousTest.
      type: object
      properties: {}
    GoogleCloudDialogflowCxV3ListContinuousTestResultsResponse:
      id: GoogleCloudDialogflowCxV3ListContinuousTestResultsResponse
      description: The response message for Environments.ListTestCaseResults.
      type: object
      properties:
        continuousTestResults:
          description: The list of continuous test results.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3ContinuousTestResult'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    GoogleCloudDialogflowCxV3ContinuousTestResult:
      id: GoogleCloudDialogflowCxV3ContinuousTestResult
      description: Represents a result from running a test case in an agent environment.
      type: object
      properties:
        name:
          description: >-
            The resource name for the continuous test result. Format:
            `projects//locations//agents//environments//continuousTestResults/`.
          type: string
        result:
          description: >-
            The result of this continuous test run, i.e. whether all the tests
            in this continuous test run pass or not.
          type: string
          enumDescriptions:
            - Not specified. Should never be used.
            - All the tests passed.
            - At least one test did not pass.
          enum:
            - AGGREGATED_TEST_RESULT_UNSPECIFIED
            - PASSED
            - FAILED
        testCaseResults:
          description: >-
            A list of individual test case results names in this continuous test
            run.
          type: array
          items:
            type: string
        runTime:
          description: Time when the continuous testing run starts.
          type: string
          format: google-datetime
    GoogleCloudDialogflowCxV3DeployFlowRequest:
      id: GoogleCloudDialogflowCxV3DeployFlowRequest
      description: The request message for Environments.DeployFlow.
      type: object
      properties:
        flowVersion:
          description: >-
            Required. The flow version to deploy. Format:
            `projects//locations//agents//flows//versions/`.
          type: string
    GoogleCloudDialogflowCxV3ListExperimentsResponse:
      id: GoogleCloudDialogflowCxV3ListExperimentsResponse
      description: The response message for Experiments.ListExperiments.
      type: object
      properties:
        experiments:
          description: >-
            The list of experiments. There will be a maximum number of items
            returned based on the page_size field in the request. The list may
            in some cases be empty or contain fewer entries than page_size even
            if this isn't the last page.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Experiment'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    GoogleCloudDialogflowCxV3Experiment:
      id: GoogleCloudDialogflowCxV3Experiment
      description: Represents an experiment in an environment.
      type: object
      properties:
        name:
          description: >-
            The name of the experiment. Format:
            projects//locations//agents//environments//experiments/.
          type: string
        displayName:
          description: >-
            Required. The human-readable name of the experiment (unique in an
            environment). Limit of 64 characters.
          type: string
        description:
          description: The human-readable description of the experiment.
          type: string
        state:
          description: >-
            The current state of the experiment. Transition triggered by
            Experiments.StartExperiment: DRAFT->RUNNING. Transition triggered by
            Experiments.CancelExperiment: DRAFT->DONE or RUNNING->DONE.
          type: string
          enumDescriptions:
            - State unspecified.
            - The experiment is created but not started yet.
            - The experiment is running.
            - The experiment is done.
            - The experiment with auto-rollout enabled has failed.
          enum:
            - STATE_UNSPECIFIED
            - DRAFT
            - RUNNING
            - DONE
            - ROLLOUT_FAILED
        definition:
          description: The definition of the experiment.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3ExperimentDefinition'
        rolloutConfig:
          description: >-
            The configuration for auto rollout. If set, there should be exactly
            two variants in the experiment (control variant being the default
            version of the flow), the traffic allocation for the non-control
            variant will gradually increase to 100% when conditions are met, and
            eventually replace the control variant to become the default version
            of the flow.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3RolloutConfig'
        rolloutState:
          description: State of the auto rollout process.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3RolloutState'
        rolloutFailureReason:
          description: >-
            The reason why rollout has failed. Should only be set when state is
            ROLLOUT_FAILED.
          type: string
        result:
          description: Inference result of the experiment.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3ExperimentResult'
        createTime:
          description: Creation time of this experiment.
          type: string
          format: google-datetime
        startTime:
          description: Start time of this experiment.
          type: string
          format: google-datetime
        endTime:
          description: End time of this experiment.
          type: string
          format: google-datetime
        lastUpdateTime:
          description: Last update time of this experiment.
          type: string
          format: google-datetime
        experimentLength:
          description: >-
            Maximum number of days to run the experiment/rollout. If
            auto-rollout is not enabled, default value and maximum will be 30
            days. If auto-rollout is enabled, default value and maximum will be
            6 days.
          type: string
          format: google-duration
        variantsHistory:
          description: The history of updates to the experiment variants.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3VariantsHistory'
    GoogleCloudDialogflowCxV3ExperimentDefinition:
      id: GoogleCloudDialogflowCxV3ExperimentDefinition
      description: Definition of the experiment.
      type: object
      properties:
        condition:
          description: >-
            The condition defines which subset of sessions are selected for this
            experiment. If not specified, all sessions are eligible. E.g.
            "query_input.language_code=en" See the [conditions
            reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
          type: string
        versionVariants:
          description: The flow versions as the variants of this experiment.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3VersionVariants'
    GoogleCloudDialogflowCxV3VersionVariants:
      id: GoogleCloudDialogflowCxV3VersionVariants
      description: A list of flow version variants.
      type: object
      properties:
        variants:
          description: A list of flow version variants.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3VersionVariantsVariant
    GoogleCloudDialogflowCxV3VersionVariantsVariant:
      id: GoogleCloudDialogflowCxV3VersionVariantsVariant
      description: A single flow version with specified traffic allocation.
      type: object
      properties:
        version:
          description: >-
            The name of the flow version. Format:
            `projects//locations//agents//flows//versions/`.
          type: string
        trafficAllocation:
          description: >-
            Percentage of the traffic which should be routed to this version of
            flow. Traffic allocation for a single flow must sum up to 1.0.
          type: number
          format: float
        isControlGroup:
          description: Whether the variant is for the control group.
          type: boolean
    GoogleCloudDialogflowCxV3RolloutConfig:
      id: GoogleCloudDialogflowCxV3RolloutConfig
      description: The configuration for auto rollout.
      type: object
      properties:
        rolloutSteps:
          description: >-
            Steps to roll out a flow version. Steps should be sorted by
            percentage in ascending order.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3RolloutConfigRolloutStep
        rolloutCondition:
          description: >-
            The conditions that are used to evaluate the success of a rollout
            step. If not specified, all rollout steps will proceed to the next
            one unless failure conditions are met. E.g. "containment_rate > 60%
            AND callback_rate < 20%". See the [conditions
            reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
          type: string
        failureCondition:
          description: >-
            The conditions that are used to evaluate the failure of a rollout
            step. If not specified, no rollout steps will fail. E.g.
            "containment_rate < 10% OR average_turn_count < 3". See the
            [conditions
            reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
          type: string
    GoogleCloudDialogflowCxV3RolloutConfigRolloutStep:
      id: GoogleCloudDialogflowCxV3RolloutConfigRolloutStep
      description: A single rollout step with specified traffic allocation.
      type: object
      properties:
        displayName:
          description: The name of the rollout step;
          type: string
        trafficPercent:
          description: >-
            The percentage of traffic allocated to the flow version of this
            rollout step. (0%, 100%].
          type: integer
          format: int32
        minDuration:
          description: >-
            The minimum time that this step should last. Should be longer than 1
            hour. If not set, the default minimum duration for each step will be
            1 hour.
          type: string
          format: google-duration
    GoogleCloudDialogflowCxV3RolloutState:
      id: GoogleCloudDialogflowCxV3RolloutState
      description: State of the auto-rollout process.
      type: object
      properties:
        step:
          description: Display name of the current auto rollout step.
          type: string
        stepIndex:
          description: Index of the current step in the auto rollout steps list.
          type: integer
          format: int32
        startTime:
          description: Start time of the current step.
          type: string
          format: google-datetime
    GoogleCloudDialogflowCxV3ExperimentResult:
      id: GoogleCloudDialogflowCxV3ExperimentResult
      description: >-
        The inference result which includes an objective metric to optimize and
        the confidence interval.
      type: object
      properties:
        versionMetrics:
          description: Version variants and metrics.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3ExperimentResultVersionMetrics
        lastUpdateTime:
          description: >-
            The last time the experiment's stats data was updated. Will have
            default value if stats have never been computed for this experiment.
          type: string
          format: google-datetime
    GoogleCloudDialogflowCxV3ExperimentResultVersionMetrics:
      id: GoogleCloudDialogflowCxV3ExperimentResultVersionMetrics
      description: Version variant and associated metrics.
      type: object
      properties:
        version:
          description: >-
            The name of the flow Version. Format:
            `projects//locations//agents//flows//versions/`.
          type: string
        metrics:
          description: >-
            The metrics and corresponding confidence intervals in the inference
            result.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3ExperimentResultMetric
        sessionCount:
          description: Number of sessions that were allocated to this version.
          type: integer
          format: int32
    GoogleCloudDialogflowCxV3ExperimentResultMetric:
      id: GoogleCloudDialogflowCxV3ExperimentResultMetric
      description: Metric and corresponding confidence intervals.
      type: object
      properties:
        type:
          description: >-
            Ratio-based metric type. Only one of type or count_type is specified
            in each Metric.
          type: string
          enumDescriptions:
            - Metric unspecified.
            - >-
              Percentage of contained sessions without user calling back in 24
              hours.
            - Percentage of sessions that were handed to a human agent.
            - Percentage of sessions with the same user calling back.
            - Percentage of sessions where user hung up.
            - >-
              Percentage of sessions reached Dialogflow 'END_PAGE' or
              'END_SESSION'.
          enum:
            - METRIC_UNSPECIFIED
            - CONTAINED_SESSION_NO_CALLBACK_RATE
            - LIVE_AGENT_HANDOFF_RATE
            - CALLBACK_SESSION_RATE
            - ABANDONED_SESSION_RATE
            - SESSION_END_RATE
        countType:
          description: >-
            Count-based metric type. Only one of type or count_type is specified
            in each Metric.
          type: string
          enumDescriptions:
            - Count type unspecified.
            - Total number of occurrences of a 'NO_MATCH'.
            - Total number of turn counts.
            - Average turn count in a session.
          enum:
            - COUNT_TYPE_UNSPECIFIED
            - TOTAL_NO_MATCH_COUNT
            - TOTAL_TURN_COUNT
            - AVERAGE_TURN_COUNT
        ratio:
          description: Ratio value of a metric.
          type: number
          format: double
        count:
          description: Count value of a metric.
          type: number
          format: double
        confidenceInterval:
          description: >-
            The probability that the treatment is better than all other
            treatments in the experiment
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval
    GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval:
      id: GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval
      description: >-
        A confidence interval is a range of possible values for the experiment
        objective you are trying to measure.
      type: object
      properties:
        confidenceLevel:
          description: >-
            The confidence level used to construct the interval, i.e. there is
            X% chance that the true value is within this interval.
          type: number
          format: double
        ratio:
          description: >-
            The percent change between an experiment metric's value and the
            value for its control.
          type: number
          format: double
        lowerBound:
          description: Lower bound of the interval.
          type: number
          format: double
        upperBound:
          description: Upper bound of the interval.
          type: number
          format: double
    GoogleCloudDialogflowCxV3VariantsHistory:
      id: GoogleCloudDialogflowCxV3VariantsHistory
      description: The history of variants update.
      type: object
      properties:
        versionVariants:
          description: The flow versions as the variants.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3VersionVariants'
        updateTime:
          description: Update time of the variants.
          type: string
          format: google-datetime
    GoogleCloudDialogflowCxV3StartExperimentRequest:
      id: GoogleCloudDialogflowCxV3StartExperimentRequest
      description: The request message for Experiments.StartExperiment.
      type: object
      properties: {}
    GoogleCloudDialogflowCxV3StopExperimentRequest:
      id: GoogleCloudDialogflowCxV3StopExperimentRequest
      description: The request message for Experiments.StopExperiment.
      type: object
      properties: {}
    GoogleCloudDialogflowCxV3ListGeneratorsResponse:
      id: GoogleCloudDialogflowCxV3ListGeneratorsResponse
      description: The response message for Generators.ListGenerators.
      type: object
      properties:
        generators:
          description: >-
            The list of generators. There will be a maximum number of items
            returned based on the page_size field in the request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Generator'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    GoogleCloudDialogflowCxV3Generator:
      id: GoogleCloudDialogflowCxV3Generator
      description: >-
        Generators contain prompt to be sent to the LLM model to generate text.
        The prompt can contain parameters which will be resolved before calling
        the model. It can optionally contain banned phrases to ensure the model
        responses are safe.
      type: object
      properties:
        name:
          description: >-
            The unique identifier of the generator. Must be set for the
            Generators.UpdateGenerator method. Generators.CreateGenerate
            populates the name automatically. Format:
            `projects//locations//agents//generators/`.
          type: string
        displayName:
          description: >-
            Required. The human-readable name of the generator, unique within
            the agent. The prompt contains pre-defined parameters such as
            $conversation, $last-user-utterance, etc. populated by Dialogflow.
            It can also contain custom placeholders which will be resolved
            during fulfillment.
          type: string
        promptText:
          description: Required. Prompt for the LLM model.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Phrase'
        placeholders:
          description: Optional. List of custom placeholders in the prompt text.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3GeneratorPlaceholder'
    GoogleCloudDialogflowCxV3Phrase:
      id: GoogleCloudDialogflowCxV3Phrase
      description: Text input which can be used for prompt or banned phrases.
      type: object
      properties:
        text:
          description: Required. Text input which can be used for prompt or banned phrases.
          type: string
    GoogleCloudDialogflowCxV3GeneratorPlaceholder:
      id: GoogleCloudDialogflowCxV3GeneratorPlaceholder
      description: Represents a custom placeholder in the prompt text.
      type: object
      properties:
        id:
          description: >-
            Unique ID used to map custom placeholder to parameters in
            fulfillment.
          type: string
        name:
          description: Custom placeholder value in the prompt text.
          type: string
    GoogleCloudDialogflowCxV3ListVersionsResponse:
      id: GoogleCloudDialogflowCxV3ListVersionsResponse
      description: The response message for Versions.ListVersions.
      type: object
      properties:
        versions:
          description: >-
            A list of versions. There will be a maximum number of items returned
            based on the page_size field in the request. The list may in some
            cases be empty or contain fewer entries than page_size even if this
            isn't the last page.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Version'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    GoogleCloudDialogflowCxV3Version:
      id: GoogleCloudDialogflowCxV3Version
      description: Represents a version of a flow.
      type: object
      properties:
        name:
          description: >-
            Format: projects//locations//agents//flows//versions/. Version ID is
            a self-increasing number generated by Dialogflow upon version
            creation.
          type: string
        displayName:
          description: >-
            Required. The human-readable name of the version. Limit of 64
            characters.
          type: string
        description:
          description: >-
            The description of the version. The maximum length is 500
            characters. If exceeded, the request is rejected.
          type: string
        nluSettings:
          description: Output only. The NLU settings of the flow at version creation.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3NluSettings'
        createTime:
          description: Output only. Create time of the version.
          readOnly: true
          type: string
          format: google-datetime
        state:
          description: >-
            Output only. The state of this version. This field is read-only and
            cannot be set by create and update methods.
          readOnly: true
          type: string
          enumDescriptions:
            - Not specified. This value is not used.
            - Version is not ready to serve (e.g. training is running).
            - Training has succeeded and this version is ready to serve.
            - Version training failed.
          enum:
            - STATE_UNSPECIFIED
            - RUNNING
            - SUCCEEDED
            - FAILED
    GoogleCloudDialogflowCxV3LoadVersionRequest:
      id: GoogleCloudDialogflowCxV3LoadVersionRequest
      description: The request message for Versions.LoadVersion.
      type: object
      properties:
        allowOverrideAgentResources:
          description: >-
            This field is used to prevent accidental overwrite of other agent
            resources, which can potentially impact other flow's behavior. If
            `allow_override_agent_resources` is false, conflicted agent-level
            resources will not be overridden (i.e. intents, entities, webhooks).
          type: boolean
    GoogleCloudDialogflowCxV3CompareVersionsRequest:
      id: GoogleCloudDialogflowCxV3CompareVersionsRequest
      description: The request message for Versions.CompareVersions.
      type: object
      properties:
        targetVersion:
          description: >-
            Required. Name of the target flow version to compare with the base
            version. Use version ID `0` to indicate the draft version of the
            specified flow. Format:
            `projects//locations//agents//flows//versions/`.
          type: string
        languageCode:
          description: >-
            The language to compare the flow versions for. If not specified, the
            agent's default language is used. [Many
            languages](https://cloud.google.com/dialogflow/docs/reference/language)
            are supported. Note: languages must be enabled in the agent before
            they can be used.
          type: string
    GoogleCloudDialogflowCxV3CompareVersionsResponse:
      id: GoogleCloudDialogflowCxV3CompareVersionsResponse
      description: The response message for Versions.CompareVersions.
      type: object
      properties:
        baseVersionContentJson:
          description: JSON representation of the base version content.
          type: string
        targetVersionContentJson:
          description: JSON representation of the target version content.
          type: string
        compareTime:
          description: The timestamp when the two version compares.
          type: string
          format: google-datetime
    GoogleCloudLocationListLocationsResponse:
      id: GoogleCloudLocationListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudLocationLocation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    GoogleCloudLocationLocation:
      id: GoogleCloudLocationLocation
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
          additionalProperties:
            type: string
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    GoogleCloudDialogflowCxV3CreateVersionOperationMetadata:
      id: GoogleCloudDialogflowCxV3CreateVersionOperationMetadata
      description: >-
        Metadata associated with the long running operation for
        Versions.CreateVersion.
      type: object
      properties:
        version:
          description: >-
            Name of the created version. Format:
            `projects//locations//agents//flows//versions/`.
          type: string
    GoogleCloudDialogflowCxV3ExportAgentResponse:
      id: GoogleCloudDialogflowCxV3ExportAgentResponse
      description: The response message for Agents.ExportAgent.
      type: object
      properties:
        agentUri:
          description: >-
            The URI to a file containing the exported agent. This field is
            populated if `agent_uri` is specified in ExportAgentRequest.
          type: string
        agentContent:
          description: >-
            Uncompressed raw byte content for agent. This field is populated if
            none of `agent_uri` and `git_destination` are specified in
            ExportAgentRequest.
          type: string
          format: byte
        commitSha:
          description: >-
            Commit SHA of the git push. This field is populated if
            `git_destination` is specified in ExportAgentRequest.
          type: string
    GoogleCloudDialogflowCxV3ExportFlowResponse:
      id: GoogleCloudDialogflowCxV3ExportFlowResponse
      description: The response message for Flows.ExportFlow.
      type: object
      properties:
        flowUri:
          description: >-
            The URI to a file containing the exported flow. This field is
            populated only if `flow_uri` is specified in ExportFlowRequest.
          type: string
        flowContent:
          description: Uncompressed raw byte content for flow.
          type: string
          format: byte
    GoogleCloudDialogflowCxV3ExportIntentsMetadata:
      id: GoogleCloudDialogflowCxV3ExportIntentsMetadata
      description: Metadata returned for the Intents.ExportIntents long running operation.
      type: object
      properties: {}
    GoogleCloudDialogflowCxV3ExportIntentsResponse:
      id: GoogleCloudDialogflowCxV3ExportIntentsResponse
      description: The response message for Intents.ExportIntents.
      type: object
      properties:
        intentsUri:
          description: >-
            The URI to a file containing the exported intents. This field is
            populated only if `intents_uri` is specified in
            ExportIntentsRequest.
          type: string
        intentsContent:
          description: >-
            Uncompressed byte content for intents. This field is populated only
            if `intents_content_inline` is set to true in ExportIntentsRequest.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3InlineDestination'
    GoogleCloudDialogflowCxV3InlineDestination:
      id: GoogleCloudDialogflowCxV3InlineDestination
      description: >-
        Inline destination for a Dialogflow operation that writes or exports
        objects (e.g. intents) outside of Dialogflow.
      type: object
      properties:
        content:
          description: >-
            Output only. The uncompressed byte content for the objects. Only
            populated in responses.
          readOnly: true
          type: string
          format: byte
    GoogleCloudDialogflowCxV3ImportFlowResponse:
      id: GoogleCloudDialogflowCxV3ImportFlowResponse
      description: The response message for Flows.ImportFlow.
      type: object
      properties:
        flow:
          description: >-
            The unique identifier of the new flow. Format:
            `projects//locations//agents//flows/`.
          type: string
    GoogleCloudDialogflowCxV3ImportEntityTypesMetadata:
      id: GoogleCloudDialogflowCxV3ImportEntityTypesMetadata
      description: >-
        Metadata returned for the EntityTypes.ImportEntityTypes long running
        operation.
      type: object
      properties: {}
    GoogleCloudDialogflowCxV3ImportEntityTypesResponse:
      id: GoogleCloudDialogflowCxV3ImportEntityTypesResponse
      description: The response message for EntityTypes.ImportEntityTypes.
      type: object
      properties:
        entityTypes:
          description: >-
            The unique identifier of the imported entity types. Format:
            `projects//locations//agents//entity_types/`.
          type: array
          items:
            type: string
        conflictingResources:
          description: >-
            Info which resources have conflicts when REPORT_CONFLICT
            merge_option is set in ImportEntityTypesRequest.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3ImportEntityTypesResponseConflictingResources
    GoogleCloudDialogflowCxV3ImportEntityTypesResponseConflictingResources:
      id: GoogleCloudDialogflowCxV3ImportEntityTypesResponseConflictingResources
      description: >-
        Conflicting resources detected during the import process. Only filled
        when REPORT_CONFLICT is set in the request and there are conflicts in
        the display names.
      type: object
      properties:
        entityTypeDisplayNames:
          description: Display names of conflicting entity types.
          type: array
          items:
            type: string
        entityDisplayNames:
          description: Display names of conflicting entities.
          type: array
          items:
            type: string
    GoogleCloudDialogflowCxV3ExportEntityTypesMetadata:
      id: GoogleCloudDialogflowCxV3ExportEntityTypesMetadata
      description: >-
        Metadata returned for the EntityTypes.ExportEntityTypes long running
        operation.
      type: object
      properties: {}
    GoogleCloudDialogflowCxV3ExportEntityTypesResponse:
      id: GoogleCloudDialogflowCxV3ExportEntityTypesResponse
      description: The response message for EntityTypes.ExportEntityTypes.
      type: object
      properties:
        entityTypesUri:
          description: >-
            The URI to a file containing the exported entity types. This field
            is populated only if `entity_types_uri` is specified in
            ExportEntityTypesRequest.
          type: string
        entityTypesContent:
          description: >-
            Uncompressed byte content for entity types. This field is populated
            only if `entity_types_content_inline` is set to true in
            ExportEntityTypesRequest.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3InlineDestination'
    GoogleCloudDialogflowCxV3ImportIntentsMetadata:
      id: GoogleCloudDialogflowCxV3ImportIntentsMetadata
      description: Metadata returned for the Intents.ImportIntents long running operation.
      type: object
      properties: {}
    GoogleCloudDialogflowCxV3ImportIntentsResponse:
      id: GoogleCloudDialogflowCxV3ImportIntentsResponse
      description: The response message for Intents.ImportIntents.
      type: object
      properties:
        intents:
          description: >-
            The unique identifier of the imported intents. Format:
            `projects//locations//agents//intents/`.
          type: array
          items:
            type: string
        conflictingResources:
          description: >-
            Info which resources have conflicts when REPORT_CONFLICT
            merge_option is set in ImportIntentsRequest.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3ImportIntentsResponseConflictingResources
    GoogleCloudDialogflowCxV3ImportIntentsResponseConflictingResources:
      id: GoogleCloudDialogflowCxV3ImportIntentsResponseConflictingResources
      description: >-
        Conflicting resources detected during the import process. Only filled
        when REPORT_CONFLICT is set in the request and there are conflicts in
        the display names.
      type: object
      properties:
        intentDisplayNames:
          description: Display names of conflicting intents.
          type: array
          items:
            type: string
        entityDisplayNames:
          description: Display names of conflicting entities.
          type: array
          items:
            type: string
    GoogleCloudDialogflowCxV3WebhookRequest:
      id: GoogleCloudDialogflowCxV3WebhookRequest
      description: >-
        The request message for a webhook call. The request is sent as a JSON
        object and the field names will be presented in camel cases. You may see
        undocumented fields in an actual request. These fields are used
        internally by Dialogflow and should be ignored.
      type: object
      properties:
        detectIntentResponseId:
          description: >-
            Always present. The unique identifier of the DetectIntentResponse
            that will be returned to the API caller.
          type: string
        text:
          description: >-
            If natural language text was provided as input, this field will
            contain a copy of the text.
          type: string
        triggerIntent:
          description: >-
            If an intent was provided as input, this field will contain a copy
            of the intent identifier. Format:
            `projects//locations//agents//intents/`.
          type: string
        transcript:
          description: >-
            If natural language speech audio was provided as input, this field
            will contain the transcript for the audio.
          type: string
        triggerEvent:
          description: >-
            If an event was provided as input, this field will contain the name
            of the event.
          type: string
        dtmfDigits:
          description: >-
            If DTMF was provided as input, this field will contain the DTMF
            digits.
          type: string
        languageCode:
          description: The language code specified in the original request.
          type: string
        fulfillmentInfo:
          description: >-
            Always present. Information about the fulfillment that triggered
            this webhook call.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3WebhookRequestFulfillmentInfo
        intentInfo:
          description: Information about the last matched intent.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3WebhookRequestIntentInfo
        pageInfo:
          description: Information about page status.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3PageInfo'
        sessionInfo:
          description: Information about session status.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3SessionInfo'
        messages:
          description: >-
            The list of rich message responses to present to the user. Webhook
            can choose to append or replace this list in
            WebhookResponse.fulfillment_response;
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3ResponseMessage'
        payload:
          description: Custom data set in QueryParameters.payload.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        sentimentAnalysisResult:
          description: >-
            The sentiment analysis result of the current user request. The field
            is filled when sentiment analysis is configured to be enabled for
            the request.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3WebhookRequestSentimentAnalysisResult
        languageInfo:
          description: Information about the language of the request.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3LanguageInfo'
    GoogleCloudDialogflowCxV3WebhookRequestFulfillmentInfo:
      id: GoogleCloudDialogflowCxV3WebhookRequestFulfillmentInfo
      description: Represents fulfillment information communicated to the webhook.
      type: object
      properties:
        tag:
          description: >-
            Always present. The value of the Fulfillment.tag field will be
            populated in this field by Dialogflow when the associated webhook is
            called. The tag is typically used by the webhook service to identify
            which fulfillment is being called, but it could be used for other
            purposes.
          type: string
    GoogleCloudDialogflowCxV3WebhookRequestIntentInfo:
      id: GoogleCloudDialogflowCxV3WebhookRequestIntentInfo
      description: Represents intent information communicated to the webhook.
      type: object
      properties:
        lastMatchedIntent:
          description: >-
            Always present. The unique identifier of the last matched intent.
            Format: `projects//locations//agents//intents/`.
          type: string
        displayName:
          description: Always present. The display name of the last matched intent.
          type: string
        parameters:
          description: >-
            Parameters identified as a result of intent matching. This is a map
            of the name of the identified parameter to the value of the
            parameter identified from the user's utterance. All parameters
            defined in the matched intent that are identified will be surfaced
            here.
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3WebhookRequestIntentInfoIntentParameterValue
        confidence:
          description: >-
            The confidence of the matched intent. Values range from 0.0
            (completely uncertain) to 1.0 (completely certain).
          type: number
          format: float
    GoogleCloudDialogflowCxV3WebhookRequestIntentInfoIntentParameterValue:
      id: GoogleCloudDialogflowCxV3WebhookRequestIntentInfoIntentParameterValue
      description: Represents a value for an intent parameter.
      type: object
      properties:
        originalValue:
          description: Always present. Original text value extracted from user utterance.
          type: string
        resolvedValue:
          description: >-
            Always present. Structured value for the parameter extracted from
            user utterance.
          type: any
    GoogleCloudDialogflowCxV3PageInfo:
      id: GoogleCloudDialogflowCxV3PageInfo
      description: Represents page information communicated to and from the webhook.
      type: object
      properties:
        currentPage:
          description: >-
            Always present for WebhookRequest. Ignored for WebhookResponse. The
            unique identifier of the current page. Format:
            `projects//locations//agents//flows//pages/`.
          type: string
        displayName:
          description: >-
            Always present for WebhookRequest. Ignored for WebhookResponse. The
            display name of the current page.
          type: string
        formInfo:
          description: >-
            Optional for both WebhookRequest and WebhookResponse. Information
            about the form.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3PageInfoFormInfo'
    GoogleCloudDialogflowCxV3PageInfoFormInfo:
      id: GoogleCloudDialogflowCxV3PageInfoFormInfo
      description: Represents form information.
      type: object
      properties:
        parameterInfo:
          description: >-
            Optional for both WebhookRequest and WebhookResponse. The parameters
            contained in the form. Note that the webhook cannot add or remove
            any form parameter.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3PageInfoFormInfoParameterInfo
    GoogleCloudDialogflowCxV3PageInfoFormInfoParameterInfo:
      id: GoogleCloudDialogflowCxV3PageInfoFormInfoParameterInfo
      description: Represents parameter information.
      type: object
      properties:
        displayName:
          description: >-
            Always present for WebhookRequest. Required for WebhookResponse. The
            human-readable name of the parameter, unique within the form. This
            field cannot be modified by the webhook.
          type: string
        required:
          description: >-
            Optional for both WebhookRequest and WebhookResponse. Indicates
            whether the parameter is required. Optional parameters will not
            trigger prompts; however, they are filled if the user specifies
            them. Required parameters must be filled before form filling
            concludes.
          type: boolean
        state:
          description: >-
            Always present for WebhookRequest. Required for WebhookResponse. The
            state of the parameter. This field can be set to INVALID by the
            webhook to invalidate the parameter; other values set by the webhook
            will be ignored.
          type: string
          enumDescriptions:
            - Not specified. This value should be never used.
            - Indicates that the parameter does not have a value.
            - >-
              Indicates that the parameter value is invalid. This field can be
              used by the webhook to invalidate the parameter and ask the server
              to collect it from the user again.
            - Indicates that the parameter has a value.
          enum:
            - PARAMETER_STATE_UNSPECIFIED
            - EMPTY
            - INVALID
            - FILLED
        value:
          description: >-
            Optional for both WebhookRequest and WebhookResponse. The value of
            the parameter. This field can be set by the webhook to change the
            parameter value.
          type: any
        justCollected:
          description: >-
            Optional for WebhookRequest. Ignored for WebhookResponse. Indicates
            if the parameter value was just collected on the last conversation
            turn.
          type: boolean
    GoogleCloudDialogflowCxV3SessionInfo:
      id: GoogleCloudDialogflowCxV3SessionInfo
      description: Represents session information communicated to and from the webhook.
      type: object
      properties:
        session:
          description: >-
            Always present for WebhookRequest. Ignored for WebhookResponse. The
            unique identifier of the session. This field can be used by the
            webhook to identify a session. Format:
            `projects//locations//agents//sessions/` or
            `projects//locations//agents//environments//sessions/` if
            environment is specified.
          type: string
        parameters:
          description: >-
            Optional for WebhookRequest. Optional for WebhookResponse. All
            parameters collected from forms and intents during the session.
            Parameters can be created, updated, or removed by the webhook. To
            remove a parameter from the session, the webhook should explicitly
            set the parameter value to null in WebhookResponse. The map is keyed
            by parameters' display names.
          type: object
          additionalProperties:
            type: any
    GoogleCloudDialogflowCxV3WebhookRequestSentimentAnalysisResult:
      id: GoogleCloudDialogflowCxV3WebhookRequestSentimentAnalysisResult
      description: Represents the result of sentiment analysis.
      type: object
      properties:
        score:
          description: >-
            Sentiment score between -1.0 (negative sentiment) and 1.0 (positive
            sentiment).
          type: number
          format: float
        magnitude:
          description: >-
            A non-negative number in the [0, +inf) range, which represents the
            absolute magnitude of sentiment, regardless of score (positive or
            negative).
          type: number
          format: float
    GoogleCloudDialogflowCxV3LanguageInfo:
      id: GoogleCloudDialogflowCxV3LanguageInfo
      description: Represents the language information of the request.
      type: object
      properties:
        inputLanguageCode:
          description: The language code specified in the original request.
          type: string
        resolvedLanguageCode:
          description: >-
            The language code detected for this request based on the user
            conversation.
          type: string
        confidenceScore:
          description: The confidence score of the detected language between 0 and 1.
          type: number
          format: float
    GoogleCloudDialogflowCxV3WebhookResponse:
      id: GoogleCloudDialogflowCxV3WebhookResponse
      description: The response message for a webhook call.
      type: object
      properties:
        fulfillmentResponse:
          description: >-
            The fulfillment response to send to the user. This field can be
            omitted by the webhook if it does not intend to send any response to
            the user.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3WebhookResponseFulfillmentResponse
        pageInfo:
          description: >-
            Information about page status. This field can be omitted by the
            webhook if it does not intend to modify page status.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3PageInfo'
        sessionInfo:
          description: >-
            Information about session status. This field can be omitted by the
            webhook if it does not intend to modify session status.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3SessionInfo'
        payload:
          description: Value to append directly to QueryResult.webhook_payloads.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        targetPage:
          description: >-
            The target page to transition to. Format:
            `projects//locations//agents//flows//pages/`.
          type: string
        targetFlow:
          description: >-
            The target flow to transition to. Format:
            `projects//locations//agents//flows/`.
          type: string
    GoogleCloudDialogflowCxV3WebhookResponseFulfillmentResponse:
      id: GoogleCloudDialogflowCxV3WebhookResponseFulfillmentResponse
      description: Represents a fulfillment response to the user.
      type: object
      properties:
        messages:
          description: The list of rich message responses to present to the user.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3ResponseMessage'
        mergeBehavior:
          description: Merge behavior for `messages`.
          type: string
          enumDescriptions:
            - Not specified. `APPEND` will be used.
            - >-
              `messages` will be appended to the list of messages waiting to be
              sent to the user.
            - >-
              `messages` will replace the list of messages waiting to be sent to
              the user.
          enum:
            - MERGE_BEHAVIOR_UNSPECIFIED
            - APPEND
            - REPLACE
    GoogleCloudDialogflowCxV3BatchRunTestCasesMetadata:
      id: GoogleCloudDialogflowCxV3BatchRunTestCasesMetadata
      description: >-
        Metadata returned for the TestCases.BatchRunTestCases long running
        operation.
      type: object
      properties:
        errors:
          description: The test errors.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3TestError'
    GoogleCloudDialogflowCxV3TestError:
      id: GoogleCloudDialogflowCxV3TestError
      description: Error info for running a test.
      type: object
      properties:
        testCase:
          description: The test case resource name.
          type: string
        status:
          description: The status associated with the test.
          $ref: '#/components/schemas/GoogleRpcStatus'
        testTime:
          description: The timestamp when the test was completed.
          type: string
          format: google-datetime
    GoogleCloudDialogflowCxV3BatchRunTestCasesResponse:
      id: GoogleCloudDialogflowCxV3BatchRunTestCasesResponse
      description: The response message for TestCases.BatchRunTestCases.
      type: object
      properties:
        results:
          description: >-
            The test case results. The detailed conversation turns are empty in
            this response.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3TestCaseResult'
    GoogleCloudDialogflowCxV3RunTestCaseMetadata:
      id: GoogleCloudDialogflowCxV3RunTestCaseMetadata
      description: >-
        Metadata returned for the TestCases.RunTestCase long running operation.
        This message currently has no fields.
      type: object
      properties: {}
    GoogleCloudDialogflowCxV3RunTestCaseResponse:
      id: GoogleCloudDialogflowCxV3RunTestCaseResponse
      description: The response message for TestCases.RunTestCase.
      type: object
      properties:
        result:
          description: The result.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3TestCaseResult'
    GoogleCloudDialogflowCxV3ExportTestCasesMetadata:
      id: GoogleCloudDialogflowCxV3ExportTestCasesMetadata
      description: >-
        Metadata returned for the TestCases.ExportTestCases long running
        operation. This message currently has no fields.
      type: object
      properties: {}
    GoogleCloudDialogflowCxV3ExportTestCasesResponse:
      id: GoogleCloudDialogflowCxV3ExportTestCasesResponse
      description: The response message for TestCases.ExportTestCases.
      type: object
      properties:
        gcsUri:
          description: >-
            The URI to a file containing the exported test cases. This field is
            populated only if `gcs_uri` is specified in ExportTestCasesRequest.
          type: string
        content:
          description: Uncompressed raw byte content for test cases.
          type: string
          format: byte
    GoogleCloudDialogflowCxV3ImportTestCasesMetadata:
      id: GoogleCloudDialogflowCxV3ImportTestCasesMetadata
      description: >-
        Metadata returned for the TestCases.ImportTestCases long running
        operation.
      type: object
      properties:
        errors:
          description: Errors for failed test cases.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3TestCaseError'
    GoogleCloudDialogflowCxV3TestCaseError:
      id: GoogleCloudDialogflowCxV3TestCaseError
      description: Error info for importing a test.
      type: object
      properties:
        testCase:
          description: The test case.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3TestCase'
        status:
          description: The status associated with the test case.
          $ref: '#/components/schemas/GoogleRpcStatus'
    GoogleCloudDialogflowCxV3ImportTestCasesResponse:
      id: GoogleCloudDialogflowCxV3ImportTestCasesResponse
      description: The response message for TestCases.ImportTestCases.
      type: object
      properties:
        names:
          description: >-
            The unique identifiers of the new test cases. Format:
            `projects//locations//agents//testCases/`.
          type: array
          items:
            type: string
    GoogleCloudDialogflowCxV3RunContinuousTestMetadata:
      id: GoogleCloudDialogflowCxV3RunContinuousTestMetadata
      description: >-
        Metadata returned for the Environments.RunContinuousTest long running
        operation.
      type: object
      properties:
        errors:
          description: The test errors.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3TestError'
    GoogleCloudDialogflowCxV3RunContinuousTestResponse:
      id: GoogleCloudDialogflowCxV3RunContinuousTestResponse
      description: The response message for Environments.RunContinuousTest.
      type: object
      properties:
        continuousTestResult:
          description: The result for a continuous test run.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3ContinuousTestResult'
    GoogleCloudDialogflowCxV3DeployFlowMetadata:
      id: GoogleCloudDialogflowCxV3DeployFlowMetadata
      description: >-
        Metadata returned for the Environments.DeployFlow long running
        operation.
      type: object
      properties:
        testErrors:
          description: Errors of running deployment tests.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3TestError'
    GoogleCloudDialogflowCxV3DeployFlowResponse:
      id: GoogleCloudDialogflowCxV3DeployFlowResponse
      description: The response message for Environments.DeployFlow.
      type: object
      properties:
        environment:
          description: The updated environment where the flow is deployed.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Environment'
        deployment:
          description: >-
            The name of the flow version Deployment. Format:
            `projects//locations//agents//environments//deployments/`.
          type: string
    GoogleCloudDialogflowCxV3ConversationSignals:
      id: GoogleCloudDialogflowCxV3ConversationSignals
      description: >-
        This message is used to hold all the Conversation Signals data, which
        will be converted to JSON and exported to BigQuery.
      type: object
      properties:
        turnSignals:
          description: Required. Turn signals for the current turn.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3TurnSignals'
    GoogleCloudDialogflowCxV3TurnSignals:
      id: GoogleCloudDialogflowCxV3TurnSignals
      description: >-
        Collection of all signals that were extracted for a single turn of the
        conversation.
      type: object
      properties:
        noMatch:
          description: Whether NLU predicted NO_MATCH.
          type: boolean
        noUserInput:
          description: Whether user provided no input.
          type: boolean
        dtmfUsed:
          description: Whether user was using DTMF input.
          type: boolean
        userEscalated:
          description: Whether user was specifically asking for a live agent.
          type: boolean
        agentEscalated:
          description: Whether agent responded with LiveAgentHandoff fulfillment.
          type: boolean
        reachedEndPage:
          description: Whether turn resulted in End Session page.
          type: boolean
        webhookStatuses:
          description: Human-readable statuses of the webhooks triggered during this turn.
          type: array
          items:
            type: string
        failureReasons:
          description: Failure reasons of the turn.
          type: array
          items:
            type: string
            enumDescriptions:
              - Failure reason is not assigned.
              - Whether NLU failed to recognize user intent.
              - Whether webhook failed during the turn.
            enum:
              - FAILURE_REASON_UNSPECIFIED
              - FAILED_INTENT
              - FAILED_WEBHOOK
        sentimentScore:
          description: >-
            Sentiment score of the user utterance if
            [sentiment](https://cloud.google.com/dialogflow/cx/docs/concept/sentiment)
            was enabled.
          type: number
          format: float
        sentimentMagnitude:
          description: >-
            Sentiment magnitude of the user utterance if
            [sentiment](https://cloud.google.com/dialogflow/cx/docs/concept/sentiment)
            was enabled.
          type: number
          format: float
    GoogleCloudDialogflowCxV3beta1CreateVersionOperationMetadata:
      id: GoogleCloudDialogflowCxV3beta1CreateVersionOperationMetadata
      description: >-
        Metadata associated with the long running operation for
        Versions.CreateVersion.
      type: object
      properties:
        version:
          description: >-
            Name of the created version. Format:
            `projects//locations//agents//flows//versions/`.
          type: string
    GoogleCloudDialogflowCxV3beta1ExportAgentResponse:
      id: GoogleCloudDialogflowCxV3beta1ExportAgentResponse
      description: The response message for Agents.ExportAgent.
      type: object
      properties:
        agentUri:
          description: >-
            The URI to a file containing the exported agent. This field is
            populated if `agent_uri` is specified in ExportAgentRequest.
          type: string
        agentContent:
          description: >-
            Uncompressed raw byte content for agent. This field is populated if
            none of `agent_uri` and `git_destination` are specified in
            ExportAgentRequest.
          type: string
          format: byte
        commitSha:
          description: >-
            Commit SHA of the git push. This field is populated if
            `git_destination` is specified in ExportAgentRequest.
          type: string
    GoogleCloudDialogflowCxV3beta1ExportFlowResponse:
      id: GoogleCloudDialogflowCxV3beta1ExportFlowResponse
      description: The response message for Flows.ExportFlow.
      type: object
      properties:
        flowUri:
          description: >-
            The URI to a file containing the exported flow. This field is
            populated only if `flow_uri` is specified in ExportFlowRequest.
          type: string
        flowContent:
          description: Uncompressed raw byte content for flow.
          type: string
          format: byte
    GoogleCloudDialogflowCxV3beta1ExportIntentsMetadata:
      id: GoogleCloudDialogflowCxV3beta1ExportIntentsMetadata
      description: Metadata returned for the Intents.ExportIntents long running operation.
      type: object
      properties: {}
    GoogleCloudDialogflowCxV3beta1ExportIntentsResponse:
      id: GoogleCloudDialogflowCxV3beta1ExportIntentsResponse
      description: The response message for Intents.ExportIntents.
      type: object
      properties:
        intentsUri:
          description: >-
            The URI to a file containing the exported intents. This field is
            populated only if `intents_uri` is specified in
            ExportIntentsRequest.
          type: string
        intentsContent:
          description: >-
            Uncompressed byte content for intents. This field is populated only
            if `intents_content_inline` is set to true in ExportIntentsRequest.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1InlineDestination'
    GoogleCloudDialogflowCxV3beta1InlineDestination:
      id: GoogleCloudDialogflowCxV3beta1InlineDestination
      description: >-
        Inline destination for a Dialogflow operation that writes or exports
        objects (e.g. intents) outside of Dialogflow.
      type: object
      properties:
        content:
          description: >-
            Output only. The uncompressed byte content for the objects. Only
            populated in responses.
          readOnly: true
          type: string
          format: byte
    GoogleCloudDialogflowCxV3beta1ImportFlowResponse:
      id: GoogleCloudDialogflowCxV3beta1ImportFlowResponse
      description: The response message for Flows.ImportFlow.
      type: object
      properties:
        flow:
          description: >-
            The unique identifier of the new flow. Format:
            `projects//locations//agents//flows/`.
          type: string
    GoogleCloudDialogflowCxV3beta1ImportEntityTypesMetadata:
      id: GoogleCloudDialogflowCxV3beta1ImportEntityTypesMetadata
      description: >-
        Metadata returned for the EntityTypes.ImportEntityTypes long running
        operation.
      type: object
      properties: {}
    GoogleCloudDialogflowCxV3beta1ImportEntityTypesResponse:
      id: GoogleCloudDialogflowCxV3beta1ImportEntityTypesResponse
      description: The response message for EntityTypes.ImportEntityTypes.
      type: object
      properties:
        entityTypes:
          description: >-
            The unique identifier of the imported entity types. Format:
            `projects//locations//agents//entity_types/`.
          type: array
          items:
            type: string
        conflictingResources:
          description: >-
            Info which resources have conflicts when REPORT_CONFLICT
            merge_option is set in ImportEntityTypesRequest.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3beta1ImportEntityTypesResponseConflictingResources
    GoogleCloudDialogflowCxV3beta1ImportEntityTypesResponseConflictingResources:
      id: >-
        GoogleCloudDialogflowCxV3beta1ImportEntityTypesResponseConflictingResources
      description: >-
        Conflicting resources detected during the import process. Only filled
        when REPORT_CONFLICT is set in the request and there are conflicts in
        the display names.
      type: object
      properties:
        entityTypeDisplayNames:
          description: Display names of conflicting entity types.
          type: array
          items:
            type: string
        entityDisplayNames:
          description: Display names of conflicting entities.
          type: array
          items:
            type: string
    GoogleCloudDialogflowCxV3beta1ExportEntityTypesMetadata:
      id: GoogleCloudDialogflowCxV3beta1ExportEntityTypesMetadata
      description: >-
        Metadata returned for the EntityTypes.ExportEntityTypes long running
        operation.
      type: object
      properties: {}
    GoogleCloudDialogflowCxV3beta1ExportEntityTypesResponse:
      id: GoogleCloudDialogflowCxV3beta1ExportEntityTypesResponse
      description: The response message for EntityTypes.ExportEntityTypes.
      type: object
      properties:
        entityTypesUri:
          description: >-
            The URI to a file containing the exported entity types. This field
            is populated only if `entity_types_uri` is specified in
            ExportEntityTypesRequest.
          type: string
        entityTypesContent:
          description: >-
            Uncompressed byte content for entity types. This field is populated
            only if `entity_types_content_inline` is set to true in
            ExportEntityTypesRequest.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1InlineDestination'
    GoogleCloudDialogflowCxV3beta1ImportIntentsMetadata:
      id: GoogleCloudDialogflowCxV3beta1ImportIntentsMetadata
      description: Metadata returned for the Intents.ImportIntents long running operation.
      type: object
      properties: {}
    GoogleCloudDialogflowCxV3beta1ImportIntentsResponse:
      id: GoogleCloudDialogflowCxV3beta1ImportIntentsResponse
      description: The response message for Intents.ImportIntents.
      type: object
      properties:
        intents:
          description: >-
            The unique identifier of the imported intents. Format:
            `projects//locations//agents//intents/`.
          type: array
          items:
            type: string
        conflictingResources:
          description: >-
            Info which resources have conflicts when REPORT_CONFLICT
            merge_option is set in ImportIntentsRequest.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3beta1ImportIntentsResponseConflictingResources
    GoogleCloudDialogflowCxV3beta1ImportIntentsResponseConflictingResources:
      id: GoogleCloudDialogflowCxV3beta1ImportIntentsResponseConflictingResources
      description: >-
        Conflicting resources detected during the import process. Only filled
        when REPORT_CONFLICT is set in the request and there are conflicts in
        the display names.
      type: object
      properties:
        intentDisplayNames:
          description: Display names of conflicting intents.
          type: array
          items:
            type: string
        entityDisplayNames:
          description: Display names of conflicting entities.
          type: array
          items:
            type: string
    GoogleCloudDialogflowCxV3beta1WebhookRequest:
      id: GoogleCloudDialogflowCxV3beta1WebhookRequest
      description: >-
        The request message for a webhook call. The request is sent as a JSON
        object and the field names will be presented in camel cases. You may see
        undocumented fields in an actual request. These fields are used
        internally by Dialogflow and should be ignored.
      type: object
      properties:
        detectIntentResponseId:
          description: >-
            Always present. The unique identifier of the DetectIntentResponse
            that will be returned to the API caller.
          type: string
        text:
          description: >-
            If natural language text was provided as input, this field will
            contain a copy of the text.
          type: string
        triggerIntent:
          description: >-
            If an intent was provided as input, this field will contain a copy
            of the intent identifier. Format:
            `projects//locations//agents//intents/`.
          type: string
        transcript:
          description: >-
            If natural language speech audio was provided as input, this field
            will contain the transcript for the audio.
          type: string
        triggerEvent:
          description: >-
            If an event was provided as input, this field will contain the name
            of the event.
          type: string
        dtmfDigits:
          description: >-
            If DTMF was provided as input, this field will contain the DTMF
            digits.
          type: string
        languageCode:
          description: The language code specified in the original request.
          type: string
        fulfillmentInfo:
          description: >-
            Always present. Information about the fulfillment that triggered
            this webhook call.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo
        intentInfo:
          description: Information about the last matched intent.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo
        pageInfo:
          description: Information about page status.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1PageInfo'
        sessionInfo:
          description: Information about session status.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1SessionInfo'
        messages:
          description: >-
            The list of rich message responses to present to the user. Webhook
            can choose to append or replace this list in
            WebhookResponse.fulfillment_response;
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessage'
        payload:
          description: Custom data set in QueryParameters.payload.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        sentimentAnalysisResult:
          description: >-
            The sentiment analysis result of the current user request. The field
            is filled when sentiment analysis is configured to be enabled for
            the request.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3beta1WebhookRequestSentimentAnalysisResult
        languageInfo:
          description: Information about the language of the request.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1LanguageInfo'
    GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo:
      id: GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo
      description: Represents fulfillment information communicated to the webhook.
      type: object
      properties:
        tag:
          description: >-
            Always present. The value of the Fulfillment.tag field will be
            populated in this field by Dialogflow when the associated webhook is
            called. The tag is typically used by the webhook service to identify
            which fulfillment is being called, but it could be used for other
            purposes.
          type: string
    GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo:
      id: GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo
      description: Represents intent information communicated to the webhook.
      type: object
      properties:
        lastMatchedIntent:
          description: >-
            Always present. The unique identifier of the last matched intent.
            Format: `projects//locations//agents//intents/`.
          type: string
        displayName:
          description: Always present. The display name of the last matched intent.
          type: string
        parameters:
          description: >-
            Parameters identified as a result of intent matching. This is a map
            of the name of the identified parameter to the value of the
            parameter identified from the user's utterance. All parameters
            defined in the matched intent that are identified will be surfaced
            here.
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfoIntentParameterValue
        confidence:
          description: >-
            The confidence of the matched intent. Values range from 0.0
            (completely uncertain) to 1.0 (completely certain).
          type: number
          format: float
    GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfoIntentParameterValue:
      id: >-
        GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfoIntentParameterValue
      description: Represents a value for an intent parameter.
      type: object
      properties:
        originalValue:
          description: Always present. Original text value extracted from user utterance.
          type: string
        resolvedValue:
          description: >-
            Always present. Structured value for the parameter extracted from
            user utterance.
          type: any
    GoogleCloudDialogflowCxV3beta1PageInfo:
      id: GoogleCloudDialogflowCxV3beta1PageInfo
      description: Represents page information communicated to and from the webhook.
      type: object
      properties:
        currentPage:
          description: >-
            Always present for WebhookRequest. Ignored for WebhookResponse. The
            unique identifier of the current page. Format:
            `projects//locations//agents//flows//pages/`.
          type: string
        displayName:
          description: >-
            Always present for WebhookRequest. Ignored for WebhookResponse. The
            display name of the current page.
          type: string
        formInfo:
          description: >-
            Optional for both WebhookRequest and WebhookResponse. Information
            about the form.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1PageInfoFormInfo'
    GoogleCloudDialogflowCxV3beta1PageInfoFormInfo:
      id: GoogleCloudDialogflowCxV3beta1PageInfoFormInfo
      description: Represents form information.
      type: object
      properties:
        parameterInfo:
          description: >-
            Optional for both WebhookRequest and WebhookResponse. The parameters
            contained in the form. Note that the webhook cannot add or remove
            any form parameter.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo
    GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo:
      id: GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo
      description: Represents parameter information.
      type: object
      properties:
        displayName:
          description: >-
            Always present for WebhookRequest. Required for WebhookResponse. The
            human-readable name of the parameter, unique within the form. This
            field cannot be modified by the webhook.
          type: string
        required:
          description: >-
            Optional for both WebhookRequest and WebhookResponse. Indicates
            whether the parameter is required. Optional parameters will not
            trigger prompts; however, they are filled if the user specifies
            them. Required parameters must be filled before form filling
            concludes.
          type: boolean
        state:
          description: >-
            Always present for WebhookRequest. Required for WebhookResponse. The
            state of the parameter. This field can be set to INVALID by the
            webhook to invalidate the parameter; other values set by the webhook
            will be ignored.
          type: string
          enumDescriptions:
            - Not specified. This value should be never used.
            - Indicates that the parameter does not have a value.
            - >-
              Indicates that the parameter value is invalid. This field can be
              used by the webhook to invalidate the parameter and ask the server
              to collect it from the user again.
            - Indicates that the parameter has a value.
          enum:
            - PARAMETER_STATE_UNSPECIFIED
            - EMPTY
            - INVALID
            - FILLED
        value:
          description: >-
            Optional for both WebhookRequest and WebhookResponse. The value of
            the parameter. This field can be set by the webhook to change the
            parameter value.
          type: any
        justCollected:
          description: >-
            Optional for WebhookRequest. Ignored for WebhookResponse. Indicates
            if the parameter value was just collected on the last conversation
            turn.
          type: boolean
    GoogleCloudDialogflowCxV3beta1SessionInfo:
      id: GoogleCloudDialogflowCxV3beta1SessionInfo
      description: Represents session information communicated to and from the webhook.
      type: object
      properties:
        session:
          description: >-
            Always present for WebhookRequest. Ignored for WebhookResponse. The
            unique identifier of the session. This field can be used by the
            webhook to identify a session. Format:
            `projects//locations//agents//sessions/` or
            `projects//locations//agents//environments//sessions/` if
            environment is specified.
          type: string
        parameters:
          description: >-
            Optional for WebhookRequest. Optional for WebhookResponse. All
            parameters collected from forms and intents during the session.
            Parameters can be created, updated, or removed by the webhook. To
            remove a parameter from the session, the webhook should explicitly
            set the parameter value to null in WebhookResponse. The map is keyed
            by parameters' display names.
          type: object
          additionalProperties:
            type: any
    GoogleCloudDialogflowCxV3beta1ResponseMessage:
      id: GoogleCloudDialogflowCxV3beta1ResponseMessage
      description: >-
        Represents a response message that can be returned by a conversational
        agent. Response messages are also used for output audio synthesis. The
        approach is as follows: * If at least one OutputAudioText response is
        present, then all OutputAudioText responses are linearly concatenated,
        and the result is used for output audio synthesis. * If the
        OutputAudioText responses are a mixture of text and SSML, then the
        concatenated result is treated as SSML; otherwise, the result is treated
        as either text or SSML as appropriate. The agent designer should ideally
        use either text or SSML consistently throughout the bot design. *
        Otherwise, all Text responses are linearly concatenated, and the result
        is used for output audio synthesis. This approach allows for more
        sophisticated user experience scenarios, where the text displayed to the
        user may differ from what is heard.
      type: object
      properties:
        text:
          description: Returns a text response.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessageText
        payload:
          description: Returns a response containing a custom, platform-specific payload.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        conversationSuccess:
          description: Indicates that the conversation succeeded.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess
        outputAudioText:
          description: >-
            A text or ssml response that is preferentially used for TTS output
            audio synthesis, as described in the comment on the ResponseMessage
            message.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText
        liveAgentHandoff:
          description: Hands off conversation to a human agent.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessageLiveAgentHandoff
        endInteraction:
          description: >-
            Output only. A signal that indicates the interaction with the
            Dialogflow agent has ended. This message is generated by Dialogflow
            only when the conversation reaches `END_SESSION` page. It is not
            supposed to be defined by the user. It's guaranteed that there is at
            most one such message in each response.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessageEndInteraction
        playAudio:
          description: >-
            Signal that the client should play an audio clip hosted at a
            client-specific URI. Dialogflow uses this to construct mixed_audio.
            However, Dialogflow itself does not try to read or process the URI
            in any way.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessagePlayAudio
        mixedAudio:
          description: >-
            Output only. An audio response message composed of both the
            synthesized Dialogflow agent responses and responses defined via
            play_audio. This message is generated by Dialogflow only and not
            supposed to be defined by the user.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudio
        telephonyTransferCall:
          description: >-
            A signal that the client should transfer the phone call connected to
            this agent to a third-party endpoint.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessageTelephonyTransferCall
        knowledgeInfoCard:
          description: >-
            Represents info card for knowledge answers, to be better rendered in
            Dialogflow Messenger.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessageKnowledgeInfoCard
        toolCall:
          description: >-
            Returns the definition of a tool call that should be executed by the
            client.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1ToolCall'
        channel:
          description: >-
            The channel which the response is associated with. Clients can
            specify the channel via QueryParameters.channel, and only associated
            channel response will be returned.
          type: string
    GoogleCloudDialogflowCxV3beta1ResponseMessageText:
      id: GoogleCloudDialogflowCxV3beta1ResponseMessageText
      description: The text response message.
      type: object
      properties:
        text:
          description: >-
            Required. A collection of text response variants. If multiple
            variants are defined, only one text response variant is returned at
            runtime.
          type: array
          items:
            type: string
        allowPlaybackInterruption:
          description: >-
            Output only. Whether the playback of this message can be interrupted
            by the end user's speech and the client can then starts the next
            Dialogflow request.
          readOnly: true
          type: boolean
    GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess:
      id: GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess
      description: >-
        Indicates that the conversation succeeded, i.e., the bot handled the
        issue that the customer talked to it about. Dialogflow only uses this to
        determine which conversations should be counted as successful and
        doesn't process the metadata in this message in any way. Note that
        Dialogflow also considers conversations that get to the conversation end
        page as successful even if they don't return ConversationSuccess. You
        may set this, for example: * In the entry_fulfillment of a Page if
        entering the page indicates that the conversation succeeded. * In a
        webhook response when you determine that you handled the customer issue.
      type: object
      properties:
        metadata:
          description: Custom metadata. Dialogflow doesn't impose any structure on this.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
    GoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText:
      id: GoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText
      description: >-
        A text or ssml response that is preferentially used for TTS output audio
        synthesis, as described in the comment on the ResponseMessage message.
      type: object
      properties:
        text:
          description: The raw text to be synthesized.
          type: string
        ssml:
          description: >-
            The SSML text to be synthesized. For more information, see
            [SSML](/speech/text-to-speech/docs/ssml).
          type: string
        allowPlaybackInterruption:
          description: >-
            Output only. Whether the playback of this message can be interrupted
            by the end user's speech and the client can then starts the next
            Dialogflow request.
          readOnly: true
          type: boolean
    GoogleCloudDialogflowCxV3beta1ResponseMessageLiveAgentHandoff:
      id: GoogleCloudDialogflowCxV3beta1ResponseMessageLiveAgentHandoff
      description: >-
        Indicates that the conversation should be handed off to a live agent.
        Dialogflow only uses this to determine which conversations were handed
        off to a human agent for measurement purposes. What else to do with this
        signal is up to you and your handoff procedures. You may set this, for
        example: * In the entry_fulfillment of a Page if entering the page
        indicates something went extremely wrong in the conversation. * In a
        webhook response when you determine that the customer issue can only be
        handled by a human.
      type: object
      properties:
        metadata:
          description: >-
            Custom metadata for your handoff procedure. Dialogflow doesn't
            impose any structure on this.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
    GoogleCloudDialogflowCxV3beta1ResponseMessageEndInteraction:
      id: GoogleCloudDialogflowCxV3beta1ResponseMessageEndInteraction
      description: >-
        Indicates that interaction with the Dialogflow agent has ended. This
        message is generated by Dialogflow only and not supposed to be defined
        by the user.
      type: object
      properties: {}
    GoogleCloudDialogflowCxV3beta1ResponseMessagePlayAudio:
      id: GoogleCloudDialogflowCxV3beta1ResponseMessagePlayAudio
      description: >-
        Specifies an audio clip to be played by the client as part of the
        response.
      type: object
      properties:
        audioUri:
          description: >-
            Required. URI of the audio clip. Dialogflow does not impose any
            validation on this value. It is specific to the client that reads
            it.
          type: string
        allowPlaybackInterruption:
          description: >-
            Output only. Whether the playback of this message can be interrupted
            by the end user's speech and the client can then starts the next
            Dialogflow request.
          readOnly: true
          type: boolean
    GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudio:
      id: GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudio
      description: >-
        Represents an audio message that is composed of both segments
        synthesized from the Dialogflow agent prompts and ones hosted externally
        at the specified URIs. The external URIs are specified via play_audio.
        This message is generated by Dialogflow only and not supposed to be
        defined by the user.
      type: object
      properties:
        segments:
          description: Segments this audio response is composed of.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudioSegment
    GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudioSegment:
      id: GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudioSegment
      description: Represents one segment of audio.
      type: object
      properties:
        audio:
          description: >-
            Raw audio synthesized from the Dialogflow agent's response using the
            output config specified in the request.
          type: string
          format: byte
        uri:
          description: >-
            Client-specific URI that points to an audio clip accessible to the
            client. Dialogflow does not impose any validation on it.
          type: string
        allowPlaybackInterruption:
          description: >-
            Output only. Whether the playback of this segment can be interrupted
            by the end user's speech and the client should then start the next
            Dialogflow request.
          readOnly: true
          type: boolean
    GoogleCloudDialogflowCxV3beta1ResponseMessageTelephonyTransferCall:
      id: GoogleCloudDialogflowCxV3beta1ResponseMessageTelephonyTransferCall
      description: >-
        Represents the signal that telles the client to transfer the phone call
        connected to the agent to a third-party endpoint.
      type: object
      properties:
        phoneNumber:
          description: >-
            Transfer the call to a phone number in [E.164
            format](https://en.wikipedia.org/wiki/E.164).
          type: string
    GoogleCloudDialogflowCxV3beta1ResponseMessageKnowledgeInfoCard:
      id: GoogleCloudDialogflowCxV3beta1ResponseMessageKnowledgeInfoCard
      description: >-
        Represents info card response. If the response contains generative
        knowledge prediction, Dialogflow will return a payload with Infobot
        Messenger compatible info card. Otherwise, the info card response is
        skipped.
      type: object
      properties: {}
    GoogleCloudDialogflowCxV3beta1ToolCall:
      id: GoogleCloudDialogflowCxV3beta1ToolCall
      description: Represents a call of a specific tool's action with the specified inputs.
      type: object
      properties:
        tool:
          description: >-
            Required. The tool associated with this call. Format:
            `projects//locations//agents//tools/`.
          type: string
        action:
          description: Required. The name of the tool's action associated with this call.
          type: string
        inputParameters:
          description: Optional. The action's input parameters.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
    GoogleCloudDialogflowCxV3beta1WebhookRequestSentimentAnalysisResult:
      id: GoogleCloudDialogflowCxV3beta1WebhookRequestSentimentAnalysisResult
      description: Represents the result of sentiment analysis.
      type: object
      properties:
        score:
          description: >-
            Sentiment score between -1.0 (negative sentiment) and 1.0 (positive
            sentiment).
          type: number
          format: float
        magnitude:
          description: >-
            A non-negative number in the [0, +inf) range, which represents the
            absolute magnitude of sentiment, regardless of score (positive or
            negative).
          type: number
          format: float
    GoogleCloudDialogflowCxV3beta1LanguageInfo:
      id: GoogleCloudDialogflowCxV3beta1LanguageInfo
      description: Represents the language information of the request.
      type: object
      properties:
        inputLanguageCode:
          description: The language code specified in the original request.
          type: string
        resolvedLanguageCode:
          description: >-
            The language code detected for this request based on the user
            conversation.
          type: string
        confidenceScore:
          description: The confidence score of the detected language between 0 and 1.
          type: number
          format: float
    GoogleCloudDialogflowCxV3beta1WebhookResponse:
      id: GoogleCloudDialogflowCxV3beta1WebhookResponse
      description: The response message for a webhook call.
      type: object
      properties:
        fulfillmentResponse:
          description: >-
            The fulfillment response to send to the user. This field can be
            omitted by the webhook if it does not intend to send any response to
            the user.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse
        pageInfo:
          description: >-
            Information about page status. This field can be omitted by the
            webhook if it does not intend to modify page status.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1PageInfo'
        sessionInfo:
          description: >-
            Information about session status. This field can be omitted by the
            webhook if it does not intend to modify session status.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1SessionInfo'
        payload:
          description: Value to append directly to QueryResult.webhook_payloads.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        targetPage:
          description: >-
            The target page to transition to. Format:
            `projects//locations//agents//flows//pages/`.
          type: string
        targetFlow:
          description: >-
            The target flow to transition to. Format:
            `projects//locations//agents//flows/`.
          type: string
    GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse:
      id: GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse
      description: Represents a fulfillment response to the user.
      type: object
      properties:
        messages:
          description: The list of rich message responses to present to the user.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessage'
        mergeBehavior:
          description: Merge behavior for `messages`.
          type: string
          enumDescriptions:
            - Not specified. `APPEND` will be used.
            - >-
              `messages` will be appended to the list of messages waiting to be
              sent to the user.
            - >-
              `messages` will replace the list of messages waiting to be sent to
              the user.
          enum:
            - MERGE_BEHAVIOR_UNSPECIFIED
            - APPEND
            - REPLACE
    GoogleCloudDialogflowCxV3beta1BatchRunTestCasesMetadata:
      id: GoogleCloudDialogflowCxV3beta1BatchRunTestCasesMetadata
      description: >-
        Metadata returned for the TestCases.BatchRunTestCases long running
        operation.
      type: object
      properties:
        errors:
          description: The test errors.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1TestError'
    GoogleCloudDialogflowCxV3beta1TestError:
      id: GoogleCloudDialogflowCxV3beta1TestError
      description: Error info for running a test.
      type: object
      properties:
        testCase:
          description: The test case resource name.
          type: string
        status:
          description: The status associated with the test.
          $ref: '#/components/schemas/GoogleRpcStatus'
        testTime:
          description: The timestamp when the test was completed.
          type: string
          format: google-datetime
    GoogleCloudDialogflowCxV3beta1BatchRunTestCasesResponse:
      id: GoogleCloudDialogflowCxV3beta1BatchRunTestCasesResponse
      description: The response message for TestCases.BatchRunTestCases.
      type: object
      properties:
        results:
          description: >-
            The test case results. The detailed conversation turns are empty in
            this response.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1TestCaseResult'
    GoogleCloudDialogflowCxV3beta1TestCaseResult:
      id: GoogleCloudDialogflowCxV3beta1TestCaseResult
      description: Represents a result from running a test case in an agent environment.
      type: object
      properties:
        name:
          description: >-
            The resource name for the test case result. Format:
            `projects//locations//agents//testCases//results/`.
          type: string
        environment:
          description: >-
            Environment where the test was run. If not set, it indicates the
            draft environment.
          type: string
        conversationTurns:
          description: >-
            The conversation turns uttered during the test case replay in
            chronological order.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3beta1ConversationTurn
        testResult:
          description: Whether the test case passed in the agent environment.
          type: string
          enumDescriptions:
            - Not specified. Should never be used.
            - The test passed.
            - The test did not pass.
          enum:
            - TEST_RESULT_UNSPECIFIED
            - PASSED
            - FAILED
        testTime:
          description: The time that the test was run.
          type: string
          format: google-datetime
    GoogleCloudDialogflowCxV3beta1ConversationTurn:
      id: GoogleCloudDialogflowCxV3beta1ConversationTurn
      description: >-
        One interaction between a human and virtual agent. The human provides
        some input and the virtual agent provides a response.
      type: object
      properties:
        userInput:
          description: The user input.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput
        virtualAgentOutput:
          description: The virtual agent output.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3beta1ConversationTurnVirtualAgentOutput
    GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput:
      id: GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput
      description: The input from the human user.
      type: object
      properties:
        input:
          description: Supports text input, event input, dtmf input in the test case.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1QueryInput'
        injectedParameters:
          description: >-
            Parameters that need to be injected into the conversation during
            intent detection.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        isWebhookEnabled:
          description: >-
            If webhooks should be allowed to trigger in response to the user
            utterance. Often if parameters are injected, webhooks should not be
            enabled.
          type: boolean
        enableSentimentAnalysis:
          description: Whether sentiment analysis is enabled.
          type: boolean
    GoogleCloudDialogflowCxV3beta1QueryInput:
      id: GoogleCloudDialogflowCxV3beta1QueryInput
      description: >-
        Represents the query input. It can contain one of: 1. A conversational
        query in the form of text. 2. An intent query that specifies which
        intent to trigger. 3. Natural language speech audio to be processed. 4.
        An event to be triggered. 5. DTMF digits to invoke an intent and fill in
        parameter value. 6. The results of a tool executed by the client.
      type: object
      properties:
        text:
          description: The natural language text to be processed.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1TextInput'
        intent:
          description: The intent to be triggered.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1IntentInput'
        audio:
          description: The natural language speech audio to be processed.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1AudioInput'
        event:
          description: The event to be triggered.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1EventInput'
        dtmf:
          description: The DTMF event to be handled.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1DtmfInput'
        toolCallResult:
          description: The results of a tool executed by the client.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1ToolCallResult'
        languageCode:
          description: >-
            Required. The language of the input. See [Language
            Support](https://cloud.google.com/dialogflow/cx/docs/reference/language)
            for a list of the currently supported language codes. Note that
            queries in the same session do not necessarily need to specify the
            same language.
          type: string
    GoogleCloudDialogflowCxV3beta1TextInput:
      id: GoogleCloudDialogflowCxV3beta1TextInput
      description: Represents the natural language text to be processed.
      type: object
      properties:
        text:
          description: Required. The UTF-8 encoded natural language text to be processed.
          type: string
    GoogleCloudDialogflowCxV3beta1IntentInput:
      id: GoogleCloudDialogflowCxV3beta1IntentInput
      description: >-
        Represents the intent to trigger programmatically rather than as a
        result of natural language processing.
      type: object
      properties:
        intent:
          description: >-
            Required. The unique identifier of the intent. Format:
            `projects//locations//agents//intents/`.
          type: string
    GoogleCloudDialogflowCxV3beta1AudioInput:
      id: GoogleCloudDialogflowCxV3beta1AudioInput
      description: Represents the natural speech audio to be processed.
      type: object
      properties:
        config:
          description: >-
            Required. Instructs the speech recognizer how to process the speech
            audio.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1InputAudioConfig'
        audio:
          description: >-
            The natural language speech audio to be processed. A single request
            can contain up to 2 minutes of speech audio data. The transcribed
            text cannot contain more than 256 bytes. For non-streaming audio
            detect intent, both `config` and `audio` must be provided. For
            streaming audio detect intent, `config` must be provided in the
            first request and `audio` must be provided in all following
            requests.
          type: string
          format: byte
    GoogleCloudDialogflowCxV3beta1InputAudioConfig:
      id: GoogleCloudDialogflowCxV3beta1InputAudioConfig
      description: Instructs the speech recognizer on how to process the audio content.
      type: object
      properties:
        audioEncoding:
          description: Required. Audio encoding of the audio content to process.
          type: string
          enumDescriptions:
            - Not specified.
            - Uncompressed 16-bit signed little-endian samples (Linear PCM).
            - >-
              [`FLAC`](https://xiph.org/flac/documentation.html) (Free Lossless
              Audio Codec) is the recommended encoding because it is lossless
              (therefore recognition is not compromised) and requires only about
              half the bandwidth of `LINEAR16`. `FLAC` stream encoding supports
              16-bit and 24-bit samples, however, not all fields in `STREAMINFO`
              are supported.
            - >-
              8-bit samples that compand 14-bit audio samples using G.711
              PCMU/mu-law.
            - >-
              Adaptive Multi-Rate Narrowband codec. `sample_rate_hertz` must be
              8000.
            - >-
              Adaptive Multi-Rate Wideband codec. `sample_rate_hertz` must be
              16000.
            - >-
              Opus encoded audio frames in Ogg container
              ([OggOpus](https://wiki.xiph.org/OggOpus)). `sample_rate_hertz`
              must be 16000.
            - >-
              Although the use of lossy encodings is not recommended, if a very
              low bitrate encoding is required, `OGG_OPUS` is highly preferred
              over Speex encoding. The [Speex](https://speex.org/) encoding
              supported by Dialogflow API has a header byte in each block, as in
              MIME type `audio/x-speex-with-header-byte`. It is a variant of the
              RTP Speex encoding defined in [RFC
              5574](https://tools.ietf.org/html/rfc5574). The stream is a
              sequence of blocks, one block per RTP packet. Each block starts
              with a byte containing the length of the block, in bytes, followed
              by one or more frames of Speex data, padded to an integral number
              of bytes (octets) as specified in RFC 5574. In other words, each
              RTP header is replaced with a single byte containing the block
              length. Only Speex wideband is supported. `sample_rate_hertz` must
              be 16000.
          enum:
            - AUDIO_ENCODING_UNSPECIFIED
            - AUDIO_ENCODING_LINEAR_16
            - AUDIO_ENCODING_FLAC
            - AUDIO_ENCODING_MULAW
            - AUDIO_ENCODING_AMR
            - AUDIO_ENCODING_AMR_WB
            - AUDIO_ENCODING_OGG_OPUS
            - AUDIO_ENCODING_SPEEX_WITH_HEADER_BYTE
        sampleRateHertz:
          description: >-
            Sample rate (in Hertz) of the audio content sent in the query. Refer
            to [Cloud Speech API
            documentation](https://cloud.google.com/speech-to-text/docs/basics)
            for more details.
          type: integer
          format: int32
        enableWordInfo:
          description: >-
            Optional. If `true`, Dialogflow returns SpeechWordInfo in
            StreamingRecognitionResult with information about the recognized
            speech words, e.g. start and end time offsets. If false or
            unspecified, Speech doesn't return any word-level information.
          type: boolean
        phraseHints:
          description: >-
            Optional. A list of strings containing words and phrases that the
            speech recognizer should recognize with higher likelihood. See [the
            Cloud Speech
            documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints)
            for more details.
          type: array
          items:
            type: string
        model:
          description: >-
            Optional. Which Speech model to select for the given request. For
            more information, see [Speech
            models](https://cloud.google.com/dialogflow/cx/docs/concept/speech-models).
          type: string
        modelVariant:
          description: Optional. Which variant of the Speech model to use.
          type: string
          enumDescriptions:
            - >-
              No model variant specified. In this case Dialogflow defaults to
              USE_BEST_AVAILABLE.
            - >-
              Use the best available variant of the Speech model that the caller
              is eligible for.
            - >-
              Use standard model variant even if an enhanced model is available.
              See the [Cloud Speech
              documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models)
              for details about enhanced models.
            - >-
              Use an enhanced model variant: * If an enhanced variant does not
              exist for the given model and request language, Dialogflow falls
              back to the standard variant. The [Cloud Speech
              documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models)
              describes which models have enhanced variants.
          enum:
            - SPEECH_MODEL_VARIANT_UNSPECIFIED
            - USE_BEST_AVAILABLE
            - USE_STANDARD
            - USE_ENHANCED
        singleUtterance:
          description: >-
            Optional. If `false` (default), recognition does not cease until the
            client closes the stream. If `true`, the recognizer will detect a
            single spoken utterance in input audio. Recognition ceases when it
            detects the audio's voice has stopped or paused. In this case, once
            a detected intent is received, the client should close the stream
            and start a new request with a new stream as needed. Note: This
            setting is relevant only for streaming methods.
          type: boolean
        bargeInConfig:
          description: >-
            Configuration of barge-in behavior during the streaming of input
            audio.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1BargeInConfig'
        optOutConformerModelMigration:
          description: >-
            If `true`, the request will opt out for STT conformer model
            migration. This field will be deprecated once force migration takes
            place in June 2024. Please refer to [Dialogflow CX Speech model
            migration](https://cloud.google.com/dialogflow/cx/docs/concept/speech-model-migration).
          type: boolean
    GoogleCloudDialogflowCxV3beta1BargeInConfig:
      id: GoogleCloudDialogflowCxV3beta1BargeInConfig
      description: >-
        Configuration of the barge-in behavior. Barge-in instructs the API to
        return a detected utterance at a proper time while the client is playing
        back the response audio from a previous request. When the client sees
        the utterance, it should stop the playback and immediately get ready for
        receiving the responses for the current request. The barge-in handling
        requires the client to start streaming audio input as soon as it starts
        playing back the audio from the previous response. The playback is
        modeled into two phases: * No barge-in phase: which goes first and
        during which speech detection should not be carried out. * Barge-in
        phase: which follows the no barge-in phase and during which the API
        starts speech detection and may inform the client that an utterance has
        been detected. Note that no-speech event is not expected in this phase.
        The client provides this configuration in terms of the durations of
        those two phases. The durations are measured in terms of the audio
        length from the the start of the input audio. No-speech event is a
        response with END_OF_UTTERANCE without any transcript following up.
      type: object
      properties:
        noBargeInDuration:
          description: >-
            Duration that is not eligible for barge-in at the beginning of the
            input audio.
          type: string
          format: google-duration
        totalDuration:
          description: Total duration for the playback at the beginning of the input audio.
          type: string
          format: google-duration
    GoogleCloudDialogflowCxV3beta1EventInput:
      id: GoogleCloudDialogflowCxV3beta1EventInput
      description: Represents the event to trigger.
      type: object
      properties:
        event:
          description: Name of the event.
          type: string
    GoogleCloudDialogflowCxV3beta1DtmfInput:
      id: GoogleCloudDialogflowCxV3beta1DtmfInput
      description: Represents the input for dtmf event.
      type: object
      properties:
        digits:
          description: The dtmf digits.
          type: string
        finishDigit:
          description: The finish digit (if any).
          type: string
    GoogleCloudDialogflowCxV3beta1ToolCallResult:
      id: GoogleCloudDialogflowCxV3beta1ToolCallResult
      description: >-
        The result of calling a tool's action that has been executed by the
        client.
      type: object
      properties:
        tool:
          description: >-
            Required. The tool associated with this call. Format:
            `projects//locations//agents//tools/`.
          type: string
        action:
          description: Required. The name of the tool's action associated with this call.
          type: string
        error:
          description: The tool call's error.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3beta1ToolCallResultError
        outputParameters:
          description: The tool call's output parameters.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
    GoogleCloudDialogflowCxV3beta1ToolCallResultError:
      id: GoogleCloudDialogflowCxV3beta1ToolCallResultError
      description: An error produced by the tool call.
      type: object
      properties:
        message:
          description: Optional. The error message of the function.
          type: string
    GoogleCloudDialogflowCxV3beta1ConversationTurnVirtualAgentOutput:
      id: GoogleCloudDialogflowCxV3beta1ConversationTurnVirtualAgentOutput
      description: The output from the virtual agent.
      type: object
      properties:
        sessionParameters:
          description: The session parameters available to the bot at this point.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        differences:
          description: >-
            Output only. If this is part of a result conversation turn, the list
            of differences between the original run and the replay for this
            output, if any.
          readOnly: true
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3beta1TestRunDifference
        diagnosticInfo:
          description: >-
            Required. Input only. The diagnostic info output for the turn.
            Required to calculate the testing coverage.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        triggeredIntent:
          description: >-
            The Intent that triggered the response. Only name and displayName
            will be set.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1Intent'
        currentPage:
          description: >-
            The Page on which the utterance was spoken. Only name and
            displayName will be set.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1Page'
        textResponses:
          description: The text responses from the agent for the turn.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessageText
        status:
          description: >-
            Response error from the agent in the test result. If set, other
            output is empty.
          $ref: '#/components/schemas/GoogleRpcStatus'
    GoogleCloudDialogflowCxV3beta1TestRunDifference:
      id: GoogleCloudDialogflowCxV3beta1TestRunDifference
      description: >-
        The description of differences between original and replayed agent
        output.
      type: object
      properties:
        type:
          description: The type of diff.
          type: string
          enumDescriptions:
            - Should never be used.
            - The intent.
            - The page.
            - The parameters.
            - The message utterance.
            - The flow.
          enum:
            - DIFF_TYPE_UNSPECIFIED
            - INTENT
            - PAGE
            - PARAMETERS
            - UTTERANCE
            - FLOW
        description:
          description: >-
            A human readable description of the diff, showing the actual output
            vs expected output.
          type: string
    GoogleCloudDialogflowCxV3beta1Intent:
      id: GoogleCloudDialogflowCxV3beta1Intent
      description: >-
        An intent represents a user's intent to interact with a conversational
        agent. You can provide information for the Dialogflow API to use to
        match user input to an intent by adding training phrases (i.e., examples
        of user input) to your intent.
      type: object
      properties:
        name:
          description: >-
            The unique identifier of the intent. Required for the
            Intents.UpdateIntent method. Intents.CreateIntent populates the name
            automatically. Format: `projects//locations//agents//intents/`.
          type: string
        displayName:
          description: >-
            Required. The human-readable name of the intent, unique within the
            agent.
          type: string
        trainingPhrases:
          description: >-
            The collection of training phrases the agent is trained on to
            identify the intent.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase
        parameters:
          description: The collection of parameters associated with the intent.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1IntentParameter'
        priority:
          description: >-
            The priority of this intent. Higher numbers represent higher
            priorities. - If the supplied value is unspecified or 0, the service
            translates the value to 500,000, which corresponds to the `Normal`
            priority in the console. - If the supplied value is negative, the
            intent is ignored in runtime detect intent requests.
          type: integer
          format: int32
        isFallback:
          description: >-
            Indicates whether this is a fallback intent. Currently only default
            fallback intent is allowed in the agent, which is added upon agent
            creation. Adding training phrases to fallback intent is useful in
            the case of requests that are mistakenly matched, since training
            phrases assigned to fallback intents act as negative examples that
            triggers no-match event.
          type: boolean
        labels:
          description: >-
            The key/value metadata to label an intent. Labels can contain
            lowercase letters, digits and the symbols '-' and '_'. International
            characters are allowed, including letters from unicase alphabets.
            Keys must start with a letter. Keys and values can be no longer than
            63 characters and no more than 128 bytes. Prefix "sys-" is reserved
            for Dialogflow defined labels. Currently allowed Dialogflow defined
            labels include: * sys-head * sys-contextual The above labels do not
            require value. "sys-head" means the intent is a head intent.
            "sys-contextual" means the intent is a contextual intent.
          type: object
          additionalProperties:
            type: string
        description:
          description: >-
            Human readable description for better understanding an intent like
            its scope, content, result etc. Maximum character limit: 140
            characters.
          type: string
    GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase:
      id: GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase
      description: >-
        Represents an example that the agent is trained on to identify the
        intent.
      type: object
      properties:
        id:
          description: Output only. The unique identifier of the training phrase.
          type: string
        parts:
          description: >-
            Required. The ordered list of training phrase parts. The parts are
            concatenated in order to form the training phrase. Note: The API
            does not automatically annotate training phrases like the Dialogflow
            Console does. Note: Do not forget to include whitespace at part
            boundaries, so the training phrase is well formatted when the parts
            are concatenated. If the training phrase does not need to be
            annotated with parameters, you just need a single part with only the
            Part.text field set. If you want to annotate the training phrase,
            you must create multiple parts, where the fields of each part are
            populated in one of two ways: - `Part.text` is set to a part of the
            phrase that has no parameters. - `Part.text` is set to a part of the
            phrase that you want to annotate, and the `parameter_id` field is
            set.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart
        repeatCount:
          description: Indicates how many times this example was added to the intent.
          type: integer
          format: int32
    GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart:
      id: GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart
      description: Represents a part of a training phrase.
      type: object
      properties:
        text:
          description: Required. The text for this part.
          type: string
        parameterId:
          description: >-
            The parameter used to annotate this part of the training phrase.
            This field is required for annotated parts of the training phrase.
          type: string
    GoogleCloudDialogflowCxV3beta1IntentParameter:
      id: GoogleCloudDialogflowCxV3beta1IntentParameter
      description: Represents an intent parameter.
      type: object
      properties:
        id:
          description: >-
            Required. The unique identifier of the parameter. This field is used
            by training phrases to annotate their parts.
          type: string
        entityType:
          description: >-
            Required. The entity type of the parameter. Format:
            `projects/-/locations/-/agents/-/entityTypes/` for system entity
            types (for example,
            `projects/-/locations/-/agents/-/entityTypes/sys.date`), or
            `projects//locations//agents//entityTypes/` for developer entity
            types.
          type: string
        isList:
          description: Indicates whether the parameter represents a list of values.
          type: boolean
        redact:
          description: >-
            Indicates whether the parameter content should be redacted in log.
            If redaction is enabled, the parameter content will be replaced by
            parameter name during logging. Note: the parameter content is
            subject to redaction if either parameter level redaction or entity
            type level redaction is enabled.
          type: boolean
    GoogleCloudDialogflowCxV3beta1Page:
      id: GoogleCloudDialogflowCxV3beta1Page
      description: >-
        A Dialogflow CX conversation (session) can be described and visualized
        as a state machine. The states of a CX session are represented by pages.
        For each flow, you define many pages, where your combined pages can
        handle a complete conversation on the topics the flow is designed for.
        At any given moment, exactly one page is the current page, the current
        page is considered active, and the flow associated with that page is
        considered active. Every flow has a special start page. When a flow
        initially becomes active, the start page page becomes the current page.
        For each conversational turn, the current page will either stay the same
        or transition to another page. You configure each page to collect
        information from the end-user that is relevant for the conversational
        state represented by the page. For more information, see the [Page
        guide](https://cloud.google.com/dialogflow/cx/docs/concept/page).
      type: object
      properties:
        name:
          description: >-
            The unique identifier of the page. Required for the Pages.UpdatePage
            method. Pages.CreatePage populates the name automatically. Format:
            `projects//locations//agents//flows//pages/`.
          type: string
        displayName:
          description: >-
            Required. The human-readable name of the page, unique within the
            flow.
          type: string
        description:
          description: The description of the page. The maximum length is 500 characters.
          type: string
        entryFulfillment:
          description: The fulfillment to call when the session is entering the page.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1Fulfillment'
        form:
          description: >-
            The form associated with the page, used for collecting parameters
            relevant to the page.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1Form'
        transitionRouteGroups:
          description: >-
            Ordered list of `TransitionRouteGroups` added to the page.
            Transition route groups must be unique within a page. If the page
            links both flow-level transition route groups and agent-level
            transition route groups, the flow-level ones will have higher
            priority and will be put before the agent-level ones. * If multiple
            transition routes within a page scope refer to the same intent, then
            the precedence order is: page's transition route -> page's
            transition route group -> flow's transition routes. * If multiple
            transition route groups within a page contain the same intent, then
            the first group in the ordered list takes precedence.
            Format:`projects//locations//agents//flows//transitionRouteGroups/`
            or `projects//locations//agents//transitionRouteGroups/` for
            agent-level groups.
          type: array
          items:
            type: string
        transitionRoutes:
          description: >-
            A list of transitions for the transition rules of this page. They
            route the conversation to another page in the same flow, or another
            flow. When we are in a certain page, the TransitionRoutes are
            evalauted in the following order: * TransitionRoutes defined in the
            page with intent specified. * TransitionRoutes defined in the
            transition route groups with intent specified. * TransitionRoutes
            defined in flow with intent specified. * TransitionRoutes defined in
            the transition route groups with intent specified. *
            TransitionRoutes defined in the page with only condition specified.
            * TransitionRoutes defined in the transition route groups with only
            condition specified.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1TransitionRoute'
        eventHandlers:
          description: >-
            Handlers associated with the page to handle events such as webhook
            errors, no match or no input.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1EventHandler'
        advancedSettings:
          description: >-
            Hierarchical advanced settings for this page. The settings exposed
            at the lower level overrides the settings exposed at the higher
            level.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1AdvancedSettings'
        knowledgeConnectorSettings:
          description: Optional. Knowledge connector configuration.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings
    GoogleCloudDialogflowCxV3beta1Fulfillment:
      id: GoogleCloudDialogflowCxV3beta1Fulfillment
      description: >-
        A fulfillment can do one or more of the following actions at the same
        time: * Generate rich message responses. * Set parameter values. * Call
        the webhook. Fulfillments can be called at various stages in the Page or
        Form lifecycle. For example, when a DetectIntentRequest drives a session
        to enter a new page, the page's entry fulfillment can add a static
        response to the QueryResult in the returning DetectIntentResponse, call
        the webhook (for example, to load user data from a database), or both.
      type: object
      properties:
        messages:
          description: The list of rich message responses to present to the user.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessage'
        webhook:
          description: >-
            The webhook to call. Format:
            `projects//locations//agents//webhooks/`.
          type: string
        returnPartialResponses:
          description: >-
            Whether Dialogflow should return currently queued fulfillment
            response messages in streaming APIs. If a webhook is specified, it
            happens before Dialogflow invokes webhook. Warning: 1) This flag
            only affects streaming API. Responses are still queued and returned
            once in non-streaming API. 2) The flag can be enabled in any
            fulfillment but only the first 3 partial responses will be returned.
            You may only want to apply it to fulfillments that have slow
            webhooks.
          type: boolean
        tag:
          description: >-
            The value of this field will be populated in the WebhookRequest
            `fulfillmentInfo.tag` field by Dialogflow when the associated
            webhook is called. The tag is typically used by the webhook service
            to identify which fulfillment is being called, but it could be used
            for other purposes. This field is required if `webhook` is
            specified.
          type: string
        setParameterActions:
          description: Set parameter values before executing the webhook.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction
        conditionalCases:
          description: Conditional cases for this fulfillment.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases
        advancedSettings:
          description: >-
            Hierarchical advanced settings for this fulfillment. The settings
            exposed at the lower level overrides the settings exposed at the
            higher level.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1AdvancedSettings'
        enableGenerativeFallback:
          description: >-
            If the flag is true, the agent will utilize LLM to generate a text
            response. If LLM generation fails, the defined responses in the
            fulfillment will be respected. This flag is only useful for
            fulfillments associated with no-match event handlers.
          type: boolean
    GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction:
      id: GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction
      description: Setting a parameter value.
      type: object
      properties:
        parameter:
          description: Display name of the parameter.
          type: string
        value:
          description: The new value of the parameter. A null value clears the parameter.
          type: any
    GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases:
      id: GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases
      description: >-
        A list of cascading if-else conditions. Cases are mutually exclusive.
        The first one with a matching condition is selected, all the rest
        ignored.
      type: object
      properties:
        cases:
          description: A list of cascading if-else conditions.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCase
    GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCase:
      id: GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCase
      description: >-
        Each case has a Boolean condition. When it is evaluated to be True, the
        corresponding messages will be selected and evaluated recursively.
      type: object
      properties:
        condition:
          description: >-
            The condition to activate and select this case. Empty means the
            condition is always true. The condition is evaluated against form
            parameters or session parameters. See the [conditions
            reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
          type: string
        caseContent:
          description: A list of case content.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent
    GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent:
      id: GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent
      description: The list of messages or conditional cases to activate for this case.
      type: object
      properties:
        message:
          description: Returned message.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessage'
        additionalCases:
          description: Additional cases to be evaluated.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases
    GoogleCloudDialogflowCxV3beta1AdvancedSettings:
      id: GoogleCloudDialogflowCxV3beta1AdvancedSettings
      description: >-
        Hierarchical advanced settings for
        agent/flow/page/fulfillment/parameter. Settings exposed at lower level
        overrides the settings exposed at higher level. Overriding occurs at the
        sub-setting level. For example, the playback_interruption_settings at
        fulfillment level only overrides the playback_interruption_settings at
        the agent level, leaving other settings at the agent level unchanged.
        DTMF settings does not override each other. DTMF settings set at
        different levels define DTMF detections running in parallel. Hierarchy:
        Agent->Flow->Page->Fulfillment/Parameter.
      type: object
      properties:
        audioExportGcsDestination:
          description: >-
            If present, incoming audio is exported by Dialogflow to the
            configured Google Cloud Storage destination. Exposed at the
            following levels: - Agent level - Flow level
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1GcsDestination'
        speechSettings:
          description: >-
            Settings for speech to text detection. Exposed at the following
            levels: - Agent level - Flow level - Page level - Parameter level
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3beta1AdvancedSettingsSpeechSettings
        dtmfSettings:
          description: >-
            Settings for DTMF. Exposed at the following levels: - Agent level -
            Flow level - Page level - Parameter level.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3beta1AdvancedSettingsDtmfSettings
        loggingSettings:
          description: >-
            Settings for logging. Settings for Dialogflow History, Contact
            Center messages, StackDriver logs, and speech logging. Exposed at
            the following levels: - Agent level.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3beta1AdvancedSettingsLoggingSettings
    GoogleCloudDialogflowCxV3beta1GcsDestination:
      id: GoogleCloudDialogflowCxV3beta1GcsDestination
      description: >-
        Google Cloud Storage location for a Dialogflow operation that writes or
        exports objects (e.g. exported agent or transcripts) outside of
        Dialogflow.
      type: object
      properties:
        uri:
          description: >-
            Required. The Google Cloud Storage URI for the exported objects. A
            URI is of the form: `gs://bucket/object-name-or-prefix` Whether a
            full object name, or just a prefix, its usage depends on the
            Dialogflow operation.
          type: string
    GoogleCloudDialogflowCxV3beta1AdvancedSettingsSpeechSettings:
      id: GoogleCloudDialogflowCxV3beta1AdvancedSettingsSpeechSettings
      description: Define behaviors of speech to text detection.
      type: object
      properties:
        endpointerSensitivity:
          description: >-
            Sensitivity of the speech model that detects the end of speech.
            Scale from 0 to 100.
          type: integer
          format: int32
        noSpeechTimeout:
          description: Timeout before detecting no speech.
          type: string
          format: google-duration
        useTimeoutBasedEndpointing:
          description: >-
            Use timeout based endpointing, interpreting endpointer sensitivy as
            seconds of timeout value.
          type: boolean
        models:
          description: >-
            Mapping from language to Speech-to-Text model. The mapped
            Speech-to-Text model will be selected for requests from its
            corresponding language. For more information, see [Speech
            models](https://cloud.google.com/dialogflow/cx/docs/concept/speech-models).
          type: object
          additionalProperties:
            type: string
    GoogleCloudDialogflowCxV3beta1AdvancedSettingsDtmfSettings:
      id: GoogleCloudDialogflowCxV3beta1AdvancedSettingsDtmfSettings
      description: Define behaviors for DTMF (dual tone multi frequency).
      type: object
      properties:
        enabled:
          description: >-
            If true, incoming audio is processed for DTMF (dual tone multi
            frequency) events. For example, if the caller presses a button on
            their telephone keypad and DTMF processing is enabled, Dialogflow
            will detect the event (e.g. a "3" was pressed) in the incoming audio
            and pass the event to the bot to drive business logic (e.g. when 3
            is pressed, return the account balance).
          type: boolean
        maxDigits:
          description: Max length of DTMF digits.
          type: integer
          format: int32
        finishDigit:
          description: The digit that terminates a DTMF digit sequence.
          type: string
        interdigitTimeoutDuration:
          description: Interdigit timeout setting for matching dtmf input to regex.
          type: string
          format: google-duration
        endpointingTimeoutDuration:
          description: Endpoint timeout setting for matching dtmf input to regex.
          type: string
          format: google-duration
    GoogleCloudDialogflowCxV3beta1AdvancedSettingsLoggingSettings:
      id: GoogleCloudDialogflowCxV3beta1AdvancedSettingsLoggingSettings
      description: Define behaviors on logging.
      type: object
      properties:
        enableStackdriverLogging:
          description: Enables Google Cloud Logging.
          type: boolean
        enableInteractionLogging:
          description: Enables DF Interaction logging.
          type: boolean
        enableConsentBasedRedaction:
          description: >-
            Enables consent-based end-user input redaction, if true, a
            pre-defined session parameter
            `$session.params.conversation-redaction` will be used to determine
            if the utterance should be redacted.
          type: boolean
    GoogleCloudDialogflowCxV3beta1Form:
      id: GoogleCloudDialogflowCxV3beta1Form
      description: >-
        A form is a data model that groups related parameters that can be
        collected from the user. The process in which the agent prompts the user
        and collects parameter values from the user is called form filling. A
        form can be added to a page. When form filling is done, the filled
        parameters will be written to the session.
      type: object
      properties:
        parameters:
          description: Parameters to collect from the user.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1FormParameter'
    GoogleCloudDialogflowCxV3beta1FormParameter:
      id: GoogleCloudDialogflowCxV3beta1FormParameter
      description: Represents a form parameter.
      type: object
      properties:
        displayName:
          description: >-
            Required. The human-readable name of the parameter, unique within
            the form.
          type: string
        required:
          description: >-
            Indicates whether the parameter is required. Optional parameters
            will not trigger prompts; however, they are filled if the user
            specifies them. Required parameters must be filled before form
            filling concludes.
          type: boolean
        entityType:
          description: >-
            Required. The entity type of the parameter. Format:
            `projects/-/locations/-/agents/-/entityTypes/` for system entity
            types (for example,
            `projects/-/locations/-/agents/-/entityTypes/sys.date`), or
            `projects//locations//agents//entityTypes/` for developer entity
            types.
          type: string
        isList:
          description: Indicates whether the parameter represents a list of values.
          type: boolean
        fillBehavior:
          description: Required. Defines fill behavior for the parameter.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3beta1FormParameterFillBehavior
        defaultValue:
          description: >-
            The default value of an optional parameter. If the parameter is
            required, the default value will be ignored.
          type: any
        redact:
          description: >-
            Indicates whether the parameter content should be redacted in log.
            If redaction is enabled, the parameter content will be replaced by
            parameter name during logging. Note: the parameter content is
            subject to redaction if either parameter level redaction or entity
            type level redaction is enabled.
          type: boolean
        advancedSettings:
          description: >-
            Hierarchical advanced settings for this parameter. The settings
            exposed at the lower level overrides the settings exposed at the
            higher level.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1AdvancedSettings'
    GoogleCloudDialogflowCxV3beta1FormParameterFillBehavior:
      id: GoogleCloudDialogflowCxV3beta1FormParameterFillBehavior
      description: Configuration for how the filling of a parameter should be handled.
      type: object
      properties:
        initialPromptFulfillment:
          description: >-
            Required. The fulfillment to provide the initial prompt that the
            agent can present to the user in order to fill the parameter.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1Fulfillment'
        repromptEventHandlers:
          description: >-
            The handlers for parameter-level events, used to provide reprompt
            for the parameter or transition to a different page/flow. The
            supported events are: * `sys.no-match-`, where N can be from 1 to 6
            * `sys.no-match-default` * `sys.no-input-`, where N can be from 1 to
            6 * `sys.no-input-default` * `sys.invalid-parameter`
            `initial_prompt_fulfillment` provides the first prompt for the
            parameter. If the user's response does not fill the parameter, a
            no-match/no-input event will be triggered, and the fulfillment
            associated with the `sys.no-match-1`/`sys.no-input-1` handler (if
            defined) will be called to provide a prompt. The
            `sys.no-match-2`/`sys.no-input-2` handler (if defined) will respond
            to the next no-match/no-input event, and so on. A
            `sys.no-match-default` or `sys.no-input-default` handler will be
            used to handle all following no-match/no-input events after all
            numbered no-match/no-input handlers for the parameter are consumed.
            A `sys.invalid-parameter` handler can be defined to handle the case
            where the parameter values have been `invalidated` by webhook. For
            example, if the user's response fill the parameter, however the
            parameter was invalidated by webhook, the fulfillment associated
            with the `sys.invalid-parameter` handler (if defined) will be called
            to provide a prompt. If the event handler for the corresponding
            event can't be found on the parameter, `initial_prompt_fulfillment`
            will be re-prompted.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1EventHandler'
    GoogleCloudDialogflowCxV3beta1EventHandler:
      id: GoogleCloudDialogflowCxV3beta1EventHandler
      description: >-
        An event handler specifies an event that can be handled during a
        session. When the specified event happens, the following actions are
        taken in order: * If there is a `trigger_fulfillment` associated with
        the event, it will be called. * If there is a `target_page` associated
        with the event, the session will transition into the specified page. *
        If there is a `target_flow` associated with the event, the session will
        transition into the specified flow.
      type: object
      properties:
        name:
          description: Output only. The unique identifier of this event handler.
          readOnly: true
          type: string
        event:
          description: Required. The name of the event to handle.
          type: string
        triggerFulfillment:
          description: >-
            The fulfillment to call when the event occurs. Handling webhook
            errors with a fulfillment enabled with webhook could cause infinite
            loop. It is invalid to specify such fulfillment for a handler
            handling webhooks.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1Fulfillment'
        targetPage:
          description: >-
            The target page to transition to. Format:
            `projects//locations//agents//flows//pages/`.
          type: string
        targetFlow:
          description: >-
            The target flow to transition to. Format:
            `projects//locations//agents//flows/`.
          type: string
        targetPlaybook:
          description: >-
            The target playbook to transition to. Format:
            `projects//locations//agents//playbooks/`.
          type: string
    GoogleCloudDialogflowCxV3beta1TransitionRoute:
      id: GoogleCloudDialogflowCxV3beta1TransitionRoute
      description: >-
        A transition route specifies a intent that can be matched and/or a data
        condition that can be evaluated during a session. When a specified
        transition is matched, the following actions are taken in order: * If
        there is a `trigger_fulfillment` associated with the transition, it will
        be called. * If there is a `target_page` associated with the transition,
        the session will transition into the specified page. * If there is a
        `target_flow` associated with the transition, the session will
        transition into the specified flow.
      type: object
      properties:
        name:
          description: Output only. The unique identifier of this transition route.
          readOnly: true
          type: string
        description:
          description: >-
            Optional. The description of the transition route. The maximum
            length is 500 characters.
          type: string
        intent:
          description: >-
            The unique identifier of an Intent. Format:
            `projects//locations//agents//intents/`. Indicates that the
            transition can only happen when the given intent is matched. At
            least one of `intent` or `condition` must be specified. When both
            `intent` and `condition` are specified, the transition can only
            happen when both are fulfilled.
          type: string
        condition:
          description: >-
            The condition to evaluate against form parameters or session
            parameters. See the [conditions
            reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
            At least one of `intent` or `condition` must be specified. When both
            `intent` and `condition` are specified, the transition can only
            happen when both are fulfilled.
          type: string
        triggerFulfillment:
          description: >-
            The fulfillment to call when the condition is satisfied. At least
            one of `trigger_fulfillment` and `target` must be specified. When
            both are defined, `trigger_fulfillment` is executed first.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1Fulfillment'
        targetPage:
          description: >-
            The target page to transition to. Format:
            `projects//locations//agents//flows//pages/`.
          type: string
        targetFlow:
          description: >-
            The target flow to transition to. Format:
            `projects//locations//agents//flows/`.
          type: string
    GoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings:
      id: GoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings
      description: >-
        The Knowledge Connector settings for this page or flow. This includes
        information such as the attached Knowledge Bases, and the way to execute
        fulfillment.
      type: object
      properties:
        enabled:
          description: Whether Knowledge Connector is enabled or not.
          type: boolean
        triggerFulfillment:
          description: >-
            The fulfillment to be triggered. When the answers from the Knowledge
            Connector are selected by Dialogflow, you can utitlize the request
            scoped parameter `$request.knowledge.answers` (contains up to the 5
            highest confidence answers) and `$request.knowledge.questions`
            (contains the corresponding questions) to construct the fulfillment.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1Fulfillment'
        targetPage:
          description: >-
            The target page to transition to. Format:
            `projects//locations//agents//flows//pages/`.
          type: string
        targetFlow:
          description: >-
            The target flow to transition to. Format:
            `projects//locations//agents//flows/`.
          type: string
        dataStoreConnections:
          description: Optional. List of related data store connections.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3beta1DataStoreConnection
    GoogleCloudDialogflowCxV3beta1DataStoreConnection:
      id: GoogleCloudDialogflowCxV3beta1DataStoreConnection
      description: >-
        A data store connection. It represents a data store in Discovery Engine
        and the type of the contents it contains.
      type: object
      properties:
        dataStoreType:
          description: The type of the connected data store.
          type: string
          enumDescriptions:
            - >-
              Not specified. This value indicates that the data store type is
              not specified, so it will not be used during search.
            - A data store that contains public web content.
            - A data store that contains unstructured private data.
            - A data store that contains structured data (for example FAQ).
          enum:
            - DATA_STORE_TYPE_UNSPECIFIED
            - PUBLIC_WEB
            - UNSTRUCTURED
            - STRUCTURED
        dataStore:
          description: >-
            The full name of the referenced data store. Formats:
            `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
            `projects/{project}/locations/{location}/dataStores/{data_store}`
          type: string
    GoogleCloudDialogflowCxV3beta1RunTestCaseMetadata:
      id: GoogleCloudDialogflowCxV3beta1RunTestCaseMetadata
      description: >-
        Metadata returned for the TestCases.RunTestCase long running operation.
        This message currently has no fields.
      type: object
      properties: {}
    GoogleCloudDialogflowCxV3beta1RunTestCaseResponse:
      id: GoogleCloudDialogflowCxV3beta1RunTestCaseResponse
      description: The response message for TestCases.RunTestCase.
      type: object
      properties:
        result:
          description: The result.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1TestCaseResult'
    GoogleCloudDialogflowCxV3beta1ExportTestCasesMetadata:
      id: GoogleCloudDialogflowCxV3beta1ExportTestCasesMetadata
      description: >-
        Metadata returned for the TestCases.ExportTestCases long running
        operation. This message currently has no fields.
      type: object
      properties: {}
    GoogleCloudDialogflowCxV3beta1ExportTestCasesResponse:
      id: GoogleCloudDialogflowCxV3beta1ExportTestCasesResponse
      description: The response message for TestCases.ExportTestCases.
      type: object
      properties:
        gcsUri:
          description: >-
            The URI to a file containing the exported test cases. This field is
            populated only if `gcs_uri` is specified in ExportTestCasesRequest.
          type: string
        content:
          description: Uncompressed raw byte content for test cases.
          type: string
          format: byte
    GoogleCloudDialogflowCxV3beta1ImportTestCasesMetadata:
      id: GoogleCloudDialogflowCxV3beta1ImportTestCasesMetadata
      description: >-
        Metadata returned for the TestCases.ImportTestCases long running
        operation.
      type: object
      properties:
        errors:
          description: Errors for failed test cases.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1TestCaseError'
    GoogleCloudDialogflowCxV3beta1TestCaseError:
      id: GoogleCloudDialogflowCxV3beta1TestCaseError
      description: Error info for importing a test.
      type: object
      properties:
        testCase:
          description: The test case.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1TestCase'
        status:
          description: The status associated with the test case.
          $ref: '#/components/schemas/GoogleRpcStatus'
    GoogleCloudDialogflowCxV3beta1TestCase:
      id: GoogleCloudDialogflowCxV3beta1TestCase
      description: Represents a test case.
      type: object
      properties:
        name:
          description: >-
            The unique identifier of the test case. TestCases.CreateTestCase
            will populate the name automatically. Otherwise use format:
            `projects//locations//agents//testCases/`.
          type: string
        tags:
          description: >-
            Tags are short descriptions that users may apply to test cases for
            organizational and filtering purposes. Each tag should start with
            "#" and has a limit of 30 characters.
          type: array
          items:
            type: string
        displayName:
          description: >-
            Required. The human-readable name of the test case, unique within
            the agent. Limit of 200 characters.
          type: string
        notes:
          description: >-
            Additional freeform notes about the test case. Limit of 400
            characters.
          type: string
        testConfig:
          description: Config for the test case.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1TestConfig'
        testCaseConversationTurns:
          description: >-
            The conversation turns uttered when the test case was created, in
            chronological order. These include the canonical set of agent
            utterances that should occur when the agent is working properly.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3beta1ConversationTurn
        creationTime:
          description: Output only. When the test was created.
          readOnly: true
          type: string
          format: google-datetime
        lastTestResult:
          description: The latest test result.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1TestCaseResult'
    GoogleCloudDialogflowCxV3beta1TestConfig:
      id: GoogleCloudDialogflowCxV3beta1TestConfig
      description: Represents configurations for a test case.
      type: object
      properties:
        trackingParameters:
          description: Session parameters to be compared when calculating differences.
          type: array
          items:
            type: string
        flow:
          description: >-
            Flow name to start the test case with. Format:
            `projects//locations//agents//flows/`. Only one of `flow` and `page`
            should be set to indicate the starting point of the test case. If
            neither is set, the test case will start with start page on the
            default start flow.
          type: string
        page:
          description: >-
            The page to start the test case with. Format:
            `projects//locations//agents//flows//pages/`. Only one of `flow` and
            `page` should be set to indicate the starting point of the test
            case. If neither is set, the test case will start with start page on
            the default start flow.
          type: string
    GoogleCloudDialogflowCxV3beta1ImportTestCasesResponse:
      id: GoogleCloudDialogflowCxV3beta1ImportTestCasesResponse
      description: The response message for TestCases.ImportTestCases.
      type: object
      properties:
        names:
          description: >-
            The unique identifiers of the new test cases. Format:
            `projects//locations//agents//testCases/`.
          type: array
          items:
            type: string
    GoogleCloudDialogflowCxV3beta1RunContinuousTestMetadata:
      id: GoogleCloudDialogflowCxV3beta1RunContinuousTestMetadata
      description: >-
        Metadata returned for the Environments.RunContinuousTest long running
        operation.
      type: object
      properties:
        errors:
          description: The test errors.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1TestError'
    GoogleCloudDialogflowCxV3beta1RunContinuousTestResponse:
      id: GoogleCloudDialogflowCxV3beta1RunContinuousTestResponse
      description: The response message for Environments.RunContinuousTest.
      type: object
      properties:
        continuousTestResult:
          description: The result for a continuous test run.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3beta1ContinuousTestResult
    GoogleCloudDialogflowCxV3beta1ContinuousTestResult:
      id: GoogleCloudDialogflowCxV3beta1ContinuousTestResult
      description: Represents a result from running a test case in an agent environment.
      type: object
      properties:
        name:
          description: >-
            The resource name for the continuous test result. Format:
            `projects//locations//agents//environments//continuousTestResults/`.
          type: string
        result:
          description: >-
            The result of this continuous test run, i.e. whether all the tests
            in this continuous test run pass or not.
          type: string
          enumDescriptions:
            - Not specified. Should never be used.
            - All the tests passed.
            - At least one test did not pass.
          enum:
            - AGGREGATED_TEST_RESULT_UNSPECIFIED
            - PASSED
            - FAILED
        testCaseResults:
          description: >-
            A list of individual test case results names in this continuous test
            run.
          type: array
          items:
            type: string
        runTime:
          description: Time when the continuous testing run starts.
          type: string
          format: google-datetime
    GoogleCloudDialogflowCxV3beta1DeployFlowMetadata:
      id: GoogleCloudDialogflowCxV3beta1DeployFlowMetadata
      description: >-
        Metadata returned for the Environments.DeployFlow long running
        operation.
      type: object
      properties:
        testErrors:
          description: Errors of running deployment tests.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1TestError'
    GoogleCloudDialogflowCxV3beta1DeployFlowResponse:
      id: GoogleCloudDialogflowCxV3beta1DeployFlowResponse
      description: The response message for Environments.DeployFlow.
      type: object
      properties:
        environment:
          description: The updated environment where the flow is deployed.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1Environment'
        deployment:
          description: >-
            The name of the flow version deployment. Format:
            `projects//locations//agents//environments//deployments/`.
          type: string
    GoogleCloudDialogflowCxV3beta1Environment:
      id: GoogleCloudDialogflowCxV3beta1Environment
      description: >-
        Represents an environment for an agent. You can create multiple versions
        of your agent and publish them to separate environments. When you edit
        an agent, you are editing the draft agent. At any point, you can save
        the draft agent as an agent version, which is an immutable snapshot of
        your agent. When you save the draft agent, it is published to the
        default environment. When you create agent versions, you can publish
        them to custom environments. You can create a variety of custom
        environments for testing, development, production, etc.
      type: object
      properties:
        name:
          description: >-
            The name of the environment. Format:
            `projects//locations//agents//environments/`.
          type: string
        displayName:
          description: >-
            Required. The human-readable name of the environment (unique in an
            agent). Limit of 64 characters.
          type: string
        description:
          description: >-
            The human-readable description of the environment. The maximum
            length is 500 characters. If exceeded, the request is rejected.
          type: string
        versionConfigs:
          description: >-
            A list of configurations for flow versions. You should include
            version configs for all flows that are reachable from `Start Flow`
            in the agent. Otherwise, an error will be returned.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfig
        updateTime:
          description: Output only. Update time of this environment.
          readOnly: true
          type: string
          format: google-datetime
        testCasesConfig:
          description: The test cases config for continuous tests of this environment.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3beta1EnvironmentTestCasesConfig
        webhookConfig:
          description: The webhook configuration for this environment.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3beta1EnvironmentWebhookConfig
    GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfig:
      id: GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfig
      description: Configuration for the version.
      type: object
      properties:
        version:
          description: >-
            Required. Both flow and playbook versions are supported. Format for
            flow version: projects//locations//agents//flows//versions/. Format
            for playbook version:
            projects//locations//agents//playbooks//versions/.
          type: string
    GoogleCloudDialogflowCxV3beta1EnvironmentTestCasesConfig:
      id: GoogleCloudDialogflowCxV3beta1EnvironmentTestCasesConfig
      description: The configuration for continuous tests.
      type: object
      properties:
        testCases:
          description: >-
            A list of test case names to run. They should be under the same
            agent. Format of each test case name:
            `projects//locations//agents//testCases/`
          type: array
          items:
            type: string
        enableContinuousRun:
          description: >-
            Whether to run test cases in TestCasesConfig.test_cases
            periodically. Default false. If set to true, run once a day.
          type: boolean
        enablePredeploymentRun:
          description: >-
            Whether to run test cases in TestCasesConfig.test_cases before
            deploying a flow version to the environment. Default false.
          type: boolean
    GoogleCloudDialogflowCxV3beta1EnvironmentWebhookConfig:
      id: GoogleCloudDialogflowCxV3beta1EnvironmentWebhookConfig
      description: Configuration for webhooks.
      type: object
      properties:
        webhookOverrides:
          description: >-
            The list of webhooks to override for the agent environment. The
            webhook must exist in the agent. You can override fields in
            `generic_web_service` and `service_directory`.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1Webhook'
    GoogleCloudDialogflowCxV3beta1Webhook:
      id: GoogleCloudDialogflowCxV3beta1Webhook
      description: >-
        Webhooks host the developer's business logic. During a session, webhooks
        allow the developer to use the data extracted by Dialogflow's natural
        language processing to generate dynamic responses, validate collected
        data, or trigger actions on the backend.
      type: object
      properties:
        name:
          description: >-
            The unique identifier of the webhook. Required for the
            Webhooks.UpdateWebhook method. Webhooks.CreateWebhook populates the
            name automatically. Format:
            `projects//locations//agents//webhooks/`.
          type: string
        displayName:
          description: >-
            Required. The human-readable name of the webhook, unique within the
            agent.
          type: string
        genericWebService:
          description: Configuration for a generic web service.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3beta1WebhookGenericWebService
        serviceDirectory:
          description: >-
            Configuration for a [Service
            Directory](https://cloud.google.com/service-directory) service.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3beta1WebhookServiceDirectoryConfig
        timeout:
          description: >-
            Webhook execution timeout. Execution is considered failed if
            Dialogflow doesn't receive a response from webhook at the end of the
            timeout period. Defaults to 5 seconds, maximum allowed timeout is 30
            seconds.
          type: string
          format: google-duration
        disabled:
          description: Indicates whether the webhook is disabled.
          type: boolean
    GoogleCloudDialogflowCxV3beta1WebhookGenericWebService:
      id: GoogleCloudDialogflowCxV3beta1WebhookGenericWebService
      description: Represents configuration for a generic web service.
      type: object
      properties:
        uri:
          description: >-
            Required. The webhook URI for receiving POST requests. It must use
            https protocol.
          type: string
        username:
          description: The user name for HTTP Basic authentication.
          deprecated: true
          type: string
        password:
          description: The password for HTTP Basic authentication.
          deprecated: true
          type: string
        requestHeaders:
          description: The HTTP request headers to send together with webhook requests.
          type: object
          additionalProperties:
            type: string
        allowedCaCerts:
          description: >-
            Optional. Specifies a list of allowed custom CA certificates (in DER
            format) for HTTPS verification. This overrides the default SSL trust
            store. If this is empty or unspecified, Dialogflow will use Google's
            default trust store to verify certificates. N.B. Make sure the HTTPS
            server certificates are signed with "subject alt name". For instance
            a certificate can be self-signed using the following command, ```
            openssl x509 -req -days 200 -in example.com.csr \ -signkey
            example.com.key \ -out example.com.crt \ -extfile <(printf
            "\nsubjectAltName='DNS:www.example.com'") ```
          type: array
          items:
            type: string
            format: byte
        oauthConfig:
          description: >-
            Optional. The OAuth configuration of the webhook. If specified,
            Dialogflow will initiate the OAuth client credential flow to
            exchange an access token from the 3rd party platform and put it in
            the auth header.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceOAuthConfig
        serviceAgentAuth:
          description: >-
            Optional. Indicate the auth token type generated from the
            [Diglogflow service
            agent](https://cloud.google.com/iam/docs/service-agents#dialogflow-service-agent).
            The generated token is sent in the Authorization header.
          type: string
          enumDescriptions:
            - Service agent auth type unspecified. Default to ID_TOKEN.
            - No token used.
            - >-
              Use [ID
              token](https://cloud.google.com/docs/authentication/token-types#id)
              generated from service agent. This can be used to access Cloud
              Function and Cloud Run after you grant Invoker role to
              `service-@gcp-sa-dialogflow.iam.gserviceaccount.com`.
            - >-
              Use [access
              token](https://cloud.google.com/docs/authentication/token-types#access)
              generated from service agent. This can be used to access other
              Google Cloud APIs after you grant required roles to
              `service-@gcp-sa-dialogflow.iam.gserviceaccount.com`.
          enum:
            - SERVICE_AGENT_AUTH_UNSPECIFIED
            - NONE
            - ID_TOKEN
            - ACCESS_TOKEN
        webhookType:
          description: Optional. Type of the webhook.
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - Represents a standard webhook.
            - Represents a flexible webhook.
          enum:
            - WEBHOOK_TYPE_UNSPECIFIED
            - STANDARD
            - FLEXIBLE
        httpMethod:
          description: >-
            Optional. HTTP method for the flexible webhook calls. Standard
            webhook always uses POST.
          type: string
          enumDescriptions:
            - HTTP method not specified.
            - HTTP POST Method.
            - HTTP GET Method.
            - HTTP HEAD Method.
            - HTTP PUT Method.
            - HTTP DELETE Method.
            - HTTP PATCH Method.
            - HTTP OPTIONS Method.
          enum:
            - HTTP_METHOD_UNSPECIFIED
            - POST
            - GET
            - HEAD
            - PUT
            - DELETE
            - PATCH
            - OPTIONS
        requestBody:
          description: >-
            Optional. Defines a custom JSON object as request body to send to
            flexible webhook.
          type: string
        parameterMapping:
          description: >-
            Optional. Maps the values extracted from specific fields of the
            flexible webhook response into session parameters. - Key: session
            parameter name - Value: field path in the webhook response
          type: object
          additionalProperties:
            type: string
    GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceOAuthConfig:
      id: GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceOAuthConfig
      description: >-
        Represents configuration of OAuth client credential flow for 3rd party
        API authentication.
      type: object
      properties:
        clientId:
          description: Required. The client ID provided by the 3rd party platform.
          type: string
        clientSecret:
          description: Required. The client secret provided by the 3rd party platform.
          type: string
        tokenEndpoint:
          description: >-
            Required. The token endpoint provided by the 3rd party platform to
            exchange an access token.
          type: string
        scopes:
          description: Optional. The OAuth scopes to grant.
          type: array
          items:
            type: string
    GoogleCloudDialogflowCxV3beta1WebhookServiceDirectoryConfig:
      id: GoogleCloudDialogflowCxV3beta1WebhookServiceDirectoryConfig
      description: >-
        Represents configuration for a [Service
        Directory](https://cloud.google.com/service-directory) service.
      type: object
      properties:
        service:
          description: >-
            Required. The name of [Service
            Directory](https://cloud.google.com/service-directory) service.
            Format: `projects//locations//namespaces//services/`. `Location ID`
            of the service directory must be the same as the location of the
            agent.
          type: string
        genericWebService:
          description: Generic Service configuration of this webhook.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowCxV3beta1WebhookGenericWebService
    GoogleCloudDialogflowCxV3beta1ConversationSignals:
      id: GoogleCloudDialogflowCxV3beta1ConversationSignals
      description: >-
        This message is used to hold all the Conversation Signals data, which
        will be converted to JSON and exported to BigQuery.
      type: object
      properties:
        turnSignals:
          description: Required. Turn signals for the current turn.
          $ref: '#/components/schemas/GoogleCloudDialogflowCxV3beta1TurnSignals'
    GoogleCloudDialogflowCxV3beta1TurnSignals:
      id: GoogleCloudDialogflowCxV3beta1TurnSignals
      description: >-
        Collection of all signals that were extracted for a single turn of the
        conversation.
      type: object
      properties:
        noMatch:
          description: Whether NLU predicted NO_MATCH.
          type: boolean
        noUserInput:
          description: Whether user provided no input.
          type: boolean
        dtmfUsed:
          description: Whether user was using DTMF input.
          type: boolean
        userEscalated:
          description: Whether user was specifically asking for a live agent.
          type: boolean
        agentEscalated:
          description: Whether agent responded with LiveAgentHandoff fulfillment.
          type: boolean
        reachedEndPage:
          description: Whether turn resulted in End Session page.
          type: boolean
        webhookStatuses:
          description: Human-readable statuses of the webhooks triggered during this turn.
          type: array
          items:
            type: string
        failureReasons:
          description: Failure reasons of the turn.
          type: array
          items:
            type: string
            enumDescriptions:
              - Failure reason is not assigned.
              - Whether NLU failed to recognize user intent.
              - Whether webhook failed during the turn.
            enum:
              - FAILURE_REASON_UNSPECIFIED
              - FAILED_INTENT
              - FAILED_WEBHOOK
        sentimentScore:
          description: >-
            Sentiment score of the user utterance if
            [sentiment](https://cloud.google.com/dialogflow/cx/docs/concept/sentiment)
            was enabled.
          type: number
          format: float
        sentimentMagnitude:
          description: >-
            Sentiment magnitude of the user utterance if
            [sentiment](https://cloud.google.com/dialogflow/cx/docs/concept/sentiment)
            was enabled.
          type: number
          format: float
    GoogleCloudDialogflowV2BatchUpdateEntityTypesResponse:
      id: GoogleCloudDialogflowV2BatchUpdateEntityTypesResponse
      description: The response message for EntityTypes.BatchUpdateEntityTypes.
      type: object
      properties:
        entityTypes:
          description: The collection of updated or created entity types.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowV2EntityType'
    GoogleCloudDialogflowV2EntityType:
      id: GoogleCloudDialogflowV2EntityType
      description: >-
        Each intent parameter has a type, called the entity type, which dictates
        exactly how data from an end-user expression is extracted. Dialogflow
        provides predefined system entities that can match many common types of
        data. For example, there are system entities for matching dates, times,
        colors, email addresses, and so on. You can also create your own custom
        entities for matching custom data. For example, you could define a
        vegetable entity that can match the types of vegetables available for
        purchase with a grocery store agent. For more information, see the
        [Entity
        guide](https://cloud.google.com/dialogflow/docs/entities-overview).
      type: object
      properties:
        name:
          description: >-
            The unique identifier of the entity type. Required for
            EntityTypes.UpdateEntityType and EntityTypes.BatchUpdateEntityTypes
            methods. Format: `projects//agent/entityTypes/`.
          type: string
        displayName:
          description: Required. The name of the entity type.
          type: string
        kind:
          description: Required. Indicates the kind of entity type.
          type: string
          enumDescriptions:
            - Not specified. This value should be never used.
            - >-
              Map entity types allow mapping of a group of synonyms to a
              reference value.
            - >-
              List entity types contain a set of entries that do not map to
              reference values. However, list entity types can contain
              references to other entity types (with or without aliases).
            - >-
              Regexp entity types allow to specify regular expressions in
              entries values.
          enum:
            - KIND_UNSPECIFIED
            - KIND_MAP
            - KIND_LIST
            - KIND_REGEXP
        autoExpansionMode:
          description: >-
            Optional. Indicates whether the entity type can be automatically
            expanded.
          type: string
          enumDescriptions:
            - Auto expansion disabled for the entity.
            - >-
              Allows an agent to recognize values that have not been explicitly
              listed in the entity.
          enum:
            - AUTO_EXPANSION_MODE_UNSPECIFIED
            - AUTO_EXPANSION_MODE_DEFAULT
        entities:
          description: >-
            Optional. The collection of entity entries associated with the
            entity type.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowV2EntityTypeEntity'
        enableFuzzyExtraction:
          description: Optional. Enables fuzzy entity extraction during classification.
          type: boolean
    GoogleCloudDialogflowV2EntityTypeEntity:
      id: GoogleCloudDialogflowV2EntityTypeEntity
      description: An **entity entry** for an associated entity type.
      type: object
      properties:
        value:
          description: >-
            Required. The primary value associated with this entity entry. For
            example, if the entity type is *vegetable*, the value could be
            *scallions*. For `KIND_MAP` entity types: * A reference value to be
            used in place of synonyms. For `KIND_LIST` entity types: * A string
            that can contain references to other entity types (with or without
            aliases).
          type: string
        synonyms:
          description: >-
            Required. A collection of value synonyms. For example, if the entity
            type is *vegetable*, and `value` is *scallions*, a synonym could be
            *green onions*. For `KIND_LIST` entity types: * This collection must
            contain exactly one synonym equal to `value`.
          type: array
          items:
            type: string
    GoogleCloudDialogflowV2BatchUpdateIntentsResponse:
      id: GoogleCloudDialogflowV2BatchUpdateIntentsResponse
      description: The response message for Intents.BatchUpdateIntents.
      type: object
      properties:
        intents:
          description: The collection of updated or created intents.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowV2Intent'
    GoogleCloudDialogflowV2Intent:
      id: GoogleCloudDialogflowV2Intent
      description: >-
        An intent categorizes an end-user's intention for one conversation turn.
        For each agent, you define many intents, where your combined intents can
        handle a complete conversation. When an end-user writes or says
        something, referred to as an end-user expression or end-user input,
        Dialogflow matches the end-user input to the best intent in your agent.
        Matching an intent is also known as intent classification. For more
        information, see the [intent
        guide](https://cloud.google.com/dialogflow/docs/intents-overview).
      type: object
      properties:
        name:
          description: >-
            Optional. The unique identifier of this intent. Required for
            Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Format:
            `projects//agent/intents/`.
          type: string
        displayName:
          description: Required. The name of this intent.
          type: string
        webhookState:
          description: Optional. Indicates whether webhooks are enabled for the intent.
          type: string
          enumDescriptions:
            - Webhook is disabled in the agent and in the intent.
            - Webhook is enabled in the agent and in the intent.
            - >-
              Webhook is enabled in the agent and in the intent. Also, each slot
              filling prompt is forwarded to the webhook.
          enum:
            - WEBHOOK_STATE_UNSPECIFIED
            - WEBHOOK_STATE_ENABLED
            - WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING
        priority:
          description: >-
            Optional. The priority of this intent. Higher numbers represent
            higher priorities. - If the supplied value is unspecified or 0, the
            service translates the value to 500,000, which corresponds to the
            `Normal` priority in the console. - If the supplied value is
            negative, the intent is ignored in runtime detect intent requests.
          type: integer
          format: int32
        isFallback:
          description: Optional. Indicates whether this is a fallback intent.
          type: boolean
        mlDisabled:
          description: >-
            Optional. Indicates whether Machine Learning is disabled for the
            intent. Note: If `ml_disabled` setting is set to true, then this
            intent is not taken into account during inference in `ML ONLY` match
            mode. Also, auto-markup in the UI is turned off.
          type: boolean
        liveAgentHandoff:
          description: >-
            Optional. Indicates that a live agent should be brought in to handle
            the interaction with the user. In most cases, when you set this flag
            to true, you would also want to set end_interaction to true as well.
            Default is false.
          type: boolean
        endInteraction:
          description: >-
            Optional. Indicates that this intent ends an interaction. Some
            integrations (e.g., Actions on Google or Dialogflow phone gateway)
            use this information to close interaction with an end user. Default
            is false.
          type: boolean
        inputContextNames:
          description: >-
            Optional. The list of context names required for this intent to be
            triggered. Format: `projects//agent/sessions/-/contexts/`.
          type: array
          items:
            type: string
        events:
          description: >-
            Optional. The collection of event names that trigger the intent. If
            the collection of input contexts is not empty, all of the contexts
            must be present in the active user session for an event to trigger
            this intent. Event names are limited to 150 characters.
          type: array
          items:
            type: string
        trainingPhrases:
          description: Optional. The collection of examples that the agent is trained on.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowV2IntentTrainingPhrase'
        action:
          description: >-
            Optional. The name of the action associated with the intent. Note:
            The action name must not contain whitespaces.
          type: string
        outputContexts:
          description: >-
            Optional. The collection of contexts that are activated when the
            intent is matched. Context messages in this collection should not
            set the parameters field. Setting the `lifespan_count` to 0 will
            reset the context when the intent is matched. Format:
            `projects//agent/sessions/-/contexts/`.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowV2Context'
        resetContexts:
          description: >-
            Optional. Indicates whether to delete all contexts in the current
            session when this intent is matched.
          type: boolean
        parameters:
          description: Optional. The collection of parameters associated with the intent.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowV2IntentParameter'
        messages:
          description: >-
            Optional. The collection of rich messages corresponding to the
            `Response` field in the Dialogflow console.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowV2IntentMessage'
        defaultResponsePlatforms:
          description: >-
            Optional. The list of platforms for which the first responses will
            be copied from the messages in PLATFORM_UNSPECIFIED (i.e. default
            platform).
          type: array
          items:
            type: string
            enumDescriptions:
              - Default platform.
              - Facebook.
              - Slack.
              - Telegram.
              - Kik.
              - Skype.
              - Line.
              - Viber.
              - >-
                Google Assistant See [Dialogflow webhook
                format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)
              - Google Hangouts.
            enum:
              - PLATFORM_UNSPECIFIED
              - FACEBOOK
              - SLACK
              - TELEGRAM
              - KIK
              - SKYPE
              - LINE
              - VIBER
              - ACTIONS_ON_GOOGLE
              - GOOGLE_HANGOUTS
        rootFollowupIntentName:
          description: >-
            Output only. Read-only. The unique identifier of the root intent in
            the chain of followup intents. It identifies the correct followup
            intents chain for this intent. We populate this field only in the
            output. Format: `projects//agent/intents/`.
          readOnly: true
          type: string
        parentFollowupIntentName:
          description: >-
            Read-only after creation. The unique identifier of the parent intent
            in the chain of followup intents. You can set this field when
            creating an intent, for example with CreateIntent or
            BatchUpdateIntents, in order to make this intent a followup intent.
            It identifies the parent followup intent. Format:
            `projects//agent/intents/`.
          type: string
        followupIntentInfo:
          description: >-
            Output only. Read-only. Information about all followup intents that
            have this intent as a direct or indirect parent. We populate this
            field only in the output.
          readOnly: true
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2IntentFollowupIntentInfo
    GoogleCloudDialogflowV2IntentTrainingPhrase:
      id: GoogleCloudDialogflowV2IntentTrainingPhrase
      description: Represents an example that the agent is trained on.
      type: object
      properties:
        name:
          description: Output only. The unique identifier of this training phrase.
          type: string
        type:
          description: Required. The type of the training phrase.
          type: string
          enumDescriptions:
            - Not specified. This value should never be used.
            - >-
              Examples do not contain @-prefixed entity type names, but example
              parts can be annotated with entity types.
            - >-
              Templates are not annotated with entity types, but they can
              contain @-prefixed entity type names as substrings. Template mode
              has been deprecated. Example mode is the only supported way to
              create new training phrases. If you have existing training phrases
              that you've created in template mode, those will continue to work.
          enumDeprecated:
            - false
            - false
            - true
          enum:
            - TYPE_UNSPECIFIED
            - EXAMPLE
            - TEMPLATE
        parts:
          description: >-
            Required. The ordered list of training phrase parts. The parts are
            concatenated in order to form the training phrase. Note: The API
            does not automatically annotate training phrases like the Dialogflow
            Console does. Note: Do not forget to include whitespace at part
            boundaries, so the training phrase is well formatted when the parts
            are concatenated. If the training phrase does not need to be
            annotated with parameters, you just need a single part with only the
            Part.text field set. If you want to annotate the training phrase,
            you must create multiple parts, where the fields of each part are
            populated in one of two ways: - `Part.text` is set to a part of the
            phrase that has no parameters. - `Part.text` is set to a part of the
            phrase that you want to annotate, and the `entity_type`, `alias`,
            and `user_defined` fields are all set.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2IntentTrainingPhrasePart
        timesAddedCount:
          description: >-
            Optional. Indicates how many times this example was added to the
            intent. Each time a developer adds an existing sample by editing an
            intent or training, this counter is increased.
          type: integer
          format: int32
    GoogleCloudDialogflowV2IntentTrainingPhrasePart:
      id: GoogleCloudDialogflowV2IntentTrainingPhrasePart
      description: Represents a part of a training phrase.
      type: object
      properties:
        text:
          description: Required. The text for this part.
          type: string
        entityType:
          description: >-
            Optional. The entity type name prefixed with `@`. This field is
            required for annotated parts of the training phrase.
          type: string
        alias:
          description: >-
            Optional. The parameter name for the value extracted from the
            annotated part of the example. This field is required for annotated
            parts of the training phrase.
          type: string
        userDefined:
          description: >-
            Optional. Indicates whether the text was manually annotated. This
            field is set to true when the Dialogflow Console is used to manually
            annotate the part. When creating an annotated part with the API, you
            must set this to true.
          type: boolean
    GoogleCloudDialogflowV2Context:
      id: GoogleCloudDialogflowV2Context
      description: >-
        Dialogflow contexts are similar to natural language context. If a person
        says to you "they are orange", you need context in order to understand
        what "they" is referring to. Similarly, for Dialogflow to handle an
        end-user expression like that, it needs to be provided with context in
        order to correctly match an intent. Using contexts, you can control the
        flow of a conversation. You can configure contexts for an intent by
        setting input and output contexts, which are identified by string names.
        When an intent is matched, any configured output contexts for that
        intent become active. While any contexts are active, Dialogflow is more
        likely to match intents that are configured with input contexts that
        correspond to the currently active contexts. For more information about
        context, see the [Contexts
        guide](https://cloud.google.com/dialogflow/docs/contexts-overview).
      type: object
      properties:
        name:
          description: >-
            Required. The unique identifier of the context. Format:
            `projects//agent/sessions//contexts/`, or
            `projects//agent/environments//users//sessions//contexts/`. The
            `Context ID` is always converted to lowercase, may only contain
            characters in `a-zA-Z0-9_-%` and may be at most 250 bytes long. If
            `Environment ID` is not specified, we assume default 'draft'
            environment. If `User ID` is not specified, we assume default '-'
            user. The following context names are reserved for internal use by
            Dialogflow. You should not use these contexts or create contexts
            with these names: * `__system_counters__` * `*_id_dialog_context` *
            `*_dialog_params_size`
          type: string
        lifespanCount:
          description: >-
            Optional. The number of conversational query requests after which
            the context expires. The default is `0`. If set to `0`, the context
            expires immediately. Contexts expire automatically after 20 minutes
            if there are no matching queries.
          type: integer
          format: int32
        parameters:
          description: >-
            Optional. The collection of parameters associated with this context.
            Depending on your protocol or client library language, this is a
            map, associative array, symbol table, dictionary, or JSON object
            composed of a collection of (MapKey, MapValue) pairs: * MapKey type:
            string * MapKey value: parameter name * MapValue type: If
            parameter's entity type is a composite entity then use map,
            otherwise, depending on the parameter value type, it could be one of
            string, number, boolean, null, list or map. * MapValue value: If
            parameter's entity type is a composite entity then use map from
            composite entity property names to property values, otherwise, use
            parameter value.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
    GoogleCloudDialogflowV2IntentParameter:
      id: GoogleCloudDialogflowV2IntentParameter
      description: Represents intent parameters.
      type: object
      properties:
        name:
          description: The unique identifier of this parameter.
          type: string
        displayName:
          description: Required. The name of the parameter.
          type: string
        value:
          description: >-
            Optional. The definition of the parameter value. It can be: - a
            constant string, - a parameter value defined as `$parameter_name`, -
            an original parameter value defined as `$parameter_name.original`, -
            a parameter value from some context defined as
            `#context_name.parameter_name`.
          type: string
        defaultValue:
          description: >-
            Optional. The default value to use when the `value` yields an empty
            result. Default values can be extracted from contexts by using the
            following syntax: `#context_name.parameter_name`.
          type: string
        entityTypeDisplayName:
          description: >-
            Optional. The name of the entity type, prefixed with `@`, that
            describes values of the parameter. If the parameter is required,
            this must be provided.
          type: string
        mandatory:
          description: >-
            Optional. Indicates whether the parameter is required. That is,
            whether the intent cannot be completed without collecting the
            parameter value.
          type: boolean
        prompts:
          description: >-
            Optional. The collection of prompts that the agent can present to
            the user in order to collect a value for the parameter.
          type: array
          items:
            type: string
        isList:
          description: >-
            Optional. Indicates whether the parameter represents a list of
            values.
          type: boolean
    GoogleCloudDialogflowV2IntentMessage:
      id: GoogleCloudDialogflowV2IntentMessage
      description: >-
        A rich response message. Corresponds to the intent `Response` field in
        the Dialogflow console. For more information, see [Rich response
        messages](https://cloud.google.com/dialogflow/docs/intents-rich-messages).
      type: object
      properties:
        text:
          description: The text response.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2IntentMessageText'
        image:
          description: The image response.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2IntentMessageImage'
        quickReplies:
          description: The quick replies response.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2IntentMessageQuickReplies
        card:
          description: The card response.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2IntentMessageCard'
        payload:
          description: A custom platform-specific response.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        simpleResponses:
          description: The voice and text-only responses for Actions on Google.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2IntentMessageSimpleResponses
        basicCard:
          description: The basic card response for Actions on Google.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2IntentMessageBasicCard'
        suggestions:
          description: The suggestion chips for Actions on Google.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2IntentMessageSuggestions'
        linkOutSuggestion:
          description: The link out suggestion chip for Actions on Google.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion
        listSelect:
          description: The list card response for Actions on Google.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2IntentMessageListSelect'
        carouselSelect:
          description: The carousel card response for Actions on Google.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2IntentMessageCarouselSelect
        browseCarouselCard:
          description: Browse carousel card for Actions on Google.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard
        tableCard:
          description: Table card for Actions on Google.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2IntentMessageTableCard'
        mediaContent:
          description: The media content card for Actions on Google.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2IntentMessageMediaContent
        platform:
          description: Optional. The platform that this message is intended for.
          type: string
          enumDescriptions:
            - Default platform.
            - Facebook.
            - Slack.
            - Telegram.
            - Kik.
            - Skype.
            - Line.
            - Viber.
            - >-
              Google Assistant See [Dialogflow webhook
              format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)
            - Google Hangouts.
          enum:
            - PLATFORM_UNSPECIFIED
            - FACEBOOK
            - SLACK
            - TELEGRAM
            - KIK
            - SKYPE
            - LINE
            - VIBER
            - ACTIONS_ON_GOOGLE
            - GOOGLE_HANGOUTS
    GoogleCloudDialogflowV2IntentMessageText:
      id: GoogleCloudDialogflowV2IntentMessageText
      description: The text response message.
      type: object
      properties:
        text:
          description: Optional. The collection of the agent's responses.
          type: array
          items:
            type: string
    GoogleCloudDialogflowV2IntentMessageImage:
      id: GoogleCloudDialogflowV2IntentMessageImage
      description: The image response message.
      type: object
      properties:
        imageUri:
          description: Optional. The public URI to an image file.
          type: string
        accessibilityText:
          description: >-
            Optional. A text description of the image to be used for
            accessibility, e.g., screen readers.
          type: string
    GoogleCloudDialogflowV2IntentMessageQuickReplies:
      id: GoogleCloudDialogflowV2IntentMessageQuickReplies
      description: The quick replies response message.
      type: object
      properties:
        title:
          description: Optional. The title of the collection of quick replies.
          type: string
        quickReplies:
          description: Optional. The collection of quick replies.
          type: array
          items:
            type: string
    GoogleCloudDialogflowV2IntentMessageCard:
      id: GoogleCloudDialogflowV2IntentMessageCard
      description: The card response message.
      type: object
      properties:
        title:
          description: Optional. The title of the card.
          type: string
        subtitle:
          description: Optional. The subtitle of the card.
          type: string
        imageUri:
          description: Optional. The public URI to an image file for the card.
          type: string
        buttons:
          description: Optional. The collection of card buttons.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2IntentMessageCardButton
    GoogleCloudDialogflowV2IntentMessageCardButton:
      id: GoogleCloudDialogflowV2IntentMessageCardButton
      description: Contains information about a button.
      type: object
      properties:
        text:
          description: Optional. The text to show on the button.
          type: string
        postback:
          description: >-
            Optional. The text to send back to the Dialogflow API or a URI to
            open.
          type: string
    GoogleCloudDialogflowV2IntentMessageSimpleResponses:
      id: GoogleCloudDialogflowV2IntentMessageSimpleResponses
      description: >-
        The collection of simple response candidates. This message in
        `QueryResult.fulfillment_messages` and
        `WebhookResponse.fulfillment_messages` should contain only one
        `SimpleResponse`.
      type: object
      properties:
        simpleResponses:
          description: Required. The list of simple responses.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2IntentMessageSimpleResponse
    GoogleCloudDialogflowV2IntentMessageSimpleResponse:
      id: GoogleCloudDialogflowV2IntentMessageSimpleResponse
      description: The simple response message containing speech or text.
      type: object
      properties:
        textToSpeech:
          description: >-
            One of text_to_speech or ssml must be provided. The plain text of
            the speech output. Mutually exclusive with ssml.
          type: string
        ssml:
          description: >-
            One of text_to_speech or ssml must be provided. Structured spoken
            response to the user in the SSML format. Mutually exclusive with
            text_to_speech.
          type: string
        displayText:
          description: Optional. The text to display.
          type: string
    GoogleCloudDialogflowV2IntentMessageBasicCard:
      id: GoogleCloudDialogflowV2IntentMessageBasicCard
      description: The basic card message. Useful for displaying information.
      type: object
      properties:
        title:
          description: Optional. The title of the card.
          type: string
        subtitle:
          description: Optional. The subtitle of the card.
          type: string
        formattedText:
          description: Required, unless image is present. The body text of the card.
          type: string
        image:
          description: Optional. The image for the card.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2IntentMessageImage'
        buttons:
          description: Optional. The collection of card buttons.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2IntentMessageBasicCardButton
    GoogleCloudDialogflowV2IntentMessageBasicCardButton:
      id: GoogleCloudDialogflowV2IntentMessageBasicCardButton
      description: The button object that appears at the bottom of a card.
      type: object
      properties:
        title:
          description: Required. The title of the button.
          type: string
        openUriAction:
          description: Required. Action to take when a user taps on the button.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2IntentMessageBasicCardButtonOpenUriAction
    GoogleCloudDialogflowV2IntentMessageBasicCardButtonOpenUriAction:
      id: GoogleCloudDialogflowV2IntentMessageBasicCardButtonOpenUriAction
      description: Opens the given URI.
      type: object
      properties:
        uri:
          description: Required. The HTTP or HTTPS scheme URI.
          type: string
    GoogleCloudDialogflowV2IntentMessageSuggestions:
      id: GoogleCloudDialogflowV2IntentMessageSuggestions
      description: The collection of suggestions.
      type: object
      properties:
        suggestions:
          description: Required. The list of suggested replies.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2IntentMessageSuggestion
    GoogleCloudDialogflowV2IntentMessageSuggestion:
      id: GoogleCloudDialogflowV2IntentMessageSuggestion
      description: >-
        The suggestion chip message that the user can tap to quickly post a
        reply to the conversation.
      type: object
      properties:
        title:
          description: Required. The text shown the in the suggestion chip.
          type: string
    GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion:
      id: GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion
      description: >-
        The suggestion chip message that allows the user to jump out to the app
        or website associated with this agent.
      type: object
      properties:
        destinationName:
          description: Required. The name of the app or site this chip is linking to.
          type: string
        uri:
          description: >-
            Required. The URI of the app or site to open when the user taps the
            suggestion chip.
          type: string
    GoogleCloudDialogflowV2IntentMessageListSelect:
      id: GoogleCloudDialogflowV2IntentMessageListSelect
      description: The card for presenting a list of options to select from.
      type: object
      properties:
        title:
          description: Optional. The overall title of the list.
          type: string
        items:
          description: Required. List items.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2IntentMessageListSelectItem
        subtitle:
          description: Optional. Subtitle of the list.
          type: string
    GoogleCloudDialogflowV2IntentMessageListSelectItem:
      id: GoogleCloudDialogflowV2IntentMessageListSelectItem
      description: An item in the list.
      type: object
      properties:
        info:
          description: Required. Additional information about this option.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2IntentMessageSelectItemInfo
        title:
          description: Required. The title of the list item.
          type: string
        description:
          description: Optional. The main text describing the item.
          type: string
        image:
          description: Optional. The image to display.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2IntentMessageImage'
    GoogleCloudDialogflowV2IntentMessageSelectItemInfo:
      id: GoogleCloudDialogflowV2IntentMessageSelectItemInfo
      description: >-
        Additional info about the select item for when it is triggered in a
        dialog.
      type: object
      properties:
        key:
          description: >-
            Required. A unique key that will be sent back to the agent if this
            response is given.
          type: string
        synonyms:
          description: >-
            Optional. A list of synonyms that can also be used to trigger this
            item in dialog.
          type: array
          items:
            type: string
    GoogleCloudDialogflowV2IntentMessageCarouselSelect:
      id: GoogleCloudDialogflowV2IntentMessageCarouselSelect
      description: The card for presenting a carousel of options to select from.
      type: object
      properties:
        items:
          description: Required. Carousel items.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2IntentMessageCarouselSelectItem
    GoogleCloudDialogflowV2IntentMessageCarouselSelectItem:
      id: GoogleCloudDialogflowV2IntentMessageCarouselSelectItem
      description: An item in the carousel.
      type: object
      properties:
        info:
          description: Required. Additional info about the option item.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2IntentMessageSelectItemInfo
        title:
          description: Required. Title of the carousel item.
          type: string
        description:
          description: Optional. The body text of the card.
          type: string
        image:
          description: Optional. The image to display.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2IntentMessageImage'
    GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard:
      id: GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard
      description: >-
        Browse Carousel Card for Actions on Google.
        https://developers.google.com/actions/assistant/responses#browsing_carousel
      type: object
      properties:
        items:
          description: >-
            Required. List of items in the Browse Carousel Card. Minimum of two
            items, maximum of ten.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem
        imageDisplayOptions:
          description: >-
            Optional. Settings for displaying the image. Applies to every image
            in items.
          type: string
          enumDescriptions:
            - >-
              Fill the gaps between the image and the image container with gray
              bars.
            - >-
              Fill the gaps between the image and the image container with gray
              bars.
            - >-
              Fill the gaps between the image and the image container with white
              bars.
            - >-
              Image is scaled such that the image width and height match or
              exceed the container dimensions. This may crop the top and bottom
              of the image if the scaled image height is greater than the
              container height, or crop the left and right of the image if the
              scaled image width is greater than the container width. This is
              similar to "Zoom Mode" on a widescreen TV when playing a 4:3
              video.
            - >-
              Pad the gaps between image and image frame with a blurred copy of
              the same image.
          enum:
            - IMAGE_DISPLAY_OPTIONS_UNSPECIFIED
            - GRAY
            - WHITE
            - CROPPED
            - BLURRED_BACKGROUND
    GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem:
      id: >-
        GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem
      description: Browsing carousel tile
      type: object
      properties:
        openUriAction:
          description: Required. Action to present to the user.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction
        title:
          description: Required. Title of the carousel item. Maximum of two lines of text.
          type: string
        description:
          description: >-
            Optional. Description of the carousel item. Maximum of four lines of
            text.
          type: string
        image:
          description: Optional. Hero image for the carousel item.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2IntentMessageImage'
        footer:
          description: >-
            Optional. Text that appears at the bottom of the Browse Carousel
            Card. Maximum of one line of text.
          type: string
    GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction:
      id: >-
        GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction
      description: Actions on Google action to open a given url.
      type: object
      properties:
        url:
          description: Required. URL
          type: string
        urlTypeHint:
          description: >-
            Optional. Specifies the type of viewer that is used when opening the
            URL. Defaults to opening via web browser.
          type: string
          enumDescriptions:
            - Unspecified
            - Url would be an amp action
            - >-
              URL that points directly to AMP content, or to a canonical URL
              which refers to AMP content via .
          enum:
            - URL_TYPE_HINT_UNSPECIFIED
            - AMP_ACTION
            - AMP_CONTENT
    GoogleCloudDialogflowV2IntentMessageTableCard:
      id: GoogleCloudDialogflowV2IntentMessageTableCard
      description: Table card for Actions on Google.
      type: object
      properties:
        title:
          description: Required. Title of the card.
          type: string
        subtitle:
          description: Optional. Subtitle to the title.
          type: string
        image:
          description: Optional. Image which should be displayed on the card.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2IntentMessageImage'
        columnProperties:
          description: Optional. Display properties for the columns in this table.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2IntentMessageColumnProperties
        rows:
          description: Optional. Rows in this table of data.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2IntentMessageTableCardRow
        buttons:
          description: Optional. List of buttons for the card.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2IntentMessageBasicCardButton
    GoogleCloudDialogflowV2IntentMessageColumnProperties:
      id: GoogleCloudDialogflowV2IntentMessageColumnProperties
      description: Column properties for TableCard.
      type: object
      properties:
        header:
          description: Required. Column heading.
          type: string
        horizontalAlignment:
          description: Optional. Defines text alignment for all cells in this column.
          type: string
          enumDescriptions:
            - Text is aligned to the leading edge of the column.
            - Text is aligned to the leading edge of the column.
            - Text is centered in the column.
            - Text is aligned to the trailing edge of the column.
          enum:
            - HORIZONTAL_ALIGNMENT_UNSPECIFIED
            - LEADING
            - CENTER
            - TRAILING
    GoogleCloudDialogflowV2IntentMessageTableCardRow:
      id: GoogleCloudDialogflowV2IntentMessageTableCardRow
      description: Row of TableCard.
      type: object
      properties:
        cells:
          description: Optional. List of cells that make up this row.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2IntentMessageTableCardCell
        dividerAfter:
          description: Optional. Whether to add a visual divider after this row.
          type: boolean
    GoogleCloudDialogflowV2IntentMessageTableCardCell:
      id: GoogleCloudDialogflowV2IntentMessageTableCardCell
      description: Cell of TableCardRow.
      type: object
      properties:
        text:
          description: Required. Text in this cell.
          type: string
    GoogleCloudDialogflowV2IntentMessageMediaContent:
      id: GoogleCloudDialogflowV2IntentMessageMediaContent
      description: The media content card for Actions on Google.
      type: object
      properties:
        mediaType:
          description: Optional. What type of media is the content (ie "audio").
          type: string
          enumDescriptions:
            - Unspecified.
            - Response media type is audio.
          enum:
            - RESPONSE_MEDIA_TYPE_UNSPECIFIED
            - AUDIO
        mediaObjects:
          description: Required. List of media objects.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject
    GoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject:
      id: GoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject
      description: Response media object for media content card.
      type: object
      properties:
        name:
          description: Required. Name of media card.
          type: string
        description:
          description: Optional. Description of media card.
          type: string
        largeImage:
          description: Optional. Image to display above media content.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2IntentMessageImage'
        icon:
          description: Optional. Icon to display above media content.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2IntentMessageImage'
        contentUrl:
          description: Required. Url where the media is stored.
          type: string
    GoogleCloudDialogflowV2IntentFollowupIntentInfo:
      id: GoogleCloudDialogflowV2IntentFollowupIntentInfo
      description: Represents a single followup intent in the chain.
      type: object
      properties:
        followupIntentName:
          description: >-
            The unique identifier of the followup intent. Format:
            `projects//agent/intents/`.
          type: string
        parentFollowupIntentName:
          description: >-
            The unique identifier of the followup intent's parent. Format:
            `projects//agent/intents/`.
          type: string
    GoogleCloudDialogflowV2ClearSuggestionFeatureConfigOperationMetadata:
      id: GoogleCloudDialogflowV2ClearSuggestionFeatureConfigOperationMetadata
      description: >-
        Metadata for a ConversationProfile.ClearSuggestionFeatureConfig
        operation.
      type: object
      properties:
        conversationProfile:
          description: >-
            The resource name of the conversation profile. Format:
            `projects//locations//conversationProfiles/`
          type: string
        participantRole:
          description: >-
            Required. The participant role to remove the suggestion feature
            config. Only HUMAN_AGENT or END_USER can be used.
          type: string
          enumDescriptions:
            - Participant role not set.
            - Participant is a human agent.
            - Participant is an automated agent, such as a Dialogflow agent.
            - >-
              Participant is an end user that has called or chatted with
              Dialogflow services.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
        suggestionFeatureType:
          description: Required. The type of the suggestion feature to remove.
          type: string
          enumDescriptions:
            - Unspecified feature type.
            - Run article suggestion model for chat.
            - Run FAQ model for chat.
            - Run smart reply model for chat.
            - >-
              Run knowledge search with text input from agent or text generated
              query.
            - Run knowledge assist with automatic query generation.
          enum:
            - TYPE_UNSPECIFIED
            - ARTICLE_SUGGESTION
            - FAQ
            - SMART_REPLY
            - KNOWLEDGE_SEARCH
            - KNOWLEDGE_ASSIST
        createTime:
          description: >-
            Timestamp whe the request was created. The time is measured on
            server side.
          type: string
          format: google-datetime
    GoogleCloudDialogflowV2ConversationEvent:
      id: GoogleCloudDialogflowV2ConversationEvent
      description: >-
        Represents a notification sent to Pub/Sub subscribers for conversation
        lifecycle events.
      type: object
      properties:
        conversation:
          description: >-
            The unique identifier of the conversation this notification refers
            to. Format: `projects//conversations/`.
          type: string
        type:
          description: The type of the event that this notification refers to.
          type: string
          enumDescriptions:
            - Type not set.
            - >-
              A new conversation has been opened. This is fired when a telephone
              call is answered, or a conversation is created via the API.
            - >-
              An existing conversation has closed. This is fired when a
              telephone call is terminated, or a conversation is closed via the
              API.
            - >-
              An existing conversation has received notification from Dialogflow
              that human intervention is required.
            - >-
              An existing conversation has received a new message, either from
              API or telephony. It is configured in
              ConversationProfile.new_message_event_notification_config
            - >-
              Unrecoverable error during a telephone call. In general
              non-recoverable errors only occur if something was misconfigured
              in the ConversationProfile corresponding to the call. After a
              non-recoverable error, Dialogflow may stop responding. We don't
              fire this event: * in an API call because we can directly return
              the error, or, * when we can recover from an error.
          enum:
            - TYPE_UNSPECIFIED
            - CONVERSATION_STARTED
            - CONVERSATION_FINISHED
            - HUMAN_INTERVENTION_NEEDED
            - NEW_MESSAGE
            - UNRECOVERABLE_ERROR
        errorStatus:
          description: >-
            More detailed information about an error. Only set for type
            UNRECOVERABLE_ERROR_IN_PHONE_CALL.
          $ref: '#/components/schemas/GoogleRpcStatus'
        newMessagePayload:
          description: Payload of NEW_MESSAGE event.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2Message'
    GoogleCloudDialogflowV2Message:
      id: GoogleCloudDialogflowV2Message
      description: Represents a message posted into a conversation.
      type: object
      properties:
        name:
          description: >-
            Optional. The unique identifier of the message. Format:
            `projects//locations//conversations//messages/`.
          type: string
        content:
          description: Required. The message content.
          type: string
        languageCode:
          description: >-
            Optional. The message language. This should be a
            [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag.
            Example: "en-US".
          type: string
        participant:
          description: Output only. The participant that sends this message.
          readOnly: true
          type: string
        participantRole:
          description: Output only. The role of the participant.
          readOnly: true
          type: string
          enumDescriptions:
            - Participant role not set.
            - Participant is a human agent.
            - Participant is an automated agent, such as a Dialogflow agent.
            - >-
              Participant is an end user that has called or chatted with
              Dialogflow services.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
        createTime:
          description: >-
            Output only. The time when the message was created in Contact Center
            AI.
          readOnly: true
          type: string
          format: google-datetime
        sendTime:
          description: Optional. The time when the message was sent.
          type: string
          format: google-datetime
        messageAnnotation:
          description: Output only. The annotation for the message.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDialogflowV2MessageAnnotation'
        sentimentAnalysis:
          description: Output only. The sentiment analysis result for the message.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDialogflowV2SentimentAnalysisResult'
    GoogleCloudDialogflowV2MessageAnnotation:
      id: GoogleCloudDialogflowV2MessageAnnotation
      description: Represents the result of annotation for the message.
      type: object
      properties:
        parts:
          description: >-
            The collection of annotated message parts ordered by their position
            in the message. You can recover the annotated message by
            concatenating [AnnotatedMessagePart.text].
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowV2AnnotatedMessagePart'
        containEntities:
          description: Indicates whether the text message contains entities.
          type: boolean
    GoogleCloudDialogflowV2AnnotatedMessagePart:
      id: GoogleCloudDialogflowV2AnnotatedMessagePart
      description: >-
        Represents a part of a message possibly annotated with an entity. The
        part can be an entity or purely a part of the message between two
        entities or message start/end.
      type: object
      properties:
        text:
          description: A part of a message possibly annotated with an entity.
          type: string
        entityType:
          description: >-
            The [Dialogflow system entity
            type](https://cloud.google.com/dialogflow/docs/reference/system-entities)
            of this message part. If this is empty, Dialogflow could not
            annotate the phrase part with a system entity.
          type: string
        formattedValue:
          description: >-
            The [Dialogflow system entity formatted value
            ](https://cloud.google.com/dialogflow/docs/reference/system-entities)
            of this message part. For example for a system entity of type
            `@sys.unit-currency`, this may contain: { "amount": 5, "currency":
            "USD" } 
          type: any
    GoogleCloudDialogflowV2SentimentAnalysisResult:
      id: GoogleCloudDialogflowV2SentimentAnalysisResult
      description: >-
        The result of sentiment analysis. Sentiment analysis inspects user input
        and identifies the prevailing subjective opinion, especially to
        determine a user's attitude as positive, negative, or neutral. For
        Participants.DetectIntent, it needs to be configured in
        DetectIntentRequest.query_params. For
        Participants.StreamingDetectIntent, it needs to be configured in
        StreamingDetectIntentRequest.query_params. And for
        Participants.AnalyzeContent and Participants.StreamingAnalyzeContent, it
        needs to be configured in
        ConversationProfile.human_agent_assistant_config
      type: object
      properties:
        queryTextSentiment:
          description: The sentiment analysis result for `query_text`.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2Sentiment'
    GoogleCloudDialogflowV2Sentiment:
      id: GoogleCloudDialogflowV2Sentiment
      description: >-
        The sentiment, such as positive/negative feeling or association, for a
        unit of analysis, such as the query text. See:
        https://cloud.google.com/natural-language/docs/basics#interpreting_sentiment_analysis_values
        for how to interpret the result.
      type: object
      properties:
        score:
          description: >-
            Sentiment score between -1.0 (negative sentiment) and 1.0 (positive
            sentiment).
          type: number
          format: float
        magnitude:
          description: >-
            A non-negative number in the [0, +inf) range, which represents the
            absolute magnitude of sentiment, regardless of score (positive or
            negative).
          type: number
          format: float
    GoogleCloudDialogflowV2ExportAgentResponse:
      id: GoogleCloudDialogflowV2ExportAgentResponse
      description: The response message for Agents.ExportAgent.
      type: object
      properties:
        agentUri:
          description: >-
            The URI to a file containing the exported agent. This field is
            populated only if `agent_uri` is specified in `ExportAgentRequest`.
          type: string
        agentContent:
          description: Zip compressed raw byte content for agent.
          type: string
          format: byte
    GoogleCloudDialogflowV2HumanAgentAssistantEvent:
      id: GoogleCloudDialogflowV2HumanAgentAssistantEvent
      description: >-
        Represents a notification sent to Cloud Pub/Sub subscribers for human
        agent assistant events in a specific conversation.
      type: object
      properties:
        conversation:
          description: >-
            The conversation this notification refers to. Format:
            `projects//conversations/`.
          type: string
        participant:
          description: >-
            The participant that the suggestion is compiled for. Format:
            `projects//conversations//participants/`. It will not be set in
            legacy workflow.
          type: string
        suggestionResults:
          description: The suggestion results payload that this notification refers to.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowV2SuggestionResult'
    GoogleCloudDialogflowV2SuggestionResult:
      id: GoogleCloudDialogflowV2SuggestionResult
      description: >-
        One response of different type of suggestion response which is used in
        the response of Participants.AnalyzeContent and
        Participants.AnalyzeContent, as well as HumanAgentAssistantEvent.
      type: object
      properties:
        error:
          description: Error status if the request failed.
          $ref: '#/components/schemas/GoogleRpcStatus'
        suggestArticlesResponse:
          description: SuggestArticlesResponse if request is for ARTICLE_SUGGESTION.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2SuggestArticlesResponse'
        suggestKnowledgeAssistResponse:
          description: SuggestKnowledgeAssistResponse if request is for KNOWLEDGE_ASSIST.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2SuggestKnowledgeAssistResponse
        suggestFaqAnswersResponse:
          description: SuggestFaqAnswersResponse if request is for FAQ_ANSWER.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2SuggestFaqAnswersResponse
        suggestSmartRepliesResponse:
          description: SuggestSmartRepliesResponse if request is for SMART_REPLY.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2SuggestSmartRepliesResponse
    GoogleCloudDialogflowV2SuggestArticlesResponse:
      id: GoogleCloudDialogflowV2SuggestArticlesResponse
      description: The response message for Participants.SuggestArticles.
      type: object
      properties:
        articleAnswers:
          description: Articles ordered by score in descending order.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowV2ArticleAnswer'
        latestMessage:
          description: >-
            The name of the latest conversation message used to compile
            suggestion for. Format:
            `projects//locations//conversations//messages/`.
          type: string
        contextSize:
          description: >-
            Number of messages prior to and including latest_message to compile
            the suggestion. It may be smaller than the
            SuggestArticlesRequest.context_size field in the request if there
            aren't that many messages in the conversation.
          type: integer
          format: int32
    GoogleCloudDialogflowV2ArticleAnswer:
      id: GoogleCloudDialogflowV2ArticleAnswer
      description: Represents article answer.
      type: object
      properties:
        title:
          description: The article title.
          type: string
        uri:
          description: The article URI.
          type: string
        snippets:
          description: Article snippets.
          type: array
          items:
            type: string
        confidence:
          description: >-
            Article match confidence. The system's confidence score that this
            article is a good match for this conversation, as a value from 0.0
            (completely uncertain) to 1.0 (completely certain).
          type: number
          format: float
        metadata:
          description: >-
            A map that contains metadata about the answer and the document from
            which it originates.
          type: object
          additionalProperties:
            type: string
        answerRecord:
          description: >-
            The name of answer record, in the format of
            "projects//locations//answerRecords/"
          type: string
    GoogleCloudDialogflowV2SuggestKnowledgeAssistResponse:
      id: GoogleCloudDialogflowV2SuggestKnowledgeAssistResponse
      description: The response message for Participants.SuggestKnowledgeAssist.
      type: object
      properties:
        knowledgeAssistAnswer:
          description: Output only. Knowledge Assist suggestion.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDialogflowV2KnowledgeAssistAnswer'
        latestMessage:
          description: >-
            The name of the latest conversation message used to compile
            suggestion for. Format:
            `projects//locations//conversations//messages/`.
          type: string
        contextSize:
          description: >-
            Number of messages prior to and including latest_message to compile
            the suggestion. It may be smaller than the
            SuggestKnowledgeAssistRequest.context_size field in the request if
            there are fewer messages in the conversation.
          type: integer
          format: int32
    GoogleCloudDialogflowV2KnowledgeAssistAnswer:
      id: GoogleCloudDialogflowV2KnowledgeAssistAnswer
      description: Represents a Knowledge Assist answer.
      type: object
      properties:
        suggestedQuery:
          description: >-
            The query suggested based on the context. Suggestion is made only if
            it is different from the previous suggestion.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2KnowledgeAssistAnswerSuggestedQuery
        suggestedQueryAnswer:
          description: >-
            The answer generated for the suggested query. Whether or not an
            answer is generated depends on how confident we are about the
            generated query.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2KnowledgeAssistAnswerKnowledgeAnswer
        answerRecord:
          description: >-
            The name of the answer record. Format: `projects//locations//answer
            Records/`.
          type: string
    GoogleCloudDialogflowV2KnowledgeAssistAnswerSuggestedQuery:
      id: GoogleCloudDialogflowV2KnowledgeAssistAnswerSuggestedQuery
      description: Represents a suggested query.
      type: object
      properties:
        queryText:
          description: Suggested query text.
          type: string
    GoogleCloudDialogflowV2KnowledgeAssistAnswerKnowledgeAnswer:
      id: GoogleCloudDialogflowV2KnowledgeAssistAnswerKnowledgeAnswer
      description: >-
        Represents an answer from Knowledge. Currently supports FAQ and
        Generative answers.
      type: object
      properties:
        answerText:
          description: >-
            The piece of text from the `source` that answers this suggested
            query.
          type: string
        faqSource:
          description: Populated if the prediction came from FAQ.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2KnowledgeAssistAnswerKnowledgeAnswerFaqSource
        generativeSource:
          description: Populated if the prediction was Generative.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2KnowledgeAssistAnswerKnowledgeAnswerGenerativeSource
    GoogleCloudDialogflowV2KnowledgeAssistAnswerKnowledgeAnswerFaqSource:
      id: GoogleCloudDialogflowV2KnowledgeAssistAnswerKnowledgeAnswerFaqSource
      description: Details about source of FAQ answer.
      type: object
      properties:
        question:
          description: The corresponding FAQ question.
          type: string
    GoogleCloudDialogflowV2KnowledgeAssistAnswerKnowledgeAnswerGenerativeSource:
      id: >-
        GoogleCloudDialogflowV2KnowledgeAssistAnswerKnowledgeAnswerGenerativeSource
      description: Details about source of Generative answer.
      type: object
      properties:
        snippets:
          description: >-
            All snippets used for this Generative Prediction, with their source
            URI and data.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2KnowledgeAssistAnswerKnowledgeAnswerGenerativeSourceSnippet
    GoogleCloudDialogflowV2KnowledgeAssistAnswerKnowledgeAnswerGenerativeSourceSnippet:
      id: >-
        GoogleCloudDialogflowV2KnowledgeAssistAnswerKnowledgeAnswerGenerativeSourceSnippet
      description: Snippet Source for a Generative Prediction.
      type: object
      properties:
        uri:
          description: URI the data is sourced from.
          type: string
        text:
          description: Text taken from that URI.
          type: string
        title:
          description: Title of the document.
          type: string
    GoogleCloudDialogflowV2SuggestFaqAnswersResponse:
      id: GoogleCloudDialogflowV2SuggestFaqAnswersResponse
      description: The request message for Participants.SuggestFaqAnswers.
      type: object
      properties:
        faqAnswers:
          description: Answers extracted from FAQ documents.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowV2FaqAnswer'
        latestMessage:
          description: >-
            The name of the latest conversation message used to compile
            suggestion for. Format:
            `projects//locations//conversations//messages/`.
          type: string
        contextSize:
          description: >-
            Number of messages prior to and including latest_message to compile
            the suggestion. It may be smaller than the
            SuggestFaqAnswersRequest.context_size field in the request if there
            aren't that many messages in the conversation.
          type: integer
          format: int32
    GoogleCloudDialogflowV2FaqAnswer:
      id: GoogleCloudDialogflowV2FaqAnswer
      description: Represents answer from "frequently asked questions".
      type: object
      properties:
        answer:
          description: The piece of text from the `source` knowledge base document.
          type: string
        confidence:
          description: >-
            The system's confidence score that this Knowledge answer is a good
            match for this conversational query, range from 0.0 (completely
            uncertain) to 1.0 (completely certain).
          type: number
          format: float
        question:
          description: The corresponding FAQ question.
          type: string
        source:
          description: >-
            Indicates which Knowledge Document this answer was extracted from.
            Format: `projects//locations//agent/knowledgeBases//documents/`.
          type: string
        metadata:
          description: >-
            A map that contains metadata about the answer and the document from
            which it originates.
          type: object
          additionalProperties:
            type: string
        answerRecord:
          description: >-
            The name of answer record, in the format of
            "projects//locations//answerRecords/"
          type: string
    GoogleCloudDialogflowV2SuggestSmartRepliesResponse:
      id: GoogleCloudDialogflowV2SuggestSmartRepliesResponse
      description: The response message for Participants.SuggestSmartReplies.
      type: object
      properties:
        smartReplyAnswers:
          description: >-
            Output only. Multiple reply options provided by smart reply service.
            The order is based on the rank of the model prediction. The maximum
            number of the returned replies is set in SmartReplyConfig.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowV2SmartReplyAnswer'
        latestMessage:
          description: >-
            The name of the latest conversation message used to compile
            suggestion for. Format:
            `projects//locations//conversations//messages/`.
          type: string
        contextSize:
          description: >-
            Number of messages prior to and including latest_message to compile
            the suggestion. It may be smaller than the
            SuggestSmartRepliesRequest.context_size field in the request if
            there aren't that many messages in the conversation.
          type: integer
          format: int32
    GoogleCloudDialogflowV2SmartReplyAnswer:
      id: GoogleCloudDialogflowV2SmartReplyAnswer
      description: Represents a smart reply answer.
      type: object
      properties:
        reply:
          description: The content of the reply.
          type: string
        confidence:
          description: >-
            Smart reply confidence. The system's confidence score that this
            reply is a good match for this conversation, as a value from 0.0
            (completely uncertain) to 1.0 (completely certain).
          type: number
          format: float
        answerRecord:
          description: >-
            The name of answer record, in the format of
            "projects//locations//answerRecords/"
          type: string
    GoogleCloudDialogflowV2ImportDocumentsResponse:
      id: GoogleCloudDialogflowV2ImportDocumentsResponse
      description: Response message for Documents.ImportDocuments.
      type: object
      properties:
        warnings:
          description: Includes details about skipped documents or any other warnings.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
    GoogleCloudDialogflowV2KnowledgeOperationMetadata:
      id: GoogleCloudDialogflowV2KnowledgeOperationMetadata
      description: Metadata in google::longrunning::Operation for Knowledge operations.
      type: object
      properties:
        state:
          description: Output only. The current state of this operation.
          readOnly: true
          type: string
          enumDescriptions:
            - State unspecified.
            - The operation has been created.
            - The operation is currently running.
            - The operation is done, either cancelled or completed.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - DONE
        knowledgeBase:
          description: The name of the knowledge base interacted with during the operation.
          type: string
        exportOperationMetadata:
          description: >-
            Metadata for the Export Data Operation such as the destination of
            export.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2ExportOperationMetadata'
    GoogleCloudDialogflowV2ExportOperationMetadata:
      id: GoogleCloudDialogflowV2ExportOperationMetadata
      description: Metadata related to the Export Data Operations (e.g. ExportDocument).
      type: object
      properties:
        exportedGcsDestination:
          description: Cloud Storage file path of the exported data.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2GcsDestination'
    GoogleCloudDialogflowV2GcsDestination:
      id: GoogleCloudDialogflowV2GcsDestination
      description: Google Cloud Storage location for the output.
      type: object
      properties:
        uri:
          description: >-
            The Google Cloud Storage URIs for the output. A URI is of the form:
            `gs://bucket/object-prefix-or-name` Whether a prefix or name is used
            depends on the use case. The requesting user must have
            "write-permission" to the bucket.
          type: string
    GoogleCloudDialogflowV2OriginalDetectIntentRequest:
      id: GoogleCloudDialogflowV2OriginalDetectIntentRequest
      description: >-
        Represents the contents of the original request that was passed to the
        `[Streaming]DetectIntent` call.
      type: object
      properties:
        source:
          description: >-
            The source of this request, e.g., `google`, `facebook`, `slack`. It
            is set by Dialogflow-owned servers.
          type: string
        version:
          description: >-
            Optional. The version of the protocol used for this request. This
            field is AoG-specific.
          type: string
        payload:
          description: >-
            Optional. This field is set to the value of the
            `QueryParameters.payload` field passed in the request. Some
            integrations that query a Dialogflow agent may provide additional
            information in the payload. In particular, for the Dialogflow Phone
            Gateway integration, this field has the form: { "telephony": {
            "caller_id": "+18558363987" } } Note: The caller ID field
            (`caller_id`) will be redacted for Trial Edition agents and
            populated with the caller ID in [E.164
            format](https://en.wikipedia.org/wiki/E.164) for Essentials Edition
            agents.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
    GoogleCloudDialogflowV2SetSuggestionFeatureConfigOperationMetadata:
      id: GoogleCloudDialogflowV2SetSuggestionFeatureConfigOperationMetadata
      description: Metadata for a ConversationProfile.SetSuggestionFeatureConfig operation.
      type: object
      properties:
        conversationProfile:
          description: >-
            The resource name of the conversation profile. Format:
            `projects//locations//conversationProfiles/`
          type: string
        participantRole:
          description: >-
            Required. The participant role to add or update the suggestion
            feature config. Only HUMAN_AGENT or END_USER can be used.
          type: string
          enumDescriptions:
            - Participant role not set.
            - Participant is a human agent.
            - Participant is an automated agent, such as a Dialogflow agent.
            - >-
              Participant is an end user that has called or chatted with
              Dialogflow services.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
        suggestionFeatureType:
          description: Required. The type of the suggestion feature to add or update.
          type: string
          enumDescriptions:
            - Unspecified feature type.
            - Run article suggestion model for chat.
            - Run FAQ model for chat.
            - Run smart reply model for chat.
            - >-
              Run knowledge search with text input from agent or text generated
              query.
            - Run knowledge assist with automatic query generation.
          enum:
            - TYPE_UNSPECIFIED
            - ARTICLE_SUGGESTION
            - FAQ
            - SMART_REPLY
            - KNOWLEDGE_SEARCH
            - KNOWLEDGE_ASSIST
        createTime:
          description: >-
            Timestamp whe the request was created. The time is measured on
            server side.
          type: string
          format: google-datetime
    GoogleCloudDialogflowV2WebhookRequest:
      id: GoogleCloudDialogflowV2WebhookRequest
      description: The request message for a webhook call.
      type: object
      properties:
        session:
          description: >-
            The unique identifier of detectIntent request session. Can be used
            to identify end-user inside webhook implementation. Format:
            `projects//agent/sessions/`, or
            `projects//agent/environments//users//sessions/`.
          type: string
        responseId:
          description: >-
            The unique identifier of the response. Contains the same value as
            `[Streaming]DetectIntentResponse.response_id`.
          type: string
        queryResult:
          description: >-
            The result of the conversational query or event processing. Contains
            the same value as `[Streaming]DetectIntentResponse.query_result`.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2QueryResult'
        originalDetectIntentRequest:
          description: >-
            Optional. The contents of the original request that was passed to
            `[Streaming]DetectIntent` call.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2OriginalDetectIntentRequest
    GoogleCloudDialogflowV2QueryResult:
      id: GoogleCloudDialogflowV2QueryResult
      description: Represents the result of conversational query or event processing.
      type: object
      properties:
        queryText:
          description: >-
            The original conversational query text: - If natural language text
            was provided as input, `query_text` contains a copy of the input. -
            If natural language speech audio was provided as input, `query_text`
            contains the speech recognition result. If speech recognizer
            produced multiple alternatives, a particular one is picked. - If
            automatic spell correction is enabled, `query_text` will contain the
            corrected user input.
          type: string
        languageCode:
          description: >-
            The language that was triggered during intent detection. See
            [Language
            Support](https://cloud.google.com/dialogflow/docs/reference/language)
            for a list of the currently supported language codes.
          type: string
        speechRecognitionConfidence:
          description: >-
            The Speech recognition confidence between 0.0 and 1.0. A higher
            number indicates an estimated greater likelihood that the recognized
            words are correct. The default of 0.0 is a sentinel value indicating
            that confidence was not set. This field is not guaranteed to be
            accurate or set. In particular this field isn't set for
            StreamingDetectIntent since the streaming endpoint has separate
            confidence estimates per portion of the audio in
            StreamingRecognitionResult.
          type: number
          format: float
        action:
          description: The action name from the matched intent.
          type: string
        parameters:
          description: >-
            The collection of extracted parameters. Depending on your protocol
            or client library language, this is a map, associative array, symbol
            table, dictionary, or JSON object composed of a collection of
            (MapKey, MapValue) pairs: * MapKey type: string * MapKey value:
            parameter name * MapValue type: If parameter's entity type is a
            composite entity then use map, otherwise, depending on the parameter
            value type, it could be one of string, number, boolean, null, list
            or map. * MapValue value: If parameter's entity type is a composite
            entity then use map from composite entity property names to property
            values, otherwise, use parameter value.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        allRequiredParamsPresent:
          description: >-
            This field is set to: - `false` if the matched intent has required
            parameters and not all of the required parameter values have been
            collected. - `true` if all required parameter values have been
            collected, or if the matched intent doesn't contain any required
            parameters.
          type: boolean
        cancelsSlotFilling:
          description: >-
            Indicates whether the conversational query triggers a cancellation
            for slot filling. For more information, see the [cancel slot filling
            documentation](https://cloud.google.com/dialogflow/es/docs/intents-actions-parameters#cancel).
          type: boolean
        fulfillmentText:
          description: >-
            The text to be pronounced to the user or shown on the screen. Note:
            This is a legacy field, `fulfillment_messages` should be preferred.
          type: string
        fulfillmentMessages:
          description: The collection of rich messages to present to the user.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowV2IntentMessage'
        webhookSource:
          description: >-
            If the query was fulfilled by a webhook call, this field is set to
            the value of the `source` field returned in the webhook response.
          type: string
        webhookPayload:
          description: >-
            If the query was fulfilled by a webhook call, this field is set to
            the value of the `payload` field returned in the webhook response.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        outputContexts:
          description: >-
            The collection of output contexts. If applicable,
            `output_contexts.parameters` contains entries with name `.original`
            containing the original parameter values before the query.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowV2Context'
        intent:
          description: >-
            The intent that matched the conversational query. Some, not all
            fields are filled in this message, including but not limited to:
            `name`, `display_name`, `end_interaction` and `is_fallback`.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2Intent'
        intentDetectionConfidence:
          description: >-
            The intent detection confidence. Values range from 0.0 (completely
            uncertain) to 1.0 (completely certain). This value is for
            informational purpose only and is only used to help match the best
            intent within the classification threshold. This value may change
            for the same end-user expression at any time due to a model
            retraining or change in implementation. If there are `multiple
            knowledge_answers` messages, this value is set to the greatest
            `knowledgeAnswers.match_confidence` value in the list.
          type: number
          format: float
        diagnosticInfo:
          description: >-
            Free-form diagnostic information for the associated detect intent
            request. The fields of this data can change without notice, so you
            should not write code that depends on its structure. The data may
            contain: - webhook call latency - webhook errors
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        sentimentAnalysisResult:
          description: >-
            The sentiment analysis result, which depends on the
            `sentiment_analysis_request_config` specified in the request.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2SentimentAnalysisResult'
    GoogleCloudDialogflowV2WebhookResponse:
      id: GoogleCloudDialogflowV2WebhookResponse
      description: >-
        The response message for a webhook call. This response is validated by
        the Dialogflow server. If validation fails, an error will be returned in
        the QueryResult.diagnostic_info field. Setting JSON fields to an empty
        value with the wrong type is a common error. To avoid this error: - Use
        `""` for empty strings - Use `{}` or `null` for empty objects - Use `[]`
        or `null` for empty arrays For more information, see the [Protocol
        Buffers Language
        Guide](https://developers.google.com/protocol-buffers/docs/proto3#json).
      type: object
      properties:
        fulfillmentText:
          description: >-
            Optional. The text response message intended for the end-user. It is
            recommended to use `fulfillment_messages.text.text[0]` instead. When
            provided, Dialogflow uses this field to populate
            QueryResult.fulfillment_text sent to the integration or API caller.
          type: string
        fulfillmentMessages:
          description: >-
            Optional. The rich response messages intended for the end-user. When
            provided, Dialogflow uses this field to populate
            QueryResult.fulfillment_messages sent to the integration or API
            caller.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowV2IntentMessage'
        source:
          description: >-
            Optional. A custom field used to identify the webhook source.
            Arbitrary strings are supported. When provided, Dialogflow uses this
            field to populate QueryResult.webhook_source sent to the integration
            or API caller.
          type: string
        payload:
          description: >-
            Optional. This field can be used to pass custom data from your
            webhook to the integration or API caller. Arbitrary JSON objects are
            supported. When provided, Dialogflow uses this field to populate
            QueryResult.webhook_payload sent to the integration or API caller.
            This field is also used by the [Google Assistant
            integration](https://cloud.google.com/dialogflow/docs/integrations/aog)
            for rich response messages. See the format definition at [Google
            Assistant Dialogflow webhook
            format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        outputContexts:
          description: >-
            Optional. The collection of output contexts that will overwrite
            currently active contexts for the session and reset their lifespans.
            When provided, Dialogflow uses this field to populate
            QueryResult.output_contexts sent to the integration or API caller.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowV2Context'
        followupEventInput:
          description: >-
            Optional. Invokes the supplied events. When this field is set,
            Dialogflow ignores the `fulfillment_text`, `fulfillment_messages`,
            and `payload` fields.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2EventInput'
        sessionEntityTypes:
          description: >-
            Optional. Additional session entity types to replace or extend
            developer entity types with. The entity synonyms apply to all
            languages and persist for the session. Setting this data from a
            webhook overwrites the session entity types that have been set using
            `detectIntent`, `streamingDetectIntent` or SessionEntityType
            management methods.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowV2SessionEntityType'
    GoogleCloudDialogflowV2EventInput:
      id: GoogleCloudDialogflowV2EventInput
      description: >-
        Events allow for matching intents by event name instead of the natural
        language input. For instance, input `` can trigger a personalized
        welcome response. The parameter `name` may be used by the agent in the
        response: `"Hello #welcome_event.name! What can I do for you today?"`.
      type: object
      properties:
        name:
          description: Required. The unique identifier of the event.
          type: string
        parameters:
          description: >-
            The collection of parameters associated with the event. Depending on
            your protocol or client library language, this is a map, associative
            array, symbol table, dictionary, or JSON object composed of a
            collection of (MapKey, MapValue) pairs: * MapKey type: string *
            MapKey value: parameter name * MapValue type: If parameter's entity
            type is a composite entity then use map, otherwise, depending on the
            parameter value type, it could be one of string, number, boolean,
            null, list or map. * MapValue value: If parameter's entity type is a
            composite entity then use map from composite entity property names
            to property values, otherwise, use parameter value.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        languageCode:
          description: >-
            Required. The language of this query. See [Language
            Support](https://cloud.google.com/dialogflow/docs/reference/language)
            for a list of the currently supported language codes. Note that
            queries in the same session do not necessarily need to specify the
            same language. This field is ignored when used in the context of a
            WebhookResponse.followup_event_input field, because the language was
            already defined in the originating detect intent request.
          type: string
    GoogleCloudDialogflowV2SessionEntityType:
      id: GoogleCloudDialogflowV2SessionEntityType
      description: >-
        A session represents a conversation between a Dialogflow agent and an
        end-user. You can create special entities, called session entities,
        during a session. Session entities can extend or replace custom entity
        types and only exist during the session that they were created for. All
        session data, including session entities, is stored by Dialogflow for 20
        minutes. For more information, see the [session entity
        guide](https://cloud.google.com/dialogflow/docs/entities-session).
      type: object
      properties:
        name:
          description: >-
            Required. The unique identifier of this session entity type. Format:
            `projects//agent/sessions//entityTypes/`, or
            `projects//agent/environments//users//sessions//entityTypes/`. If
            `Environment ID` is not specified, we assume default 'draft'
            environment. If `User ID` is not specified, we assume default '-'
            user. `` must be the display name of an existing entity type in the
            same agent that will be overridden or supplemented.
          type: string
        entityOverrideMode:
          description: >-
            Required. Indicates whether the additional data should override or
            supplement the custom entity type definition.
          type: string
          enumDescriptions:
            - Not specified. This value should be never used.
            - >-
              The collection of session entities overrides the collection of
              entities in the corresponding custom entity type.
            - >-
              The collection of session entities extends the collection of
              entities in the corresponding custom entity type. Note: Even in
              this override mode calls to `ListSessionEntityTypes`,
              `GetSessionEntityType`, `CreateSessionEntityType` and
              `UpdateSessionEntityType` only return the additional entities
              added in this session entity type. If you want to get the
              supplemented list, please call EntityTypes.GetEntityType on the
              custom entity type and merge.
          enum:
            - ENTITY_OVERRIDE_MODE_UNSPECIFIED
            - ENTITY_OVERRIDE_MODE_OVERRIDE
            - ENTITY_OVERRIDE_MODE_SUPPLEMENT
        entities:
          description: >-
            Required. The collection of entities associated with this session
            entity type.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowV2EntityTypeEntity'
    GoogleCloudDialogflowV2DeleteConversationDatasetOperationMetadata:
      id: GoogleCloudDialogflowV2DeleteConversationDatasetOperationMetadata
      description: Metadata for ConversationDatasets.
      type: object
      properties: {}
    GoogleCloudDialogflowV2ImportConversationDataOperationResponse:
      id: GoogleCloudDialogflowV2ImportConversationDataOperationResponse
      description: >-
        Response used for ConversationDatasets.ImportConversationData long
        running operation.
      type: object
      properties:
        conversationDataset:
          description: >-
            The resource name of the imported conversation dataset. Format:
            `projects//locations//conversationDatasets/`
          type: string
        importCount:
          description: Number of conversations imported successfully.
          type: integer
          format: int32
    GoogleCloudDialogflowV2ImportConversationDataOperationMetadata:
      id: GoogleCloudDialogflowV2ImportConversationDataOperationMetadata
      description: Metadata for a ConversationDatasets.ImportConversationData operation.
      type: object
      properties:
        conversationDataset:
          description: >-
            The resource name of the imported conversation dataset. Format:
            `projects//locations//conversationDatasets/`
          type: string
        partialFailures:
          description: >-
            Partial failures are failures that don't fail the whole long running
            operation, e.g. single files that couldn't be read.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
        createTime:
          description: >-
            Timestamp when import conversation data request was created. The
            time is measured on server side.
          type: string
          format: google-datetime
    GoogleCloudDialogflowV2InitializeEncryptionSpecMetadata:
      id: GoogleCloudDialogflowV2InitializeEncryptionSpecMetadata
      description: Metadata for initializing a location-level encryption specification.
      type: object
      properties:
        request:
          description: Output only. The original request for initialization.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2InitializeEncryptionSpecRequest
    GoogleCloudDialogflowV2InitializeEncryptionSpecRequest:
      id: GoogleCloudDialogflowV2InitializeEncryptionSpecRequest
      description: The request to initialize a location-level encryption specification.
      type: object
      properties:
        encryptionSpec:
          description: >-
            Required. The encryption spec used for CMEK encryption. It is
            required that the kms key is in the same region as the endpoint. The
            same key will be used for all provisioned resources, if encryption
            is available. If the kms_key_name is left empty, no encryption will
            be enforced.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2EncryptionSpec'
    GoogleCloudDialogflowV2EncryptionSpec:
      id: GoogleCloudDialogflowV2EncryptionSpec
      description: >-
        A customer-managed encryption key specification that can be applied to
        all created resources (e.g. Conversation).
      type: object
      properties:
        name:
          description: >-
            Immutable. The resource name of the encryption key specification
            resource. Format:
            projects/{project}/locations/{location}/encryptionSpec
          type: string
        kmsKey:
          description: >-
            Required. The name of customer-managed encryption key that is used
            to secure a resource and its sub-resources. If empty, the resource
            is secured by the default Google encryption key. Only the key in the
            same location as this resource is allowed to be used for encryption.
            Format:
            `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{key}`
          type: string
    GoogleCloudDialogflowV2CreateConversationDatasetOperationMetadata:
      id: GoogleCloudDialogflowV2CreateConversationDatasetOperationMetadata
      description: Metadata for ConversationDatasets.
      type: object
      properties:
        conversationDataset:
          description: >-
            The resource name of the conversation dataset that will be created.
            Format: `projects//locations//conversationDatasets/`
          type: string
    GoogleCloudDialogflowV2ConversationModel:
      id: GoogleCloudDialogflowV2ConversationModel
      description: Represents a conversation model.
      type: object
      properties:
        name:
          description: >-
            ConversationModel resource name. Format:
            `projects//conversationModels/`
          type: string
        displayName:
          description: Required. The display name of the model. At most 64 bytes long.
          type: string
        createTime:
          description: Output only. Creation time of this model.
          readOnly: true
          type: string
          format: google-datetime
        datasets:
          description: Required. Datasets used to create model.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowV2InputDataset'
        state:
          description: >-
            Output only. State of the model. A model can only serve prediction
            requests after it gets deployed.
          readOnly: true
          type: string
          enumDescriptions:
            - Should not be used, an un-set enum has this value by default.
            - Model being created.
            - Model is not deployed but ready to deploy.
            - Model is deploying.
            - Model is deployed and ready to use.
            - Model is undeploying.
            - Model is deleting.
            - Model is in error state. Not ready to deploy and use.
            - >-
              Model is being created but the training has not started, The model
              may remain in this state until there is enough capacity to start
              training.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - UNDEPLOYED
            - DEPLOYING
            - DEPLOYED
            - UNDEPLOYING
            - DELETING
            - FAILED
            - PENDING
        languageCode:
          description: >-
            Language code for the conversation model. If not specified, the
            language is en-US. Language at ConversationModel should be set for
            all non en-us languages. This should be a
            [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag.
            Example: "en-US".
          type: string
        articleSuggestionModelMetadata:
          description: Metadata for article suggestion models.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2ArticleSuggestionModelMetadata
        smartReplyModelMetadata:
          description: Metadata for smart reply models.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2SmartReplyModelMetadata'
    GoogleCloudDialogflowV2InputDataset:
      id: GoogleCloudDialogflowV2InputDataset
      description: InputDataset used to create model or do evaluation. NextID:5
      type: object
      properties:
        dataset:
          description: >-
            Required. ConversationDataset resource name. Format:
            `projects//locations//conversationDatasets/`
          type: string
    GoogleCloudDialogflowV2ArticleSuggestionModelMetadata:
      id: GoogleCloudDialogflowV2ArticleSuggestionModelMetadata
      description: Metadata for article suggestion models.
      type: object
      properties:
        trainingModelType:
          description: >-
            Optional. Type of the article suggestion model. If not provided,
            model_type is used.
          type: string
          enumDescriptions:
            - ModelType unspecified.
            - ModelType smart reply dual encoder model.
            - ModelType smart reply bert model.
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - SMART_REPLY_DUAL_ENCODER_MODEL
            - SMART_REPLY_BERT_MODEL
    GoogleCloudDialogflowV2SmartReplyModelMetadata:
      id: GoogleCloudDialogflowV2SmartReplyModelMetadata
      description: Metadata for smart reply models.
      type: object
      properties:
        trainingModelType:
          description: >-
            Optional. Type of the smart reply model. If not provided, model_type
            is used.
          type: string
          enumDescriptions:
            - ModelType unspecified.
            - ModelType smart reply dual encoder model.
            - ModelType smart reply bert model.
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - SMART_REPLY_DUAL_ENCODER_MODEL
            - SMART_REPLY_BERT_MODEL
    GoogleCloudDialogflowV2CreateConversationModelOperationMetadata:
      id: GoogleCloudDialogflowV2CreateConversationModelOperationMetadata
      description: Metadata for a ConversationModels.CreateConversationModel operation.
      type: object
      properties:
        conversationModel:
          description: >-
            The resource name of the conversation model. Format:
            `projects//conversationModels/`
          type: string
        state:
          description: State of CreateConversationModel operation.
          type: string
          enumDescriptions:
            - Invalid.
            - >-
              Request is submitted, but training has not started yet. The model
              may remain in this state until there is enough capacity to start
              training.
            - The training has succeeded.
            - The training has succeeded.
            - The training has been cancelled.
            - The training is in cancelling state.
            - Custom model is training.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - SUCCEEDED
            - FAILED
            - CANCELLED
            - CANCELLING
            - TRAINING
        createTime:
          description: >-
            Timestamp when the request to create conversation model is
            submitted. The time is measured on server side.
          type: string
          format: google-datetime
    GoogleCloudDialogflowV2DeleteConversationModelOperationMetadata:
      id: GoogleCloudDialogflowV2DeleteConversationModelOperationMetadata
      description: Metadata for a ConversationModels.DeleteConversationModel operation.
      type: object
      properties:
        conversationModel:
          description: >-
            The resource name of the conversation model. Format:
            `projects//conversationModels/`
          type: string
        createTime:
          description: >-
            Timestamp when delete conversation model request was created. The
            time is measured on server side.
          type: string
          format: google-datetime
    GoogleCloudDialogflowV2DeployConversationModelOperationMetadata:
      id: GoogleCloudDialogflowV2DeployConversationModelOperationMetadata
      description: Metadata for a ConversationModels.DeployConversationModel operation.
      type: object
      properties:
        conversationModel:
          description: >-
            The resource name of the conversation model. Format:
            `projects//conversationModels/`
          type: string
        createTime:
          description: >-
            Timestamp when request to deploy conversation model was submitted.
            The time is measured on server side.
          type: string
          format: google-datetime
    GoogleCloudDialogflowV2UndeployConversationModelOperationMetadata:
      id: GoogleCloudDialogflowV2UndeployConversationModelOperationMetadata
      description: Metadata for a ConversationModels.UndeployConversationModel operation.
      type: object
      properties:
        conversationModel:
          description: >-
            The resource name of the conversation model. Format:
            `projects//conversationModels/`
          type: string
        createTime:
          description: >-
            Timestamp when the request to undeploy conversation model was
            submitted. The time is measured on server side.
          type: string
          format: google-datetime
    GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata:
      id: >-
        GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata
      description: >-
        Metadata for a ConversationModels.CreateConversationModelEvaluation
        operation.
      type: object
      properties:
        conversationModelEvaluation:
          description: >-
            The resource name of the conversation model. Format:
            `projects//locations//conversationModels//evaluations/`
          type: string
        conversationModel:
          description: >-
            The resource name of the conversation model. Format:
            `projects//locations//conversationModels/`
          type: string
        state:
          description: State of CreateConversationModel operation.
          type: string
          enumDescriptions:
            - Operation status not specified.
            - The operation is being prepared.
            - The operation is running.
            - The operation is cancelled.
            - The operation has succeeded.
            - The operation has failed.
          enum:
            - STATE_UNSPECIFIED
            - INITIALIZING
            - RUNNING
            - CANCELLED
            - SUCCEEDED
            - FAILED
        createTime:
          description: >-
            Timestamp when the request to create conversation model was
            submitted. The time is measured on server side.
          type: string
          format: google-datetime
    GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesResponse:
      id: GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesResponse
      description: The response message for EntityTypes.BatchUpdateEntityTypes.
      type: object
      properties:
        entityTypes:
          description: The collection of updated or created entity types.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1EntityType'
    GoogleCloudDialogflowV2beta1EntityType:
      id: GoogleCloudDialogflowV2beta1EntityType
      description: >-
        Each intent parameter has a type, called the entity type, which dictates
        exactly how data from an end-user expression is extracted. Dialogflow
        provides predefined system entities that can match many common types of
        data. For example, there are system entities for matching dates, times,
        colors, email addresses, and so on. You can also create your own custom
        entities for matching custom data. For example, you could define a
        vegetable entity that can match the types of vegetables available for
        purchase with a grocery store agent. For more information, see the
        [Entity
        guide](https://cloud.google.com/dialogflow/docs/entities-overview).
      type: object
      properties:
        name:
          description: >-
            The unique identifier of the entity type. Required for
            EntityTypes.UpdateEntityType and EntityTypes.BatchUpdateEntityTypes
            methods. Supported formats: - `projects//agent/entityTypes/` -
            `projects//locations//agent/entityTypes/`
          type: string
        displayName:
          description: Required. The name of the entity type.
          type: string
        kind:
          description: Required. Indicates the kind of entity type.
          type: string
          enumDescriptions:
            - Not specified. This value should be never used.
            - >-
              Map entity types allow mapping of a group of synonyms to a
              reference value.
            - >-
              List entity types contain a set of entries that do not map to
              reference values. However, list entity types can contain
              references to other entity types (with or without aliases).
            - >-
              Regexp entity types allow to specify regular expressions in
              entries values.
          enum:
            - KIND_UNSPECIFIED
            - KIND_MAP
            - KIND_LIST
            - KIND_REGEXP
        autoExpansionMode:
          description: >-
            Optional. Indicates whether the entity type can be automatically
            expanded.
          type: string
          enumDescriptions:
            - Auto expansion disabled for the entity.
            - >-
              Allows an agent to recognize values that have not been explicitly
              listed in the entity.
          enum:
            - AUTO_EXPANSION_MODE_UNSPECIFIED
            - AUTO_EXPANSION_MODE_DEFAULT
        entities:
          description: >-
            Optional. The collection of entity entries associated with the
            entity type.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1EntityTypeEntity'
        enableFuzzyExtraction:
          description: Optional. Enables fuzzy entity extraction during classification.
          type: boolean
    GoogleCloudDialogflowV2beta1EntityTypeEntity:
      id: GoogleCloudDialogflowV2beta1EntityTypeEntity
      description: An **entity entry** for an associated entity type.
      type: object
      properties:
        value:
          description: >-
            Required. The primary value associated with this entity entry. For
            example, if the entity type is *vegetable*, the value could be
            *scallions*. For `KIND_MAP` entity types: * A reference value to be
            used in place of synonyms. For `KIND_LIST` entity types: * A string
            that can contain references to other entity types (with or without
            aliases).
          type: string
        synonyms:
          description: >-
            Required. A collection of value synonyms. For example, if the entity
            type is *vegetable*, and `value` is *scallions*, a synonym could be
            *green onions*. For `KIND_LIST` entity types: * This collection must
            contain exactly one synonym equal to `value`.
          type: array
          items:
            type: string
    GoogleCloudDialogflowV2beta1BatchUpdateIntentsResponse:
      id: GoogleCloudDialogflowV2beta1BatchUpdateIntentsResponse
      description: The response message for Intents.BatchUpdateIntents.
      type: object
      properties:
        intents:
          description: The collection of updated or created intents.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1Intent'
    GoogleCloudDialogflowV2beta1Intent:
      id: GoogleCloudDialogflowV2beta1Intent
      description: >-
        An intent categorizes an end-user's intention for one conversation turn.
        For each agent, you define many intents, where your combined intents can
        handle a complete conversation. When an end-user writes or says
        something, referred to as an end-user expression or end-user input,
        Dialogflow matches the end-user input to the best intent in your agent.
        Matching an intent is also known as intent classification. For more
        information, see the [intent
        guide](https://cloud.google.com/dialogflow/docs/intents-overview).
      type: object
      properties:
        name:
          description: >-
            Optional. The unique identifier of this intent. Required for
            Intents.UpdateIntent and Intents.BatchUpdateIntents methods.
            Supported formats: - `projects//agent/intents/` -
            `projects//locations//agent/intents/`
          type: string
        displayName:
          description: Required. The name of this intent.
          type: string
        webhookState:
          description: Optional. Indicates whether webhooks are enabled for the intent.
          type: string
          enumDescriptions:
            - Webhook is disabled in the agent and in the intent.
            - Webhook is enabled in the agent and in the intent.
            - >-
              Webhook is enabled in the agent and in the intent. Also, each slot
              filling prompt is forwarded to the webhook.
          enum:
            - WEBHOOK_STATE_UNSPECIFIED
            - WEBHOOK_STATE_ENABLED
            - WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING
        priority:
          description: >-
            Optional. The priority of this intent. Higher numbers represent
            higher priorities. - If the supplied value is unspecified or 0, the
            service translates the value to 500,000, which corresponds to the
            `Normal` priority in the console. - If the supplied value is
            negative, the intent is ignored in runtime detect intent requests.
          type: integer
          format: int32
        isFallback:
          description: Optional. Indicates whether this is a fallback intent.
          type: boolean
        mlEnabled:
          description: >-
            Optional. Indicates whether Machine Learning is enabled for the
            intent. Note: If `ml_enabled` setting is set to false, then this
            intent is not taken into account during inference in `ML ONLY` match
            mode. Also, auto-markup in the UI is turned off. DEPRECATED! Please
            use `ml_disabled` field instead. NOTE: If both `ml_enabled` and
            `ml_disabled` are either not set or false, then the default value is
            determined as follows: - Before April 15th, 2018 the default is:
            ml_enabled = false / ml_disabled = true. - After April 15th, 2018
            the default is: ml_enabled = true / ml_disabled = false.
          deprecated: true
          type: boolean
        mlDisabled:
          description: >-
            Optional. Indicates whether Machine Learning is disabled for the
            intent. Note: If `ml_disabled` setting is set to true, then this
            intent is not taken into account during inference in `ML ONLY` match
            mode. Also, auto-markup in the UI is turned off.
          type: boolean
        liveAgentHandoff:
          description: >-
            Optional. Indicates that a live agent should be brought in to handle
            the interaction with the user. In most cases, when you set this flag
            to true, you would also want to set end_interaction to true as well.
            Default is false.
          type: boolean
        endInteraction:
          description: >-
            Optional. Indicates that this intent ends an interaction. Some
            integrations (e.g., Actions on Google or Dialogflow phone gateway)
            use this information to close interaction with an end user. Default
            is false.
          type: boolean
        inputContextNames:
          description: >-
            Optional. The list of context names required for this intent to be
            triggered. Formats: - `projects//agent/sessions/-/contexts/` -
            `projects//locations//agent/sessions/-/contexts/`
          type: array
          items:
            type: string
        events:
          description: >-
            Optional. The collection of event names that trigger the intent. If
            the collection of input contexts is not empty, all of the contexts
            must be present in the active user session for an event to trigger
            this intent. Event names are limited to 150 characters.
          type: array
          items:
            type: string
        trainingPhrases:
          description: Optional. The collection of examples that the agent is trained on.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2beta1IntentTrainingPhrase
        action:
          description: >-
            Optional. The name of the action associated with the intent. Note:
            The action name must not contain whitespaces.
          type: string
        outputContexts:
          description: >-
            Optional. The collection of contexts that are activated when the
            intent is matched. Context messages in this collection should not
            set the parameters field. Setting the `lifespan_count` to 0 will
            reset the context when the intent is matched. Format:
            `projects//agent/sessions/-/contexts/`.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1Context'
        resetContexts:
          description: >-
            Optional. Indicates whether to delete all contexts in the current
            session when this intent is matched.
          type: boolean
        parameters:
          description: Optional. The collection of parameters associated with the intent.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1IntentParameter'
        messages:
          description: >-
            Optional. The collection of rich messages corresponding to the
            `Response` field in the Dialogflow console.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessage'
        defaultResponsePlatforms:
          description: >-
            Optional. The list of platforms for which the first responses will
            be copied from the messages in PLATFORM_UNSPECIFIED (i.e. default
            platform).
          type: array
          items:
            type: string
            enumDescriptions:
              - Not specified.
              - Facebook.
              - Slack.
              - Telegram.
              - Kik.
              - Skype.
              - Line.
              - Viber.
              - >-
                Google Assistant See [Dialogflow webhook
                format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)
              - Telephony Gateway.
              - Google Hangouts.
            enum:
              - PLATFORM_UNSPECIFIED
              - FACEBOOK
              - SLACK
              - TELEGRAM
              - KIK
              - SKYPE
              - LINE
              - VIBER
              - ACTIONS_ON_GOOGLE
              - TELEPHONY
              - GOOGLE_HANGOUTS
        rootFollowupIntentName:
          description: >-
            Output only. The unique identifier of the root intent in the chain
            of followup intents. It identifies the correct followup intents
            chain for this intent. Format: `projects//agent/intents/`.
          readOnly: true
          type: string
        parentFollowupIntentName:
          description: >-
            Optional. The unique identifier of the parent intent in the chain of
            followup intents. You can set this field when creating an intent,
            for example with CreateIntent or BatchUpdateIntents, in order to
            make this intent a followup intent. It identifies the parent
            followup intent. Format: `projects//agent/intents/`.
          type: string
        followupIntentInfo:
          description: >-
            Output only. Information about all followup intents that have this
            intent as a direct or indirect parent. We populate this field only
            in the output.
          readOnly: true
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo
    GoogleCloudDialogflowV2beta1IntentTrainingPhrase:
      id: GoogleCloudDialogflowV2beta1IntentTrainingPhrase
      description: Represents an example that the agent is trained on.
      type: object
      properties:
        name:
          description: Output only. The unique identifier of this training phrase.
          type: string
        type:
          description: Required. The type of the training phrase.
          type: string
          enumDescriptions:
            - Not specified. This value should never be used.
            - >-
              Examples do not contain @-prefixed entity type names, but example
              parts can be annotated with entity types.
            - >-
              Templates are not annotated with entity types, but they can
              contain @-prefixed entity type names as substrings. Note: Template
              mode has been deprecated. Example mode is the only supported way
              to create new training phrases. If you have existing training
              phrases in template mode, they will be removed during training and
              it can cause a drop in agent performance.
          enumDeprecated:
            - false
            - false
            - true
          enum:
            - TYPE_UNSPECIFIED
            - EXAMPLE
            - TEMPLATE
        parts:
          description: >-
            Required. The ordered list of training phrase parts. The parts are
            concatenated in order to form the training phrase. Note: The API
            does not automatically annotate training phrases like the Dialogflow
            Console does. Note: Do not forget to include whitespace at part
            boundaries, so the training phrase is well formatted when the parts
            are concatenated. If the training phrase does not need to be
            annotated with parameters, you just need a single part with only the
            Part.text field set. If you want to annotate the training phrase,
            you must create multiple parts, where the fields of each part are
            populated in one of two ways: - `Part.text` is set to a part of the
            phrase that has no parameters. - `Part.text` is set to a part of the
            phrase that you want to annotate, and the `entity_type`, `alias`,
            and `user_defined` fields are all set.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2beta1IntentTrainingPhrasePart
        timesAddedCount:
          description: >-
            Optional. Indicates how many times this example was added to the
            intent. Each time a developer adds an existing sample by editing an
            intent or training, this counter is increased.
          type: integer
          format: int32
    GoogleCloudDialogflowV2beta1IntentTrainingPhrasePart:
      id: GoogleCloudDialogflowV2beta1IntentTrainingPhrasePart
      description: Represents a part of a training phrase.
      type: object
      properties:
        text:
          description: Required. The text for this part.
          type: string
        entityType:
          description: >-
            Optional. The entity type name prefixed with `@`. This field is
            required for annotated parts of the training phrase.
          type: string
        alias:
          description: >-
            Optional. The parameter name for the value extracted from the
            annotated part of the example. This field is required for annotated
            parts of the training phrase.
          type: string
        userDefined:
          description: >-
            Optional. Indicates whether the text was manually annotated. This
            field is set to true when the Dialogflow Console is used to manually
            annotate the part. When creating an annotated part with the API, you
            must set this to true.
          type: boolean
    GoogleCloudDialogflowV2beta1Context:
      id: GoogleCloudDialogflowV2beta1Context
      description: >-
        Dialogflow contexts are similar to natural language context. If a person
        says to you "they are orange", you need context in order to understand
        what "they" is referring to. Similarly, for Dialogflow to handle an
        end-user expression like that, it needs to be provided with context in
        order to correctly match an intent. Using contexts, you can control the
        flow of a conversation. You can configure contexts for an intent by
        setting input and output contexts, which are identified by string names.
        When an intent is matched, any configured output contexts for that
        intent become active. While any contexts are active, Dialogflow is more
        likely to match intents that are configured with input contexts that
        correspond to the currently active contexts. For more information about
        context, see the [Contexts
        guide](https://cloud.google.com/dialogflow/docs/contexts-overview).
      type: object
      properties:
        name:
          description: >-
            Required. The unique identifier of the context. Supported formats: -
            `projects//agent/sessions//contexts/`, -
            `projects//locations//agent/sessions//contexts/`, -
            `projects//agent/environments//users//sessions//contexts/`, -
            `projects//locations//agent/environments//users//sessions//contexts/`,
            The `Context ID` is always converted to lowercase, may only contain
            characters in `a-zA-Z0-9_-%` and may be at most 250 bytes long. If
            `Environment ID` is not specified, we assume default 'draft'
            environment. If `User ID` is not specified, we assume default '-'
            user. The following context names are reserved for internal use by
            Dialogflow. You should not use these contexts or create contexts
            with these names: * `__system_counters__` * `*_id_dialog_context` *
            `*_dialog_params_size`
          type: string
        lifespanCount:
          description: >-
            Optional. The number of conversational query requests after which
            the context expires. The default is `0`. If set to `0`, the context
            expires immediately. Contexts expire automatically after 20 minutes
            if there are no matching queries.
          type: integer
          format: int32
        parameters:
          description: >-
            Optional. The collection of parameters associated with this context.
            Depending on your protocol or client library language, this is a
            map, associative array, symbol table, dictionary, or JSON object
            composed of a collection of (MapKey, MapValue) pairs: * MapKey type:
            string * MapKey value: parameter name * MapValue type: If
            parameter's entity type is a composite entity then use map,
            otherwise, depending on the parameter value type, it could be one of
            string, number, boolean, null, list or map. * MapValue value: If
            parameter's entity type is a composite entity then use map from
            composite entity property names to property values, otherwise, use
            parameter value.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
    GoogleCloudDialogflowV2beta1IntentParameter:
      id: GoogleCloudDialogflowV2beta1IntentParameter
      description: Represents intent parameters.
      type: object
      properties:
        name:
          description: The unique identifier of this parameter.
          type: string
        displayName:
          description: Required. The name of the parameter.
          type: string
        value:
          description: >-
            Optional. The definition of the parameter value. It can be: - a
            constant string, - a parameter value defined as `$parameter_name`, -
            an original parameter value defined as `$parameter_name.original`, -
            a parameter value from some context defined as
            `#context_name.parameter_name`.
          type: string
        defaultValue:
          description: >-
            Optional. The default value to use when the `value` yields an empty
            result. Default values can be extracted from contexts by using the
            following syntax: `#context_name.parameter_name`.
          type: string
        entityTypeDisplayName:
          description: >-
            Optional. The name of the entity type, prefixed with `@`, that
            describes values of the parameter. If the parameter is required,
            this must be provided.
          type: string
        mandatory:
          description: >-
            Optional. Indicates whether the parameter is required. That is,
            whether the intent cannot be completed without collecting the
            parameter value.
          type: boolean
        prompts:
          description: >-
            Optional. The collection of prompts that the agent can present to
            the user in order to collect a value for the parameter.
          type: array
          items:
            type: string
        isList:
          description: >-
            Optional. Indicates whether the parameter represents a list of
            values.
          type: boolean
    GoogleCloudDialogflowV2beta1IntentMessage:
      id: GoogleCloudDialogflowV2beta1IntentMessage
      description: Corresponds to the `Response` field in the Dialogflow console.
      type: object
      properties:
        text:
          description: Returns a text response.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageText'
        image:
          description: Displays an image.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageImage'
        quickReplies:
          description: Displays quick replies.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageQuickReplies
        card:
          description: Displays a card.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageCard'
        payload:
          description: A custom platform-specific response.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        simpleResponses:
          description: Returns a voice or text-only response for Actions on Google.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageSimpleResponses
        basicCard:
          description: Displays a basic card for Actions on Google.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageBasicCard
        suggestions:
          description: Displays suggestion chips for Actions on Google.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageSuggestions
        linkOutSuggestion:
          description: Displays a link out suggestion chip for Actions on Google.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageLinkOutSuggestion
        listSelect:
          description: Displays a list card for Actions on Google.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageListSelect
        carouselSelect:
          description: Displays a carousel card for Actions on Google.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageCarouselSelect
        telephonyPlayAudio:
          description: Plays audio from a file in Telephony Gateway.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudio
        telephonySynthesizeSpeech:
          description: Synthesizes speech in Telephony Gateway.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageTelephonySynthesizeSpeech
        telephonyTransferCall:
          description: Transfers the call in Telephony Gateway.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageTelephonyTransferCall
        rbmText:
          description: >-
            Rich Business Messaging (RBM) text response. RBM allows businesses
            to send enriched and branded versions of SMS. See
            https://jibe.google.com/business-messaging.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmText
        rbmStandaloneRichCard:
          description: Standalone Rich Business Messaging (RBM) rich card response.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard
        rbmCarouselRichCard:
          description: Rich Business Messaging (RBM) carousel rich card response.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard
        browseCarouselCard:
          description: Browse carousel card for Actions on Google.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard
        tableCard:
          description: Table card for Actions on Google.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageTableCard
        mediaContent:
          description: The media content card for Actions on Google.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageMediaContent
        platform:
          description: Optional. The platform that this message is intended for.
          type: string
          enumDescriptions:
            - Not specified.
            - Facebook.
            - Slack.
            - Telegram.
            - Kik.
            - Skype.
            - Line.
            - Viber.
            - >-
              Google Assistant See [Dialogflow webhook
              format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)
            - Telephony Gateway.
            - Google Hangouts.
          enum:
            - PLATFORM_UNSPECIFIED
            - FACEBOOK
            - SLACK
            - TELEGRAM
            - KIK
            - SKYPE
            - LINE
            - VIBER
            - ACTIONS_ON_GOOGLE
            - TELEPHONY
            - GOOGLE_HANGOUTS
    GoogleCloudDialogflowV2beta1IntentMessageText:
      id: GoogleCloudDialogflowV2beta1IntentMessageText
      description: The text response message.
      type: object
      properties:
        text:
          description: Optional. The collection of the agent's responses.
          type: array
          items:
            type: string
    GoogleCloudDialogflowV2beta1IntentMessageImage:
      id: GoogleCloudDialogflowV2beta1IntentMessageImage
      description: The image response message.
      type: object
      properties:
        imageUri:
          description: Optional. The public URI to an image file.
          type: string
        accessibilityText:
          description: >-
            A text description of the image to be used for accessibility, e.g.,
            screen readers. Required if image_uri is set for CarouselSelect.
          type: string
    GoogleCloudDialogflowV2beta1IntentMessageQuickReplies:
      id: GoogleCloudDialogflowV2beta1IntentMessageQuickReplies
      description: The quick replies response message.
      type: object
      properties:
        title:
          description: Optional. The title of the collection of quick replies.
          type: string
        quickReplies:
          description: Optional. The collection of quick replies.
          type: array
          items:
            type: string
    GoogleCloudDialogflowV2beta1IntentMessageCard:
      id: GoogleCloudDialogflowV2beta1IntentMessageCard
      description: The card response message.
      type: object
      properties:
        title:
          description: Optional. The title of the card.
          type: string
        subtitle:
          description: Optional. The subtitle of the card.
          type: string
        imageUri:
          description: Optional. The public URI to an image file for the card.
          type: string
        buttons:
          description: Optional. The collection of card buttons.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageCardButton
    GoogleCloudDialogflowV2beta1IntentMessageCardButton:
      id: GoogleCloudDialogflowV2beta1IntentMessageCardButton
      description: Optional. Contains information about a button.
      type: object
      properties:
        text:
          description: Optional. The text to show on the button.
          type: string
        postback:
          description: >-
            Optional. The text to send back to the Dialogflow API or a URI to
            open.
          type: string
    GoogleCloudDialogflowV2beta1IntentMessageSimpleResponses:
      id: GoogleCloudDialogflowV2beta1IntentMessageSimpleResponses
      description: >-
        The collection of simple response candidates. This message in
        `QueryResult.fulfillment_messages` and
        `WebhookResponse.fulfillment_messages` should contain only one
        `SimpleResponse`.
      type: object
      properties:
        simpleResponses:
          description: Required. The list of simple responses.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse
    GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse:
      id: GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse
      description: The simple response message containing speech or text.
      type: object
      properties:
        textToSpeech:
          description: >-
            One of text_to_speech or ssml must be provided. The plain text of
            the speech output. Mutually exclusive with ssml.
          type: string
        ssml:
          description: >-
            One of text_to_speech or ssml must be provided. Structured spoken
            response to the user in the SSML format. Mutually exclusive with
            text_to_speech.
          type: string
        displayText:
          description: Optional. The text to display.
          type: string
    GoogleCloudDialogflowV2beta1IntentMessageBasicCard:
      id: GoogleCloudDialogflowV2beta1IntentMessageBasicCard
      description: The basic card message. Useful for displaying information.
      type: object
      properties:
        title:
          description: Optional. The title of the card.
          type: string
        subtitle:
          description: Optional. The subtitle of the card.
          type: string
        formattedText:
          description: Required, unless image is present. The body text of the card.
          type: string
        image:
          description: Optional. The image for the card.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageImage'
        buttons:
          description: Optional. The collection of card buttons.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton
    GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton:
      id: GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton
      description: The button object that appears at the bottom of a card.
      type: object
      properties:
        title:
          description: Required. The title of the button.
          type: string
        openUriAction:
          description: Required. Action to take when a user taps on the button.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageBasicCardButtonOpenUriAction
    GoogleCloudDialogflowV2beta1IntentMessageBasicCardButtonOpenUriAction:
      id: GoogleCloudDialogflowV2beta1IntentMessageBasicCardButtonOpenUriAction
      description: Opens the given URI.
      type: object
      properties:
        uri:
          description: Required. The HTTP or HTTPS scheme URI.
          type: string
    GoogleCloudDialogflowV2beta1IntentMessageSuggestions:
      id: GoogleCloudDialogflowV2beta1IntentMessageSuggestions
      description: The collection of suggestions.
      type: object
      properties:
        suggestions:
          description: Required. The list of suggested replies.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageSuggestion
    GoogleCloudDialogflowV2beta1IntentMessageSuggestion:
      id: GoogleCloudDialogflowV2beta1IntentMessageSuggestion
      description: >-
        The suggestion chip message that the user can tap to quickly post a
        reply to the conversation.
      type: object
      properties:
        title:
          description: Required. The text shown the in the suggestion chip.
          type: string
    GoogleCloudDialogflowV2beta1IntentMessageLinkOutSuggestion:
      id: GoogleCloudDialogflowV2beta1IntentMessageLinkOutSuggestion
      description: >-
        The suggestion chip message that allows the user to jump out to the app
        or website associated with this agent.
      type: object
      properties:
        destinationName:
          description: Required. The name of the app or site this chip is linking to.
          type: string
        uri:
          description: >-
            Required. The URI of the app or site to open when the user taps the
            suggestion chip.
          type: string
    GoogleCloudDialogflowV2beta1IntentMessageListSelect:
      id: GoogleCloudDialogflowV2beta1IntentMessageListSelect
      description: The card for presenting a list of options to select from.
      type: object
      properties:
        title:
          description: Optional. The overall title of the list.
          type: string
        items:
          description: Required. List items.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageListSelectItem
        subtitle:
          description: Optional. Subtitle of the list.
          type: string
    GoogleCloudDialogflowV2beta1IntentMessageListSelectItem:
      id: GoogleCloudDialogflowV2beta1IntentMessageListSelectItem
      description: An item in the list.
      type: object
      properties:
        info:
          description: Required. Additional information about this option.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo
        title:
          description: Required. The title of the list item.
          type: string
        description:
          description: Optional. The main text describing the item.
          type: string
        image:
          description: Optional. The image to display.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageImage'
    GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo:
      id: GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo
      description: >-
        Additional info about the select item for when it is triggered in a
        dialog.
      type: object
      properties:
        key:
          description: >-
            Required. A unique key that will be sent back to the agent if this
            response is given.
          type: string
        synonyms:
          description: >-
            Optional. A list of synonyms that can also be used to trigger this
            item in dialog.
          type: array
          items:
            type: string
    GoogleCloudDialogflowV2beta1IntentMessageCarouselSelect:
      id: GoogleCloudDialogflowV2beta1IntentMessageCarouselSelect
      description: The card for presenting a carousel of options to select from.
      type: object
      properties:
        items:
          description: Required. Carousel items.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageCarouselSelectItem
    GoogleCloudDialogflowV2beta1IntentMessageCarouselSelectItem:
      id: GoogleCloudDialogflowV2beta1IntentMessageCarouselSelectItem
      description: An item in the carousel.
      type: object
      properties:
        info:
          description: Required. Additional info about the option item.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo
        title:
          description: Required. Title of the carousel item.
          type: string
        description:
          description: Optional. The body text of the card.
          type: string
        image:
          description: Optional. The image to display.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageImage'
    GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudio:
      id: GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudio
      description: Plays audio from a file in Telephony Gateway.
      type: object
      properties:
        audioUri:
          description: >-
            Required. URI to a Google Cloud Storage object containing the audio
            to play, e.g., "gs://bucket/object". The object must contain a
            single channel (mono) of linear PCM audio (2 bytes / sample) at
            8kHz. This object must be readable by the
            `service-@gcp-sa-dialogflow.iam.gserviceaccount.com` service account
            where is the number of the Telephony Gateway project (usually the
            same as the Dialogflow agent project). If the Google Cloud Storage
            bucket is in the Telephony Gateway project, this permission is added
            by default when enabling the Dialogflow V2 API. For audio from other
            sources, consider using the `TelephonySynthesizeSpeech` message with
            SSML.
          type: string
    GoogleCloudDialogflowV2beta1IntentMessageTelephonySynthesizeSpeech:
      id: GoogleCloudDialogflowV2beta1IntentMessageTelephonySynthesizeSpeech
      description: >-
        Synthesizes speech and plays back the synthesized audio to the caller in
        Telephony Gateway. Telephony Gateway takes the synthesizer settings from
        `DetectIntentResponse.output_audio_config` which can either be set at
        request-level or can come from the agent-level synthesizer config.
      type: object
      properties:
        text:
          description: The raw text to be synthesized.
          type: string
        ssml:
          description: >-
            The SSML to be synthesized. For more information, see
            [SSML](https://developers.google.com/actions/reference/ssml).
          type: string
    GoogleCloudDialogflowV2beta1IntentMessageTelephonyTransferCall:
      id: GoogleCloudDialogflowV2beta1IntentMessageTelephonyTransferCall
      description: Transfers the call in Telephony Gateway.
      type: object
      properties:
        phoneNumber:
          description: >-
            Required. The phone number to transfer the call to in [E.164
            format](https://en.wikipedia.org/wiki/E.164). We currently only
            allow transferring to US numbers (+1xxxyyyzzzz).
          type: string
    GoogleCloudDialogflowV2beta1IntentMessageRbmText:
      id: GoogleCloudDialogflowV2beta1IntentMessageRbmText
      description: Rich Business Messaging (RBM) text response with suggestions.
      type: object
      properties:
        text:
          description: Required. Text sent and displayed to the user.
          type: string
        rbmSuggestion:
          description: Optional. One or more suggestions to show to the user.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion
    GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion:
      id: GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion
      description: >-
        Rich Business Messaging (RBM) suggestion. Suggestions allow user to
        easily select/click a predefined response or perform an action (like
        opening a web uri).
      type: object
      properties:
        reply:
          description: Predefined replies for user to select instead of typing
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedReply
        action:
          description: Predefined client side actions that user can choose
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedAction
    GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedReply:
      id: GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedReply
      description: >-
        Rich Business Messaging (RBM) suggested reply that the user can click
        instead of typing in their own response.
      type: object
      properties:
        text:
          description: Suggested reply text.
          type: string
        postbackData:
          description: >-
            Opaque payload that the Dialogflow receives in a user event when the
            user taps the suggested reply. This data will be also forwarded to
            webhook to allow performing custom business logic.
          type: string
    GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedAction:
      id: GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedAction
      description: >-
        Rich Business Messaging (RBM) suggested client-side action that the user
        can choose from the card.
      type: object
      properties:
        text:
          description: Text to display alongside the action.
          type: string
        postbackData:
          description: >-
            Opaque payload that the Dialogflow receives in a user event when the
            user taps the suggested action. This data will be also forwarded to
            webhook to allow performing custom business logic.
          type: string
        dial:
          description: 'Suggested client side action: Dial a phone number'
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionDial
        openUrl:
          description: 'Suggested client side action: Open a URI on device'
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionOpenUri
        shareLocation:
          description: 'Suggested client side action: Share user location'
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionShareLocation
    GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionDial:
      id: >-
        GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionDial
      description: >-
        Opens the user's default dialer app with the specified phone number but
        does not dial automatically.
      type: object
      properties:
        phoneNumber:
          description: >-
            Required. The phone number to fill in the default dialer app. This
            field should be in [E.164](https://en.wikipedia.org/wiki/E.164)
            format. An example of a correctly formatted phone number:
            +15556767888.
          type: string
    GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionOpenUri:
      id: >-
        GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionOpenUri
      description: >-
        Opens the user's default web browser app to the specified uri If the
        user has an app installed that is registered as the default handler for
        the URL, then this app will be opened instead, and its icon will be used
        in the suggested action UI.
      type: object
      properties:
        uri:
          description: Required. The uri to open on the user device
          type: string
    GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionShareLocation:
      id: >-
        GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionShareLocation
      description: >-
        Opens the device's location chooser so the user can pick a location to
        send back to the agent.
      type: object
      properties: {}
    GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard:
      id: GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard
      description: >-
        Standalone Rich Business Messaging (RBM) rich card. Rich cards allow you
        to respond to users with more vivid content, e.g. with media and
        suggestions. You can group multiple rich cards into one using
        RbmCarouselCard but carousel cards will give you less control over the
        card layout.
      type: object
      properties:
        cardOrientation:
          description: Required. Orientation of the card.
          type: string
          enumDescriptions:
            - Not specified.
            - Horizontal layout.
            - Vertical layout.
          enum:
            - CARD_ORIENTATION_UNSPECIFIED
            - HORIZONTAL
            - VERTICAL
        thumbnailImageAlignment:
          description: >-
            Required if orientation is horizontal. Image preview alignment for
            standalone cards with horizontal layout.
          type: string
          enumDescriptions:
            - Not specified.
            - Thumbnail preview is left-aligned.
            - Thumbnail preview is right-aligned.
          enum:
            - THUMBNAIL_IMAGE_ALIGNMENT_UNSPECIFIED
            - LEFT
            - RIGHT
        cardContent:
          description: Required. Card content.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent
    GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent:
      id: GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent
      description: Rich Business Messaging (RBM) Card content
      type: object
      properties:
        title:
          description: >-
            Optional. Title of the card (at most 200 bytes). At least one of the
            title, description or media must be set.
          type: string
        description:
          description: >-
            Optional. Description of the card (at most 2000 bytes). At least one
            of the title, description or media must be set.
          type: string
        media:
          description: >-
            Optional. However at least one of the title, description or media
            must be set. Media (image, GIF or a video) to include in the card.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia
        suggestions:
          description: Optional. List of suggestions to include in the card.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion
    GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia:
      id: GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia
      description: >-
        Rich Business Messaging (RBM) Media displayed in Cards The following
        media-types are currently supported: Image Types * image/jpeg *
        image/jpg' * image/gif * image/png Video Types * video/h263 * video/m4v
        * video/mp4 * video/mpeg * video/mpeg4 * video/webm
      type: object
      properties:
        fileUri:
          description: >-
            Required. Publicly reachable URI of the file. The RBM platform
            determines the MIME type of the file from the content-type field in
            the HTTP headers when the platform fetches the file. The
            content-type field must be present and accurate in the HTTP response
            from the URL.
          type: string
        thumbnailUri:
          description: >-
            Optional. Publicly reachable URI of the thumbnail.If you don't
            provide a thumbnail URI, the RBM platform displays a blank
            placeholder thumbnail until the user's device downloads the file.
            Depending on the user's setting, the file may not download
            automatically and may require the user to tap a download button.
          type: string
        height:
          description: >-
            Required for cards with vertical orientation. The height of the
            media within a rich card with a vertical layout. For a standalone
            card with horizontal layout, height is not customizable, and this
            field is ignored.
          type: string
          enumDescriptions:
            - Not specified.
            - 112 DP.
            - 168 DP.
            - >-
              264 DP. Not available for rich card carousels when the card width
              is set to small.
          enum:
            - HEIGHT_UNSPECIFIED
            - SHORT
            - MEDIUM
            - TALL
    GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard:
      id: GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard
      description: >-
        Carousel Rich Business Messaging (RBM) rich card. Rich cards allow you
        to respond to users with more vivid content, e.g. with media and
        suggestions. If you want to show a single card with more control over
        the layout, please use RbmStandaloneCard instead.
      type: object
      properties:
        cardWidth:
          description: Required. The width of the cards in the carousel.
          type: string
          enumDescriptions:
            - Not specified.
            - 120 DP. Note that tall media cannot be used.
            - 232 DP.
          enum:
            - CARD_WIDTH_UNSPECIFIED
            - SMALL
            - MEDIUM
        cardContents:
          description: >-
            Required. The cards in the carousel. A carousel must have at least 2
            cards and at most 10.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent
    GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard:
      id: GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard
      description: >-
        Browse Carousel Card for Actions on Google.
        https://developers.google.com/actions/assistant/responses#browsing_carousel
      type: object
      properties:
        items:
          description: >-
            Required. List of items in the Browse Carousel Card. Minimum of two
            items, maximum of ten.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItem
        imageDisplayOptions:
          description: >-
            Optional. Settings for displaying the image. Applies to every image
            in items.
          type: string
          enumDescriptions:
            - >-
              Fill the gaps between the image and the image container with gray
              bars.
            - >-
              Fill the gaps between the image and the image container with gray
              bars.
            - >-
              Fill the gaps between the image and the image container with white
              bars.
            - >-
              Image is scaled such that the image width and height match or
              exceed the container dimensions. This may crop the top and bottom
              of the image if the scaled image height is greater than the
              container height, or crop the left and right of the image if the
              scaled image width is greater than the container width. This is
              similar to "Zoom Mode" on a widescreen TV when playing a 4:3
              video.
            - >-
              Pad the gaps between image and image frame with a blurred copy of
              the same image.
          enum:
            - IMAGE_DISPLAY_OPTIONS_UNSPECIFIED
            - GRAY
            - WHITE
            - CROPPED
            - BLURRED_BACKGROUND
    GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItem:
      id: >-
        GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItem
      description: Browsing carousel tile
      type: object
      properties:
        openUriAction:
          description: Required. Action to present to the user.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction
        title:
          description: Required. Title of the carousel item. Maximum of two lines of text.
          type: string
        description:
          description: >-
            Optional. Description of the carousel item. Maximum of four lines of
            text.
          type: string
        image:
          description: Optional. Hero image for the carousel item.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageImage'
        footer:
          description: >-
            Optional. Text that appears at the bottom of the Browse Carousel
            Card. Maximum of one line of text.
          type: string
    GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction:
      id: >-
        GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction
      description: Actions on Google action to open a given url.
      type: object
      properties:
        url:
          description: Required. URL
          type: string
        urlTypeHint:
          description: >-
            Optional. Specifies the type of viewer that is used when opening the
            URL. Defaults to opening via web browser.
          type: string
          enumDescriptions:
            - Unspecified
            - Url would be an amp action
            - >-
              URL that points directly to AMP content, or to a canonical URL
              which refers to AMP content via .
          enum:
            - URL_TYPE_HINT_UNSPECIFIED
            - AMP_ACTION
            - AMP_CONTENT
    GoogleCloudDialogflowV2beta1IntentMessageTableCard:
      id: GoogleCloudDialogflowV2beta1IntentMessageTableCard
      description: Table card for Actions on Google.
      type: object
      properties:
        title:
          description: Required. Title of the card.
          type: string
        subtitle:
          description: Optional. Subtitle to the title.
          type: string
        image:
          description: Optional. Image which should be displayed on the card.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageImage'
        columnProperties:
          description: Optional. Display properties for the columns in this table.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageColumnProperties
        rows:
          description: Optional. Rows in this table of data.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageTableCardRow
        buttons:
          description: Optional. List of buttons for the card.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton
    GoogleCloudDialogflowV2beta1IntentMessageColumnProperties:
      id: GoogleCloudDialogflowV2beta1IntentMessageColumnProperties
      description: Column properties for TableCard.
      type: object
      properties:
        header:
          description: Required. Column heading.
          type: string
        horizontalAlignment:
          description: Optional. Defines text alignment for all cells in this column.
          type: string
          enumDescriptions:
            - Text is aligned to the leading edge of the column.
            - Text is aligned to the leading edge of the column.
            - Text is centered in the column.
            - Text is aligned to the trailing edge of the column.
          enum:
            - HORIZONTAL_ALIGNMENT_UNSPECIFIED
            - LEADING
            - CENTER
            - TRAILING
    GoogleCloudDialogflowV2beta1IntentMessageTableCardRow:
      id: GoogleCloudDialogflowV2beta1IntentMessageTableCardRow
      description: Row of TableCard.
      type: object
      properties:
        cells:
          description: Optional. List of cells that make up this row.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageTableCardCell
        dividerAfter:
          description: Optional. Whether to add a visual divider after this row.
          type: boolean
    GoogleCloudDialogflowV2beta1IntentMessageTableCardCell:
      id: GoogleCloudDialogflowV2beta1IntentMessageTableCardCell
      description: Cell of TableCardRow.
      type: object
      properties:
        text:
          description: Required. Text in this cell.
          type: string
    GoogleCloudDialogflowV2beta1IntentMessageMediaContent:
      id: GoogleCloudDialogflowV2beta1IntentMessageMediaContent
      description: The media content card for Actions on Google.
      type: object
      properties:
        mediaType:
          description: Optional. What type of media is the content (ie "audio").
          type: string
          enumDescriptions:
            - Unspecified.
            - Response media type is audio.
          enum:
            - RESPONSE_MEDIA_TYPE_UNSPECIFIED
            - AUDIO
        mediaObjects:
          description: Required. List of media objects.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageMediaContentResponseMediaObject
    GoogleCloudDialogflowV2beta1IntentMessageMediaContentResponseMediaObject:
      id: GoogleCloudDialogflowV2beta1IntentMessageMediaContentResponseMediaObject
      description: Response media object for media content card.
      type: object
      properties:
        name:
          description: Required. Name of media card.
          type: string
        description:
          description: Optional. Description of media card.
          type: string
        largeImage:
          description: Optional. Image to display above media content.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageImage'
        icon:
          description: Optional. Icon to display above media content.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageImage'
        contentUrl:
          description: Required. Url where the media is stored.
          type: string
    GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo:
      id: GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo
      description: Represents a single followup intent in the chain.
      type: object
      properties:
        followupIntentName:
          description: >-
            The unique identifier of the followup intent. Format:
            `projects//agent/intents/`.
          type: string
        parentFollowupIntentName:
          description: >-
            The unique identifier of the followup intent's parent. Format:
            `projects//agent/intents/`.
          type: string
    GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigOperationMetadata:
      id: >-
        GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigOperationMetadata
      description: >-
        Metadata for a ConversationProfile.ClearSuggestionFeatureConfig
        operation.
      type: object
      properties:
        conversationProfile:
          description: >-
            The resource name of the conversation profile. Format:
            `projects//locations//conversationProfiles/`
          type: string
        participantRole:
          description: >-
            Required. The participant role to remove the suggestion feature
            config. Only HUMAN_AGENT or END_USER can be used.
          type: string
          enumDescriptions:
            - Participant role not set.
            - Participant is a human agent.
            - Participant is an automated agent, such as a Dialogflow agent.
            - >-
              Participant is an end user that has called or chatted with
              Dialogflow services.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
        suggestionFeatureType:
          description: Required. The type of the suggestion feature to remove.
          type: string
          enumDescriptions:
            - Unspecified feature type.
            - Run article suggestion model for chat.
            - Run FAQ model.
            - Run smart reply model for chat.
            - >-
              Run Dialogflow assist model for chat, which will return automated
              agent response as suggestion.
            - Run conversation summarization model for chat.
            - >-
              Run knowledge search with text input from agent or text generated
              query.
            - Run knowledge assist with automatic query generation.
          enum:
            - TYPE_UNSPECIFIED
            - ARTICLE_SUGGESTION
            - FAQ
            - SMART_REPLY
            - DIALOGFLOW_ASSIST
            - CONVERSATION_SUMMARIZATION
            - KNOWLEDGE_SEARCH
            - KNOWLEDGE_ASSIST
        createTime:
          description: >-
            Timestamp whe the request was created. The time is measured on
            server side.
          type: string
          format: google-datetime
    GoogleCloudDialogflowV2beta1ConversationEvent:
      id: GoogleCloudDialogflowV2beta1ConversationEvent
      description: >-
        Represents a notification sent to Pub/Sub subscribers for conversation
        lifecycle events.
      type: object
      properties:
        conversation:
          description: >-
            Required. The unique identifier of the conversation this
            notification refers to. Format: `projects//conversations/`.
          type: string
        type:
          description: Required. The type of the event that this notification refers to.
          type: string
          enumDescriptions:
            - Type not set.
            - >-
              A new conversation has been opened. This is fired when a telephone
              call is answered, or a conversation is created via the API.
            - >-
              An existing conversation has closed. This is fired when a
              telephone call is terminated, or a conversation is closed via the
              API.
            - >-
              An existing conversation has received notification from Dialogflow
              that human intervention is required.
            - >-
              An existing conversation has received a new message, either from
              API or telephony. It is configured in
              ConversationProfile.new_message_event_notification_config
            - >-
              Unrecoverable error during a telephone call. In general
              non-recoverable errors only occur if something was misconfigured
              in the ConversationProfile corresponding to the call. After a
              non-recoverable error, Dialogflow may stop responding. We don't
              fire this event: * in an API call because we can directly return
              the error, or, * when we can recover from an error.
          enum:
            - TYPE_UNSPECIFIED
            - CONVERSATION_STARTED
            - CONVERSATION_FINISHED
            - HUMAN_INTERVENTION_NEEDED
            - NEW_MESSAGE
            - UNRECOVERABLE_ERROR
        errorStatus:
          description: >-
            Optional. More detailed information about an error. Only set for
            type UNRECOVERABLE_ERROR_IN_PHONE_CALL.
          $ref: '#/components/schemas/GoogleRpcStatus'
        newMessagePayload:
          description: Payload of NEW_MESSAGE event.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1Message'
    GoogleCloudDialogflowV2beta1Message:
      id: GoogleCloudDialogflowV2beta1Message
      description: Represents a message posted into a conversation.
      type: object
      properties:
        name:
          description: >-
            Optional. The unique identifier of the message. Format:
            `projects//locations//conversations//messages/`.
          type: string
        content:
          description: Required. The message content.
          type: string
        responseMessages:
          description: Optional. Automated agent responses.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1ResponseMessage'
        languageCode:
          description: >-
            Optional. The message language. This should be a
            [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag.
            Example: "en-US".
          type: string
        participant:
          description: Output only. The participant that sends this message.
          readOnly: true
          type: string
        participantRole:
          description: Output only. The role of the participant.
          readOnly: true
          type: string
          enumDescriptions:
            - Participant role not set.
            - Participant is a human agent.
            - Participant is an automated agent, such as a Dialogflow agent.
            - >-
              Participant is an end user that has called or chatted with
              Dialogflow services.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
        createTime:
          description: >-
            Output only. The time when the message was created in Contact Center
            AI.
          readOnly: true
          type: string
          format: google-datetime
        sendTime:
          description: Optional. The time when the message was sent.
          type: string
          format: google-datetime
        messageAnnotation:
          description: Output only. The annotation for the message.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1MessageAnnotation'
        sentimentAnalysis:
          description: Output only. The sentiment analysis result for the message.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1SentimentAnalysisResult
    GoogleCloudDialogflowV2beta1ResponseMessage:
      id: GoogleCloudDialogflowV2beta1ResponseMessage
      description: Response messages from an automated agent.
      type: object
      properties:
        text:
          description: Returns a text response.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1ResponseMessageText'
        payload:
          description: Returns a response containing a custom, platform-specific payload.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        liveAgentHandoff:
          description: Hands off conversation to a live agent.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1ResponseMessageLiveAgentHandoff
        endInteraction:
          description: >-
            A signal that indicates the interaction with the Dialogflow agent
            has ended.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1ResponseMessageEndInteraction
        mixedAudio:
          description: >-
            An audio response message composed of both the synthesized
            Dialogflow agent responses and the audios hosted in places known to
            the client.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1ResponseMessageMixedAudio
        telephonyTransferCall:
          description: >-
            A signal that the client should transfer the phone call connected to
            this agent to a third-party endpoint.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1ResponseMessageTelephonyTransferCall
    GoogleCloudDialogflowV2beta1ResponseMessageText:
      id: GoogleCloudDialogflowV2beta1ResponseMessageText
      description: The text response message.
      type: object
      properties:
        text:
          description: >-
            A collection of text response variants. If multiple variants are
            defined, only one text response variant is returned at runtime.
          type: array
          items:
            type: string
    GoogleCloudDialogflowV2beta1ResponseMessageLiveAgentHandoff:
      id: GoogleCloudDialogflowV2beta1ResponseMessageLiveAgentHandoff
      description: >-
        Indicates that the conversation should be handed off to a human agent.
        Dialogflow only uses this to determine which conversations were handed
        off to a human agent for measurement purposes. What else to do with this
        signal is up to you and your handoff procedures. You may set this, for
        example: * In the entry fulfillment of a CX Page if entering the page
        indicates something went extremely wrong in the conversation. * In a
        webhook response when you determine that the customer issue can only be
        handled by a human.
      type: object
      properties:
        metadata:
          description: >-
            Custom metadata for your handoff procedure. Dialogflow doesn't
            impose any structure on this.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
    GoogleCloudDialogflowV2beta1ResponseMessageEndInteraction:
      id: GoogleCloudDialogflowV2beta1ResponseMessageEndInteraction
      description: Indicates that interaction with the Dialogflow agent has ended.
      type: object
      properties: {}
    GoogleCloudDialogflowV2beta1ResponseMessageMixedAudio:
      id: GoogleCloudDialogflowV2beta1ResponseMessageMixedAudio
      description: >-
        Represents an audio message that is composed of both segments
        synthesized from the Dialogflow agent prompts and ones hosted externally
        at the specified URIs.
      type: object
      properties:
        segments:
          description: Segments this audio response is composed of.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2beta1ResponseMessageMixedAudioSegment
    GoogleCloudDialogflowV2beta1ResponseMessageMixedAudioSegment:
      id: GoogleCloudDialogflowV2beta1ResponseMessageMixedAudioSegment
      description: Represents one segment of audio.
      type: object
      properties:
        audio:
          description: >-
            Raw audio synthesized from the Dialogflow agent's response using the
            output config specified in the request.
          type: string
          format: byte
        uri:
          description: >-
            Client-specific URI that points to an audio clip accessible to the
            client.
          type: string
        allowPlaybackInterruption:
          description: >-
            Whether the playback of this segment can be interrupted by the end
            user's speech and the client should then start the next Dialogflow
            request.
          type: boolean
    GoogleCloudDialogflowV2beta1ResponseMessageTelephonyTransferCall:
      id: GoogleCloudDialogflowV2beta1ResponseMessageTelephonyTransferCall
      description: >-
        Represents the signal that telles the client to transfer the phone call
        connected to the agent to a third-party endpoint.
      type: object
      properties:
        phoneNumber:
          description: >-
            Transfer the call to a phone number in [E.164
            format](https://en.wikipedia.org/wiki/E.164).
          type: string
        sipUri:
          description: Transfer the call to a SIP endpoint.
          type: string
    GoogleCloudDialogflowV2beta1MessageAnnotation:
      id: GoogleCloudDialogflowV2beta1MessageAnnotation
      description: Represents the result of annotation for the message.
      type: object
      properties:
        parts:
          description: >-
            Optional. The collection of annotated message parts ordered by their
            position in the message. You can recover the annotated message by
            concatenating [AnnotatedMessagePart.text].
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2beta1AnnotatedMessagePart
        containEntities:
          description: Required. Indicates whether the text message contains entities.
          type: boolean
    GoogleCloudDialogflowV2beta1AnnotatedMessagePart:
      id: GoogleCloudDialogflowV2beta1AnnotatedMessagePart
      description: >-
        Represents a part of a message possibly annotated with an entity. The
        part can be an entity or purely a part of the message between two
        entities or message start/end.
      type: object
      properties:
        text:
          description: Required. A part of a message possibly annotated with an entity.
          type: string
        entityType:
          description: >-
            Optional. The [Dialogflow system entity
            type](https://cloud.google.com/dialogflow/docs/reference/system-entities)
            of this message part. If this is empty, Dialogflow could not
            annotate the phrase part with a system entity.
          type: string
        formattedValue:
          description: >-
            Optional. The [Dialogflow system entity formatted value
            ](https://cloud.google.com/dialogflow/docs/reference/system-entities)
            of this message part. For example for a system entity of type
            `@sys.unit-currency`, this may contain: { "amount": 5, "currency":
            "USD" } 
          type: any
    GoogleCloudDialogflowV2beta1SentimentAnalysisResult:
      id: GoogleCloudDialogflowV2beta1SentimentAnalysisResult
      description: >-
        The result of sentiment analysis. Sentiment analysis inspects user input
        and identifies the prevailing subjective opinion, especially to
        determine a user's attitude as positive, negative, or neutral. For
        Participants.DetectIntent, it needs to be configured in
        DetectIntentRequest.query_params. For
        Participants.StreamingDetectIntent, it needs to be configured in
        StreamingDetectIntentRequest.query_params. And for
        Participants.AnalyzeContent and Participants.StreamingAnalyzeContent, it
        needs to be configured in
        ConversationProfile.human_agent_assistant_config
      type: object
      properties:
        queryTextSentiment:
          description: The sentiment analysis result for `query_text`.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1Sentiment'
    GoogleCloudDialogflowV2beta1Sentiment:
      id: GoogleCloudDialogflowV2beta1Sentiment
      description: >-
        The sentiment, such as positive/negative feeling or association, for a
        unit of analysis, such as the query text. See:
        https://cloud.google.com/natural-language/docs/basics#interpreting_sentiment_analysis_values
        for how to interpret the result.
      type: object
      properties:
        score:
          description: >-
            Sentiment score between -1.0 (negative sentiment) and 1.0 (positive
            sentiment).
          type: number
          format: float
        magnitude:
          description: >-
            A non-negative number in the [0, +inf) range, which represents the
            absolute magnitude of sentiment, regardless of score (positive or
            negative).
          type: number
          format: float
    GoogleCloudDialogflowV2beta1ExportAgentResponse:
      id: GoogleCloudDialogflowV2beta1ExportAgentResponse
      description: The response message for Agents.ExportAgent.
      type: object
      properties:
        agentUri:
          description: >-
            The URI to a file containing the exported agent. This field is
            populated only if `agent_uri` is specified in `ExportAgentRequest`.
          type: string
        agentContent:
          description: Zip compressed raw byte content for agent.
          type: string
          format: byte
    GoogleCloudDialogflowV2beta1HumanAgentAssistantEvent:
      id: GoogleCloudDialogflowV2beta1HumanAgentAssistantEvent
      description: >-
        Output only. Represents a notification sent to Pub/Sub subscribers for
        agent assistant events in a specific conversation.
      type: object
      properties:
        conversation:
          description: >-
            The conversation this notification refers to. Format:
            `projects//conversations/`.
          type: string
        participant:
          description: >-
            The participant that the suggestion is compiled for. And This field
            is used to call Participants.ListSuggestions API. Format:
            `projects//conversations//participants/`. It will not be set in
            legacy workflow. HumanAgentAssistantConfig.name for more
            information.
          type: string
        suggestionResults:
          description: >-
            The suggestion results payload that this notification refers to. It
            will only be set when
            HumanAgentAssistantConfig.SuggestionConfig.group_suggestion_responses
            sets to true.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1SuggestionResult'
    GoogleCloudDialogflowV2beta1SuggestionResult:
      id: GoogleCloudDialogflowV2beta1SuggestionResult
      description: >-
        One response of different type of suggestion response which is used in
        the response of Participants.AnalyzeContent and
        Participants.AnalyzeContent, as well as HumanAgentAssistantEvent.
      type: object
      properties:
        error:
          description: Error status if the request failed.
          $ref: '#/components/schemas/GoogleRpcStatus'
        suggestArticlesResponse:
          description: SuggestArticlesResponse if request is for ARTICLE_SUGGESTION.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1SuggestArticlesResponse
        suggestKnowledgeAssistResponse:
          description: SuggestKnowledgeAssistResponse if request is for KNOWLEDGE_ASSIST.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1SuggestKnowledgeAssistResponse
        suggestFaqAnswersResponse:
          description: SuggestFaqAnswersResponse if request is for FAQ_ANSWER.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1SuggestFaqAnswersResponse
        suggestSmartRepliesResponse:
          description: SuggestSmartRepliesResponse if request is for SMART_REPLY.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1SuggestSmartRepliesResponse
        suggestDialogflowAssistsResponse:
          description: >-
            SuggestDialogflowAssistsResponse if request is for
            DIALOGFLOW_ASSIST.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1SuggestDialogflowAssistsResponse
        suggestEntityExtractionResponse:
          description: >-
            SuggestDialogflowAssistsResponse if request is for
            ENTITY_EXTRACTION.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1SuggestDialogflowAssistsResponse
    GoogleCloudDialogflowV2beta1SuggestArticlesResponse:
      id: GoogleCloudDialogflowV2beta1SuggestArticlesResponse
      description: The response message for Participants.SuggestArticles.
      type: object
      properties:
        articleAnswers:
          description: Output only. Articles ordered by score in descending order.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1ArticleAnswer'
        latestMessage:
          description: >-
            The name of the latest conversation message used to compile
            suggestion for. Format:
            `projects//locations//conversations//messages/`.
          type: string
        contextSize:
          description: >-
            Number of messages prior to and including latest_message to compile
            the suggestion. It may be smaller than the
            SuggestArticlesResponse.context_size field in the request if there
            aren't that many messages in the conversation.
          type: integer
          format: int32
    GoogleCloudDialogflowV2beta1ArticleAnswer:
      id: GoogleCloudDialogflowV2beta1ArticleAnswer
      description: Represents article answer.
      type: object
      properties:
        title:
          description: The article title.
          type: string
        uri:
          description: The article URI.
          type: string
        snippets:
          description: Output only. Article snippets.
          type: array
          items:
            type: string
        metadata:
          description: >-
            A map that contains metadata about the answer and the document from
            which it originates.
          type: object
          additionalProperties:
            type: string
        answerRecord:
          description: >-
            The name of answer record, in the format of
            "projects//locations//answerRecords/"
          type: string
    GoogleCloudDialogflowV2beta1SuggestKnowledgeAssistResponse:
      id: GoogleCloudDialogflowV2beta1SuggestKnowledgeAssistResponse
      description: The response message for Participants.SuggestKnowledgeAssist.
      type: object
      properties:
        knowledgeAssistAnswer:
          description: Output only. Knowledge Assist suggestion.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1KnowledgeAssistAnswer
        latestMessage:
          description: >-
            The name of the latest conversation message used to compile
            suggestion for. Format:
            `projects//locations//conversations//messages/`.
          type: string
        contextSize:
          description: >-
            Number of messages prior to and including latest_message to compile
            the suggestion. It may be smaller than the
            SuggestKnowledgeAssistRequest.context_size field in the request if
            there are fewer messages in the conversation.
          type: integer
          format: int32
    GoogleCloudDialogflowV2beta1KnowledgeAssistAnswer:
      id: GoogleCloudDialogflowV2beta1KnowledgeAssistAnswer
      description: Represents a Knowledge Assist answer.
      type: object
      properties:
        suggestedQuery:
          description: >-
            The query suggested based on the context. Suggestion is made only if
            it is different from the previous suggestion.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1KnowledgeAssistAnswerSuggestedQuery
        suggestedQueryAnswer:
          description: >-
            The answer generated for the suggested query. Whether or not an
            answer is generated depends on how confident we are about the
            generated query.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1KnowledgeAssistAnswerKnowledgeAnswer
        answerRecord:
          description: >-
            The name of the answer record. Format: `projects//locations//answer
            Records/`.
          type: string
    GoogleCloudDialogflowV2beta1KnowledgeAssistAnswerSuggestedQuery:
      id: GoogleCloudDialogflowV2beta1KnowledgeAssistAnswerSuggestedQuery
      description: Represents a suggested query.
      type: object
      properties:
        queryText:
          description: Suggested query text.
          type: string
    GoogleCloudDialogflowV2beta1KnowledgeAssistAnswerKnowledgeAnswer:
      id: GoogleCloudDialogflowV2beta1KnowledgeAssistAnswerKnowledgeAnswer
      description: >-
        Represents an answer from Knowledge. Currently supports FAQ and
        Generative answers.
      type: object
      properties:
        answerText:
          description: >-
            The piece of text from the `source` that answers this suggested
            query.
          type: string
        faqSource:
          description: Populated if the prediction came from FAQ.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1KnowledgeAssistAnswerKnowledgeAnswerFaqSource
        generativeSource:
          description: Populated if the prediction was Generative.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1KnowledgeAssistAnswerKnowledgeAnswerGenerativeSource
    GoogleCloudDialogflowV2beta1KnowledgeAssistAnswerKnowledgeAnswerFaqSource:
      id: >-
        GoogleCloudDialogflowV2beta1KnowledgeAssistAnswerKnowledgeAnswerFaqSource
      description: Details about source of FAQ answer.
      type: object
      properties:
        question:
          description: The corresponding FAQ question.
          type: string
    GoogleCloudDialogflowV2beta1KnowledgeAssistAnswerKnowledgeAnswerGenerativeSource:
      id: >-
        GoogleCloudDialogflowV2beta1KnowledgeAssistAnswerKnowledgeAnswerGenerativeSource
      description: Details about source of Generative answer.
      type: object
      properties:
        snippets:
          description: >-
            All snippets used for this Generative Prediction, with their source
            URI and data.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2beta1KnowledgeAssistAnswerKnowledgeAnswerGenerativeSourceSnippet
    GoogleCloudDialogflowV2beta1KnowledgeAssistAnswerKnowledgeAnswerGenerativeSourceSnippet:
      id: >-
        GoogleCloudDialogflowV2beta1KnowledgeAssistAnswerKnowledgeAnswerGenerativeSourceSnippet
      description: Snippet Source for a Generative Prediction.
      type: object
      properties:
        uri:
          description: URI the data is sourced from.
          type: string
        text:
          description: Text taken from that URI.
          type: string
        title:
          description: Title of the document.
          type: string
    GoogleCloudDialogflowV2beta1SuggestFaqAnswersResponse:
      id: GoogleCloudDialogflowV2beta1SuggestFaqAnswersResponse
      description: The request message for Participants.SuggestFaqAnswers.
      type: object
      properties:
        faqAnswers:
          description: Output only. Answers extracted from FAQ documents.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1FaqAnswer'
        latestMessage:
          description: >-
            The name of the latest conversation message used to compile
            suggestion for. Format:
            `projects//locations//conversations//messages/`.
          type: string
        contextSize:
          description: >-
            Number of messages prior to and including latest_message to compile
            the suggestion. It may be smaller than the
            SuggestFaqAnswersRequest.context_size field in the request if there
            aren't that many messages in the conversation.
          type: integer
          format: int32
    GoogleCloudDialogflowV2beta1FaqAnswer:
      id: GoogleCloudDialogflowV2beta1FaqAnswer
      description: Represents answer from "frequently asked questions".
      type: object
      properties:
        answer:
          description: The piece of text from the `source` knowledge base document.
          type: string
        confidence:
          description: >-
            The system's confidence score that this Knowledge answer is a good
            match for this conversational query, range from 0.0 (completely
            uncertain) to 1.0 (completely certain).
          type: number
          format: float
        question:
          description: The corresponding FAQ question.
          type: string
        source:
          description: >-
            Indicates which Knowledge Document this answer was extracted from.
            Format: `projects//locations//agent/knowledgeBases//documents/`.
          type: string
        metadata:
          description: >-
            A map that contains metadata about the answer and the document from
            which it originates.
          type: object
          additionalProperties:
            type: string
        answerRecord:
          description: >-
            The name of answer record, in the format of
            "projects//locations//answerRecords/"
          type: string
    GoogleCloudDialogflowV2beta1SuggestSmartRepliesResponse:
      id: GoogleCloudDialogflowV2beta1SuggestSmartRepliesResponse
      description: The response message for Participants.SuggestSmartReplies.
      type: object
      properties:
        smartReplyAnswers:
          description: >-
            Output only. Multiple reply options provided by smart reply service.
            The order is based on the rank of the model prediction. The maximum
            number of the returned replies is set in SmartReplyConfig.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1SmartReplyAnswer'
        latestMessage:
          description: >-
            The name of the latest conversation message used to compile
            suggestion for. Format:
            `projects//locations//conversations//messages/`.
          type: string
        contextSize:
          description: >-
            Number of messages prior to and including latest_message to compile
            the suggestion. It may be smaller than the
            SuggestSmartRepliesRequest.context_size field in the request if
            there aren't that many messages in the conversation.
          type: integer
          format: int32
    GoogleCloudDialogflowV2beta1SmartReplyAnswer:
      id: GoogleCloudDialogflowV2beta1SmartReplyAnswer
      description: Represents a smart reply answer.
      type: object
      properties:
        reply:
          description: The content of the reply.
          type: string
        confidence:
          description: >-
            Smart reply confidence. The system's confidence score that this
            reply is a good match for this conversation, as a value from 0.0
            (completely uncertain) to 1.0 (completely certain).
          type: number
          format: float
        answerRecord:
          description: >-
            The name of answer record, in the format of
            "projects//locations//answerRecords/"
          type: string
    GoogleCloudDialogflowV2beta1SuggestDialogflowAssistsResponse:
      id: GoogleCloudDialogflowV2beta1SuggestDialogflowAssistsResponse
      description: The response message for Participants.SuggestDialogflowAssists.
      type: object
      properties:
        dialogflowAssistAnswers:
          description: >-
            Output only. Multiple reply options provided by Dialogflow assist
            service. The order is based on the rank of the model prediction.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2beta1DialogflowAssistAnswer
        latestMessage:
          description: >-
            The name of the latest conversation message used to suggest answer.
            Format: `projects//locations//conversations//messages/`.
          type: string
        contextSize:
          description: >-
            Number of messages prior to and including latest_message to compile
            the suggestion. It may be smaller than the
            SuggestDialogflowAssistsRequest.context_size field in the request if
            there aren't that many messages in the conversation.
          type: integer
          format: int32
    GoogleCloudDialogflowV2beta1DialogflowAssistAnswer:
      id: GoogleCloudDialogflowV2beta1DialogflowAssistAnswer
      description: Represents a Dialogflow assist answer.
      type: object
      properties:
        queryResult:
          description: Result from v2 agent.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1QueryResult'
        intentSuggestion:
          description: An intent suggestion generated from conversation.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1IntentSuggestion'
        answerRecord:
          description: >-
            The name of answer record, in the format of
            "projects//locations//answerRecords/"
          type: string
    GoogleCloudDialogflowV2beta1QueryResult:
      id: GoogleCloudDialogflowV2beta1QueryResult
      description: Represents the result of conversational query or event processing.
      type: object
      properties:
        queryText:
          description: >-
            The original conversational query text: - If natural language text
            was provided as input, `query_text` contains a copy of the input. -
            If natural language speech audio was provided as input, `query_text`
            contains the speech recognition result. If speech recognizer
            produced multiple alternatives, a particular one is picked. - If
            automatic spell correction is enabled, `query_text` will contain the
            corrected user input.
          type: string
        languageCode:
          description: >-
            The language that was triggered during intent detection. See
            [Language
            Support](https://cloud.google.com/dialogflow/docs/reference/language)
            for a list of the currently supported language codes.
          type: string
        speechRecognitionConfidence:
          description: >-
            The Speech recognition confidence between 0.0 and 1.0. A higher
            number indicates an estimated greater likelihood that the recognized
            words are correct. The default of 0.0 is a sentinel value indicating
            that confidence was not set. This field is not guaranteed to be
            accurate or set. In particular this field isn't set for
            StreamingDetectIntent since the streaming endpoint has separate
            confidence estimates per portion of the audio in
            StreamingRecognitionResult.
          type: number
          format: float
        action:
          description: The action name from the matched intent.
          type: string
        parameters:
          description: >-
            The collection of extracted parameters. Depending on your protocol
            or client library language, this is a map, associative array, symbol
            table, dictionary, or JSON object composed of a collection of
            (MapKey, MapValue) pairs: * MapKey type: string * MapKey value:
            parameter name * MapValue type: If parameter's entity type is a
            composite entity then use map, otherwise, depending on the parameter
            value type, it could be one of string, number, boolean, null, list
            or map. * MapValue value: If parameter's entity type is a composite
            entity then use map from composite entity property names to property
            values, otherwise, use parameter value.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        allRequiredParamsPresent:
          description: >-
            This field is set to: - `false` if the matched intent has required
            parameters and not all of the required parameter values have been
            collected. - `true` if all required parameter values have been
            collected, or if the matched intent doesn't contain any required
            parameters.
          type: boolean
        cancelsSlotFilling:
          description: >-
            Indicates whether the conversational query triggers a cancellation
            for slot filling. For more information, see the [cancel slot filling
            documentation](https://cloud.google.com/dialogflow/es/docs/intents-actions-parameters#cancel).
          type: boolean
        fulfillmentText:
          description: >-
            The text to be pronounced to the user or shown on the screen. Note:
            This is a legacy field, `fulfillment_messages` should be preferred.
          type: string
        fulfillmentMessages:
          description: The collection of rich messages to present to the user.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessage'
        webhookSource:
          description: >-
            If the query was fulfilled by a webhook call, this field is set to
            the value of the `source` field returned in the webhook response.
          type: string
        webhookPayload:
          description: >-
            If the query was fulfilled by a webhook call, this field is set to
            the value of the `payload` field returned in the webhook response.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        outputContexts:
          description: >-
            The collection of output contexts. If applicable,
            `output_contexts.parameters` contains entries with name `.original`
            containing the original parameter values before the query.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1Context'
        intent:
          description: >-
            The intent that matched the conversational query. Some, not all
            fields are filled in this message, including but not limited to:
            `name`, `display_name`, `end_interaction` and `is_fallback`.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1Intent'
        intentDetectionConfidence:
          description: >-
            The intent detection confidence. Values range from 0.0 (completely
            uncertain) to 1.0 (completely certain). This value is for
            informational purpose only and is only used to help match the best
            intent within the classification threshold. This value may change
            for the same end-user expression at any time due to a model
            retraining or change in implementation. If there are `multiple
            knowledge_answers` messages, this value is set to the greatest
            `knowledgeAnswers.match_confidence` value in the list.
          type: number
          format: float
        diagnosticInfo:
          description: >-
            Free-form diagnostic information for the associated detect intent
            request. The fields of this data can change without notice, so you
            should not write code that depends on its structure. The data may
            contain: - webhook call latency - webhook errors
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        sentimentAnalysisResult:
          description: >-
            The sentiment analysis result, which depends on the
            `sentiment_analysis_request_config` specified in the request.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1SentimentAnalysisResult
        knowledgeAnswers:
          description: >-
            The result from Knowledge Connector (if any), ordered by decreasing
            `KnowledgeAnswers.match_confidence`.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1KnowledgeAnswers'
    GoogleCloudDialogflowV2beta1KnowledgeAnswers:
      id: GoogleCloudDialogflowV2beta1KnowledgeAnswers
      description: Represents the result of querying a Knowledge base.
      type: object
      properties:
        answers:
          description: A list of answers from Knowledge Connector.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer
    GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer:
      id: GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer
      description: An answer from Knowledge Connector.
      type: object
      properties:
        source:
          description: >-
            Indicates which Knowledge Document this answer was extracted from.
            Format: `projects//knowledgeBases//documents/`.
          type: string
        faqQuestion:
          description: >-
            The corresponding FAQ question if the answer was extracted from a
            FAQ Document, empty otherwise.
          type: string
        answer:
          description: >-
            The piece of text from the `source` knowledge base document that
            answers this conversational query.
          type: string
        matchConfidenceLevel:
          description: >-
            The system's confidence level that this knowledge answer is a good
            match for this conversational query. NOTE: The confidence level for
            a given `` pair may change without notice, as it depends on models
            that are constantly being improved. However, it will change less
            frequently than the confidence score below, and should be preferred
            for referencing the quality of an answer.
          type: string
          enumDescriptions:
            - Not specified.
            - Indicates that the confidence is low.
            - Indicates our confidence is medium.
            - Indicates our confidence is high.
          enum:
            - MATCH_CONFIDENCE_LEVEL_UNSPECIFIED
            - LOW
            - MEDIUM
            - HIGH
        matchConfidence:
          description: >-
            The system's confidence score that this Knowledge answer is a good
            match for this conversational query. The range is from 0.0
            (completely uncertain) to 1.0 (completely certain). Note: The
            confidence score is likely to vary somewhat (possibly even for
            identical requests), as the underlying model is under constant
            improvement. It may be deprecated in the future. We recommend using
            `match_confidence_level` which should be generally more stable.
          type: number
          format: float
    GoogleCloudDialogflowV2beta1IntentSuggestion:
      id: GoogleCloudDialogflowV2beta1IntentSuggestion
      description: Represents an intent suggestion.
      type: object
      properties:
        displayName:
          description: The display name of the intent.
          type: string
        intentV2:
          description: >-
            The unique identifier of this intent. Format:
            `projects//locations//agent/intents/`.
          type: string
        description:
          description: >-
            Human readable description for better understanding an intent like
            its scope, content, result etc. Maximum character limit: 140
            characters.
          type: string
    GoogleCloudDialogflowV2beta1ImportDocumentsResponse:
      id: GoogleCloudDialogflowV2beta1ImportDocumentsResponse
      description: Response message for Documents.ImportDocuments.
      type: object
      properties:
        warnings:
          description: Includes details about skipped documents or any other warnings.
          type: array
          items:
            $ref: '#/components/schemas/GoogleRpcStatus'
    GoogleCloudDialogflowV2beta1InitializeEncryptionSpecMetadata:
      id: GoogleCloudDialogflowV2beta1InitializeEncryptionSpecMetadata
      description: Metadata for initializing a location-level encryption specification.
      type: object
      properties:
        request:
          description: Output only. The original request for initialization.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1InitializeEncryptionSpecRequest
    GoogleCloudDialogflowV2beta1InitializeEncryptionSpecRequest:
      id: GoogleCloudDialogflowV2beta1InitializeEncryptionSpecRequest
      description: The request to initialize a location-level encryption specification.
      type: object
      properties:
        encryptionSpec:
          description: >-
            Required. The encryption spec used for CMEK encryption. It is
            required that the kms key is in the same region as the endpoint. The
            same key will be used for all provisioned resources, if encryption
            is available. If the kms_key_name is left empty, no encryption will
            be enforced.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1EncryptionSpec'
    GoogleCloudDialogflowV2beta1EncryptionSpec:
      id: GoogleCloudDialogflowV2beta1EncryptionSpec
      description: >-
        A customer-managed encryption key specification that can be applied to
        all created resources (e.g. Conversation).
      type: object
      properties:
        name:
          description: >-
            Immutable. The resource name of the encryption key specification
            resource. Format:
            projects/{project}/locations/{location}/encryptionSpec
          type: string
        kmsKey:
          description: >-
            Required. The name of customer-managed encryption key that is used
            to secure a resource and its sub-resources. If empty, the resource
            is secured by the default Google encryption key. Only the key in the
            same location as this resource is allowed to be used for encryption.
            Format:
            `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{key}`
          type: string
    GoogleCloudDialogflowV2beta1KnowledgeOperationMetadata:
      id: GoogleCloudDialogflowV2beta1KnowledgeOperationMetadata
      description: Metadata in google::longrunning::Operation for Knowledge operations.
      type: object
      properties:
        state:
          description: Required. Output only. The current state of this operation.
          readOnly: true
          type: string
          enumDescriptions:
            - State unspecified.
            - The operation has been created.
            - The operation is currently running.
            - The operation is done, either cancelled or completed.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - DONE
        knowledgeBase:
          description: The name of the knowledge base interacted with during the operation.
          type: string
        exportOperationMetadata:
          description: >-
            Metadata for the Export Data Operation such as the destination of
            export.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1ExportOperationMetadata
    GoogleCloudDialogflowV2beta1ExportOperationMetadata:
      id: GoogleCloudDialogflowV2beta1ExportOperationMetadata
      description: Metadata related to the Export Data Operations (e.g. ExportDocument).
      type: object
      properties:
        exportedGcsDestination:
          description: Cloud Storage file path of the exported data.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1GcsDestination'
    GoogleCloudDialogflowV2beta1GcsDestination:
      id: GoogleCloudDialogflowV2beta1GcsDestination
      description: Google Cloud Storage location for the output.
      type: object
      properties:
        uri:
          description: >-
            Required. The Google Cloud Storage URIs for the output. A URI is of
            the form: `gs://bucket/object-prefix-or-name` Whether a prefix or
            name is used depends on the use case. The requesting user must have
            "write-permission" to the bucket.
          type: string
    GoogleCloudDialogflowV2beta1OriginalDetectIntentRequest:
      id: GoogleCloudDialogflowV2beta1OriginalDetectIntentRequest
      description: >-
        Represents the contents of the original request that was passed to the
        `[Streaming]DetectIntent` call.
      type: object
      properties:
        source:
          description: >-
            The source of this request, e.g., `google`, `facebook`, `slack`. It
            is set by Dialogflow-owned servers.
          type: string
        version:
          description: >-
            Optional. The version of the protocol used for this request. This
            field is AoG-specific.
          type: string
        payload:
          description: >-
            Optional. This field is set to the value of the
            `QueryParameters.payload` field passed in the request. Some
            integrations that query a Dialogflow agent may provide additional
            information in the payload. In particular, for the Dialogflow Phone
            Gateway integration, this field has the form: { "telephony": {
            "caller_id": "+18558363987" } } Note: The caller ID field
            (`caller_id`) will be redacted for Trial Edition agents and
            populated with the caller ID in [E.164
            format](https://en.wikipedia.org/wiki/E.164) for Essentials Edition
            agents.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
    GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigOperationMetadata:
      id: GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigOperationMetadata
      description: Metadata for a ConversationProfile.SetSuggestionFeatureConfig operation.
      type: object
      properties:
        conversationProfile:
          description: >-
            The resource name of the conversation profile. Format:
            `projects//locations//conversationProfiles/`
          type: string
        participantRole:
          description: >-
            Required. The participant role to add or update the suggestion
            feature config. Only HUMAN_AGENT or END_USER can be used.
          type: string
          enumDescriptions:
            - Participant role not set.
            - Participant is a human agent.
            - Participant is an automated agent, such as a Dialogflow agent.
            - >-
              Participant is an end user that has called or chatted with
              Dialogflow services.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
        suggestionFeatureType:
          description: Required. The type of the suggestion feature to add or update.
          type: string
          enumDescriptions:
            - Unspecified feature type.
            - Run article suggestion model for chat.
            - Run FAQ model.
            - Run smart reply model for chat.
            - >-
              Run Dialogflow assist model for chat, which will return automated
              agent response as suggestion.
            - Run conversation summarization model for chat.
            - >-
              Run knowledge search with text input from agent or text generated
              query.
            - Run knowledge assist with automatic query generation.
          enum:
            - TYPE_UNSPECIFIED
            - ARTICLE_SUGGESTION
            - FAQ
            - SMART_REPLY
            - DIALOGFLOW_ASSIST
            - CONVERSATION_SUMMARIZATION
            - KNOWLEDGE_SEARCH
            - KNOWLEDGE_ASSIST
        createTime:
          description: >-
            Timestamp whe the request was created. The time is measured on
            server side.
          type: string
          format: google-datetime
    GoogleCloudDialogflowV2beta1WebhookRequest:
      id: GoogleCloudDialogflowV2beta1WebhookRequest
      description: The request message for a webhook call.
      type: object
      properties:
        session:
          description: >-
            The unique identifier of detectIntent request session. Can be used
            to identify end-user inside webhook implementation. Supported
            formats: - `projects//agent/sessions/, -
            `projects//locations//agent/sessions/`, -
            `projects//agent/environments//users//sessions/`, -
            `projects//locations//agent/environments//users//sessions/`,
          type: string
        responseId:
          description: >-
            The unique identifier of the response. Contains the same value as
            `[Streaming]DetectIntentResponse.response_id`.
          type: string
        queryResult:
          description: >-
            The result of the conversational query or event processing. Contains
            the same value as `[Streaming]DetectIntentResponse.query_result`.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1QueryResult'
        alternativeQueryResults:
          description: Alternative query results from KnowledgeService.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1QueryResult'
        originalDetectIntentRequest:
          description: >-
            Optional. The contents of the original request that was passed to
            `[Streaming]DetectIntent` call.
          $ref: >-
            #/components/schemas/GoogleCloudDialogflowV2beta1OriginalDetectIntentRequest
    GoogleCloudDialogflowV2beta1WebhookResponse:
      id: GoogleCloudDialogflowV2beta1WebhookResponse
      description: >-
        The response message for a webhook call. This response is validated by
        the Dialogflow server. If validation fails, an error will be returned in
        the QueryResult.diagnostic_info field. Setting JSON fields to an empty
        value with the wrong type is a common error. To avoid this error: - Use
        `""` for empty strings - Use `{}` or `null` for empty objects - Use `[]`
        or `null` for empty arrays For more information, see the [Protocol
        Buffers Language
        Guide](https://developers.google.com/protocol-buffers/docs/proto3#json).
      type: object
      properties:
        fulfillmentText:
          description: >-
            Optional. The text response message intended for the end-user. It is
            recommended to use `fulfillment_messages.text.text[0]` instead. When
            provided, Dialogflow uses this field to populate
            QueryResult.fulfillment_text sent to the integration or API caller.
          type: string
        fulfillmentMessages:
          description: >-
            Optional. The rich response messages intended for the end-user. When
            provided, Dialogflow uses this field to populate
            QueryResult.fulfillment_messages sent to the integration or API
            caller.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessage'
        source:
          description: >-
            Optional. A custom field used to identify the webhook source.
            Arbitrary strings are supported. When provided, Dialogflow uses this
            field to populate QueryResult.webhook_source sent to the integration
            or API caller.
          type: string
        payload:
          description: >-
            Optional. This field can be used to pass custom data from your
            webhook to the integration or API caller. Arbitrary JSON objects are
            supported. When provided, Dialogflow uses this field to populate
            QueryResult.webhook_payload sent to the integration or API caller.
            This field is also used by the [Google Assistant
            integration](https://cloud.google.com/dialogflow/docs/integrations/aog)
            for rich response messages. See the format definition at [Google
            Assistant Dialogflow webhook
            format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        outputContexts:
          description: >-
            Optional. The collection of output contexts that will overwrite
            currently active contexts for the session and reset their lifespans.
            When provided, Dialogflow uses this field to populate
            QueryResult.output_contexts sent to the integration or API caller.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1Context'
        followupEventInput:
          description: >-
            Optional. Invokes the supplied events. When this field is set,
            Dialogflow ignores the `fulfillment_text`, `fulfillment_messages`,
            and `payload` fields.
          $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1EventInput'
        liveAgentHandoff:
          description: >-
            Indicates that a live agent should be brought in to handle the
            interaction with the user. In most cases, when you set this flag to
            true, you would also want to set end_interaction to true as well.
            Default is false.
          type: boolean
        endInteraction:
          description: >-
            Optional. Indicates that this intent ends an interaction. Some
            integrations (e.g., Actions on Google or Dialogflow phone gateway)
            use this information to close interaction with an end user. Default
            is false.
          type: boolean
        sessionEntityTypes:
          description: >-
            Optional. Additional session entity types to replace or extend
            developer entity types with. The entity synonyms apply to all
            languages and persist for the session. Setting this data from a
            webhook overwrites the session entity types that have been set using
            `detectIntent`, `streamingDetectIntent` or SessionEntityType
            management methods.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1SessionEntityType'
    GoogleCloudDialogflowV2beta1EventInput:
      id: GoogleCloudDialogflowV2beta1EventInput
      description: >-
        Events allow for matching intents by event name instead of the natural
        language input. For instance, input `` can trigger a personalized
        welcome response. The parameter `name` may be used by the agent in the
        response: `"Hello #welcome_event.name! What can I do for you today?"`.
      type: object
      properties:
        name:
          description: Required. The unique identifier of the event.
          type: string
        parameters:
          description: >-
            The collection of parameters associated with the event. Depending on
            your protocol or client library language, this is a map, associative
            array, symbol table, dictionary, or JSON object composed of a
            collection of (MapKey, MapValue) pairs: * MapKey type: string *
            MapKey value: parameter name * MapValue type: If parameter's entity
            type is a composite entity then use map, otherwise, depending on the
            parameter value type, it could be one of string, number, boolean,
            null, list or map. * MapValue value: If parameter's entity type is a
            composite entity then use map from composite entity property names
            to property values, otherwise, use parameter value.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
        languageCode:
          description: >-
            Required. The language of this query. See [Language
            Support](https://cloud.google.com/dialogflow/docs/reference/language)
            for a list of the currently supported language codes. Note that
            queries in the same session do not necessarily need to specify the
            same language. This field is ignored when used in the context of a
            WebhookResponse.followup_event_input field, because the language was
            already defined in the originating detect intent request.
          type: string
    GoogleCloudDialogflowV2beta1SessionEntityType:
      id: GoogleCloudDialogflowV2beta1SessionEntityType
      description: >-
        A session represents a conversation between a Dialogflow agent and an
        end-user. You can create special entities, called session entities,
        during a session. Session entities can extend or replace custom entity
        types and only exist during the session that they were created for. All
        session data, including session entities, is stored by Dialogflow for 20
        minutes. For more information, see the [session entity
        guide](https://cloud.google.com/dialogflow/docs/entities-session).
      type: object
      properties:
        name:
          description: >-
            Required. The unique identifier of this session entity type.
            Supported formats: - `projects//agent/sessions//entityTypes/` -
            `projects//locations//agent/sessions//entityTypes/` -
            `projects//agent/environments//users//sessions//entityTypes/` -
            `projects//locations//agent/environments/
            /users//sessions//entityTypes/` If `Location ID` is not specified we
            assume default 'us' location. If `Environment ID` is not specified,
            we assume default 'draft' environment. If `User ID` is not
            specified, we assume default '-' user. `` must be the display name
            of an existing entity type in the same agent that will be overridden
            or supplemented.
          type: string
        entityOverrideMode:
          description: >-
            Required. Indicates whether the additional data should override or
            supplement the custom entity type definition.
          type: string
          enumDescriptions:
            - Not specified. This value should be never used.
            - >-
              The collection of session entities overrides the collection of
              entities in the corresponding custom entity type.
            - >-
              The collection of session entities extends the collection of
              entities in the corresponding custom entity type. Note: Even in
              this override mode calls to `ListSessionEntityTypes`,
              `GetSessionEntityType`, `CreateSessionEntityType` and
              `UpdateSessionEntityType` only return the additional entities
              added in this session entity type. If you want to get the
              supplemented list, please call EntityTypes.GetEntityType on the
              custom entity type and merge.
          enum:
            - ENTITY_OVERRIDE_MODE_UNSPECIFIED
            - ENTITY_OVERRIDE_MODE_OVERRIDE
            - ENTITY_OVERRIDE_MODE_SUPPLEMENT
        entities:
          description: >-
            Required. The collection of entities associated with this session
            entity type.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDialogflowV2beta1EntityTypeEntity'
    GoogleCloudDialogflowV3alpha1ConversationSignals:
      id: GoogleCloudDialogflowV3alpha1ConversationSignals
      description: >-
        This message is used to hold all the Conversation Signals data, which
        will be converted to JSON and exported to BigQuery.
      type: object
      properties:
        turnSignals:
          description: Required. Turn signals for the current turn.
          $ref: '#/components/schemas/GoogleCloudDialogflowV3alpha1TurnSignals'
    GoogleCloudDialogflowV3alpha1TurnSignals:
      id: GoogleCloudDialogflowV3alpha1TurnSignals
      description: >-
        Collection of all signals that were extracted for a single turn of the
        conversation.
      type: object
      properties:
        noMatch:
          description: Whether NLU predicted NO_MATCH.
          type: boolean
        noUserInput:
          description: Whether user provided no input.
          type: boolean
        dtmfUsed:
          description: Whether user was using DTMF input.
          type: boolean
        userEscalated:
          description: Whether user was specifically asking for a live agent.
          type: boolean
        agentEscalated:
          description: Whether agent responded with LiveAgentHandoff fulfillment.
          type: boolean
        triggeredAbandonmentEvent:
          description: >-
            Whether agent has triggered the event corresponding to user
            abandoning the conversation.
          type: boolean
        reachedEndPage:
          description: Whether turn resulted in End Session page.
          type: boolean
        webhookStatuses:
          description: Human-readable statuses of the webhooks triggered during this turn.
          type: array
          items:
            type: string
        failureReasons:
          description: Failure reasons of the turn.
          type: array
          items:
            type: string
            enumDescriptions:
              - Failure reason is not assigned.
              - Whether NLU failed to recognize user intent.
              - Whether webhook failed during the turn.
            enum:
              - FAILURE_REASON_UNSPECIFIED
              - FAILED_INTENT
              - FAILED_WEBHOOK
        sentimentScore:
          description: >-
            Sentiment score of the user utterance if
            [sentiment](https://cloud.google.com/dialogflow/cx/docs/concept/sentiment)
            was enabled.
          type: number
          format: float
        sentimentMagnitude:
          description: >-
            Sentiment magnitude of the user utterance if
            [sentiment](https://cloud.google.com/dialogflow/cx/docs/concept/sentiment)
            was enabled.
          type: number
          format: float
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    operations:
      id: google.dialogflow.operations
      name: operations
      title: Operations
      methods:
        projects_operations_list:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        projects_operations_get:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_operations_cancel:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_list:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        projects_locations_operations_get:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_cancel:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_operations_get
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_operations_get
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_locations_operations_list
          - $ref: >-
              #/components/x-stackQL-resources/operations/methods/projects_operations_list
        insert: []
        update: []
        replace: []
        delete: []
    locations:
      id: google.dialogflow.locations
      name: locations
      title: Locations
      methods:
        projects_locations_list:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        projects_locations_get:
          operation:
            $ref: '#/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/locations/methods/projects_locations_get
          - $ref: >-
              #/components/x-stackQL-resources/locations/methods/projects_locations_list
        insert: []
        update: []
        replace: []
        delete: []
    security_settings:
      id: google.dialogflow.security_settings
      name: security_settings
      title: Security_settings
      methods:
        projects_locations_security_settings_create:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1securitySettings/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_security_settings_list:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1securitySettings/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.securitySettings
        projects_locations_security_settings_get:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1securitySettings~1{securitySettingsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_security_settings_patch:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1securitySettings~1{securitySettingsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_security_settings_delete:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1securitySettings~1{securitySettingsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/security_settings/methods/projects_locations_security_settings_get
          - $ref: >-
              #/components/x-stackQL-resources/security_settings/methods/projects_locations_security_settings_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/security_settings/methods/projects_locations_security_settings_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/security_settings/methods/projects_locations_security_settings_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/security_settings/methods/projects_locations_security_settings_delete
    agents:
      id: google.dialogflow.agents
      name: agents
      title: Agents
      methods:
        projects_locations_agents_list:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.agents
        projects_locations_agents_create:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_get:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_patch:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_delete:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_export:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}:export/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_restore:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}:restore/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_validate:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}:validate/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/agents/methods/projects_locations_agents_get
          - $ref: >-
              #/components/x-stackQL-resources/agents/methods/projects_locations_agents_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/agents/methods/projects_locations_agents_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/agents/methods/projects_locations_agents_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/agents/methods/projects_locations_agents_delete
    agents_validation_result:
      id: google.dialogflow.agents_validation_result
      name: agents_validation_result
      title: Agents_validation_result
      methods:
        projects_locations_agents_get_validation_result:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1validationResult/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/agents_validation_result/methods/projects_locations_agents_get_validation_result
        insert: []
        update: []
        replace: []
        delete: []
    agents_generative_settings:
      id: google.dialogflow.agents_generative_settings
      name: agents_generative_settings
      title: Agents_generative_settings
      methods:
        projects_locations_agents_get_generative_settings:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1generativeSettings/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_update_generative_settings:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1generativeSettings/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/agents_generative_settings/methods/projects_locations_agents_get_generative_settings
        insert: []
        update:
          - $ref: >-
              #/components/x-stackQL-resources/agents_generative_settings/methods/projects_locations_agents_update_generative_settings
        replace: []
        delete: []
    flows:
      id: google.dialogflow.flows
      name: flows
      title: Flows
      methods:
        projects_locations_agents_flows_create:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1flows/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_flows_list:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1flows/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.flows
        projects_locations_agents_flows_delete:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1flows~1{flowsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_flows_get:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1flows~1{flowsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_flows_patch:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1flows~1{flowsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_flows_train:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1flows~1{flowsId}:train/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_flows_validate:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1flows~1{flowsId}:validate/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_flows_import:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1flows:import/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_flows_export:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1flows~1{flowsId}:export/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/flows/methods/projects_locations_agents_flows_get
          - $ref: >-
              #/components/x-stackQL-resources/flows/methods/projects_locations_agents_flows_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/flows/methods/projects_locations_agents_flows_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/flows/methods/projects_locations_agents_flows_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/flows/methods/projects_locations_agents_flows_delete
    flows_validation_result:
      id: google.dialogflow.flows_validation_result
      name: flows_validation_result
      title: Flows_validation_result
      methods:
        projects_locations_agents_flows_get_validation_result:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1flows~1{flowsId}~1validationResult/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/flows_validation_result/methods/projects_locations_agents_flows_get_validation_result
        insert: []
        update: []
        replace: []
        delete: []
    pages:
      id: google.dialogflow.pages
      name: pages
      title: Pages
      methods:
        projects_locations_agents_flows_pages_list:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1flows~1{flowsId}~1pages/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.pages
        projects_locations_agents_flows_pages_create:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1flows~1{flowsId}~1pages/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_flows_pages_get:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1flows~1{flowsId}~1pages~1{pagesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_flows_pages_patch:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1flows~1{flowsId}~1pages~1{pagesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_flows_pages_delete:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1flows~1{flowsId}~1pages~1{pagesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/pages/methods/projects_locations_agents_flows_pages_get
          - $ref: >-
              #/components/x-stackQL-resources/pages/methods/projects_locations_agents_flows_pages_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/pages/methods/projects_locations_agents_flows_pages_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/pages/methods/projects_locations_agents_flows_pages_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/pages/methods/projects_locations_agents_flows_pages_delete
    transition_route_groups:
      id: google.dialogflow.transition_route_groups
      name: transition_route_groups
      title: Transition_route_groups
      methods:
        projects_locations_agents_flows_transition_route_groups_list:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1flows~1{flowsId}~1transitionRouteGroups/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.transitionRouteGroups
        projects_locations_agents_flows_transition_route_groups_create:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1flows~1{flowsId}~1transitionRouteGroups/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_flows_transition_route_groups_get:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1flows~1{flowsId}~1transitionRouteGroups~1{transitionRouteGroupsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_flows_transition_route_groups_patch:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1flows~1{flowsId}~1transitionRouteGroups~1{transitionRouteGroupsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_flows_transition_route_groups_delete:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1flows~1{flowsId}~1transitionRouteGroups~1{transitionRouteGroupsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_transition_route_groups_list:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1transitionRouteGroups/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.transitionRouteGroups
        projects_locations_agents_transition_route_groups_create:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1transitionRouteGroups/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_transition_route_groups_get:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1transitionRouteGroups~1{transitionRouteGroupsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_transition_route_groups_patch:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1transitionRouteGroups~1{transitionRouteGroupsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_transition_route_groups_delete:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1transitionRouteGroups~1{transitionRouteGroupsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/transition_route_groups/methods/projects_locations_agents_flows_transition_route_groups_get
          - $ref: >-
              #/components/x-stackQL-resources/transition_route_groups/methods/projects_locations_agents_flows_transition_route_groups_list
          - $ref: >-
              #/components/x-stackQL-resources/transition_route_groups/methods/projects_locations_agents_transition_route_groups_get
          - $ref: >-
              #/components/x-stackQL-resources/transition_route_groups/methods/projects_locations_agents_transition_route_groups_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/transition_route_groups/methods/projects_locations_agents_flows_transition_route_groups_create
          - $ref: >-
              #/components/x-stackQL-resources/transition_route_groups/methods/projects_locations_agents_transition_route_groups_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/transition_route_groups/methods/projects_locations_agents_flows_transition_route_groups_patch
          - $ref: >-
              #/components/x-stackQL-resources/transition_route_groups/methods/projects_locations_agents_transition_route_groups_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/transition_route_groups/methods/projects_locations_agents_flows_transition_route_groups_delete
          - $ref: >-
              #/components/x-stackQL-resources/transition_route_groups/methods/projects_locations_agents_transition_route_groups_delete
    versions:
      id: google.dialogflow.versions
      name: versions
      title: Versions
      methods:
        projects_locations_agents_flows_versions_list:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1flows~1{flowsId}~1versions/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.versions
        projects_locations_agents_flows_versions_create:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1flows~1{flowsId}~1versions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_flows_versions_get:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1flows~1{flowsId}~1versions~1{versionsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_flows_versions_patch:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1flows~1{flowsId}~1versions~1{versionsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_flows_versions_delete:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1flows~1{flowsId}~1versions~1{versionsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_flows_versions_load:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1flows~1{flowsId}~1versions~1{versionsId}:load/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_flows_versions_compare_versions:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1flows~1{flowsId}~1versions~1{versionsId}:compareVersions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/versions/methods/projects_locations_agents_flows_versions_get
          - $ref: >-
              #/components/x-stackQL-resources/versions/methods/projects_locations_agents_flows_versions_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/versions/methods/projects_locations_agents_flows_versions_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/versions/methods/projects_locations_agents_flows_versions_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/versions/methods/projects_locations_agents_flows_versions_delete
    changelogs:
      id: google.dialogflow.changelogs
      name: changelogs
      title: Changelogs
      methods:
        projects_locations_agents_changelogs_list:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1changelogs/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.changelogs
        projects_locations_agents_changelogs_get:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1changelogs~1{changelogsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/changelogs/methods/projects_locations_agents_changelogs_get
          - $ref: >-
              #/components/x-stackQL-resources/changelogs/methods/projects_locations_agents_changelogs_list
        insert: []
        update: []
        replace: []
        delete: []
    entity_types:
      id: google.dialogflow.entity_types
      name: entity_types
      title: Entity_types
      methods:
        projects_locations_agents_entity_types_get:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1entityTypes~1{entityTypesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_entity_types_patch:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1entityTypes~1{entityTypesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_entity_types_delete:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1entityTypes~1{entityTypesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_entity_types_create:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1entityTypes/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_entity_types_list:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1entityTypes/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.entityTypes
        projects_locations_agents_entity_types_export:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1entityTypes:export/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_entity_types_import:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1entityTypes:import/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_sessions_entity_types_list:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1sessions~1{sessionsId}~1entityTypes/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.sessionEntityTypes
        projects_locations_agents_sessions_entity_types_create:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1sessions~1{sessionsId}~1entityTypes/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_sessions_entity_types_get:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1sessions~1{sessionsId}~1entityTypes~1{entityTypesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_sessions_entity_types_patch:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1sessions~1{sessionsId}~1entityTypes~1{entityTypesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_sessions_entity_types_delete:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1sessions~1{sessionsId}~1entityTypes~1{entityTypesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_environments_sessions_entity_types_list:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1environments~1{environmentsId}~1sessions~1{sessionsId}~1entityTypes/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.sessionEntityTypes
        projects_locations_agents_environments_sessions_entity_types_create:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1environments~1{environmentsId}~1sessions~1{sessionsId}~1entityTypes/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_environments_sessions_entity_types_get:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1environments~1{environmentsId}~1sessions~1{sessionsId}~1entityTypes~1{entityTypesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_environments_sessions_entity_types_patch:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1environments~1{environmentsId}~1sessions~1{sessionsId}~1entityTypes~1{entityTypesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_environments_sessions_entity_types_delete:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1environments~1{environmentsId}~1sessions~1{sessionsId}~1entityTypes~1{entityTypesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/entity_types/methods/projects_locations_agents_environments_sessions_entity_types_get
          - $ref: >-
              #/components/x-stackQL-resources/entity_types/methods/projects_locations_agents_sessions_entity_types_get
          - $ref: >-
              #/components/x-stackQL-resources/entity_types/methods/projects_locations_agents_environments_sessions_entity_types_list
          - $ref: >-
              #/components/x-stackQL-resources/entity_types/methods/projects_locations_agents_entity_types_get
          - $ref: >-
              #/components/x-stackQL-resources/entity_types/methods/projects_locations_agents_sessions_entity_types_list
          - $ref: >-
              #/components/x-stackQL-resources/entity_types/methods/projects_locations_agents_entity_types_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/entity_types/methods/projects_locations_agents_environments_sessions_entity_types_create
          - $ref: >-
              #/components/x-stackQL-resources/entity_types/methods/projects_locations_agents_sessions_entity_types_create
          - $ref: >-
              #/components/x-stackQL-resources/entity_types/methods/projects_locations_agents_entity_types_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/entity_types/methods/projects_locations_agents_environments_sessions_entity_types_patch
          - $ref: >-
              #/components/x-stackQL-resources/entity_types/methods/projects_locations_agents_sessions_entity_types_patch
          - $ref: >-
              #/components/x-stackQL-resources/entity_types/methods/projects_locations_agents_entity_types_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/entity_types/methods/projects_locations_agents_environments_sessions_entity_types_delete
          - $ref: >-
              #/components/x-stackQL-resources/entity_types/methods/projects_locations_agents_sessions_entity_types_delete
          - $ref: >-
              #/components/x-stackQL-resources/entity_types/methods/projects_locations_agents_entity_types_delete
    intents:
      id: google.dialogflow.intents
      name: intents
      title: Intents
      methods:
        projects_locations_agents_intents_list:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1intents/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.intents
        projects_locations_agents_intents_create:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1intents/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_intents_get:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1intents~1{intentsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_intents_patch:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1intents~1{intentsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_intents_delete:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1intents~1{intentsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_intents_import:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1intents:import/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_intents_export:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1intents:export/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/intents/methods/projects_locations_agents_intents_get
          - $ref: >-
              #/components/x-stackQL-resources/intents/methods/projects_locations_agents_intents_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/intents/methods/projects_locations_agents_intents_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/intents/methods/projects_locations_agents_intents_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/intents/methods/projects_locations_agents_intents_delete
    sessions:
      id: google.dialogflow.sessions
      name: sessions
      title: Sessions
      methods:
        projects_locations_agents_sessions_detect_intent:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1sessions~1{sessionsId}:detectIntent/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_sessions_server_streaming_detect_intent:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1sessions~1{sessionsId}:serverStreamingDetectIntent/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_sessions_match_intent:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1sessions~1{sessionsId}:matchIntent/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_sessions_fulfill_intent:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1sessions~1{sessionsId}:fulfillIntent/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_sessions_submit_answer_feedback:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1sessions~1{sessionsId}:submitAnswerFeedback/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_environments_sessions_detect_intent:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1environments~1{environmentsId}~1sessions~1{sessionsId}:detectIntent/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_environments_sessions_server_streaming_detect_intent:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1environments~1{environmentsId}~1sessions~1{sessionsId}:serverStreamingDetectIntent/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_environments_sessions_match_intent:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1environments~1{environmentsId}~1sessions~1{sessionsId}:matchIntent/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_environments_sessions_fulfill_intent:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1environments~1{environmentsId}~1sessions~1{sessionsId}:fulfillIntent/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    test_cases:
      id: google.dialogflow.test_cases
      name: test_cases
      title: Test_cases
      methods:
        projects_locations_agents_test_cases_list:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1testCases/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.testCases
        projects_locations_agents_test_cases_create:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1testCases/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_test_cases_batch_delete:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1testCases:batchDelete/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_test_cases_get:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1testCases~1{testCasesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_test_cases_patch:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1testCases~1{testCasesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_test_cases_run:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1testCases~1{testCasesId}:run/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_test_cases_batch_run:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1testCases:batchRun/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_test_cases_calculate_coverage:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1testCases:calculateCoverage/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_test_cases_import:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1testCases:import/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_test_cases_export:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1testCases:export/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/test_cases/methods/projects_locations_agents_test_cases_get
          - $ref: >-
              #/components/x-stackQL-resources/test_cases/methods/projects_locations_agents_test_cases_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/test_cases/methods/projects_locations_agents_test_cases_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/test_cases/methods/projects_locations_agents_test_cases_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/test_cases/methods/projects_locations_agents_test_cases_batch_delete
    results:
      id: google.dialogflow.results
      name: results
      title: Results
      methods:
        projects_locations_agents_test_cases_results_list:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1testCases~1{testCasesId}~1results/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.testCaseResults
        projects_locations_agents_test_cases_results_get:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1testCases~1{testCasesId}~1results~1{resultsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/results/methods/projects_locations_agents_test_cases_results_get
          - $ref: >-
              #/components/x-stackQL-resources/results/methods/projects_locations_agents_test_cases_results_list
        insert: []
        update: []
        replace: []
        delete: []
    webhooks:
      id: google.dialogflow.webhooks
      name: webhooks
      title: Webhooks
      methods:
        projects_locations_agents_webhooks_list:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1webhooks/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.webhooks
        projects_locations_agents_webhooks_create:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1webhooks/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_webhooks_get:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1webhooks~1{webhooksId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_webhooks_patch:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1webhooks~1{webhooksId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_webhooks_delete:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1webhooks~1{webhooksId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/webhooks/methods/projects_locations_agents_webhooks_get
          - $ref: >-
              #/components/x-stackQL-resources/webhooks/methods/projects_locations_agents_webhooks_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/webhooks/methods/projects_locations_agents_webhooks_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/webhooks/methods/projects_locations_agents_webhooks_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/webhooks/methods/projects_locations_agents_webhooks_delete
    environments:
      id: google.dialogflow.environments
      name: environments
      title: Environments
      methods:
        projects_locations_agents_environments_list:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1environments/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.environments
        projects_locations_agents_environments_create:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1environments/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_environments_get:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1environments~1{environmentsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_environments_patch:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1environments~1{environmentsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_environments_delete:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1environments~1{environmentsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_environments_lookup_environment_history:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1environments~1{environmentsId}:lookupEnvironmentHistory/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_environments_run_continuous_test:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1environments~1{environmentsId}:runContinuousTest/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_environments_deploy_flow:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1environments~1{environmentsId}:deployFlow/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/environments/methods/projects_locations_agents_environments_get
          - $ref: >-
              #/components/x-stackQL-resources/environments/methods/projects_locations_agents_environments_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/environments/methods/projects_locations_agents_environments_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/environments/methods/projects_locations_agents_environments_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/environments/methods/projects_locations_agents_environments_delete
    deployments:
      id: google.dialogflow.deployments
      name: deployments
      title: Deployments
      methods:
        projects_locations_agents_environments_deployments_list:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1environments~1{environmentsId}~1deployments/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.deployments
        projects_locations_agents_environments_deployments_get:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1environments~1{environmentsId}~1deployments~1{deploymentsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/deployments/methods/projects_locations_agents_environments_deployments_get
          - $ref: >-
              #/components/x-stackQL-resources/deployments/methods/projects_locations_agents_environments_deployments_list
        insert: []
        update: []
        replace: []
        delete: []
    continuous_test_results:
      id: google.dialogflow.continuous_test_results
      name: continuous_test_results
      title: Continuous_test_results
      methods:
        projects_locations_agents_environments_continuous_test_results_list:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1environments~1{environmentsId}~1continuousTestResults/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.continuousTestResults
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/continuous_test_results/methods/projects_locations_agents_environments_continuous_test_results_list
        insert: []
        update: []
        replace: []
        delete: []
    experiments:
      id: google.dialogflow.experiments
      name: experiments
      title: Experiments
      methods:
        projects_locations_agents_environments_experiments_list:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1environments~1{environmentsId}~1experiments/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.experiments
        projects_locations_agents_environments_experiments_create:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1environments~1{environmentsId}~1experiments/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_environments_experiments_get:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1environments~1{environmentsId}~1experiments~1{experimentsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_environments_experiments_patch:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1environments~1{environmentsId}~1experiments~1{experimentsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_environments_experiments_delete:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1environments~1{environmentsId}~1experiments~1{experimentsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_environments_experiments_start:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1environments~1{environmentsId}~1experiments~1{experimentsId}:start/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_environments_experiments_stop:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1environments~1{environmentsId}~1experiments~1{experimentsId}:stop/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/experiments/methods/projects_locations_agents_environments_experiments_get
          - $ref: >-
              #/components/x-stackQL-resources/experiments/methods/projects_locations_agents_environments_experiments_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/experiments/methods/projects_locations_agents_environments_experiments_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/experiments/methods/projects_locations_agents_environments_experiments_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/experiments/methods/projects_locations_agents_environments_experiments_delete
    generators:
      id: google.dialogflow.generators
      name: generators
      title: Generators
      methods:
        projects_locations_agents_generators_list:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1generators/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.generators
        projects_locations_agents_generators_create:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1generators/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_generators_get:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1generators~1{generatorsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_generators_patch:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1generators~1{generatorsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_agents_generators_delete:
          operation:
            $ref: >-
              #/paths/~1v3~1projects~1{projectsId}~1locations~1{locationsId}~1agents~1{agentsId}~1generators~1{generatorsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/generators/methods/projects_locations_agents_generators_get
          - $ref: >-
              #/components/x-stackQL-resources/generators/methods/projects_locations_agents_generators_list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/generators/methods/projects_locations_agents_generators_create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/generators/methods/projects_locations_agents_generators_patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/generators/methods/projects_locations_agents_generators_delete
paths:
  /v3/projects/{projectsId}/operations:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: dialogflow.projects.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v3/projects/{projectsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: dialogflow.projects.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: dialogflow.projects.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations:
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: dialogflow.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudLocationListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: dialogflow.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudLocationLocation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: dialogflow.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: dialogflow.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: dialogflow.projects.locations.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/securitySettings:
    parameters: *ref_1
    post:
      description: Create security settings in the specified location.
      operationId: dialogflow.projects.locations.securitySettings.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3SecuritySettings'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3SecuritySettings'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
    get:
      description: Returns the list of all security settings in the specified location.
      operationId: dialogflow.projects.locations.securitySettings.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3ListSecuritySettingsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/securitySettings/{securitySettingsId}:
    parameters: *ref_1
    get:
      description: >-
        Retrieves the specified SecuritySettings. The returned settings may be
        stale by up to 1 minute.
      operationId: dialogflow.projects.locations.securitySettings.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3SecuritySettings'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: securitySettingsId
          required: true
          schema:
            type: string
    patch:
      description: Updates the specified SecuritySettings.
      operationId: dialogflow.projects.locations.securitySettings.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3SecuritySettings'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3SecuritySettings'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: securitySettingsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes the specified SecuritySettings.
      operationId: dialogflow.projects.locations.securitySettings.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: securitySettingsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents:
    parameters: *ref_1
    get:
      description: Returns the list of all agents in the specified location.
      operationId: dialogflow.projects.locations.agents.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3ListAgentsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: >-
        Creates an agent in the specified location. Note: You should always
        train flows prior to sending them queries. See the [training
        documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      operationId: dialogflow.projects.locations.agents.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Agent'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Agent'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}:
    parameters: *ref_1
    get:
      description: Retrieves the specified agent.
      operationId: dialogflow.projects.locations.agents.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Agent'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates the specified agent. Note: You should always train flows prior
        to sending them queries. See the [training
        documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      operationId: dialogflow.projects.locations.agents.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Agent'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Agent'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes the specified agent.
      operationId: dialogflow.projects.locations.agents.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}:export:
    parameters: *ref_1
    post:
      description: >-
        Exports the specified agent to a binary file. This method is a
        [long-running
        operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
        The returned `Operation` type has the following method-specific fields:
        - `metadata`: An empty [Struct
        message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
        - `response`: ExportAgentResponse
      operationId: dialogflow.projects.locations.agents.export
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3ExportAgentRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}:restore:
    parameters: *ref_1
    post:
      description: >-
        Restores the specified agent from a binary file. Replaces the current
        agent with a new one. Note that all existing resources in agent (e.g.
        intents, entity types, flows) will be removed. This method is a
        [long-running
        operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
        The returned `Operation` type has the following method-specific fields:
        - `metadata`: An empty [Struct
        message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
        - `response`: An [Empty
        message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
        Note: You should always train flows prior to sending them queries. See
        the [training
        documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      operationId: dialogflow.projects.locations.agents.restore
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDialogflowCxV3RestoreAgentRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}:validate:
    parameters: *ref_1
    post:
      description: >-
        Validates the specified agent and creates or updates validation results.
        The agent in draft version is validated. Please call this API after the
        training is completed to get the complete validation results.
      operationId: dialogflow.projects.locations.agents.validate
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDialogflowCxV3ValidateAgentRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3AgentValidationResult
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/validationResult:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest agent validation result. Agent validation is performed
        when ValidateAgent is called.
      operationId: dialogflow.projects.locations.agents.getValidationResult
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3AgentValidationResult
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/generativeSettings:
    parameters: *ref_1
    get:
      description: Gets the generative settings for the agent.
      operationId: dialogflow.projects.locations.agents.getGenerativeSettings
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3GenerativeSettings
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
    patch:
      description: Updates the generative settings for the agent.
      operationId: dialogflow.projects.locations.agents.updateGenerativeSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3GenerativeSettings'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3GenerativeSettings
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows:
    parameters: *ref_1
    post:
      description: >-
        Creates a flow in the specified agent. Note: You should always train a
        flow prior to sending it queries. See the [training
        documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      operationId: dialogflow.projects.locations.agents.flows.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Flow'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Flow'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
    get:
      description: Returns the list of all flows in the specified agent.
      operationId: dialogflow.projects.locations.agents.flows.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3ListFlowsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}:
    parameters: *ref_1
    delete:
      description: Deletes a specified flow.
      operationId: dialogflow.projects.locations.agents.flows.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: flowsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
    get:
      description: Retrieves the specified flow.
      operationId: dialogflow.projects.locations.agents.flows.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Flow'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: flowsId
          required: true
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
    patch:
      description: >-
        Updates the specified flow. Note: You should always train a flow prior
        to sending it queries. See the [training
        documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      operationId: dialogflow.projects.locations.agents.flows.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Flow'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Flow'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: flowsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: languageCode
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}:train:
    parameters: *ref_1
    post:
      description: >-
        Trains the specified flow. Note that only the flow in 'draft'
        environment is trained. This method is a [long-running
        operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
        The returned `Operation` type has the following method-specific fields:
        - `metadata`: An empty [Struct
        message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
        - `response`: An [Empty
        message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
        Note: You should always train a flow prior to sending it queries. See
        the [training
        documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      operationId: dialogflow.projects.locations.agents.flows.train
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3TrainFlowRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: flowsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}:validate:
    parameters: *ref_1
    post:
      description: >-
        Validates the specified flow and creates or updates validation results.
        Please call this API after the training is completed to get the complete
        validation results.
      operationId: dialogflow.projects.locations.agents.flows.validate
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDialogflowCxV3ValidateFlowRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3FlowValidationResult
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: flowsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/validationResult:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest flow validation result. Flow validation is performed
        when ValidateFlow is called.
      operationId: dialogflow.projects.locations.agents.flows.getValidationResult
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3FlowValidationResult
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: flowsId
          required: true
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows:import:
    parameters: *ref_1
    post:
      description: >-
        Imports the specified flow to the specified agent from a binary file.
        This method is a [long-running
        operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
        The returned `Operation` type has the following method-specific fields:
        - `metadata`: An empty [Struct
        message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
        - `response`: ImportFlowResponse Note: You should always train a flow
        prior to sending it queries. See the [training
        documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      operationId: dialogflow.projects.locations.agents.flows.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3ImportFlowRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}:export:
    parameters: *ref_1
    post:
      description: >-
        Exports the specified flow to a binary file. This method is a
        [long-running
        operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
        The returned `Operation` type has the following method-specific fields:
        - `metadata`: An empty [Struct
        message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
        - `response`: ExportFlowResponse Note that resources (e.g. intents,
        entities, webhooks) that the flow references will also be exported.
      operationId: dialogflow.projects.locations.agents.flows.export
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3ExportFlowRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: flowsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/pages:
    parameters: *ref_1
    get:
      description: Returns the list of all pages in the specified flow.
      operationId: dialogflow.projects.locations.agents.flows.pages.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3ListPagesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: flowsId
          required: true
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: >-
        Creates a page in the specified flow. Note: You should always train a
        flow prior to sending it queries. See the [training
        documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      operationId: dialogflow.projects.locations.agents.flows.pages.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Page'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Page'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: flowsId
          required: true
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/pages/{pagesId}:
    parameters: *ref_1
    get:
      description: Retrieves the specified page.
      operationId: dialogflow.projects.locations.agents.flows.pages.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Page'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: flowsId
          required: true
          schema:
            type: string
        - in: path
          name: pagesId
          required: true
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
    patch:
      description: >-
        Updates the specified page. Note: You should always train a flow prior
        to sending it queries. See the [training
        documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      operationId: dialogflow.projects.locations.agents.flows.pages.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Page'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Page'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: flowsId
          required: true
          schema:
            type: string
        - in: path
          name: pagesId
          required: true
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: >-
        Deletes the specified page. Note: You should always train a flow prior
        to sending it queries. See the [training
        documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      operationId: dialogflow.projects.locations.agents.flows.pages.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: flowsId
          required: true
          schema:
            type: string
        - in: path
          name: pagesId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/transitionRouteGroups:
    parameters: *ref_1
    get:
      description: Returns the list of all transition route groups in the specified flow.
      operationId: dialogflow.projects.locations.agents.flows.transitionRouteGroups.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3ListTransitionRouteGroupsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: flowsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
    post:
      description: >-
        Creates an TransitionRouteGroup in the specified flow. Note: You should
        always train a flow prior to sending it queries. See the [training
        documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      operationId: dialogflow.projects.locations.agents.flows.transitionRouteGroups.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDialogflowCxV3TransitionRouteGroup
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3TransitionRouteGroup
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: flowsId
          required: true
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/transitionRouteGroups/{transitionRouteGroupsId}:
    parameters: *ref_1
    get:
      description: Retrieves the specified TransitionRouteGroup.
      operationId: dialogflow.projects.locations.agents.flows.transitionRouteGroups.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3TransitionRouteGroup
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: flowsId
          required: true
          schema:
            type: string
        - in: path
          name: transitionRouteGroupsId
          required: true
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
    patch:
      description: >-
        Updates the specified TransitionRouteGroup. Note: You should always
        train a flow prior to sending it queries. See the [training
        documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      operationId: dialogflow.projects.locations.agents.flows.transitionRouteGroups.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDialogflowCxV3TransitionRouteGroup
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3TransitionRouteGroup
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: flowsId
          required: true
          schema:
            type: string
        - in: path
          name: transitionRouteGroupsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: languageCode
          schema:
            type: string
    delete:
      description: >-
        Deletes the specified TransitionRouteGroup. Note: You should always
        train a flow prior to sending it queries. See the [training
        documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      operationId: dialogflow.projects.locations.agents.flows.transitionRouteGroups.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: flowsId
          required: true
          schema:
            type: string
        - in: path
          name: transitionRouteGroupsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/versions:
    parameters: *ref_1
    get:
      description: Returns the list of all versions in the specified Flow.
      operationId: dialogflow.projects.locations.agents.flows.versions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3ListVersionsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: flowsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: >-
        Creates a Version in the specified Flow. This method is a [long-running
        operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
        The returned `Operation` type has the following method-specific fields:
        - `metadata`: CreateVersionOperationMetadata - `response`: Version
      operationId: dialogflow.projects.locations.agents.flows.versions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Version'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: flowsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/versions/{versionsId}:
    parameters: *ref_1
    get:
      description: Retrieves the specified Version.
      operationId: dialogflow.projects.locations.agents.flows.versions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Version'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: flowsId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
    patch:
      description: Updates the specified Version.
      operationId: dialogflow.projects.locations.agents.flows.versions.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Version'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Version'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: flowsId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes the specified Version.
      operationId: dialogflow.projects.locations.agents.flows.versions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: flowsId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/versions/{versionsId}:load:
    parameters: *ref_1
    post:
      description: >-
        Loads resources in the specified version to the draft flow. This method
        is a [long-running
        operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
        The returned `Operation` type has the following method-specific fields:
        - `metadata`: An empty [Struct
        message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
        - `response`: An [Empty
        message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
      operationId: dialogflow.projects.locations.agents.flows.versions.load
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3LoadVersionRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: flowsId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/versions/{versionsId}:compareVersions:
    parameters: *ref_1
    post:
      description: Compares the specified base version with target version.
      operationId: dialogflow.projects.locations.agents.flows.versions.compareVersions
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDialogflowCxV3CompareVersionsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3CompareVersionsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: flowsId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/changelogs:
    parameters: *ref_1
    get:
      description: Returns the list of Changelogs.
      operationId: dialogflow.projects.locations.agents.changelogs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3ListChangelogsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/changelogs/{changelogsId}:
    parameters: *ref_1
    get:
      description: Retrieves the specified Changelog.
      operationId: dialogflow.projects.locations.agents.changelogs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Changelog'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: changelogsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/entityTypes/{entityTypesId}:
    parameters: *ref_1
    get:
      description: Retrieves the specified entity type.
      operationId: dialogflow.projects.locations.agents.entityTypes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3EntityType'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
    patch:
      description: >-
        Updates the specified entity type. Note: You should always train a flow
        prior to sending it queries. See the [training
        documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      operationId: dialogflow.projects.locations.agents.entityTypes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3EntityType'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3EntityType'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: >-
        Deletes the specified entity type. Note: You should always train a flow
        prior to sending it queries. See the [training
        documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      operationId: dialogflow.projects.locations.agents.entityTypes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/entityTypes:
    parameters: *ref_1
    post:
      description: >-
        Creates an entity type in the specified agent. Note: You should always
        train a flow prior to sending it queries. See the [training
        documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      operationId: dialogflow.projects.locations.agents.entityTypes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3EntityType'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3EntityType'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
    get:
      description: Returns the list of all entity types in the specified agent.
      operationId: dialogflow.projects.locations.agents.entityTypes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3ListEntityTypesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/entityTypes:export:
    parameters: *ref_1
    post:
      description: Exports the selected entity types.
      operationId: dialogflow.projects.locations.agents.entityTypes.export
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDialogflowCxV3ExportEntityTypesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/entityTypes:import:
    parameters: *ref_1
    post:
      description: Imports the specified entitytypes into the agent.
      operationId: dialogflow.projects.locations.agents.entityTypes.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDialogflowCxV3ImportEntityTypesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/intents:
    parameters: *ref_1
    get:
      description: Returns the list of all intents in the specified agent.
      operationId: dialogflow.projects.locations.agents.intents.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3ListIntentsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
        - in: query
          name: intentView
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: >-
        Creates an intent in the specified agent. Note: You should always train
        a flow prior to sending it queries. See the [training
        documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      operationId: dialogflow.projects.locations.agents.intents.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Intent'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Intent'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/intents/{intentsId}:
    parameters: *ref_1
    get:
      description: Retrieves the specified intent.
      operationId: dialogflow.projects.locations.agents.intents.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Intent'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: intentsId
          required: true
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
    patch:
      description: >-
        Updates the specified intent. Note: You should always train a flow prior
        to sending it queries. See the [training
        documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      operationId: dialogflow.projects.locations.agents.intents.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Intent'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Intent'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: intentsId
          required: true
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: >-
        Deletes the specified intent. Note: You should always train a flow prior
        to sending it queries. See the [training
        documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      operationId: dialogflow.projects.locations.agents.intents.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: intentsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/intents:import:
    parameters: *ref_1
    post:
      description: >-
        Imports the specified intents into the agent. This method is a
        [long-running
        operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
        The returned `Operation` type has the following method-specific fields:
        - `metadata`: ImportIntentsMetadata - `response`: ImportIntentsResponse
      operationId: dialogflow.projects.locations.agents.intents.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDialogflowCxV3ImportIntentsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/intents:export:
    parameters: *ref_1
    post:
      description: >-
        Exports the selected intents. This method is a [long-running
        operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
        The returned `Operation` type has the following method-specific fields:
        - `metadata`: ExportIntentsMetadata - `response`: ExportIntentsResponse
      operationId: dialogflow.projects.locations.agents.intents.export
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDialogflowCxV3ExportIntentsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/sessions/{sessionsId}:detectIntent:
    parameters: *ref_1
    post:
      description: >-
        Processes a natural language query and returns structured, actionable
        data as a result. This method is not idempotent, because it may cause
        session entity types to be updated, which in turn might affect results
        of future queries. Note: Always use agent versions for production
        traffic. See [Versions and
        environments](https://cloud.google.com/dialogflow/cx/docs/concept/version).
      operationId: dialogflow.projects.locations.agents.sessions.detectIntent
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDialogflowCxV3DetectIntentRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3DetectIntentResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: sessionsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/sessions/{sessionsId}:serverStreamingDetectIntent:
    parameters: *ref_1
    post:
      description: >-
        Processes a natural language query and returns structured, actionable
        data as a result through server-side streaming. Server-side streaming
        allows Dialogflow to send [partial
        responses](https://cloud.google.com/dialogflow/cx/docs/concept/fulfillment#partial-response)
        earlier in a single request.
      operationId: >-
        dialogflow.projects.locations.agents.sessions.serverStreamingDetectIntent
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDialogflowCxV3DetectIntentRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3DetectIntentResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: sessionsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/sessions/{sessionsId}:matchIntent:
    parameters: *ref_1
    post:
      description: >-
        Returns preliminary intent match results, doesn't change the session
        status.
      operationId: dialogflow.projects.locations.agents.sessions.matchIntent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3MatchIntentRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3MatchIntentResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: sessionsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/sessions/{sessionsId}:fulfillIntent:
    parameters: *ref_1
    post:
      description: >-
        Fulfills a matched intent returned by MatchIntent. Must be called after
        MatchIntent, with input from MatchIntentResponse. Otherwise, the
        behavior is undefined.
      operationId: dialogflow.projects.locations.agents.sessions.fulfillIntent
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDialogflowCxV3FulfillIntentRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3FulfillIntentResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: sessionsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/sessions/{sessionsId}:submitAnswerFeedback:
    parameters: *ref_1
    post:
      description: >-
        Updates the feedback received from the user for a single turn of the bot
        response.
      operationId: dialogflow.projects.locations.agents.sessions.submitAnswerFeedback
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDialogflowCxV3SubmitAnswerFeedbackRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3AnswerFeedback'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: sessionsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/sessions/{sessionsId}/entityTypes:
    parameters: *ref_1
    get:
      description: Returns the list of all session entity types in the specified session.
      operationId: dialogflow.projects.locations.agents.sessions.entityTypes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3ListSessionEntityTypesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: sessionsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Creates a session entity type.
      operationId: dialogflow.projects.locations.agents.sessions.entityTypes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3SessionEntityType'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3SessionEntityType
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: sessionsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/sessions/{sessionsId}/entityTypes/{entityTypesId}:
    parameters: *ref_1
    get:
      description: Retrieves the specified session entity type.
      operationId: dialogflow.projects.locations.agents.sessions.entityTypes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3SessionEntityType
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: sessionsId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
    patch:
      description: Updates the specified session entity type.
      operationId: dialogflow.projects.locations.agents.sessions.entityTypes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3SessionEntityType'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3SessionEntityType
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: sessionsId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes the specified session entity type.
      operationId: dialogflow.projects.locations.agents.sessions.entityTypes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: sessionsId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/transitionRouteGroups:
    parameters: *ref_1
    get:
      description: Returns the list of all transition route groups in the specified flow.
      operationId: dialogflow.projects.locations.agents.transitionRouteGroups.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3ListTransitionRouteGroupsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
    post:
      description: >-
        Creates an TransitionRouteGroup in the specified flow. Note: You should
        always train a flow prior to sending it queries. See the [training
        documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      operationId: dialogflow.projects.locations.agents.transitionRouteGroups.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDialogflowCxV3TransitionRouteGroup
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3TransitionRouteGroup
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/transitionRouteGroups/{transitionRouteGroupsId}:
    parameters: *ref_1
    get:
      description: Retrieves the specified TransitionRouteGroup.
      operationId: dialogflow.projects.locations.agents.transitionRouteGroups.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3TransitionRouteGroup
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: transitionRouteGroupsId
          required: true
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
    patch:
      description: >-
        Updates the specified TransitionRouteGroup. Note: You should always
        train a flow prior to sending it queries. See the [training
        documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      operationId: dialogflow.projects.locations.agents.transitionRouteGroups.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDialogflowCxV3TransitionRouteGroup
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3TransitionRouteGroup
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: transitionRouteGroupsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: languageCode
          schema:
            type: string
    delete:
      description: >-
        Deletes the specified TransitionRouteGroup. Note: You should always
        train a flow prior to sending it queries. See the [training
        documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      operationId: dialogflow.projects.locations.agents.transitionRouteGroups.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: transitionRouteGroupsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/testCases:
    parameters: *ref_1
    get:
      description: Fetches a list of test cases for a given agent.
      operationId: dialogflow.projects.locations.agents.testCases.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3ListTestCasesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
    post:
      description: Creates a test case for the given agent.
      operationId: dialogflow.projects.locations.agents.testCases.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3TestCase'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3TestCase'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/testCases:batchDelete:
    parameters: *ref_1
    post:
      description: Batch deletes test cases.
      operationId: dialogflow.projects.locations.agents.testCases.batchDelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDialogflowCxV3BatchDeleteTestCasesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/testCases/{testCasesId}:
    parameters: *ref_1
    get:
      description: Gets a test case.
      operationId: dialogflow.projects.locations.agents.testCases.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3TestCase'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: testCasesId
          required: true
          schema:
            type: string
    patch:
      description: Updates the specified test case.
      operationId: dialogflow.projects.locations.agents.testCases.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3TestCase'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3TestCase'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: testCasesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/testCases/{testCasesId}:run:
    parameters: *ref_1
    post:
      description: >-
        Kicks off a test case run. This method is a [long-running
        operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
        The returned `Operation` type has the following method-specific fields:
        - `metadata`: RunTestCaseMetadata - `response`: RunTestCaseResponse
      operationId: dialogflow.projects.locations.agents.testCases.run
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3RunTestCaseRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: testCasesId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/testCases:batchRun:
    parameters: *ref_1
    post:
      description: >-
        Kicks off a batch run of test cases. This method is a [long-running
        operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
        The returned `Operation` type has the following method-specific fields:
        - `metadata`: BatchRunTestCasesMetadata - `response`:
        BatchRunTestCasesResponse
      operationId: dialogflow.projects.locations.agents.testCases.batchRun
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDialogflowCxV3BatchRunTestCasesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/testCases:calculateCoverage:
    parameters: *ref_1
    get:
      description: Calculates the test coverage for an agent.
      operationId: dialogflow.projects.locations.agents.testCases.calculateCoverage
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3CalculateCoverageResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: query
          name: type
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/testCases:import:
    parameters: *ref_1
    post:
      description: >-
        Imports the test cases from a Cloud Storage bucket or a local file. It
        always creates new test cases and won't overwrite any existing ones. The
        provided ID in the imported test case is neglected. This method is a
        [long-running
        operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
        The returned `Operation` type has the following method-specific fields:
        - `metadata`: ImportTestCasesMetadata - `response`:
        ImportTestCasesResponse
      operationId: dialogflow.projects.locations.agents.testCases.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDialogflowCxV3ImportTestCasesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/testCases:export:
    parameters: *ref_1
    post:
      description: >-
        Exports the test cases under the agent to a Cloud Storage bucket or a
        local file. Filter can be applied to export a subset of test cases. This
        method is a [long-running
        operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
        The returned `Operation` type has the following method-specific fields:
        - `metadata`: ExportTestCasesMetadata - `response`:
        ExportTestCasesResponse
      operationId: dialogflow.projects.locations.agents.testCases.export
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDialogflowCxV3ExportTestCasesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/testCases/{testCasesId}/results:
    parameters: *ref_1
    get:
      description: >-
        Fetches the list of run results for the given test case. A maximum of
        100 results are kept for each test case.
      operationId: dialogflow.projects.locations.agents.testCases.results.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3ListTestCaseResultsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: testCasesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/testCases/{testCasesId}/results/{resultsId}:
    parameters: *ref_1
    get:
      description: Gets a test case result.
      operationId: dialogflow.projects.locations.agents.testCases.results.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3TestCaseResult'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: testCasesId
          required: true
          schema:
            type: string
        - in: path
          name: resultsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/webhooks:
    parameters: *ref_1
    get:
      description: Returns the list of all webhooks in the specified agent.
      operationId: dialogflow.projects.locations.agents.webhooks.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3ListWebhooksResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Creates a webhook in the specified agent.
      operationId: dialogflow.projects.locations.agents.webhooks.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Webhook'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Webhook'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/webhooks/{webhooksId}:
    parameters: *ref_1
    get:
      description: Retrieves the specified webhook.
      operationId: dialogflow.projects.locations.agents.webhooks.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Webhook'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: webhooksId
          required: true
          schema:
            type: string
    patch:
      description: Updates the specified webhook.
      operationId: dialogflow.projects.locations.agents.webhooks.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Webhook'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Webhook'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: webhooksId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes the specified webhook.
      operationId: dialogflow.projects.locations.agents.webhooks.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: webhooksId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments:
    parameters: *ref_1
    get:
      description: Returns the list of all environments in the specified Agent.
      operationId: dialogflow.projects.locations.agents.environments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3ListEnvironmentsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: >-
        Creates an Environment in the specified Agent. This method is a
        [long-running
        operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
        The returned `Operation` type has the following method-specific fields:
        - `metadata`: An empty [Struct
        message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
        - `response`: Environment
      operationId: dialogflow.projects.locations.agents.environments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Environment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}:
    parameters: *ref_1
    get:
      description: Retrieves the specified Environment.
      operationId: dialogflow.projects.locations.agents.environments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Environment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates the specified Environment. This method is a [long-running
        operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
        The returned `Operation` type has the following method-specific fields:
        - `metadata`: An empty [Struct
        message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
        - `response`: Environment
      operationId: dialogflow.projects.locations.agents.environments.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Environment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes the specified Environment.
      operationId: dialogflow.projects.locations.agents.environments.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}:lookupEnvironmentHistory:
    parameters: *ref_1
    get:
      description: Looks up the history of the specified Environment.
      operationId: >-
        dialogflow.projects.locations.agents.environments.lookupEnvironmentHistory
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3LookupEnvironmentHistoryResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}:runContinuousTest:
    parameters: *ref_1
    post:
      description: >-
        Kicks off a continuous test under the specified Environment. This method
        is a [long-running
        operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
        The returned `Operation` type has the following method-specific fields:
        - `metadata`: RunContinuousTestMetadata - `response`:
        RunContinuousTestResponse
      operationId: dialogflow.projects.locations.agents.environments.runContinuousTest
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDialogflowCxV3RunContinuousTestRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}:deployFlow:
    parameters: *ref_1
    post:
      description: >-
        Deploys a flow to the specified Environment. This method is a
        [long-running
        operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
        The returned `Operation` type has the following method-specific fields:
        - `metadata`: DeployFlowMetadata - `response`: DeployFlowResponse
      operationId: dialogflow.projects.locations.agents.environments.deployFlow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3DeployFlowRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/deployments:
    parameters: *ref_1
    get:
      description: Returns the list of all deployments in the specified Environment.
      operationId: dialogflow.projects.locations.agents.environments.deployments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3ListDeploymentsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/deployments/{deploymentsId}:
    parameters: *ref_1
    get:
      description: Retrieves the specified Deployment.
      operationId: dialogflow.projects.locations.agents.environments.deployments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Deployment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
        - in: path
          name: deploymentsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/sessions/{sessionsId}:detectIntent:
    parameters: *ref_1
    post:
      description: >-
        Processes a natural language query and returns structured, actionable
        data as a result. This method is not idempotent, because it may cause
        session entity types to be updated, which in turn might affect results
        of future queries. Note: Always use agent versions for production
        traffic. See [Versions and
        environments](https://cloud.google.com/dialogflow/cx/docs/concept/version).
      operationId: dialogflow.projects.locations.agents.environments.sessions.detectIntent
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDialogflowCxV3DetectIntentRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3DetectIntentResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
        - in: path
          name: sessionsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/sessions/{sessionsId}:serverStreamingDetectIntent:
    parameters: *ref_1
    post:
      description: >-
        Processes a natural language query and returns structured, actionable
        data as a result through server-side streaming. Server-side streaming
        allows Dialogflow to send [partial
        responses](https://cloud.google.com/dialogflow/cx/docs/concept/fulfillment#partial-response)
        earlier in a single request.
      operationId: >-
        dialogflow.projects.locations.agents.environments.sessions.serverStreamingDetectIntent
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDialogflowCxV3DetectIntentRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3DetectIntentResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
        - in: path
          name: sessionsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/sessions/{sessionsId}:matchIntent:
    parameters: *ref_1
    post:
      description: >-
        Returns preliminary intent match results, doesn't change the session
        status.
      operationId: dialogflow.projects.locations.agents.environments.sessions.matchIntent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3MatchIntentRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3MatchIntentResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
        - in: path
          name: sessionsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/sessions/{sessionsId}:fulfillIntent:
    parameters: *ref_1
    post:
      description: >-
        Fulfills a matched intent returned by MatchIntent. Must be called after
        MatchIntent, with input from MatchIntentResponse. Otherwise, the
        behavior is undefined.
      operationId: dialogflow.projects.locations.agents.environments.sessions.fulfillIntent
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDialogflowCxV3FulfillIntentRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3FulfillIntentResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
        - in: path
          name: sessionsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/sessions/{sessionsId}/entityTypes:
    parameters: *ref_1
    get:
      description: Returns the list of all session entity types in the specified session.
      operationId: >-
        dialogflow.projects.locations.agents.environments.sessions.entityTypes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3ListSessionEntityTypesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
        - in: path
          name: sessionsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Creates a session entity type.
      operationId: >-
        dialogflow.projects.locations.agents.environments.sessions.entityTypes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3SessionEntityType'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3SessionEntityType
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
        - in: path
          name: sessionsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/sessions/{sessionsId}/entityTypes/{entityTypesId}:
    parameters: *ref_1
    get:
      description: Retrieves the specified session entity type.
      operationId: >-
        dialogflow.projects.locations.agents.environments.sessions.entityTypes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3SessionEntityType
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
        - in: path
          name: sessionsId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
    patch:
      description: Updates the specified session entity type.
      operationId: >-
        dialogflow.projects.locations.agents.environments.sessions.entityTypes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3SessionEntityType'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3SessionEntityType
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
        - in: path
          name: sessionsId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes the specified session entity type.
      operationId: >-
        dialogflow.projects.locations.agents.environments.sessions.entityTypes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
        - in: path
          name: sessionsId
          required: true
          schema:
            type: string
        - in: path
          name: entityTypesId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/continuousTestResults:
    parameters: *ref_1
    get:
      description: Fetches a list of continuous test results for a given environment.
      operationId: >-
        dialogflow.projects.locations.agents.environments.continuousTestResults.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3ListContinuousTestResultsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/experiments:
    parameters: *ref_1
    get:
      description: Returns the list of all experiments in the specified Environment.
      operationId: dialogflow.projects.locations.agents.environments.experiments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3ListExperimentsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Creates an Experiment in the specified Environment.
      operationId: dialogflow.projects.locations.agents.environments.experiments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Experiment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Experiment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/experiments/{experimentsId}:
    parameters: *ref_1
    get:
      description: Retrieves the specified Experiment.
      operationId: dialogflow.projects.locations.agents.environments.experiments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Experiment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
    patch:
      description: Updates the specified Experiment.
      operationId: dialogflow.projects.locations.agents.environments.experiments.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Experiment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Experiment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes the specified Experiment.
      operationId: dialogflow.projects.locations.agents.environments.experiments.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/experiments/{experimentsId}:start:
    parameters: *ref_1
    post:
      description: >-
        Starts the specified Experiment. This rpc only changes the state of
        experiment from PENDING to RUNNING.
      operationId: dialogflow.projects.locations.agents.environments.experiments.start
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDialogflowCxV3StartExperimentRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Experiment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/experiments/{experimentsId}:stop:
    parameters: *ref_1
    post:
      description: >-
        Stops the specified Experiment. This rpc only changes the state of
        experiment from RUNNING to DONE.
      operationId: dialogflow.projects.locations.agents.environments.experiments.stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDialogflowCxV3StopExperimentRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Experiment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
        - in: path
          name: experimentsId
          required: true
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/generators:
    parameters: *ref_1
    get:
      description: Returns the list of all generators in the specified agent.
      operationId: dialogflow.projects.locations.agents.generators.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDialogflowCxV3ListGeneratorsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Creates a generator in the specified agent.
      operationId: dialogflow.projects.locations.agents.generators.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Generator'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Generator'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
  /v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/generators/{generatorsId}:
    parameters: *ref_1
    get:
      description: Retrieves the specified generator.
      operationId: dialogflow.projects.locations.agents.generators.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Generator'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: generatorsId
          required: true
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
    patch:
      description: Update the specified generator.
      operationId: dialogflow.projects.locations.agents.generators.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Generator'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDialogflowCxV3Generator'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: generatorsId
          required: true
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes the specified generators.
      operationId: dialogflow.projects.locations.agents.generators.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: agentsId
          required: true
          schema:
            type: string
        - in: path
          name: generatorsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
