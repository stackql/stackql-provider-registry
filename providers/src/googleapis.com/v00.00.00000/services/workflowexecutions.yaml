openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Workflow Executions API
  description: Execute workflows created with Workflows API.
  version: v1
  x-discovery-doc-revision: '20250812'
  x-generated-date: '2025-08-28'
externalDocs:
  url: https://cloud.google.com/workflows
servers:
  - url: https://workflowexecutions.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    ListCallbacksResponse:
      id: ListCallbacksResponse
      description: RPC response object for the ListCallbacks method.
      type: object
      properties:
        callbacks:
          description: The callbacks which match the request.
          type: array
          items:
            $ref: '#/components/schemas/Callback'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    Callback:
      id: Callback
      description: An instance of a Callback created by an execution.
      type: object
      properties:
        name:
          description: >-
            Output only. The resource name of the callback. Format:
            projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}/callback/{callback}
          readOnly: true
          type: string
        method:
          description: >-
            Output only. The method accepted by the callback. For example: GET,
            POST, PUT.
          readOnly: true
          type: string
        availablePayloads:
          description: >-
            Output only. The payloads received by the callback that have not
            been processed by a waiting execution step.
          readOnly: true
          type: array
          items:
            type: string
        waiters:
          description: Output only. Number of execution steps waiting on this callback.
          readOnly: true
          type: string
          format: int64
    ListStepEntriesResponse:
      id: ListStepEntriesResponse
      description: Response message for ExecutionHistory.ListStepEntries.
      type: object
      properties:
        stepEntries:
          description: The list of entries.
          type: array
          items:
            $ref: '#/components/schemas/StepEntry'
        nextPageToken:
          description: >-
            A token to retrieve next page of results. Pass this value in the
            ListStepEntriesRequest.page_token field in the subsequent call to
            `ListStepEntries` method to retrieve the next page of results.
          type: string
        totalSize:
          description: >-
            Indicates the total number of StepEntries that matched the request
            filter. For running executions, this number shows the number of
            StepEntries that are executed thus far.
          type: integer
          format: int32
    StepEntry:
      id: StepEntry
      description: >-
        An StepEntry contains debugging information for a step transition in a
        workflow execution.
      type: object
      properties:
        name:
          description: >-
            Output only. The full resource name of the step entry. Each step
            entry has a unique entry ID, which is a monotonically increasing
            counter. Step entry names have the format:
            `projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}/stepEntries/{step_entry}`.
          readOnly: true
          type: string
        createTime:
          description: Output only. The creation time of the step entry.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The most recently updated time of the step entry.
          readOnly: true
          type: string
          format: google-datetime
        routine:
          description: >-
            Output only. The name of the routine this step entry belongs to. A
            routine name is the subworkflow name defined in the YAML source
            code. The top level routine name is `main`.
          readOnly: true
          type: string
        step:
          description: Output only. The name of the step this step entry belongs to.
          readOnly: true
          type: string
        stepType:
          description: Output only. The type of the step this step entry belongs to.
          readOnly: true
          type: string
          enumDescriptions:
            - Invalid step type.
            - The step entry assigns new variable(s).
            - The step entry calls a standard library routine.
            - The step entry calls a connector.
            - The step entry calls a subworklfow.
            - The step entry calls a subworkflow/stdlib.
            - The step entry executes a switch-case block.
            - The step entry executes a condition inside a switch.
            - The step entry executes a for loop.
            - The step entry executes a iteration of a for loop.
            - The step entry executes a parallel for loop.
            - The step entry executes a series of parallel branch(es).
            - The step entry executes a branch of a parallel branch.
            - The step entry executes a try/retry/except block.
            - The step entry executes the try part of a try/retry/except block.
            - >-
              The step entry executes the retry part of a try/retry/except
              block.
            - >-
              The step entry executes the except part of a try/retry/except
              block.
            - The step entry returns.
            - The step entry raises an error.
            - The step entry jumps to another step.
          enum:
            - STEP_TYPE_UNSPECIFIED
            - STEP_ASSIGN
            - STEP_STD_LIB_CALL
            - STEP_CONNECTOR_CALL
            - STEP_SUBWORKFLOW_CALL
            - STEP_CALL
            - STEP_SWITCH
            - STEP_CONDITION
            - STEP_FOR
            - STEP_FOR_ITERATION
            - STEP_PARALLEL_FOR
            - STEP_PARALLEL_BRANCH
            - STEP_PARALLEL_BRANCH_ENTRY
            - STEP_TRY_RETRY_EXCEPT
            - STEP_TRY
            - STEP_RETRY
            - STEP_EXCEPT
            - STEP_RETURN
            - STEP_RAISE
            - STEP_GOTO
        state:
          description: Output only. The state of the step entry.
          readOnly: true
          type: string
          enumDescriptions:
            - Invalid state.
            - The step entry is in progress.
            - The step entry finished successfully.
            - The step entry failed with an error.
            - The step entry is cancelled.
          enum:
            - STATE_UNSPECIFIED
            - STATE_IN_PROGRESS
            - STATE_SUCCEEDED
            - STATE_FAILED
            - STATE_CANCELLED
        exception:
          description: Output only. The exception thrown by the step entry.
          readOnly: true
          $ref: '#/components/schemas/Exception'
        entryId:
          description: Output only. The numeric ID of this step entry, used for navigation.
          readOnly: true
          type: string
          format: int64
        navigationInfo:
          description: Output only. The NavigationInfo associated with this step.
          readOnly: true
          $ref: '#/components/schemas/NavigationInfo'
        stepEntryMetadata:
          description: Output only. The StepEntryMetadata associated with this step.
          readOnly: true
          $ref: '#/components/schemas/StepEntryMetadata'
        variableData:
          description: Output only. The VariableData associated with this step.
          readOnly: true
          $ref: '#/components/schemas/VariableData'
    Exception:
      id: Exception
      description: Exception describes why the step entry failed.
      type: object
      properties:
        payload:
          description: Error message represented as a JSON string.
          type: string
    NavigationInfo:
      id: NavigationInfo
      description: >-
        NavigationInfo describes what steps if any come before or after this
        step, or what steps are parents or children of this step.
      type: object
      properties:
        children:
          description: >-
            Step entries that can be reached by "stepping into" e.g. a
            subworkflow call.
          type: array
          items:
            type: string
            format: int64
        parent:
          description: >-
            The step entry, if any, that can be reached by "stepping out" of the
            current workflow being executed.
          type: string
          format: int64
        next:
          description: The index of the next step in the current workflow, if any.
          type: string
          format: int64
        previous:
          description: The index of the previous step in the current workflow, if any.
          type: string
          format: int64
    StepEntryMetadata:
      id: StepEntryMetadata
      description: StepEntryMetadata contains metadata information about this step.
      type: object
      properties:
        threadId:
          description: Child thread id that this step entry belongs to.
          type: string
        progressType:
          description: Progress type of this step entry.
          type: string
          enumDescriptions:
            - Current step entry does not have any progress data.
            - Current step entry is in progress of a FOR step.
            - Current step entry is in progress of a SWITCH step.
            - Current step entry is in progress of a RETRY step.
            - Current step entry is in progress of a PARALLEL FOR step.
            - Current step entry is in progress of a PARALLEL BRANCH step.
          enum:
            - PROGRESS_TYPE_UNSPECIFIED
            - PROGRESS_TYPE_FOR
            - PROGRESS_TYPE_SWITCH
            - PROGRESS_TYPE_RETRY
            - PROGRESS_TYPE_PARALLEL_FOR
            - PROGRESS_TYPE_PARALLEL_BRANCH
        progressNumber:
          description: >-
            Progress number represents the current state of the current
            progress. eg: A step entry represents the 4th iteration in a
            progress of PROGRESS_TYPE_FOR. Note: This field is only populated
            when an iteration exists and the starting value is 1.
          type: string
          format: int64
        expectedIteration:
          description: >-
            Expected iteration represents the expected number of iterations in
            the step's progress.
          type: string
          format: int64
    VariableData:
      id: VariableData
      description: VariableData contains the variable data for this step.
      type: object
      properties:
        variables:
          description: Variables that are associated with this step.
          type: object
          additionalProperties:
            type: any
    ListExecutionsResponse:
      id: ListExecutionsResponse
      description: Response for the ListExecutions method.
      type: object
      properties:
        executions:
          description: The executions which match the request.
          type: array
          items:
            $ref: '#/components/schemas/Execution'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    Execution:
      id: Execution
      description: >-
        A running instance of a
        [Workflow](/workflows/docs/reference/rest/v1/projects.locations.workflows).
      type: object
      properties:
        name:
          description: >-
            Output only. The resource name of the execution. Format:
            projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}
          readOnly: true
          type: string
        createTime:
          description: Output only. Marks the creation of the execution.
          readOnly: true
          type: string
          format: google-datetime
        startTime:
          description: >-
            Output only. Marks the beginning of execution. Note that this will
            be the same as `createTime` for executions that start immediately.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. Marks the end of execution, successful or not.
          readOnly: true
          type: string
          format: google-datetime
        duration:
          description: Output only. Measures the duration of the execution.
          readOnly: true
          type: string
          format: google-duration
        state:
          description: Output only. Current state of the execution.
          readOnly: true
          type: string
          enumDescriptions:
            - Invalid state.
            - The execution is in progress.
            - The execution finished successfully.
            - The execution failed with an error.
            - The execution was stopped intentionally.
            - Execution data is unavailable. See the `state_error` field.
            - >-
              Request has been placed in the backlog for processing at a later
              time.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - SUCCEEDED
            - FAILED
            - CANCELLED
            - UNAVAILABLE
            - QUEUED
        argument:
          description: >-
            Input parameters of the execution represented as a JSON string. The
            size limit is 32KB. *Note*: If you are using the REST API directly
            to run your workflow, you must escape any JSON string value of
            `argument`. Example:
            `'{"argument":"{\"firstName\":\"FIRST\",\"lastName\":\"LAST\"}"}'`
          type: string
        result:
          description: >-
            Output only. Output of the execution represented as a JSON string.
            The value can only be present if the execution's state is
            `SUCCEEDED`.
          readOnly: true
          type: string
        error:
          description: >-
            Output only. The error which caused the execution to finish
            prematurely. The value is only present if the execution's state is
            `FAILED` or `CANCELLED`.
          readOnly: true
          $ref: '#/components/schemas/Error'
        workflowRevisionId:
          description: Output only. Revision of the workflow this execution is using.
          readOnly: true
          type: string
        callLogLevel:
          description: The call logging level associated to this execution.
          type: string
          enumDescriptions:
            - No call logging level specified.
            - >-
              Log all call steps within workflows, all call returns, and all
              exceptions raised.
            - >-
              Log only exceptions that are raised from call steps within
              workflows.
            - Explicitly log nothing.
          enum:
            - CALL_LOG_LEVEL_UNSPECIFIED
            - LOG_ALL_CALLS
            - LOG_ERRORS_ONLY
            - LOG_NONE
        status:
          description: >-
            Output only. Status tracks the current steps and progress data of
            this execution.
          readOnly: true
          $ref: '#/components/schemas/Status'
        labels:
          description: >-
            Labels associated with this execution. Labels can contain at most 64
            entries. Keys and values can be no longer than 63 characters and can
            only contain lowercase letters, numeric characters, underscores, and
            dashes. Label keys must start with a letter. International
            characters are allowed. By default, labels are inherited from the
            workflow but are overridden by any labels associated with the
            execution.
          type: object
          additionalProperties:
            type: string
        stateError:
          description: >-
            Output only. Error regarding the state of the Execution resource.
            For example, this field will have error details if the execution
            data is unavailable due to revoked KMS key permissions.
          readOnly: true
          $ref: '#/components/schemas/StateError'
        disableConcurrencyQuotaOverflowBuffering:
          description: >-
            Optional. If set to true, the execution will not be backlogged when
            the concurrency quota is exhausted. The backlog execution starts
            when the concurrency quota becomes available.
          type: boolean
        executionHistoryLevel:
          description: >-
            Optional. Describes the execution history level to apply to this
            execution. If not specified, the execution history level is
            determined by its workflow's execution history level. If the levels
            are different, the executionHistoryLevel overrides the workflow's
            execution history level for this execution.
          type: string
          enumDescriptions:
            - The default/unset value.
            - Enable execution history basic feature for this execution.
            - Enable execution history detailed feature for this execution.
          enum:
            - EXECUTION_HISTORY_LEVEL_UNSPECIFIED
            - EXECUTION_HISTORY_BASIC
            - EXECUTION_HISTORY_DETAILED
    Error:
      id: Error
      description: Error describes why the execution was abnormally terminated.
      type: object
      properties:
        payload:
          description: Error message and data returned represented as a JSON string.
          type: string
        context:
          description: Human-readable stack trace string.
          type: string
        stackTrace:
          description: Stack trace with detailed information of where error was generated.
          $ref: '#/components/schemas/StackTrace'
    StackTrace:
      id: StackTrace
      description: A collection of stack elements (frames) where an error occurred.
      type: object
      properties:
        elements:
          description: An array of stack elements.
          type: array
          items:
            $ref: '#/components/schemas/StackTraceElement'
    StackTraceElement:
      id: StackTraceElement
      description: A single stack element (frame) where an error occurred.
      type: object
      properties:
        step:
          description: The step the error occurred at.
          type: string
        routine:
          description: The routine where the error occurred.
          type: string
        position:
          description: The source position information of the stack trace element.
          $ref: '#/components/schemas/Position'
    Position:
      id: Position
      description: >-
        Position contains source position information about the stack trace
        element such as line number, column number and length of the code block
        in bytes.
      type: object
      properties:
        line:
          description: >-
            The source code line number the current instruction was generated
            from.
          type: string
          format: int64
        column:
          description: >-
            The source code column position (of the line) the current
            instruction was generated from.
          type: string
          format: int64
        length:
          description: >-
            The number of bytes of source code making up this stack trace
            element.
          type: string
          format: int64
    Status:
      id: Status
      description: Represents the current status of this execution.
      type: object
      properties:
        currentSteps:
          description: >-
            A list of currently executing or last executed step names for the
            workflow execution currently running. If the workflow has succeeded
            or failed, this is the last attempted or executed step. Presently,
            if the current step is inside a subworkflow, the list only includes
            that step. In the future, the list will contain items for each step
            in the call stack, starting with the outermost step in the `main`
            subworkflow, and ending with the most deeply nested step.
          type: array
          items:
            $ref: '#/components/schemas/Step'
    Step:
      id: Step
      description: Represents a step of the workflow this execution is running.
      type: object
      properties:
        routine:
          description: Name of a routine within the workflow.
          type: string
        step:
          description: Name of a step within the routine.
          type: string
    StateError:
      id: StateError
      description: >-
        Describes an error related to the current state of the Execution
        resource.
      type: object
      properties:
        details:
          description: Provides specifics about the error.
          type: string
        type:
          description: The type of this state error.
          type: string
          enumDescriptions:
            - No type specified.
            - Caused by an issue with KMS.
          enum:
            - TYPE_UNSPECIFIED
            - KMS_ERROR
    CancelExecutionRequest:
      id: CancelExecutionRequest
      description: Request for the CancelExecution method.
      type: object
      properties: {}
    ExportDataResponse:
      id: ExportDataResponse
      description: Response for the ExportData method.
      type: object
      properties:
        data:
          description: >-
            The JSON string with customer data and metadata for an execution
            with the given name
          type: string
    TriggerPubsubExecutionRequest:
      id: TriggerPubsubExecutionRequest
      description: Request for the TriggerPubsubExecution method.
      type: object
      properties:
        subscription:
          description: >-
            Required. The subscription of the Pub/Sub push notification. Format:
            projects/{project}/subscriptions/{sub}
          type: string
        message:
          description: Required. The message of the Pub/Sub push notification.
          $ref: '#/components/schemas/PubsubMessage'
        GCPCloudEventsMode:
          description: >-
            Required. LINT: LEGACY_NAMES The query parameter value for
            __GCP_CloudEventsMode, set by the Eventarc service when configuring
            triggers.
          type: string
        deliveryAttempt:
          description: >-
            The number of attempts that have been made to deliver this message.
            This is set by Pub/Sub for subscriptions that have the "dead letter"
            feature enabled, and hence provided here for compatibility, but is
            ignored by Workflows.
          type: integer
          format: int32
    PubsubMessage:
      id: PubsubMessage
      description: >-
        A message that is published by publishers and consumed by subscribers.
        The message must contain either a non-empty data field or at least one
        attribute. Note that client libraries represent this object differently
        depending on the language. See the corresponding [client library
        documentation](https://cloud.google.com/pubsub/docs/reference/libraries)
        for more information. See [quotas and limits]
        (https://cloud.google.com/pubsub/quotas) for more information about
        message limits.
      type: object
      properties:
        data:
          description: >-
            Optional. The message data field. If this field is empty, the
            message must contain at least one attribute.
          type: string
          format: byte
        attributes:
          description: >-
            Optional. Attributes for this message. If this field is empty, the
            message must contain non-empty data. This can be used to filter
            messages on the subscription.
          type: object
          additionalProperties:
            type: string
        messageId:
          description: >-
            ID of this message, assigned by the server when the message is
            published. Guaranteed to be unique within the topic. This value may
            be read by a subscriber that receives a `PubsubMessage` via a `Pull`
            call or a push delivery. It must not be populated by the publisher
            in a `Publish` call.
          type: string
        publishTime:
          description: >-
            The time at which the message was published, populated by the server
            when it receives the `Publish` call. It must not be populated by the
            publisher in a `Publish` call.
          type: string
          format: google-datetime
        orderingKey:
          description: >-
            Optional. If non-empty, identifies related messages for which
            publish order should be respected. If a `Subscription` has
            `enable_message_ordering` set to `true`, messages published with the
            same non-empty `ordering_key` value will be delivered to subscribers
            in the order in which they are received by the Pub/Sub system. All
            `PubsubMessage`s published in a given `PublishRequest` must specify
            the same `ordering_key` value. For more information, see [ordering
            messages](https://cloud.google.com/pubsub/docs/ordering).
          type: string
    DeleteExecutionHistoryRequest:
      id: DeleteExecutionHistoryRequest
      description: Request for the DeleteExecutionHistory method.
      type: object
      properties: {}
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    workflows:
      id: google.workflowexecutions.workflows
      name: workflows
      title: Workflows
      methods:
        trigger_pubsub_execution:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflows~1{workflowsId}:triggerPubsubExecution/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    executions:
      id: google.workflowexecutions.executions
      name: executions
      title: Executions
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflows~1{workflowsId}~1executions/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.executions
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflows~1{workflowsId}~1executions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflows~1{workflowsId}~1executions~1{executionsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflows~1{workflowsId}~1executions~1{executionsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export_data:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflows~1{workflowsId}~1executions~1{executionsId}:exportData/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/executions/methods/get'
          - $ref: '#/components/x-stackQL-resources/executions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/executions/methods/create'
        update: []
        replace: []
        delete: []
    executions_execution_history:
      id: google.workflowexecutions.executions_execution_history
      name: executions_execution_history
      title: Executions_execution_history
      methods:
        delete_execution_history:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflows~1{workflowsId}~1executions~1{executionsId}:deleteExecutionHistory/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/executions_execution_history/methods/delete_execution_history
    callbacks:
      id: google.workflowexecutions.callbacks
      name: callbacks
      title: Callbacks
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflows~1{workflowsId}~1executions~1{executionsId}~1callbacks/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.callbacks
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/callbacks/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    step_entries:
      id: google.workflowexecutions.step_entries
      name: step_entries
      title: Step_entries
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflows~1{workflowsId}~1executions~1{executionsId}~1stepEntries/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.stepEntries
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflows~1{workflowsId}~1executions~1{executionsId}~1stepEntries~1{stepEntriesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/step_entries/methods/get'
          - $ref: '#/components/x-stackQL-resources/step_entries/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
paths:
  /v1/projects/{projectsId}/locations/{locationsId}/workflows/{workflowsId}:triggerPubsubExecution:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    post:
      description: >-
        Triggers a new execution using the latest revision of the given workflow
        by a Pub/Sub push notification.
      operationId: workflowexecutions.projects.locations.workflows.triggerPubsubExecution
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TriggerPubsubExecutionRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/workflows/{workflowsId}/executions:
    parameters: *ref_1
    get:
      description: >-
        Returns a list of executions which belong to the workflow with the given
        name. The method returns executions of all workflow revisions. Returned
        executions are ordered by their start time (newest first).
      operationId: workflowexecutions.projects.locations.workflows.executions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExecutionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: >-
        Creates a new execution using the latest revision of the given workflow.
        For more information, see Execute a workflow.
      operationId: workflowexecutions.projects.locations.workflows.executions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Execution'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/workflows/{workflowsId}/executions/{executionsId}:
    parameters: *ref_1
    get:
      description: Returns an execution of the given name.
      operationId: workflowexecutions.projects.locations.workflows.executions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowsId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/workflows/{workflowsId}/executions/{executionsId}:cancel:
    parameters: *ref_1
    post:
      description: Cancels an execution of the given name.
      operationId: workflowexecutions.projects.locations.workflows.executions.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelExecutionRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowsId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/workflows/{workflowsId}/executions/{executionsId}:exportData:
    parameters: *ref_1
    get:
      description: >-
        Returns all metadata stored about an execution, excluding most data that
        is already accessible using other API methods.
      operationId: workflowexecutions.projects.locations.workflows.executions.exportData
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportDataResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowsId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/workflows/{workflowsId}/executions/{executionsId}:deleteExecutionHistory:
    parameters: *ref_1
    post:
      description: Deletes all step entries for an execution.
      operationId: >-
        workflowexecutions.projects.locations.workflows.executions.deleteExecutionHistory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteExecutionHistoryRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowsId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/workflows/{workflowsId}/executions/{executionsId}/callbacks:
    parameters: *ref_1
    get:
      description: >-
        Returns a list of active callbacks that belong to the execution with the
        given name. The returned callbacks are ordered by callback ID.
      operationId: >-
        workflowexecutions.projects.locations.workflows.executions.callbacks.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCallbacksResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowsId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/workflows/{workflowsId}/executions/{executionsId}/stepEntries:
    parameters: *ref_1
    get:
      description: >-
        Lists step entries for the corresponding workflow execution. Returned
        entries are ordered by their create_time.
      operationId: >-
        workflowexecutions.projects.locations.workflows.executions.stepEntries.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStepEntriesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowsId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: skip
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/workflows/{workflowsId}/executions/{executionsId}/stepEntries/{stepEntriesId}:
    parameters: *ref_1
    get:
      description: Gets a step entry.
      operationId: >-
        workflowexecutions.projects.locations.workflows.executions.stepEntries.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StepEntry'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowsId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
        - in: path
          name: stepEntriesId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
