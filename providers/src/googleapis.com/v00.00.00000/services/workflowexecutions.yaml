openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Workflow Executions API
  description: Execute workflows created with Workflows API.
  version: v1
  x-discovery-doc-revision: '20230808'
  x-generated-date: '2023-09-01'
externalDocs:
  url: 'https://cloud.google.com/workflows'
servers:
  - url: 'https://workflowexecutions.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    PubsubMessage:
      type: object
      properties:
        publishTime:
          description: 'Optional. The time at which the message was published, populated by the server when it receives the `Publish` call. It must not be populated by the publisher in a `Publish` call.'
          format: google-datetime
          type: string
        messageId:
          type: string
          description: 'Optional. ID of this message, assigned by the server when the message is published. Guaranteed to be unique within the topic. This value may be read by a subscriber that receives a `PubsubMessage` via a `Pull` call or a push delivery. It must not be populated by the publisher in a `Publish` call.'
        attributes:
          additionalProperties:
            type: string
          description: 'Optional. Attributes for this message. If this field is empty, the message must contain non-empty data. This can be used to filter messages on the subscription.'
          type: object
        data:
          type: string
          description: 'Optional. The message data field. If this field is empty, the message must contain at least one attribute.'
          format: byte
        orderingKey:
          description: 'Optional. If non-empty, identifies related messages for which publish order should be respected. If a `Subscription` has `enable_message_ordering` set to `true`, messages published with the same non-empty `ordering_key` value will be delivered to subscribers in the order in which they are received by the Pub/Sub system. All `PubsubMessage`s published in a given `PublishRequest` must specify the same `ordering_key` value. For more information, see [ordering messages](https://cloud.google.com/pubsub/docs/ordering).'
          type: string
      description: 'A message that is published by publishers and consumed by subscribers. The message must contain either a non-empty data field or at least one attribute. Note that client libraries represent this object differently depending on the language. See the corresponding [client library documentation](https://cloud.google.com/pubsub/docs/reference/libraries) for more information. See [quotas and limits] (https://cloud.google.com/pubsub/quotas) for more information about message limits.'
      id: PubsubMessage
    Execution:
      id: Execution
      properties:
        name:
          type: string
          description: 'Output only. The resource name of the execution. Format: projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}'
          readOnly: true
        status:
          $ref: '#/components/schemas/Status'
          readOnly: true
          description: Output only. Status tracks the current steps and progress data of this execution.
        stateError:
          $ref: '#/components/schemas/StateError'
          description: 'Output only. Error regarding the state of the Execution resource. For example, this field will have error details if the execution data is unavailable due to revoked KMS key permissions.'
          readOnly: true
        error:
          readOnly: true
          $ref: '#/components/schemas/Error'
          description: Output only. The error which caused the execution to finish prematurely. The value is only present if the execution's state is `FAILED` or `CANCELLED`.
        argument:
          description: 'Input parameters of the execution represented as a JSON string. The size limit is 32KB. *Note*: If you are using the REST API directly to run your workflow, you must escape any JSON string value of `argument`. Example: `''{"argument":"{\"firstName\":\"FIRST\",\"lastName\":\"LAST\"}"}''`'
          type: string
        duration:
          type: string
          readOnly: true
          description: Output only. Measures the duration of the execution.
          format: google-duration
        callLogLevel:
          description: The call logging level associated to this execution.
          type: string
          enum:
            - CALL_LOG_LEVEL_UNSPECIFIED
            - LOG_ALL_CALLS
            - LOG_ERRORS_ONLY
            - LOG_NONE
          enumDescriptions:
            - No call logging level specified.
            - 'Log all call steps within workflows, all call returns, and all exceptions raised.'
            - Log only exceptions that are raised from call steps within workflows.
            - Explicitly log nothing.
        workflowRevisionId:
          readOnly: true
          type: string
          description: Output only. Revision of the workflow this execution is using.
        labels:
          type: object
          description: 'Labels associated with this execution. Labels can contain at most 64 entries. Keys and values can be no longer than 63 characters and can only contain lowercase letters, numeric characters, underscores, and dashes. Label keys must start with a letter. International characters are allowed. By default, labels are inherited from the workflow but are overridden by any labels associated with the execution.'
          additionalProperties:
            type: string
        result:
          readOnly: true
          type: string
          description: Output only. Output of the execution represented as a JSON string. The value can only be present if the execution's state is `SUCCEEDED`.
        startTime:
          type: string
          readOnly: true
          description: Output only. Marks the beginning of execution.
          format: google-datetime
        state:
          enumDescriptions:
            - Invalid state.
            - The execution is in progress.
            - The execution finished successfully.
            - The execution failed with an error.
            - The execution was stopped intentionally.
            - Execution data is unavailable. See the `state_error` field.
            - Request has been placed in the backlog for processing at a later time.
          description: Output only. Current state of the execution.
          readOnly: true
          type: string
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - SUCCEEDED
            - FAILED
            - CANCELLED
            - UNAVAILABLE
            - QUEUED
        endTime:
          type: string
          readOnly: true
          description: 'Output only. Marks the end of execution, successful or not.'
          format: google-datetime
      description: 'A running instance of a [Workflow](/workflows/docs/reference/rest/v1/projects.locations.workflows).'
      type: object
    StateError:
      properties:
        type:
          type: string
          enum:
            - TYPE_UNSPECIFIED
            - KMS_ERROR
          enumDescriptions:
            - No type specified.
            - Caused by an issue with KMS.
          description: The type of this state error.
        details:
          type: string
          description: Provides specifics about the error.
      id: StateError
      description: Describes an error related to the current state of the Execution resource.
      type: object
    Error:
      type: object
      properties:
        context:
          description: Human-readable stack trace string.
          type: string
        payload:
          type: string
          description: Error message and data returned represented as a JSON string.
        stackTrace:
          $ref: '#/components/schemas/StackTrace'
          description: Stack trace with detailed information of where error was generated.
      description: Error describes why the execution was abnormally terminated.
      id: Error
    StackTrace:
      id: StackTrace
      description: A collection of stack elements (frames) where an error occurred.
      properties:
        elements:
          type: array
          items:
            $ref: '#/components/schemas/StackTraceElement'
          description: An array of stack elements.
      type: object
    ListExecutionsResponse:
      id: ListExecutionsResponse
      type: object
      description: Response for the ListExecutions method.
      properties:
        executions:
          description: The executions which match the request.
          items:
            $ref: '#/components/schemas/Execution'
          type: array
        nextPageToken:
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          type: string
    Step:
      properties:
        step:
          description: Name of a step within the routine.
          type: string
        routine:
          type: string
          description: Name of a routine within the workflow.
      type: object
      id: Step
      description: Represents a step of the workflow this execution is running.
    Position:
      description: 'Position contains source position information about the stack trace element such as line number, column number and length of the code block in bytes.'
      properties:
        length:
          format: int64
          description: The number of bytes of source code making up this stack trace element.
          type: string
        line:
          description: The source code line number the current instruction was generated from.
          type: string
          format: int64
        column:
          format: int64
          type: string
          description: The source code column position (of the line) the current instruction was generated from.
      type: object
      id: Position
    Status:
      type: object
      id: Status
      description: Represents the current status of this execution.
      properties:
        currentSteps:
          type: array
          description: 'A list of currently executing or last executed step names for the workflow execution currently running. If the workflow has succeeded or failed, this is the last attempted or executed step. Presently, if the current step is inside a subworkflow, the list only includes that step. In the future, the list will contain items for each step in the call stack, starting with the outermost step in the `main` subworkflow, and ending with the most deeply nested step.'
          items:
            $ref: '#/components/schemas/Step'
    CancelExecutionRequest:
      id: CancelExecutionRequest
      description: Request for the CancelExecution method.
      properties: {}
      type: object
    StackTraceElement:
      id: StackTraceElement
      description: A single stack element (frame) where an error occurred.
      type: object
      properties:
        step:
          type: string
          description: The step the error occurred at.
        position:
          description: The source position information of the stack trace element.
          $ref: '#/components/schemas/Position'
        routine:
          type: string
          description: The routine where the error occurred.
    TriggerPubsubExecutionRequest:
      properties:
        subscription:
          description: 'Required. The subscription of the Pub/Sub push notification. Format: projects/{project}/subscriptions/{sub}'
          type: string
        deliveryAttempt:
          description: 'The number of attempts that have been made to deliver this message. This is set by Pub/Sub for subscriptions that have the "dead letter" feature enabled, and hence provided here for compatibility, but is ignored by Workflows.'
          type: integer
          format: int32
        GCPCloudEventsMode:
          description: 'Required. LINT: LEGACY_NAMES The query parameter value for __GCP_CloudEventsMode, set by the Eventarc service when configuring triggers.'
          type: string
        message:
          $ref: '#/components/schemas/PubsubMessage'
          description: Required. The message of the Pub/Sub push notification.
      type: object
      id: TriggerPubsubExecutionRequest
      description: Request for the TriggerPubsubExecution method.
  parameters:
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
  x-stackQL-resources:
    executions:
      id: google.workflowexecutions.executions
      name: executions
      title: Executions
      methods:
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflows~1{workflowsId}~1executions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflows~1{workflowsId}~1executions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.executions
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflows~1{workflowsId}~1executions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflows~1{workflowsId}~1executions~1{executionsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflows~1{workflowsId}~1executions~1{executionsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/executions/methods/get'
          - $ref: '#/components/x-stackQL-resources/executions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/executions/methods/create'
        update: []
        delete: []
    workflows:
      id: google.workflowexecutions.workflows
      name: workflows
      title: Workflows
      methods:
        trigger_pubsub_execution:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1workflows~1{workflowsId}:triggerPubsubExecution/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  '/v1/projects/{projectsId}/locations/{locationsId}/workflows/{workflowsId}/executions':
    parameters: &ref_1
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
    post:
      description: Creates a new execution using the latest revision of the given workflow.
      operationId: workflowexecutions.projects.locations.workflows.executions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Execution'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowsId
          required: true
          schema:
            type: string
      x-stackQL-resource: executions
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Returns a list of executions which belong to the workflow with the given name. The method returns executions of all workflow revisions. Returned executions are ordered by their start time (newest first).
      operationId: workflowexecutions.projects.locations.workflows.executions.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExecutionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: executions
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.executions
  '/v1/projects/{projectsId}/locations/{locationsId}/workflows/{workflowsId}/executions/{executionsId}:cancel':
    parameters: *ref_1
    post:
      description: Cancels an execution of the given name.
      operationId: workflowexecutions.projects.locations.workflows.executions.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelExecutionRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowsId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: executions
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/workflows/{workflowsId}/executions/{executionsId}':
    parameters: *ref_1
    get:
      description: Returns an execution of the given name.
      operationId: workflowexecutions.projects.locations.workflows.executions.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowsId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: executions
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/workflows/{workflowsId}:triggerPubsubExecution':
    parameters: *ref_1
    post:
      description: Triggers a new execution using the latest revision of the given workflow by a Pub/Sub push notification.
      operationId: workflowexecutions.projects.locations.workflows.triggerPubsubExecution
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TriggerPubsubExecutionRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowsId
          required: true
          schema:
            type: string
      x-stackQL-resource: workflows
      x-stackQL-method: trigger_pubsub_execution
      x-stackQL-verb: exec
