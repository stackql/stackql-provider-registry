openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: OS Config API
  description: 'OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.'
  version: v1
  x-discovery-doc-revision: '20230813'
  x-generated-date: '2023-08-22'
externalDocs:
  url: 'https://cloud.google.com/compute/docs/osconfig/rest'
servers:
  - url: 'https://osconfig.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    CancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      id: CancelOperationRequest
      type: object
      properties: {}
    OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceOSPolicyResourceConfigStep:
      description: Step performed by the OS Config agent for configuring an `OSPolicy` resource to its desired state.
      id: OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceOSPolicyResourceConfigStep
      type: object
      properties:
        type:
          enumDescriptions:
            - Default value. This value is unused.
            - Checks for resource conflicts such as schema errors.
            - Checks the current status of the desired state for a resource.
            - Enforces the desired state for a resource that is not in desired state.
            - Re-checks the status of the desired state. This check is done for a resource after the enforcement of all OS policies. This step is used to determine the final desired state status for the resource. It accounts for any resources that might have drifted from their desired state due to side effects from executing other resources.
          enum:
            - TYPE_UNSPECIFIED
            - VALIDATION
            - DESIRED_STATE_CHECK
            - DESIRED_STATE_ENFORCEMENT
            - DESIRED_STATE_CHECK_POST_ENFORCEMENT
          type: string
          description: Configuration step type.
        errorMessage:
          type: string
          description: An error message recorded during the execution of this step. Only populated if errors were encountered during this step execution.
    OSPolicyAssignmentInstanceFilter:
      type: object
      description: 'Filters to select target VMs for an assignment. If more than one filter criteria is specified below, a VM will be selected if and only if it satisfies all of them.'
      id: OSPolicyAssignmentInstanceFilter
      properties:
        inclusionLabels:
          items:
            $ref: '#/components/schemas/OSPolicyAssignmentLabelSet'
          type: array
          description: 'List of label sets used for VM inclusion. If the list has more than one `LabelSet`, the VM is included if any of the label sets are applicable for the VM.'
        all:
          type: boolean
          description: 'Target all VMs in the project. If true, no other criteria is permitted.'
        exclusionLabels:
          description: 'List of label sets used for VM exclusion. If the list has more than one label set, the VM is excluded if any of the label sets are applicable for the VM.'
          type: array
          items:
            $ref: '#/components/schemas/OSPolicyAssignmentLabelSet'
        inventories:
          type: array
          items:
            $ref: '#/components/schemas/OSPolicyAssignmentInstanceFilterInventory'
          description: List of inventories to select VMs. A VM is selected if its inventory data matches at least one of the following inventories.
    OSPolicyResourceFileRemote:
      type: object
      description: Specifies a file available via some URI.
      id: OSPolicyResourceFileRemote
      properties:
        uri:
          description: 'Required. URI from which to fetch the object. It should contain both the protocol and path following the format `{protocol}://{location}`.'
          type: string
        sha256Checksum:
          description: SHA256 checksum of the remote file.
          type: string
    OSPolicyResourceGroup:
      type: object
      properties:
        inventoryFilters:
          items:
            $ref: '#/components/schemas/OSPolicyInventoryFilter'
          description: 'List of inventory filters for the resource group. The resources in this resource group are applied to the target VM if it satisfies at least one of the following inventory filters. For example, to apply this resource group to VMs running either `RHEL` or `CentOS` operating systems, specify 2 items for the list with following values: inventory_filters[0].os_short_name=''rhel'' and inventory_filters[1].os_short_name=''centos'' If the list is empty, this resource group will be applied to the target VM unconditionally.'
          type: array
        resources:
          description: Required. List of resources configured for this resource group. The resources are executed in the exact order specified here.
          type: array
          items:
            $ref: '#/components/schemas/OSPolicyResource'
      description: 'Resource groups provide a mechanism to group OS policy resources. Resource groups enable OS policy authors to create a single OS policy to be applied to VMs running different operating Systems. When the OS policy is applied to a target VM, the appropriate resource group within the OS policy is selected based on the `OSFilter` specified within the resource group.'
      id: OSPolicyResourceGroup
    WeeklySchedule:
      id: WeeklySchedule
      type: object
      properties:
        dayOfWeek:
          type: string
          description: Required. Day of the week.
          enum:
            - DAY_OF_WEEK_UNSPECIFIED
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
          enumDescriptions:
            - The day of the week is unspecified.
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
      description: Represents a weekly schedule.
    VulnerabilityReportVulnerability:
      id: VulnerabilityReportVulnerability
      type: object
      properties:
        items:
          description: List of items affected by the vulnerability.
          type: array
          items:
            $ref: '#/components/schemas/VulnerabilityReportVulnerabilityItem'
        updateTime:
          description: The timestamp for when the vulnerability was last modified.
          type: string
          format: google-datetime
        installedInventoryItemIds:
          description: 'Corresponds to the `INSTALLED_PACKAGE` inventory item on the VM. This field displays the inventory items affected by this vulnerability. If the vulnerability report was not updated after the VM inventory update, these values might not display in VM inventory. For some distros, this field may be empty.'
          items:
            type: string
          type: array
          deprecated: true
        availableInventoryItemIds:
          type: array
          deprecated: true
          description: 'Corresponds to the `AVAILABLE_PACKAGE` inventory item on the VM. If the vulnerability report was not updated after the VM inventory update, these values might not display in VM inventory. If there is no available fix, the field is empty. The `inventory_item` value specifies the latest `SoftwarePackage` available to the VM that fixes the vulnerability.'
          items:
            type: string
        createTime:
          description: The timestamp for when the vulnerability was first detected.
          type: string
          format: google-datetime
        details:
          $ref: '#/components/schemas/VulnerabilityReportVulnerabilityDetails'
          description: Contains metadata as per the upstream feed of the operating system and NVD.
      description: A vulnerability affecting the VM instance.
    OSPolicyAssignment:
      type: object
      id: OSPolicyAssignment
      properties:
        rolloutState:
          type: string
          enum:
            - ROLLOUT_STATE_UNSPECIFIED
            - IN_PROGRESS
            - CANCELLING
            - CANCELLED
            - SUCCEEDED
          description: Output only. OS policy assignment rollout state
          enumDescriptions:
            - Invalid value
            - The rollout is in progress.
            - The rollout is being cancelled.
            - The rollout is cancelled.
            - The rollout has completed successfully.
          readOnly: true
        name:
          type: string
          description: 'Resource name. Format: `projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id}` This field is ignored when you create an OS policy assignment.'
        revisionId:
          description: Output only. The assignment revision ID A new revision is committed whenever a rollout is triggered for a OS policy assignment
          type: string
          readOnly: true
        baseline:
          description: 'Output only. Indicates that this revision has been successfully rolled out in this zone and new VMs will be assigned OS policies from this revision. For a given OS policy assignment, there is only one revision with a value of `true` for this field.'
          type: boolean
          readOnly: true
        osPolicies:
          description: Required. List of OS policies to be applied to the VMs.
          items:
            $ref: '#/components/schemas/OSPolicy'
          type: array
        instanceFilter:
          $ref: '#/components/schemas/OSPolicyAssignmentInstanceFilter'
          description: Required. Filter to select VMs.
        reconciling:
          type: boolean
          readOnly: true
          description: 'Output only. Indicates that reconciliation is in progress for the revision. This value is `true` when the `rollout_state` is one of: * IN_PROGRESS * CANCELLING'
        deleted:
          type: boolean
          readOnly: true
          description: Output only. Indicates that this revision deletes the OS policy assignment.
        uid:
          readOnly: true
          type: string
          description: Output only. Server generated unique id for the OS policy assignment resource.
        rollout:
          $ref: '#/components/schemas/OSPolicyAssignmentRollout'
          description: 'Required. Rollout to deploy the OS policy assignment. A rollout is triggered in the following situations: 1) OSPolicyAssignment is created. 2) OSPolicyAssignment is updated and the update contains changes to one of the following fields: - instance_filter - os_policies 3) OSPolicyAssignment is deleted.'
        description:
          type: string
          description: OS policy assignment description. Length of the description is limited to 1024 characters.
        revisionCreateTime:
          format: google-datetime
          description: Output only. The timestamp that the revision was created.
          readOnly: true
          type: string
        etag:
          type: string
          description: 'The etag for this OS policy assignment. If this is provided on update, it must match the server''s etag.'
      description: 'OS policy assignment is an API resource that is used to apply a set of OS policies to a dynamically targeted group of Compute Engine VM instances. An OS policy is used to define the desired state configuration for a Compute Engine VM instance through a set of configuration resources that provide capabilities such as installing or removing software packages, or executing a script. For more information about the OS policy resource definitions and examples, see [OS policy and OS policy assignment](https://cloud.google.com/compute/docs/os-configuration-management/working-with-os-policies).'
    OSPolicyResourcePackageResource:
      type: object
      id: OSPolicyResourcePackageResource
      description: A resource that manages a system package.
      properties:
        apt:
          $ref: '#/components/schemas/OSPolicyResourcePackageResourceAPT'
          description: A package managed by Apt.
        yum:
          $ref: '#/components/schemas/OSPolicyResourcePackageResourceYUM'
          description: A package managed by YUM.
        desiredState:
          type: string
          enum:
            - DESIRED_STATE_UNSPECIFIED
            - INSTALLED
            - REMOVED
          description: Required. The desired state the agent should maintain for this package.
          enumDescriptions:
            - Unspecified is invalid.
            - Ensure that the package is installed.
            - The agent ensures that the package is not installed and uninstalls it if detected.
        msi:
          $ref: '#/components/schemas/OSPolicyResourcePackageResourceMSI'
          description: An MSI package.
        rpm:
          description: An rpm package file.
          $ref: '#/components/schemas/OSPolicyResourcePackageResourceRPM'
        deb:
          description: A deb package file.
          $ref: '#/components/schemas/OSPolicyResourcePackageResourceDeb'
        googet:
          description: A package managed by GooGet.
          $ref: '#/components/schemas/OSPolicyResourcePackageResourceGooGet'
        zypper:
          $ref: '#/components/schemas/OSPolicyResourcePackageResourceZypper'
          description: A package managed by Zypper.
    OSPolicyResourcePackageResourceAPT:
      type: object
      properties:
        name:
          type: string
          description: Required. Package name.
      id: OSPolicyResourcePackageResourceAPT
      description: 'A package managed by APT. - install: `apt-get update && apt-get -y install [name]` - remove: `apt-get -y remove [name]`'
    OSPolicyInventoryFilter:
      description: Filtering criteria to select VMs based on inventory details.
      type: object
      properties:
        osVersion:
          description: 'The OS version Prefix matches are supported if asterisk(*) is provided as the last character. For example, to match all versions with a major version of `7`, specify the following value for this field `7.*` An empty string matches all OS versions.'
          type: string
        osShortName:
          type: string
          description: Required. The OS short name
      id: OSPolicyInventoryFilter
    OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceCompliance:
      description: Compliance data for an OS policy resource.
      id: OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceCompliance
      properties:
        configSteps:
          description: Ordered list of configuration completed by the agent for the OS policy resource.
          items:
            $ref: '#/components/schemas/OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceOSPolicyResourceConfigStep'
          type: array
        osPolicyResourceId:
          description: The ID of the OS policy resource.
          type: string
        execResourceOutput:
          description: ExecResource specific output.
          $ref: '#/components/schemas/OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceExecResourceOutput'
        complianceState:
          enumDescriptions:
            - 'The resource is in an unknown compliance state. To get more details about why the policy is in this state, review the output of the `compliance_state_reason` field.'
            - Resource is compliant.
            - Resource is non-compliant.
          description: The compliance state of the resource.
          type: string
          enum:
            - UNKNOWN
            - COMPLIANT
            - NON_COMPLIANT
        complianceStateReason:
          description: 'A reason for the resource to be in the given compliance state. This field is always populated when `compliance_state` is `UNKNOWN`. The following values are supported when `compliance_state == UNKNOWN` * `execution-errors`: Errors were encountered by the agent while executing the resource and the compliance state couldn''t be determined. * `execution-skipped-by-agent`: Resource execution was skipped by the agent because errors were encountered while executing prior resources in the OS policy. * `os-policy-execution-attempt-failed`: The execution of the OS policy containing this resource failed and the compliance state couldn''t be determined.'
          type: string
      type: object
    PatchJobInstanceDetailsSummary:
      properties:
        ackedInstanceCount:
          type: string
          format: int64
          description: Number of instances that have acked and will start shortly.
        applyingPatchesInstanceCount:
          type: string
          description: Number of instances that are applying patches.
          format: int64
        prePatchStepInstanceCount:
          description: Number of instances that are running the pre-patch step.
          type: string
          format: int64
        failedInstanceCount:
          format: int64
          description: Number of instances that failed.
          type: string
        succeededInstanceCount:
          description: Number of instances that have completed successfully.
          type: string
          format: int64
        inactiveInstanceCount:
          type: string
          description: Number of instances that are inactive.
          format: int64
        postPatchStepInstanceCount:
          format: int64
          description: Number of instances that are running the post-patch step.
          type: string
        rebootingInstanceCount:
          type: string
          description: Number of instances rebooting.
          format: int64
        pendingInstanceCount:
          format: int64
          description: Number of instances pending patch job.
          type: string
        startedInstanceCount:
          type: string
          description: Number of instances that have started.
          format: int64
        succeededRebootRequiredInstanceCount:
          description: Number of instances that require reboot.
          format: int64
          type: string
        timedOutInstanceCount:
          type: string
          description: Number of instances that exceeded the time out while applying the patch.
          format: int64
        downloadingPatchesInstanceCount:
          type: string
          format: int64
          description: Number of instances that are downloading patches.
        noAgentDetectedInstanceCount:
          description: 'Number of instances that do not appear to be running the agent. Check to ensure that the agent is installed, running, and able to communicate with the service.'
          type: string
          format: int64
        notifiedInstanceCount:
          format: int64
          type: string
          description: Number of instances notified about patch job.
      type: object
      description: A summary of the current patch state across all instances that this patch job affects. Contains counts of instances in different states. These states map to `InstancePatchState`. List patch job instance details to see the specific states of each instance.
      id: PatchJobInstanceDetailsSummary
    CancelPatchJobRequest:
      description: Message for canceling a patch job.
      id: CancelPatchJobRequest
      type: object
      properties: {}
    OSPolicyAssignmentRollout:
      description: Message to configure the rollout at the zonal level for the OS policy assignment.
      id: OSPolicyAssignmentRollout
      properties:
        disruptionBudget:
          description: Required. The maximum number (or percentage) of VMs per zone to disrupt at any given moment.
          $ref: '#/components/schemas/FixedOrPercent'
        minWaitDuration:
          description: Required. This determines the minimum duration of time to wait after the configuration changes are applied through the current rollout. A VM continues to count towards the `disruption_budget` at least until this duration of time has passed after configuration changes are applied.
          format: google-duration
          type: string
      type: object
    GooSettings:
      properties: {}
      description: Googet patching is performed by running `googet update`.
      id: GooSettings
      type: object
    PatchJob:
      description: 'A high level representation of a patch job that is either in progress or has completed. Instance details are not included in the job. To paginate through instance details, use `ListPatchJobInstanceDetails`. For more information about patch jobs, see [Creating patch jobs](https://cloud.google.com/compute/docs/os-patch-management/create-patch-job).'
      type: object
      properties:
        dryRun:
          type: boolean
          description: 'If this patch job is a dry run, the agent reports that it has finished without running any updates on the VM instance.'
        patchConfig:
          $ref: '#/components/schemas/PatchConfig'
          description: Patch configuration being applied.
        createTime:
          type: string
          description: Time this patch job was created.
          format: google-datetime
        patchDeployment:
          readOnly: true
          description: Output only. Name of the patch deployment that created this patch job.
          type: string
        instanceDetailsSummary:
          description: Summary of instance details.
          $ref: '#/components/schemas/PatchJobInstanceDetailsSummary'
        errorMessage:
          type: string
          description: 'If this patch job failed, this message provides information about the failure.'
        displayName:
          description: Display name for this patch job. This is not a unique identifier.
          type: string
        percentComplete:
          type: number
          description: Reflects the overall progress of the patch job in the range of 0.0 being no progress to 100.0 being complete.
          format: double
        name:
          description: Unique identifier for this patch job in the form `projects/*/patchJobs/*`
          type: string
        rollout:
          description: Rollout strategy being applied.
          $ref: '#/components/schemas/PatchRollout'
        updateTime:
          type: string
          description: Last time this patch job was updated.
          format: google-datetime
        description:
          type: string
          description: Description of the patch job. Length of the description is limited to 1024 characters.
        instanceFilter:
          $ref: '#/components/schemas/PatchInstanceFilter'
          description: Instances to patch.
        state:
          enum:
            - STATE_UNSPECIFIED
            - STARTED
            - INSTANCE_LOOKUP
            - PATCHING
            - SUCCEEDED
            - COMPLETED_WITH_ERRORS
            - CANCELED
            - TIMED_OUT
          enumDescriptions:
            - State must be specified.
            - The patch job was successfully initiated.
            - The patch job is looking up instances to run the patch on.
            - Instances are being patched.
            - Patch job completed successfully.
            - Patch job completed but there were errors.
            - The patch job was canceled.
            - The patch job timed out.
          description: The current state of the PatchJob.
          type: string
        duration:
          description: 'Duration of the patch job. After the duration ends, the patch job times out.'
          format: google-duration
          type: string
      id: PatchJob
    OSPolicyResourceFile:
      description: A remote or local file.
      id: OSPolicyResourceFile
      properties:
        allowInsecure:
          type: boolean
          description: 'Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.'
        localPath:
          description: A local path within the VM to use.
          type: string
        gcs:
          description: A Cloud Storage object.
          $ref: '#/components/schemas/OSPolicyResourceFileGcs'
        remote:
          description: A generic remote file.
          $ref: '#/components/schemas/OSPolicyResourceFileRemote'
      type: object
    ListOSPolicyAssignmentRevisionsResponse:
      type: object
      id: ListOSPolicyAssignmentRevisionsResponse
      properties:
        nextPageToken:
          description: The pagination token to retrieve the next page of OS policy assignment revisions.
          type: string
        osPolicyAssignments:
          items:
            $ref: '#/components/schemas/OSPolicyAssignment'
          description: The OS policy assignment revisions
          type: array
      description: A response message for listing all revisions for a OS policy assignment.
    OSPolicyResourcePackageResourceYUM:
      description: 'A package managed by YUM. - install: `yum -y install package` - remove: `yum -y remove package`'
      properties:
        name:
          description: Required. Package name.
          type: string
      type: object
      id: OSPolicyResourcePackageResourceYUM
    ListOSPolicyAssignmentsResponse:
      properties:
        osPolicyAssignments:
          description: The list of assignments
          type: array
          items:
            $ref: '#/components/schemas/OSPolicyAssignment'
        nextPageToken:
          description: The pagination token to retrieve the next page of OS policy assignments.
          type: string
      type: object
      description: A response message for listing all assignments under given parent.
      id: ListOSPolicyAssignmentsResponse
    OSPolicyResourcePackageResourceRPM:
      properties:
        pullDeps:
          description: 'Whether dependencies should also be installed. - install when false: `rpm --upgrade --replacepkgs package.rpm` - install when true: `yum -y install package.rpm` or `zypper -y install package.rpm`'
          type: boolean
        source:
          $ref: '#/components/schemas/OSPolicyResourceFile'
          description: Required. An rpm package.
      description: An RPM package file. RPM packages only support INSTALLED state.
      id: OSPolicyResourcePackageResourceRPM
      type: object
    OSPolicyResourceFileGcs:
      properties:
        object:
          description: Required. Name of the Cloud Storage object.
          type: string
        bucket:
          description: Required. Bucket of the Cloud Storage object.
          type: string
        generation:
          format: int64
          type: string
          description: Generation number of the Cloud Storage object.
      description: Specifies a file available as a Cloud Storage Object.
      type: object
      id: OSPolicyResourceFileGcs
    InventoryZypperPatch:
      properties:
        patchName:
          type: string
          description: The name of the patch.
        category:
          description: The category of the patch.
          type: string
        severity:
          description: The severity specified for this patch
          type: string
        summary:
          description: Any summary information provided about this patch.
          type: string
      type: object
      id: InventoryZypperPatch
      description: Details related to a Zypper Patch.
    PatchConfig:
      type: object
      id: PatchConfig
      description: Patch configuration specifications. Contains details on how to apply the patch(es) to a VM instance.
      properties:
        postStep:
          $ref: '#/components/schemas/ExecStep'
          description: The `ExecStep` to run after the patch update.
        zypper:
          $ref: '#/components/schemas/ZypperSettings'
          description: Zypper update settings. Use this setting to override the default `zypper` patch rules.
        migInstancesAllowed:
          description: Allows the patch job to run on Managed instance groups (MIGs).
          type: boolean
        rebootConfig:
          enumDescriptions:
            - The default behavior is DEFAULT.
            - 'The agent decides if a reboot is necessary by checking signals such as registry keys on Windows or `/var/run/reboot-required` on APT based systems. On RPM based systems, a set of core system package install times are compared with system boot time.'
            - Always reboot the machine after the update completes.
            - Never reboot the machine after the update completes.
          enum:
            - REBOOT_CONFIG_UNSPECIFIED
            - DEFAULT
            - ALWAYS
            - NEVER
          description: Post-patch reboot settings.
          type: string
        yum:
          $ref: '#/components/schemas/YumSettings'
          description: Yum update settings. Use this setting to override the default `yum` patch rules.
        preStep:
          description: The `ExecStep` to run before the patch update.
          $ref: '#/components/schemas/ExecStep'
        goo:
          description: Goo update settings. Use this setting to override the default `goo` patch rules.
          $ref: '#/components/schemas/GooSettings'
        windowsUpdate:
          description: Windows update settings. Use this override the default windows patch rules.
          $ref: '#/components/schemas/WindowsUpdateSettings'
        apt:
          $ref: '#/components/schemas/AptSettings'
          description: Apt update settings. Use this setting to override the default `apt` patch rules.
    OSPolicyResourceFileResource:
      id: OSPolicyResourceFileResource
      properties:
        file:
          description: A remote or local source.
          $ref: '#/components/schemas/OSPolicyResourceFile'
        content:
          description: A a file with this content. The size of the content is limited to 32KiB.
          type: string
        path:
          description: Required. The absolute path of the file within the VM.
          type: string
        state:
          enum:
            - DESIRED_STATE_UNSPECIFIED
            - PRESENT
            - ABSENT
            - CONTENTS_MATCH
          enumDescriptions:
            - Unspecified is invalid.
            - Ensure file at path is present.
            - Ensure file at path is absent.
            - Ensure the contents of the file at path matches. If the file does not exist it will be created.
          type: string
          description: Required. Desired state of the file.
        permissions:
          type: string
          description: 'Consists of three octal digits which represent, in order, the permissions of the owner, group, and other users for the file (similarly to the numeric mode used in the linux chmod utility). Each digit represents a three bit number with the 4 bit corresponding to the read permissions, the 2 bit corresponds to the write bit, and the one bit corresponds to the execute permission. Default behavior is 755. Below are some examples of permissions and their associated values: read, write, and execute: 7 read and execute: 5 read and write: 6 read only: 4'
      type: object
      description: A resource that manages the state of a file.
    YumSettings:
      type: object
      properties:
        security:
          description: Adds the `--security` flag to `yum update`. Not supported on all platforms.
          type: boolean
        minimal:
          description: Will cause patch to run `yum update-minimal` instead.
          type: boolean
        exclusivePackages:
          type: array
          items:
            type: string
          description: 'An exclusive list of packages to be updated. These are the only packages that will be updated. If these packages are not installed, they will be ignored. This field must not be specified with any other patch configuration fields.'
        excludes:
          items:
            type: string
          description: List of packages to exclude from update. These packages are excluded by using the yum `--exclude` flag.
          type: array
      id: YumSettings
      description: Yum patching is performed by executing `yum update`. Additional options can be set to control how this is executed. Note that not all settings are supported on all platforms.
    InventoryItem:
      description: A single piece of inventory on a VM.
      type: object
      properties:
        installedPackage:
          $ref: '#/components/schemas/InventorySoftwarePackage'
          description: Software package present on the VM instance.
        type:
          type: string
          enumDescriptions:
            - Invalid. An type must be specified.
            - This represents a package that is installed on the VM.
            - This represents an update that is available for a package.
          enum:
            - TYPE_UNSPECIFIED
            - INSTALLED_PACKAGE
            - AVAILABLE_PACKAGE
          description: 'The specific type of inventory, correlating to its specific details.'
        id:
          type: string
          description: 'Identifier for this item, unique across items for this VM.'
        availablePackage:
          $ref: '#/components/schemas/InventorySoftwarePackage'
          description: Software package available to be installed on the VM instance.
        originType:
          description: The origin of this inventory item.
          enum:
            - ORIGIN_TYPE_UNSPECIFIED
            - INVENTORY_REPORT
          type: string
          enumDescriptions:
            - Invalid. An origin type must be specified.
            - This inventory item was discovered as the result of the agent reporting inventory via the reporting API.
        updateTime:
          format: google-datetime
          description: When this inventory item was last modified.
          type: string
        createTime:
          description: When this inventory item was first detected.
          format: google-datetime
          type: string
      id: InventoryItem
    InventoryOsInfo:
      id: InventoryOsInfo
      type: object
      properties:
        hostname:
          description: The VM hostname.
          type: string
        version:
          description: The version of the operating system.
          type: string
        kernelRelease:
          description: The kernel release of the operating system.
          type: string
        architecture:
          type: string
          description: The system architecture of the operating system.
        kernelVersion:
          type: string
          description: The kernel version of the operating system.
        shortName:
          description: 'The operating system short name. For example, ''windows'' or ''debian''.'
          type: string
        osconfigAgentVersion:
          type: string
          description: The current version of the OS Config agent running on the VM.
        longName:
          type: string
          description: The operating system long name. For example 'Debian GNU/Linux 9' or 'Microsoft Window Server 2019 Datacenter'.
      description: Operating system information for the VM.
    Inventory:
      properties:
        updateTime:
          description: Output only. Timestamp of the last reported inventory for the VM.
          readOnly: true
          format: google-datetime
          type: string
        items:
          description: 'Inventory items related to the VM keyed by an opaque unique identifier for each inventory item. The identifier is unique to each distinct and addressable inventory item and will change, when there is a new package version.'
          type: object
          additionalProperties:
            $ref: '#/components/schemas/InventoryItem'
        name:
          readOnly: true
          description: 'Output only. The `Inventory` API resource name. Format: `projects/{project_number}/locations/{location}/instances/{instance_id}/inventory`'
          type: string
        osInfo:
          $ref: '#/components/schemas/InventoryOsInfo'
          description: Base level operating system information for the VM.
      type: object
      id: Inventory
      description: 'This API resource represents the available inventory data for a Compute Engine virtual machine (VM) instance at a given point in time. You can use this API resource to determine the inventory data of your VM. For more information, see [Information provided by OS inventory management](https://cloud.google.com/compute/docs/instances/os-inventory-management#data-collected).'
    Status:
      properties:
        code:
          type: integer
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          format: int32
        message:
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
          type: string
        details:
          type: array
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
            type: object
      type: object
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      id: Status
    MonthlySchedule:
      type: object
      properties:
        weekDayOfMonth:
          $ref: '#/components/schemas/WeekDayOfMonth'
          description: Required. Week day in a month.
        monthDay:
          description: 'Required. One day of the month. 1-31 indicates the 1st to the 31st day. -1 indicates the last day of the month. Months without the target day will be skipped. For example, a schedule to run "every month on the 31st" will not run in February, April, June, etc.'
          type: integer
          format: int32
      description: Represents a monthly schedule. An example of a valid monthly schedule is "on the third Tuesday of the month" or "on the 15th of the month".
      id: MonthlySchedule
    InventoryWindowsQuickFixEngineeringPackage:
      description: 'Information related to a Quick Fix Engineering package. Fields are taken from Windows QuickFixEngineering Interface and match the source names: https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-quickfixengineering'
      properties:
        installTime:
          type: string
          format: google-datetime
          description: Date that the QFE update was installed. Mapped from installed_on field.
        hotFixId:
          description: Unique identifier associated with a particular QFE update.
          type: string
        caption:
          type: string
          description: A short textual description of the QFE update.
        description:
          description: A textual description of the QFE update.
          type: string
      id: InventoryWindowsQuickFixEngineeringPackage
      type: object
    OSPolicyAssignmentReportOSPolicyCompliance:
      id: OSPolicyAssignmentReportOSPolicyCompliance
      description: Compliance data for an OS policy
      type: object
      properties:
        osPolicyResourceCompliances:
          type: array
          description: Compliance data for each resource within the policy that is applied to the VM.
          items:
            $ref: '#/components/schemas/OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceCompliance'
        osPolicyId:
          type: string
          description: The OS policy id
        complianceState:
          enum:
            - UNKNOWN
            - COMPLIANT
            - NON_COMPLIANT
          type: string
          enumDescriptions:
            - The policy is in an unknown compliance state. Refer to the field `compliance_state_reason` to learn the exact reason for the policy to be in this compliance state.
            - Policy is compliant. The policy is compliant if all the underlying resources are also compliant.
            - Policy is non-compliant. The policy is non-compliant if one or more underlying resources are non-compliant.
          description: The compliance state of the OS policy.
        complianceStateReason:
          description: 'The reason for the OS policy to be in an unknown compliance state. This field is always populated when `compliance_state` is `UNKNOWN`. If populated, the field can contain one of the following values: * `vm-not-running`: The VM was not running. * `os-policies-not-supported-by-agent`: The version of the OS Config agent running on the VM does not support running OS policies. * `no-agent-detected`: The OS Config agent is not detected for the VM. * `resource-execution-errors`: The OS Config agent encountered errors while executing one or more resources in the policy. See `os_policy_resource_compliances` for details. * `task-timeout`: The task sent to the agent to apply the policy timed out. * `unexpected-agent-state`: The OS Config agent did not report the final status of the task that attempted to apply the policy. Instead, the agent unexpectedly started working on a different task. This mostly happens when the agent or VM unexpectedly restarts while applying OS policies. * `internal-service-errors`: Internal service errors were encountered while attempting to apply the policy.'
          type: string
    OSPolicyResource:
      description: 'An OS policy resource is used to define the desired state configuration and provides a specific functionality like installing/removing packages, executing a script etc. The system ensures that resources are always in their desired state by taking necessary actions if they have drifted from their desired state.'
      properties:
        file:
          description: File resource
          $ref: '#/components/schemas/OSPolicyResourceFileResource'
        repository:
          $ref: '#/components/schemas/OSPolicyResourceRepositoryResource'
          description: Package repository resource
        exec:
          description: Exec resource
          $ref: '#/components/schemas/OSPolicyResourceExecResource'
        id:
          type: string
          description: 'Required. The id of the resource with the following restrictions: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the OS policy.'
        pkg:
          $ref: '#/components/schemas/OSPolicyResourcePackageResource'
          description: Package resource
      type: object
      id: OSPolicyResource
    OSPolicyResourcePackageResourceDeb:
      id: OSPolicyResourcePackageResourceDeb
      type: object
      properties:
        pullDeps:
          description: 'Whether dependencies should also be installed. - install when false: `dpkg -i package` - install when true: `apt-get update && apt-get -y install package.deb`'
          type: boolean
        source:
          description: Required. A deb package.
          $ref: '#/components/schemas/OSPolicyResourceFile'
      description: A deb package file. dpkg packages only support INSTALLED state.
    FixedOrPercent:
      type: object
      properties:
        percent:
          type: integer
          description: 'Specifies the relative value defined as a percentage, which will be multiplied by a reference value.'
          format: int32
        fixed:
          format: int32
          type: integer
          description: Specifies a fixed value.
      description: Message encapsulating a value that can be either absolute ("fixed") or relative ("percent") to a value.
      id: FixedOrPercent
    ZypperSettings:
      description: 'Zypper patching is performed by running `zypper patch`. See also https://en.opensuse.org/SDB:Zypper_manual.'
      properties:
        excludes:
          description: List of patches to exclude from update.
          items:
            type: string
          type: array
        categories:
          items:
            type: string
          type: array
          description: 'Install only patches with these categories. Common categories include security, recommended, and feature.'
        withUpdate:
          description: 'Adds the `--with-update` flag, to `zypper patch`.'
          type: boolean
        withOptional:
          description: Adds the `--with-optional` flag to `zypper patch`.
          type: boolean
        severities:
          description: 'Install only patches with these severities. Common severities include critical, important, moderate, and low.'
          type: array
          items:
            type: string
        exclusivePatches:
          type: array
          description: 'An exclusive list of patches to be updated. These are the only patches that will be installed using ''zypper patch patch:'' command. This field must not be used with any other patch configuration fields.'
          items:
            type: string
      type: object
      id: ZypperSettings
    ListVulnerabilityReportsResponse:
      properties:
        nextPageToken:
          type: string
          description: The pagination token to retrieve the next page of vulnerabilityReports object.
        vulnerabilityReports:
          type: array
          items:
            $ref: '#/components/schemas/VulnerabilityReport'
          description: List of vulnerabilityReport objects.
      type: object
      description: A response message for listing vulnerability reports for all VM instances in the specified location.
      id: ListVulnerabilityReportsResponse
    ListInventoriesResponse:
      id: ListInventoriesResponse
      type: object
      properties:
        nextPageToken:
          description: The pagination token to retrieve the next page of inventory objects.
          type: string
        inventories:
          items:
            $ref: '#/components/schemas/Inventory'
          description: List of inventory objects.
          type: array
      description: A response message for listing inventory data for all VMs in a specified location.
    Empty:
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      id: Empty
      properties: {}
      type: object
    OSPolicyAssignmentOperationMetadata:
      id: OSPolicyAssignmentOperationMetadata
      properties:
        osPolicyAssignment:
          description: 'Reference to the `OSPolicyAssignment` API resource. Format: `projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id@revision_id}`'
          type: string
        rolloutStartTime:
          description: Rollout start time
          type: string
          format: google-datetime
        rolloutUpdateTime:
          description: Rollout update time
          type: string
          format: google-datetime
        rolloutState:
          enum:
            - ROLLOUT_STATE_UNSPECIFIED
            - IN_PROGRESS
            - CANCELLING
            - CANCELLED
            - SUCCEEDED
          enumDescriptions:
            - Invalid value
            - The rollout is in progress.
            - The rollout is being cancelled.
            - The rollout is cancelled.
            - The rollout has completed successfully.
          type: string
          description: State of the rollout
        apiMethod:
          type: string
          enum:
            - API_METHOD_UNSPECIFIED
            - CREATE
            - UPDATE
            - DELETE
          enumDescriptions:
            - Invalid value
            - Create OS policy assignment API method
            - Update OS policy assignment API method
            - Delete OS policy assignment API method
          description: The OS policy assignment API method.
      description: OS policy assignment operation metadata provided by OS policy assignment API methods that return long running operations.
      type: object
    VulnerabilityReportVulnerabilityDetailsReference:
      properties:
        url:
          type: string
          description: The url of the reference.
        source:
          description: The source of the reference e.g. NVD.
          type: string
      id: VulnerabilityReportVulnerabilityDetailsReference
      description: A reference for this vulnerability.
      type: object
    PatchJobInstanceDetails:
      id: PatchJobInstanceDetails
      type: object
      description: 'Patch details for a VM instance. For more information about reviewing VM instance details, see [Listing all VM instance details for a specific patch job](https://cloud.google.com/compute/docs/os-patch-management/manage-patch-jobs#list-instance-details).'
      properties:
        failureReason:
          description: 'If the patch fails, this field provides the reason.'
          type: string
        state:
          description: Current state of instance patch.
          enum:
            - PATCH_STATE_UNSPECIFIED
            - PENDING
            - INACTIVE
            - NOTIFIED
            - STARTED
            - DOWNLOADING_PATCHES
            - APPLYING_PATCHES
            - REBOOTING
            - SUCCEEDED
            - SUCCEEDED_REBOOT_REQUIRED
            - FAILED
            - ACKED
            - TIMED_OUT
            - RUNNING_PRE_PATCH_STEP
            - RUNNING_POST_PATCH_STEP
            - NO_AGENT_DETECTED
          type: string
          enumDescriptions:
            - Unspecified.
            - The instance is not yet notified.
            - Instance is inactive and cannot be patched.
            - The instance is notified that it should be patched.
            - The instance has started the patching process.
            - The instance is downloading patches.
            - The instance is applying patches.
            - The instance is rebooting.
            - The instance has completed applying patches.
            - The instance has completed applying patches but a reboot is required.
            - The instance has failed to apply the patch.
            - The instance acked the notification and will start shortly.
            - The instance exceeded the time out while applying the patch.
            - The instance is running the pre-patch step.
            - The instance is running the post-patch step.
            - 'The service could not detect the presence of the agent. Check to ensure that the agent is installed, running, and able to communicate with the service.'
        instanceSystemId:
          description: The unique identifier for the instance. This identifier is defined by the server.
          type: string
        name:
          description: The instance name in the form `projects/*/zones/*/instances/*`
          type: string
        attemptCount:
          type: string
          format: int64
          description: The number of times the agent that the agent attempts to apply the patch.
    ExecutePatchJobRequest:
      properties:
        description:
          description: Description of the patch job. Length of the description is limited to 1024 characters.
          type: string
        duration:
          type: string
          description: 'Duration of the patch job. After the duration ends, the patch job times out.'
          format: google-duration
        dryRun:
          description: 'If this patch is a dry-run only, instances are contacted but will do nothing.'
          type: boolean
        rollout:
          $ref: '#/components/schemas/PatchRollout'
          description: Rollout strategy of the patch job.
        displayName:
          type: string
          description: Display name for this patch job. This does not have to be unique.
        instanceFilter:
          $ref: '#/components/schemas/PatchInstanceFilter'
          description: 'Required. Instances to patch, either explicitly or filtered by some criteria such as zone or labels.'
        patchConfig:
          $ref: '#/components/schemas/PatchConfig'
          description: 'Patch configuration being applied. If omitted, instances are patched using the default configurations.'
      description: A request message to initiate patching across Compute Engine instances.
      id: ExecutePatchJobRequest
      type: object
    InventoryWindowsUpdatePackage:
      id: InventoryWindowsUpdatePackage
      type: object
      properties:
        updateId:
          type: string
          description: Gets the identifier of an update package. Stays the same across revisions.
        categories:
          items:
            $ref: '#/components/schemas/InventoryWindowsUpdatePackageWindowsUpdateCategory'
          description: The categories that are associated with this update package.
          type: array
        lastDeploymentChangeTime:
          type: string
          description: 'The last published date of the update, in (UTC) date and time.'
          format: google-datetime
        title:
          description: The localized title of the update package.
          type: string
        description:
          description: The localized description of the update package.
          type: string
        moreInfoUrls:
          items:
            type: string
          description: A collection of URLs that provide more information about the update package.
          type: array
        kbArticleIds:
          description: A collection of Microsoft Knowledge Base article IDs that are associated with the update package.
          type: array
          items:
            type: string
        supportUrl:
          type: string
          description: A hyperlink to the language-specific support information for the update.
        revisionNumber:
          format: int32
          type: integer
          description: The revision number of this update package.
      description: 'Details related to a Windows Update package. Field data and names are taken from Windows Update API IUpdate Interface: https://docs.microsoft.com/en-us/windows/win32/api/_wua/ Descriptive fields like title, and description are localized based on the locale of the VM being updated.'
    WeekDayOfMonth:
      type: object
      description: Represents one week day in a month. An example is "the 4th Sunday".
      id: WeekDayOfMonth
      properties:
        dayOfWeek:
          enumDescriptions:
            - The day of the week is unspecified.
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
          type: string
          description: Required. A day of the week.
          enum:
            - DAY_OF_WEEK_UNSPECIFIED
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        dayOffset:
          description: 'Optional. Represents the number of days before or after the given week day of month that the patch deployment is scheduled for. For example if `week_ordinal` and `day_of_week` values point to the second day of the month and this `day_offset` value is set to `3`, the patch deployment takes place three days after the second Tuesday of the month. If this value is negative, for example -5, the patches are deployed five days before before the second Tuesday of the month. Allowed values are in range [-30, 30].'
          format: int32
          type: integer
        weekOrdinal:
          type: integer
          description: Required. Week number in a month. 1-4 indicates the 1st to 4th week of the month. -1 indicates the last week of the month.
          format: int32
    OSPolicyResourcePackageResourceGooGet:
      id: OSPolicyResourcePackageResourceGooGet
      type: object
      properties:
        name:
          description: Required. Package name.
          type: string
      description: 'A package managed by GooGet. - install: `googet -noconfirm install package` - remove: `googet -noconfirm remove package`'
    ListPatchJobInstanceDetailsResponse:
      description: A response message for listing the instances details for a patch job.
      type: object
      id: ListPatchJobInstanceDetailsResponse
      properties:
        patchJobInstanceDetails:
          items:
            $ref: '#/components/schemas/PatchJobInstanceDetails'
          type: array
          description: A list of instance status.
        nextPageToken:
          description: A pagination token that can be used to get the next page of results.
          type: string
    AptSettings:
      type: object
      description: Apt patching is completed by executing `apt-get update && apt-get upgrade`. Additional options can be set to control how this is executed.
      id: AptSettings
      properties:
        type:
          enumDescriptions:
            - 'By default, upgrade will be performed.'
            - Runs `apt-get dist-upgrade`.
            - Runs `apt-get upgrade`.
          type: string
          enum:
            - TYPE_UNSPECIFIED
            - DIST
            - UPGRADE
          description: 'By changing the type to DIST, the patching is performed using `apt-get dist-upgrade` instead.'
        excludes:
          items:
            type: string
          description: List of packages to exclude from update. These packages will be excluded
          type: array
        exclusivePackages:
          items:
            type: string
          description: 'An exclusive list of packages to be updated. These are the only packages that will be updated. If these packages are not installed, they will be ignored. This field cannot be specified with any other patch configuration fields.'
          type: array
    OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceExecResourceOutput:
      properties:
        enforcementOutput:
          type: string
          description: Output from enforcement phase output file (if run). Output size is limited to 100K bytes.
          format: byte
      id: OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceExecResourceOutput
      type: object
      description: ExecResource specific output.
    VulnerabilityReportVulnerabilityDetails:
      properties:
        description:
          type: string
          description: The note or description describing the vulnerability from the distro.
        cve:
          type: string
          description: The CVE of the vulnerability. CVE cannot be empty and the combination of should be unique across vulnerabilities for a VM.
        cvssV3:
          $ref: '#/components/schemas/CVSSv3'
          description: The full description of the CVSSv3 for this vulnerability from NVD.
        references:
          description: Corresponds to the references attached to the `VulnerabilityDetails`.
          items:
            $ref: '#/components/schemas/VulnerabilityReportVulnerabilityDetailsReference'
          type: array
        severity:
          type: string
          description: Assigned severity/impact ranking from the distro.
        cvssV2Score:
          format: float
          type: number
          description: The CVSS V2 score of this vulnerability. CVSS V2 score is on a scale of 0 - 10 where 0 indicates low severity and 10 indicates high severity.
      description: Contains metadata information for the vulnerability. This information is collected from the upstream feed of the operating system.
      id: VulnerabilityReportVulnerabilityDetails
      type: object
    ResumePatchDeploymentRequest:
      type: object
      properties: {}
      id: ResumePatchDeploymentRequest
      description: A request message for resuming a patch deployment.
    PatchDeployment:
      properties:
        createTime:
          description: 'Output only. Time the patch deployment was created. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.'
          readOnly: true
          type: string
          format: google-datetime
        oneTimeSchedule:
          description: Required. Schedule a one-time execution.
          $ref: '#/components/schemas/OneTimeSchedule'
        state:
          readOnly: true
          description: Output only. Current state of the patch deployment.
          enumDescriptions:
            - The default value. This value is used if the state is omitted.
            - Active value means that patch deployment generates Patch Jobs.
            - Paused value means that patch deployment does not generate Patch jobs. Requires user action to move in and out from this state.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - PAUSED
          type: string
        name:
          description: 'Unique name for the patch deployment resource in a project. The patch deployment name is in the form: `projects/{project_id}/patchDeployments/{patch_deployment_id}`. This field is ignored when you create a new patch deployment.'
          type: string
        instanceFilter:
          description: Required. VM instances to patch.
          $ref: '#/components/schemas/PatchInstanceFilter'
        updateTime:
          readOnly: true
          format: google-datetime
          description: 'Output only. Time the patch deployment was last updated. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.'
          type: string
        lastExecuteTime:
          readOnly: true
          format: google-datetime
          type: string
          description: 'Output only. The last time a patch job was started by this deployment. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.'
        patchConfig:
          description: Optional. Patch configuration that is applied.
          $ref: '#/components/schemas/PatchConfig'
        rollout:
          description: Optional. Rollout strategy of the patch job.
          $ref: '#/components/schemas/PatchRollout'
        recurringSchedule:
          $ref: '#/components/schemas/RecurringSchedule'
          description: Required. Schedule recurring executions.
        description:
          description: Optional. Description of the patch deployment. Length of the description is limited to 1024 characters.
          type: string
        duration:
          format: google-duration
          type: string
          description: 'Optional. Duration of the patch. After the duration ends, the patch times out.'
      type: object
      id: PatchDeployment
      description: 'Patch deployments are configurations that individual patch jobs use to complete a patch. These configurations include instance filter, package repository settings, and a schedule. For more information about creating and managing patch deployments, see [Scheduling patch jobs](https://cloud.google.com/compute/docs/os-patch-management/schedule-patch-jobs).'
    OSPolicyAssignmentInstanceFilterInventory:
      properties:
        osShortName:
          description: Required. The OS short name
          type: string
        osVersion:
          description: 'The OS version Prefix matches are supported if asterisk(*) is provided as the last character. For example, to match all versions with a major version of `7`, specify the following value for this field `7.*` An empty string matches all OS versions.'
          type: string
      description: VM inventory details.
      id: OSPolicyAssignmentInstanceFilterInventory
      type: object
    GcsObject:
      description: Cloud Storage object representation.
      properties:
        bucket:
          description: Required. Bucket of the Cloud Storage object.
          type: string
        generationNumber:
          type: string
          format: int64
          description: Required. Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.
        object:
          description: Required. Name of the Cloud Storage object.
          type: string
      type: object
      id: GcsObject
    PatchRollout:
      id: PatchRollout
      type: object
      properties:
        mode:
          enumDescriptions:
            - Mode must be specified.
            - 'Patches are applied one zone at a time. The patch job begins in the region with the lowest number of targeted VMs. Within the region, patching begins in the zone with the lowest number of targeted VMs. If multiple regions (or zones within a region) have the same number of targeted VMs, a tie-breaker is achieved by sorting the regions or zones in alphabetical order.'
            - Patches are applied to VMs in all zones at the same time.
          type: string
          enum:
            - MODE_UNSPECIFIED
            - ZONE_BY_ZONE
            - CONCURRENT_ZONES
          description: Mode of the patch rollout.
        disruptionBudget:
          $ref: '#/components/schemas/FixedOrPercent'
          description: 'The maximum number (or percentage) of VMs per zone to disrupt at any given moment. The number of VMs calculated from multiplying the percentage by the total number of VMs in a zone is rounded up. During patching, a VM is considered disrupted from the time the agent is notified to begin until patching has completed. This disruption time includes the time to complete reboot and any post-patch steps. A VM contributes to the disruption budget if its patching operation fails either when applying the patches, running pre or post patch steps, or if it fails to respond with a success notification before timing out. VMs that are not running or do not have an active agent do not count toward this disruption budget. For zone-by-zone rollouts, if the disruption budget in a zone is exceeded, the patch job stops, because continuing to the next zone requires completion of the patch process in the previous zone. For example, if the disruption budget has a fixed value of `10`, and 8 VMs fail to patch in the current zone, the patch job continues to patch 2 VMs at a time until the zone is completed. When that zone is completed successfully, patching begins with 10 VMs at a time in the next zone. If 10 VMs in the next zone fail to patch, the patch job stops.'
      description: Patch rollout configuration specifications. Contains details on the concurrency control when applying patch(es) to all targeted VMs.
    OSPolicyResourceRepositoryResource:
      properties:
        zypper:
          description: A Zypper Repository.
          $ref: '#/components/schemas/OSPolicyResourceRepositoryResourceZypperRepository'
        apt:
          $ref: '#/components/schemas/OSPolicyResourceRepositoryResourceAptRepository'
          description: An Apt Repository.
        goo:
          $ref: '#/components/schemas/OSPolicyResourceRepositoryResourceGooRepository'
          description: A Goo Repository.
        yum:
          description: A Yum Repository.
          $ref: '#/components/schemas/OSPolicyResourceRepositoryResourceYumRepository'
      type: object
      id: OSPolicyResourceRepositoryResource
      description: A resource that manages a package repository.
    TimeOfDay:
      description: Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
      properties:
        hours:
          description: 'Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.'
          type: integer
          format: int32
        minutes:
          format: int32
          type: integer
          description: Minutes of hour of day. Must be from 0 to 59.
        seconds:
          description: Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
          type: integer
          format: int32
        nanos:
          description: 'Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.'
          format: int32
          type: integer
      type: object
      id: TimeOfDay
    OSPolicyAssignmentReport:
      description: A report of the OS policy assignment status for a given instance.
      id: OSPolicyAssignmentReport
      type: object
      properties:
        name:
          type: string
          description: 'The `OSPolicyAssignmentReport` API resource name. Format: `projects/{project_number}/locations/{location}/instances/{instance_id}/osPolicyAssignments/{os_policy_assignment_id}/report`'
        osPolicyAssignment:
          type: string
          description: 'Reference to the `OSPolicyAssignment` API resource that the `OSPolicy` belongs to. Format: `projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id@revision_id}`'
        osPolicyCompliances:
          items:
            $ref: '#/components/schemas/OSPolicyAssignmentReportOSPolicyCompliance'
          type: array
          description: Compliance data for each `OSPolicy` that is applied to the VM.
        lastRunId:
          type: string
          description: 'Unique identifier of the last attempted run to apply the OS policies associated with this assignment on the VM. This ID is logged by the OS Config agent while applying the OS policies associated with this assignment on the VM. NOTE: If the service is unable to successfully connect to the agent for this run, then this id will not be available in the agent logs.'
        instance:
          type: string
          description: The Compute Engine VM instance name.
        updateTime:
          type: string
          description: Timestamp for when the report was last generated.
          format: google-datetime
    InventoryWindowsApplication:
      type: object
      id: InventoryWindowsApplication
      properties:
        displayName:
          description: The name of the application or product.
          type: string
        installDate:
          description: The last time this product received service. The value of this property is replaced each time a patch is applied or removed from the product or the command-line option is used to repair the product.
          $ref: '#/components/schemas/Date'
        publisher:
          type: string
          description: The name of the manufacturer for the product or application.
        displayVersion:
          type: string
          description: The version of the product or application in string format.
        helpLink:
          description: The internet address for technical support.
          type: string
      description: 'Contains information about a Windows application that is retrieved from the Windows Registry. For more information about these fields, see: https://docs.microsoft.com/en-us/windows/win32/msi/uninstall-registry-key'
    VulnerabilityReportVulnerabilityItem:
      id: VulnerabilityReportVulnerabilityItem
      description: OS inventory item that is affected by a vulnerability or fixed as a result of a vulnerability.
      properties:
        availableInventoryItemId:
          description: 'Corresponds to the `AVAILABLE_PACKAGE` inventory item on the VM. If the vulnerability report was not updated after the VM inventory update, these values might not display in VM inventory. If there is no available fix, the field is empty. The `inventory_item` value specifies the latest `SoftwarePackage` available to the VM that fixes the vulnerability.'
          type: string
        upstreamFix:
          type: string
          description: 'The upstream OS patch, packages or KB that fixes the vulnerability.'
        fixedCpeUri:
          description: 'The recommended [CPE URI](https://cpe.mitre.org/specification/) update that contains a fix for this vulnerability.'
          type: string
        installedInventoryItemId:
          description: 'Corresponds to the `INSTALLED_PACKAGE` inventory item on the VM. This field displays the inventory items affected by this vulnerability. If the vulnerability report was not updated after the VM inventory update, these values might not display in VM inventory. For some operating systems, this field might be empty.'
          type: string
      type: object
    OSPolicyResourceRepositoryResourceZypperRepository:
      id: OSPolicyResourceRepositoryResourceZypperRepository
      description: Represents a single zypper package repository. These are added to a repo file that is managed at `/etc/zypp/repos.d/google_osconfig.repo`.
      type: object
      properties:
        gpgKeys:
          items:
            type: string
          description: URIs of GPG keys.
          type: array
        id:
          type: string
          description: 'Required. A one word, unique name for this repository. This is the `repo id` in the zypper config file and also the `display_name` if `display_name` is omitted. This id is also used as the unique identifier when checking for GuestPolicy conflicts.'
        baseUrl:
          type: string
          description: Required. The location of the repository directory.
        displayName:
          type: string
          description: The display name of the repository.
    OSPolicyResourceRepositoryResourceAptRepository:
      type: object
      id: OSPolicyResourceRepositoryResourceAptRepository
      description: Represents a single apt package repository. These will be added to a repo file that will be managed at `/etc/apt/sources.list.d/google_osconfig.list`.
      properties:
        gpgKey:
          description: URI of the key file for this repository. The agent maintains a keyring at `/etc/apt/trusted.gpg.d/osconfig_agent_managed.gpg`.
          type: string
        uri:
          description: Required. URI for this repository.
          type: string
        distribution:
          type: string
          description: Required. Distribution of this repository.
        components:
          type: array
          items:
            type: string
          description: Required. List of components for this repository. Must contain at least one item.
        archiveType:
          type: string
          description: Required. Type of archive files in this repository.
          enumDescriptions:
            - Unspecified is invalid.
            - Deb indicates that the archive contains binary files.
            - Deb-src indicates that the archive contains source files.
          enum:
            - ARCHIVE_TYPE_UNSPECIFIED
            - DEB
            - DEB_SRC
    ListPatchJobsResponse:
      id: ListPatchJobsResponse
      type: object
      properties:
        patchJobs:
          type: array
          items:
            $ref: '#/components/schemas/PatchJob'
          description: The list of patch jobs.
        nextPageToken:
          description: A pagination token that can be used to get the next page of results.
          type: string
      description: A response message for listing patch jobs.
    OSPolicyResourcePackageResourceMSI:
      properties:
        properties:
          description: Additional properties to use during installation. This should be in the format of Property=Setting. Appended to the defaults of `ACTION=INSTALL REBOOT=ReallySuppress`.
          items:
            type: string
          type: array
        source:
          $ref: '#/components/schemas/OSPolicyResourceFile'
          description: Required. The MSI package.
      id: OSPolicyResourcePackageResourceMSI
      description: An MSI package. MSI packages only support INSTALLED state.
      type: object
    TimeZone:
      description: 'Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).'
      type: object
      properties:
        id:
          type: string
          description: 'IANA Time Zone Database time zone, e.g. "America/New_York".'
        version:
          type: string
          description: 'Optional. IANA Time Zone Database version number, e.g. "2019a".'
      id: TimeZone
    OSPolicyAssignmentLabelSet:
      type: object
      properties:
        labels:
          additionalProperties:
            type: string
          description: Labels are identified by key/value pairs in this map. A VM should contain all the key/value pairs specified in this map to be selected.
          type: object
      id: OSPolicyAssignmentLabelSet
      description: 'Message representing label set. * A label is a key value pair set for a VM. * A LabelSet is a set of labels. * Labels within a LabelSet are ANDed. In other words, a LabelSet is applicable for a VM only if it matches all the labels in the LabelSet. * Example: A LabelSet with 2 labels: `env=prod` and `type=webserver` will only be applicable for those VMs with both labels present.'
    PausePatchDeploymentRequest:
      description: A request message for pausing a patch deployment.
      properties: {}
      type: object
      id: PausePatchDeploymentRequest
    InventorySoftwarePackage:
      properties:
        aptPackage:
          description: 'Details of an APT package. For details about the apt package manager, see https://wiki.debian.org/Apt.'
          $ref: '#/components/schemas/InventoryVersionedPackage'
        zypperPatch:
          $ref: '#/components/schemas/InventoryZypperPatch'
          description: 'Details of a Zypper patch. For details about the Zypper package manager, see https://en.opensuse.org/SDB:Zypper_manual.'
        cosPackage:
          description: Details of a COS package.
          $ref: '#/components/schemas/InventoryVersionedPackage'
        googetPackage:
          description: 'Details of a Googet package. For details about the googet package manager, see https://github.com/google/googet.'
          $ref: '#/components/schemas/InventoryVersionedPackage'
        qfePackage:
          description: 'Details of a Windows Quick Fix engineering package. See https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-quickfixengineering for info in Windows Quick Fix Engineering.'
          $ref: '#/components/schemas/InventoryWindowsQuickFixEngineeringPackage'
        yumPackage:
          $ref: '#/components/schemas/InventoryVersionedPackage'
          description: 'Yum package info. For details about the yum package manager, see https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/deployment_guide/ch-yum.'
        windowsApplication:
          $ref: '#/components/schemas/InventoryWindowsApplication'
          description: Details of Windows Application.
        wuaPackage:
          description: 'Details of a Windows Update package. See https://docs.microsoft.com/en-us/windows/win32/api/_wua/ for information about Windows Update.'
          $ref: '#/components/schemas/InventoryWindowsUpdatePackage'
        zypperPackage:
          description: 'Details of a Zypper package. For details about the Zypper package manager, see https://en.opensuse.org/SDB:Zypper_manual.'
          $ref: '#/components/schemas/InventoryVersionedPackage'
      type: object
      id: InventorySoftwarePackage
      description: Software package information of the operating system.
    PatchInstanceFilterGroupLabel:
      id: PatchInstanceFilterGroupLabel
      properties:
        labels:
          type: object
          additionalProperties:
            type: string
          description: Compute Engine instance labels that must be present for a VM instance to be targeted by this filter.
      description: 'Targets a group of VM instances by using their [assigned labels](https://cloud.google.com/compute/docs/labeling-resources). Labels are key-value pairs. A `GroupLabel` is a combination of labels that is used to target VMs for a patch job. For example, a patch job can target VMs that have the following `GroupLabel`: `{"env":"test", "app":"web"}`. This means that the patch job is applied to VMs that have both the labels `env=test` and `app=web`.'
      type: object
    WindowsUpdateSettings:
      id: WindowsUpdateSettings
      properties:
        excludes:
          type: array
          description: List of KBs to exclude from update.
          items:
            type: string
        exclusivePatches:
          items:
            type: string
          description: An exclusive list of kbs to be updated. These are the only patches that will be updated. This field must not be used with other patch configurations.
          type: array
        classifications:
          items:
            enum:
              - CLASSIFICATION_UNSPECIFIED
              - CRITICAL
              - SECURITY
              - DEFINITION
              - DRIVER
              - FEATURE_PACK
              - SERVICE_PACK
              - TOOL
              - UPDATE_ROLLUP
              - UPDATE
            type: string
            enumDescriptions:
              - 'Invalid. If classifications are included, they must be specified.'
              - '"A widely released fix for a specific problem that addresses a critical, non-security-related bug." [1]'
              - '"A widely released fix for a product-specific, security-related vulnerability. Security vulnerabilities are rated by their severity. The severity rating is indicated in the Microsoft security bulletin as critical, important, moderate, or low." [1]'
              - '"A widely released and frequent software update that contains additions to a product''s definition database. Definition databases are often used to detect objects that have specific attributes, such as malicious code, phishing websites, or junk mail." [1]'
              - '"Software that controls the input and output of a device." [1]'
              - '"New product functionality that is first distributed outside the context of a product release and that is typically included in the next full product release." [1]'
              - '"A tested, cumulative set of all hotfixes, security updates, critical updates, and updates. Additionally, service packs may contain additional fixes for problems that are found internally since the release of the product. Service packs my also contain a limited number of customer-requested design changes or features." [1]'
              - '"A utility or feature that helps complete a task or set of tasks." [1]'
              - '"A tested, cumulative set of hotfixes, security updates, critical updates, and updates that are packaged together for easy deployment. A rollup generally targets a specific area, such as security, or a component of a product, such as Internet Information Services (IIS)." [1]'
              - '"A widely released fix for a specific problem. An update addresses a noncritical, non-security-related bug." [1]'
          description: 'Only apply updates of these windows update classifications. If empty, all updates are applied.'
          type: array
      description: Windows patching is performed using the Windows Update Agent.
      type: object
    InventoryWindowsUpdatePackageWindowsUpdateCategory:
      id: InventoryWindowsUpdatePackageWindowsUpdateCategory
      description: Categories specified by the Windows Update.
      type: object
      properties:
        id:
          type: string
          description: The identifier of the windows update category.
        name:
          description: The name of the windows update category.
          type: string
    Date:
      type: object
      description: 'Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp'
      id: Date
      properties:
        day:
          description: 'Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn''t significant.'
          type: integer
          format: int32
        month:
          description: 'Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.'
          format: int32
          type: integer
        year:
          type: integer
          description: 'Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.'
          format: int32
    OSPolicyResourceRepositoryResourceGooRepository:
      properties:
        url:
          type: string
          description: Required. The url of the repository.
        name:
          description: Required. The name of the repository.
          type: string
      id: OSPolicyResourceRepositoryResourceGooRepository
      description: 'Represents a Goo package repository. These are added to a repo file that is managed at `C:/ProgramData/GooGet/repos/google_osconfig.repo`.'
      type: object
    OneTimeSchedule:
      properties:
        executeTime:
          format: google-datetime
          description: Required. The desired patch job execution time.
          type: string
      description: 'Sets the time for a one time patch deployment. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.'
      type: object
      id: OneTimeSchedule
    InventoryVersionedPackage:
      type: object
      id: InventoryVersionedPackage
      description: 'Information related to the a standard versioned package. This includes package info for APT, Yum, Zypper, and Googet package managers.'
      properties:
        version:
          type: string
          description: The version of the package.
        architecture:
          description: The system architecture this package is intended for.
          type: string
        packageName:
          description: The name of the package.
          type: string
    ExecStep:
      description: A step that runs an executable for a PatchJob.
      id: ExecStep
      properties:
        windowsExecStepConfig:
          description: The ExecStepConfig for all Windows VMs targeted by the PatchJob.
          $ref: '#/components/schemas/ExecStepConfig'
        linuxExecStepConfig:
          description: The ExecStepConfig for all Linux VMs targeted by the PatchJob.
          $ref: '#/components/schemas/ExecStepConfig'
      type: object
    OSPolicyResourceExecResource:
      properties:
        validate:
          $ref: '#/components/schemas/OSPolicyResourceExecResourceExec'
          description: 'Required. What to run to validate this resource is in the desired state. An exit code of 100 indicates "in desired state", and exit code of 101 indicates "not in desired state". Any other exit code indicates a failure running validate.'
        enforce:
          $ref: '#/components/schemas/OSPolicyResourceExecResourceExec'
          description: 'What to run to bring this resource into the desired state. An exit code of 100 indicates "success", any other exit code indicates a failure running enforce.'
      id: OSPolicyResourceExecResource
      type: object
      description: 'A resource that allows executing scripts on the VM. The `ExecResource` has 2 stages: `validate` and `enforce` and both stages accept a script as an argument to execute. When the `ExecResource` is applied by the agent, it first executes the script in the `validate` stage. The `validate` stage can signal that the `ExecResource` is already in the desired state by returning an exit code of `100`. If the `ExecResource` is not in the desired state, it should return an exit code of `101`. Any other exit code returned by this stage is considered an error. If the `ExecResource` is not in the desired state based on the exit code from the `validate` stage, the agent proceeds to execute the script from the `enforce` stage. If the `ExecResource` is already in the desired state, the `enforce` stage will not be run. Similar to `validate` stage, the `enforce` stage should return an exit code of `100` to indicate that the resource in now in its desired state. Any other exit code is considered an error. NOTE: An exit code of `100` was chosen over `0` (and `101` vs `1`) to have an explicit indicator of `in desired state`, `not in desired state` and errors. Because, for example, Powershell will always return an exit code of `0` unless an `exit` statement is provided in the script. So, for reasons of consistency and being explicit, exit codes `100` and `101` were chosen.'
    Operation:
      properties:
        done:
          type: boolean
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
        name:
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
        error:
          description: The error result of the operation in case of failure or cancellation.
          $ref: '#/components/schemas/Status'
        response:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
          type: object
      description: This resource represents a long-running operation that is the result of a network API call.
      type: object
      id: Operation
    ListOSPolicyAssignmentReportsResponse:
      description: A response message for listing OS Policy assignment reports including the page of results and page token.
      properties:
        nextPageToken:
          type: string
          description: The pagination token to retrieve the next page of OS policy assignment report objects.
        osPolicyAssignmentReports:
          items:
            $ref: '#/components/schemas/OSPolicyAssignmentReport'
          type: array
          description: List of OS policy assignment reports.
      type: object
      id: ListOSPolicyAssignmentReportsResponse
    VulnerabilityReport:
      properties:
        name:
          type: string
          description: 'Output only. The `vulnerabilityReport` API resource name. Format: `projects/{project_number}/locations/{location}/instances/{instance_id}/vulnerabilityReport`'
          readOnly: true
        vulnerabilities:
          items:
            $ref: '#/components/schemas/VulnerabilityReportVulnerability'
          readOnly: true
          type: array
          description: Output only. List of vulnerabilities affecting the VM.
        updateTime:
          format: google-datetime
          type: string
          description: Output only. The timestamp for when the last vulnerability report was generated for the VM.
          readOnly: true
      description: 'This API resource represents the vulnerability report for a specified Compute Engine virtual machine (VM) instance at a given point in time. For more information, see [Vulnerability reports](https://cloud.google.com/compute/docs/instances/os-inventory-management#vulnerability-reports).'
      type: object
      id: VulnerabilityReport
    CVSSv3:
      description: 'Common Vulnerability Scoring System version 3. For details, see https://www.first.org/cvss/specification-document'
      properties:
        confidentialityImpact:
          type: string
          enumDescriptions:
            - Invalid value.
            - High impact.
            - Low impact.
            - No impact.
          enum:
            - IMPACT_UNSPECIFIED
            - IMPACT_HIGH
            - IMPACT_LOW
            - IMPACT_NONE
          description: This metric measures the impact to the confidentiality of the information resources managed by a software component due to a successfully exploited vulnerability.
        privilegesRequired:
          type: string
          description: This metric describes the level of privileges an attacker must possess before successfully exploiting the vulnerability.
          enumDescriptions:
            - Invalid value.
            - 'The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files of the vulnerable system to carry out an attack.'
            - 'The attacker requires privileges that provide basic user capabilities that could normally affect only settings and files owned by a user. Alternatively, an attacker with Low privileges has the ability to access only non-sensitive resources.'
            - 'The attacker requires privileges that provide significant (e.g., administrative) control over the vulnerable component allowing access to component-wide settings and files.'
          enum:
            - PRIVILEGES_REQUIRED_UNSPECIFIED
            - PRIVILEGES_REQUIRED_NONE
            - PRIVILEGES_REQUIRED_LOW
            - PRIVILEGES_REQUIRED_HIGH
        attackComplexity:
          type: string
          enumDescriptions:
            - Invalid value.
            - Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success when attacking the vulnerable component.
            - 'A successful attack depends on conditions beyond the attacker''s control. That is, a successful attack cannot be accomplished at will, but requires the attacker to invest in some measurable amount of effort in preparation or execution against the vulnerable component before a successful attack can be expected.'
          description: This metric describes the conditions beyond the attacker's control that must exist in order to exploit the vulnerability.
          enum:
            - ATTACK_COMPLEXITY_UNSPECIFIED
            - ATTACK_COMPLEXITY_LOW
            - ATTACK_COMPLEXITY_HIGH
        attackVector:
          type: string
          description: This metric reflects the context by which vulnerability exploitation is possible.
          enumDescriptions:
            - Invalid value.
            - 'The vulnerable component is bound to the network stack and the set of possible attackers extends beyond the other options listed below, up to and including the entire Internet.'
            - 'The vulnerable component is bound to the network stack, but the attack is limited at the protocol level to a logically adjacent topology.'
            - The vulnerable component is not bound to the network stack and the attacker's path is via read/write/execute capabilities.
            - The attack requires the attacker to physically touch or manipulate the vulnerable component.
          enum:
            - ATTACK_VECTOR_UNSPECIFIED
            - ATTACK_VECTOR_NETWORK
            - ATTACK_VECTOR_ADJACENT
            - ATTACK_VECTOR_LOCAL
            - ATTACK_VECTOR_PHYSICAL
        integrityImpact:
          enumDescriptions:
            - Invalid value.
            - High impact.
            - Low impact.
            - No impact.
          description: This metric measures the impact to integrity of a successfully exploited vulnerability.
          enum:
            - IMPACT_UNSPECIFIED
            - IMPACT_HIGH
            - IMPACT_LOW
            - IMPACT_NONE
          type: string
        impactScore:
          format: float
          description: The Impact sub-score equation is derived from the Base Impact metrics.
          type: number
        exploitabilityScore:
          type: number
          format: float
          description: 'The Exploitability sub-score equation is derived from the Base Exploitability metrics. https://www.first.org/cvss/specification-document#2-1-Exploitability-Metrics'
        baseScore:
          format: float
          type: number
          description: 'The base score is a function of the base metric scores. https://www.first.org/cvss/specification-document#Base-Metrics'
        userInteraction:
          enumDescriptions:
            - Invalid value.
            - The vulnerable system can be exploited without interaction from any user.
            - Successful exploitation of this vulnerability requires a user to take some action before the vulnerability can be exploited.
          description: 'This metric captures the requirement for a human user, other than the attacker, to participate in the successful compromise of the vulnerable component.'
          type: string
          enum:
            - USER_INTERACTION_UNSPECIFIED
            - USER_INTERACTION_NONE
            - USER_INTERACTION_REQUIRED
        scope:
          enum:
            - SCOPE_UNSPECIFIED
            - SCOPE_UNCHANGED
            - SCOPE_CHANGED
          description: The Scope metric captures whether a vulnerability in one vulnerable component impacts resources in components beyond its security scope.
          enumDescriptions:
            - Invalid value.
            - An exploited vulnerability can only affect resources managed by the same security authority.
            - An exploited vulnerability can affect resources beyond the security scope managed by the security authority of the vulnerable component.
          type: string
        availabilityImpact:
          description: This metric measures the impact to the availability of the impacted component resulting from a successfully exploited vulnerability.
          enum:
            - IMPACT_UNSPECIFIED
            - IMPACT_HIGH
            - IMPACT_LOW
            - IMPACT_NONE
          type: string
          enumDescriptions:
            - Invalid value.
            - High impact.
            - Low impact.
            - No impact.
      type: object
      id: CVSSv3
    ExecStepConfig:
      description: Common configurations for an ExecStep.
      id: ExecStepConfig
      properties:
        gcsObject:
          $ref: '#/components/schemas/GcsObject'
          description: A Cloud Storage object containing the executable.
        localPath:
          description: An absolute path to the executable on the VM.
          type: string
        allowedSuccessCodes:
          description: 'Defaults to [0]. A list of possible return values that the execution can return to indicate a success.'
          type: array
          items:
            format: int32
            type: integer
        interpreter:
          enum:
            - INTERPRETER_UNSPECIFIED
            - NONE
            - SHELL
            - POWERSHELL
          description: 'The script interpreter to use to run the script. If no interpreter is specified the script will be executed directly, which will likely only succeed for scripts with [shebang lines] (https://en.wikipedia.org/wiki/Shebang_\(Unix\)).'
          enumDescriptions:
            - 'If the interpreter is not specified, the value defaults to `NONE`.'
            - 'Indicates that the file is run as follows on each operating system: + For Linux VMs, the file is ran as an executable and the interpreter might be parsed from the [shebang line](https://wikipedia.org/wiki/Shebang_(Unix)) of the file. + For Windows VM, this value is not supported.'
            - Indicates that the file is run with `/bin/sh` on Linux and `cmd` on Windows.
            - Indicates that the file is run with PowerShell.
          type: string
      type: object
    OSPolicyResourceExecResourceExec:
      id: OSPolicyResourceExecResourceExec
      properties:
        outputFilePath:
          description: Only recorded for enforce Exec. Path to an output file (that is created by this Exec) whose content will be recorded in OSPolicyResourceCompliance after a successful run. Absence or failure to read this file will result in this ExecResource being non-compliant. Output file size is limited to 100K bytes.
          type: string
        script:
          type: string
          description: An inline script. The size of the script is limited to 32KiB.
        args:
          type: array
          items:
            type: string
          description: Optional arguments to pass to the source during execution.
        interpreter:
          type: string
          enumDescriptions:
            - 'Invalid value, the request will return validation error.'
            - 'If an interpreter is not specified, the source is executed directly. This execution, without an interpreter, only succeeds for executables and scripts that have shebang lines.'
            - Indicates that the script runs with `/bin/sh` on Linux and `cmd.exe` on Windows.
            - Indicates that the script runs with PowerShell.
          enum:
            - INTERPRETER_UNSPECIFIED
            - NONE
            - SHELL
            - POWERSHELL
          description: Required. The script interpreter to use.
        file:
          description: A remote or local file.
          $ref: '#/components/schemas/OSPolicyResourceFile'
      type: object
      description: A file or script to execute.
    OSPolicyResourcePackageResourceZypper:
      id: OSPolicyResourcePackageResourceZypper
      properties:
        name:
          type: string
          description: Required. Package name.
      type: object
      description: 'A package managed by Zypper. - install: `zypper -y install package` - remove: `zypper -y rm package`'
    PatchInstanceFilter:
      description: 'A filter to target VM instances for patching. The targeted VMs must meet all criteria specified. So if both labels and zones are specified, the patch job targets only VMs with those labels and in those zones.'
      id: PatchInstanceFilter
      type: object
      properties:
        instanceNamePrefixes:
          description: 'Targets VMs whose name starts with one of these prefixes. Similar to labels, this is another way to group VMs when targeting configs, for example prefix="prod-".'
          type: array
          items:
            type: string
        groupLabels:
          items:
            $ref: '#/components/schemas/PatchInstanceFilterGroupLabel'
          type: array
          description: Targets VM instances matching ANY of these GroupLabels. This allows targeting of disparate groups of VM instances.
        all:
          type: boolean
          description: 'Target all VM instances in the project. If true, no other criteria is permitted.'
        zones:
          type: array
          description: Targets VM instances in ANY of these zones. Leave empty to target VM instances in any zone.
          items:
            type: string
        instances:
          type: array
          items:
            type: string
          description: 'Targets any of the VM instances specified. Instances are specified by their URI in the form `zones/[ZONE]/instances/[INSTANCE_NAME]`, `projects/[PROJECT_ID]/zones/[ZONE]/instances/[INSTANCE_NAME]`, or `https://www.googleapis.com/compute/v1/projects/[PROJECT_ID]/zones/[ZONE]/instances/[INSTANCE_NAME]`'
    OSPolicyResourceRepositoryResourceYumRepository:
      description: Represents a single yum package repository. These are added to a repo file that is managed at `/etc/yum.repos.d/google_osconfig.repo`.
      properties:
        id:
          description: 'Required. A one word, unique name for this repository. This is the `repo id` in the yum config file and also the `display_name` if `display_name` is omitted. This id is also used as the unique identifier when checking for resource conflicts.'
          type: string
        gpgKeys:
          description: URIs of GPG keys.
          items:
            type: string
          type: array
        displayName:
          description: The display name of the repository.
          type: string
        baseUrl:
          description: Required. The location of the repository directory.
          type: string
      id: OSPolicyResourceRepositoryResourceYumRepository
      type: object
    ListPatchDeploymentsResponse:
      type: object
      id: ListPatchDeploymentsResponse
      properties:
        patchDeployments:
          type: array
          description: The list of patch deployments.
          items:
            $ref: '#/components/schemas/PatchDeployment'
        nextPageToken:
          description: A pagination token that can be used to get the next page of patch deployments.
          type: string
      description: A response message for listing patch deployments.
    GoogleCloudOsconfigV1__OSPolicyAssignmentOperationMetadata:
      type: object
      description: OS policy assignment operation metadata provided by OS policy assignment API methods that return long running operations.
      properties:
        rolloutUpdateTime:
          format: google-datetime
          description: Rollout update time
          type: string
        rolloutStartTime:
          description: Rollout start time
          format: google-datetime
          type: string
        apiMethod:
          type: string
          enum:
            - API_METHOD_UNSPECIFIED
            - CREATE
            - UPDATE
            - DELETE
          enumDescriptions:
            - Invalid value
            - Create OS policy assignment API method
            - Update OS policy assignment API method
            - Delete OS policy assignment API method
          description: The OS policy assignment API method.
        osPolicyAssignment:
          type: string
          description: 'Reference to the `OSPolicyAssignment` API resource. Format: `projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id@revision_id}`'
        rolloutState:
          enum:
            - ROLLOUT_STATE_UNSPECIFIED
            - IN_PROGRESS
            - CANCELLING
            - CANCELLED
            - SUCCEEDED
          type: string
          enumDescriptions:
            - Invalid value
            - The rollout is in progress.
            - The rollout is being cancelled.
            - The rollout is cancelled.
            - The rollout has completed successfully.
          description: State of the rollout
      id: GoogleCloudOsconfigV1__OSPolicyAssignmentOperationMetadata
    RecurringSchedule:
      id: RecurringSchedule
      description: Sets the time for recurring patch deployments.
      type: object
      properties:
        endTime:
          type: string
          description: Optional. The end time at which a recurring patch deployment schedule is no longer active.
          format: google-datetime
        timeOfDay:
          description: Required. Time of the day to run a recurring deployment.
          $ref: '#/components/schemas/TimeOfDay'
        timeZone:
          description: Required. Defines the time zone that `time_of_day` is relative to. The rules for daylight saving time are determined by the chosen time zone.
          $ref: '#/components/schemas/TimeZone'
        startTime:
          description: Optional. The time that the recurring schedule becomes effective. Defaults to `create_time` of the patch deployment.
          format: google-datetime
          type: string
        lastExecuteTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The time the last patch job ran successfully.
        nextExecuteTime:
          format: google-datetime
          readOnly: true
          description: Output only. The time the next patch job is scheduled to run.
          type: string
        frequency:
          enum:
            - FREQUENCY_UNSPECIFIED
            - WEEKLY
            - MONTHLY
            - DAILY
          description: Required. The frequency unit of this recurring schedule.
          type: string
          enumDescriptions:
            - Invalid. A frequency must be specified.
            - Indicates that the frequency of recurrence should be expressed in terms of weeks.
            - Indicates that the frequency of recurrence should be expressed in terms of months.
            - Indicates that the frequency of recurrence should be expressed in terms of days.
        weekly:
          description: Required. Schedule with weekly executions.
          $ref: '#/components/schemas/WeeklySchedule'
        monthly:
          description: Required. Schedule with monthly executions.
          $ref: '#/components/schemas/MonthlySchedule'
    OSPolicy:
      properties:
        fingerprint:
          type: string
          description: OSPolicy fingerprint (checksum)
        allowNoResourceGroupMatch:
          description: This flag determines the OS policy compliance status when none of the resource groups within the policy are applicable for a VM. Set this value to `true` if the policy needs to be reported as compliant even if the policy has nothing to validate or enforce.
          type: boolean
        resourceGroups:
          description: 'Required. List of resource groups for the policy. For a particular VM, resource groups are evaluated in the order specified and the first resource group that is applicable is selected and the rest are ignored. If none of the resource groups are applicable for a VM, the VM is considered to be non-compliant w.r.t this policy. This behavior can be toggled by the flag `allow_no_resource_group_match`'
          items:
            $ref: '#/components/schemas/OSPolicyResourceGroup'
          type: array
        description:
          type: string
          description: Policy description. Length of the description is limited to 1024 characters.
        mode:
          description: Required. Policy mode
          enum:
            - MODE_UNSPECIFIED
            - VALIDATION
            - ENFORCEMENT
          type: string
          enumDescriptions:
            - Invalid mode
            - This mode checks if the configuration resources in the policy are in their desired state. No actions are performed if they are not in the desired state. This mode is used for reporting purposes.
            - 'This mode checks if the configuration resources in the policy are in their desired state, and if not, enforces the desired state.'
        id:
          description: 'Required. The id of the OS policy with the following restrictions: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the assignment.'
          type: string
      id: OSPolicy
      description: An OS policy defines the desired state configuration for a VM.
      type: object
  parameters:
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
  x-stackQL-resources:
    os_policy_assignments:
      id: google.osconfig.os_policy_assignments
      name: os_policy_assignments
      title: Os Policy Assignments
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1osPolicyAssignments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.osPolicyAssignments
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1osPolicyAssignments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1osPolicyAssignments/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1osPolicyAssignments~1{osPolicyAssignmentsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1osPolicyAssignments~1{osPolicyAssignmentsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1osPolicyAssignments~1{osPolicyAssignmentsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/os_policy_assignments/methods/list'
          - $ref: '#/components/x-stackQL-resources/os_policy_assignments/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/os_policy_assignments/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/os_policy_assignments/methods/delete'
    os_policy_assignments_revisions:
      id: google.osconfig.os_policy_assignments_revisions
      name: os_policy_assignments_revisions
      title: Os Policy Assignments Revisions
      methods:
        list_revisions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1osPolicyAssignments~1{osPolicyAssignmentsId}:listRevisions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.osPolicyAssignments
        _list_revisions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1osPolicyAssignments~1{osPolicyAssignmentsId}:listRevisions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/os_policy_assignments_revisions/methods/list_revisions'
        insert: []
        update: []
        delete: []
    operations:
      id: google.osconfig.operations
      name: operations
      title: Operations
      methods:
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1osPolicyAssignments~1{osPolicyAssignmentsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1osPolicyAssignments~1{osPolicyAssignmentsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
        insert: []
        update: []
        delete: []
    report:
      id: google.osconfig.report
      name: report
      title: Report
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}~1osPolicyAssignments~1{osPolicyAssignmentsId}~1report/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/report/methods/get'
        insert: []
        update: []
        delete: []
    reports:
      id: google.osconfig.reports
      name: reports
      title: Reports
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}~1osPolicyAssignments~1{osPolicyAssignmentsId}~1reports/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.osPolicyAssignmentReports
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}~1osPolicyAssignments~1{osPolicyAssignmentsId}~1reports/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/reports/methods/list'
        insert: []
        update: []
        delete: []
    inventories:
      id: google.osconfig.inventories
      name: inventories
      title: Inventories
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}~1inventories/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.inventories
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}~1inventories/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/inventories/methods/list'
        insert: []
        update: []
        delete: []
    inventory:
      id: google.osconfig.inventory
      name: inventory
      title: Inventory
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}~1inventory/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    vulnerability_reports:
      id: google.osconfig.vulnerability_reports
      name: vulnerability_reports
      title: Vulnerability Reports
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}~1vulnerabilityReports/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.vulnerabilityReports
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}~1vulnerabilityReports/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/vulnerability_reports/methods/list'
        insert: []
        update: []
        delete: []
    vulnerability_report:
      id: google.osconfig.vulnerability_report
      name: vulnerability_report
      title: Vulnerability Report
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}~1vulnerabilityReport/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/vulnerability_report/methods/get'
        insert: []
        update: []
        delete: []
    patch_deployments:
      id: google.osconfig.patch_deployments
      name: patch_deployments
      title: Patch Deployments
      methods:
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1patchDeployments~1{patchDeploymentsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1patchDeployments~1{patchDeploymentsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1patchDeployments~1{patchDeploymentsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1patchDeployments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.patchDeployments
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1patchDeployments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1patchDeployments/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        pause:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1patchDeployments~1{patchDeploymentsId}:pause/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        resume:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1patchDeployments~1{patchDeploymentsId}:resume/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/patch_deployments/methods/get'
          - $ref: '#/components/x-stackQL-resources/patch_deployments/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/patch_deployments/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/patch_deployments/methods/delete'
    instance_details:
      id: google.osconfig.instance_details
      name: instance_details
      title: Instance Details
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1patchJobs~1{patchJobsId}~1instanceDetails/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.patchJobInstanceDetails
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1patchJobs~1{patchJobsId}~1instanceDetails/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/instance_details/methods/list'
        insert: []
        update: []
        delete: []
    patch_jobs:
      id: google.osconfig.patch_jobs
      name: patch_jobs
      title: Patch Jobs
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1patchJobs~1{patchJobsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1patchJobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.patchJobs
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1patchJobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1patchJobs~1{patchJobsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        execute:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1patchJobs:execute/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/patch_jobs/methods/get'
          - $ref: '#/components/x-stackQL-resources/patch_jobs/methods/list'
        insert: []
        update: []
        delete: []
paths:
  '/v1/projects/{projectsId}/locations/{locationsId}/osPolicyAssignments':
    parameters: &ref_1
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/oauth_token'
    get:
      description: 'List the OS policy assignments under the parent resource. For each OS policy assignment, the latest revision is returned.'
      operationId: osconfig.projects.locations.osPolicyAssignments.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOSPolicyAssignmentsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: os_policy_assignments
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.osPolicyAssignments
    post:
      description: 'Create an OS policy assignment. This method also creates the first revision of the OS policy assignment. This method returns a long running operation (LRO) that contains the rollout details. The rollout can be cancelled by cancelling the LRO. For more information, see [Method: projects.locations.osPolicyAssignments.operations.cancel](https://cloud.google.com/compute/docs/osconfig/rest/v1/projects.locations.osPolicyAssignments.operations/cancel).'
      operationId: osconfig.projects.locations.osPolicyAssignments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OSPolicyAssignment'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: osPolicyAssignmentId
          schema:
            type: string
      x-stackQL-resource: os_policy_assignments
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/osPolicyAssignments/{osPolicyAssignmentsId}:listRevisions':
    parameters: *ref_1
    get:
      description: List the OS policy assignment revisions for a given OS policy assignment.
      operationId: osconfig.projects.locations.osPolicyAssignments.listRevisions
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOSPolicyAssignmentRevisionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: osPolicyAssignmentsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: os_policy_assignments_revisions
      x-stackQL-method: list_revisions
      x-stackQL-verb: select
      x-stackQL-objectKey: $.osPolicyAssignments
  '/v1/projects/{projectsId}/locations/{locationsId}/osPolicyAssignments/{osPolicyAssignmentsId}':
    parameters: *ref_1
    patch:
      description: 'Update an existing OS policy assignment. This method creates a new revision of the OS policy assignment. This method returns a long running operation (LRO) that contains the rollout details. The rollout can be cancelled by cancelling the LRO. For more information, see [Method: projects.locations.osPolicyAssignments.operations.cancel](https://cloud.google.com/compute/docs/osconfig/rest/v1/projects.locations.osPolicyAssignments.operations/cancel).'
      operationId: osconfig.projects.locations.osPolicyAssignments.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OSPolicyAssignment'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: osPolicyAssignmentsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: os_policy_assignments
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: 'Delete the OS policy assignment. This method creates a new revision of the OS policy assignment. This method returns a long running operation (LRO) that contains the rollout details. The rollout can be cancelled by cancelling the LRO. If the LRO completes and is not cancelled, all revisions associated with the OS policy assignment are deleted. For more information, see [Method: projects.locations.osPolicyAssignments.operations.cancel](https://cloud.google.com/compute/docs/osconfig/rest/v1/projects.locations.osPolicyAssignments.operations/cancel).'
      operationId: osconfig.projects.locations.osPolicyAssignments.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: osPolicyAssignmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: os_policy_assignments
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: 'Retrieve an existing OS policy assignment. This method always returns the latest revision. In order to retrieve a previous revision of the assignment, also provide the revision ID in the `name` parameter.'
      operationId: osconfig.projects.locations.osPolicyAssignments.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSPolicyAssignment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: osPolicyAssignmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: os_policy_assignments
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/osPolicyAssignments/{osPolicyAssignmentsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: osconfig.projects.locations.osPolicyAssignments.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: osPolicyAssignmentsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/osPolicyAssignments/{osPolicyAssignmentsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: osconfig.projects.locations.osPolicyAssignments.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: osPolicyAssignmentsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}/osPolicyAssignments/{osPolicyAssignmentsId}/report':
    parameters: *ref_1
    get:
      description: Get the OS policy assignment report for the specified Compute Engine VM instance.
      operationId: osconfig.projects.locations.instances.osPolicyAssignments.reports.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSPolicyAssignmentReport'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: osPolicyAssignmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: report
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}/osPolicyAssignments/{osPolicyAssignmentsId}/reports':
    parameters: *ref_1
    get:
      description: List OS policy assignment reports for all Compute Engine VM instances in the specified zone.
      operationId: osconfig.projects.locations.instances.osPolicyAssignments.reports.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOSPolicyAssignmentReportsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: osPolicyAssignmentsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: reports
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.osPolicyAssignmentReports
  '/v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}/inventories':
    parameters: *ref_1
    get:
      description: List inventory data for all VM instances in the specified zone.
      operationId: osconfig.projects.locations.instances.inventories.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInventoriesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: inventories
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.inventories
  '/v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}/inventory':
    parameters: *ref_1
    get:
      description: 'Get inventory data for the specified VM instance. If the VM has no associated inventory, the message `NOT_FOUND` is returned.'
      operationId: osconfig.projects.locations.instances.inventories.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: inventory
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}/vulnerabilityReports':
    parameters: *ref_1
    get:
      description: List vulnerability reports for all VM instances in the specified zone.
      operationId: osconfig.projects.locations.instances.vulnerabilityReports.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVulnerabilityReportsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: vulnerability_reports
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.vulnerabilityReports
  '/v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}/vulnerabilityReport':
    parameters: *ref_1
    get:
      description: Gets the vulnerability report for the specified VM instance. Only VMs with inventory data have vulnerability reports associated with them.
      operationId: osconfig.projects.locations.instances.vulnerabilityReports.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VulnerabilityReport'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: vulnerability_report
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/patchDeployments/{patchDeploymentsId}':
    parameters: *ref_1
    delete:
      description: Delete an OS Config patch deployment.
      operationId: osconfig.projects.patchDeployments.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: patchDeploymentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: patch_deployments
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Update an OS Config patch deployment.
      operationId: osconfig.projects.patchDeployments.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchDeployment'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchDeployment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: patchDeploymentsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: patch_deployments
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Get an OS Config patch deployment.
      operationId: osconfig.projects.patchDeployments.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchDeployment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: patchDeploymentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: patch_deployments
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/patchDeployments':
    parameters: *ref_1
    get:
      description: Get a page of OS Config patch deployments.
      operationId: osconfig.projects.patchDeployments.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPatchDeploymentsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: patch_deployments
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.patchDeployments
    post:
      description: Create an OS Config patch deployment.
      operationId: osconfig.projects.patchDeployments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchDeployment'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchDeployment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: patchDeploymentId
          schema:
            type: string
      x-stackQL-resource: patch_deployments
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/patchDeployments/{patchDeploymentsId}:pause':
    parameters: *ref_1
    post:
      description: Change state of patch deployment to "PAUSED". Patch deployment in paused state doesn't generate patch jobs.
      operationId: osconfig.projects.patchDeployments.pause
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PausePatchDeploymentRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchDeployment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: patchDeploymentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: patch_deployments
      x-stackQL-method: pause
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/patchDeployments/{patchDeploymentsId}:resume':
    parameters: *ref_1
    post:
      description: Change state of patch deployment back to "ACTIVE". Patch deployment in active state continues to generate patch jobs.
      operationId: osconfig.projects.patchDeployments.resume
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResumePatchDeploymentRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchDeployment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: patchDeploymentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: patch_deployments
      x-stackQL-method: resume
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/patchJobs/{patchJobsId}/instanceDetails':
    parameters: *ref_1
    get:
      description: Get a list of instance details for a given patch job.
      operationId: osconfig.projects.patchJobs.instanceDetails.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPatchJobInstanceDetailsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: patchJobsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: instance_details
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.patchJobInstanceDetails
  '/v1/projects/{projectsId}/patchJobs/{patchJobsId}':
    parameters: *ref_1
    get:
      description: Get the patch job. This can be used to track the progress of an ongoing patch job or review the details of completed jobs.
      operationId: osconfig.projects.patchJobs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: patchJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: patch_jobs
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/patchJobs':
    parameters: *ref_1
    get:
      description: Get a list of patch jobs.
      operationId: osconfig.projects.patchJobs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPatchJobsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: patch_jobs
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.patchJobs
  '/v1/projects/{projectsId}/patchJobs/{patchJobsId}:cancel':
    parameters: *ref_1
    post:
      description: Cancel a patch job. The patch job must be active. Canceled patch jobs cannot be restarted.
      operationId: osconfig.projects.patchJobs.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelPatchJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: patchJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: patch_jobs
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/patchJobs:execute':
    parameters: *ref_1
    post:
      description: Patch VM instances by creating and running a patch job.
      operationId: osconfig.projects.patchJobs.execute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecutePatchJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: patch_jobs
      x-stackQL-method: execute
      x-stackQL-verb: exec
