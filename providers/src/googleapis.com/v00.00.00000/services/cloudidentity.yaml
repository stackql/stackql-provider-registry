openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Cloud Identity API
  description: API for provisioning and managing identity resources.
  version: v1
  x-discovery-doc-revision: '20230102'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://cloud.google.com/identity/
servers:
  - url: https://cloudidentity.googleapis.com
components:
  schemas:
    GoogleAppsCloudidentityDevicesV1UpdateDeviceMetadata:
      id: GoogleAppsCloudidentityDevicesV1UpdateDeviceMetadata
      properties: {}
      description: Metadata for UpdateDevice LRO.
      type: object
    GoogleAppsCloudidentityDevicesV1ClientState:
      description: Represents the state associated with an API client calling the Devices API. Resource representing ClientState and supports updates from API users
      type: object
      properties:
        managed:
          enumDescriptions:
            - The management state of the resource is unknown or unspecified.
            - The resource is managed.
            - The resource is not managed.
          description: The management state of the resource as specified by the API client.
          enum:
            - MANAGED_STATE_UNSPECIFIED
            - MANAGED
            - UNMANAGED
          type: string
        complianceState:
          type: string
          enum:
            - COMPLIANCE_STATE_UNSPECIFIED
            - COMPLIANT
            - NON_COMPLIANT
          enumDescriptions:
            - The compliance state of the resource is unknown or unspecified.
            - Device is compliant with third party policies
            - Device is not compliant with third party policies
          description: The compliance state of the resource as specified by the API client.
        etag:
          type: string
          description: The token that needs to be passed back for concurrency control in updates. Token needs to be passed back in UpdateRequest
        name:
          type: string
          readOnly: true
          description: 'Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the ClientState in format: `devices/{device}/deviceUsers/{device_user}/clientState/{partner}`, where partner corresponds to the partner storing the data. For partners belonging to the "BeyondCorp Alliance", this is the partner ID specified to you by Google. For all other callers, this is a string of the form: `{customer}-suffix`, where `customer` is your customer ID. The *suffix* is any string the caller specifies. This string will be displayed verbatim in the administration console. This suffix is used in setting up Custom Access Levels in Context-Aware Access. Your organization''s customer ID can be obtained from the URL: `GET https://www.googleapis.com/admin/directory/v1/customers/my_customer` The `id` field in the response contains the customer ID starting with the letter ''C''. The customer ID to be used in this API is the string after the letter ''C'' (not including ''C'')'
        assetTags:
          description: The caller can specify asset tags for this resource
          items:
            type: string
          type: array
        lastUpdateTime:
          description: Output only. The time the client state data was last updated.
          type: string
          format: google-datetime
          readOnly: true
        scoreReason:
          type: string
          description: A descriptive cause of the health score.
        customId:
          description: This field may be used to store a unique identifier for the API resource within which these CustomAttributes are a field.
          type: string
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time the client state data was created.
          type: string
        keyValuePairs:
          type: object
          description: The map of key-value attributes stored by callers specific to a device. The total serialized length of this map may not exceed 10KB. No limit is placed on the number of attributes in a map.
          additionalProperties:
            $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1CustomAttributeValue'
        healthScore:
          type: string
          description: The Health score of the resource. The Health score is the callers specification of the condition of the device from a usability point of view. For example, a third-party device management provider may specify a health score based on its compliance with organizational policies.
          enum:
            - HEALTH_SCORE_UNSPECIFIED
            - VERY_POOR
            - POOR
            - NEUTRAL
            - GOOD
            - VERY_GOOD
          enumDescriptions:
            - Default value
            - The object is in very poor health as defined by the caller.
            - The object is in poor health as defined by the caller.
            - The object health is neither good nor poor, as defined by the caller.
            - The object is in good health as defined by the caller.
            - The object is in very good health as defined by the caller.
        ownerType:
          description: Output only. The owner of the ClientState
          type: string
          enumDescriptions:
            - Unknown owner type
            - Customer is the owner
            - Partner is the owner
          readOnly: true
          enum:
            - OWNER_TYPE_UNSPECIFIED
            - OWNER_TYPE_CUSTOMER
            - OWNER_TYPE_PARTNER
      id: GoogleAppsCloudidentityDevicesV1ClientState
    GetMembershipGraphMetadata:
      id: GetMembershipGraphMetadata
      description: Metadata of GetMembershipGraphResponse LRO. This is currently empty to permit future extensibility.
      properties: {}
      type: object
    GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserMetadata:
      properties: {}
      id: GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserMetadata
      description: Metadata for CancelWipeDeviceUser LRO.
      type: object
    GoogleAppsCloudidentityDevicesV1ListClientStatesResponse:
      type: object
      id: GoogleAppsCloudidentityDevicesV1ListClientStatesResponse
      properties:
        nextPageToken:
          description: Token to retrieve the next page of results. Empty if there are no more results.
          type: string
        clientStates:
          type: array
          items:
            $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1ClientState'
          description: Client states meeting the list restrictions.
      description: Response message that is returned in ListClientStates.
    Status:
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      type: object
      id: Status
      properties:
        code:
          format: int32
          type: integer
          description: The status code, which should be an enum value of google.rpc.Code.
        details:
          items:
            type: object
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
          type: array
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
    GoogleAppsCloudidentityDevicesV1ApproveDeviceUserRequest:
      id: GoogleAppsCloudidentityDevicesV1ApproveDeviceUserRequest
      description: Request message for approving the device to access user data.
      properties:
        customer:
          description: Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer}`, where customer is the customer to whom the device belongs.
          type: string
      type: object
    DynamicGroupStatus:
      description: The current status of a dynamic group along with timestamp.
      type: object
      properties:
        status:
          description: Status of the dynamic group.
          type: string
          enumDescriptions:
            - Default.
            - The dynamic group is up-to-date.
            - The dynamic group has just been created and memberships are being updated.
            - Group is in an unrecoverable state and its memberships can't be updated.
          enum:
            - STATUS_UNSPECIFIED
            - UP_TO_DATE
            - UPDATING_MEMBERSHIPS
            - INVALID_QUERY
        statusTime:
          type: string
          format: google-datetime
          description: The latest time at which the dynamic group is guaranteed to be in the given status. If status is `UP_TO_DATE`, the latest time at which the dynamic group was confirmed to be up-to-date. If status is `UPDATING_MEMBERSHIPS`, the time at which dynamic group was created.
      id: DynamicGroupStatus
    GroupRelation:
      id: GroupRelation
      properties:
        groupKey:
          description: Entity key has an id and a namespace. In case of discussion forums, the id will be an email address without a namespace.
          $ref: '#/components/schemas/EntityKey'
        displayName:
          description: Display name for this group.
          type: string
        group:
          description: Resource name for this group.
          type: string
        roles:
          type: array
          description: Membership roles of the member for the group.
          items:
            $ref: '#/components/schemas/TransitiveMembershipRole'
        relationType:
          description: The relation between the member and the transitive group.
          enum:
            - RELATION_TYPE_UNSPECIFIED
            - DIRECT
            - INDIRECT
            - DIRECT_AND_INDIRECT
          type: string
          enumDescriptions:
            - The relation type is undefined or undetermined.
            - The two entities have only a direct membership with each other.
            - The two entities have only an indirect membership with each other.
            - The two entities have both a direct and an indirect membership with each other.
        labels:
          type: object
          additionalProperties:
            type: string
          description: Labels for Group resource.
      type: object
      description: Message representing a transitive group of a user or a group.
    GoogleAppsCloudidentityDevicesV1WipeDeviceUserResponse:
      description: Response message for wiping the user's account from the device.
      id: GoogleAppsCloudidentityDevicesV1WipeDeviceUserResponse
      type: object
      properties:
        deviceUser:
          $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1DeviceUser'
          description: Resultant DeviceUser object for the action.
    ListUserInvitationsResponse:
      description: Response message for UserInvitation listing request.
      id: ListUserInvitationsResponse
      type: object
      properties:
        userInvitations:
          description: The list of UserInvitation resources.
          type: array
          items:
            $ref: '#/components/schemas/UserInvitation'
        nextPageToken:
          type: string
          description: The token for the next page. If not empty, indicates that there may be more `UserInvitation` resources that match the listing request; this value can be used in a subsequent ListUserInvitationsRequest to get continued results with the current list call.
    SearchTransitiveMembershipsResponse:
      id: SearchTransitiveMembershipsResponse
      properties:
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results.
          type: string
        memberships:
          description: List of transitive members satisfying the query.
          items:
            $ref: '#/components/schemas/MemberRelation'
          type: array
      description: The response message for MembershipsService.SearchTransitiveMemberships.
      type: object
    GoogleAppsCloudidentityDevicesV1SignoutDeviceUserMetadata:
      properties: {}
      type: object
      id: GoogleAppsCloudidentityDevicesV1SignoutDeviceUserMetadata
      description: Metadata for SignoutDeviceUser LRO.
    UpdateMembershipMetadata:
      description: Metadata for UpdateMembership LRO.
      type: object
      id: UpdateMembershipMetadata
      properties: {}
    GoogleAppsCloudidentityDevicesV1CancelWipeDeviceMetadata:
      id: GoogleAppsCloudidentityDevicesV1CancelWipeDeviceMetadata
      description: Metadata for CancelWipeDevice LRO.
      type: object
      properties: {}
    GoogleAppsCloudidentityDevicesV1WipeDeviceRequest:
      id: GoogleAppsCloudidentityDevicesV1WipeDeviceRequest
      description: Request message for wiping all data on the device.
      properties:
        customer:
          type: string
          description: Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer}`, where customer is the customer to whom the device belongs.
        removeResetLock:
          type: boolean
          description: Optional. Specifies if a user is able to factory reset a device after a Device Wipe. On iOS, this is called "Activation Lock", while on Android, this is known as "Factory Reset Protection". If true, this protection will be removed from the device, so that a user can successfully factory reset. If false, the setting is untouched on the device.
      type: object
    SearchGroupsResponse:
      id: SearchGroupsResponse
      type: object
      properties:
        groups:
          description: The `Group` resources that match the search query.
          items:
            $ref: '#/components/schemas/Group'
          type: array
        nextPageToken:
          type: string
          description: A continuation token to retrieve the next page of results, or empty if there are no more results available.
      description: The response message for GroupsService.SearchGroups.
    RestrictionEvaluation:
      type: object
      description: The evaluated state of this restriction.
      id: RestrictionEvaluation
      properties:
        state:
          readOnly: true
          description: Output only. The current state of the restriction
          enumDescriptions:
            - Default. Should not be used.
            - The restriction state is currently being evaluated.
            - All transitive memberships are adhering to restriction.
            - Some transitive memberships violate the restriction. No new violating memberships can be added.
            - Some transitive memberships violate the restriction. New violating direct memberships will be denied while indirect memberships may be added.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - EVALUATING
            - COMPLIANT
            - FORWARD_COMPLIANT
            - NON_COMPLIANT
    GoogleAppsCloudidentityDevicesV1DeleteDeviceUserMetadata:
      type: object
      description: Metadata for DeleteDeviceUser LRO.
      properties: {}
      id: GoogleAppsCloudidentityDevicesV1DeleteDeviceUserMetadata
    GoogleAppsCloudidentityDevicesV1UpdateClientStateMetadata:
      id: GoogleAppsCloudidentityDevicesV1UpdateClientStateMetadata
      description: Metadata for UpdateClientState LRO.
      properties: {}
      type: object
    GoogleAppsCloudidentityDevicesV1LookupSelfDeviceUsersResponse:
      properties:
        names:
          items:
            type: string
          type: array
          description: '[Resource names](https://cloud.google.com/apis/design/resource_names) of the DeviceUsers in the format: `devices/{device}/deviceUsers/{user_resource}`, where device is the unique ID assigned to a Device and user_resource is the unique user ID'
        nextPageToken:
          type: string
          description: Token to retrieve the next page of results. Empty if there are no more results.
        customer:
          type: string
          description: The customer resource name that may be passed back to other Devices API methods such as List, Get, etc.
      type: object
      description: Response containing resource names of the DeviceUsers associated with the caller's credentials.
      id: GoogleAppsCloudidentityDevicesV1LookupSelfDeviceUsersResponse
    RestrictionEvaluations:
      id: RestrictionEvaluations
      type: object
      properties:
        memberRestrictionEvaluation:
          $ref: '#/components/schemas/MembershipRoleRestrictionEvaluation'
          description: Evaluation of the member restriction applied to this membership. Empty if the user lacks permission to view the restriction evaluation.
      description: Evaluations of restrictions applied to parent group on this membership.
    GetMembershipGraphResponse:
      type: object
      description: The response message for MembershipsService.GetMembershipGraph.
      id: GetMembershipGraphResponse
      properties:
        groups:
          type: array
          description: The resources representing each group in the adjacency list. Each group in this list can be correlated to a 'group' of the MembershipAdjacencyList using the 'name' of the Group resource.
          items:
            $ref: '#/components/schemas/Group'
        adjacencyList:
          description: The membership graph's path information represented as an adjacency list.
          items:
            $ref: '#/components/schemas/MembershipAdjacencyList'
          type: array
    GoogleAppsCloudidentityDevicesV1WipeDeviceMetadata:
      id: GoogleAppsCloudidentityDevicesV1WipeDeviceMetadata
      type: object
      properties: {}
      description: Metadata for WipeDevice LRO.
    LookupGroupNameResponse:
      id: LookupGroupNameResponse
      properties:
        name:
          description: The [resource name](https://cloud.google.com/apis/design/resource_names) of the looked-up `Group`.
          type: string
      description: The response message for GroupsService.LookupGroupName.
      type: object
    GoogleAppsCloudidentityDevicesV1ApproveDeviceUserMetadata:
      type: object
      properties: {}
      id: GoogleAppsCloudidentityDevicesV1ApproveDeviceUserMetadata
      description: Metadata for ApproveDeviceUser LRO.
    GoogleAppsCloudidentityDevicesV1Device:
      properties:
        assetTag:
          description: Asset tag of the device.
          type: string
        otherAccounts:
          items:
            type: string
          readOnly: true
          description: 'Output only. Domain name for Google accounts on device. Type for other accounts on device. On Android, will only be populated if |ownership_privilege| is |PROFILE_OWNER| or |DEVICE_OWNER|. Does not include the account signed in to the device policy app if that account''s domain has only one account. Examples: "com.example", "xyz.com".'
          type: array
        enabledUsbDebugging:
          description: Output only. Whether USB debugging is enabled on device.
          type: boolean
          readOnly: true
        ownerType:
          enumDescriptions:
            - Default value. The value is unused.
            - Company owns the device.
            - Bring Your Own Device (i.e. individual owns the device)
          readOnly: true
          type: string
          enum:
            - DEVICE_OWNERSHIP_UNSPECIFIED
            - COMPANY
            - BYOD
          description: Output only. Whether the device is owned by the company or an individual
        name:
          readOnly: true
          description: 'Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the Device in format: `devices/{device}`, where device is the unique id assigned to the Device.'
          type: string
        releaseVersion:
          type: string
          description: 'Output only. OS release version. Example: 6.0.'
          readOnly: true
        osVersion:
          description: 'Output only. OS version of the device. Example: Android 8.1.0.'
          type: string
          readOnly: true
        buildNumber:
          readOnly: true
          type: string
          description: Output only. Build number of the device.
        wifiMacAddresses:
          description: WiFi MAC addresses of device.
          items:
            type: string
          type: array
        serialNumber:
          description: 'Serial Number of device. Example: HT82V1A01076.'
          type: string
        brand:
          type: string
          readOnly: true
          description: 'Output only. Device brand. Example: Samsung.'
        kernelVersion:
          readOnly: true
          description: Output only. Kernel version of the device.
          type: string
        securityPatchTime:
          description: Output only. OS security patch update time on device.
          type: string
          format: google-datetime
          readOnly: true
        manufacturer:
          type: string
          readOnly: true
          description: 'Output only. Device manufacturer. Example: Motorola.'
        deviceId:
          type: string
          description: Unique identifier for the device.
        meid:
          readOnly: true
          description: Output only. MEID number of device if CDMA device; empty otherwise.
          type: string
        createTime:
          format: google-datetime
          type: string
          description: Output only. When the Company-Owned device was imported. This field is empty for BYOD devices.
          readOnly: true
        networkOperator:
          description: Output only. Mobile or network operator of device, if available.
          readOnly: true
          type: string
        managementState:
          enumDescriptions:
            - Default value. This value is unused.
            - Device is approved.
            - Device is blocked.
            - Device is pending approval.
            - The device is not provisioned. Device will start from this state until some action is taken (i.e. a user starts using the device).
            - Data and settings on the device are being removed.
            - All data and settings on the device are removed.
          description: Output only. Management state of the device
          type: string
          readOnly: true
          enum:
            - MANAGEMENT_STATE_UNSPECIFIED
            - APPROVED
            - BLOCKED
            - PENDING
            - UNPROVISIONED
            - WIPING
            - WIPED
        imei:
          description: Output only. IMEI number of device if GSM device; empty otherwise.
          type: string
          readOnly: true
        model:
          description: 'Output only. Model name of device. Example: Pixel 3.'
          readOnly: true
          type: string
        basebandVersion:
          type: string
          readOnly: true
          description: Output only. Baseband version of the device.
        compromisedState:
          readOnly: true
          enum:
            - COMPROMISED_STATE_UNSPECIFIED
            - COMPROMISED
            - UNCOMPROMISED
          type: string
          description: Output only. Represents whether the Device is compromised.
          enumDescriptions:
            - Default value.
            - The device is compromised (currently, this means Android device is rooted).
            - The device is safe (currently, this means Android device is unrooted).
        encryptionState:
          enumDescriptions:
            - Encryption Status is not set.
            - Device doesn't support encryption.
            - Device is encrypted.
            - Device is not encrypted.
          type: string
          readOnly: true
          description: Output only. Device encryption state.
          enum:
            - ENCRYPTION_STATE_UNSPECIFIED
            - UNSUPPORTED_BY_DEVICE
            - ENCRYPTED
            - NOT_ENCRYPTED
        deviceType:
          enumDescriptions:
            - Unknown device type
            - Device is an Android device
            - Device is an iOS device
            - Device is a Google Sync device.
            - Device is a Windows device.
            - Device is a MacOS device.
            - Device is a Linux device.
            - Device is a ChromeOS device.
          type: string
          enum:
            - DEVICE_TYPE_UNSPECIFIED
            - ANDROID
            - IOS
            - GOOGLE_SYNC
            - WINDOWS
            - MAC_OS
            - LINUX
            - CHROME_OS
          readOnly: true
          description: Output only. Type of device.
        androidSpecificAttributes:
          $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1AndroidAttributes'
          description: Output only. Attributes specific to Android devices.
          readOnly: true
        lastSyncTime:
          type: string
          format: google-datetime
          description: Most recent time when device synced with this service.
        enabledDeveloperOptions:
          description: Output only. Whether developer options is enabled on device.
          type: boolean
          readOnly: true
        bootloaderVersion:
          readOnly: true
          description: 'Output only. Device bootloader version. Example: 0.6.7.'
          type: string
      id: GoogleAppsCloudidentityDevicesV1Device
      description: ' A Device within the Cloud Identity Devices API. Represents a Device known to Google Cloud, independent of the device ownership, type, and whether it is assigned or in use by a user.'
      type: object
    GoogleAppsCloudidentityDevicesV1WipeDeviceUserMetadata:
      id: GoogleAppsCloudidentityDevicesV1WipeDeviceUserMetadata
      type: object
      properties: {}
      description: Metadata for WipeDeviceUser LRO.
    GoogleAppsCloudidentityDevicesV1WipeDeviceUserRequest:
      description: Request message for starting an account wipe on device.
      type: object
      id: GoogleAppsCloudidentityDevicesV1WipeDeviceUserRequest
      properties:
        customer:
          type: string
          description: Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer}`, where customer is the customer to whom the device belongs.
    SearchTransitiveGroupsResponse:
      id: SearchTransitiveGroupsResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: Token to retrieve the next page of results, or empty if there are no more results available for listing.
        memberships:
          description: List of transitive groups satisfying the query.
          items:
            $ref: '#/components/schemas/GroupRelation'
          type: array
      description: The response message for MembershipsService.SearchTransitiveGroups.
    GoogleAppsCloudidentityDevicesV1ListEndpointAppsMetadata:
      properties: {}
      type: object
      id: GoogleAppsCloudidentityDevicesV1ListEndpointAppsMetadata
      description: Metadata for ListEndpointApps LRO.
    DeleteGroupMetadata:
      properties: {}
      id: DeleteGroupMetadata
      description: Metadata for DeleteGroup LRO.
      type: object
    TransitiveMembershipRole:
      id: TransitiveMembershipRole
      description: Message representing the role of a TransitiveMembership.
      properties:
        role:
          type: string
          description: 'TransitiveMembershipRole in string format. Currently supported TransitiveMembershipRoles: `"MEMBER"`, `"OWNER"`, and `"MANAGER"`.'
      type: object
    GoogleAppsCloudidentityDevicesV1CreateDeviceMetadata:
      id: GoogleAppsCloudidentityDevicesV1CreateDeviceMetadata
      properties: {}
      type: object
      description: Metadata for CreateDevice LRO.
    GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserResponse:
      properties:
        deviceUser:
          $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1DeviceUser'
          description: Resultant DeviceUser object for the action.
      description: Response message for cancelling an unfinished user account wipe.
      type: object
      id: GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserResponse
    LookupMembershipNameResponse:
      description: The response message for MembershipsService.LookupMembershipName.
      type: object
      properties:
        name:
          type: string
          description: The [resource name](https://cloud.google.com/apis/design/resource_names) of the looked-up `Membership`. Must be of the form `groups/{group}/memberships/{membership}`.
      id: LookupMembershipNameResponse
    GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserRequest:
      id: GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserRequest
      properties:
        customer:
          type: string
          description: Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer}`, where customer is the customer to whom the device belongs.
      description: Request message for cancelling an unfinished user account wipe.
      type: object
    ListGroupsResponse:
      properties:
        nextPageToken:
          type: string
          description: Token to retrieve the next page of results, or empty if there are no more results available for listing.
        groups:
          description: Groups returned in response to list request. The results are not sorted.
          type: array
          items:
            $ref: '#/components/schemas/Group'
      type: object
      id: ListGroupsResponse
      description: Response message for ListGroups operation.
    GoogleAppsCloudidentityDevicesV1BlockDeviceUserResponse:
      properties:
        deviceUser:
          description: Resultant DeviceUser object for the action.
          $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1DeviceUser'
      id: GoogleAppsCloudidentityDevicesV1BlockDeviceUserResponse
      type: object
      description: Response message for blocking the device from accessing user data.
    Operation:
      properties:
        done:
          type: boolean
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          type: object
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        metadata:
          type: object
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        error:
          $ref: '#/components/schemas/Status'
          description: The error result of the operation in case of failure or cancellation.
      type: object
      id: Operation
      description: This resource represents a long-running operation that is the result of a network API call.
    MembershipAdjacencyList:
      description: Membership graph's path information as an adjacency list.
      type: object
      properties:
        group:
          type: string
          description: Resource name of the group that the members belong to.
        edges:
          description: 'Each edge contains information about the member that belongs to this group. Note: Fields returned here will help identify the specific Membership resource (e.g name, preferred_member_key and role), but may not be a comprehensive list of all fields.'
          type: array
          items:
            $ref: '#/components/schemas/Membership'
      id: MembershipAdjacencyList
    CreateMembershipMetadata:
      id: CreateMembershipMetadata
      properties: {}
      type: object
      description: Metadata for CreateMembership LRO.
    Group:
      id: Group
      type: object
      description: A group within the Cloud Identity Groups API. A `Group` is a collection of entities, where each entity is either a user, another group, or a service account.
      properties:
        labels:
          type: object
          additionalProperties:
            type: string
          description: Required. One or more label entries that apply to the Group. Currently supported labels contain a key with an empty value. Google Groups are the default type of group and have a label with a key of `cloudidentity.googleapis.com/groups.discussion_forum` and an empty value. Existing Google Groups can have an additional label with a key of `cloudidentity.googleapis.com/groups.security` and an empty value added to them. **This is an immutable change and the security label cannot be removed once added.** Dynamic groups have a label with a key of `cloudidentity.googleapis.com/groups.dynamic`. Identity-mapped groups for Cloud Search have a label with a key of `system/groups/external` and an empty value.
        parent:
          type: string
          description: Required. Immutable. The resource name of the entity under which this `Group` resides in the Cloud Identity resource hierarchy. Must be of the form `identitysources/{identity_source}` for external [identity-mapped groups](https://support.google.com/a/answer/9039510) or `customers/{customer_id}` for Google Groups. The `customer_id` must begin with "C" (for example, 'C046psxkn'). [Find your customer ID.] (https://support.google.com/cloudidentity/answer/10070793)
        updateTime:
          format: google-datetime
          readOnly: true
          description: Output only. The time when the `Group` was last updated.
          type: string
        createTime:
          description: Output only. The time when the `Group` was created.
          format: google-datetime
          readOnly: true
          type: string
        displayName:
          type: string
          description: The display name of the `Group`.
        groupKey:
          $ref: '#/components/schemas/EntityKey'
          description: Required. The `EntityKey` of the `Group`.
        dynamicGroupMetadata:
          $ref: '#/components/schemas/DynamicGroupMetadata'
          description: Optional. Dynamic group metadata like queries and status.
        name:
          readOnly: true
          type: string
          description: Output only. The [resource name](https://cloud.google.com/apis/design/resource_names) of the `Group`. Shall be of the form `groups/{group}`.
        description:
          type: string
          description: An extended description to help users determine the purpose of a `Group`. Must not be longer than 4,096 characters.
    ModifyMembershipRolesResponse:
      description: The response message for MembershipsService.ModifyMembershipRoles.
      id: ModifyMembershipRolesResponse
      properties:
        membership:
          $ref: '#/components/schemas/Membership'
          description: The `Membership` resource after modifying its `MembershipRole`s.
      type: object
    GoogleAppsCloudidentityDevicesV1CancelWipeDeviceResponse:
      properties:
        device:
          description: Resultant Device object for the action. Note that asset tags will not be returned in the device object.
          $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1Device'
      id: GoogleAppsCloudidentityDevicesV1CancelWipeDeviceResponse
      type: object
      description: Response message for cancelling an unfinished device wipe.
    GoogleAppsCloudidentityDevicesV1BlockDeviceUserRequest:
      id: GoogleAppsCloudidentityDevicesV1BlockDeviceUserRequest
      properties:
        customer:
          description: Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer}`, where customer is the customer to whom the device belongs.
          type: string
      description: Request message for blocking account on device.
      type: object
    UpdateGroupMetadata:
      id: UpdateGroupMetadata
      description: Metadata for UpdateGroup LRO.
      properties: {}
      type: object
    ModifyMembershipRolesRequest:
      type: object
      id: ModifyMembershipRolesRequest
      properties:
        updateRolesParams:
          items:
            $ref: '#/components/schemas/UpdateMembershipRolesParams'
          type: array
          description: The `MembershipRole`s to be updated. Updating roles in the same request as adding or removing roles is not supported. Must not be set if either `add_roles` or `remove_roles` is set.
        removeRoles:
          description: The `name`s of the `MembershipRole`s to be removed. Adding or removing roles in the same request as updating roles is not supported. It is not possible to remove the `MEMBER` `MembershipRole`. If you wish to delete a `Membership`, call MembershipsService.DeleteMembership instead. Must not contain `MEMBER`. Must not be set if `update_roles_params` is set.
          items:
            type: string
          type: array
        addRoles:
          description: The `MembershipRole`s to be added. Adding or removing roles in the same request as updating roles is not supported. Must not be set if `update_roles_params` is set.
          type: array
          items:
            $ref: '#/components/schemas/MembershipRole'
      description: The request message for MembershipsService.ModifyMembershipRoles.
    GoogleAppsCloudidentityDevicesV1WipeDeviceResponse:
      type: object
      id: GoogleAppsCloudidentityDevicesV1WipeDeviceResponse
      properties:
        device:
          description: Resultant Device object for the action. Note that asset tags will not be returned in the device object.
          $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1Device'
      description: Response message for wiping all data on the device.
    DeleteMembershipMetadata:
      description: Metadata for DeleteMembership LRO.
      properties: {}
      id: DeleteMembershipMetadata
      type: object
    SecuritySettings:
      id: SecuritySettings
      type: object
      properties:
        name:
          type: string
          readOnly: true
          description: Output only. The resource name of the security settings. Shall be of the form `groups/{group_id}/securitySettings`.
        memberRestriction:
          $ref: '#/components/schemas/MemberRestriction'
          description: The Member Restriction value
      description: The definition of security settings.
    MemberRelation:
      type: object
      description: Message representing a transitive membership of a group.
      id: MemberRelation
      properties:
        member:
          type: string
          description: Resource name for this member.
        roles:
          items:
            $ref: '#/components/schemas/TransitiveMembershipRole'
          description: The membership role details (i.e name of role and expiry time).
          type: array
        preferredMemberKey:
          type: array
          items:
            $ref: '#/components/schemas/EntityKey'
          description: Entity key has an id and a namespace. In case of discussion forums, the id will be an email address without a namespace.
        relationType:
          description: The relation between the group and the transitive member.
          type: string
          enumDescriptions:
            - The relation type is undefined or undetermined.
            - The two entities have only a direct membership with each other.
            - The two entities have only an indirect membership with each other.
            - The two entities have both a direct and an indirect membership with each other.
          enum:
            - RELATION_TYPE_UNSPECIFIED
            - DIRECT
            - INDIRECT
            - DIRECT_AND_INDIRECT
    DynamicGroupQuery:
      properties:
        query:
          description: 'Query that determines the memberships of the dynamic group. Examples: All users with at least one `organizations.department` of engineering. `user.organizations.exists(org, org.department==''engineering'')` All users with at least one location that has `area` of `foo` and `building_id` of `bar`. `user.locations.exists(loc, loc.area==''foo'' && loc.building_id==''bar'')` All users with any variation of the name John Doe (case-insensitive queries add `equalsIgnoreCase()` to the value being queried). `user.name.value.equalsIgnoreCase(''jOhn DoE'')`'
          type: string
        resourceType:
          type: string
          enum:
            - RESOURCE_TYPE_UNSPECIFIED
            - USER
          enumDescriptions:
            - Default value (not valid)
            - For queries on User
          description: Resource type for the Dynamic Group Query
      type: object
      description: Defines a query on a resource.
      id: DynamicGroupQuery
    GoogleAppsCloudidentityDevicesV1CancelWipeDeviceRequest:
      properties:
        customer:
          type: string
          description: Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer}`, where customer is the customer to whom the device belongs.
      type: object
      description: Request message for cancelling an unfinished device wipe.
      id: GoogleAppsCloudidentityDevicesV1CancelWipeDeviceRequest
    GoogleAppsCloudidentityDevicesV1DeleteDeviceMetadata:
      type: object
      properties: {}
      id: GoogleAppsCloudidentityDevicesV1DeleteDeviceMetadata
      description: Metadata for DeleteDevice LRO.
    GoogleAppsCloudidentityDevicesV1CustomAttributeValue:
      id: GoogleAppsCloudidentityDevicesV1CustomAttributeValue
      description: Additional custom attribute values may be one of these types
      type: object
      properties:
        boolValue:
          description: Represents a boolean value.
          type: boolean
        numberValue:
          type: number
          description: Represents a double value.
          format: double
        stringValue:
          type: string
          description: Represents a string value.
    GoogleAppsCloudidentityDevicesV1DeviceUser:
      properties:
        managementState:
          enumDescriptions:
            - Default value. This value is unused.
            - This user's data and profile is being removed from the device.
            - This user's data and profile is removed from the device.
            - User is approved to access data on the device.
            - User is blocked from accessing data on the device.
            - User is awaiting approval.
            - User is unenrolled from Advanced Windows Management, but the Windows account is still intact.
          description: Output only. Management state of the user on the device.
          readOnly: true
          enum:
            - MANAGEMENT_STATE_UNSPECIFIED
            - WIPING
            - WIPED
            - APPROVED
            - BLOCKED
            - PENDING_APPROVAL
            - UNENROLLED
          type: string
        firstSyncTime:
          readOnly: true
          type: string
          description: Output only. Most recent time when user registered with this service.
          format: google-datetime
        compromisedState:
          enumDescriptions:
            - Compromised state of Device User account is unknown or unspecified.
            - Device User Account is compromised.
            - Device User Account is not compromised.
          type: string
          description: Compromised State of the DeviceUser object
          enum:
            - COMPROMISED_STATE_UNSPECIFIED
            - COMPROMISED
            - NOT_COMPROMISED
        lastSyncTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. Last time when user synced with policies.
        languageCode:
          description: Output only. Default locale used on device, in IETF BCP-47 format.
          readOnly: true
          type: string
        userAgent:
          description: Output only. User agent on the device for this specific user
          readOnly: true
          type: string
        passwordState:
          enum:
            - PASSWORD_STATE_UNSPECIFIED
            - PASSWORD_SET
            - PASSWORD_NOT_SET
          type: string
          enumDescriptions:
            - Password state not set.
            - Password set in object.
            - Password not set in object.
          description: Password state of the DeviceUser object
        name:
          type: string
          description: 'Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the DeviceUser in format: `devices/{device}/deviceUsers/{device_user}`, where `device_user` uniquely identifies a user''s use of a device.'
          readOnly: true
        createTime:
          type: string
          format: google-datetime
          description: When the user first signed in to the device
        userEmail:
          description: Email address of the user registered on the device.
          type: string
      id: GoogleAppsCloudidentityDevicesV1DeviceUser
      description: Represents a user's use of a Device in the Cloud Identity Devices API. A DeviceUser is a resource representing a user's use of a Device
      type: object
    Membership:
      type: object
      description: A membership within the Cloud Identity Groups API. A `Membership` defines a relationship between a `Group` and an entity belonging to that `Group`, referred to as a "member".
      properties:
        name:
          readOnly: true
          type: string
          description: Output only. The [resource name](https://cloud.google.com/apis/design/resource_names) of the `Membership`. Shall be of the form `groups/{group}/memberships/{membership}`.
        createTime:
          format: google-datetime
          type: string
          description: Output only. The time when the `Membership` was created.
          readOnly: true
        updateTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time when the `Membership` was last updated.
        roles:
          description: The `MembershipRole`s that apply to the `Membership`. If unspecified, defaults to a single `MembershipRole` with `name` `MEMBER`. Must not contain duplicate `MembershipRole`s with the same `name`.
          type: array
          items:
            $ref: '#/components/schemas/MembershipRole'
        type:
          description: Output only. The type of the membership.
          enum:
            - TYPE_UNSPECIFIED
            - USER
            - SERVICE_ACCOUNT
            - GROUP
            - SHARED_DRIVE
            - OTHER
          type: string
          readOnly: true
          enumDescriptions:
            - Default. Should not be used.
            - Represents user type.
            - Represents service account type.
            - Represents group type.
            - Represents Shared drive.
            - Represents other type.
        preferredMemberKey:
          description: Required. Immutable. The `EntityKey` of the member.
          $ref: '#/components/schemas/EntityKey'
      id: Membership
    CheckTransitiveMembershipResponse:
      type: object
      properties:
        hasMembership:
          type: boolean
          description: Response does not include the possible roles of a member since the behavior of this rpc is not all-or-nothing unlike the other rpcs. So, it may not be possible to list all the roles definitively, due to possible lack of authorization in some of the paths.
      id: CheckTransitiveMembershipResponse
      description: The response message for MembershipsService.CheckTransitiveMembership.
    MembershipRole:
      id: MembershipRole
      description: A membership role within the Cloud Identity Groups API. A `MembershipRole` defines the privileges granted to a `Membership`.
      properties:
        restrictionEvaluations:
          $ref: '#/components/schemas/RestrictionEvaluations'
          description: Evaluations of restrictions applied to parent group on this membership.
        expiryDetail:
          $ref: '#/components/schemas/ExpiryDetail'
          description: The expiry details of the `MembershipRole`. Expiry details are only supported for `MEMBER` `MembershipRoles`. May be set if `name` is `MEMBER`. Must not be set if `name` is any other value.
        name:
          type: string
          description: The name of the `MembershipRole`. Must be one of `OWNER`, `MANAGER`, `MEMBER`.
      type: object
    SendUserInvitationRequest:
      description: A request to send email for inviting target user corresponding to the UserInvitation.
      id: SendUserInvitationRequest
      properties: {}
      type: object
    CancelUserInvitationRequest:
      id: CancelUserInvitationRequest
      description: Request to cancel sent invitation for target email in UserInvitation.
      properties: {}
      type: object
    IsInvitableUserResponse:
      properties:
        isInvitableUser:
          type: boolean
          description: Returns true if the email address is invitable.
      description: Response for IsInvitableUser RPC.
      id: IsInvitableUserResponse
      type: object
    UpdateMembershipRolesParams:
      description: The details of an update to a `MembershipRole`.
      id: UpdateMembershipRolesParams
      properties:
        membershipRole:
          description: The `MembershipRole`s to be updated. Only `MEMBER` `MembershipRole` can currently be updated.
          $ref: '#/components/schemas/MembershipRole'
        fieldMask:
          format: google-fieldmask
          description: The fully-qualified names of fields to update. May only contain the field `expiry_detail.expire_time`.
          type: string
      type: object
    MembershipRoleRestrictionEvaluation:
      description: The evaluated state of this restriction.
      properties:
        state:
          description: Output only. The current state of the restriction
          readOnly: true
          type: string
          enum:
            - STATE_UNSPECIFIED
            - COMPLIANT
            - FORWARD_COMPLIANT
            - NON_COMPLIANT
            - EVALUATING
          enumDescriptions:
            - Default. Should not be used.
            - The member adheres to the parent group's restriction.
            - The group-group membership might be currently violating some parent group's restriction but in future, it will never allow any new member in the child group which can violate parent group's restriction.
            - The member violates the parent group's restriction.
            - The state of the membership is under evaluation.
      type: object
      id: MembershipRoleRestrictionEvaluation
    GoogleAppsCloudidentityDevicesV1AndroidAttributes:
      type: object
      properties:
        ownerProfileAccount:
          type: boolean
          description: Whether this account is on an owner/primary profile. For phones, only true for owner profiles. Android 4+ devices can have secondary or restricted user profiles.
        supportsWorkProfile:
          type: boolean
          description: Whether device supports Android work profiles. If false, this service will not block access to corp data even if an administrator turns on the "Enforce Work Profile" policy.
        ownershipPrivilege:
          type: string
          description: Ownership privileges on device.
          enum:
            - OWNERSHIP_PRIVILEGE_UNSPECIFIED
            - DEVICE_ADMINISTRATOR
            - PROFILE_OWNER
            - DEVICE_OWNER
          enumDescriptions:
            - Ownership privilege is not set.
            - Active device administrator privileges on the device.
            - Profile Owner privileges. The account is in a managed corporate profile.
            - Device Owner privileges on the device.
        enabledUnknownSources:
          description: Whether applications from unknown sources can be installed on device.
          type: boolean
      id: GoogleAppsCloudidentityDevicesV1AndroidAttributes
      description: Resource representing the Android specific attributes of a Device.
    GoogleAppsCloudidentityDevicesV1BlockDeviceUserMetadata:
      id: GoogleAppsCloudidentityDevicesV1BlockDeviceUserMetadata
      type: object
      properties: {}
      description: Metadata for BlockDeviceUser LRO.
    GoogleAppsCloudidentityDevicesV1ListDevicesResponse:
      description: Response message that is returned from the ListDevices method.
      type: object
      id: GoogleAppsCloudidentityDevicesV1ListDevicesResponse
      properties:
        nextPageToken:
          description: Token to retrieve the next page of results. Empty if there are no more results.
          type: string
        devices:
          type: array
          description: Devices meeting the list restrictions.
          items:
            $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1Device'
    ExpiryDetail:
      type: object
      description: The `MembershipRole` expiry details.
      properties:
        expireTime:
          format: google-datetime
          type: string
          description: The time at which the `MembershipRole` will expire.
      id: ExpiryDetail
    GoogleAppsCloudidentityDevicesV1ListDeviceUsersResponse:
      id: GoogleAppsCloudidentityDevicesV1ListDeviceUsersResponse
      description: Response message that is returned from the ListDeviceUsers method.
      type: object
      properties:
        deviceUsers:
          description: Devices meeting the list restrictions.
          items:
            $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1DeviceUser'
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results. Empty if there are no more results.
          type: string
    ListMembershipsResponse:
      id: ListMembershipsResponse
      properties:
        memberships:
          type: array
          items:
            $ref: '#/components/schemas/Membership'
          description: The `Membership`s under the specified `parent`.
        nextPageToken:
          type: string
          description: A continuation token to retrieve the next page of results, or empty if there are no more results available.
      type: object
      description: The response message for MembershipsService.ListMemberships.
    EntityKey:
      id: EntityKey
      type: object
      description: A unique identifier for an entity in the Cloud Identity Groups API. An entity can represent either a group with an optional `namespace` or a user without a `namespace`. The combination of `id` and `namespace` must be unique; however, the same `id` can be used with different `namespace`s.
      properties:
        namespace:
          type: string
          description: The namespace in which the entity exists. If not specified, the `EntityKey` represents a Google-managed entity such as a Google user or a Google Group. If specified, the `EntityKey` represents an external-identity-mapped group. The namespace must correspond to an identity source created in Admin Console and must be in the form of `identitysources/{identity_source}`.
        id:
          description: The ID of the entity. For Google-managed entities, the `id` should be the email address of an existing group or user. For external-identity-mapped entities, the `id` must be a string conforming to the Identity Source's requirements. Must be unique within a `namespace`.
          type: string
    CreateGroupMetadata:
      description: Metadata for CreateGroup LRO.
      properties: {}
      id: CreateGroupMetadata
      type: object
    DynamicGroupMetadata:
      properties:
        queries:
          type: array
          description: Memberships will be the union of all queries. Only one entry with USER resource is currently supported. Customers can create up to 100 dynamic groups.
          items:
            $ref: '#/components/schemas/DynamicGroupQuery'
        status:
          description: Output only. Status of the dynamic group.
          $ref: '#/components/schemas/DynamicGroupStatus'
          readOnly: true
      id: DynamicGroupMetadata
      type: object
      description: Dynamic group metadata like queries and status.
    GoogleAppsCloudidentityDevicesV1ApproveDeviceUserResponse:
      type: object
      id: GoogleAppsCloudidentityDevicesV1ApproveDeviceUserResponse
      properties:
        deviceUser:
          description: Resultant DeviceUser object for the action.
          $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1DeviceUser'
      description: Response message for approving the device to access user data.
    MemberRestriction:
      id: MemberRestriction
      description: The definition of MemberRestriction
      type: object
      properties:
        query:
          description: 'Member Restriction as defined by CEL expression. Supported restrictions are: `member.customer_id` and `member.type`. Valid values for `member.type` are `1`, `2` and `3`. They correspond to USER, SERVICE_ACCOUNT, and GROUP respectively. The value for `member.customer_id` only supports `groupCustomerId()` currently which means the customer id of the group will be used for restriction. Supported operators are `&&`, `||` and `==`, corresponding to AND, OR, and EQUAL. Examples: Allow only service accounts of given customer to be members. `member.type == 2 && member.customer_id == groupCustomerId()` Allow only users or groups to be members. `member.type == 1 || member.type == 3`'
          type: string
        evaluation:
          description: The evaluated state of this restriction on a group.
          $ref: '#/components/schemas/RestrictionEvaluation'
    UserInvitation:
      type: object
      description: The `UserInvitation` resource represents an email that can be sent to an unmanaged user account inviting them to join the customer's Google Workspace or Cloud Identity account. An unmanaged account shares an email address domain with the Google Workspace or Cloud Identity account but is not managed by it yet. If the user accepts the `UserInvitation`, the user account will become managed.
      properties:
        state:
          description: State of the `UserInvitation`.
          enumDescriptions:
            - The default value. This value is used if the state is omitted.
            - The `UserInvitation` has been created and is ready for sending as an email.
            - The user has been invited by email.
            - The user has accepted the invitation and is part of the organization.
            - The user declined the invitation.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - NOT_YET_SENT
            - INVITED
            - ACCEPTED
            - DECLINED
        name:
          description: Shall be of the form `customers/{customer}/userinvitations/{user_email_address}`.
          type: string
        updateTime:
          description: Time when the `UserInvitation` was last updated.
          type: string
          format: google-datetime
        mailsSentCount:
          description: Number of invitation emails sent to the user.
          format: int64
          type: string
      id: UserInvitation
  parameters:
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-identity.groups.readonly: See any Cloud Identity Groups that you can access, including group members and their emails
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
            https://www.googleapis.com/auth/cloud-identity.devices: 'Private Service: https://www.googleapis.com/auth/cloud-identity.devices'
            https://www.googleapis.com/auth/cloud-identity.groups: See, change, create, and delete any of the Cloud Identity Groups that you can access, including the members of each group
            https://www.googleapis.com/auth/cloud-identity.devices.lookup: See your device details
            https://www.googleapis.com/auth/cloud-identity.devices.readonly: 'Private Service: https://www.googleapis.com/auth/cloud-identity.devices.readonly'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    groups:
      id: google.cloudidentity.groups
      name: groups
      title: Groups
      methods:
        patch:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        updateSecuritySettings:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}~1securitySettings/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1groups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: groups
        create:
          operation:
            $ref: '#/paths/~1v1~1groups/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        search:
          operation:
            $ref: '#/paths/~1v1~1groups:search/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        lookup:
          operation:
            $ref: '#/paths/~1v1~1groups:lookup/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/groups/methods/get'
          - $ref: '#/components/x-stackQL-resources/groups/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/groups/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/groups/methods/delete'
    groups__security_settings:
      id: google.cloudidentity.groups__security_settings
      name: groups__security_settings
      title: Groups__security_settings
      methods:
        groups_getSecuritySettings:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}~1securitySettings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/groups__security_settings/methods/groups_getSecuritySettings'
        insert: []
        update: []
        delete: []
    memberships:
      id: google.cloudidentity.memberships
      name: memberships
      title: Memberships
      methods:
        groups_memberships_searchTransitiveMemberships:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}~1memberships:searchTransitiveMemberships/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        groups_memberships_get:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}~1memberships~1{membershipsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        groups_memberships_delete:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}~1memberships~1{membershipsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        groups_memberships_create:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}~1memberships/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        groups_memberships_list:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}~1memberships/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: memberships
        groups_memberships_checkTransitiveMembership:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}~1memberships:checkTransitiveMembership/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        groups_memberships_searchTransitiveGroups:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}~1memberships:searchTransitiveGroups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        groups_memberships_modifyMembershipRoles:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}~1memberships~1{membershipsId}:modifyMembershipRoles/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        groups_memberships_lookup:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}~1memberships:lookup/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/memberships/methods/groups_memberships_get'
          - $ref: '#/components/x-stackQL-resources/memberships/methods/groups_memberships_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/memberships/methods/groups_memberships_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/memberships/methods/groups_memberships_delete'
    memberships__membership_graph:
      id: google.cloudidentity.memberships__membership_graph
      name: memberships__membership_graph
      title: Memberships__membership_graph
      methods:
        groups_memberships_getMembershipGraph:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}~1memberships:getMembershipGraph/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/memberships__membership_graph/methods/groups_memberships_getMembershipGraph'
        insert: []
        update: []
        delete: []
    userinvitations:
      id: google.cloudidentity.userinvitations
      name: userinvitations
      title: Userinvitations
      methods:
        customers_userinvitations_list:
          operation:
            $ref: '#/paths/~1v1~1customers~1{customersId}~1userinvitations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: userInvitations
        customers_userinvitations_isInvitableUser:
          operation:
            $ref: '#/paths/~1v1~1customers~1{customersId}~1userinvitations~1{userinvitationsId}:isInvitableUser/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_userinvitations_send:
          operation:
            $ref: '#/paths/~1v1~1customers~1{customersId}~1userinvitations~1{userinvitationsId}:send/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_userinvitations_cancel:
          operation:
            $ref: '#/paths/~1v1~1customers~1{customersId}~1userinvitations~1{userinvitationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_userinvitations_get:
          operation:
            $ref: '#/paths/~1v1~1customers~1{customersId}~1userinvitations~1{userinvitationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/userinvitations/methods/customers_userinvitations_get'
          - $ref: '#/components/x-stackQL-resources/userinvitations/methods/customers_userinvitations_list'
        insert: []
        update: []
        delete: []
    client_states:
      id: google.cloudidentity.client_states
      name: client_states
      title: Client_states
      methods:
        devices_deviceUsers_clientStates_get:
          operation:
            $ref: '#/paths/~1v1~1devices~1{devicesId}~1deviceUsers~1{deviceUsersId}~1clientStates~1{clientStatesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        devices_deviceUsers_clientStates_patch:
          operation:
            $ref: '#/paths/~1v1~1devices~1{devicesId}~1deviceUsers~1{deviceUsersId}~1clientStates~1{clientStatesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        devices_deviceUsers_clientStates_list:
          operation:
            $ref: '#/paths/~1v1~1devices~1{devicesId}~1deviceUsers~1{deviceUsersId}~1clientStates/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/client_states/methods/devices_deviceUsers_clientStates_get'
          - $ref: '#/components/x-stackQL-resources/client_states/methods/devices_deviceUsers_clientStates_list'
        insert: []
        update: []
        delete: []
    device_users:
      id: google.cloudidentity.device_users
      name: device_users
      title: Device_users
      methods:
        devices_deviceUsers_block:
          operation:
            $ref: '#/paths/~1v1~1devices~1{devicesId}~1deviceUsers~1{deviceUsersId}:block/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        devices_deviceUsers_wipe:
          operation:
            $ref: '#/paths/~1v1~1devices~1{devicesId}~1deviceUsers~1{deviceUsersId}:wipe/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        devices_deviceUsers_delete:
          operation:
            $ref: '#/paths/~1v1~1devices~1{devicesId}~1deviceUsers~1{deviceUsersId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        devices_deviceUsers_get:
          operation:
            $ref: '#/paths/~1v1~1devices~1{devicesId}~1deviceUsers~1{deviceUsersId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        devices_deviceUsers_approve:
          operation:
            $ref: '#/paths/~1v1~1devices~1{devicesId}~1deviceUsers~1{deviceUsersId}:approve/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        devices_deviceUsers_lookup:
          operation:
            $ref: '#/paths/~1v1~1devices~1{devicesId}~1deviceUsers:lookup/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        devices_deviceUsers_list:
          operation:
            $ref: '#/paths/~1v1~1devices~1{devicesId}~1deviceUsers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        devices_deviceUsers_cancelWipe:
          operation:
            $ref: '#/paths/~1v1~1devices~1{devicesId}~1deviceUsers~1{deviceUsersId}:cancelWipe/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/device_users/methods/devices_deviceUsers_get'
          - $ref: '#/components/x-stackQL-resources/device_users/methods/devices_deviceUsers_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/device_users/methods/devices_deviceUsers_delete'
    devices:
      id: google.cloudidentity.devices
      name: devices
      title: Devices
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1devices/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1devices/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1devices~1{devicesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1devices~1{devicesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancelWipe:
          operation:
            $ref: '#/paths/~1v1~1devices~1{devicesId}:cancelWipe/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        wipe:
          operation:
            $ref: '#/paths/~1v1~1devices~1{devicesId}:wipe/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/devices/methods/get'
          - $ref: '#/components/x-stackQL-resources/devices/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/devices/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/devices/methods/delete'
paths:
  /v1/groups/{groupsId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
    patch:
      description: Updates a `Group`.
      operationId: cloudidentity.groups.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-verb: exec
    delete:
      description: Deletes a `Group`.
      operationId: cloudidentity.groups.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-verb: delete
    get:
      description: Retrieves a `Group`.
      operationId: cloudidentity.groups.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-verb: select
  /v1/groups/{groupsId}/securitySettings:
    parameters: *ref_1
    get:
      description: Get Security Settings
      operationId: cloudidentity.groups.getSecuritySettings
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecuritySettings'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
      x-stackQL-resource: groups__security_settings
      x-stackQL-verb: select
    patch:
      description: Update Security Settings
      operationId: cloudidentity.groups.updateSecuritySettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecuritySettings'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-verb: exec
  /v1/groups:
    parameters: *ref_1
    get:
      description: Lists the `Group` resources under a customer or namespace.
      operationId: cloudidentity.groups.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGroupsResponse'
      parameters:
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: parent
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-verb: select
    post:
      description: Creates a Group.
      operationId: cloudidentity.groups.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: query
          name: initialGroupConfig
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-verb: insert
  /v1/groups:search:
    parameters: *ref_1
    get:
      description: Searches for `Group` resources matching a specified query.
      operationId: cloudidentity.groups.search
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchGroupsResponse'
      parameters:
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: query
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-verb: exec
  /v1/groups:lookup:
    parameters: *ref_1
    get:
      description: Looks up the [resource name](https://cloud.google.com/apis/design/resource_names) of a `Group` by its `EntityKey`.
      operationId: cloudidentity.groups.lookup
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupGroupNameResponse'
      parameters:
        - in: query
          name: groupKey.id
          schema:
            type: string
        - in: query
          name: groupKey.namespace
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-verb: exec
  /v1/groups/{groupsId}/memberships:searchTransitiveMemberships:
    parameters: *ref_1
    get:
      description: Search transitive memberships of a group. **Note:** This feature is only available to Google Workspace Enterprise Standard, Enterprise Plus, and Enterprise for Education; and Cloud Identity Premium accounts. If the account of the group is not one of these, a 403 (PERMISSION_DENIED) HTTP status code will be returned. A transitive membership is any direct or indirect membership of a group. Actor must have view permissions to all transitive memberships.
      operationId: cloudidentity.groups.memberships.searchTransitiveMemberships
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchTransitiveMembershipsResponse'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: memberships
      x-stackQL-verb: exec
  /v1/groups/{groupsId}/memberships/{membershipsId}:
    parameters: *ref_1
    get:
      description: Retrieves a `Membership`.
      operationId: cloudidentity.groups.memberships.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Membership'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-verb: select
    delete:
      description: Deletes a `Membership`.
      operationId: cloudidentity.groups.memberships.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-verb: delete
  /v1/groups/{groupsId}/memberships:
    parameters: *ref_1
    post:
      description: Creates a `Membership`.
      operationId: cloudidentity.groups.memberships.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Membership'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-verb: insert
    get:
      description: Lists the `Membership`s within a `Group`.
      operationId: cloudidentity.groups.memberships.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMembershipsResponse'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-verb: select
  /v1/groups/{groupsId}/memberships:checkTransitiveMembership:
    parameters: *ref_1
    get:
      description: Check a potential member for membership in a group. **Note:** This feature is only available to Google Workspace Enterprise Standard, Enterprise Plus, and Enterprise for Education; and Cloud Identity Premium accounts. If the account of the member is not one of these, a 403 (PERMISSION_DENIED) HTTP status code will be returned. A member has membership to a group as long as there is a single viewable transitive membership between the group and the member. The actor must have view permissions to at least one transitive membership between the member and group.
      operationId: cloudidentity.groups.memberships.checkTransitiveMembership
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckTransitiveMembershipResponse'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: query
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-verb: exec
  /v1/groups/{groupsId}/memberships:getMembershipGraph:
    parameters: *ref_1
    get:
      description: Get a membership graph of just a member or both a member and a group. **Note:** This feature is only available to Google Workspace Enterprise Standard, Enterprise Plus, and Enterprise for Education; and Cloud Identity Premium accounts. If the account of the member is not one of these, a 403 (PERMISSION_DENIED) HTTP status code will be returned. Given a member, the response will contain all membership paths from the member. Given both a group and a member, the response will contain all membership paths between the group and the member.
      operationId: cloudidentity.groups.memberships.getMembershipGraph
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: query
          schema:
            type: string
      x-stackQL-resource: memberships__membership_graph
      x-stackQL-verb: select
  /v1/groups/{groupsId}/memberships:searchTransitiveGroups:
    parameters: *ref_1
    get:
      description: Search transitive groups of a member. **Note:** This feature is only available to Google Workspace Enterprise Standard, Enterprise Plus, and Enterprise for Education; and Cloud Identity Premium accounts. If the account of the member is not one of these, a 403 (PERMISSION_DENIED) HTTP status code will be returned. A transitive group is any group that has a direct or indirect membership to the member. Actor must have view permissions all transitive groups.
      operationId: cloudidentity.groups.memberships.searchTransitiveGroups
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchTransitiveGroupsResponse'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: query
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: memberships
      x-stackQL-verb: exec
  /v1/groups/{groupsId}/memberships/{membershipsId}:modifyMembershipRoles:
    parameters: *ref_1
    post:
      description: Modifies the `MembershipRole`s of a `Membership`.
      operationId: cloudidentity.groups.memberships.modifyMembershipRoles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyMembershipRolesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModifyMembershipRolesResponse'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-verb: exec
  /v1/groups/{groupsId}/memberships:lookup:
    parameters: *ref_1
    get:
      description: Looks up the [resource name](https://cloud.google.com/apis/design/resource_names) of a `Membership` by its `EntityKey`.
      operationId: cloudidentity.groups.memberships.lookup
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupMembershipNameResponse'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: memberKey.namespace
          schema:
            type: string
        - in: query
          name: memberKey.id
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-verb: exec
  /v1/customers/{customersId}/userinvitations:
    parameters: *ref_1
    get:
      description: Retrieves a list of UserInvitation resources. **Note:** New consumer accounts with the customer's verified domain created within the previous 48 hours will not appear in the result. This delay also applies to newly-verified domains.
      operationId: cloudidentity.customers.userinvitations.list
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUserInvitationsResponse'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: userinvitations
      x-stackQL-verb: select
  /v1/customers/{customersId}/userinvitations/{userinvitationsId}:isInvitableUser:
    parameters: *ref_1
    get:
      description: 'Verifies whether a user account is eligible to receive a UserInvitation (is an unmanaged account). Eligibility is based on the following criteria: * the email address is a consumer account and it''s the primary email address of the account, and * the domain of the email address matches an existing verified Google Workspace or Cloud Identity domain If both conditions are met, the user is eligible. **Note:** This method is not supported for Workspace Essentials customers.'
      operationId: cloudidentity.customers.userinvitations.isInvitableUser
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsInvitableUserResponse'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: userinvitationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: userinvitations
      x-stackQL-verb: exec
  /v1/customers/{customersId}/userinvitations/{userinvitationsId}:send:
    parameters: *ref_1
    post:
      description: Sends a UserInvitation to email. If the `UserInvitation` does not exist for this request and it is a valid request, the request creates a `UserInvitation`. **Note:** The `get` and `list` methods have a 48-hour delay where newly-created consumer accounts will not appear in the results. You can still send a `UserInvitation` to those accounts if you know the unmanaged email address and IsInvitableUser==True.
      operationId: cloudidentity.customers.userinvitations.send
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendUserInvitationRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: userinvitationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: userinvitations
      x-stackQL-verb: exec
  /v1/customers/{customersId}/userinvitations/{userinvitationsId}:cancel:
    parameters: *ref_1
    post:
      description: Cancels a UserInvitation that was already sent.
      operationId: cloudidentity.customers.userinvitations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelUserInvitationRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: userinvitationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: userinvitations
      x-stackQL-verb: exec
  /v1/customers/{customersId}/userinvitations/{userinvitationsId}:
    parameters: *ref_1
    get:
      description: Retrieves a UserInvitation resource. **Note:** New consumer accounts with the customer's verified domain created within the previous 48 hours will not appear in the result. This delay also applies to newly-verified domains.
      operationId: cloudidentity.customers.userinvitations.get
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInvitation'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: userinvitationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: userinvitations
      x-stackQL-verb: select
  /v1/devices/{devicesId}/deviceUsers/{deviceUsersId}/clientStates/{clientStatesId}:
    parameters: *ref_1
    get:
      description: Gets the client state for the device user
      operationId: cloudidentity.devices.deviceUsers.clientStates.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1ClientState'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: path
          name: deviceUsersId
          required: true
          schema:
            type: string
        - in: path
          name: clientStatesId
          required: true
          schema:
            type: string
        - in: query
          name: customer
          schema:
            type: string
      x-stackQL-resource: client_states
      x-stackQL-verb: select
    patch:
      description: 'Updates the client state for the device user **Note**: This method is available only to customers who have one of the following SKUs: Enterprise Standard, Enterprise Plus, Enterprise for Education, and Cloud Identity Premium'
      operationId: cloudidentity.devices.deviceUsers.clientStates.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1ClientState'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: path
          name: deviceUsersId
          required: true
          schema:
            type: string
        - in: path
          name: clientStatesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: customer
          schema:
            type: string
      x-stackQL-resource: client_states
      x-stackQL-verb: exec
  /v1/devices/{devicesId}/deviceUsers/{deviceUsersId}/clientStates:
    parameters: *ref_1
    get:
      description: Lists the client states for the given search query.
      operationId: cloudidentity.devices.deviceUsers.clientStates.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1ListClientStatesResponse'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: path
          name: deviceUsersId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: customer
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: client_states
      x-stackQL-verb: select
  /v1/devices/{devicesId}/deviceUsers/{deviceUsersId}:block:
    parameters: *ref_1
    post:
      description: Blocks device from accessing user data
      operationId: cloudidentity.devices.deviceUsers.block
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1BlockDeviceUserRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: path
          name: deviceUsersId
          required: true
          schema:
            type: string
      x-stackQL-resource: device_users
      x-stackQL-verb: exec
  /v1/devices/{devicesId}/deviceUsers/{deviceUsersId}:wipe:
    parameters: *ref_1
    post:
      description: Wipes the user's account on a device. Other data on the device that is not associated with the user's work account is not affected. For example, if a Gmail app is installed on a device that is used for personal and work purposes, and the user is logged in to the Gmail app with their personal account as well as their work account, wiping the "deviceUser" by their work administrator will not affect their personal account within Gmail or other apps such as Photos.
      operationId: cloudidentity.devices.deviceUsers.wipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1WipeDeviceUserRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: path
          name: deviceUsersId
          required: true
          schema:
            type: string
      x-stackQL-resource: device_users
      x-stackQL-verb: exec
  /v1/devices/{devicesId}/deviceUsers/{deviceUsersId}:
    parameters: *ref_1
    delete:
      description: Deletes the specified DeviceUser. This also revokes the user's access to device data.
      operationId: cloudidentity.devices.deviceUsers.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: path
          name: deviceUsersId
          required: true
          schema:
            type: string
        - in: query
          name: customer
          schema:
            type: string
      x-stackQL-resource: device_users
      x-stackQL-verb: delete
    get:
      description: Retrieves the specified DeviceUser
      operationId: cloudidentity.devices.deviceUsers.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1DeviceUser'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: path
          name: deviceUsersId
          required: true
          schema:
            type: string
        - in: query
          name: customer
          schema:
            type: string
      x-stackQL-resource: device_users
      x-stackQL-verb: select
  /v1/devices/{devicesId}/deviceUsers/{deviceUsersId}:approve:
    parameters: *ref_1
    post:
      description: Approves device to access user data.
      operationId: cloudidentity.devices.deviceUsers.approve
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1ApproveDeviceUserRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: path
          name: deviceUsersId
          required: true
          schema:
            type: string
      x-stackQL-resource: device_users
      x-stackQL-verb: exec
  /v1/devices/{devicesId}/deviceUsers:lookup:
    parameters: *ref_1
    get:
      description: 'Looks up resource names of the DeviceUsers associated with the caller''s credentials, as well as the properties provided in the request. This method must be called with end-user credentials with the scope: https://www.googleapis.com/auth/cloud-identity.devices.lookup If multiple properties are provided, only DeviceUsers having all of these properties are considered as matches - i.e. the query behaves like an AND. Different platforms require different amounts of information from the caller to ensure that the DeviceUser is uniquely identified. - iOS: No properties need to be passed, the caller''s credentials are sufficient to identify the corresponding DeviceUser. - Android: Specifying the ''android_id'' field is required. - Desktop: Specifying the ''raw_resource_id'' field is required.'
      operationId: cloudidentity.devices.deviceUsers.lookup
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices.lookup
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices.lookup
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1LookupSelfDeviceUsersResponse'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: query
          name: androidId
          schema:
            type: string
        - in: query
          name: userId
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: rawResourceId
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: device_users
      x-stackQL-verb: exec
  /v1/devices/{devicesId}/deviceUsers:
    parameters: *ref_1
    get:
      description: Lists/Searches DeviceUsers.
      operationId: cloudidentity.devices.deviceUsers.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1ListDeviceUsersResponse'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: customer
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: device_users
      x-stackQL-verb: select
  /v1/devices/{devicesId}/deviceUsers/{deviceUsersId}:cancelWipe:
    parameters: *ref_1
    post:
      description: Cancels an unfinished user account wipe. This operation can be used to cancel device wipe in the gap between the wipe operation returning success and the device being wiped.
      operationId: cloudidentity.devices.deviceUsers.cancelWipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: path
          name: deviceUsersId
          required: true
          schema:
            type: string
      x-stackQL-resource: device_users
      x-stackQL-verb: exec
  /v1/devices:
    parameters: *ref_1
    get:
      description: Lists/Searches devices.
      operationId: cloudidentity.devices.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1ListDevicesResponse'
      parameters:
        - in: query
          name: customer
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: devices
      x-stackQL-verb: select
    post:
      description: 'Creates a device. Only company-owned device may be created. **Note**: This method is available only to customers who have one of the following SKUs: Enterprise Standard, Enterprise Plus, Enterprise for Education, and Cloud Identity Premium'
      operationId: cloudidentity.devices.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1Device'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: query
          name: customer
          schema:
            type: string
      x-stackQL-resource: devices
      x-stackQL-verb: insert
  /v1/devices/{devicesId}:
    parameters: *ref_1
    delete:
      description: Deletes the specified device.
      operationId: cloudidentity.devices.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: query
          name: customer
          schema:
            type: string
      x-stackQL-resource: devices
      x-stackQL-verb: delete
    get:
      description: Retrieves the specified device.
      operationId: cloudidentity.devices.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1Device'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: query
          name: customer
          schema:
            type: string
      x-stackQL-resource: devices
      x-stackQL-verb: select
  /v1/devices/{devicesId}:cancelWipe:
    parameters: *ref_1
    post:
      description: Cancels an unfinished device wipe. This operation can be used to cancel device wipe in the gap between the wipe operation returning success and the device being wiped. This operation is possible when the device is in a "pending wipe" state. The device enters the "pending wipe" state when a wipe device command is issued, but has not yet been sent to the device. The cancel wipe will fail if the wipe command has already been issued to the device.
      operationId: cloudidentity.devices.cancelWipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1CancelWipeDeviceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
      x-stackQL-resource: devices
      x-stackQL-verb: exec
  /v1/devices/{devicesId}:wipe:
    parameters: *ref_1
    post:
      description: Wipes all data on the specified device.
      operationId: cloudidentity.devices.wipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1WipeDeviceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
      x-stackQL-resource: devices
      x-stackQL-verb: exec
