openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Cloud Identity API
  description: API for provisioning and managing identity resources.
  version: v1
  x-discovery-doc-revision: '20240904'
  x-generated-date: '2024-09-13'
externalDocs:
  url: https://cloud.google.com/identity/
servers:
  - url: https://cloudidentity.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-identity.devices: >-
              Private Service:
              https://www.googleapis.com/auth/cloud-identity.devices
            https://www.googleapis.com/auth/cloud-identity.devices.lookup: See your device details
            https://www.googleapis.com/auth/cloud-identity.devices.readonly: >-
              Private Service:
              https://www.googleapis.com/auth/cloud-identity.devices.readonly
            https://www.googleapis.com/auth/cloud-identity.groups: >-
              See, change, create, and delete any of the Cloud Identity Groups
              that you can access, including the members of each group
            https://www.googleapis.com/auth/cloud-identity.groups.readonly: >-
              See any Cloud Identity Groups that you can access, including group
              members and their emails
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    GoogleAppsCloudidentityDevicesV1Device:
      id: GoogleAppsCloudidentityDevicesV1Device
      description: ' A Device within the Cloud Identity Devices API. Represents a Device known to Google Cloud, independent of the device ownership, type, and whether it is assigned or in use by a user.'
      type: object
      properties:
        name:
          description: >-
            Output only. [Resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            Device in format: `devices/{device}`, where device is the unique id
            assigned to the Device.
          readOnly: true
          type: string
        createTime:
          description: >-
            Output only. When the Company-Owned device was imported. This field
            is empty for BYOD devices.
          readOnly: true
          type: string
          format: google-datetime
        lastSyncTime:
          description: Most recent time when device synced with this service.
          type: string
          format: google-datetime
        ownerType:
          description: >-
            Output only. Whether the device is owned by the company or an
            individual
          readOnly: true
          type: string
          enumDescriptions:
            - Default value. The value is unused.
            - Company owns the device.
            - Bring Your Own Device (i.e. individual owns the device)
          enum:
            - DEVICE_OWNERSHIP_UNSPECIFIED
            - COMPANY
            - BYOD
        model:
          description: 'Output only. Model name of device. Example: Pixel 3.'
          readOnly: true
          type: string
        osVersion:
          description: 'Output only. OS version of the device. Example: Android 8.1.0.'
          readOnly: true
          type: string
        deviceType:
          description: Output only. Type of device.
          readOnly: true
          type: string
          enumDescriptions:
            - Unknown device type
            - Device is an Android device
            - Device is an iOS device
            - Device is a Google Sync device.
            - Device is a Windows device.
            - Device is a MacOS device.
            - Device is a Linux device.
            - Device is a ChromeOS device.
          enum:
            - DEVICE_TYPE_UNSPECIFIED
            - ANDROID
            - IOS
            - GOOGLE_SYNC
            - WINDOWS
            - MAC_OS
            - LINUX
            - CHROME_OS
        serialNumber:
          description: 'Serial Number of device. Example: HT82V1A01076.'
          type: string
        assetTag:
          description: Asset tag of the device.
          type: string
        imei:
          description: Output only. IMEI number of device if GSM device; empty otherwise.
          readOnly: true
          type: string
        meid:
          description: Output only. MEID number of device if CDMA device; empty otherwise.
          readOnly: true
          type: string
        wifiMacAddresses:
          description: WiFi MAC addresses of device.
          type: array
          items:
            type: string
        networkOperator:
          description: Output only. Mobile or network operator of device, if available.
          readOnly: true
          type: string
        manufacturer:
          description: 'Output only. Device manufacturer. Example: Motorola.'
          readOnly: true
          type: string
        releaseVersion:
          description: 'Output only. OS release version. Example: 6.0.'
          readOnly: true
          type: string
        brand:
          description: 'Output only. Device brand. Example: Samsung.'
          readOnly: true
          type: string
        buildNumber:
          description: Output only. Build number of the device.
          readOnly: true
          type: string
        kernelVersion:
          description: Output only. Kernel version of the device.
          readOnly: true
          type: string
        basebandVersion:
          description: Output only. Baseband version of the device.
          readOnly: true
          type: string
        enabledDeveloperOptions:
          description: Output only. Whether developer options is enabled on device.
          readOnly: true
          type: boolean
        otherAccounts:
          description: >-
            Output only. Domain name for Google accounts on device. Type for
            other accounts on device. On Android, will only be populated if
            |ownership_privilege| is |PROFILE_OWNER| or |DEVICE_OWNER|. Does not
            include the account signed in to the device policy app if that
            account's domain has only one account. Examples: "com.example",
            "xyz.com".
          readOnly: true
          type: array
          items:
            type: string
        enabledUsbDebugging:
          description: Output only. Whether USB debugging is enabled on device.
          readOnly: true
          type: boolean
        securityPatchTime:
          description: Output only. OS security patch update time on device.
          readOnly: true
          type: string
          format: google-datetime
        bootloaderVersion:
          description: 'Output only. Device bootloader version. Example: 0.6.7.'
          readOnly: true
          type: string
        encryptionState:
          description: Output only. Device encryption state.
          readOnly: true
          type: string
          enumDescriptions:
            - Encryption Status is not set.
            - Device doesn't support encryption.
            - Device is encrypted.
            - Device is not encrypted.
          enum:
            - ENCRYPTION_STATE_UNSPECIFIED
            - UNSUPPORTED_BY_DEVICE
            - ENCRYPTED
            - NOT_ENCRYPTED
        androidSpecificAttributes:
          description: Output only. Attributes specific to Android devices.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleAppsCloudidentityDevicesV1AndroidAttributes
        managementState:
          description: Output only. Management state of the device
          readOnly: true
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - Device is approved.
            - Device is blocked.
            - Device is pending approval.
            - >-
              The device is not provisioned. Device will start from this state
              until some action is taken (i.e. a user starts using the device).
            - Data and settings on the device are being removed.
            - All data and settings on the device are removed.
          enum:
            - MANAGEMENT_STATE_UNSPECIFIED
            - APPROVED
            - BLOCKED
            - PENDING
            - UNPROVISIONED
            - WIPING
            - WIPED
        compromisedState:
          description: Output only. Represents whether the Device is compromised.
          readOnly: true
          type: string
          enumDescriptions:
            - Default value.
            - >-
              The device is compromised (currently, this means Android device is
              rooted).
            - >-
              The device is safe (currently, this means Android device is
              unrooted).
          enum:
            - COMPROMISED_STATE_UNSPECIFIED
            - COMPROMISED
            - UNCOMPROMISED
        deviceId:
          description: Unique identifier for the device.
          type: string
        unifiedDeviceId:
          description: Output only. Unified device id of the device.
          readOnly: true
          type: string
        endpointVerificationSpecificAttributes:
          description: >-
            Output only. Attributes specific to [Endpoint
            Verification](https://cloud.google.com/endpoint-verification/docs/overview)
            devices.
          readOnly: true
          $ref: >-
            #/components/schemas/GoogleAppsCloudidentityDevicesV1EndpointVerificationSpecificAttributes
        hostname:
          description: Host name of the device.
          type: string
    GoogleAppsCloudidentityDevicesV1AndroidAttributes:
      id: GoogleAppsCloudidentityDevicesV1AndroidAttributes
      description: Resource representing the Android specific attributes of a Device.
      type: object
      properties:
        enabledUnknownSources:
          description: >-
            Whether applications from unknown sources can be installed on
            device.
          type: boolean
        supportsWorkProfile:
          description: >-
            Whether device supports Android work profiles. If false, this
            service will not block access to corp data even if an administrator
            turns on the "Enforce Work Profile" policy.
          type: boolean
        ownerProfileAccount:
          description: >-
            Whether this account is on an owner/primary profile. For phones,
            only true for owner profiles. Android 4+ devices can have secondary
            or restricted user profiles.
          type: boolean
        ownershipPrivilege:
          description: Ownership privileges on device.
          type: string
          enumDescriptions:
            - Ownership privilege is not set.
            - Active device administrator privileges on the device.
            - >-
              Profile Owner privileges. The account is in a managed corporate
              profile.
            - Device Owner privileges on the device.
          enum:
            - OWNERSHIP_PRIVILEGE_UNSPECIFIED
            - DEVICE_ADMINISTRATOR
            - PROFILE_OWNER
            - DEVICE_OWNER
        verifiedBoot:
          description: Whether Android verified boot status is GREEN.
          type: boolean
        ctsProfileMatch:
          description: Whether the device passes Android CTS compliance.
          type: boolean
        verifyAppsEnabled:
          description: Whether Google Play Protect Verify Apps is enabled.
          type: boolean
        hasPotentiallyHarmfulApps:
          description: Whether any potentially harmful apps were detected on the device.
          type: boolean
    GoogleAppsCloudidentityDevicesV1EndpointVerificationSpecificAttributes:
      id: GoogleAppsCloudidentityDevicesV1EndpointVerificationSpecificAttributes
      description: >-
        Resource representing the [Endpoint Verification-specific
        attributes](https://cloud.google.com/endpoint-verification/docs/device-information)
        of a device.
      type: object
      properties:
        certificateAttributes:
          description: Details of certificates.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleAppsCloudidentityDevicesV1CertificateAttributes
        browserAttributes:
          description: Details of browser profiles reported by Endpoint Verification.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleAppsCloudidentityDevicesV1BrowserAttributes
        additionalSignals:
          description: >-
            Additional signals reported by Endpoint Verification. It includes
            the following attributes: 1. Non-configurable attributes: hotfixes,
            av_installed, av_enabled, windows_domain_name,
            is_os_native_firewall_enabled, and is_secure_boot_enabled. 2.
            [Configurable
            attributes](https://cloud.google.com/endpoint-verification/docs/collect-config-attributes):
            file, folder, and binary attributes; registry entries; and
            properties in a plist.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object.
    GoogleAppsCloudidentityDevicesV1CertificateAttributes:
      id: GoogleAppsCloudidentityDevicesV1CertificateAttributes
      description: Stores information about a certificate.
      type: object
      properties:
        fingerprint:
          description: The encoded certificate fingerprint.
          type: string
        thumbprint:
          description: The certificate thumbprint.
          type: string
        validationState:
          description: Output only. Validation state of this certificate.
          readOnly: true
          type: string
          enumDescriptions:
            - Default value.
            - Certificate validation was successful.
            - Certificate validation failed.
          enum:
            - CERTIFICATE_VALIDATION_STATE_UNSPECIFIED
            - VALIDATION_SUCCESSFUL
            - VALIDATION_FAILED
        serialNumber:
          description: 'Serial number of the certificate, Example: "123456789".'
          type: string
        validityStartTime:
          description: Certificate not valid before this timestamp.
          type: string
          format: google-datetime
        validityExpirationTime:
          description: Certificate not valid at or after this timestamp.
          type: string
          format: google-datetime
        issuer:
          description: The name of the issuer of this certificate.
          type: string
        subject:
          description: The subject name of this certificate.
          type: string
        certificateTemplate:
          description: The X.509 extension for CertificateTemplate.
          $ref: >-
            #/components/schemas/GoogleAppsCloudidentityDevicesV1CertificateTemplate
    GoogleAppsCloudidentityDevicesV1CertificateTemplate:
      id: GoogleAppsCloudidentityDevicesV1CertificateTemplate
      description: CertificateTemplate (v3 Extension in X.509).
      type: object
      properties:
        id:
          description: >-
            The template id of the template. Example:
            "1.3.6.1.4.1.311.21.8.15608621.11768144.5720724.16068415.6889630.81.2472537.7784047".
          type: string
        majorVersion:
          description: 'The Major version of the template. Example: 100.'
          type: integer
          format: int32
        minorVersion:
          description: 'The minor version of the template. Example: 12.'
          type: integer
          format: int32
    GoogleAppsCloudidentityDevicesV1BrowserAttributes:
      id: GoogleAppsCloudidentityDevicesV1BrowserAttributes
      description: >-
        Contains information about browser profiles reported by the [Endpoint
        Verification
        extension](https://chromewebstore.google.com/detail/endpoint-verification/callobklhcbilhphinckomhgkigmfocg?pli=1).
      type: object
      properties:
        lastProfileSyncTime:
          description: >-
            Timestamp in milliseconds since Epoch when the profile/gcm id was
            last synced.
          type: string
          format: google-datetime
        chromeBrowserInfo:
          description: >-
            Represents the current state of the [Chrome browser
            attributes](https://cloud.google.com/access-context-manager/docs/browser-attributes)
            sent by the [Endpoint Verification
            extension](https://chromewebstore.google.com/detail/endpoint-verification/callobklhcbilhphinckomhgkigmfocg?pli=1).
          $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1BrowserInfo'
        chromeProfileId:
          description: >-
            Chrome profile ID that is exposed by the Chrome API. It is unique
            for each device.
          type: string
    GoogleAppsCloudidentityDevicesV1BrowserInfo:
      id: GoogleAppsCloudidentityDevicesV1BrowserInfo
      description: >-
        Browser-specific fields reported by the [Endpoint Verification
        extension](https://chromewebstore.google.com/detail/endpoint-verification/callobklhcbilhphinckomhgkigmfocg?pli=1).
        LINT.IfChange
      type: object
      properties:
        browserVersion:
          description: Version of the request initiating browser.
          type: string
        browserManagementState:
          description: Output only. Browser's management state.
          readOnly: true
          type: string
          enumDescriptions:
            - Management state is not specified.
            - Browser/Profile is not managed by any customer.
            - Browser/Profile is managed, but by some other customer.
            - Profile is managed by customer.
            - Browser is managed by customer.
          enum:
            - UNSPECIFIED
            - UNMANAGED
            - MANAGED_BY_OTHER_DOMAIN
            - PROFILE_MANAGED
            - BROWSER_MANAGED
        isFileUploadAnalysisEnabled:
          description: >-
            Current state of [file upload
            analysis](https://chromeenterprise.google/policies/#OnFileAttachedEnterpriseConnector).
            Set to true if provider list from Chrome is non-empty.
          type: boolean
        isFileDownloadAnalysisEnabled:
          description: >-
            Current state of [file download
            analysis](https://chromeenterprise.google/policies/#OnFileDownloadedEnterpriseConnector).
            Set to true if provider list from Chrome is non-empty.
          type: boolean
        isBulkDataEntryAnalysisEnabled:
          description: >-
            Current state of [bulk data
            analysis](https://chromeenterprise.google/policies/#OnBulkDataEntryEnterpriseConnector).
            Set to true if provider list from Chrome is non-empty.
          type: boolean
        isSecurityEventAnalysisEnabled:
          description: >-
            Current state of [security event
            analysis](https://chromeenterprise.google/policies/#OnSecurityEventEnterpriseConnector).
            Set to true if provider list from Chrome is non-empty.
          type: boolean
        isRealtimeUrlCheckEnabled:
          description: >-
            Current state of [real-time URL
            check](https://chromeenterprise.google/policies/#EnterpriseRealTimeUrlCheckMode).
            Set to true if provider list from Chrome is non-empty.
          type: boolean
        safeBrowsingProtectionLevel:
          description: >-
            Current state of [Safe Browsing protection
            level](https://chromeenterprise.google/policies/#SafeBrowsingProtectionLevel).
          type: string
          enumDescriptions:
            - Browser protection level is not specified.
            - >-
              No protection against dangerous websites, downloads, and
              extensions.
            - >-
              Standard protection against websites, downloads, and extensions
              that are known to be dangerous.
            - >-
              Faster, proactive protection against dangerous websites,
              downloads, and extensions.
          enum:
            - SAFE_BROWSING_LEVEL_UNSPECIFIED
            - DISABLED
            - STANDARD
            - ENHANCED
        isSiteIsolationEnabled:
          description: >-
            Current state of [site
            isolation](https://chromeenterprise.google/policies/?policy=IsolateOrigins).
          type: boolean
        isBuiltInDnsClientEnabled:
          description: >-
            Current state of [built-in DNS
            client](https://chromeenterprise.google/policies/#BuiltInDnsClientEnabled).
          type: boolean
        passwordProtectionWarningTrigger:
          description: >-
            Current state of [password protection
            trigger](https://chromeenterprise.google/policies/#PasswordProtectionWarningTrigger).
          type: string
          enumDescriptions:
            - Password protection is not specified.
            - Password reuse is never detected.
            - >-
              Warning is shown when the user reuses their protected password on
              a non-allowed site.
            - >-
              Warning is shown when the user reuses their protected password on
              a phishing site.
          enum:
            - PASSWORD_PROTECTION_TRIGGER_UNSPECIFIED
            - PROTECTION_OFF
            - PASSWORD_REUSE
            - PHISHING_REUSE
        isChromeRemoteDesktopAppBlocked:
          description: >-
            Current state of [Chrome Remote Desktop
            app](https://chromeenterprise.google/policies/#URLBlocklist).
          type: boolean
        isChromeCleanupEnabled:
          description: >-
            Current state of [Chrome
            Cleanup](https://chromeenterprise.google/policies/#ChromeCleanupEnabled).
          type: boolean
        isThirdPartyBlockingEnabled:
          description: >-
            Current state of [third-party
            blocking](https://chromeenterprise.google/policies/#ThirdPartyBlockingEnabled).
          type: boolean
    Operation:
      id: Operation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    Status:
      id: Status
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    GoogleAppsCloudidentityDevicesV1ListDevicesResponse:
      id: GoogleAppsCloudidentityDevicesV1ListDevicesResponse
      description: Response message that is returned from the ListDevices method.
      type: object
      properties:
        devices:
          description: Devices meeting the list restrictions.
          type: array
          items:
            $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1Device'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results. Empty if there are no
            more results.
          type: string
    GoogleAppsCloudidentityDevicesV1WipeDeviceRequest:
      id: GoogleAppsCloudidentityDevicesV1WipeDeviceRequest
      description: Request message for wiping all data on the device.
      type: object
      properties:
        customer:
          description: >-
            Optional. [Resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            customer. If you're using this API for your own organization, use
            `customers/my_customer` If you're using this API to manage another
            organization, use `customers/{customer}`, where customer is the
            customer to whom the device belongs.
          type: string
        removeResetLock:
          description: >-
            Optional. Specifies if a user is able to factory reset a device
            after a Device Wipe. On iOS, this is called "Activation Lock", while
            on Android, this is known as "Factory Reset Protection". If true,
            this protection will be removed from the device, so that a user can
            successfully factory reset. If false, the setting is untouched on
            the device.
          type: boolean
    GoogleAppsCloudidentityDevicesV1CancelWipeDeviceRequest:
      id: GoogleAppsCloudidentityDevicesV1CancelWipeDeviceRequest
      description: Request message for cancelling an unfinished device wipe.
      type: object
      properties:
        customer:
          description: >-
            Optional. [Resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            customer. If you're using this API for your own organization, use
            `customers/my_customer` If you're using this API to manage another
            organization, use `customers/{customer}`, where customer is the
            customer to whom the device belongs.
          type: string
    GoogleAppsCloudidentityDevicesV1DeviceUser:
      id: GoogleAppsCloudidentityDevicesV1DeviceUser
      description: >-
        Represents a user's use of a Device in the Cloud Identity Devices API. A
        DeviceUser is a resource representing a user's use of a Device
      type: object
      properties:
        name:
          description: >-
            Output only. [Resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            DeviceUser in format: `devices/{device}/deviceUsers/{device_user}`,
            where `device_user` uniquely identifies a user's use of a device.
          readOnly: true
          type: string
        userEmail:
          description: Email address of the user registered on the device.
          type: string
        managementState:
          description: Output only. Management state of the user on the device.
          readOnly: true
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - This user's data and profile is being removed from the device.
            - This user's data and profile is removed from the device.
            - User is approved to access data on the device.
            - User is blocked from accessing data on the device.
            - User is awaiting approval.
            - >-
              User is unenrolled from Advanced Windows Management, but the
              Windows account is still intact.
          enum:
            - MANAGEMENT_STATE_UNSPECIFIED
            - WIPING
            - WIPED
            - APPROVED
            - BLOCKED
            - PENDING_APPROVAL
            - UNENROLLED
        firstSyncTime:
          description: >-
            Output only. Most recent time when user registered with this
            service.
          readOnly: true
          type: string
          format: google-datetime
        lastSyncTime:
          description: Output only. Last time when user synced with policies.
          readOnly: true
          type: string
          format: google-datetime
        userAgent:
          description: Output only. User agent on the device for this specific user
          readOnly: true
          type: string
        languageCode:
          description: Output only. Default locale used on device, in IETF BCP-47 format.
          readOnly: true
          type: string
        compromisedState:
          description: Compromised State of the DeviceUser object
          type: string
          enumDescriptions:
            - >-
              Compromised state of Device User account is unknown or
              unspecified.
            - Device User Account is compromised.
            - Device User Account is not compromised.
          enum:
            - COMPROMISED_STATE_UNSPECIFIED
            - COMPROMISED
            - NOT_COMPROMISED
        passwordState:
          description: Password state of the DeviceUser object
          type: string
          enumDescriptions:
            - Password state not set.
            - Password set in object.
            - Password not set in object.
          enum:
            - PASSWORD_STATE_UNSPECIFIED
            - PASSWORD_SET
            - PASSWORD_NOT_SET
        createTime:
          description: When the user first signed in to the device
          type: string
          format: google-datetime
    GoogleAppsCloudidentityDevicesV1ListDeviceUsersResponse:
      id: GoogleAppsCloudidentityDevicesV1ListDeviceUsersResponse
      description: Response message that is returned from the ListDeviceUsers method.
      type: object
      properties:
        deviceUsers:
          description: Devices meeting the list restrictions.
          type: array
          items:
            $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1DeviceUser'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results. Empty if there are no
            more results.
          type: string
    GoogleAppsCloudidentityDevicesV1LookupSelfDeviceUsersResponse:
      id: GoogleAppsCloudidentityDevicesV1LookupSelfDeviceUsersResponse
      description: >-
        Response containing resource names of the DeviceUsers associated with
        the caller's credentials.
      type: object
      properties:
        names:
          description: >-
            [Resource
            names](https://cloud.google.com/apis/design/resource_names) of the
            DeviceUsers in the format:
            `devices/{device}/deviceUsers/{user_resource}`, where device is the
            unique ID assigned to a Device and user_resource is the unique user
            ID
          type: array
          items:
            type: string
        customer:
          description: >-
            The customer resource name that may be passed back to other Devices
            API methods such as List, Get, etc.
          type: string
        nextPageToken:
          description: >-
            Token to retrieve the next page of results. Empty if there are no
            more results.
          type: string
    GoogleAppsCloudidentityDevicesV1ApproveDeviceUserRequest:
      id: GoogleAppsCloudidentityDevicesV1ApproveDeviceUserRequest
      description: Request message for approving the device to access user data.
      type: object
      properties:
        customer:
          description: >-
            Optional. [Resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            customer. If you're using this API for your own organization, use
            `customers/my_customer` If you're using this API to manage another
            organization, use `customers/{customer}`, where customer is the
            customer to whom the device belongs.
          type: string
    GoogleAppsCloudidentityDevicesV1BlockDeviceUserRequest:
      id: GoogleAppsCloudidentityDevicesV1BlockDeviceUserRequest
      description: Request message for blocking account on device.
      type: object
      properties:
        customer:
          description: >-
            Optional. [Resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            customer. If you're using this API for your own organization, use
            `customers/my_customer` If you're using this API to manage another
            organization, use `customers/{customer}`, where customer is the
            customer to whom the device belongs.
          type: string
    GoogleAppsCloudidentityDevicesV1WipeDeviceUserRequest:
      id: GoogleAppsCloudidentityDevicesV1WipeDeviceUserRequest
      description: Request message for starting an account wipe on device.
      type: object
      properties:
        customer:
          description: >-
            Optional. [Resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            customer. If you're using this API for your own organization, use
            `customers/my_customer` If you're using this API to manage another
            organization, use `customers/{customer}`, where customer is the
            customer to whom the device belongs.
          type: string
    GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserRequest:
      id: GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserRequest
      description: Request message for cancelling an unfinished user account wipe.
      type: object
      properties:
        customer:
          description: >-
            Optional. [Resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            customer. If you're using this API for your own organization, use
            `customers/my_customer` If you're using this API to manage another
            organization, use `customers/{customer}`, where customer is the
            customer to whom the device belongs.
          type: string
    GoogleAppsCloudidentityDevicesV1ClientState:
      id: GoogleAppsCloudidentityDevicesV1ClientState
      description: >-
        Represents the state associated with an API client calling the Devices
        API. Resource representing ClientState and supports updates from API
        users
      type: object
      properties:
        name:
          description: >-
            Output only. [Resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            ClientState in format:
            `devices/{device}/deviceUsers/{device_user}/clientState/{partner}`,
            where partner corresponds to the partner storing the data. For
            partners belonging to the "BeyondCorp Alliance", this is the partner
            ID specified to you by Google. For all other callers, this is a
            string of the form: `{customer}-suffix`, where `customer` is your
            customer ID. The *suffix* is any string the caller specifies. This
            string will be displayed verbatim in the administration console.
            This suffix is used in setting up Custom Access Levels in
            Context-Aware Access. Your organization's customer ID can be
            obtained from the URL: `GET
            https://www.googleapis.com/admin/directory/v1/customers/my_customer`
            The `id` field in the response contains the customer ID starting
            with the letter 'C'. The customer ID to be used in this API is the
            string after the letter 'C' (not including 'C')
          readOnly: true
          type: string
        createTime:
          description: Output only. The time the client state data was created.
          readOnly: true
          type: string
          format: google-datetime
        lastUpdateTime:
          description: Output only. The time the client state data was last updated.
          readOnly: true
          type: string
          format: google-datetime
        etag:
          description: >-
            The token that needs to be passed back for concurrency control in
            updates. Token needs to be passed back in UpdateRequest
          type: string
        customId:
          description: >-
            This field may be used to store a unique identifier for the API
            resource within which these CustomAttributes are a field.
          type: string
        assetTags:
          description: The caller can specify asset tags for this resource
          type: array
          items:
            type: string
        healthScore:
          description: >-
            The Health score of the resource. The Health score is the callers
            specification of the condition of the device from a usability point
            of view. For example, a third-party device management provider may
            specify a health score based on its compliance with organizational
            policies.
          type: string
          enumDescriptions:
            - Default value
            - The object is in very poor health as defined by the caller.
            - The object is in poor health as defined by the caller.
            - >-
              The object health is neither good nor poor, as defined by the
              caller.
            - The object is in good health as defined by the caller.
            - The object is in very good health as defined by the caller.
          enum:
            - HEALTH_SCORE_UNSPECIFIED
            - VERY_POOR
            - POOR
            - NEUTRAL
            - GOOD
            - VERY_GOOD
        scoreReason:
          description: A descriptive cause of the health score.
          type: string
        managed:
          description: The management state of the resource as specified by the API client.
          type: string
          enumDescriptions:
            - The management state of the resource is unknown or unspecified.
            - The resource is managed.
            - The resource is not managed.
          enum:
            - MANAGED_STATE_UNSPECIFIED
            - MANAGED
            - UNMANAGED
        complianceState:
          description: The compliance state of the resource as specified by the API client.
          type: string
          enumDescriptions:
            - The compliance state of the resource is unknown or unspecified.
            - Device is compliant with third party policies
            - Device is not compliant with third party policies
          enum:
            - COMPLIANCE_STATE_UNSPECIFIED
            - COMPLIANT
            - NON_COMPLIANT
        keyValuePairs:
          description: >-
            The map of key-value attributes stored by callers specific to a
            device. The total serialized length of this map may not exceed 10KB.
            No limit is placed on the number of attributes in a map.
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleAppsCloudidentityDevicesV1CustomAttributeValue
        ownerType:
          description: Output only. The owner of the ClientState
          readOnly: true
          type: string
          enumDescriptions:
            - Unknown owner type
            - Customer is the owner
            - Partner is the owner
          enum:
            - OWNER_TYPE_UNSPECIFIED
            - OWNER_TYPE_CUSTOMER
            - OWNER_TYPE_PARTNER
    GoogleAppsCloudidentityDevicesV1CustomAttributeValue:
      id: GoogleAppsCloudidentityDevicesV1CustomAttributeValue
      description: Additional custom attribute values may be one of these types
      type: object
      properties:
        numberValue:
          description: Represents a double value.
          type: number
          format: double
        stringValue:
          description: Represents a string value.
          type: string
        boolValue:
          description: Represents a boolean value.
          type: boolean
    GoogleAppsCloudidentityDevicesV1ListClientStatesResponse:
      id: GoogleAppsCloudidentityDevicesV1ListClientStatesResponse
      description: Response message that is returned in ListClientStates.
      type: object
      properties:
        clientStates:
          description: Client states meeting the list restrictions.
          type: array
          items:
            $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1ClientState'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results. Empty if there are no
            more results.
          type: string
    Group:
      id: Group
      description: >-
        A group within the Cloud Identity Groups API. A `Group` is a collection
        of entities, where each entity is either a user, another group, or a
        service account.
      type: object
      properties:
        name:
          description: >-
            Output only. The [resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            `Group`. Shall be of the form `groups/{group}`.
          readOnly: true
          type: string
        groupKey:
          description: Required. The `EntityKey` of the `Group`.
          $ref: '#/components/schemas/EntityKey'
        additionalGroupKeys:
          description: Output only. Additional group keys associated with the Group.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/EntityKey'
        parent:
          description: >-
            Required. Immutable. The resource name of the entity under which
            this `Group` resides in the Cloud Identity resource hierarchy. Must
            be of the form `identitysources/{identity_source}` for external
            [identity-mapped
            groups](https://support.google.com/a/answer/9039510) or
            `customers/{customer_id}` for Google Groups. The `customer_id` must
            begin with "C" (for example, 'C046psxkn'). [Find your customer ID.]
            (https://support.google.com/cloudidentity/answer/10070793)
          type: string
        displayName:
          description: The display name of the `Group`.
          type: string
        description:
          description: >-
            An extended description to help users determine the purpose of a
            `Group`. Must not be longer than 4,096 characters.
          type: string
        createTime:
          description: Output only. The time when the `Group` was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time when the `Group` was last updated.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: >-
            Required. One or more label entries that apply to the Group.
            Currently supported labels contain a key with an empty value. Google
            Groups are the default type of group and have a label with a key of
            `cloudidentity.googleapis.com/groups.discussion_forum` and an empty
            value. Existing Google Groups can have an additional label with a
            key of `cloudidentity.googleapis.com/groups.security` and an empty
            value added to them. **This is an immutable change and the security
            label cannot be removed once added.** Dynamic groups have a label
            with a key of `cloudidentity.googleapis.com/groups.dynamic`.
            Identity-mapped groups for Cloud Search have a label with a key of
            `system/groups/external` and an empty value.
          type: object
          additionalProperties:
            type: string
        dynamicGroupMetadata:
          description: Optional. Dynamic group metadata like queries and status.
          $ref: '#/components/schemas/DynamicGroupMetadata'
    EntityKey:
      id: EntityKey
      description: >-
        A unique identifier for an entity in the Cloud Identity Groups API. An
        entity can represent either a group with an optional `namespace` or a
        user without a `namespace`. The combination of `id` and `namespace` must
        be unique; however, the same `id` can be used with different
        `namespace`s.
      type: object
      properties:
        id:
          description: >-
            The ID of the entity. For Google-managed entities, the `id` should
            be the email address of an existing group or user. Email addresses
            need to adhere to [name guidelines for users and
            groups](https://support.google.com/a/answer/9193374). For
            external-identity-mapped entities, the `id` must be a string
            conforming to the Identity Source's requirements. Must be unique
            within a `namespace`.
          type: string
        namespace:
          description: >-
            The namespace in which the entity exists. If not specified, the
            `EntityKey` represents a Google-managed entity such as a Google user
            or a Google Group. If specified, the `EntityKey` represents an
            external-identity-mapped group. The namespace must correspond to an
            identity source created in Admin Console and must be in the form of
            `identitysources/{identity_source}`.
          type: string
    DynamicGroupMetadata:
      id: DynamicGroupMetadata
      description: Dynamic group metadata like queries and status.
      type: object
      properties:
        queries:
          description: >-
            Memberships will be the union of all queries. Only one entry with
            USER resource is currently supported. Customers can create up to 500
            dynamic groups.
          type: array
          items:
            $ref: '#/components/schemas/DynamicGroupQuery'
        status:
          description: Output only. Status of the dynamic group.
          readOnly: true
          $ref: '#/components/schemas/DynamicGroupStatus'
    DynamicGroupQuery:
      id: DynamicGroupQuery
      description: Defines a query on a resource.
      type: object
      properties:
        resourceType:
          description: Resource type for the Dynamic Group Query
          type: string
          enumDescriptions:
            - Default value (not valid)
            - For queries on User
          enum:
            - RESOURCE_TYPE_UNSPECIFIED
            - USER
        query:
          description: >-
            Query that determines the memberships of the dynamic group.
            Examples: All users with at least one `organizations.department` of
            engineering. `user.organizations.exists(org,
            org.department=='engineering')` All users with at least one location
            that has `area` of `foo` and `building_id` of `bar`.
            `user.locations.exists(loc, loc.area=='foo' &&
            loc.building_id=='bar')` All users with any variation of the name
            John Doe (case-insensitive queries add `equalsIgnoreCase()` to the
            value being queried). `user.name.value.equalsIgnoreCase('jOhn DoE')`
          type: string
    DynamicGroupStatus:
      id: DynamicGroupStatus
      description: The current status of a dynamic group along with timestamp.
      type: object
      properties:
        status:
          description: Status of the dynamic group.
          type: string
          enumDescriptions:
            - Default.
            - The dynamic group is up-to-date.
            - >-
              The dynamic group has just been created and memberships are being
              updated.
            - >-
              Group is in an unrecoverable state and its memberships can't be
              updated.
          enum:
            - STATUS_UNSPECIFIED
            - UP_TO_DATE
            - UPDATING_MEMBERSHIPS
            - INVALID_QUERY
        statusTime:
          description: >-
            The latest time at which the dynamic group is guaranteed to be in
            the given status. If status is `UP_TO_DATE`, the latest time at
            which the dynamic group was confirmed to be up-to-date. If status is
            `UPDATING_MEMBERSHIPS`, the time at which dynamic group was created.
          type: string
          format: google-datetime
    SecuritySettings:
      id: SecuritySettings
      description: The definition of security settings.
      type: object
      properties:
        name:
          description: >-
            Output only. The resource name of the security settings. Shall be of
            the form `groups/{group_id}/securitySettings`.
          readOnly: true
          type: string
        memberRestriction:
          description: The Member Restriction value
          $ref: '#/components/schemas/MemberRestriction'
    MemberRestriction:
      id: MemberRestriction
      description: The definition of MemberRestriction
      type: object
      properties:
        query:
          description: >-
            Member Restriction as defined by CEL expression. Supported
            restrictions are: `member.customer_id` and `member.type`. Valid
            values for `member.type` are `1`, `2` and `3`. They correspond to
            USER, SERVICE_ACCOUNT, and GROUP respectively. The value for
            `member.customer_id` only supports `groupCustomerId()` currently
            which means the customer id of the group will be used for
            restriction. Supported operators are `&&`, `||` and `==`,
            corresponding to AND, OR, and EQUAL. Examples: Allow only service
            accounts of given customer to be members. `member.type == 2 &&
            member.customer_id == groupCustomerId()` Allow only users or groups
            to be members. `member.type == 1 || member.type == 3`
          type: string
        evaluation:
          description: The evaluated state of this restriction on a group.
          $ref: '#/components/schemas/RestrictionEvaluation'
    RestrictionEvaluation:
      id: RestrictionEvaluation
      description: The evaluated state of this restriction.
      type: object
      properties:
        state:
          description: Output only. The current state of the restriction
          readOnly: true
          type: string
          enumDescriptions:
            - Default. Should not be used.
            - The restriction state is currently being evaluated.
            - All transitive memberships are adhering to restriction.
            - >-
              Some transitive memberships violate the restriction. No new
              violating memberships can be added.
            - >-
              Some transitive memberships violate the restriction. New violating
              direct memberships will be denied while indirect memberships may
              be added.
          enum:
            - STATE_UNSPECIFIED
            - EVALUATING
            - COMPLIANT
            - FORWARD_COMPLIANT
            - NON_COMPLIANT
    LookupGroupNameResponse:
      id: LookupGroupNameResponse
      description: The response message for GroupsService.LookupGroupName.
      type: object
      properties:
        name:
          description: >-
            The [resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            looked-up `Group`.
          type: string
    SearchGroupsResponse:
      id: SearchGroupsResponse
      description: The response message for GroupsService.SearchGroups.
      type: object
      properties:
        groups:
          description: The `Group` resources that match the search query.
          type: array
          items:
            $ref: '#/components/schemas/Group'
        nextPageToken:
          description: >-
            A continuation token to retrieve the next page of results, or empty
            if there are no more results available.
          type: string
    ListGroupsResponse:
      id: ListGroupsResponse
      description: Response message for ListGroups operation.
      type: object
      properties:
        groups:
          description: >-
            Groups returned in response to list request. The results are not
            sorted.
          type: array
          items:
            $ref: '#/components/schemas/Group'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results available for listing.
          type: string
    Membership:
      id: Membership
      description: >-
        A membership within the Cloud Identity Groups API. A `Membership`
        defines a relationship between a `Group` and an entity belonging to that
        `Group`, referred to as a "member".
      type: object
      properties:
        name:
          description: >-
            Output only. The [resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            `Membership`. Shall be of the form
            `groups/{group}/memberships/{membership}`.
          readOnly: true
          type: string
        preferredMemberKey:
          description: Required. Immutable. The `EntityKey` of the member.
          $ref: '#/components/schemas/EntityKey'
        createTime:
          description: Output only. The time when the `Membership` was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time when the `Membership` was last updated.
          readOnly: true
          type: string
          format: google-datetime
        roles:
          description: >-
            The `MembershipRole`s that apply to the `Membership`. If
            unspecified, defaults to a single `MembershipRole` with `name`
            `MEMBER`. Must not contain duplicate `MembershipRole`s with the same
            `name`.
          type: array
          items:
            $ref: '#/components/schemas/MembershipRole'
        type:
          description: Output only. The type of the membership.
          readOnly: true
          type: string
          enumDescriptions:
            - Default. Should not be used.
            - Represents user type.
            - Represents service account type.
            - Represents group type.
            - Represents Shared drive.
            - Represents a CBCM-managed Chrome Browser type.
            - Represents other type.
          enum:
            - TYPE_UNSPECIFIED
            - USER
            - SERVICE_ACCOUNT
            - GROUP
            - SHARED_DRIVE
            - CBCM_BROWSER
            - OTHER
        deliverySetting:
          description: Output only. Delivery setting associated with the membership.
          readOnly: true
          type: string
          enumDescriptions:
            - Default. Should not be used.
            - Represents each mail should be delivered
            - Represents 1 email for every 25 messages.
            - Represents daily summary of messages.
            - Represents no delivery.
            - Represents disabled state.
          enum:
            - DELIVERY_SETTING_UNSPECIFIED
            - ALL_MAIL
            - DIGEST
            - DAILY
            - NONE
            - DISABLED
    MembershipRole:
      id: MembershipRole
      description: >-
        A membership role within the Cloud Identity Groups API. A
        `MembershipRole` defines the privileges granted to a `Membership`.
      type: object
      properties:
        name:
          description: >-
            The name of the `MembershipRole`. Must be one of `OWNER`, `MANAGER`,
            `MEMBER`.
          type: string
        expiryDetail:
          description: >-
            The expiry details of the `MembershipRole`. Expiry details are only
            supported for `MEMBER` `MembershipRoles`. May be set if `name` is
            `MEMBER`. Must not be set if `name` is any other value.
          $ref: '#/components/schemas/ExpiryDetail'
        restrictionEvaluations:
          description: >-
            Evaluations of restrictions applied to parent group on this
            membership.
          $ref: '#/components/schemas/RestrictionEvaluations'
    ExpiryDetail:
      id: ExpiryDetail
      description: The `MembershipRole` expiry details.
      type: object
      properties:
        expireTime:
          description: The time at which the `MembershipRole` will expire.
          type: string
          format: google-datetime
    RestrictionEvaluations:
      id: RestrictionEvaluations
      description: Evaluations of restrictions applied to parent group on this membership.
      type: object
      properties:
        memberRestrictionEvaluation:
          description: >-
            Evaluation of the member restriction applied to this membership.
            Empty if the user lacks permission to view the restriction
            evaluation.
          $ref: '#/components/schemas/MembershipRoleRestrictionEvaluation'
    MembershipRoleRestrictionEvaluation:
      id: MembershipRoleRestrictionEvaluation
      description: The evaluated state of this restriction.
      type: object
      properties:
        state:
          description: Output only. The current state of the restriction
          readOnly: true
          type: string
          enumDescriptions:
            - Default. Should not be used.
            - The member adheres to the parent group's restriction.
            - >-
              The group-group membership might be currently violating some
              parent group's restriction but in future, it will never allow any
              new member in the child group which can violate parent group's
              restriction.
            - The member violates the parent group's restriction.
            - The state of the membership is under evaluation.
          enum:
            - STATE_UNSPECIFIED
            - COMPLIANT
            - FORWARD_COMPLIANT
            - NON_COMPLIANT
            - EVALUATING
    LookupMembershipNameResponse:
      id: LookupMembershipNameResponse
      description: The response message for MembershipsService.LookupMembershipName.
      type: object
      properties:
        name:
          description: >-
            The [resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            looked-up `Membership`. Must be of the form
            `groups/{group}/memberships/{membership}`.
          type: string
    ListMembershipsResponse:
      id: ListMembershipsResponse
      description: The response message for MembershipsService.ListMemberships.
      type: object
      properties:
        memberships:
          description: The `Membership`s under the specified `parent`.
          type: array
          items:
            $ref: '#/components/schemas/Membership'
        nextPageToken:
          description: >-
            A continuation token to retrieve the next page of results, or empty
            if there are no more results available.
          type: string
    ModifyMembershipRolesRequest:
      id: ModifyMembershipRolesRequest
      description: The request message for MembershipsService.ModifyMembershipRoles.
      type: object
      properties:
        addRoles:
          description: >-
            The `MembershipRole`s to be added. Adding or removing roles in the
            same request as updating roles is not supported. Must not be set if
            `update_roles_params` is set.
          type: array
          items:
            $ref: '#/components/schemas/MembershipRole'
        removeRoles:
          description: >-
            The `name`s of the `MembershipRole`s to be removed. Adding or
            removing roles in the same request as updating roles is not
            supported. It is not possible to remove the `MEMBER`
            `MembershipRole`. If you wish to delete a `Membership`, call
            MembershipsService.DeleteMembership instead. Must not contain
            `MEMBER`. Must not be set if `update_roles_params` is set.
          type: array
          items:
            type: string
        updateRolesParams:
          description: >-
            The `MembershipRole`s to be updated. Updating roles in the same
            request as adding or removing roles is not supported. Must not be
            set if either `add_roles` or `remove_roles` is set.
          type: array
          items:
            $ref: '#/components/schemas/UpdateMembershipRolesParams'
    UpdateMembershipRolesParams:
      id: UpdateMembershipRolesParams
      description: The details of an update to a `MembershipRole`.
      type: object
      properties:
        fieldMask:
          description: >-
            The fully-qualified names of fields to update. May only contain the
            field `expiry_detail.expire_time`.
          type: string
          format: google-fieldmask
        membershipRole:
          description: >-
            The `MembershipRole`s to be updated. Only `MEMBER` `MembershipRole`
            can currently be updated.
          $ref: '#/components/schemas/MembershipRole'
    ModifyMembershipRolesResponse:
      id: ModifyMembershipRolesResponse
      description: The response message for MembershipsService.ModifyMembershipRoles.
      type: object
      properties:
        membership:
          description: The `Membership` resource after modifying its `MembershipRole`s.
          $ref: '#/components/schemas/Membership'
    SearchTransitiveMembershipsResponse:
      id: SearchTransitiveMembershipsResponse
      description: The response message for MembershipsService.SearchTransitiveMemberships.
      type: object
      properties:
        memberships:
          description: List of transitive members satisfying the query.
          type: array
          items:
            $ref: '#/components/schemas/MemberRelation'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results.
          type: string
    MemberRelation:
      id: MemberRelation
      description: Message representing a transitive membership of a group.
      type: object
      properties:
        preferredMemberKey:
          description: >-
            Entity key has an id and a namespace. In case of discussion forums,
            the id will be an email address without a namespace.
          type: array
          items:
            $ref: '#/components/schemas/EntityKey'
        member:
          description: Resource name for this member.
          type: string
        roles:
          description: The membership role details (i.e name of role and expiry time).
          type: array
          items:
            $ref: '#/components/schemas/TransitiveMembershipRole'
        relationType:
          description: The relation between the group and the transitive member.
          type: string
          enumDescriptions:
            - The relation type is undefined or undetermined.
            - The two entities have only a direct membership with each other.
            - The two entities have only an indirect membership with each other.
            - >-
              The two entities have both a direct and an indirect membership
              with each other.
          enum:
            - RELATION_TYPE_UNSPECIFIED
            - DIRECT
            - INDIRECT
            - DIRECT_AND_INDIRECT
    TransitiveMembershipRole:
      id: TransitiveMembershipRole
      description: Message representing the role of a TransitiveMembership.
      type: object
      properties:
        role:
          description: >-
            TransitiveMembershipRole in string format. Currently supported
            TransitiveMembershipRoles: `"MEMBER"`, `"OWNER"`, and `"MANAGER"`.
          type: string
    SearchTransitiveGroupsResponse:
      id: SearchTransitiveGroupsResponse
      description: The response message for MembershipsService.SearchTransitiveGroups.
      type: object
      properties:
        memberships:
          description: List of transitive groups satisfying the query.
          type: array
          items:
            $ref: '#/components/schemas/GroupRelation'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results available for listing.
          type: string
    GroupRelation:
      id: GroupRelation
      description: Message representing a transitive group of a user or a group.
      type: object
      properties:
        groupKey:
          description: >-
            Entity key has an id and a namespace. In case of discussion forums,
            the id will be an email address without a namespace.
          $ref: '#/components/schemas/EntityKey'
        group:
          description: Resource name for this group.
          type: string
        displayName:
          description: Display name for this group.
          type: string
        roles:
          description: Membership roles of the member for the group.
          type: array
          items:
            $ref: '#/components/schemas/TransitiveMembershipRole'
        relationType:
          description: The relation between the member and the transitive group.
          type: string
          enumDescriptions:
            - The relation type is undefined or undetermined.
            - The two entities have only a direct membership with each other.
            - The two entities have only an indirect membership with each other.
            - >-
              The two entities have both a direct and an indirect membership
              with each other.
          enum:
            - RELATION_TYPE_UNSPECIFIED
            - DIRECT
            - INDIRECT
            - DIRECT_AND_INDIRECT
        labels:
          description: Labels for Group resource.
          type: object
          additionalProperties:
            type: string
    CheckTransitiveMembershipResponse:
      id: CheckTransitiveMembershipResponse
      description: The response message for MembershipsService.CheckTransitiveMembership.
      type: object
      properties:
        hasMembership:
          description: >-
            Response does not include the possible roles of a member since the
            behavior of this rpc is not all-or-nothing unlike the other rpcs.
            So, it may not be possible to list all the roles definitively, due
            to possible lack of authorization in some of the paths.
          type: boolean
    SearchDirectGroupsResponse:
      id: SearchDirectGroupsResponse
      description: The response message for MembershipsService.SearchDirectGroups.
      type: object
      properties:
        memberships:
          description: List of direct groups satisfying the query.
          type: array
          items:
            $ref: '#/components/schemas/MembershipRelation'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results available for listing.
          type: string
    MembershipRelation:
      id: MembershipRelation
      description: Message containing membership relation.
      type: object
      properties:
        membership:
          description: >-
            The [resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            `Membership`. Shall be of the form
            `groups/{group_id}/memberships/{membership_id}`.
          type: string
        roles:
          description: The `MembershipRole`s that apply to the `Membership`.
          type: array
          items:
            $ref: '#/components/schemas/MembershipRole'
        group:
          description: >-
            The [resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            `Group`. Shall be of the form `groups/{group_id}`.
          type: string
        groupKey:
          description: The `EntityKey` of the `Group`.
          $ref: '#/components/schemas/EntityKey'
        displayName:
          description: The display name of the `Group`.
          type: string
        labels:
          description: >-
            One or more label entries that apply to the Group. Currently
            supported labels contain a key with an empty value.
          type: object
          additionalProperties:
            type: string
        description:
          description: >-
            An extended description to help users determine the purpose of a
            `Group`.
          type: string
    InboundSamlSsoProfile:
      id: InboundSamlSsoProfile
      description: >-
        A [SAML 2.0](https://www.oasis-open.org/standards#samlv2.0) federation
        between a Google enterprise customer and a SAML identity provider.
      type: object
      properties:
        name:
          description: >-
            Output only. [Resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            SAML SSO profile.
          readOnly: true
          type: string
        customer:
          description: 'Immutable. The customer. For example: `customers/C0123abc`.'
          type: string
        displayName:
          description: Human-readable name of the SAML SSO profile.
          type: string
        idpConfig:
          description: SAML identity provider configuration.
          $ref: '#/components/schemas/SamlIdpConfig'
        spConfig:
          description: >-
            SAML service provider configuration for this SAML SSO profile. These
            are the service provider details provided by Google that should be
            configured on the corresponding identity provider.
          $ref: '#/components/schemas/SamlSpConfig'
    SamlIdpConfig:
      id: SamlIdpConfig
      description: SAML IDP (identity provider) configuration.
      type: object
      properties:
        entityId:
          description: Required. The SAML **Entity ID** of the identity provider.
          type: string
        singleSignOnServiceUri:
          description: >-
            Required. The `SingleSignOnService` endpoint location (sign-in page
            URL) of the identity provider. This is the URL where the
            `AuthnRequest` will be sent. Must use `HTTPS`. Assumed to accept the
            `HTTP-Redirect` binding.
          type: string
        logoutRedirectUri:
          description: >-
            The **Logout Redirect URL** (sign-out page URL) of the identity
            provider. When a user clicks the sign-out link on a Google page,
            they will be redirected to this URL. This is a pure redirect with no
            attached SAML `LogoutRequest` i.e. SAML single logout is not
            supported. Must use `HTTPS`.
          type: string
        changePasswordUri:
          description: >-
            The **Change Password URL** of the identity provider. Users will be
            sent to this URL when changing their passwords at
            `myaccount.google.com`. This takes precedence over the change
            password URL configured at customer-level. Must use `HTTPS`.
          type: string
    SamlSpConfig:
      id: SamlSpConfig
      description: SAML SP (service provider) configuration.
      type: object
      properties:
        entityId:
          description: Output only. The SAML **Entity ID** for this service provider.
          readOnly: true
          type: string
        assertionConsumerServiceUri:
          description: >-
            Output only. The SAML **Assertion Consumer Service (ACS) URL** to be
            used for the IDP-initiated login. Assumed to accept response
            messages via the `HTTP-POST` binding.
          readOnly: true
          type: string
    ListInboundSamlSsoProfilesResponse:
      id: ListInboundSamlSsoProfilesResponse
      description: >-
        Response of the InboundSamlSsoProfilesService.ListInboundSamlSsoProfiles
        method.
      type: object
      properties:
        inboundSamlSsoProfiles:
          description: List of InboundSamlSsoProfiles.
          type: array
          items:
            $ref: '#/components/schemas/InboundSamlSsoProfile'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    IdpCredential:
      id: IdpCredential
      description: Credential for verifying signatures produced by the Identity Provider.
      type: object
      properties:
        rsaKeyInfo:
          description: Output only. Information of a RSA public key.
          readOnly: true
          $ref: '#/components/schemas/RsaPublicKeyInfo'
        dsaKeyInfo:
          description: Output only. Information of a DSA public key.
          readOnly: true
          $ref: '#/components/schemas/DsaPublicKeyInfo'
        name:
          description: >-
            Output only. [Resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            credential.
          readOnly: true
          type: string
        updateTime:
          description: Output only. Time when the `IdpCredential` was last updated.
          readOnly: true
          type: string
          format: google-datetime
    RsaPublicKeyInfo:
      id: RsaPublicKeyInfo
      description: Information of a RSA public key.
      type: object
      properties:
        keySize:
          description: Key size in bits (size of the modulus).
          type: integer
          format: int32
    DsaPublicKeyInfo:
      id: DsaPublicKeyInfo
      description: Information of a DSA public key.
      type: object
      properties:
        keySize:
          description: Key size in bits (size of parameter P).
          type: integer
          format: int32
    ListIdpCredentialsResponse:
      id: ListIdpCredentialsResponse
      description: Response of the InboundSamlSsoProfilesService.ListIdpCredentials method.
      type: object
      properties:
        idpCredentials:
          description: The IdpCredentials from the specified InboundSamlSsoProfile.
          type: array
          items:
            $ref: '#/components/schemas/IdpCredential'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    AddIdpCredentialRequest:
      id: AddIdpCredentialRequest
      description: >-
        The request for creating an IdpCredential with its associated payload.
        An InboundSamlSsoProfile can own up to 2 credentials.
      type: object
      properties:
        pemData:
          description: >-
            PEM encoded x509 certificate containing the public key for verifying
            IdP signatures.
          type: string
    InboundSsoAssignment:
      id: InboundSsoAssignment
      description: Targets with "set" SSO assignments and their respective assignments.
      type: object
      properties:
        targetGroup:
          description: Immutable. Must be of the form `groups/{group}`.
          type: string
        targetOrgUnit:
          description: Immutable. Must be of the form `orgUnits/{org_unit}`.
          type: string
        name:
          description: >-
            Output only. [Resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            Inbound SSO Assignment.
          readOnly: true
          type: string
        customer:
          description: 'Immutable. The customer. For example: `customers/C0123abc`.'
          type: string
        rank:
          description: >-
            Must be zero (which is the default value so it can be omitted) for
            assignments with `target_org_unit` set and must be
            greater-than-or-equal-to one for assignments with `target_group`
            set.
          type: integer
          format: int32
        ssoMode:
          description: Inbound SSO behavior.
          type: string
          enumDescriptions:
            - Not allowed.
            - Disable SSO for the targeted users.
            - >-
              Use an external SAML Identity Provider for SSO for the targeted
              users.
            - >-
              Use the domain-wide SAML Identity Provider for the targeted users
              if one is configured; otherwise, this is equivalent to `SSO_OFF`.
              Note that this will also be equivalent to `SSO_OFF` if/when
              support for domain-wide SAML is removed. Google may disallow this
              mode at that point and existing assignments with this mode may be
              automatically changed to `SSO_OFF`.
          enum:
            - SSO_MODE_UNSPECIFIED
            - SSO_OFF
            - SAML_SSO
            - DOMAIN_WIDE_SAML_IF_ENABLED
        samlSsoInfo:
          description: >-
            SAML SSO details. Must be set if and only if `sso_mode` is set to
            `SAML_SSO`.
          $ref: '#/components/schemas/SamlSsoInfo'
        signInBehavior:
          description: >-
            Assertions about users assigned to an IdP will always be accepted
            from that IdP. This controls whether/when Google should redirect a
            user to the IdP. Unset (defaults) is the recommended configuration.
          $ref: '#/components/schemas/SignInBehavior'
    SamlSsoInfo:
      id: SamlSsoInfo
      description: Details that are applicable when `sso_mode` == `SAML_SSO`.
      type: object
      properties:
        inboundSamlSsoProfile:
          description: >-
            Required. Name of the `InboundSamlSsoProfile` to use. Must be of the
            form `inboundSamlSsoProfiles/{inbound_saml_sso_profile}`. 
          type: string
    SignInBehavior:
      id: SignInBehavior
      description: Controls sign-in behavior.
      type: object
      properties:
        redirectCondition:
          description: When to redirect sign-ins to the IdP.
          type: string
          enumDescriptions:
            - Default and means "always"
            - >-
              Sign-in flows where the user is prompted for their identity will
              not redirect to the IdP (so the user will most likely be prompted
              by Google for a password), but special flows like IdP-initiated
              SAML and sign-in following automatic redirection to the IdP by
              domain-specific service URLs will accept the IdP's assertion of
              the user's identity.
          enum:
            - REDIRECT_CONDITION_UNSPECIFIED
            - NEVER
    ListInboundSsoAssignmentsResponse:
      id: ListInboundSsoAssignmentsResponse
      description: >-
        Response of the InboundSsoAssignmentsService.ListInboundSsoAssignments
        method.
      type: object
      properties:
        inboundSsoAssignments:
          description: The assignments.
          type: array
          items:
            $ref: '#/components/schemas/InboundSsoAssignment'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    UserInvitation:
      id: UserInvitation
      description: >-
        The `UserInvitation` resource represents an email that can be sent to an
        unmanaged user account inviting them to join the customer's Google
        Workspace or Cloud Identity account. An unmanaged account shares an
        email address domain with the Google Workspace or Cloud Identity account
        but is not managed by it yet. If the user accepts the `UserInvitation`,
        the user account will become managed.
      type: object
      properties:
        name:
          description: >-
            Shall be of the form
            `customers/{customer}/userinvitations/{user_email_address}`.
          type: string
        state:
          description: State of the `UserInvitation`.
          type: string
          enumDescriptions:
            - The default value. This value is used if the state is omitted.
            - >-
              The `UserInvitation` has been created and is ready for sending as
              an email.
            - The user has been invited by email.
            - >-
              The user has accepted the invitation and is part of the
              organization.
            - The user declined the invitation.
          enum:
            - STATE_UNSPECIFIED
            - NOT_YET_SENT
            - INVITED
            - ACCEPTED
            - DECLINED
        mailsSentCount:
          description: Number of invitation emails sent to the user.
          type: string
          format: int64
        updateTime:
          description: Time when the `UserInvitation` was last updated.
          type: string
          format: google-datetime
    ListUserInvitationsResponse:
      id: ListUserInvitationsResponse
      description: Response message for UserInvitation listing request.
      type: object
      properties:
        userInvitations:
          description: The list of UserInvitation resources.
          type: array
          items:
            $ref: '#/components/schemas/UserInvitation'
        nextPageToken:
          description: >-
            The token for the next page. If not empty, indicates that there may
            be more `UserInvitation` resources that match the listing request;
            this value can be used in a subsequent ListUserInvitationsRequest to
            get continued results with the current list call.
          type: string
    SendUserInvitationRequest:
      id: SendUserInvitationRequest
      description: >-
        A request to send email for inviting target user corresponding to the
        UserInvitation.
      type: object
      properties: {}
    CancelUserInvitationRequest:
      id: CancelUserInvitationRequest
      description: Request to cancel sent invitation for target email in UserInvitation.
      type: object
      properties: {}
    IsInvitableUserResponse:
      id: IsInvitableUserResponse
      description: Response for IsInvitableUser RPC.
      type: object
      properties:
        isInvitableUser:
          description: Returns true if the email address is invitable.
          type: boolean
    GetMembershipGraphResponse:
      id: GetMembershipGraphResponse
      description: The response message for MembershipsService.GetMembershipGraph.
      type: object
      properties:
        adjacencyList:
          description: >-
            The membership graph's path information represented as an adjacency
            list.
          type: array
          items:
            $ref: '#/components/schemas/MembershipAdjacencyList'
        groups:
          description: >-
            The resources representing each group in the adjacency list. Each
            group in this list can be correlated to a 'group' of the
            MembershipAdjacencyList using the 'name' of the Group resource.
          type: array
          items:
            $ref: '#/components/schemas/Group'
    MembershipAdjacencyList:
      id: MembershipAdjacencyList
      description: Membership graph's path information as an adjacency list.
      type: object
      properties:
        group:
          description: Resource name of the group that the members belong to.
          type: string
        edges:
          description: >-
            Each edge contains information about the member that belongs to this
            group. Note: Fields returned here will help identify the specific
            Membership resource (e.g name, preferred_member_key and role), but
            may not be a comprehensive list of all fields.
          type: array
          items:
            $ref: '#/components/schemas/Membership'
    GoogleAppsCloudidentityDevicesV1ApproveDeviceUserResponse:
      id: GoogleAppsCloudidentityDevicesV1ApproveDeviceUserResponse
      description: Response message for approving the device to access user data.
      type: object
      properties:
        deviceUser:
          description: Resultant DeviceUser object for the action.
          $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1DeviceUser'
    GoogleAppsCloudidentityDevicesV1BlockDeviceUserResponse:
      id: GoogleAppsCloudidentityDevicesV1BlockDeviceUserResponse
      description: Response message for blocking the device from accessing user data.
      type: object
      properties:
        deviceUser:
          description: Resultant DeviceUser object for the action.
          $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1DeviceUser'
    GoogleAppsCloudidentityDevicesV1WipeDeviceUserResponse:
      id: GoogleAppsCloudidentityDevicesV1WipeDeviceUserResponse
      description: Response message for wiping the user's account from the device.
      type: object
      properties:
        deviceUser:
          description: Resultant DeviceUser object for the action.
          $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1DeviceUser'
    GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserResponse:
      id: GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserResponse
      description: Response message for cancelling an unfinished user account wipe.
      type: object
      properties:
        deviceUser:
          description: Resultant DeviceUser object for the action.
          $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1DeviceUser'
    GoogleAppsCloudidentityDevicesV1WipeDeviceResponse:
      id: GoogleAppsCloudidentityDevicesV1WipeDeviceResponse
      description: Response message for wiping all data on the device.
      type: object
      properties:
        device:
          description: >-
            Resultant Device object for the action. Note that asset tags will
            not be returned in the device object.
          $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1Device'
    GoogleAppsCloudidentityDevicesV1CancelWipeDeviceResponse:
      id: GoogleAppsCloudidentityDevicesV1CancelWipeDeviceResponse
      description: Response message for cancelling an unfinished device wipe.
      type: object
      properties:
        device:
          description: >-
            Resultant Device object for the action. Note that asset tags will
            not be returned in the device object.
          $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1Device'
    GoogleAppsCloudidentityDevicesV1CreateDeviceMetadata:
      id: GoogleAppsCloudidentityDevicesV1CreateDeviceMetadata
      description: Metadata for CreateDevice LRO.
      type: object
      properties: {}
    GoogleAppsCloudidentityDevicesV1DeleteDeviceMetadata:
      id: GoogleAppsCloudidentityDevicesV1DeleteDeviceMetadata
      description: Metadata for DeleteDevice LRO.
      type: object
      properties: {}
    GoogleAppsCloudidentityDevicesV1UpdateDeviceMetadata:
      id: GoogleAppsCloudidentityDevicesV1UpdateDeviceMetadata
      description: Metadata for UpdateDevice LRO.
      type: object
      properties: {}
    GoogleAppsCloudidentityDevicesV1WipeDeviceMetadata:
      id: GoogleAppsCloudidentityDevicesV1WipeDeviceMetadata
      description: Metadata for WipeDevice LRO.
      type: object
      properties: {}
    GoogleAppsCloudidentityDevicesV1CancelWipeDeviceMetadata:
      id: GoogleAppsCloudidentityDevicesV1CancelWipeDeviceMetadata
      description: Metadata for CancelWipeDevice LRO.
      type: object
      properties: {}
    GoogleAppsCloudidentityDevicesV1DeleteDeviceUserMetadata:
      id: GoogleAppsCloudidentityDevicesV1DeleteDeviceUserMetadata
      description: Metadata for DeleteDeviceUser LRO.
      type: object
      properties: {}
    GoogleAppsCloudidentityDevicesV1ApproveDeviceUserMetadata:
      id: GoogleAppsCloudidentityDevicesV1ApproveDeviceUserMetadata
      description: Metadata for ApproveDeviceUser LRO.
      type: object
      properties: {}
    GoogleAppsCloudidentityDevicesV1SignoutDeviceUserMetadata:
      id: GoogleAppsCloudidentityDevicesV1SignoutDeviceUserMetadata
      description: Metadata for SignoutDeviceUser LRO.
      type: object
      properties: {}
    GoogleAppsCloudidentityDevicesV1BlockDeviceUserMetadata:
      id: GoogleAppsCloudidentityDevicesV1BlockDeviceUserMetadata
      description: Metadata for BlockDeviceUser LRO.
      type: object
      properties: {}
    GoogleAppsCloudidentityDevicesV1WipeDeviceUserMetadata:
      id: GoogleAppsCloudidentityDevicesV1WipeDeviceUserMetadata
      description: Metadata for WipeDeviceUser LRO.
      type: object
      properties: {}
    GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserMetadata:
      id: GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserMetadata
      description: Metadata for CancelWipeDeviceUser LRO.
      type: object
      properties: {}
    GoogleAppsCloudidentityDevicesV1ListEndpointAppsMetadata:
      id: GoogleAppsCloudidentityDevicesV1ListEndpointAppsMetadata
      description: Metadata for ListEndpointApps LRO.
      type: object
      properties: {}
    GoogleAppsCloudidentityDevicesV1UpdateClientStateMetadata:
      id: GoogleAppsCloudidentityDevicesV1UpdateClientStateMetadata
      description: Metadata for UpdateClientState LRO.
      type: object
      properties: {}
    CreateGroupMetadata:
      id: CreateGroupMetadata
      description: Metadata for CreateGroup LRO.
      type: object
      properties: {}
    DeleteGroupMetadata:
      id: DeleteGroupMetadata
      description: Metadata for DeleteGroup LRO.
      type: object
      properties: {}
    UpdateGroupMetadata:
      id: UpdateGroupMetadata
      description: Metadata for UpdateGroup LRO.
      type: object
      properties: {}
    CreateMembershipMetadata:
      id: CreateMembershipMetadata
      description: Metadata for CreateMembership LRO.
      type: object
      properties: {}
    DeleteMembershipMetadata:
      id: DeleteMembershipMetadata
      description: Metadata for DeleteMembership LRO.
      type: object
      properties: {}
    UpdateMembershipMetadata:
      id: UpdateMembershipMetadata
      description: Metadata for UpdateMembership LRO.
      type: object
      properties: {}
    GetMembershipGraphMetadata:
      id: GetMembershipGraphMetadata
      description: >-
        Metadata of GetMembershipGraphResponse LRO. This is currently empty to
        permit future extensibility.
      type: object
      properties: {}
    AddIdpCredentialOperationMetadata:
      id: AddIdpCredentialOperationMetadata
      description: >-
        LRO response metadata for
        InboundSamlSsoProfilesService.AddIdpCredential.
      type: object
      properties:
        state:
          description: >-
            State of this Operation Will be "awaiting-multi-party-approval" when
            the operation is deferred due to the target customer having enabled
            [Multi-party approval for sensitive
            actions](https://support.google.com/a/answer/13790448).
          type: string
    CreateInboundSamlSsoProfileOperationMetadata:
      id: CreateInboundSamlSsoProfileOperationMetadata
      description: >-
        LRO response metadata for
        InboundSamlSsoProfilesService.CreateInboundSamlSsoProfile.
      type: object
      properties:
        state:
          description: >-
            State of this Operation Will be "awaiting-multi-party-approval" when
            the operation is deferred due to the target customer having enabled
            [Multi-party approval for sensitive
            actions](https://support.google.com/a/answer/13790448).
          type: string
    DeleteIdpCredentialOperationMetadata:
      id: DeleteIdpCredentialOperationMetadata
      description: >-
        LRO response metadata for
        InboundSamlSsoProfilesService.DeleteIdpCredential.
      type: object
      properties: {}
    DeleteInboundSamlSsoProfileOperationMetadata:
      id: DeleteInboundSamlSsoProfileOperationMetadata
      description: >-
        LRO response metadata for
        InboundSamlSsoProfilesService.DeleteInboundSamlSsoProfile.
      type: object
      properties: {}
    UpdateInboundSamlSsoProfileOperationMetadata:
      id: UpdateInboundSamlSsoProfileOperationMetadata
      description: >-
        LRO response metadata for
        InboundSamlSsoProfilesService.UpdateInboundSamlSsoProfile.
      type: object
      properties:
        state:
          description: >-
            State of this Operation Will be "awaiting-multi-party-approval" when
            the operation is deferred due to the target customer having enabled
            [Multi-party approval for sensitive
            actions](https://support.google.com/a/answer/13790448).
          type: string
    CreateInboundSsoAssignmentOperationMetadata:
      id: CreateInboundSsoAssignmentOperationMetadata
      description: >-
        LRO response metadata for
        InboundSsoAssignmentsService.CreateInboundSsoAssignment.
      type: object
      properties: {}
    DeleteInboundSsoAssignmentOperationMetadata:
      id: DeleteInboundSsoAssignmentOperationMetadata
      description: >-
        LRO response metadata for
        InboundSsoAssignmentsService.DeleteInboundSsoAssignment.
      type: object
      properties: {}
    UpdateInboundSsoAssignmentOperationMetadata:
      id: UpdateInboundSsoAssignmentOperationMetadata
      description: >-
        LRO response metadata for
        InboundSsoAssignmentsService.UpdateInboundSsoAssignment.
      type: object
      properties: {}
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    devices:
      id: google.cloudidentity.devices
      name: devices
      title: Devices
      methods:
        create:
          operation:
            $ref: '#/paths/~1v1~1devices/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1devices/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.devices
        get:
          operation:
            $ref: '#/paths/~1v1~1devices~1{devicesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1devices~1{devicesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        wipe:
          operation:
            $ref: '#/paths/~1v1~1devices~1{devicesId}:wipe/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel_wipe:
          operation:
            $ref: '#/paths/~1v1~1devices~1{devicesId}:cancelWipe/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/devices/methods/get'
          - $ref: '#/components/x-stackQL-resources/devices/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/devices/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/devices/methods/delete'
    device_users:
      id: google.cloudidentity.device_users
      name: device_users
      title: Device_users
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1devices~1{devicesId}~1deviceUsers~1{deviceUsersId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1devices~1{devicesId}~1deviceUsers~1{deviceUsersId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1devices~1{devicesId}~1deviceUsers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.deviceUsers
        lookup:
          operation:
            $ref: '#/paths/~1v1~1devices~1{devicesId}~1deviceUsers:lookup/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        approve:
          operation:
            $ref: >-
              #/paths/~1v1~1devices~1{devicesId}~1deviceUsers~1{deviceUsersId}:approve/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        block:
          operation:
            $ref: >-
              #/paths/~1v1~1devices~1{devicesId}~1deviceUsers~1{deviceUsersId}:block/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        wipe:
          operation:
            $ref: >-
              #/paths/~1v1~1devices~1{devicesId}~1deviceUsers~1{deviceUsersId}:wipe/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel_wipe:
          operation:
            $ref: >-
              #/paths/~1v1~1devices~1{devicesId}~1deviceUsers~1{deviceUsersId}:cancelWipe/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/device_users/methods/get'
          - $ref: '#/components/x-stackQL-resources/device_users/methods/list'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/device_users/methods/delete'
    client_states:
      id: google.cloudidentity.client_states
      name: client_states
      title: Client_states
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1devices~1{devicesId}~1deviceUsers~1{deviceUsersId}~1clientStates~1{clientStatesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1devices~1{devicesId}~1deviceUsers~1{deviceUsersId}~1clientStates~1{clientStatesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1devices~1{devicesId}~1deviceUsers~1{deviceUsersId}~1clientStates/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.clientStates
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/client_states/methods/get'
          - $ref: '#/components/x-stackQL-resources/client_states/methods/list'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/client_states/methods/patch'
        replace: []
        delete: []
    groups:
      id: google.cloudidentity.groups
      name: groups
      title: Groups
      methods:
        create:
          operation:
            $ref: '#/paths/~1v1~1groups/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1groups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.groups
        get:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        lookup:
          operation:
            $ref: '#/paths/~1v1~1groups:lookup/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        search:
          operation:
            $ref: '#/paths/~1v1~1groups:search/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/groups/methods/get'
          - $ref: '#/components/x-stackQL-resources/groups/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/groups/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/groups/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/groups/methods/delete'
    groups_security_settings:
      id: google.cloudidentity.groups_security_settings
      name: groups_security_settings
      title: Groups_security_settings
      methods:
        get_security_settings:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}~1securitySettings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_security_settings:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}~1securitySettings/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/groups_security_settings/methods/get_security_settings
        insert: []
        update:
          - $ref: >-
              #/components/x-stackQL-resources/groups_security_settings/methods/update_security_settings
        replace: []
        delete: []
    memberships:
      id: google.cloudidentity.memberships
      name: memberships
      title: Memberships
      methods:
        create:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}~1memberships/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}~1memberships/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.memberships
        get:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}~1memberships~1{membershipsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1groups~1{groupsId}~1memberships~1{membershipsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        lookup:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}~1memberships:lookup/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        modify_membership_roles:
          operation:
            $ref: >-
              #/paths/~1v1~1groups~1{groupsId}~1memberships~1{membershipsId}:modifyMembershipRoles/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        search_transitive_memberships:
          operation:
            $ref: >-
              #/paths/~1v1~1groups~1{groupsId}~1memberships:searchTransitiveMemberships/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        search_transitive_groups:
          operation:
            $ref: >-
              #/paths/~1v1~1groups~1{groupsId}~1memberships:searchTransitiveGroups/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        check_transitive_membership:
          operation:
            $ref: >-
              #/paths/~1v1~1groups~1{groupsId}~1memberships:checkTransitiveMembership/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        search_direct_groups:
          operation:
            $ref: >-
              #/paths/~1v1~1groups~1{groupsId}~1memberships:searchDirectGroups/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/memberships/methods/get'
          - $ref: '#/components/x-stackQL-resources/memberships/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/memberships/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/memberships/methods/delete'
    memberships_membership_graph:
      id: google.cloudidentity.memberships_membership_graph
      name: memberships_membership_graph
      title: Memberships_membership_graph
      methods:
        get_membership_graph:
          operation:
            $ref: >-
              #/paths/~1v1~1groups~1{groupsId}~1memberships:getMembershipGraph/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/memberships_membership_graph/methods/get_membership_graph
        insert: []
        update: []
        replace: []
        delete: []
    inbound_saml_sso_profiles:
      id: google.cloudidentity.inbound_saml_sso_profiles
      name: inbound_saml_sso_profiles
      title: Inbound_saml_sso_profiles
      methods:
        create:
          operation:
            $ref: '#/paths/~1v1~1inboundSamlSsoProfiles/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1inboundSamlSsoProfiles/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.inboundSamlSsoProfiles
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1inboundSamlSsoProfiles~1{inboundSamlSsoProfilesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1inboundSamlSsoProfiles~1{inboundSamlSsoProfilesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1inboundSamlSsoProfiles~1{inboundSamlSsoProfilesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/inbound_saml_sso_profiles/methods/get
          - $ref: >-
              #/components/x-stackQL-resources/inbound_saml_sso_profiles/methods/list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/inbound_saml_sso_profiles/methods/create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/inbound_saml_sso_profiles/methods/patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/inbound_saml_sso_profiles/methods/delete
    idp_credentials:
      id: google.cloudidentity.idp_credentials
      name: idp_credentials
      title: Idp_credentials
      methods:
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1inboundSamlSsoProfiles~1{inboundSamlSsoProfilesId}~1idpCredentials~1{idpCredentialsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1inboundSamlSsoProfiles~1{inboundSamlSsoProfilesId}~1idpCredentials~1{idpCredentialsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1inboundSamlSsoProfiles~1{inboundSamlSsoProfilesId}~1idpCredentials/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.idpCredentials
        add:
          operation:
            $ref: >-
              #/paths/~1v1~1inboundSamlSsoProfiles~1{inboundSamlSsoProfilesId}~1idpCredentials:add/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/idp_credentials/methods/get'
          - $ref: '#/components/x-stackQL-resources/idp_credentials/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/idp_credentials/methods/add'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/idp_credentials/methods/delete'
    inbound_sso_assignments:
      id: google.cloudidentity.inbound_sso_assignments
      name: inbound_sso_assignments
      title: Inbound_sso_assignments
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1inboundSsoAssignments~1{inboundSsoAssignmentsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1inboundSsoAssignments~1{inboundSsoAssignmentsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1inboundSsoAssignments~1{inboundSsoAssignmentsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1inboundSsoAssignments/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1inboundSsoAssignments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.inboundSsoAssignments
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/inbound_sso_assignments/methods/get
          - $ref: >-
              #/components/x-stackQL-resources/inbound_sso_assignments/methods/list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/inbound_sso_assignments/methods/create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/inbound_sso_assignments/methods/patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/inbound_sso_assignments/methods/delete
    userinvitations:
      id: google.cloudidentity.userinvitations
      name: userinvitations
      title: Userinvitations
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1customers~1{customersId}~1userinvitations~1{userinvitationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1customers~1{customersId}~1userinvitations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.userInvitations
        send:
          operation:
            $ref: >-
              #/paths/~1v1~1customers~1{customersId}~1userinvitations~1{userinvitationsId}:send/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1customers~1{customersId}~1userinvitations~1{userinvitationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        is_invitable_user:
          operation:
            $ref: >-
              #/paths/~1v1~1customers~1{customersId}~1userinvitations~1{userinvitationsId}:isInvitableUser/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/userinvitations/methods/get'
          - $ref: '#/components/x-stackQL-resources/userinvitations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
paths:
  /v1/devices:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    post:
      description: >-
        Creates a device. Only company-owned device may be created. **Note**:
        This method is available only to customers who have one of the following
        SKUs: Enterprise Standard, Enterprise Plus, Enterprise for Education,
        and Cloud Identity Premium
      operationId: cloudidentity.devices.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1Device'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: query
          name: customer
          schema:
            type: string
    get:
      description: Lists/Searches devices.
      operationId: cloudidentity.devices.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleAppsCloudidentityDevicesV1ListDevicesResponse
      parameters:
        - in: query
          name: customer
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
  /v1/devices/{devicesId}:
    parameters: *ref_1
    get:
      description: Retrieves the specified device.
      operationId: cloudidentity.devices.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1Device'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: query
          name: customer
          schema:
            type: string
    delete:
      description: Deletes the specified device.
      operationId: cloudidentity.devices.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: query
          name: customer
          schema:
            type: string
  /v1/devices/{devicesId}:wipe:
    parameters: *ref_1
    post:
      description: Wipes all data on the specified device.
      operationId: cloudidentity.devices.wipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleAppsCloudidentityDevicesV1WipeDeviceRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
  /v1/devices/{devicesId}:cancelWipe:
    parameters: *ref_1
    post:
      description: >-
        Cancels an unfinished device wipe. This operation can be used to cancel
        device wipe in the gap between the wipe operation returning success and
        the device being wiped. This operation is possible when the device is in
        a "pending wipe" state. The device enters the "pending wipe" state when
        a wipe device command is issued, but has not yet been sent to the
        device. The cancel wipe will fail if the wipe command has already been
        issued to the device.
      operationId: cloudidentity.devices.cancelWipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleAppsCloudidentityDevicesV1CancelWipeDeviceRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
  /v1/devices/{devicesId}/deviceUsers/{deviceUsersId}:
    parameters: *ref_1
    get:
      description: Retrieves the specified DeviceUser
      operationId: cloudidentity.devices.deviceUsers.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleAppsCloudidentityDevicesV1DeviceUser
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: path
          name: deviceUsersId
          required: true
          schema:
            type: string
        - in: query
          name: customer
          schema:
            type: string
    delete:
      description: >-
        Deletes the specified DeviceUser. This also revokes the user's access to
        device data.
      operationId: cloudidentity.devices.deviceUsers.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: path
          name: deviceUsersId
          required: true
          schema:
            type: string
        - in: query
          name: customer
          schema:
            type: string
  /v1/devices/{devicesId}/deviceUsers:
    parameters: *ref_1
    get:
      description: Lists/Searches DeviceUsers.
      operationId: cloudidentity.devices.deviceUsers.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleAppsCloudidentityDevicesV1ListDeviceUsersResponse
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: query
          name: customer
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/devices/{devicesId}/deviceUsers:lookup:
    parameters: *ref_1
    get:
      description: >-
        Looks up resource names of the DeviceUsers associated with the caller's
        credentials, as well as the properties provided in the request. This
        method must be called with end-user credentials with the scope:
        https://www.googleapis.com/auth/cloud-identity.devices.lookup If
        multiple properties are provided, only DeviceUsers having all of these
        properties are considered as matches - i.e. the query behaves like an
        AND. Different platforms require different amounts of information from
        the caller to ensure that the DeviceUser is uniquely identified. - iOS:
        No properties need to be passed, the caller's credentials are sufficient
        to identify the corresponding DeviceUser. - Android: Specifying the
        'android_id' field is required. - Desktop: Specifying the
        'raw_resource_id' field is required.
      operationId: cloudidentity.devices.deviceUsers.lookup
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices.lookup
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices.lookup
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleAppsCloudidentityDevicesV1LookupSelfDeviceUsersResponse
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: androidId
          schema:
            type: string
        - in: query
          name: rawResourceId
          schema:
            type: string
        - in: query
          name: userId
          schema:
            type: string
  /v1/devices/{devicesId}/deviceUsers/{deviceUsersId}:approve:
    parameters: *ref_1
    post:
      description: Approves device to access user data.
      operationId: cloudidentity.devices.deviceUsers.approve
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleAppsCloudidentityDevicesV1ApproveDeviceUserRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: path
          name: deviceUsersId
          required: true
          schema:
            type: string
  /v1/devices/{devicesId}/deviceUsers/{deviceUsersId}:block:
    parameters: *ref_1
    post:
      description: Blocks device from accessing user data
      operationId: cloudidentity.devices.deviceUsers.block
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleAppsCloudidentityDevicesV1BlockDeviceUserRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: path
          name: deviceUsersId
          required: true
          schema:
            type: string
  /v1/devices/{devicesId}/deviceUsers/{deviceUsersId}:wipe:
    parameters: *ref_1
    post:
      description: >-
        Wipes the user's account on a device. Other data on the device that is
        not associated with the user's work account is not affected. For
        example, if a Gmail app is installed on a device that is used for
        personal and work purposes, and the user is logged in to the Gmail app
        with their personal account as well as their work account, wiping the
        "deviceUser" by their work administrator will not affect their personal
        account within Gmail or other apps such as Photos.
      operationId: cloudidentity.devices.deviceUsers.wipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleAppsCloudidentityDevicesV1WipeDeviceUserRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: path
          name: deviceUsersId
          required: true
          schema:
            type: string
  /v1/devices/{devicesId}/deviceUsers/{deviceUsersId}:cancelWipe:
    parameters: *ref_1
    post:
      description: >-
        Cancels an unfinished user account wipe. This operation can be used to
        cancel device wipe in the gap between the wipe operation returning
        success and the device being wiped.
      operationId: cloudidentity.devices.deviceUsers.cancelWipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: path
          name: deviceUsersId
          required: true
          schema:
            type: string
  /v1/devices/{devicesId}/deviceUsers/{deviceUsersId}/clientStates/{clientStatesId}:
    parameters: *ref_1
    get:
      description: Gets the client state for the device user
      operationId: cloudidentity.devices.deviceUsers.clientStates.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleAppsCloudidentityDevicesV1ClientState
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: path
          name: deviceUsersId
          required: true
          schema:
            type: string
        - in: path
          name: clientStatesId
          required: true
          schema:
            type: string
        - in: query
          name: customer
          schema:
            type: string
    patch:
      description: >-
        Updates the client state for the device user **Note**: This method is
        available only to customers who have one of the following SKUs:
        Enterprise Standard, Enterprise Plus, Enterprise for Education, and
        Cloud Identity Premium
      operationId: cloudidentity.devices.deviceUsers.clientStates.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1ClientState'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: path
          name: deviceUsersId
          required: true
          schema:
            type: string
        - in: path
          name: clientStatesId
          required: true
          schema:
            type: string
        - in: query
          name: customer
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/devices/{devicesId}/deviceUsers/{deviceUsersId}/clientStates:
    parameters: *ref_1
    get:
      description: Lists the client states for the given search query.
      operationId: cloudidentity.devices.deviceUsers.clientStates.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleAppsCloudidentityDevicesV1ListClientStatesResponse
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: path
          name: deviceUsersId
          required: true
          schema:
            type: string
        - in: query
          name: customer
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/groups:
    parameters: *ref_1
    post:
      description: Creates a Group.
      operationId: cloudidentity.groups.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: query
          name: initialGroupConfig
          schema:
            type: string
    get:
      description: Lists the `Group` resources under a customer or namespace.
      operationId: cloudidentity.groups.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGroupsResponse'
      parameters:
        - in: query
          name: parent
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/groups/{groupsId}:
    parameters: *ref_1
    get:
      description: Retrieves a `Group`.
      operationId: cloudidentity.groups.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
    patch:
      description: Updates a `Group`.
      operationId: cloudidentity.groups.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a `Group`.
      operationId: cloudidentity.groups.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
  /v1/groups/{groupsId}/securitySettings:
    parameters: *ref_1
    get:
      description: Get Security Settings
      operationId: cloudidentity.groups.getSecuritySettings
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecuritySettings'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
            format: google-fieldmask
    patch:
      description: Update Security Settings
      operationId: cloudidentity.groups.updateSecuritySettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecuritySettings'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/groups:lookup:
    parameters: *ref_1
    get:
      description: >-
        Looks up the [resource
        name](https://cloud.google.com/apis/design/resource_names) of a `Group`
        by its `EntityKey`.
      operationId: cloudidentity.groups.lookup
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupGroupNameResponse'
      parameters:
        - in: query
          name: groupKey.id
          schema:
            type: string
        - in: query
          name: groupKey.namespace
          schema:
            type: string
  /v1/groups:search:
    parameters: *ref_1
    get:
      description: Searches for `Group` resources matching a specified query.
      operationId: cloudidentity.groups.search
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchGroupsResponse'
      parameters:
        - in: query
          name: query
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/groups/{groupsId}/memberships:
    parameters: *ref_1
    post:
      description: Creates a `Membership`.
      operationId: cloudidentity.groups.memberships.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Membership'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
    get:
      description: Lists the `Membership`s within a `Group`.
      operationId: cloudidentity.groups.memberships.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMembershipsResponse'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/groups/{groupsId}/memberships/{membershipsId}:
    parameters: *ref_1
    get:
      description: Retrieves a `Membership`.
      operationId: cloudidentity.groups.memberships.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Membership'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a `Membership`.
      operationId: cloudidentity.groups.memberships.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
  /v1/groups/{groupsId}/memberships:lookup:
    parameters: *ref_1
    get:
      description: >-
        Looks up the [resource
        name](https://cloud.google.com/apis/design/resource_names) of a
        `Membership` by its `EntityKey`.
      operationId: cloudidentity.groups.memberships.lookup
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupMembershipNameResponse'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: memberKey.id
          schema:
            type: string
        - in: query
          name: memberKey.namespace
          schema:
            type: string
  /v1/groups/{groupsId}/memberships/{membershipsId}:modifyMembershipRoles:
    parameters: *ref_1
    post:
      description: Modifies the `MembershipRole`s of a `Membership`.
      operationId: cloudidentity.groups.memberships.modifyMembershipRoles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyMembershipRolesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModifyMembershipRolesResponse'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
  /v1/groups/{groupsId}/memberships:searchTransitiveMemberships:
    parameters: *ref_1
    get:
      description: >-
        Search transitive memberships of a group. **Note:** This feature is only
        available to Google Workspace Enterprise Standard, Enterprise Plus, and
        Enterprise for Education; and Cloud Identity Premium accounts. If the
        account of the group is not one of these, a 403 (PERMISSION_DENIED) HTTP
        status code will be returned. A transitive membership is any direct or
        indirect membership of a group. Actor must have view permissions to all
        transitive memberships.
      operationId: cloudidentity.groups.memberships.searchTransitiveMemberships
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchTransitiveMembershipsResponse'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/groups/{groupsId}/memberships:searchTransitiveGroups:
    parameters: *ref_1
    get:
      description: >-
        Search transitive groups of a member. **Note:** This feature is only
        available to Google Workspace Enterprise Standard, Enterprise Plus, and
        Enterprise for Education; and Cloud Identity Premium accounts. If the
        account of the member is not one of these, a 403 (PERMISSION_DENIED)
        HTTP status code will be returned. A transitive group is any group that
        has a direct or indirect membership to the member. Actor must have view
        permissions all transitive groups.
      operationId: cloudidentity.groups.memberships.searchTransitiveGroups
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchTransitiveGroupsResponse'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: query
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/groups/{groupsId}/memberships:checkTransitiveMembership:
    parameters: *ref_1
    get:
      description: >-
        Check a potential member for membership in a group. **Note:** This
        feature is only available to Google Workspace Enterprise Standard,
        Enterprise Plus, and Enterprise for Education; and Cloud Identity
        Premium accounts. If the account of the member is not one of these, a
        403 (PERMISSION_DENIED) HTTP status code will be returned. A member has
        membership to a group as long as there is a single viewable transitive
        membership between the group and the member. The actor must have view
        permissions to at least one transitive membership between the member and
        group.
      operationId: cloudidentity.groups.memberships.checkTransitiveMembership
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckTransitiveMembershipResponse'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: query
          schema:
            type: string
  /v1/groups/{groupsId}/memberships:getMembershipGraph:
    parameters: *ref_1
    get:
      description: >-
        Get a membership graph of just a member or both a member and a group.
        **Note:** This feature is only available to Google Workspace Enterprise
        Standard, Enterprise Plus, and Enterprise for Education; and Cloud
        Identity Premium accounts. If the account of the member is not one of
        these, a 403 (PERMISSION_DENIED) HTTP status code will be returned.
        Given a member, the response will contain all membership paths from the
        member. Given both a group and a member, the response will contain all
        membership paths between the group and the member.
      operationId: cloudidentity.groups.memberships.getMembershipGraph
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: query
          schema:
            type: string
  /v1/groups/{groupsId}/memberships:searchDirectGroups:
    parameters: *ref_1
    get:
      description: Searches direct groups of a member.
      operationId: cloudidentity.groups.memberships.searchDirectGroups
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchDirectGroupsResponse'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: query
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/inboundSamlSsoProfiles:
    parameters: *ref_1
    post:
      description: >-
        Creates an InboundSamlSsoProfile for a customer. When the target
        customer has enabled [Multi-party approval for sensitive
        actions](https://support.google.com/a/answer/13790448), the `Operation`
        in the response will have `"done": false`, it will not have a response,
        and the metadata will have `"state": "awaiting-multi-party-approval"`.
      operationId: cloudidentity.inboundSamlSsoProfiles.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboundSamlSsoProfile'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters: []
    get:
      description: Lists InboundSamlSsoProfiles for a customer.
      operationId: cloudidentity.inboundSamlSsoProfiles.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInboundSamlSsoProfilesResponse'
      parameters:
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/inboundSamlSsoProfiles/{inboundSamlSsoProfilesId}:
    parameters: *ref_1
    patch:
      description: >-
        Updates an InboundSamlSsoProfile. When the target customer has enabled
        [Multi-party approval for sensitive
        actions](https://support.google.com/a/answer/13790448), the `Operation`
        in the response will have `"done": false`, it will not have a response,
        and the metadata will have `"state": "awaiting-multi-party-approval"`.
      operationId: cloudidentity.inboundSamlSsoProfiles.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboundSamlSsoProfile'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: inboundSamlSsoProfilesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes an InboundSamlSsoProfile.
      operationId: cloudidentity.inboundSamlSsoProfiles.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: inboundSamlSsoProfilesId
          required: true
          schema:
            type: string
    get:
      description: Gets an InboundSamlSsoProfile.
      operationId: cloudidentity.inboundSamlSsoProfiles.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundSamlSsoProfile'
      parameters:
        - in: path
          name: inboundSamlSsoProfilesId
          required: true
          schema:
            type: string
  /v1/inboundSamlSsoProfiles/{inboundSamlSsoProfilesId}/idpCredentials/{idpCredentialsId}:
    parameters: *ref_1
    delete:
      description: Deletes an IdpCredential.
      operationId: cloudidentity.inboundSamlSsoProfiles.idpCredentials.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: inboundSamlSsoProfilesId
          required: true
          schema:
            type: string
        - in: path
          name: idpCredentialsId
          required: true
          schema:
            type: string
    get:
      description: Gets an IdpCredential.
      operationId: cloudidentity.inboundSamlSsoProfiles.idpCredentials.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdpCredential'
      parameters:
        - in: path
          name: inboundSamlSsoProfilesId
          required: true
          schema:
            type: string
        - in: path
          name: idpCredentialsId
          required: true
          schema:
            type: string
  /v1/inboundSamlSsoProfiles/{inboundSamlSsoProfilesId}/idpCredentials:
    parameters: *ref_1
    get:
      description: Returns a list of IdpCredentials in an InboundSamlSsoProfile.
      operationId: cloudidentity.inboundSamlSsoProfiles.idpCredentials.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIdpCredentialsResponse'
      parameters:
        - in: path
          name: inboundSamlSsoProfilesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/inboundSamlSsoProfiles/{inboundSamlSsoProfilesId}/idpCredentials:add:
    parameters: *ref_1
    post:
      description: >-
        Adds an IdpCredential. Up to 2 credentials are allowed. When the target
        customer has enabled [Multi-party approval for sensitive
        actions](https://support.google.com/a/answer/13790448), the `Operation`
        in the response will have `"done": false`, it will not have a response,
        and the metadata will have `"state": "awaiting-multi-party-approval"`.
      operationId: cloudidentity.inboundSamlSsoProfiles.idpCredentials.add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddIdpCredentialRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: inboundSamlSsoProfilesId
          required: true
          schema:
            type: string
  /v1/inboundSsoAssignments/{inboundSsoAssignmentsId}:
    parameters: *ref_1
    get:
      description: Gets an InboundSsoAssignment.
      operationId: cloudidentity.inboundSsoAssignments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundSsoAssignment'
      parameters:
        - in: path
          name: inboundSsoAssignmentsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates an InboundSsoAssignment. The body of this request is the
        `inbound_sso_assignment` field and the `update_mask` is relative to
        that. For example: a PATCH to
        `/v1/inboundSsoAssignments/0abcdefg1234567&update_mask=rank` with a body
        of `{ "rank": 1 }` moves that (presumably group-targeted) SSO assignment
        to the highest priority and shifts any other group-targeted assignments
        down in priority.
      operationId: cloudidentity.inboundSsoAssignments.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboundSsoAssignment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: inboundSsoAssignmentsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: >-
        Deletes an InboundSsoAssignment. To disable SSO, Create (or Update) an
        assignment that has `sso_mode` == `SSO_OFF`.
      operationId: cloudidentity.inboundSsoAssignments.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: inboundSsoAssignmentsId
          required: true
          schema:
            type: string
  /v1/inboundSsoAssignments:
    parameters: *ref_1
    post:
      description: >-
        Creates an InboundSsoAssignment for users and devices in a `Customer`
        under a given `Group` or `OrgUnit`.
      operationId: cloudidentity.inboundSsoAssignments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboundSsoAssignment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters: []
    get:
      description: Lists the InboundSsoAssignments for a `Customer`.
      operationId: cloudidentity.inboundSsoAssignments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInboundSsoAssignmentsResponse'
      parameters:
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/customers/{customersId}/userinvitations/{userinvitationsId}:
    parameters: *ref_1
    get:
      description: >-
        Retrieves a UserInvitation resource. **Note:** New consumer accounts
        with the customer's verified domain created within the previous 48 hours
        will not appear in the result. This delay also applies to newly-verified
        domains.
      operationId: cloudidentity.customers.userinvitations.get
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInvitation'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: userinvitationsId
          required: true
          schema:
            type: string
  /v1/customers/{customersId}/userinvitations:
    parameters: *ref_1
    get:
      description: >-
        Retrieves a list of UserInvitation resources. **Note:** New consumer
        accounts with the customer's verified domain created within the previous
        48 hours will not appear in the result. This delay also applies to
        newly-verified domains.
      operationId: cloudidentity.customers.userinvitations.list
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUserInvitationsResponse'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/customers/{customersId}/userinvitations/{userinvitationsId}:send:
    parameters: *ref_1
    post:
      description: >-
        Sends a UserInvitation to email. If the `UserInvitation` does not exist
        for this request and it is a valid request, the request creates a
        `UserInvitation`. **Note:** The `get` and `list` methods have a 48-hour
        delay where newly-created consumer accounts will not appear in the
        results. You can still send a `UserInvitation` to those accounts if you
        know the unmanaged email address and IsInvitableUser==True.
      operationId: cloudidentity.customers.userinvitations.send
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendUserInvitationRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: userinvitationsId
          required: true
          schema:
            type: string
  /v1/customers/{customersId}/userinvitations/{userinvitationsId}:cancel:
    parameters: *ref_1
    post:
      description: Cancels a UserInvitation that was already sent.
      operationId: cloudidentity.customers.userinvitations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelUserInvitationRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: userinvitationsId
          required: true
          schema:
            type: string
  /v1/customers/{customersId}/userinvitations/{userinvitationsId}:isInvitableUser:
    parameters: *ref_1
    get:
      description: >-
        Verifies whether a user account is eligible to receive a UserInvitation
        (is an unmanaged account). Eligibility is based on the following
        criteria: * the email address is a consumer account and it's the primary
        email address of the account, and * the domain of the email address
        matches an existing verified Google Workspace or Cloud Identity domain
        If both conditions are met, the user is eligible. **Note:** This method
        is not supported for Workspace Essentials customers.
      operationId: cloudidentity.customers.userinvitations.isInvitableUser
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsInvitableUserResponse'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: userinvitationsId
          required: true
          schema:
            type: string
