openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Data Lineage API
  description: ''
  version: v1
  x-discovery-doc-revision: '20240906'
  x-generated-date: '2024-09-19'
externalDocs:
  url: https://cloud.google.com/data-catalog
servers:
  - url: https://datalineage.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    GoogleCloudDatacatalogLineageV1OperationMetadata:
      id: GoogleCloudDatacatalogLineageV1OperationMetadata
      type: object
      properties:
        operationType:
          description: Output only. The type of the operation being performed.
          type: string
          enum:
            - TYPE_UNSPECIFIED
            - DELETE
            - CREATE
          readOnly: true
          enumDescriptions:
            - Unused.
            - The resource deletion operation.
            - The resource creation operation.
        state:
          readOnly: true
          type: string
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - SUCCEEDED
            - FAILED
          description: Output only. The current operation state.
          enumDescriptions:
            - Unused.
            - The operation has been created but is not yet started.
            - The operation is underway.
            - The operation completed successfully.
            - The operation is no longer running and did not succeed.
        createTime:
          type: string
          description: >-
            Output only. The timestamp of the operation submission to the
            server.
          readOnly: true
          format: google-datetime
        resourceUuid:
          readOnly: true
          type: string
          description: Output only. The UUID of the resource being operated on.
        resource:
          readOnly: true
          description: >-
            Output only. The [relative name]
            (https://cloud.google.com//apis/design/resource_names#relative_resource_name)
            of the resource being operated on.
          type: string
        endTime:
          format: google-datetime
          type: string
          readOnly: true
          description: >-
            Output only. The timestamp of the operation termination, regardless
            of its success. This field is unset if the operation is still
            ongoing.
      description: Metadata describing the operation.
    GoogleCloudDatacatalogLineageV1BatchSearchLinkProcessesResponse:
      type: object
      id: GoogleCloudDatacatalogLineageV1BatchSearchLinkProcessesResponse
      description: Response message for BatchSearchLinkProcesses.
      properties:
        nextPageToken:
          type: string
          description: >-
            The token to specify as `page_token` in the subsequent call to get
            the next page. Omitted if there are no more pages in the response.
        processLinks:
          items:
            $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1ProcessLinks'
          type: array
          description: An array of processes associated with the specified links.
    GoogleCloudDatacatalogLineageV1SearchLinksResponse:
      description: Response message for SearchLinks.
      id: GoogleCloudDatacatalogLineageV1SearchLinksResponse
      properties:
        nextPageToken:
          description: >-
            The token to specify as `page_token` in the subsequent call to get
            the next page. Omitted if there are no more pages in the response.
          type: string
        links:
          items:
            $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1Link'
          description: >-
            The list of links for a given asset. Can be empty if the asset has
            no relations of requested type (source or target).
          type: array
      type: object
    GoogleCloudDatacatalogLineageV1Origin:
      id: GoogleCloudDatacatalogLineageV1Origin
      type: object
      description: Origin of a process.
      properties:
        name:
          type: string
          description: >-
            If the source_type isn't CUSTOM, the value of this field should be a
            GCP resource name of the system, which reports lineage. The project
            and location parts of the resource name must match the project and
            location of the lineage resource being created. Examples: -
            `{source_type: COMPOSER, name:
            "projects/foo/locations/us/environments/bar"}` - `{source_type:
            BIGQUERY, name: "projects/foo/locations/eu"}` - `{source_type:
            CUSTOM, name: "myCustomIntegration"}`
        sourceType:
          description: >-
            Type of the source. Use of a source_type other than `CUSTOM` for
            process creation or updating is highly discouraged, and may be
            restricted in the future without notice.
          enum:
            - SOURCE_TYPE_UNSPECIFIED
            - CUSTOM
            - BIGQUERY
            - DATA_FUSION
            - COMPOSER
            - LOOKER_STUDIO
            - DATAPROC
            - VERTEX_AI
          type: string
          enumDescriptions:
            - Source is Unspecified
            - A custom source
            - BigQuery
            - Data Fusion
            - Composer
            - Looker Studio
            - Dataproc
            - Vertex AI
    GoogleCloudDatacatalogLineageV1ListLineageEventsResponse:
      properties:
        nextPageToken:
          type: string
          description: >-
            The token to specify as `page_token` in the next call to get the
            next page. If this field is omitted, there are no subsequent pages.
        lineageEvents:
          description: Lineage events from the specified project and location.
          items:
            $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1LineageEvent'
          type: array
      type: object
      id: GoogleCloudDatacatalogLineageV1ListLineageEventsResponse
      description: Response message for ListLineageEvents.
    GoogleRpcStatus:
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      id: GoogleRpcStatus
      type: object
      properties:
        message:
          type: string
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
        code:
          format: int32
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
        details:
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
          type: array
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
    GoogleCloudDatacatalogLineageV1ProcessLinkInfo:
      id: GoogleCloudDatacatalogLineageV1ProcessLinkInfo
      properties:
        link:
          type: string
          description: >-
            The name of the link in the format of
            `projects/{project}/locations/{location}/links/{link}`.
        endTime:
          description: The end of the last event establishing this link-process tuple.
          format: google-datetime
          type: string
        startTime:
          format: google-datetime
          type: string
          description: The start of the first event establishing this link-process tuple.
      description: Link details.
      type: object
    GoogleLongrunningListOperationsResponse:
      type: object
      description: The response message for Operations.ListOperations.
      id: GoogleLongrunningListOperationsResponse
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
    GoogleCloudDatacatalogLineageV1BatchSearchLinkProcessesRequest:
      id: GoogleCloudDatacatalogLineageV1BatchSearchLinkProcessesRequest
      type: object
      properties:
        pageToken:
          description: >-
            The page token received from a previous `BatchSearchLinkProcesses`
            call. Use it to get the next page. When requesting subsequent pages
            of a response, remember that all parameters must match the values
            you provided in the original request.
          type: string
        pageSize:
          type: integer
          description: >-
            The maximum number of processes to return in a single page of the
            response. A page may contain fewer results than this value.
          format: int32
        links:
          description: >-
            Required. An array of links to check for their associated
            LineageProcesses. The maximum number of items in this array is 100.
            If the request contains more than 100 links, it returns the
            `INVALID_ARGUMENT` error. Format:
            `projects/{project}/locations/{location}/links/{link}`.
          type: array
          items:
            type: string
      description: Request message for BatchSearchLinkProcesses.
    GoogleLongrunningOperation:
      type: object
      properties:
        done:
          type: boolean
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        error:
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: >-
            The error result of the operation in case of failure or
            cancellation.
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      id: GoogleLongrunningOperation
    GoogleCloudDatacatalogLineageV1EntityReference:
      properties:
        fullyQualifiedName:
          description: >-
            Required. [Fully Qualified Name
            (FQN)](https://cloud.google.com/data-catalog/docs/fully-qualified-names)
            of the entity.
          type: string
      description: The soft reference to everything you can attach a lineage event to.
      type: object
      id: GoogleCloudDatacatalogLineageV1EntityReference
    GoogleCloudDatacatalogLineageV1LineageEvent:
      type: object
      description: >-
        A lineage event represents an operation on assets. Within the operation,
        the data flows from the source to the target defined in the links field.
      properties:
        endTime:
          description: >-
            Optional. The end of the transformation which resulted in this
            lineage event. For streaming scenarios, it should be the end of the
            period from which the lineage is being reported.
          type: string
          format: google-datetime
        startTime:
          format: google-datetime
          type: string
          description: >-
            Required. The beginning of the transformation which resulted in this
            lineage event. For streaming scenarios, it should be the beginning
            of the period from which the lineage is being reported.
        name:
          description: >-
            Immutable. The resource name of the lineage event. Format:
            `projects/{project}/locations/{location}/processes/{process}/runs/{run}/lineageEvents/{lineage_event}`.
            Can be specified or auto-assigned. {lineage_event} must be not
            longer than 200 characters and only contain characters in a set:
            `a-zA-Z0-9_-:.`
          type: string
        links:
          description: >-
            Optional. List of source-target pairs. Can't contain more than 100
            tuples.
          items:
            $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1EventLink'
          type: array
      id: GoogleCloudDatacatalogLineageV1LineageEvent
    GoogleCloudDatacatalogLineageV1Link:
      description: >-
        Links represent the data flow between **source** (upstream) and
        **target** (downstream) assets in transformation pipelines. Links are
        created when LineageEvents record data transformation between related
        assets.
      properties:
        target:
          $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1EntityReference'
          description: The pointer to the entity that is the **target** of this link.
        source:
          $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1EntityReference'
          description: The pointer to the entity that is the **source** of this link.
        startTime:
          description: The start of the first event establishing this link.
          type: string
          format: google-datetime
        name:
          type: string
          readOnly: true
          description: >-
            Output only. Immutable. The name of the link. Format:
            `projects/{project}/locations/{location}/links/{link}`.
        endTime:
          type: string
          format: google-datetime
          description: The end of the last event establishing this link.
      id: GoogleCloudDatacatalogLineageV1Link
      type: object
    GoogleCloudDatacatalogLineageV1Process:
      description: A process is the definition of a data transformation operation.
      type: object
      properties:
        origin:
          $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1Origin'
          description: >-
            Optional. The origin of this process and its runs and lineage
            events.
        name:
          description: >-
            Immutable. The resource name of the lineage process. Format:
            `projects/{project}/locations/{location}/processes/{process}`. Can
            be specified or auto-assigned. {process} must be not longer than 200
            characters and only contain characters in a set: `a-zA-Z0-9_-:.`
          type: string
        attributes:
          additionalProperties:
            type: any
          description: >-
            Optional. The attributes of the process. Should only be used for the
            purpose of non-semantic management (classifying, describing or
            labeling the process). Up to 100 attributes are allowed.
          type: object
        displayName:
          type: string
          description: >-
            Optional. A human-readable name you can set to display in a user
            interface. Must be not longer than 200 characters and only contain
            UTF-8 letters or numbers, spaces or characters like `_-:&.`
      id: GoogleCloudDatacatalogLineageV1Process
    GoogleLongrunningCancelOperationRequest:
      type: object
      id: GoogleLongrunningCancelOperationRequest
      properties: {}
      description: The request message for Operations.CancelOperation.
    GoogleCloudDatacatalogLineageV1ProcessOpenLineageRunEventResponse:
      properties:
        run:
          description: >-
            Created run name. Format:
            `projects/{project}/locations/{location}/processes/{process}/runs/{run}`.
          type: string
        process:
          type: string
          description: >-
            Created process name. Format:
            `projects/{project}/locations/{location}/processes/{process}`.
        lineageEvents:
          items:
            type: string
          type: array
          description: >-
            Created lineage event names. Format:
            `projects/{project}/locations/{location}/processes/{process}/runs/{run}/lineageEvents/{lineage_event}`.
      type: object
      id: GoogleCloudDatacatalogLineageV1ProcessOpenLineageRunEventResponse
      description: Response message for ProcessOpenLineageRunEvent.
    GoogleCloudDatacatalogLineageV1ListRunsResponse:
      description: Response message for ListRuns.
      type: object
      properties:
        nextPageToken:
          type: string
          description: >-
            The token to specify as `page_token` in the next call to get the
            next page. If this field is omitted, there are no subsequent pages.
        runs:
          items:
            $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1Run'
          description: The runs from the specified project and location.
          type: array
      id: GoogleCloudDatacatalogLineageV1ListRunsResponse
    GoogleCloudDatacatalogLineageV1EventLink:
      properties:
        target:
          description: Required. Reference to the target entity
          $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1EntityReference'
        source:
          $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1EntityReference'
          description: Required. Reference to the source entity
      type: object
      description: A lineage between source and target entities.
      id: GoogleCloudDatacatalogLineageV1EventLink
    GoogleCloudDatacatalogLineageV1ListProcessesResponse:
      description: Response message for ListProcesses.
      type: object
      id: GoogleCloudDatacatalogLineageV1ListProcessesResponse
      properties:
        processes:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1Process'
          description: The processes from the specified project and location.
        nextPageToken:
          description: >-
            The token to specify as `page_token` in the next call to get the
            next page. If this field is omitted, there are no subsequent pages.
          type: string
    GoogleCloudDatacatalogLineageV1Run:
      id: GoogleCloudDatacatalogLineageV1Run
      properties:
        attributes:
          additionalProperties:
            type: any
          description: >-
            Optional. The attributes of the run. Should only be used for the
            purpose of non-semantic management (classifying, describing or
            labeling the run). Up to 100 attributes are allowed.
          type: object
        name:
          type: string
          description: >-
            Immutable. The resource name of the run. Format:
            `projects/{project}/locations/{location}/processes/{process}/runs/{run}`.
            Can be specified or auto-assigned. {run} must be not longer than 200
            characters and only contain characters in a set: `a-zA-Z0-9_-:.`
        displayName:
          type: string
          description: >-
            Optional. A human-readable name you can set to display in a user
            interface. Must be not longer than 1024 characters and only contain
            UTF-8 letters or numbers, spaces or characters like `_-:&.`
        endTime:
          type: string
          format: google-datetime
          description: Optional. The timestamp of the end of the run.
        state:
          enum:
            - UNKNOWN
            - STARTED
            - COMPLETED
            - FAILED
            - ABORTED
          description: Required. The state of the run.
          type: string
          enumDescriptions:
            - >-
              The state is unknown. The true state may be any of the below or a
              different state that is not supported here explicitly.
            - The run is still executing.
            - The run completed.
            - The run failed.
            - The run aborted.
        startTime:
          type: string
          description: Required. The timestamp of the start of the run.
          format: google-datetime
      type: object
      description: >-
        A lineage run represents an execution of a process that creates lineage
        events.
    GoogleCloudDatacatalogLineageV1SearchLinksRequest:
      type: object
      description: Request message for SearchLinks.
      id: GoogleCloudDatacatalogLineageV1SearchLinksRequest
      properties:
        target:
          description: >-
            Optional. Send asset information in the **target** field to retrieve
            all links that lead from upstream assets to the specified asset.
          $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1EntityReference'
        pageSize:
          type: integer
          description: >-
            Optional. The maximum number of links to return in a single page of
            the response. A page may contain fewer links than this value. If
            unspecified, at most 10 links are returned. Maximum value is 100;
            values greater than 100 are reduced to 100.
          format: int32
        pageToken:
          description: >-
            Optional. The page token received from a previous
            `SearchLinksRequest` call. Use it to get the next page. When
            requesting subsequent pages of a response, remember that all
            parameters must match the values you provided in the original
            request.
          type: string
        source:
          $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1EntityReference'
          description: >-
            Optional. Send asset information in the **source** field to retrieve
            all links that lead from the specified asset to downstream assets.
    GoogleProtobufEmpty:
      id: GoogleProtobufEmpty
      type: object
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      properties: {}
    GoogleCloudDatacatalogLineageV1ProcessLinks:
      properties:
        links:
          description: >-
            An array containing link details objects of the links provided in
            the original request. A single process can result in creating
            multiple links. If any of the links you provide in the request are
            created by the same process, they all are included in this array.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDatacatalogLineageV1ProcessLinkInfo
          type: array
        process:
          type: string
          description: >-
            The process name in the format of
            `projects/{project}/locations/{location}/processes/{process}`.
      id: GoogleCloudDatacatalogLineageV1ProcessLinks
      type: object
      description: Links associated with a specific process.
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
  x-stackQL-resources:
    processes:
      id: google.datalineage.processes
      name: processes
      title: Processes
      methods:
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1processes~1{processesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1processes~1{processesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1processes~1{processesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1processes/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1processes/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.processes
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/processes/methods/get'
          - $ref: '#/components/x-stackQL-resources/processes/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/processes/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/processes/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/processes/methods/delete'
    lineage_events:
      id: google.datalineage.lineage_events
      name: lineage_events
      title: Lineage_events
      methods:
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1processes~1{processesId}~1runs~1{runsId}~1lineageEvents~1{lineageEventsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1processes~1{processesId}~1runs~1{runsId}~1lineageEvents~1{lineageEventsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1processes~1{processesId}~1runs~1{runsId}~1lineageEvents/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1processes~1{processesId}~1runs~1{runsId}~1lineageEvents/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.lineageEvents
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lineage_events/methods/get'
          - $ref: '#/components/x-stackQL-resources/lineage_events/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/lineage_events/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/lineage_events/methods/delete'
    runs:
      id: google.datalineage.runs
      name: runs
      title: Runs
      methods:
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1processes~1{processesId}~1runs~1{runsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1processes~1{processesId}~1runs~1{runsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1processes~1{processesId}~1runs~1{runsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1processes~1{processesId}~1runs/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.runs
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1processes~1{processesId}~1runs/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/runs/methods/get'
          - $ref: '#/components/x-stackQL-resources/runs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/runs/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/runs/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/runs/methods/delete'
    operations:
      id: google.datalineage.operations
      name: operations
      title: Operations
      methods:
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    locations:
      id: google.datalineage.locations
      name: locations
      title: Locations
      methods:
        batch_search_link_processes:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}:batchSearchLinkProcesses/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        process_open_lineage_run_event:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}:processOpenLineageRunEvent/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        search_links:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}:searchLinks/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
paths:
  /v1/projects/{projectsId}/locations/{locationsId}/processes/{processesId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
    patch:
      description: Updates a process.
      operationId: datalineage.projects.locations.processes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1Process'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1Process'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: processesId
          required: true
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes the process with the specified name.
      operationId: datalineage.projects.locations.processes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: processesId
          required: true
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
    get:
      description: Gets the details of the specified process.
      operationId: datalineage.projects.locations.processes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1Process'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: processesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/processes:
    parameters: *ref_1
    post:
      description: Creates a new process.
      operationId: datalineage.projects.locations.processes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1Process'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1Process'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
    get:
      description: >-
        List processes in the given project and location. List order is
        descending by insertion time.
      operationId: datalineage.projects.locations.processes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDatacatalogLineageV1ListProcessesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/processes/{processesId}/runs/{runsId}/lineageEvents/{lineageEventsId}:
    parameters: *ref_1
    delete:
      description: Deletes the lineage event with the specified name.
      operationId: datalineage.projects.locations.processes.runs.lineageEvents.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: processesId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: path
          name: lineageEventsId
          required: true
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
    get:
      description: Gets details of a specified lineage event.
      operationId: datalineage.projects.locations.processes.runs.lineageEvents.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDatacatalogLineageV1LineageEvent
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: processesId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: path
          name: lineageEventsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/processes/{processesId}/runs/{runsId}/lineageEvents:
    parameters: *ref_1
    post:
      description: Creates a new lineage event.
      operationId: datalineage.projects.locations.processes.runs.lineageEvents.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1LineageEvent'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDatacatalogLineageV1LineageEvent
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: processesId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
    get:
      description: >-
        Lists lineage events in the given project and location. The list order
        is not defined.
      operationId: datalineage.projects.locations.processes.runs.lineageEvents.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDatacatalogLineageV1ListLineageEventsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: processesId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/processes/{processesId}/runs/{runsId}:
    parameters: *ref_1
    patch:
      description: Updates a run.
      operationId: datalineage.projects.locations.processes.runs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1Run'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1Run'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: processesId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: allowMissing
          schema:
            type: boolean
    get:
      description: Gets the details of the specified run.
      operationId: datalineage.projects.locations.processes.runs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1Run'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: processesId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
    delete:
      description: Deletes the run with the specified name.
      operationId: datalineage.projects.locations.processes.runs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: processesId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/processes/{processesId}/runs:
    parameters: *ref_1
    get:
      description: >-
        Lists runs in the given project and location. List order is descending
        by `start_time`.
      operationId: datalineage.projects.locations.processes.runs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDatacatalogLineageV1ListRunsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: processesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
    post:
      description: Creates a new run.
      operationId: datalineage.projects.locations.processes.runs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1Run'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1Run'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: processesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: datalineage.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: datalineage.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: datalineage.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: datalineage.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleLongrunningCancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:batchSearchLinkProcesses:
    parameters: *ref_1
    post:
      description: >-
        Retrieve information about LineageProcesses associated with specific
        links. LineageProcesses are transformation pipelines that result in data
        flowing from **source** to **target** assets. Links between assets
        represent this operation. If you have specific link names, you can use
        this method to verify which LineageProcesses contribute to creating
        those links. See the SearchLinks method for more information on how to
        retrieve link name. You can retrieve the LineageProcess information in
        every project where you have the `datalineage.events.get` permission.
        The project provided in the URL is used for Billing and Quota.
      operationId: datalineage.projects.locations.batchSearchLinkProcesses
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDatacatalogLineageV1BatchSearchLinkProcessesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDatacatalogLineageV1BatchSearchLinkProcessesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:processOpenLineageRunEvent:
    parameters: *ref_1
    post:
      description: >-
        Creates new lineage events together with their parents: process and run.
        Updates the process and run if they already exist. Mapped from Open
        Lineage specification:
        https://github.com/OpenLineage/OpenLineage/blob/main/spec/OpenLineage.json.
      operationId: datalineage.projects.locations.processOpenLineageRunEvent
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDatacatalogLineageV1ProcessOpenLineageRunEventResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:searchLinks:
    parameters: *ref_1
    post:
      description: >-
        Retrieve a list of links connected to a specific asset. Links represent
        the data flow between **source** (upstream) and **target** (downstream)
        assets in transformation pipelines. Links are stored in the same project
        as the Lineage Events that create them. You can retrieve links in every
        project where you have the `datalineage.events.get` permission. The
        project provided in the URL is used for Billing and Quota.
      operationId: datalineage.projects.locations.searchLinks
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDatacatalogLineageV1SearchLinksRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDatacatalogLineageV1SearchLinksResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
