openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Data Lineage API
  description: ''
  version: v1
  x-discovery-doc-revision: '20230726'
  x-generated-date: '2023-08-17'
externalDocs:
  url: 'https://cloud.google.com/data-catalog'
servers:
  - url: 'https://datalineage.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    GoogleCloudDatacatalogLineageV1ListProcessesResponse:
      type: object
      description: Response message for ListProcesses.
      properties:
        processes:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1Process'
          description: The processes from the specified project and location.
        nextPageToken:
          description: 'The token to specify as `page_token` in the next call to get the next page. If this field is omitted, there are no subsequent pages.'
          type: string
      id: GoogleCloudDatacatalogLineageV1ListProcessesResponse
    GoogleCloudDatacatalogLineageV1BatchSearchLinkProcessesRequest:
      id: GoogleCloudDatacatalogLineageV1BatchSearchLinkProcessesRequest
      type: object
      properties:
        links:
          type: array
          items:
            type: string
          description: 'Required. An array of links to check for their associated LineageProcesses. The maximum number of items in this array is 100. If the request contains more than 100 links, it returns the `INVALID_ARGUMENT` error. Format: `projects/{project}/locations/{location}/links/{link}`.'
        pageToken:
          description: 'The page token received from a previous `BatchSearchLinkProcesses` call. Use it to get the next page. When requesting subsequent pages of a response, remember that all parameters must match the values you provided in the original request.'
          type: string
        pageSize:
          type: integer
          format: int32
          description: The maximum number of processes to return in a single page of the response. A page may contain fewer results than this value.
      description: Request message for BatchSearchLinkProcesses.
    GoogleCloudDatacatalogLineageV1OperationMetadata:
      type: object
      description: Metadata describing the operation.
      properties:
        operationType:
          enumDescriptions:
            - Unused.
            - The resource deletion operation.
            - The resource creation operation.
          type: string
          description: Output only. The type of the operation being performed.
          enum:
            - TYPE_UNSPECIFIED
            - DELETE
            - CREATE
          readOnly: true
        resourceUuid:
          type: string
          description: Output only. The UUID of the resource being operated on.
          readOnly: true
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The timestamp of the operation submission to the server.
        state:
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - SUCCEEDED
            - FAILED
          description: Output only. The current operation state.
          enumDescriptions:
            - Unused.
            - The operation has been created but is not yet started.
            - The operation is underway.
            - The operation completed successfully.
            - The operation is no longer running and did not succeed.
          type: string
          readOnly: true
        resource:
          readOnly: true
          description: 'Output only. The [relative name] (https://cloud.google.com//apis/design/resource_names#relative_resource_name) of the resource being operated on.'
          type: string
        endTime:
          readOnly: true
          type: string
          description: 'Output only. The timestamp of the operation termination, regardless of its success. This field is unset if the operation is still ongoing.'
          format: google-datetime
      id: GoogleCloudDatacatalogLineageV1OperationMetadata
    GoogleCloudDatacatalogLineageV1ProcessLinkInfo:
      description: Link details.
      id: GoogleCloudDatacatalogLineageV1ProcessLinkInfo
      type: object
      properties:
        endTime:
          description: The end of the last event establishing this link-process tuple.
          format: google-datetime
          type: string
        link:
          type: string
          description: 'The name of the link in the format of `projects/{project}/locations/{location}/links/{link}`.'
        startTime:
          description: The start of the first event establishing this link-process tuple.
          format: google-datetime
          type: string
    GoogleLongrunningCancelOperationRequest:
      properties: {}
      description: The request message for Operations.CancelOperation.
      type: object
      id: GoogleLongrunningCancelOperationRequest
    GoogleCloudDatacatalogLineageV1ListRunsResponse:
      type: object
      properties:
        nextPageToken:
          description: 'The token to specify as `page_token` in the next call to get the next page. If this field is omitted, there are no subsequent pages.'
          type: string
        runs:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1Run'
          description: The runs from the specified project and location.
      id: GoogleCloudDatacatalogLineageV1ListRunsResponse
      description: Response message for ListRuns.
    GoogleCloudDatacatalogLineageV1SearchLinksResponse:
      description: Response message for SearchLinks.
      properties:
        links:
          type: array
          description: The list of links for a given asset. Can be empty if the asset has no relations of requested type (source or target).
          items:
            $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1Link'
        nextPageToken:
          type: string
          description: The token to specify as `page_token` in the subsequent call to get the next page. Omitted if there are no more pages in the response.
      id: GoogleCloudDatacatalogLineageV1SearchLinksResponse
      type: object
    GoogleCloudDatacatalogLineageV1Process:
      id: GoogleCloudDatacatalogLineageV1Process
      properties:
        name:
          description: 'Immutable. The resource name of the lineage process. Format: `projects/{project}/locations/{location}/processes/{process}`. Can be specified or auto-assigned. {process} must be not longer than 200 characters and only contain characters in a set: `a-zA-Z0-9_-:.`'
          type: string
        displayName:
          type: string
          description: 'Optional. A human-readable name you can set to display in a user interface. Must be not longer than 200 characters and only contain UTF-8 letters or numbers, spaces or characters like `_-:&.`'
        origin:
          description: Optional. The origin of this process and its runs and lineage events.
          $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1Origin'
        attributes:
          additionalProperties:
            type: any
          type: object
          description: 'Optional. The attributes of the process. Should only be used for the purpose of non-semantic management (classifying, describing or labeling the process). Up to 100 attributes are allowed.'
      description: A process is the definition of a data transformation operation.
      type: object
    GoogleCloudDatacatalogLineageV1Link:
      id: GoogleCloudDatacatalogLineageV1Link
      type: object
      properties:
        name:
          description: 'Output only. Immutable. The name of the link. Format: `projects/{project}/locations/{location}/links/{link}`.'
          readOnly: true
          type: string
        endTime:
          type: string
          description: The end of the last event establishing this link.
          format: google-datetime
        target:
          $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1EntityReference'
          description: The pointer to the entity that is the **target** of this link.
        source:
          description: The pointer to the entity that is the **source** of this link.
          $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1EntityReference'
        startTime:
          type: string
          description: The start of the first event establishing this link.
          format: google-datetime
      description: Links represent the data flow between **source** (upstream) and **target** (downstream) assets in transformation pipelines. Links are created when LineageEvents record data transformation between related assets.
    GoogleLongrunningListOperationsResponse:
      type: object
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
          type: array
          description: A list of operations that matches the specified filter in the request.
      id: GoogleLongrunningListOperationsResponse
    GoogleRpcStatus:
      type: object
      id: GoogleRpcStatus
      properties:
        message:
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
          type: string
        code:
          type: integer
          format: int32
          description: 'The status code, which should be an enum value of google.rpc.Code.'
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
    GoogleLongrunningOperation:
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        error:
          description: The error result of the operation in case of failure or cancellation.
          $ref: '#/components/schemas/GoogleRpcStatus'
        done:
          type: boolean
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
        response:
          type: object
          description: 'The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        name:
          type: string
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
          type: object
      id: GoogleLongrunningOperation
      type: object
    GoogleCloudDatacatalogLineageV1EventLink:
      properties:
        target:
          $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1EntityReference'
          description: Required. Reference to the target entity
        source:
          $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1EntityReference'
          description: Required. Reference to the source entity
      type: object
      description: A lineage between source and target entities.
      id: GoogleCloudDatacatalogLineageV1EventLink
    GoogleCloudDatacatalogLineageV1ProcessLinks:
      description: Links associated with a specific process.
      type: object
      id: GoogleCloudDatacatalogLineageV1ProcessLinks
      properties:
        process:
          description: 'The process name in the format of `projects/{project}/locations/{location}/processes/{process}`.'
          type: string
        links:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1ProcessLinkInfo'
          description: 'An array containing link details objects of the links provided in the original request. A single process can result in creating multiple links. If any of the links you provide in the request are created by the same process, they all are included in this array.'
    GoogleCloudDatacatalogLineageV1ListLineageEventsResponse:
      properties:
        nextPageToken:
          type: string
          description: 'The token to specify as `page_token` in the next call to get the next page. If this field is omitted, there are no subsequent pages.'
        lineageEvents:
          items:
            $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1LineageEvent'
          description: Lineage events from the specified project and location.
          type: array
      type: object
      description: Response message for ListLineageEvents.
      id: GoogleCloudDatacatalogLineageV1ListLineageEventsResponse
    GoogleCloudDatacatalogLineageV1BatchSearchLinkProcessesResponse:
      description: Response message for BatchSearchLinkProcesses.
      id: GoogleCloudDatacatalogLineageV1BatchSearchLinkProcessesResponse
      type: object
      properties:
        nextPageToken:
          description: The token to specify as `page_token` in the subsequent call to get the next page. Omitted if there are no more pages in the response.
          type: string
        processLinks:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1ProcessLinks'
          description: An array of processes associated with the specified links.
    GoogleCloudDatacatalogLineageV1LineageEvent:
      id: GoogleCloudDatacatalogLineageV1LineageEvent
      description: 'A lineage event represents an operation on assets. Within the operation, the data flows from the source to the target defined in the links field.'
      type: object
      properties:
        name:
          description: 'Immutable. The resource name of the lineage event. Format: `projects/{project}/locations/{location}/processes/{process}/runs/{run}/lineageEvents/{lineage_event}`. Can be specified or auto-assigned. {lineage_event} must be not longer than 200 characters and only contain characters in a set: `a-zA-Z0-9_-:.`'
          type: string
        startTime:
          type: string
          format: google-datetime
          description: 'Required. The beginning of the transformation which resulted in this lineage event. For streaming scenarios, it should be the beginning of the period from which the lineage is being reported.'
        links:
          items:
            $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1EventLink'
          type: array
          description: Optional. List of source-target pairs. Can't contain more than 100 tuples.
        endTime:
          type: string
          format: google-datetime
          description: 'Optional. The end of the transformation which resulted in this lineage event. For streaming scenarios, it should be the end of the period from which the lineage is being reported.'
    GoogleCloudDatacatalogLineageV1Origin:
      id: GoogleCloudDatacatalogLineageV1Origin
      type: object
      properties:
        name:
          description: 'If the source_type isn''t CUSTOM, the value of this field should be a GCP resource name of the system, which reports lineage. The project and location parts of the resource name must match the project and location of the lineage resource being created. Examples: - `{source_type: COMPOSER, name: "projects/foo/locations/us/environments/bar"}` - `{source_type: BIGQUERY, name: "projects/foo/locations/eu"}` - `{source_type: CUSTOM, name: "myCustomIntegration"}`'
          type: string
        sourceType:
          enumDescriptions:
            - Source is Unspecified
            - A custom source
            - BigQuery
            - Data Fusion
            - Composer
            - Looker Studio
            - Dataproc
          type: string
          description: 'Type of the source. Use of a source_type other than `CUSTOM` for process creation or updating is highly discouraged, and may be restricted in the future without notice.'
          enum:
            - SOURCE_TYPE_UNSPECIFIED
            - CUSTOM
            - BIGQUERY
            - DATA_FUSION
            - COMPOSER
            - LOOKER_STUDIO
            - DATAPROC
      description: Origin of a process.
    GoogleCloudDatacatalogLineageV1Run:
      id: GoogleCloudDatacatalogLineageV1Run
      properties:
        state:
          enumDescriptions:
            - The state is unknown. The true state may be any of the below or a different state that is not supported here explicitly.
            - The run is still executing.
            - The run completed.
            - The run failed.
            - The run aborted.
          enum:
            - UNKNOWN
            - STARTED
            - COMPLETED
            - FAILED
            - ABORTED
          type: string
          description: Required. The state of the run.
        attributes:
          additionalProperties:
            type: any
          type: object
          description: 'Optional. The attributes of the run. Should only be used for the purpose of non-semantic management (classifying, describing or labeling the run). Up to 100 attributes are allowed.'
        startTime:
          type: string
          format: google-datetime
          description: Required. The timestamp of the start of the run.
        displayName:
          description: 'Optional. A human-readable name you can set to display in a user interface. Must be not longer than 1024 characters and only contain UTF-8 letters or numbers, spaces or characters like `_-:&.`'
          type: string
        name:
          description: 'Immutable. The resource name of the run. Format: `projects/{project}/locations/{location}/processes/{process}/runs/{run}`. Can be specified or auto-assigned. {run} must be not longer than 200 characters and only contain characters in a set: `a-zA-Z0-9_-:.`'
          type: string
        endTime:
          type: string
          description: Optional. The timestamp of the end of the run.
          format: google-datetime
      type: object
      description: A lineage run represents an execution of a process that creates lineage events.
    GoogleCloudDatacatalogLineageV1EntityReference:
      id: GoogleCloudDatacatalogLineageV1EntityReference
      type: object
      description: The soft reference to everything you can attach a lineage event to.
      properties:
        fullyQualifiedName:
          description: 'Required. [Fully Qualified Name (FQN)](https://cloud.google.com/data-catalog/docs/fully-qualified-names) of the entity.'
          type: string
    GoogleCloudDatacatalogLineageV1SearchLinksRequest:
      id: GoogleCloudDatacatalogLineageV1SearchLinksRequest
      description: Request message for SearchLinks.
      properties:
        target:
          $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1EntityReference'
          description: Optional. Send asset information in the **target** field to retrieve all links that lead from upstream assets to the specified asset.
        pageSize:
          type: integer
          description: 'Optional. The maximum number of links to return in a single page of the response. A page may contain fewer links than this value. If unspecified, at most 10 links are returned. Maximum value is 100; values greater than 100 are reduced to 100.'
          format: int32
        pageToken:
          type: string
          description: 'Optional. The page token received from a previous `SearchLinksRequest` call. Use it to get the next page. When requesting subsequent pages of a response, remember that all parameters must match the values you provided in the original request.'
        source:
          $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1EntityReference'
          description: Optional. Send asset information in the **source** field to retrieve all links that lead from the specified asset to downstream assets.
      type: object
    GoogleProtobufEmpty:
      type: object
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      id: GoogleProtobufEmpty
      properties: {}
  parameters:
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
  x-stackQL-resources:
    locations:
      id: google.datalineage.locations
      name: locations
      title: Locations
      methods:
        batch_search_link_processes:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}:batchSearchLinkProcesses/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        search_links:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}:searchLinks/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    runs:
      id: google.datalineage.runs
      name: runs
      title: Runs
      methods:
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1processes~1{processesId}~1runs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1processes~1{processesId}~1runs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.runs
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1processes~1{processesId}~1runs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1processes~1{processesId}~1runs~1{runsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1processes~1{processesId}~1runs~1{runsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1processes~1{processesId}~1runs~1{runsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/runs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/runs/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/runs/methods/delete'
    lineage_events:
      id: google.datalineage.lineage_events
      name: lineage_events
      title: Lineage Events
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1processes~1{processesId}~1runs~1{runsId}~1lineageEvents/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.lineageEvents
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1processes~1{processesId}~1runs~1{runsId}~1lineageEvents/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1processes~1{processesId}~1runs~1{runsId}~1lineageEvents/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1processes~1{processesId}~1runs~1{runsId}~1lineageEvents~1{lineageEventsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1processes~1{processesId}~1runs~1{runsId}~1lineageEvents~1{lineageEventsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/lineage_events/methods/list'
          - $ref: '#/components/x-stackQL-resources/lineage_events/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/lineage_events/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/lineage_events/methods/delete'
    processes:
      id: google.datalineage.processes
      name: processes
      title: Processes
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1processes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.processes
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1processes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1processes/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1processes~1{processesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1processes~1{processesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1processes~1{processesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/processes/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/processes/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/processes/methods/delete'
    operations:
      id: google.datalineage.operations
      name: operations
      title: Operations
      methods:
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
paths:
  '/v1/projects/{projectsId}/locations/{locationsId}:batchSearchLinkProcesses':
    parameters: &ref_1
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/key'
    post:
      description: 'Retrieve information about LineageProcesses associated with specific links. LineageProcesses are transformation pipelines that result in data flowing from **source** to **target** assets. Links between assets represent this operation. If you have specific link names, you can use this method to verify which LineageProcesses contribute to creating those links. See the SearchLinks method for more information on how to retrieve link name. You can retrieve the LineageProcess information in every project where you have the `datalineage.events.get` permission. The project provided in the URL is used for Billing and Quota.'
      operationId: datalineage.projects.locations.batchSearchLinkProcesses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1BatchSearchLinkProcessesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1BatchSearchLinkProcessesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: batch_search_link_processes
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}:searchLinks':
    parameters: *ref_1
    post:
      description: Retrieve a list of links connected to a specific asset. Links represent the data flow between **source** (upstream) and **target** (downstream) assets in transformation pipelines. Links are stored in the same project as the Lineage Events that create them. You can retrieve links in every project where you have the `datalineage.events.get` permission. The project provided in the URL is used for Billing and Quota.
      operationId: datalineage.projects.locations.searchLinks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1SearchLinksRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1SearchLinksResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: search_links
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/processes/{processesId}/runs':
    parameters: *ref_1
    post:
      description: Creates a new run.
      operationId: datalineage.projects.locations.processes.runs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1Run'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1Run'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: processesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: runs
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists runs in the given project and location. List order is descending by `start_time`.
      operationId: datalineage.projects.locations.processes.runs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1ListRunsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: processesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: runs
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.runs
  '/v1/projects/{projectsId}/locations/{locationsId}/processes/{processesId}/runs/{runsId}':
    parameters: *ref_1
    get:
      description: Gets the details of the specified run.
      operationId: datalineage.projects.locations.processes.runs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1Run'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: processesId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
      x-stackQL-resource: runs
      x-stackQL-method: get
      x-stackQL-verb: exec
    patch:
      description: Updates a run.
      operationId: datalineage.projects.locations.processes.runs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1Run'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1Run'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: processesId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
      x-stackQL-resource: runs
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes the run with the specified name.
      operationId: datalineage.projects.locations.processes.runs.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: processesId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
      x-stackQL-resource: runs
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/processes/{processesId}/runs/{runsId}/lineageEvents':
    parameters: *ref_1
    get:
      description: Lists lineage events in the given project and location. The list order is not defined.
      operationId: datalineage.projects.locations.processes.runs.lineageEvents.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1ListLineageEventsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: processesId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: lineage_events
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.lineageEvents
    post:
      description: Creates a new lineage event.
      operationId: datalineage.projects.locations.processes.runs.lineageEvents.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1LineageEvent'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1LineageEvent'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: processesId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: lineage_events
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/processes/{processesId}/runs/{runsId}/lineageEvents/{lineageEventsId}':
    parameters: *ref_1
    get:
      description: Gets details of a specified lineage event.
      operationId: datalineage.projects.locations.processes.runs.lineageEvents.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1LineageEvent'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: processesId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: path
          name: lineageEventsId
          required: true
          schema:
            type: string
      x-stackQL-resource: lineage_events
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes the lineage event with the specified name.
      operationId: datalineage.projects.locations.processes.runs.lineageEvents.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: processesId
          required: true
          schema:
            type: string
        - in: path
          name: runsId
          required: true
          schema:
            type: string
        - in: path
          name: lineageEventsId
          required: true
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
      x-stackQL-resource: lineage_events
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/processes':
    parameters: *ref_1
    get:
      description: List processes in the given project and location. List order is descending by insertion time.
      operationId: datalineage.projects.locations.processes.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1ListProcessesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: processes
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.processes
    post:
      description: Creates a new process.
      operationId: datalineage.projects.locations.processes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1Process'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1Process'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: processes
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/processes/{processesId}':
    parameters: *ref_1
    get:
      description: Gets the details of the specified process.
      operationId: datalineage.projects.locations.processes.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1Process'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: processesId
          required: true
          schema:
            type: string
      x-stackQL-resource: processes
      x-stackQL-method: get
      x-stackQL-verb: exec
    patch:
      description: Updates a process.
      operationId: datalineage.projects.locations.processes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1Process'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogLineageV1Process'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: processesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
      x-stackQL-resource: processes
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes the process with the specified name.
      operationId: datalineage.projects.locations.processes.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: processesId
          required: true
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
      x-stackQL-resource: processes
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: datalineage.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleLongrunningCancelOperationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: datalineage.projects.locations.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: datalineage.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: datalineage.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
