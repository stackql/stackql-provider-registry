openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Cloud TPU API
  description: TPU API provides customers with access to Google TPU technology.
  version: v2
  x-discovery-doc-revision: '20230814'
  x-generated-date: '2023-08-22'
externalDocs:
  url: 'https://cloud.google.com/tpu/'
servers:
  - url: 'https://tpu.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    Empty:
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      type: object
      id: Empty
      properties: {}
    RuntimeVersion:
      type: object
      id: RuntimeVersion
      properties:
        version:
          description: The runtime version.
          type: string
        name:
          type: string
          description: The resource name.
      description: A runtime version that a Node can be configured with.
    NetworkEndpoint:
      type: object
      id: NetworkEndpoint
      properties:
        port:
          type: integer
          format: int32
          description: The port of this network endpoint.
        accessConfig:
          description: The access config for the TPU worker.
          $ref: '#/components/schemas/AccessConfig'
        ipAddress:
          description: The internal IP address of this network endpoint.
          type: string
      description: A network endpoint over which a TPU worker can be reached.
    ShieldedInstanceConfig:
      properties:
        enableSecureBoot:
          description: Defines whether the instance has Secure Boot enabled.
          type: boolean
      id: ShieldedInstanceConfig
      type: object
      description: A set of Shielded Instance options.
    Location:
      properties:
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: Service-specific metadata. For example the available capacity at the given location.
          type: object
        labels:
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          additionalProperties:
            type: string
          type: object
        name:
          type: string
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
        displayName:
          description: 'The friendly name for this location, typically a nearby city name. For example, "Tokyo".'
          type: string
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
      description: A resource that represents a Google Cloud location.
      type: object
      id: Location
    SchedulingConfig:
      id: SchedulingConfig
      description: Sets the scheduling options for this node.
      properties:
        reserved:
          type: boolean
          description: Whether the node is created under a reservation.
        preemptible:
          description: Defines whether the node is preemptible.
          type: boolean
      type: object
    OperationMetadata:
      properties:
        apiVersion:
          description: API version.
          type: string
        endTime:
          description: The time the operation finished running.
          type: string
          format: google-datetime
        createTime:
          description: The time the operation was created.
          format: google-datetime
          type: string
        verb:
          type: string
          description: Name of the verb executed by the operation.
        statusDetail:
          type: string
          description: 'Human-readable status of the operation, if any.'
        cancelRequested:
          description: Specifies if cancellation was requested for the operation.
          type: boolean
        target:
          description: Target of the operation - for example projects/project-1/connectivityTests/test-1
          type: string
      description: Metadata describing an Operation
      type: object
      id: OperationMetadata
    GenerateServiceIdentityResponse:
      properties:
        identity:
          description: ServiceIdentity that was created or retrieved.
          $ref: '#/components/schemas/ServiceIdentity'
      id: GenerateServiceIdentityResponse
      type: object
      description: Response for GenerateServiceIdentity.
    GuestAttributesEntry:
      properties:
        namespace:
          type: string
          description: Namespace for the guest attribute entry.
        value:
          type: string
          description: Value for the guest attribute entry.
        key:
          description: Key for the guest attribute entry.
          type: string
      description: A guest attributes namespace/key/value entry.
      id: GuestAttributesEntry
      type: object
    AccessConfig:
      id: AccessConfig
      description: An access config attached to the TPU worker.
      type: object
      properties:
        externalIp:
          readOnly: true
          type: string
          description: Output only. An external IP address associated with the TPU worker.
    StartNodeRequest:
      description: Request for StartNode.
      properties: {}
      type: object
      id: StartNodeRequest
    Symptom:
      type: object
      description: A Symptom instance.
      id: Symptom
      properties:
        details:
          type: string
          description: Detailed information of the current Symptom.
        symptomType:
          type: string
          enumDescriptions:
            - Unspecified symptom.
            - TPU VM memory is low.
            - TPU runtime is out of memory.
            - TPU runtime execution has timed out.
            - TPU runtime fails to construct a mesh that recognizes each TPU device's neighbors.
            - TPU HBM is out of memory.
            - Abusive behaviors have been identified on the current project.
          enum:
            - SYMPTOM_TYPE_UNSPECIFIED
            - LOW_MEMORY
            - OUT_OF_MEMORY
            - EXECUTE_TIMED_OUT
            - MESH_BUILD_FAIL
            - HBM_OUT_OF_MEMORY
            - PROJECT_ABUSE
          description: Type of the Symptom.
        workerId:
          type: string
          description: A string used to uniquely distinguish a worker within a TPU node.
        createTime:
          type: string
          description: Timestamp when the Symptom is created.
          format: google-datetime
    GuestAttributes:
      properties:
        queryPath:
          description: The path to be queried. This can be the default namespace ('/') or a nested namespace ('/\/') or a specified key ('/\/\')
          type: string
        queryValue:
          $ref: '#/components/schemas/GuestAttributesValue'
          description: The value of the requested queried path.
      description: A guest attributes.
      type: object
      id: GuestAttributes
    ListOperationsResponse:
      id: ListOperationsResponse
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the request.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
      description: The response message for Operations.ListOperations.
      type: object
    ServiceIdentity:
      type: object
      description: The per-product per-project service identity for Cloud TPU service.
      id: ServiceIdentity
      properties:
        email:
          type: string
          description: The email address of the service identity.
    ListNodesResponse:
      properties:
        nodes:
          items:
            $ref: '#/components/schemas/Node'
          description: The listed nodes.
          type: array
        nextPageToken:
          type: string
          description: The next page token or empty if none.
        unreachable:
          type: array
          items:
            type: string
          description: Locations that could not be reached.
      id: ListNodesResponse
      description: Response for ListNodes.
      type: object
    ListRuntimeVersionsResponse:
      type: object
      id: ListRuntimeVersionsResponse
      description: Response for ListRuntimeVersions.
      properties:
        nextPageToken:
          type: string
          description: The next page token or empty if none.
        unreachable:
          items:
            type: string
          description: Locations that could not be reached.
          type: array
        runtimeVersions:
          items:
            $ref: '#/components/schemas/RuntimeVersion'
          description: The listed nodes.
          type: array
    Status:
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      id: Status
      properties:
        code:
          type: integer
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          format: int32
        message:
          type: string
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
        details:
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          type: array
      type: object
    GuestAttributesValue:
      description: Array of guest attribute namespace/key/value tuples.
      type: object
      id: GuestAttributesValue
      properties:
        items:
          description: The list of guest attributes entries.
          type: array
          items:
            $ref: '#/components/schemas/GuestAttributesEntry'
    GetGuestAttributesResponse:
      type: object
      properties:
        guestAttributes:
          description: The guest attributes for the TPU workers.
          items:
            $ref: '#/components/schemas/GuestAttributes'
          type: array
      description: Response for GetGuestAttributes.
      id: GetGuestAttributesResponse
    ListAcceleratorTypesResponse:
      properties:
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
        nextPageToken:
          type: string
          description: The next page token or empty if none.
        acceleratorTypes:
          items:
            $ref: '#/components/schemas/AcceleratorType'
          description: The listed nodes.
          type: array
      description: Response for ListAcceleratorTypes.
      type: object
      id: ListAcceleratorTypesResponse
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        locations:
          type: array
          items:
            $ref: '#/components/schemas/Location'
          description: A list of locations that matches the specified filter in the request.
      id: ListLocationsResponse
    AttachedDisk:
      type: object
      properties:
        mode:
          type: string
          description: 'The mode in which to attach this disk. If not specified, the default is READ_WRITE mode. Only applicable to data_disks.'
          enumDescriptions:
            - The disk mode is not known/set.
            - Attaches the disk in read-write mode. Only one TPU node can attach a disk in read-write mode at a time.
            - Attaches the disk in read-only mode. Multiple TPU nodes can attach a disk in read-only mode at a time.
          enum:
            - DISK_MODE_UNSPECIFIED
            - READ_WRITE
            - READ_ONLY
        sourceDisk:
          type: string
          description: 'Specifies the full path to an existing disk. For example: "projects/my-project/zones/us-central1-c/disks/my-disk".'
      description: 'A node-attached disk resource. Next ID: 8;'
      id: AttachedDisk
    ServiceAccount:
      description: A service account.
      properties:
        email:
          type: string
          description: 'Email address of the service account. If empty, default Compute service account will be used.'
        scope:
          type: array
          description: 'The list of scopes to be made available for this service account. If empty, access to all Cloud APIs will be allowed.'
          items:
            type: string
      type: object
      id: ServiceAccount
    StopNodeRequest:
      properties: {}
      description: Request for StopNode.
      type: object
      id: StopNodeRequest
    AcceleratorType:
      description: A accelerator type that a Node can be configured with.
      id: AcceleratorType
      type: object
      properties:
        acceleratorConfigs:
          description: The accelerator config.
          items:
            $ref: '#/components/schemas/AcceleratorConfig'
          type: array
        name:
          type: string
          description: The resource name.
        type:
          type: string
          description: The accelerator type.
    AcceleratorConfig:
      properties:
        topology:
          description: Required. Topology of TPU in chips.
          type: string
        type:
          enum:
            - TYPE_UNSPECIFIED
            - V2
            - V3
            - V4
          enumDescriptions:
            - Unspecified version.
            - TPU v2.
            - TPU v3.
            - TPU v4.
          description: Required. Type of TPU.
          type: string
      id: AcceleratorConfig
      description: A TPU accelerator configuration.
      type: object
    NetworkConfig:
      properties:
        enableExternalIps:
          description: 'Indicates that external IP addresses would be associated with the TPU workers. If set to false, the specified subnetwork or network should have Private Google Access enabled.'
          type: boolean
        network:
          description: 'The name of the network for the TPU node. It must be a preexisting Google Compute Engine network. If none is provided, "default" will be used.'
          type: string
        subnetwork:
          description: 'The name of the subnetwork for the TPU node. It must be a preexisting Google Compute Engine subnetwork. If none is provided, "default" will be used.'
          type: string
        canIpForward:
          description: Allows the TPU node to send and receive packets with non-matching destination or source IPs. This is required if you plan to use the TPU workers to forward routes.
          type: boolean
      id: NetworkConfig
      type: object
      description: Network related configurations.
    Node:
      properties:
        schedulingConfig:
          description: The scheduling options for this node.
          $ref: '#/components/schemas/SchedulingConfig'
        acceleratorConfig:
          $ref: '#/components/schemas/AcceleratorConfig'
          description: The AccleratorConfig for the TPU Node.
        networkEndpoints:
          type: array
          description: Output only. The network endpoints where TPU workers can be accessed and sent work. It is recommended that runtime clients of the node reach out to the 0th entry in this map first.
          items:
            $ref: '#/components/schemas/NetworkEndpoint'
          readOnly: true
        health:
          enum:
            - HEALTH_UNSPECIFIED
            - HEALTHY
            - TIMEOUT
            - UNHEALTHY_TENSORFLOW
            - UNHEALTHY_MAINTENANCE
          description: The health status of the TPU node.
          enumDescriptions:
            - 'Health status is unknown: not initialized or failed to retrieve.'
            - The resource is healthy.
            - The resource is unresponsive.
            - The in-guest ML stack is unhealthy.
            - The node is under maintenance/priority boost caused rescheduling and will resume running once rescheduled.
          type: string
        tags:
          description: Tags to apply to the TPU Node. Tags are used to identify valid sources or targets for network firewalls.
          items:
            type: string
          type: array
        symptoms:
          items:
            $ref: '#/components/schemas/Symptom'
          readOnly: true
          type: array
          description: Output only. The Symptoms that have occurred to the TPU Node.
        description:
          type: string
          description: The user-supplied description of the TPU. Maximum of 512 characters.
        cidrBlock:
          type: string
          description: 'The CIDR block that the TPU node will use when selecting an IP address. This CIDR block must be a /29 block; the Compute Engine networks API forbids a smaller block, and using a larger block would be wasteful (a node can only consume one IP address). Errors will occur if the CIDR block has already been used for a currently existing TPU node, the CIDR block conflicts with any subnetworks in the user''s provided network, or the provided network is peered with another network that is using that CIDR block.'
        multisliceNode:
          type: boolean
          readOnly: true
          description: Output only. Whether the Node belongs to a Multislice group.
        serviceAccount:
          description: 'The Google Cloud Platform Service Account to be used by the TPU node VMs. If None is specified, the default compute service account will be used.'
          $ref: '#/components/schemas/ServiceAccount'
        state:
          type: string
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - READY
            - RESTARTING
            - REIMAGING
            - DELETING
            - REPAIRING
            - STOPPED
            - STOPPING
            - STARTING
            - PREEMPTED
            - TERMINATED
            - HIDING
            - HIDDEN
            - UNHIDING
          description: Output only. The current state for the TPU Node.
          enumDescriptions:
            - TPU node state is not known/set.
            - TPU node is being created.
            - TPU node has been created.
            - TPU node is restarting.
            - TPU node is undergoing reimaging.
            - TPU node is being deleted.
            - TPU node is being repaired and may be unusable. Details can be found in the 'help_description' field.
            - TPU node is stopped.
            - TPU node is currently stopping.
            - TPU node is currently starting.
            - TPU node has been preempted. Only applies to Preemptible TPU Nodes.
            - TPU node has been terminated due to maintenance or has reached the end of its life cycle (for preemptible nodes).
            - TPU node is currently hiding.
            - TPU node has been hidden.
            - TPU node is currently unhiding.
          readOnly: true
        createTime:
          readOnly: true
          description: Output only. The time when the node was created.
          type: string
          format: google-datetime
        queuedResource:
          type: string
          description: Output only. The qualified name of the QueuedResource that requested this Node.
          readOnly: true
        shieldedInstanceConfig:
          description: Shielded Instance options.
          $ref: '#/components/schemas/ShieldedInstanceConfig'
        apiVersion:
          description: Output only. The API version that created this Node.
          readOnly: true
          enumDescriptions:
            - API version is unknown.
            - TPU API V1Alpha1 version.
            - TPU API V1 version.
            - TPU API V2Alpha1 version.
            - TPU API V2 version.
          enum:
            - API_VERSION_UNSPECIFIED
            - V1_ALPHA1
            - V1
            - V2_ALPHA1
            - V2
          type: string
        networkConfig:
          $ref: '#/components/schemas/NetworkConfig'
          description: Network configurations for the TPU node.
        acceleratorType:
          description: Optional. The type of hardware accelerators associated with this node.
          type: string
        name:
          readOnly: true
          description: Output only. Immutable. The name of the TPU.
          type: string
        id:
          type: string
          readOnly: true
          description: Output only. The unique identifier for the TPU Node.
          format: int64
        dataDisks:
          type: array
          description: The additional data disks for the Node.
          items:
            $ref: '#/components/schemas/AttachedDisk'
        runtimeVersion:
          type: string
          description: Required. The runtime version running in the Node.
        labels:
          additionalProperties:
            type: string
          description: Resource labels to represent user-provided metadata.
          type: object
        healthDescription:
          readOnly: true
          type: string
          description: 'Output only. If this field is populated, it contains a description of why the TPU Node is unhealthy.'
        metadata:
          type: object
          description: Custom metadata to apply to the TPU Node. Can set startup-script and shutdown-script
          additionalProperties:
            type: string
      id: Node
      type: object
      description: A TPU instance.
    GetGuestAttributesRequest:
      properties:
        queryPath:
          type: string
          description: The guest attributes path to be queried.
        workerIds:
          description: 'The 0-based worker ID. If it is empty, all workers'' GuestAttributes will be returned.'
          items:
            type: string
          type: array
      description: Request for GetGuestAttributes.
      type: object
      id: GetGuestAttributesRequest
    Operation:
      type: object
      properties:
        metadata:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
        response:
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
        name:
          type: string
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
        error:
          $ref: '#/components/schemas/Status'
          description: The error result of the operation in case of failure or cancellation.
        done:
          type: boolean
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
      description: This resource represents a long-running operation that is the result of a network API call.
      id: Operation
    GenerateServiceIdentityRequest:
      properties: {}
      id: GenerateServiceIdentityRequest
      description: Request for GenerateServiceIdentity.
      type: object
  parameters:
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
  x-stackQL-resources:
    locations:
      id: google.tpu.locations
      name: locations
      title: Locations
      methods:
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        generate_service_identity:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}:generateServiceIdentity/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        _list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        delete: []
    nodes:
      id: google.tpu.nodes
      name: nodes
      title: Nodes
      methods:
        create:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nodes/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nodes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.nodes
        _list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nodes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nodes~1{nodesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nodes~1{nodesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nodes~1{nodesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nodes~1{nodesId}:stop/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nodes~1{nodesId}:start/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/nodes/methods/list'
          - $ref: '#/components/x-stackQL-resources/nodes/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/nodes/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/nodes/methods/delete'
    nodes_guest_attributes:
      id: google.tpu.nodes_guest_attributes
      name: nodes_guest_attributes
      title: Nodes Guest Attributes
      methods:
        get_guest_attributes:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nodes~1{nodesId}:getGuestAttributes/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    accelerator_types:
      id: google.tpu.accelerator_types
      name: accelerator_types
      title: Accelerator Types
      methods:
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1acceleratorTypes~1{acceleratorTypesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1acceleratorTypes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.acceleratorTypes
        _list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1acceleratorTypes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accelerator_types/methods/get'
          - $ref: '#/components/x-stackQL-resources/accelerator_types/methods/list'
        insert: []
        update: []
        delete: []
    runtime_versions:
      id: google.tpu.runtime_versions
      name: runtime_versions
      title: Runtime Versions
      methods:
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1runtimeVersions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.runtimeVersions
        _list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1runtimeVersions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1runtimeVersions~1{runtimeVersionsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/runtime_versions/methods/list'
          - $ref: '#/components/x-stackQL-resources/runtime_versions/methods/get'
        insert: []
        update: []
        delete: []
    operations:
      id: google.tpu.operations
      name: operations
      title: Operations
      methods:
        cancel:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
paths:
  '/v2/projects/{projectsId}/locations/{locationsId}':
    parameters: &ref_1
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
    get:
      description: Gets information about a location.
      operationId: tpu.projects.locations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v2/projects/{projectsId}/locations/{locationsId}:generateServiceIdentity':
    parameters: *ref_1
    post:
      description: Generates the Cloud TPU service identity for the project.
      operationId: tpu.projects.locations.generateServiceIdentity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateServiceIdentityRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateServiceIdentityResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: generate_service_identity
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations':
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: tpu.projects.locations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.locations
  '/v2/projects/{projectsId}/locations/{locationsId}/nodes':
    parameters: *ref_1
    post:
      description: Creates a node.
      operationId: tpu.projects.locations.nodes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Node'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: nodeId
          schema:
            type: string
      x-stackQL-resource: nodes
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists nodes.
      operationId: tpu.projects.locations.nodes.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNodesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: nodes
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.nodes
  '/v2/projects/{projectsId}/locations/{locationsId}/nodes/{nodesId}':
    parameters: *ref_1
    patch:
      description: Updates the configurations of a node.
      operationId: tpu.projects.locations.nodes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Node'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: nodes
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a node.
      operationId: tpu.projects.locations.nodes.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
      x-stackQL-resource: nodes
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the details of a node.
      operationId: tpu.projects.locations.nodes.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
      x-stackQL-resource: nodes
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v2/projects/{projectsId}/locations/{locationsId}/nodes/{nodesId}:getGuestAttributes':
    parameters: *ref_1
    post:
      description: Retrieves the guest attributes for the node.
      operationId: tpu.projects.locations.nodes.getGuestAttributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetGuestAttributesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGuestAttributesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
      x-stackQL-resource: nodes_guest_attributes
      x-stackQL-method: get_guest_attributes
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/nodes/{nodesId}:stop':
    parameters: *ref_1
    post:
      description: Stops a node. This operation is only available with single TPU nodes.
      operationId: tpu.projects.locations.nodes.stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopNodeRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
      x-stackQL-resource: nodes
      x-stackQL-method: stop
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/nodes/{nodesId}:start':
    parameters: *ref_1
    post:
      description: Starts a node.
      operationId: tpu.projects.locations.nodes.start
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartNodeRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
      x-stackQL-resource: nodes
      x-stackQL-method: start
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/acceleratorTypes/{acceleratorTypesId}':
    parameters: *ref_1
    get:
      description: Gets AcceleratorType.
      operationId: tpu.projects.locations.acceleratorTypes.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceleratorType'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: acceleratorTypesId
          required: true
          schema:
            type: string
      x-stackQL-resource: accelerator_types
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v2/projects/{projectsId}/locations/{locationsId}/acceleratorTypes':
    parameters: *ref_1
    get:
      description: Lists accelerator types supported by this API.
      operationId: tpu.projects.locations.acceleratorTypes.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAcceleratorTypesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: accelerator_types
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.acceleratorTypes
  '/v2/projects/{projectsId}/locations/{locationsId}/runtimeVersions':
    parameters: *ref_1
    get:
      description: Lists runtime versions supported by this API.
      operationId: tpu.projects.locations.runtimeVersions.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRuntimeVersionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: runtime_versions
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.runtimeVersions
  '/v2/projects/{projectsId}/locations/{locationsId}/runtimeVersions/{runtimeVersionsId}':
    parameters: *ref_1
    get:
      description: Gets a runtime version.
      operationId: tpu.projects.locations.runtimeVersions.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuntimeVersion'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: runtimeVersionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: runtime_versions
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: tpu.projects.locations.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: tpu.projects.locations.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: tpu.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v2/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: tpu.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
