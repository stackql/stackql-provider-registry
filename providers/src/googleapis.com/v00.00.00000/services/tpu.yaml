openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Cloud TPU API
  description: TPU API provides customers with access to Google TPU technology.
  version: v2
  x-discovery-doc-revision: '20230814'
  x-generated-date: '2023-09-01'
externalDocs:
  url: 'https://cloud.google.com/tpu/'
servers:
  - url: 'https://tpu.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    ListAcceleratorTypesResponse:
      id: ListAcceleratorTypesResponse
      type: object
      description: Response for ListAcceleratorTypes.
      properties:
        unreachable:
          items:
            type: string
          type: array
          description: Locations that could not be reached.
        acceleratorTypes:
          type: array
          items:
            $ref: '#/components/schemas/AcceleratorType'
          description: The listed nodes.
        nextPageToken:
          type: string
          description: The next page token or empty if none.
    GetGuestAttributesResponse:
      id: GetGuestAttributesResponse
      properties:
        guestAttributes:
          description: The guest attributes for the TPU workers.
          items:
            $ref: '#/components/schemas/GuestAttributes'
          type: array
      type: object
      description: Response for GetGuestAttributes.
    NetworkConfig:
      id: NetworkConfig
      description: Network related configurations.
      properties:
        enableExternalIps:
          type: boolean
          description: 'Indicates that external IP addresses would be associated with the TPU workers. If set to false, the specified subnetwork or network should have Private Google Access enabled.'
        subnetwork:
          type: string
          description: 'The name of the subnetwork for the TPU node. It must be a preexisting Google Compute Engine subnetwork. If none is provided, "default" will be used.'
        canIpForward:
          type: boolean
          description: Allows the TPU node to send and receive packets with non-matching destination or source IPs. This is required if you plan to use the TPU workers to forward routes.
        network:
          description: 'The name of the network for the TPU node. It must be a preexisting Google Compute Engine network. If none is provided, "default" will be used.'
          type: string
      type: object
    OperationMetadata:
      id: OperationMetadata
      description: Metadata describing an Operation
      type: object
      properties:
        cancelRequested:
          type: boolean
          description: Specifies if cancellation was requested for the operation.
        target:
          description: Target of the operation - for example projects/project-1/connectivityTests/test-1
          type: string
        apiVersion:
          description: API version.
          type: string
        verb:
          description: Name of the verb executed by the operation.
          type: string
        endTime:
          format: google-datetime
          type: string
          description: The time the operation finished running.
        createTime:
          description: The time the operation was created.
          format: google-datetime
          type: string
        statusDetail:
          description: 'Human-readable status of the operation, if any.'
          type: string
    ServiceIdentity:
      id: ServiceIdentity
      description: The per-product per-project service identity for Cloud TPU service.
      type: object
      properties:
        email:
          description: The email address of the service identity.
          type: string
    GenerateServiceIdentityResponse:
      type: object
      id: GenerateServiceIdentityResponse
      properties:
        identity:
          $ref: '#/components/schemas/ServiceIdentity'
          description: ServiceIdentity that was created or retrieved.
      description: Response for GenerateServiceIdentity.
    AttachedDisk:
      description: 'A node-attached disk resource. Next ID: 8;'
      id: AttachedDisk
      type: object
      properties:
        mode:
          description: 'The mode in which to attach this disk. If not specified, the default is READ_WRITE mode. Only applicable to data_disks.'
          enum:
            - DISK_MODE_UNSPECIFIED
            - READ_WRITE
            - READ_ONLY
          enumDescriptions:
            - The disk mode is not known/set.
            - Attaches the disk in read-write mode. Only one TPU node can attach a disk in read-write mode at a time.
            - Attaches the disk in read-only mode. Multiple TPU nodes can attach a disk in read-only mode at a time.
          type: string
        sourceDisk:
          description: 'Specifies the full path to an existing disk. For example: "projects/my-project/zones/us-central1-c/disks/my-disk".'
          type: string
    Empty:
      properties: {}
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      id: Empty
      type: object
    SchedulingConfig:
      description: Sets the scheduling options for this node.
      properties:
        preemptible:
          description: Defines whether the node is preemptible.
          type: boolean
        reserved:
          description: Whether the node is created under a reservation.
          type: boolean
      id: SchedulingConfig
      type: object
    Operation:
      type: object
      description: This resource represents a long-running operation that is the result of a network API call.
      id: Operation
      properties:
        response:
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
        error:
          description: The error result of the operation in case of failure or cancellation.
          $ref: '#/components/schemas/Status'
        done:
          type: boolean
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
        metadata:
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
        name:
          type: string
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
    GuestAttributesEntry:
      properties:
        namespace:
          description: Namespace for the guest attribute entry.
          type: string
        key:
          description: Key for the guest attribute entry.
          type: string
        value:
          description: Value for the guest attribute entry.
          type: string
      description: A guest attributes namespace/key/value entry.
      id: GuestAttributesEntry
      type: object
    AcceleratorType:
      description: A accelerator type that a Node can be configured with.
      properties:
        name:
          type: string
          description: The resource name.
        type:
          description: The accelerator type.
          type: string
        acceleratorConfigs:
          type: array
          items:
            $ref: '#/components/schemas/AcceleratorConfig'
          description: The accelerator config.
      type: object
      id: AcceleratorType
    Symptom:
      properties:
        workerId:
          description: A string used to uniquely distinguish a worker within a TPU node.
          type: string
        createTime:
          format: google-datetime
          type: string
          description: Timestamp when the Symptom is created.
        symptomType:
          description: Type of the Symptom.
          type: string
          enumDescriptions:
            - Unspecified symptom.
            - TPU VM memory is low.
            - TPU runtime is out of memory.
            - TPU runtime execution has timed out.
            - TPU runtime fails to construct a mesh that recognizes each TPU device's neighbors.
            - TPU HBM is out of memory.
            - Abusive behaviors have been identified on the current project.
          enum:
            - SYMPTOM_TYPE_UNSPECIFIED
            - LOW_MEMORY
            - OUT_OF_MEMORY
            - EXECUTE_TIMED_OUT
            - MESH_BUILD_FAIL
            - HBM_OUT_OF_MEMORY
            - PROJECT_ABUSE
        details:
          description: Detailed information of the current Symptom.
          type: string
      description: A Symptom instance.
      type: object
      id: Symptom
    GuestAttributes:
      id: GuestAttributes
      properties:
        queryPath:
          description: The path to be queried. This can be the default namespace ('/') or a nested namespace ('/\/') or a specified key ('/\/\')
          type: string
        queryValue:
          description: The value of the requested queried path.
          $ref: '#/components/schemas/GuestAttributesValue'
      type: object
      description: A guest attributes.
    NetworkEndpoint:
      description: A network endpoint over which a TPU worker can be reached.
      type: object
      properties:
        accessConfig:
          description: The access config for the TPU worker.
          $ref: '#/components/schemas/AccessConfig'
        port:
          description: The port of this network endpoint.
          type: integer
          format: int32
        ipAddress:
          type: string
          description: The internal IP address of this network endpoint.
      id: NetworkEndpoint
    ListRuntimeVersionsResponse:
      properties:
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
        runtimeVersions:
          description: The listed nodes.
          type: array
          items:
            $ref: '#/components/schemas/RuntimeVersion'
        nextPageToken:
          type: string
          description: The next page token or empty if none.
      description: Response for ListRuntimeVersions.
      type: object
      id: ListRuntimeVersionsResponse
    Location:
      properties:
        displayName:
          type: string
          description: 'The friendly name for this location, typically a nearby city name. For example, "Tokyo".'
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: Service-specific metadata. For example the available capacity at the given location.
          type: object
        name:
          type: string
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
        labels:
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          additionalProperties:
            type: string
          type: object
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
      type: object
      description: A resource that represents a Google Cloud location.
      id: Location
    GenerateServiceIdentityRequest:
      id: GenerateServiceIdentityRequest
      type: object
      properties: {}
      description: Request for GenerateServiceIdentity.
    ShieldedInstanceConfig:
      type: object
      id: ShieldedInstanceConfig
      properties:
        enableSecureBoot:
          type: boolean
          description: Defines whether the instance has Secure Boot enabled.
      description: A set of Shielded Instance options.
    ListNodesResponse:
      id: ListNodesResponse
      properties:
        nodes:
          items:
            $ref: '#/components/schemas/Node'
          description: The listed nodes.
          type: array
        nextPageToken:
          description: The next page token or empty if none.
          type: string
        unreachable:
          items:
            type: string
          description: Locations that could not be reached.
          type: array
      type: object
      description: Response for ListNodes.
    GuestAttributesValue:
      properties:
        items:
          items:
            $ref: '#/components/schemas/GuestAttributesEntry'
          description: The list of guest attributes entries.
          type: array
      description: Array of guest attribute namespace/key/value tuples.
      id: GuestAttributesValue
      type: object
    ServiceAccount:
      id: ServiceAccount
      properties:
        email:
          description: 'Email address of the service account. If empty, default Compute service account will be used.'
          type: string
        scope:
          description: 'The list of scopes to be made available for this service account. If empty, access to all Cloud APIs will be allowed.'
          type: array
          items:
            type: string
      type: object
      description: A service account.
    ListOperationsResponse:
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        operations:
          type: array
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Operation'
    RuntimeVersion:
      id: RuntimeVersion
      properties:
        version:
          type: string
          description: The runtime version.
        name:
          description: The resource name.
          type: string
      description: A runtime version that a Node can be configured with.
      type: object
    StopNodeRequest:
      id: StopNodeRequest
      properties: {}
      description: Request for StopNode.
      type: object
    ListLocationsResponse:
      type: object
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        locations:
          description: A list of locations that matches the specified filter in the request.
          type: array
          items:
            $ref: '#/components/schemas/Location'
      description: The response message for Locations.ListLocations.
      id: ListLocationsResponse
    Status:
      properties:
        code:
          format: int32
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          type: integer
        message:
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
          type: string
        details:
          type: array
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
      type: object
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      id: Status
    AccessConfig:
      type: object
      properties:
        externalIp:
          description: Output only. An external IP address associated with the TPU worker.
          readOnly: true
          type: string
      description: An access config attached to the TPU worker.
      id: AccessConfig
    StartNodeRequest:
      description: Request for StartNode.
      id: StartNodeRequest
      type: object
      properties: {}
    AcceleratorConfig:
      properties:
        type:
          enum:
            - TYPE_UNSPECIFIED
            - V2
            - V3
            - V4
          type: string
          enumDescriptions:
            - Unspecified version.
            - TPU v2.
            - TPU v3.
            - TPU v4.
          description: Required. Type of TPU.
        topology:
          description: Required. Topology of TPU in chips.
          type: string
      type: object
      id: AcceleratorConfig
      description: A TPU accelerator configuration.
    Node:
      id: Node
      type: object
      properties:
        acceleratorConfig:
          description: The AccleratorConfig for the TPU Node.
          $ref: '#/components/schemas/AcceleratorConfig'
        schedulingConfig:
          description: The scheduling options for this node.
          $ref: '#/components/schemas/SchedulingConfig'
        acceleratorType:
          description: Optional. The type of hardware accelerators associated with this node.
          type: string
        shieldedInstanceConfig:
          $ref: '#/components/schemas/ShieldedInstanceConfig'
          description: Shielded Instance options.
        multisliceNode:
          type: boolean
          description: Output only. Whether the Node belongs to a Multislice group.
          readOnly: true
        state:
          enumDescriptions:
            - TPU node state is not known/set.
            - TPU node is being created.
            - TPU node has been created.
            - TPU node is restarting.
            - TPU node is undergoing reimaging.
            - TPU node is being deleted.
            - TPU node is being repaired and may be unusable. Details can be found in the 'help_description' field.
            - TPU node is stopped.
            - TPU node is currently stopping.
            - TPU node is currently starting.
            - TPU node has been preempted. Only applies to Preemptible TPU Nodes.
            - TPU node has been terminated due to maintenance or has reached the end of its life cycle (for preemptible nodes).
            - TPU node is currently hiding.
            - TPU node has been hidden.
            - TPU node is currently unhiding.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - READY
            - RESTARTING
            - REIMAGING
            - DELETING
            - REPAIRING
            - STOPPED
            - STOPPING
            - STARTING
            - PREEMPTED
            - TERMINATED
            - HIDING
            - HIDDEN
            - UNHIDING
          description: Output only. The current state for the TPU Node.
          readOnly: true
          type: string
        id:
          readOnly: true
          description: Output only. The unique identifier for the TPU Node.
          type: string
          format: int64
        apiVersion:
          enum:
            - API_VERSION_UNSPECIFIED
            - V1_ALPHA1
            - V1
            - V2_ALPHA1
            - V2
          type: string
          description: Output only. The API version that created this Node.
          enumDescriptions:
            - API version is unknown.
            - TPU API V1Alpha1 version.
            - TPU API V1 version.
            - TPU API V2Alpha1 version.
            - TPU API V2 version.
          readOnly: true
        description:
          description: The user-supplied description of the TPU. Maximum of 512 characters.
          type: string
        tags:
          type: array
          items:
            type: string
          description: Tags to apply to the TPU Node. Tags are used to identify valid sources or targets for network firewalls.
        networkEndpoints:
          items:
            $ref: '#/components/schemas/NetworkEndpoint'
          description: Output only. The network endpoints where TPU workers can be accessed and sent work. It is recommended that runtime clients of the node reach out to the 0th entry in this map first.
          readOnly: true
          type: array
        serviceAccount:
          $ref: '#/components/schemas/ServiceAccount'
          description: 'The Google Cloud Platform Service Account to be used by the TPU node VMs. If None is specified, the default compute service account will be used.'
        labels:
          description: Resource labels to represent user-provided metadata.
          additionalProperties:
            type: string
          type: object
        dataDisks:
          type: array
          items:
            $ref: '#/components/schemas/AttachedDisk'
          description: The additional data disks for the Node.
        createTime:
          readOnly: true
          description: Output only. The time when the node was created.
          format: google-datetime
          type: string
        cidrBlock:
          type: string
          description: 'The CIDR block that the TPU node will use when selecting an IP address. This CIDR block must be a /29 block; the Compute Engine networks API forbids a smaller block, and using a larger block would be wasteful (a node can only consume one IP address). Errors will occur if the CIDR block has already been used for a currently existing TPU node, the CIDR block conflicts with any subnetworks in the user''s provided network, or the provided network is peered with another network that is using that CIDR block.'
        symptoms:
          readOnly: true
          description: Output only. The Symptoms that have occurred to the TPU Node.
          type: array
          items:
            $ref: '#/components/schemas/Symptom'
        name:
          type: string
          description: Output only. Immutable. The name of the TPU.
          readOnly: true
        metadata:
          additionalProperties:
            type: string
          type: object
          description: Custom metadata to apply to the TPU Node. Can set startup-script and shutdown-script
        health:
          type: string
          description: The health status of the TPU node.
          enumDescriptions:
            - 'Health status is unknown: not initialized or failed to retrieve.'
            - The resource is healthy.
            - The resource is unresponsive.
            - The in-guest ML stack is unhealthy.
            - The node is under maintenance/priority boost caused rescheduling and will resume running once rescheduled.
          enum:
            - HEALTH_UNSPECIFIED
            - HEALTHY
            - TIMEOUT
            - UNHEALTHY_TENSORFLOW
            - UNHEALTHY_MAINTENANCE
        runtimeVersion:
          type: string
          description: Required. The runtime version running in the Node.
        networkConfig:
          $ref: '#/components/schemas/NetworkConfig'
          description: Network configurations for the TPU node.
        healthDescription:
          readOnly: true
          description: 'Output only. If this field is populated, it contains a description of why the TPU Node is unhealthy.'
          type: string
        queuedResource:
          readOnly: true
          description: Output only. The qualified name of the QueuedResource that requested this Node.
          type: string
      description: A TPU instance.
    GetGuestAttributesRequest:
      description: Request for GetGuestAttributes.
      type: object
      properties:
        queryPath:
          description: The guest attributes path to be queried.
          type: string
        workerIds:
          items:
            type: string
          type: array
          description: 'The 0-based worker ID. If it is empty, all workers'' GuestAttributes will be returned.'
      id: GetGuestAttributesRequest
  parameters:
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
  x-stackQL-resources:
    runtime_versions:
      id: google.tpu.runtime_versions
      name: runtime_versions
      title: Runtime Versions
      methods:
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1runtimeVersions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.runtimeVersions
        _list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1runtimeVersions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1runtimeVersions~1{runtimeVersionsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/runtime_versions/methods/get'
          - $ref: '#/components/x-stackQL-resources/runtime_versions/methods/list'
        insert: []
        update: []
        delete: []
    nodes:
      id: google.tpu.nodes
      name: nodes
      title: Nodes
      methods:
        start:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nodes~1{nodesId}:start/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nodes~1{nodesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nodes~1{nodesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nodes~1{nodesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nodes/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nodes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.nodes
        _list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nodes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nodes~1{nodesId}:stop/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/nodes/methods/get'
          - $ref: '#/components/x-stackQL-resources/nodes/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/nodes/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/nodes/methods/delete'
    nodes_guest_attributes:
      id: google.tpu.nodes_guest_attributes
      name: nodes_guest_attributes
      title: Nodes Guest Attributes
      methods:
        get_guest_attributes:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1nodes~1{nodesId}:getGuestAttributes/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    operations:
      id: google.tpu.operations
      name: operations
      title: Operations
      methods:
        cancel:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    accelerator_types:
      id: google.tpu.accelerator_types
      name: accelerator_types
      title: Accelerator Types
      methods:
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1acceleratorTypes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.acceleratorTypes
        _list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1acceleratorTypes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1acceleratorTypes~1{acceleratorTypesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accelerator_types/methods/get'
          - $ref: '#/components/x-stackQL-resources/accelerator_types/methods/list'
        insert: []
        update: []
        delete: []
    locations:
      id: google.tpu.locations
      name: locations
      title: Locations
      methods:
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        _list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        generate_service_identity:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}:generateServiceIdentity/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        delete: []
paths:
  '/v2/projects/{projectsId}/locations/{locationsId}/runtimeVersions':
    parameters: &ref_1
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/access_token'
    get:
      description: Lists runtime versions supported by this API.
      operationId: tpu.projects.locations.runtimeVersions.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRuntimeVersionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: runtime_versions
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.runtimeVersions
  '/v2/projects/{projectsId}/locations/{locationsId}/runtimeVersions/{runtimeVersionsId}':
    parameters: *ref_1
    get:
      description: Gets a runtime version.
      operationId: tpu.projects.locations.runtimeVersions.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuntimeVersion'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: runtimeVersionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: runtime_versions
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v2/projects/{projectsId}/locations/{locationsId}/nodes/{nodesId}:start':
    parameters: *ref_1
    post:
      description: Starts a node.
      operationId: tpu.projects.locations.nodes.start
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartNodeRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
      x-stackQL-resource: nodes
      x-stackQL-method: start
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/nodes/{nodesId}':
    parameters: *ref_1
    patch:
      description: Updates the configurations of a node.
      operationId: tpu.projects.locations.nodes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Node'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: nodes
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a node.
      operationId: tpu.projects.locations.nodes.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
      x-stackQL-resource: nodes
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the details of a node.
      operationId: tpu.projects.locations.nodes.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
      x-stackQL-resource: nodes
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v2/projects/{projectsId}/locations/{locationsId}/nodes':
    parameters: *ref_1
    post:
      description: Creates a node.
      operationId: tpu.projects.locations.nodes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Node'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: nodeId
          schema:
            type: string
      x-stackQL-resource: nodes
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists nodes.
      operationId: tpu.projects.locations.nodes.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNodesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: nodes
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.nodes
  '/v2/projects/{projectsId}/locations/{locationsId}/nodes/{nodesId}:stop':
    parameters: *ref_1
    post:
      description: Stops a node. This operation is only available with single TPU nodes.
      operationId: tpu.projects.locations.nodes.stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopNodeRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
      x-stackQL-resource: nodes
      x-stackQL-method: stop
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/nodes/{nodesId}:getGuestAttributes':
    parameters: *ref_1
    post:
      description: Retrieves the guest attributes for the node.
      operationId: tpu.projects.locations.nodes.getGuestAttributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetGuestAttributesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGuestAttributesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
      x-stackQL-resource: nodes_guest_attributes
      x-stackQL-method: get_guest_attributes
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: tpu.projects.locations.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: tpu.projects.locations.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: tpu.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v2/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: tpu.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v2/projects/{projectsId}/locations/{locationsId}/acceleratorTypes':
    parameters: *ref_1
    get:
      description: Lists accelerator types supported by this API.
      operationId: tpu.projects.locations.acceleratorTypes.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAcceleratorTypesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: accelerator_types
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.acceleratorTypes
  '/v2/projects/{projectsId}/locations/{locationsId}/acceleratorTypes/{acceleratorTypesId}':
    parameters: *ref_1
    get:
      description: Gets AcceleratorType.
      operationId: tpu.projects.locations.acceleratorTypes.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceleratorType'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: acceleratorTypesId
          required: true
          schema:
            type: string
      x-stackQL-resource: accelerator_types
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v2/projects/{projectsId}/locations/{locationsId}':
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: tpu.projects.locations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v2/projects/{projectsId}/locations':
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: tpu.projects.locations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: locations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.locations
  '/v2/projects/{projectsId}/locations/{locationsId}:generateServiceIdentity':
    parameters: *ref_1
    post:
      description: Generates the Cloud TPU service identity for the project.
      operationId: tpu.projects.locations.generateServiceIdentity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateServiceIdentityRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateServiceIdentityResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: generate_service_identity
      x-stackQL-verb: exec
