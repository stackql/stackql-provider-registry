openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Contact Center AI Platform API
  description: ''
  version: v1alpha1
  x-discovery-doc-revision: '20230116'
  x-generated-date: '2023-01-19'
externalDocs:
  url: https://cloud.google.com/solutions/contact-center-ai-platform
servers:
  - url: https://contactcenteraiplatform.googleapis.com
components:
  schemas:
    ListContactCentersResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          description: A token identifying a page of results the server should return.
        contactCenters:
          type: array
          items:
            $ref: '#/components/schemas/ContactCenter'
          description: The list of ContactCenter
        unreachable:
          items:
            type: string
          description: Locations that could not be reached.
          type: array
      description: Message for response to listing ContactCenters
      id: ListContactCentersResponse
    ContactCenter:
      type: object
      properties:
        labels:
          type: object
          description: Labels as key value pairs
          additionalProperties:
            type: string
        name:
          type: string
          description: name of resource
        createTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. [Output only] Create time stamp
        ccaipManagedUsers:
          description: Optional. Whether to enable users to be created in the CCAIP-instance concurrently to having users in Cloud identity
          type: boolean
        displayName:
          description: Required. A user friendly name for the ContactCenter.
          type: string
        customerDomainPrefix:
          type: string
          description: Required. Immutable. At least 2 and max 16 char long, must conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt).
        updateTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. [Output only] Update time stamp
        uris:
          readOnly: true
          $ref: '#/components/schemas/URIs'
          description: Output only. URIs to access the deployed ContactCenters.
        userEmail:
          type: string
          description: Optional. Email address of the first admin users.
        instanceConfig:
          $ref: '#/components/schemas/InstanceConfig'
          description: The configuration of this instance, it is currently immutable once created.
        samlParams:
          description: Optional. Params that sets up Google as IdP.
          $ref: '#/components/schemas/SAMLParams'
        state:
          enumDescriptions:
            - The default value. This value is used if the state is omitted.
            - State DEPLOYING
            - State DEPLOYED
            - State TERMINATING
            - State FAILED
            - State TERMINATING_FAILED
            - State TERMINATED
          readOnly: true
          type: string
          enum:
            - STATE_UNSPECIFIED
            - STATE_DEPLOYING
            - STATE_DEPLOYED
            - STATE_TERMINATING
            - STATE_FAILED
            - STATE_TERMINATING_FAILED
            - STATE_TERMINATED
          description: Output only. The state of this contact center.
      id: ContactCenter
      description: Message describing ContactCenter object
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      id: ListLocationsResponse
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        locations:
          items:
            $ref: '#/components/schemas/Location'
          type: array
          description: A list of locations that matches the specified filter in the request.
      type: object
    CancelOperationRequest:
      id: CancelOperationRequest
      type: object
      properties: {}
      description: The request message for Operations.CancelOperation.
    OperationMetadata:
      type: object
      id: OperationMetadata
      properties:
        createTime:
          readOnly: true
          type: string
          description: Output only. The time the operation was created.
          format: google-datetime
        requestedCancellation:
          type: boolean
          readOnly: true
          description: Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
        target:
          readOnly: true
          description: Output only. Server-defined resource path for the target of the operation.
          type: string
        endTime:
          type: string
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
        contactCenter:
          description: Contact center information for this request
          $ref: '#/components/schemas/ContactCenter'
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusMessage:
          readOnly: true
          description: Output only. Human-readable status of the operation, if any.
          type: string
      description: Represents the metadata of the long-running operation.
    Location:
      id: Location
      type: object
      properties:
        metadata:
          description: Service-specific metadata. For example the available capacity at the given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        labels:
          additionalProperties:
            type: string
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          type: object
        name:
          type: string
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
        displayName:
          description: The friendly name for this location, typically a nearby city name. For example, "Tokyo".
          type: string
        locationId:
          type: string
          description: 'The canonical id for this location. For example: `"us-east1"`.'
      description: A resource that represents Google Cloud Platform location.
    Operation:
      type: object
      id: Operation
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        metadata:
          type: object
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        error:
          description: The error result of the operation in case of failure or cancellation.
          $ref: '#/components/schemas/Status'
        done:
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
          type: boolean
        response:
          description: The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
    SAMLParams:
      properties:
        ssoUri:
          description: Single sign-on URL
          type: string
        userEmail:
          description: Email address of the first admin users.
          type: string
        entityId:
          description: Entity id URL
          type: string
        certificate:
          type: string
          description: SAML certificate
      type: object
      description: Message storing SAML params to enable Google as IDP.
      id: SAMLParams
    InstanceConfig:
      id: InstanceConfig
      properties:
        instanceSize:
          enum:
            - INSTANCE_SIZE_UNSPECIFIED
            - STANDARD_SMALL
            - STANDARD_MEDIUM
            - STANDARD_LARGE
          enumDescriptions:
            - The default value. This value is used if the state is omitted.
            - Instance Size STANDARD_SMALL.
            - Instance Size STANDARD_MEDIUM.
            - Instance Size STANDARD_LARGE.
          type: string
          description: The instance size of this the instance configuration.
      type: object
      description: Message storing the instance configuration.
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        operations:
          items:
            $ref: '#/components/schemas/Operation'
          type: array
          description: A list of operations that matches the specified filter in the request.
        nextPageToken:
          type: string
          description: The standard List next-page token.
      id: ListOperationsResponse
      type: object
    URIs:
      type: object
      properties:
        mediaUri:
          type: string
          description: Media Uri of the ContactCenter.
        chatBotUri:
          type: string
          description: Chat Bot Uri of the ContactCenter
        virtualAgentStreamingServiceUri:
          description: Virtual Agent Streaming Service Uri of the ContactCenter.
          type: string
        rootUri:
          type: string
          description: Root Uri of the ContactCenter.
      description: Message storing the URIs of the ContactCenter.
      id: URIs
    Status:
      id: Status
      type: object
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      properties:
        details:
          type: array
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
        code:
          type: integer
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
    Empty:
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      id: Empty
      type: object
      properties: {}
    ContactCenterQuota:
      description: Represents a quota for contact centers.
      properties:
        contactCenterCountSum:
          description: Reflects the count sum of contact centers on a billing account.
          type: integer
          format: int32
        contactCenterCountLimit:
          type: integer
          format: int32
          description: Reflects the count limit of contact centers on a billing account.
      type: object
      id: ContactCenterQuota
  parameters:
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    operations:
      id: google.contactcenteraiplatform.operations
      name: operations
      title: Operations
      methods:
        projects_locations_operations_delete:
          operation:
            $ref: '#/paths/~1v1alpha1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_get:
          operation:
            $ref: '#/paths/~1v1alpha1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_cancel:
          operation:
            $ref: '#/paths/~1v1alpha1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1alpha1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: operations
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_delete'
    contact_centers:
      id: google.contactcenteraiplatform.contact_centers
      name: contact_centers
      title: Contact_centers
      methods:
        projects_locations_contactCenters_patch:
          operation:
            $ref: '#/paths/~1v1alpha1~1projects~1{projectsId}~1locations~1{locationsId}~1contactCenters~1{contactCentersId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_contactCenters_delete:
          operation:
            $ref: '#/paths/~1v1alpha1~1projects~1{projectsId}~1locations~1{locationsId}~1contactCenters~1{contactCentersId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_contactCenters_get:
          operation:
            $ref: '#/paths/~1v1alpha1~1projects~1{projectsId}~1locations~1{locationsId}~1contactCenters~1{contactCentersId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_contactCenters_list:
          operation:
            $ref: '#/paths/~1v1alpha1~1projects~1{projectsId}~1locations~1{locationsId}~1contactCenters/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_contactCenters_create:
          operation:
            $ref: '#/paths/~1v1alpha1~1projects~1{projectsId}~1locations~1{locationsId}~1contactCenters/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/contact_centers/methods/projects_locations_contactCenters_get'
          - $ref: '#/components/x-stackQL-resources/contact_centers/methods/projects_locations_contactCenters_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/contact_centers/methods/projects_locations_contactCenters_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/contact_centers/methods/projects_locations_contactCenters_delete'
    locations:
      id: google.contactcenteraiplatform.locations
      name: locations
      title: Locations
      methods:
        projects_locations_list:
          operation:
            $ref: '#/paths/~1v1alpha1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: locations
        projects_locations_queryContactCenterQuota:
          operation:
            $ref: '#/paths/~1v1alpha1~1projects~1{projectsId}~1locations~1{locationsId}:queryContactCenterQuota/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_get:
          operation:
            $ref: '#/paths/~1v1alpha1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_list'
        insert: []
        update: []
        delete: []
paths:
  /v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
    delete:
      description: Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
      operationId: contactcenteraiplatform.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: contactcenteraiplatform.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: contactcenteraiplatform.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: exec
  /v1alpha1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.'
      operationId: contactcenteraiplatform.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1alpha1/projects/{projectsId}/locations/{locationsId}/contactCenters/{contactCentersId}:
    parameters: *ref_1
    patch:
      description: Updates the parameters of a single ContactCenter.
      operationId: contactcenteraiplatform.projects.locations.contactCenters.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactCenter'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: contactCentersId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: contact_centers
      x-stackQL-verb: exec
    delete:
      description: Deletes a single ContactCenter.
      operationId: contactcenteraiplatform.projects.locations.contactCenters.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: contactCentersId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: contact_centers
      x-stackQL-verb: delete
    get:
      description: Gets details of a single ContactCenter.
      operationId: contactcenteraiplatform.projects.locations.contactCenters.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactCenter'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: contactCentersId
          required: true
          schema:
            type: string
      x-stackQL-resource: contact_centers
      x-stackQL-verb: select
  /v1alpha1/projects/{projectsId}/locations/{locationsId}/contactCenters:
    parameters: *ref_1
    get:
      description: Lists ContactCenters in a given project and location.
      operationId: contactcenteraiplatform.projects.locations.contactCenters.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContactCentersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: contact_centers
      x-stackQL-verb: select
    post:
      description: Creates a new ContactCenter in a given project and location.
      operationId: contactcenteraiplatform.projects.locations.contactCenters.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactCenter'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: contactCenterId
          schema:
            type: string
      x-stackQL-resource: contact_centers
      x-stackQL-verb: insert
  /v1alpha1/projects/{projectsId}/locations:
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: contactcenteraiplatform.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1alpha1/projects/{projectsId}/locations/{locationsId}:queryContactCenterQuota:
    parameters: *ref_1
    get:
      description: Queries the contact center quota, an aggregation over all the projects, that belongs to the billing account, which the input project belongs to.
      operationId: contactcenteraiplatform.projects.locations.queryContactCenterQuota
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactCenterQuota'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: exec
  /v1alpha1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: contactcenteraiplatform.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
