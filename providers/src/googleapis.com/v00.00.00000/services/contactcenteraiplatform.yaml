openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Contact Center AI Platform API
  description: ''
  version: v1alpha1
  x-discovery-doc-revision: '20240531'
  x-generated-date: '2024-06-02'
externalDocs:
  url: https://cloud.google.com/solutions/contact-center-ai-platform
servers:
  - url: https://contactcenteraiplatform.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    ListOperationsResponse:
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Operation:
      id: Operation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    Status:
      id: Status
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    CancelOperationRequest:
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
      type: object
      properties: {}
    ListContactCentersResponse:
      id: ListContactCentersResponse
      description: Message for response to listing ContactCenters
      type: object
      properties:
        contactCenters:
          description: The list of ContactCenter
          type: array
          items:
            $ref: '#/components/schemas/ContactCenter'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    ContactCenter:
      id: ContactCenter
      description: 'Message describing ContactCenter object Next ID: 23'
      type: object
      properties:
        name:
          description: name of resource
          type: string
        createTime:
          description: Output only. [Output only] Create time stamp
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. [Output only] Update time stamp
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: Labels as key value pairs
          type: object
          additionalProperties:
            type: string
        uris:
          description: Output only. URIs to access the deployed ContactCenters.
          readOnly: true
          $ref: '#/components/schemas/URIs'
        state:
          description: Output only. The state of this contact center.
          readOnly: true
          type: string
          enumDescriptions:
            - The default value. This value is used if the state is omitted.
            - State DEPLOYING
            - State DEPLOYED
            - State TERMINATING
            - State FAILED
            - State TERMINATING_FAILED
            - State TERMINATED
            - State IN_GRACE_PERIOD
            - >-
              State in STATE_FAILING_OVER. This State must ONLY be used by
              Multiregional Instances when a failover was triggered. Customers
              are not able to update instances in this state.
            - >-
              State DEGRADED. This State must ONLY be used by Multiregional
              Instances after a failover was executed successfully. Customers
              are not able to update instances in this state.
            - >-
              State REPAIRING. This State must ONLY be used by Multiregional
              Instances after a fallback was triggered. Customers are not able
              to update instancs in this state.
          enum:
            - STATE_UNSPECIFIED
            - STATE_DEPLOYING
            - STATE_DEPLOYED
            - STATE_TERMINATING
            - STATE_FAILED
            - STATE_TERMINATING_FAILED
            - STATE_TERMINATED
            - STATE_IN_GRACE_PERIOD
            - STATE_FAILING_OVER
            - STATE_DEGRADED
            - STATE_REPAIRING
        customerDomainPrefix:
          description: >-
            Required. Immutable. At least 2 and max 16 char long, must conform
            to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt).
          type: string
        displayName:
          description: Required. A user friendly name for the ContactCenter.
          type: string
        instanceConfig:
          description: >-
            The configuration of this instance, it is currently immutable once
            created.
          $ref: '#/components/schemas/InstanceConfig'
        samlParams:
          description: Optional. Params that sets up Google as IdP.
          $ref: '#/components/schemas/SAMLParams'
        userEmail:
          description: Optional. Email address of the first admin user.
          type: string
        ccaipManagedUsers:
          description: >-
            Optional. Whether to enable users to be created in the
            CCAIP-instance concurrently to having users in Cloud identity
          type: boolean
        adminUser:
          description: >-
            Optional. Info about the first admin user, such as given name and
            family name.
          $ref: '#/components/schemas/AdminUser'
        kmsKey:
          description: >-
            Immutable. The KMS key name to encrypt the user input
            (`ContactCenter`).
          type: string
        privateComponents:
          description: >-
            Output only. A list of UJET components that should be privately
            accessed. This field is set by reading settings from the data plane.
            For more information about the format of the component please refer
            to go/ccaip-vpc-sc-org-policy. This field is must be fully populated
            only for Create/Update resource operations. The main use case for
            this field is OrgPolicy checks via CPE.
          readOnly: true
          type: array
          items:
            type: string
        privateAccess:
          description: Optional. VPC-SC related networking configuration.
          $ref: '#/components/schemas/PrivateAccess'
        early:
          description: Optional. Early release channel.
          $ref: '#/components/schemas/Early'
        normal:
          description: Optional. Normal release channel.
          $ref: '#/components/schemas/Normal'
        critical:
          description: Optional. Critical release channel.
          $ref: '#/components/schemas/Critical'
    URIs:
      id: URIs
      description: Message storing the URIs of the ContactCenter.
      type: object
      properties:
        rootUri:
          description: Root Uri of the ContactCenter.
          type: string
        mediaUri:
          description: Media Uri of the ContactCenter.
          type: string
        virtualAgentStreamingServiceUri:
          description: Virtual Agent Streaming Service Uri of the ContactCenter.
          type: string
        chatBotUri:
          description: Chat Bot Uri of the ContactCenter
          type: string
    InstanceConfig:
      id: InstanceConfig
      description: Message storing the instance configuration.
      type: object
      properties:
        instanceSize:
          description: The instance size of this the instance configuration.
          type: string
          enumDescriptions:
            - The default value. This value is used if the state is omitted.
            - Instance Size STANDARD_SMALL.
            - Instance Size STANDARD_MEDIUM.
            - Instance Size STANDARD_LARGE.
            - Instance Size STANDARD_XLARGE.
            - Instance Size STANDARD_2XLARGE.
            - Instance Size STANDARD_3XLARGE.
            - Instance Size DEV_EXTRA_SMALL.
            - Instance Size MULTIREGION_SMALL
            - Instance Size MULTIREGION_MEDIUM
            - Instance Size MULTIREGION_LARGE
            - Instance Size MULTIREGION_XLARGE
            - Instance Size MULTIREGION_2XLARGE.
            - Instance Size MULTIREGION_3XLARGE.
          enum:
            - INSTANCE_SIZE_UNSPECIFIED
            - STANDARD_SMALL
            - STANDARD_MEDIUM
            - STANDARD_LARGE
            - STANDARD_XLARGE
            - STANDARD_2XLARGE
            - STANDARD_3XLARGE
            - DEV_XSMALL
            - MULTIREGION_SMALL
            - MULTIREGION_MEDIUM
            - MULTIREGION_LARGE
            - MULTIREGION_XLARGE
            - MULTIREGION_2XLARGE
            - MULTIREGION_3XLARGE
    SAMLParams:
      id: SAMLParams
      description: Message storing SAML params to enable Google as IDP.
      type: object
      properties:
        ssoUri:
          description: Single sign-on URL
          type: string
        entityId:
          description: Entity id URL
          type: string
        certificate:
          description: SAML certificate
          type: string
        userEmail:
          description: Email address of the first admin users.
          deprecated: true
          type: string
        emailMapping:
          description: IdP field that maps to the user’s email address
          type: string
        authenticationContexts:
          description: Additional contexts used for authentication.
          type: array
          items:
            type: string
            enumDescriptions:
              - >-
                The Unspecified class indicates that the authentication was
                performed by unspecified means.
              - >-
                The Internet Protocol class is applicable when a principal is
                authenticated through the use of a provided IP address.
              - >-
                The Internet Protocol Password class is applicable when a
                principal is authenticated through the use of a provided IP
                address, in addition to a username/password.
              - >-
                This class is applicable when the principal has authenticated
                using a password to a local authentication authority, in order
                to acquire a Kerberos ticket. That Kerberos ticket is then used
                for subsequent network authentication.
              - >-
                Reflects no mobile customer registration procedures and an
                authentication of the mobile device without requiring explicit
                end-user interaction. This context class authenticates only the
                device and never the user; it is useful when services other than
                the mobile operator want to add a secure device authentication
                to their authentication process.
              - >-
                Reflects no mobile customer registration procedures and a
                two-factor based authentication, such as secure device and user
                PIN. This context class is useful when a service other than the
                mobile operator wants to link their customer ID to a mobile
                supplied two-factor authentication service by capturing mobile
                phone data at enrollment.
              - >-
                Reflects mobile contract customer registration procedures and a
                single factor authentication. For example, a digital signing
                device with tamper resistant memory for key storage, such as the
                mobile MSISDN, but no required PIN or biometric for real-time
                user authentication.
              - >-
                Reflects mobile contract customer registration procedures and a
                two-factor based authentication. For example, a digital signing
                device with tamper resistant memory for key storage, such as a
                GSM SIM, that requires explicit proof of user identity and
                intent, such as a PIN or biometric.
              - >-
                The Password class is applicable when a principal authenticates
                to an authentication authority through the presentation of a
                password over an unprotected HTTP session.
              - >-
                The PasswordProtectedTransport class is applicable when a
                principal authenticates to an authentication authority through
                the presentation of a password over a protected session.
              - >-
                The PreviousSession class is applicable when a principal had
                authenticated to an authentication authority at some point in
                the past using any authentication context supported by that
                authentication authority
              - >-
                The X509 context class indicates that the principal
                authenticated by means of a digital signature where the key was
                validated as part of an X.509 Public Key Infrastructure.
              - >-
                The PGP context class indicates that the principal authenticated
                by means of a digital signature where the key was validated as
                part of a PGP Public Key Infrastructure.
              - >-
                The SPKI context class indicates that the principal
                authenticated by means of a digital signature where the key was
                validated via an SPKI Infrastructure.
              - >-
                This context class indicates that the principal authenticated by
                means of a digital signature according to the processing rules
                specified in the XML Digital Signature specification [XMLSig].
              - >-
                The Smartcard class is identified when a principal authenticates
                to an authentication authority using a smartcard.
              - >-
                The SmartcardPKI class is applicable when a principal
                authenticates to an authentication authority through a
                two-factor authentication mechanism using a smartcard with
                enclosed private key and a PIN.
              - >-
                The Software-PKI class is applicable when a principal uses an
                X.509 certificate stored in software to authenticate to the
                authentication authority.
              - >-
                This class is used to indicate that the principal authenticated
                via the provision of a fixed-line telephone number, transported
                via a telephony protocol such as ADSL.
              - >-
                Indicates that the principal is "roaming" (perhaps using a phone
                card) and authenticates via the means of the line number, a user
                suffix, and a password element.
              - >-
                This class is used to indicate that the principal authenticated
                via the provision of a fixed-line telephone number and a user
                suffix, transported via a telephony protocol such as ADSL.
              - >-
                Indicates that the principal authenticated via the means of the
                line number, a user suffix, and a password element.
              - >-
                The Secure Remote Password class is applicable when the
                authentication was performed by means of Secure Remote Password
                as specified in [RFC 2945].
              - >-
                This class indicates that the principal authenticated by means
                of a client certificate, secured with the SSL/TLS transport.
              - >-
                The TimeSyncToken class is applicable when a principal
                authenticates through a time synchronization token.
            enum:
              - AUTHENTICATION_CONTEXT_UNSPECIFIED
              - INTERNET_PROTOCOL
              - INTERNET_PROTOCOL_PASSWORD
              - KERBEROS
              - MOBILE_ONE_FACTOR_UNREGISTERED
              - MOBILE_TWO_FACTOR_UNREGISTERED
              - MOBILE_ONE_FACTOR_CONTRACT
              - MOBILE_TWO_FACTOR_CONTRACT
              - PASSWORD
              - PASSWORD_PROTECTED_TRANSPORT
              - PREVIOUS_SESSION
              - PUBLIC_KEY_X509
              - PUBLIC_KEY_PGP
              - PUBLIC_KEY_SPKI
              - PUBLIC_KEY_XML_DIGITAL_SIGNATURE
              - SMARTCARD
              - SMARTCARD_PKI
              - SOFTWARE_PKI
              - TELEPHONY
              - TELEPHONY_NOMADIC
              - TELEPHONY_PERSONALIZED
              - TELEPHONY_AUTHENTICATED
              - SECURE_REMOTE_PASSWORD
              - SSL_TLS_CERTIFICATE_BASED
              - TIME_SYNC_TOKEN
    AdminUser:
      id: AdminUser
      description: 'Message storing info about the first admin user. Next ID: 3'
      type: object
      properties:
        givenName:
          description: Optional. First/given name of the first admin user.
          type: string
        familyName:
          description: Optional. Last/family name of the first admin user.
          type: string
    PrivateAccess:
      id: PrivateAccess
      description: Defines ingress and egress private traffic settings for CCAIP instances.
      type: object
      properties:
        ingressSettings:
          description: >-
            List of ingress components that should not be accessed via the
            Internet. For more information see go/ccaip-private-path-v2.
          type: array
          items:
            $ref: '#/components/schemas/Component'
        egressSettings:
          description: >-
            List of egress components that should not be accessed via the
            Internet. For more information see go/ccaip-private-path-v2.
          type: array
          items:
            $ref: '#/components/schemas/Component'
    Component:
      id: Component
      description: >-
        Defines a logical CCAIP component that e.g. “EMAIL”, "CRM". For more
        information see go/ccaip-private-path-v2. Each logical component is
        associated with a list of service attachments.
      type: object
      properties:
        name:
          description: Name of the component.
          type: string
        serviceAttachments:
          description: Associated service attachments.
          type: array
          items:
            $ref: '#/components/schemas/ServiceAttachment'
    ServiceAttachment:
      id: ServiceAttachment
      description: Container for the VPC-SC networking configurations.
      type: object
      properties:
        name:
          description: >-
            The service attachment name that will be used for sending private
            traffic to the CCAIP tenant project. Example:
            "projects/${TENANT_PROJECT_ID}/regions/${REGION}/serviceAttachments/ingress-default".
          type: string
        allowedProjectIds:
          description: >-
            The list of project ids that are allowed to send traffic to the
            service attachment. This field should be filled only for the ingress
            service attachments.
          type: array
          items:
            type: string
    Early:
      id: Early
      description: >-
        LINT.IfChange First Channel to receive the updates. Meant to dev/test
        instances
      type: object
      properties: {}
    Normal:
      id: Normal
      description: >-
        Instances in this Channel will receive updates after all instances in
        `Early` were updated + 2 days.
      type: object
      properties: {}
    Critical:
      id: Critical
      description: >-
        Instances in this Channel will receive updates after all instances in
        `Critical` were updated + 2 days. They also will only be updated outside
        of their peak hours.
      type: object
      properties:
        peakHours:
          description: Required. Hours during which the instance should not be updated.
          type: array
          items:
            $ref: '#/components/schemas/WeeklySchedule'
    WeeklySchedule:
      id: WeeklySchedule
      description: Message representing a weekly schedule.
      type: object
      properties:
        days:
          description: Required. Days of the week this schedule applies to.
          type: array
          items:
            type: string
            enumDescriptions:
              - The day of the week is unspecified.
              - Monday
              - Tuesday
              - Wednesday
              - Thursday
              - Friday
              - Saturday
              - Sunday
            enum:
              - DAY_OF_WEEK_UNSPECIFIED
              - MONDAY
              - TUESDAY
              - WEDNESDAY
              - THURSDAY
              - FRIDAY
              - SATURDAY
              - SUNDAY
        startTime:
          description: Required. Daily start time of the schedule.
          $ref: '#/components/schemas/TimeOfDay'
        endTime:
          description: >-
            Optional. Daily end time of the schedule. If `end_time` is before
            `start_time`, the schedule will be considered as ending on the next
            day.
          $ref: '#/components/schemas/TimeOfDay'
        duration:
          description: Optional. Duration of the schedule.
          type: string
          format: google-duration
    TimeOfDay:
      id: TimeOfDay
      description: >-
        Represents a time of day. The date and time zone are either not
        significant or are specified elsewhere. An API may choose to allow leap
        seconds. Related types are google.type.Date and
        `google.protobuf.Timestamp`.
      type: object
      properties:
        hours:
          description: >-
            Hours of day in 24 hour format. Should be from 0 to 23. An API may
            choose to allow the value "24:00:00" for scenarios like business
            closing time.
          type: integer
          format: int32
        minutes:
          description: Minutes of hour of day. Must be from 0 to 59.
          type: integer
          format: int32
        seconds:
          description: >-
            Seconds of minutes of the time. Must normally be from 0 to 59. An
            API may allow the value 60 if it allows leap-seconds.
          type: integer
          format: int32
        nanos:
          description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
          type: integer
          format: int32
    ContactCenterQuota:
      id: ContactCenterQuota
      description: Represents a quota for contact centers.
      type: object
      properties:
        contactCenterCountLimit:
          description: >-
            Deprecated: Use the Quota fields instead. Reflects the count limit
            of contact centers on a billing account.
          deprecated: true
          type: integer
          format: int32
        contactCenterCountSum:
          description: >-
            Deprecated: Use the Quota fields instead. Reflects the count sum of
            contact centers on a billing account.
          deprecated: true
          type: integer
          format: int32
        quotas:
          description: Quota details per contact center instance type.
          type: array
          items:
            $ref: '#/components/schemas/Quota'
    Quota:
      id: Quota
      description: Quota details.
      type: object
      properties:
        contactCenterCountLimit:
          description: Reflects the count limit of contact centers on a billing account.
          type: integer
          format: int32
        contactCenterCountSum:
          description: Reflects the count sum of contact centers on a billing account.
          type: integer
          format: int32
        contactCenterInstanceSize:
          description: Contact center instance type.
          type: string
          enumDescriptions:
            - The default value. This value is used if the state is omitted.
            - Instance Size STANDARD_SMALL.
            - Instance Size STANDARD_MEDIUM.
            - Instance Size STANDARD_LARGE.
            - Instance Size STANDARD_XLARGE.
            - Instance Size STANDARD_2XLARGE.
            - Instance Size STANDARD_3XLARGE.
            - Instance Size DEV_EXTRA_SMALL.
            - Instance Size MULTIREGION_SMALL
            - Instance Size MULTIREGION_MEDIUM
            - Instance Size MULTIREGION_LARGE
            - Instance Size MULTIREGION_XLARGE
            - Instance Size MULTIREGION_2XLARGE.
            - Instance Size MULTIREGION_3XLARGE.
          enum:
            - INSTANCE_SIZE_UNSPECIFIED
            - STANDARD_SMALL
            - STANDARD_MEDIUM
            - STANDARD_LARGE
            - STANDARD_XLARGE
            - STANDARD_2XLARGE
            - STANDARD_3XLARGE
            - DEV_XSMALL
            - MULTIREGION_SMALL
            - MULTIREGION_MEDIUM
            - MULTIREGION_LARGE
            - MULTIREGION_XLARGE
            - MULTIREGION_2XLARGE
            - MULTIREGION_3XLARGE
    ListLocationsResponse:
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Location:
      id: Location
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
          additionalProperties:
            type: string
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    GoogleCloudCommonOperationMetadata:
      id: GoogleCloudCommonOperationMetadata
      description: Represents the metadata of the long-running operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        target:
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusDetail:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        cancelRequested:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have been cancelled successfully
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
    OperationMetadata:
      id: OperationMetadata
      description: Represents the metadata of the long-running operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        target:
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        requestedCancellation:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have been cancelled successfully
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
        contactCenter:
          description: Contact center information for this request
          $ref: '#/components/schemas/ContactCenter'
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    locations:
      id: contactcenteraiplatform.locations
      name: locations
      title: Locations
      methods:
        query_contact_center_quota:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1projects~1{projectsId}~1locations~1{locationsId}:queryContactCenterQuota/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _list:
          operation: &ref_1
            $ref: '#/paths/~1v1alpha1~1projects~1{projectsId}~1locations/get'
          response: &ref_2
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        list:
          operation: *ref_1
          response: *ref_2
        get:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1projects~1{projectsId}~1locations~1{locationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
        insert: []
        update: []
        delete: []
    operations:
      id: contactcenteraiplatform.operations
      name: operations
      title: Operations
      methods:
        _list:
          operation: &ref_3
            $ref: >-
              #/paths/~1v1alpha1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get
          response: &ref_4
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        list:
          operation: *ref_3
          response: *ref_4
        get:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    contact_centers:
      id: contactcenteraiplatform.contact_centers
      name: contact_centers
      title: Contact_centers
      methods:
        _list:
          operation: &ref_5
            $ref: >-
              #/paths/~1v1alpha1~1projects~1{projectsId}~1locations~1{locationsId}~1contactCenters/get
          response: &ref_6
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.contactCenters
        list:
          operation: *ref_5
          response: *ref_6
        create:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1projects~1{projectsId}~1locations~1{locationsId}~1contactCenters/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1projects~1{projectsId}~1locations~1{locationsId}~1contactCenters~1{contactCentersId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1projects~1{projectsId}~1locations~1{locationsId}~1contactCenters~1{contactCentersId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1alpha1~1projects~1{projectsId}~1locations~1{locationsId}~1contactCenters~1{contactCentersId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/contact_centers/methods/list'
          - $ref: '#/components/x-stackQL-resources/contact_centers/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/contact_centers/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/contact_centers/methods/delete'
paths:
  /v1alpha1/projects/{projectsId}/locations/{locationsId}:queryContactCenterQuota:
    parameters: &ref_7
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: >-
        Queries the contact center quota, an aggregation over all the projects,
        that belongs to the billing account, which the input project belongs to.
      operationId: contactcenteraiplatform.projects.locations.queryContactCenterQuota
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactCenterQuota'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1alpha1/projects/{projectsId}/locations:
    parameters: *ref_7
    get:
      description: Lists information about the supported locations for this service.
      operationId: contactcenteraiplatform.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1alpha1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_7
    get:
      description: Gets information about a location.
      operationId: contactcenteraiplatform.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1alpha1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_7
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: contactcenteraiplatform.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_7
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: contactcenteraiplatform.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: contactcenteraiplatform.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_7
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: contactcenteraiplatform.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1alpha1/projects/{projectsId}/locations/{locationsId}/contactCenters:
    parameters: *ref_7
    get:
      description: Lists ContactCenters in a given project and location.
      operationId: contactcenteraiplatform.projects.locations.contactCenters.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContactCentersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new ContactCenter in a given project and location.
      operationId: contactcenteraiplatform.projects.locations.contactCenters.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactCenter'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: contactCenterId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1alpha1/projects/{projectsId}/locations/{locationsId}/contactCenters/{contactCentersId}:
    parameters: *ref_7
    get:
      description: Gets details of a single ContactCenter.
      operationId: contactcenteraiplatform.projects.locations.contactCenters.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactCenter'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: contactCentersId
          required: true
          schema:
            type: string
    patch:
      description: Updates the parameters of a single ContactCenter.
      operationId: contactcenteraiplatform.projects.locations.contactCenters.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactCenter'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: contactCentersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
    delete:
      description: Deletes a single ContactCenter.
      operationId: contactcenteraiplatform.projects.locations.contactCenters.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: contactCentersId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
