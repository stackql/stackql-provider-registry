openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Contact Center AI Platform API
  description: ''
  version: v1alpha1
  x-discovery-doc-revision: '20230816'
  x-generated-date: '2023-08-28'
externalDocs:
  url: 'https://cloud.google.com/solutions/contact-center-ai-platform'
servers:
  - url: 'https://contactcenteraiplatform.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    AdminUser:
      type: object
      description: 'Message storing info about the first admin user. Next ID: 3'
      properties:
        familyName:
          type: string
          description: Optional. Last/family name of the first admin user.
        givenName:
          type: string
          description: Optional. First/given name of the first admin user.
      id: AdminUser
    ListContactCentersResponse:
      id: ListContactCentersResponse
      description: Message for response to listing ContactCenters
      type: object
      properties:
        nextPageToken:
          type: string
          description: A token identifying a page of results the server should return.
        unreachable:
          items:
            type: string
          type: array
          description: Locations that could not be reached.
        contactCenters:
          type: array
          items:
            $ref: '#/components/schemas/ContactCenter'
          description: The list of ContactCenter
    URIs:
      description: Message storing the URIs of the ContactCenter.
      type: object
      id: URIs
      properties:
        chatBotUri:
          description: Chat Bot Uri of the ContactCenter
          type: string
        mediaUri:
          type: string
          description: Media Uri of the ContactCenter.
        rootUri:
          description: Root Uri of the ContactCenter.
          type: string
        virtualAgentStreamingServiceUri:
          type: string
          description: Virtual Agent Streaming Service Uri of the ContactCenter.
    Quota:
      description: Quota details.
      id: Quota
      type: object
      properties:
        contactCenterCountSum:
          description: Reflects the count sum of contact centers on a billing account.
          format: int32
          type: integer
        contactCenterInstanceSize:
          description: Contact center instance type.
          enumDescriptions:
            - The default value. This value is used if the state is omitted.
            - Instance Size STANDARD_SMALL.
            - Instance Size STANDARD_MEDIUM.
            - Instance Size STANDARD_LARGE.
            - Instance Size STANDARD_XLARGE.
            - Instance Size STANDARD_2XLARGE.
            - Instance Size STANDARD_3XLARGE.
            - Instance Size DEV_EXTRA_SMALL.
          type: string
          enum:
            - INSTANCE_SIZE_UNSPECIFIED
            - STANDARD_SMALL
            - STANDARD_MEDIUM
            - STANDARD_LARGE
            - STANDARD_XLARGE
            - STANDARD_2XLARGE
            - STANDARD_3XLARGE
            - DEV_XSMALL
        contactCenterCountLimit:
          description: Reflects the count limit of contact centers on a billing account.
          format: int32
          type: integer
    ListLocationsResponse:
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        locations:
          type: array
          items:
            $ref: '#/components/schemas/Location'
          description: A list of locations that matches the specified filter in the request.
        nextPageToken:
          type: string
          description: The standard List next-page token.
    SAMLParams:
      type: object
      id: SAMLParams
      properties:
        entityId:
          type: string
          description: Entity id URL
        ssoUri:
          type: string
          description: Single sign-on URL
        userEmail:
          description: Email address of the first admin users.
          deprecated: true
          type: string
        certificate:
          description: SAML certificate
          type: string
      description: Message storing SAML params to enable Google as IDP.
    CancelOperationRequest:
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
      type: object
      properties: {}
    OperationMetadata:
      type: object
      properties:
        verb:
          readOnly: true
          description: Output only. Name of the verb executed by the operation.
          type: string
        statusMessage:
          type: string
          readOnly: true
          description: 'Output only. Human-readable status of the operation, if any.'
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time the operation was created.
        endTime:
          type: string
          description: Output only. The time the operation finished running.
          readOnly: true
          format: google-datetime
        target:
          readOnly: true
          description: Output only. Server-defined resource path for the target of the operation.
          type: string
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
        contactCenter:
          description: Contact center information for this request
          $ref: '#/components/schemas/ContactCenter'
        requestedCancellation:
          type: boolean
          readOnly: true
          description: 'Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      description: Represents the metadata of the long-running operation.
      id: OperationMetadata
    Empty:
      id: Empty
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      properties: {}
      type: object
    ContactCenter:
      description: 'Message describing ContactCenter object Next ID: 15'
      properties:
        userEmail:
          description: Optional. Email address of the first admin user.
          type: string
        createTime:
          type: string
          format: google-datetime
          description: 'Output only. [Output only] Create time stamp'
          readOnly: true
        state:
          enum:
            - STATE_UNSPECIFIED
            - STATE_DEPLOYING
            - STATE_DEPLOYED
            - STATE_TERMINATING
            - STATE_FAILED
            - STATE_TERMINATING_FAILED
            - STATE_TERMINATED
            - STATE_IN_GRACE_PERIOD
          readOnly: true
          enumDescriptions:
            - The default value. This value is used if the state is omitted.
            - State DEPLOYING
            - State DEPLOYED
            - State TERMINATING
            - State FAILED
            - State TERMINATING_FAILED
            - State TERMINATED
            - State IN_GRACE_PERIOD
          description: Output only. The state of this contact center.
          type: string
        customerDomainPrefix:
          type: string
          description: 'Required. Immutable. At least 2 and max 16 char long, must conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt).'
        samlParams:
          description: Optional. Params that sets up Google as IdP.
          $ref: '#/components/schemas/SAMLParams'
        updateTime:
          type: string
          description: 'Output only. [Output only] Update time stamp'
          format: google-datetime
          readOnly: true
        labels:
          additionalProperties:
            type: string
          description: Labels as key value pairs
          type: object
        adminUser:
          $ref: '#/components/schemas/AdminUser'
          description: 'Optional. Info about the first admin user, such as given name and family name.'
        kmsKey:
          type: string
          description: Immutable. The KMS key name to encrypt the user input (`ContactCenter`).
        uris:
          description: Output only. URIs to access the deployed ContactCenters.
          readOnly: true
          $ref: '#/components/schemas/URIs'
        displayName:
          description: Required. A user friendly name for the ContactCenter.
          type: string
        name:
          description: name of resource
          type: string
        instanceConfig:
          description: 'The configuration of this instance, it is currently immutable once created.'
          $ref: '#/components/schemas/InstanceConfig'
        ccaipManagedUsers:
          description: Optional. Whether to enable users to be created in the CCAIP-instance concurrently to having users in Cloud identity
          type: boolean
      id: ContactCenter
      type: object
    Status:
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      properties:
        code:
          format: int32
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
        message:
          type: string
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
      type: object
      id: Status
    Location:
      description: A resource that represents a Google Cloud location.
      type: object
      id: Location
      properties:
        locationId:
          type: string
          description: 'The canonical id for this location. For example: `"us-east1"`.'
        metadata:
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata. For example the available capacity at the given location.
        labels:
          type: object
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          additionalProperties:
            type: string
        displayName:
          type: string
          description: 'The friendly name for this location, typically a nearby city name. For example, "Tokyo".'
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
    GoogleCloudCommonOperationMetadata:
      type: object
      description: Represents the metadata of the long-running operation.
      id: GoogleCloudCommonOperationMetadata
      properties:
        verb:
          type: string
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
        cancelRequested:
          type: boolean
          description: 'Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
          readOnly: true
        target:
          readOnly: true
          type: string
          description: Output only. Server-defined resource path for the target of the operation.
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          type: string
          readOnly: true
        apiVersion:
          readOnly: true
          description: Output only. API version used to start the operation.
          type: string
        statusDetail:
          readOnly: true
          description: 'Output only. Human-readable status of the operation, if any.'
          type: string
        endTime:
          format: google-datetime
          description: Output only. The time the operation finished running.
          type: string
          readOnly: true
    Operation:
      properties:
        response:
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
        done:
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
          type: boolean
        name:
          type: string
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
        error:
          $ref: '#/components/schemas/Status'
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
          type: object
      type: object
      id: Operation
      description: This resource represents a long-running operation that is the result of a network API call.
    InstanceConfig:
      description: Message storing the instance configuration.
      type: object
      properties:
        instanceSize:
          enum:
            - INSTANCE_SIZE_UNSPECIFIED
            - STANDARD_SMALL
            - STANDARD_MEDIUM
            - STANDARD_LARGE
            - STANDARD_XLARGE
            - STANDARD_2XLARGE
            - STANDARD_3XLARGE
            - DEV_XSMALL
          enumDescriptions:
            - The default value. This value is used if the state is omitted.
            - Instance Size STANDARD_SMALL.
            - Instance Size STANDARD_MEDIUM.
            - Instance Size STANDARD_LARGE.
            - Instance Size STANDARD_XLARGE.
            - Instance Size STANDARD_2XLARGE.
            - Instance Size STANDARD_3XLARGE.
            - Instance Size DEV_EXTRA_SMALL.
          description: The instance size of this the instance configuration.
          type: string
      id: InstanceConfig
    ListOperationsResponse:
      type: object
      id: ListOperationsResponse
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          description: A list of operations that matches the specified filter in the request.
      description: The response message for Operations.ListOperations.
    ContactCenterQuota:
      id: ContactCenterQuota
      properties:
        contactCenterCountSum:
          description: 'Deprecated: Use the Quota fields instead. Reflects the count sum of contact centers on a billing account.'
          type: integer
          deprecated: true
          format: int32
        quotas:
          items:
            $ref: '#/components/schemas/Quota'
          description: Quota details per contact center instance type.
          type: array
        contactCenterCountLimit:
          format: int32
          type: integer
          description: 'Deprecated: Use the Quota fields instead. Reflects the count limit of contact centers on a billing account.'
          deprecated: true
      type: object
      description: Represents a quota for contact centers.
  parameters:
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
  x-stackQL-resources:
    operations:
      id: google.contactcenteraiplatform.operations
      name: operations
      title: Operations
      methods:
        cancel:
          operation:
            $ref: '#/paths/~1v1alpha1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1alpha1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _list:
          operation:
            $ref: '#/paths/~1v1alpha1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1alpha1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1alpha1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    contact_centers:
      id: google.contactcenteraiplatform.contact_centers
      name: contact_centers
      title: Contact Centers
      methods:
        delete:
          operation:
            $ref: '#/paths/~1v1alpha1~1projects~1{projectsId}~1locations~1{locationsId}~1contactCenters~1{contactCentersId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1alpha1~1projects~1{projectsId}~1locations~1{locationsId}~1contactCenters~1{contactCentersId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1alpha1~1projects~1{projectsId}~1locations~1{locationsId}~1contactCenters~1{contactCentersId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1alpha1~1projects~1{projectsId}~1locations~1{locationsId}~1contactCenters/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.contactCenters
        _list:
          operation:
            $ref: '#/paths/~1v1alpha1~1projects~1{projectsId}~1locations~1{locationsId}~1contactCenters/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1alpha1~1projects~1{projectsId}~1locations~1{locationsId}~1contactCenters/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/contact_centers/methods/get'
          - $ref: '#/components/x-stackQL-resources/contact_centers/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/contact_centers/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/contact_centers/methods/delete'
    locations:
      id: google.contactcenteraiplatform.locations
      name: locations
      title: Locations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1alpha1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        _list:
          operation:
            $ref: '#/paths/~1v1alpha1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1alpha1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        query_contact_center_quota:
          operation:
            $ref: '#/paths/~1v1alpha1~1projects~1{projectsId}~1locations~1{locationsId}:queryContactCenterQuota/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
        insert: []
        update: []
        delete: []
paths:
  '/v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: &ref_1
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: contactcenteraiplatform.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1alpha1/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: contactcenteraiplatform.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: contactcenteraiplatform.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: contactcenteraiplatform.projects.locations.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1alpha1/projects/{projectsId}/locations/{locationsId}/contactCenters/{contactCentersId}':
    parameters: *ref_1
    delete:
      description: Deletes a single ContactCenter.
      operationId: contactcenteraiplatform.projects.locations.contactCenters.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: contactCentersId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: contact_centers
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets details of a single ContactCenter.
      operationId: contactcenteraiplatform.projects.locations.contactCenters.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactCenter'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: contactCentersId
          required: true
          schema:
            type: string
      x-stackQL-resource: contact_centers
      x-stackQL-method: get
      x-stackQL-verb: select
    patch:
      description: Updates the parameters of a single ContactCenter.
      operationId: contactcenteraiplatform.projects.locations.contactCenters.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactCenter'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: contactCentersId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: contact_centers
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v1alpha1/projects/{projectsId}/locations/{locationsId}/contactCenters':
    parameters: *ref_1
    get:
      description: Lists ContactCenters in a given project and location.
      operationId: contactcenteraiplatform.projects.locations.contactCenters.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContactCentersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: contact_centers
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.contactCenters
    post:
      description: Creates a new ContactCenter in a given project and location.
      operationId: contactcenteraiplatform.projects.locations.contactCenters.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactCenter'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: contactCenterId
          schema:
            type: string
      x-stackQL-resource: contact_centers
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1alpha1/projects/{projectsId}/locations':
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: contactcenteraiplatform.projects.locations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.locations
  '/v1alpha1/projects/{projectsId}/locations/{locationsId}':
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: contactcenteraiplatform.projects.locations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1alpha1/projects/{projectsId}/locations/{locationsId}:queryContactCenterQuota':
    parameters: *ref_1
    get:
      description: 'Queries the contact center quota, an aggregation over all the projects, that belongs to the billing account, which the input project belongs to.'
      operationId: contactcenteraiplatform.projects.locations.queryContactCenterQuota
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactCenterQuota'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: query_contact_center_quota
      x-stackQL-verb: exec
