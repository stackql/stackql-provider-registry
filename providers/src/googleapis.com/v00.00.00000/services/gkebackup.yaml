openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Backup for GKE API
  description: Backup for GKE is a managed Kubernetes workload backup and restore service for GKE clusters.
  version: v1
  x-discovery-doc-revision: '20230809'
  x-generated-date: '2023-09-01'
externalDocs:
  url: 'https://cloud.google.com/kubernetes-engine/docs/add-on/backup-for-gke'
servers:
  - url: 'https://gkebackup.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    ListRestoresResponse:
      properties:
        restores:
          items:
            $ref: '#/components/schemas/Restore'
          description: The list of Restores matching the given criteria.
          type: array
        unreachable:
          items:
            type: string
          type: array
          description: Locations that could not be reached.
        nextPageToken:
          description: 'A token which may be sent as page_token in a subsequent `ListRestores` call to retrieve the next page of results. If this field is omitted or empty, then there are no more results to return.'
          type: string
      id: ListRestoresResponse
      description: Response message for ListRestores.
      type: object
    Empty:
      properties: {}
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      type: object
      id: Empty
    ResourceFilter:
      id: ResourceFilter
      description: ResourceFilter specifies matching criteria to limit the scope of a change to a specific set of kubernetes resources that are selected for restoration from a backup.
      properties:
        namespaces:
          description: 'Optional. (Filtering parameter) Any resource subject to transformation must be contained within one of the listed Kubernetes Namespace in the Backup. If this field is not provided, no namespace filtering will be performed (all resources in all Namespaces, including all cluster-scoped resources, will be candidates for transformation). To mix cluster-scoped and namespaced resources in the same rule, use an empty string ("") as one of the target namespaces.'
          items:
            type: string
          type: array
        groupKinds:
          items:
            $ref: '#/components/schemas/GroupKind'
          description: 'Optional. (Filtering parameter) Any resource subject to transformation must belong to one of the listed "types". If this field is not provided, no type filtering will be performed (all resources of all types matching previous filtering parameters will be candidates for transformation).'
          type: array
        jsonPath:
          description: 'Optional. This is a [JSONPath] (https://github.com/json-path/JsonPath/blob/master/README.md) expression that matches specific fields of candidate resources and it operates as a filtering parameter (resources that are not matched with this expression will not be candidates for transformation).'
          type: string
      type: object
    RetentionPolicy:
      id: RetentionPolicy
      properties:
        locked:
          description: 'Optional. This flag denotes whether the retention policy of this BackupPlan is locked. If set to True, no further update is allowed on this policy, including the `locked` field itself. Default: False'
          type: boolean
        backupDeleteLockDays:
          type: integer
          format: int32
          description: 'Optional. Minimum age for Backups created via this BackupPlan (in days). This field MUST be an integer value between 0-90 (inclusive). A Backup created under this BackupPlan will NOT be deletable until it reaches Backup''s (create_time + backup_delete_lock_days). Updating this field of a BackupPlan does NOT affect existing Backups under it. Backups created AFTER a successful update will inherit the new value. Default: 0 (no delete blocking)'
        backupRetainDays:
          type: integer
          description: 'Optional. The default maximum age of a Backup created via this BackupPlan. This field MUST be an integer value >= 0 and <= 365. If specified, a Backup created under this BackupPlan will be automatically deleted after its age reaches (create_time + backup_retain_days). If not specified, Backups created under this BackupPlan will NOT be subject to automatic deletion. Updating this field does NOT affect existing Backups under it. Backups created AFTER a successful update will automatically pick up the new value. NOTE: backup_retain_days must be >= backup_delete_lock_days. If cron_schedule is defined, then this must be <= 360 * the creation interval. If rpo_config is defined, then this must be <= 360 * target_rpo_minutes / (1440minutes/day). Default: 0 (no automatic deletion)'
          format: int32
      description: RetentionPolicy defines a Backup retention policy for a BackupPlan.
      type: object
    Backup:
      id: Backup
      description: 'Represents a request to perform a single point-in-time capture of some portion of the state of a GKE cluster, the record of the backup operation itself, and an anchor for the underlying artifacts that comprise the Backup (the config backup and VolumeBackups). Next id: 29'
      type: object
      properties:
        selectedApplications:
          description: 'Output only. If set, the list of ProtectedApplications whose resources were included in the Backup.'
          readOnly: true
          $ref: '#/components/schemas/NamespacedNames'
        volumeCount:
          type: integer
          readOnly: true
          format: int32
          description: Output only. The total number of volume backups contained in the Backup.
        clusterMetadata:
          readOnly: true
          $ref: '#/components/schemas/ClusterMetadata'
          description: Output only. Information about the GKE cluster from which this Backup was created.
        etag:
          readOnly: true
          description: 'Output only. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a backup from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform backup updates in order to avoid race conditions: An `etag` is returned in the response to `GetBackup`, and systems are expected to put that etag in the request to `UpdateBackup` or `DeleteBackup` to ensure that their change will be applied to the same version of the resource.'
          type: string
        retainExpireTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time at which this Backup will be automatically deleted (calculated from create_time + retain_days).
        containsVolumeData:
          readOnly: true
          type: boolean
          description: Output only. Whether or not the Backup contains volume data. Controlled by the parent BackupPlan's include_volume_data value.
        retainDays:
          description: 'Optional. The age (in days) after which this Backup will be automatically deleted. Must be an integer value >= 0: - If 0, no automatic deletion will occur for this Backup. - If not 0, this must be >= delete_lock_days and <= 365. Once a Backup is created, this value may only be increased. Defaults to the parent BackupPlan''s backup_retain_days value.'
          type: integer
          format: int32
        uid:
          type: string
          description: 'Output only. Server generated global unique identifier of [UUID4](https://en.wikipedia.org/wiki/Universally_unique_identifier)'
          readOnly: true
        selectedNamespaces:
          description: 'Output only. If set, the list of namespaces that were included in the Backup.'
          readOnly: true
          $ref: '#/components/schemas/Namespaces'
        allNamespaces:
          readOnly: true
          description: 'Output only. If True, all namespaces were included in the Backup.'
          type: boolean
        deleteLockExpireTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The time at which an existing delete lock will expire for this backup (calculated from create_time + delete_lock_days).
        sizeBytes:
          readOnly: true
          description: Output only. The total size of the Backup in bytes = config backup size + sum(volume backup sizes)
          type: string
          format: int64
        stateReason:
          type: string
          description: Output only. Human-readable description of why the backup is in the current `state`.
          readOnly: true
        manual:
          readOnly: true
          description: Output only. This flag indicates whether this Backup resource was created manually by a user or via a schedule in the BackupPlan. A value of True means that the Backup was created manually.
          type: boolean
        createTime:
          description: Output only. The timestamp when this Backup resource was created.
          format: google-datetime
          readOnly: true
          type: string
        state:
          description: Output only. Current state of the Backup
          readOnly: true
          type: string
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - IN_PROGRESS
            - SUCCEEDED
            - FAILED
            - DELETING
          enumDescriptions:
            - The Backup resource is in the process of being created.
            - The Backup resource has been created and the associated BackupJob Kubernetes resource has been injected into the source cluster.
            - The gkebackup agent in the cluster has begun executing the backup operation.
            - The backup operation has completed successfully.
            - The backup operation has failed.
            - This Backup resource (and its associated artifacts) is in the process of being deleted.
        completeTime:
          type: string
          readOnly: true
          description: Output only. Completion time of the Backup
          format: google-datetime
        description:
          type: string
          description: Optional. User specified descriptive string for this Backup.
        encryptionKey:
          readOnly: true
          description: Output only. The customer managed encryption key that was used to encrypt the Backup's artifacts. Inherited from the parent BackupPlan's encryption_key value.
          $ref: '#/components/schemas/EncryptionKey'
        labels:
          type: object
          additionalProperties:
            type: string
          description: Optional. A set of custom labels supplied by user.
        containsSecrets:
          readOnly: true
          type: boolean
          description: Output only. Whether or not the Backup contains Kubernetes Secrets. Controlled by the parent BackupPlan's include_secrets value.
        resourceCount:
          format: int32
          type: integer
          readOnly: true
          description: Output only. The total number of Kubernetes resources included in the Backup.
        deleteLockDays:
          type: integer
          description: 'Optional. Minimum age for this Backup (in days). If this field is set to a non-zero value, the Backup will be "locked" against deletion (either manual or automatic deletion) for the number of days provided (measured from the creation time of the Backup). MUST be an integer value between 0-90 (inclusive). Defaults to parent BackupPlan''s backup_delete_lock_days setting and may only be increased (either at creation time or in a subsequent update).'
          format: int32
        name:
          readOnly: true
          type: string
          description: Output only. The fully qualified name of the Backup. `projects/*/locations/*/backupPlans/*/backups/*`
        podCount:
          readOnly: true
          description: Output only. The total number of Kubernetes Pods contained in the Backup.
          type: integer
          format: int32
        configBackupSizeBytes:
          description: Output only. The size of the config backup in bytes.
          readOnly: true
          type: string
          format: int64
        updateTime:
          readOnly: true
          type: string
          description: Output only. The timestamp when this Backup resource was last updated.
          format: google-datetime
    NamespacedNames:
      id: NamespacedNames
      properties:
        namespacedNames:
          type: array
          items:
            $ref: '#/components/schemas/NamespacedName'
          description: Optional. A list of namespaced Kubernetes resources.
      description: A list of namespaced Kubernetes resources.
      type: object
    GoogleRpcStatus:
      id: GoogleRpcStatus
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      properties:
        message:
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
          type: string
        code:
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          type: integer
          format: int32
        details:
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
          type: array
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
      type: object
    TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          items:
            type: string
          description: 'The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).'
          type: array
      id: TestIamPermissionsRequest
    EncryptionKey:
      description: Defined a customer managed encryption key that will be used to encrypt Backup artifacts.
      type: object
      properties:
        gcpKmsEncryptionKey:
          description: 'Optional. Google Cloud KMS encryption key. Format: `projects/*/locations/*/keyRings/*/cryptoKeys/*`'
          type: string
      id: EncryptionKey
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        locations:
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Location'
          type: array
      id: ListLocationsResponse
    BackupPlan:
      type: object
      id: BackupPlan
      description: Defines the configuration and scheduling for a "line" of Backups.
      properties:
        deactivated:
          type: boolean
          description: 'Optional. This flag indicates whether this BackupPlan has been deactivated. Setting this field to True locks the BackupPlan such that no further updates will be allowed (except deletes), including the deactivated field itself. It also prevents any new Backups from being created via this BackupPlan (including scheduled Backups). Default: False'
        backupConfig:
          description: Optional. Defines the configuration of Backups created via this BackupPlan.
          $ref: '#/components/schemas/BackupConfig'
        backupSchedule:
          $ref: '#/components/schemas/Schedule'
          description: Optional. Defines a schedule for automatic Backup creation via this BackupPlan.
        etag:
          description: 'Output only. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a backup plan from overwriting each other. It is strongly suggested that systems make use of the ''etag'' in the read-modify-write cycle to perform BackupPlan updates in order to avoid race conditions: An `etag` is returned in the response to `GetBackupPlan`, and systems are expected to put that etag in the request to `UpdateBackupPlan` or `DeleteBackupPlan` to ensure that their change will be applied to the same version of the resource.'
          readOnly: true
          type: string
        stateReason:
          readOnly: true
          description: Output only. Human-readable description of why BackupPlan is in the current `state`
          type: string
        protectedPodCount:
          description: Output only. The number of Kubernetes Pods backed up in the last successful Backup created via this BackupPlan.
          format: int32
          readOnly: true
          type: integer
        state:
          enum:
            - STATE_UNSPECIFIED
            - CLUSTER_PENDING
            - PROVISIONING
            - READY
            - FAILED
            - DEACTIVATED
            - DELETING
          enumDescriptions:
            - Default first value for Enums.
            - Waiting for cluster state to be RUNNING.
            - The BackupPlan is in the process of being created.
            - The BackupPlan has successfully been created and is ready for Backups.
            - BackupPlan creation has failed.
            - The BackupPlan has been deactivated.
            - The BackupPlan is in the process of being deleted.
          type: string
          description: Output only. State of the BackupPlan. This State field reflects the various stages a BackupPlan can be in during the Create operation. It will be set to "DEACTIVATED" if the BackupPlan is deactivated on an Update
          readOnly: true
        createTime:
          readOnly: true
          type: string
          description: Output only. The timestamp when this BackupPlan resource was created.
          format: google-datetime
        cluster:
          type: string
          description: 'Required. Immutable. The source cluster from which Backups will be created via this BackupPlan. Valid formats: - `projects/*/locations/*/clusters/*` - `projects/*/zones/*/clusters/*`'
        description:
          type: string
          description: Optional. User specified descriptive string for this BackupPlan.
        labels:
          additionalProperties:
            type: string
          description: Optional. A set of custom labels supplied by user.
          type: object
        retentionPolicy:
          description: Optional. RetentionPolicy governs lifecycle of Backups created under this plan.
          $ref: '#/components/schemas/RetentionPolicy'
        uid:
          readOnly: true
          description: 'Output only. Server generated global unique identifier of [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.'
          type: string
        name:
          readOnly: true
          type: string
          description: 'Output only. The full name of the BackupPlan resource. Format: `projects/*/locations/*/backupPlans/*`'
        updateTime:
          type: string
          format: google-datetime
          description: Output only. The timestamp when this BackupPlan resource was last updated.
          readOnly: true
    RestoreConfig:
      description: 'Configuration of a restore. Next id: 12'
      id: RestoreConfig
      properties:
        selectedNamespaces:
          $ref: '#/components/schemas/Namespaces'
          description: A list of selected Namespaces to restore from the Backup. The listed Namespaces and all resources contained in them will be restored.
        selectedApplications:
          description: A list of selected ProtectedApplications to restore. The listed ProtectedApplications and all the resources to which they refer will be restored.
          $ref: '#/components/schemas/NamespacedNames'
        substitutionRules:
          description: 'Optional. A list of transformation rules to be applied against Kubernetes resources as they are selected for restoration from a Backup. Rules are executed in order defined - this order matters, as changes made by a rule may impact the filtering logic of subsequent rules. An empty list means no substitution will occur.'
          items:
            $ref: '#/components/schemas/SubstitutionRule'
          type: array
        noNamespaces:
          type: boolean
          description: Do not restore any namespaced resources if set to "True". Specifying this field to "False" is not allowed.
        allNamespaces:
          description: Restore all namespaced resources in the Backup if set to "True". Specifying this field to "False" is an error.
          type: boolean
        namespacedResourceRestoreMode:
          enum:
            - NAMESPACED_RESOURCE_RESTORE_MODE_UNSPECIFIED
            - DELETE_AND_RESTORE
            - FAIL_ON_CONFLICT
          description: Optional. Defines the behavior for handling the situation where sets of namespaced resources being restored already exist in the target cluster. This MUST be set to a value other than NAMESPACED_RESOURCE_RESTORE_MODE_UNSPECIFIED.
          enumDescriptions:
            - Unspecified (invalid).
            - 'When conflicting top-level resources (either Namespaces or ProtectedApplications, depending upon the scope) are encountered, this will first trigger a delete of the conflicting resource AND ALL OF ITS REFERENCED RESOURCES (e.g., all resources in the Namespace or all resources referenced by the ProtectedApplication) before restoring the resources from the Backup. This mode should only be used when you are intending to revert some portion of a cluster to an earlier state.'
            - 'If conflicting top-level resources (either Namespaces or ProtectedApplications, depending upon the scope) are encountered at the beginning of a restore process, the Restore will fail. If a conflict occurs during the restore process itself (e.g., because an out of band process creates conflicting resources), a conflict will be reported.'
          type: string
        excludedNamespaces:
          $ref: '#/components/schemas/Namespaces'
          description: A list of selected namespaces excluded from restoration. All namespaces except those in this list will be restored.
        clusterResourceConflictPolicy:
          enumDescriptions:
            - Unspecified. Only allowed if no cluster-scoped resources will be restored.
            - Do not attempt to restore the conflicting resource.
            - 'Delete the existing version before re-creating it from the Backup. This is a dangerous option which could cause unintentional data loss if used inappropriately. For example, deleting a CRD will cause Kubernetes to delete all CRs of that type.'
          description: Optional. Defines the behavior for handling the situation where cluster-scoped resources being restored already exist in the target cluster. This MUST be set to a value other than CLUSTER_RESOURCE_CONFLICT_POLICY_UNSPECIFIED if cluster_resource_restore_scope is not empty.
          type: string
          enum:
            - CLUSTER_RESOURCE_CONFLICT_POLICY_UNSPECIFIED
            - USE_EXISTING_VERSION
            - USE_BACKUP_VERSION
        volumeDataRestorePolicy:
          type: string
          description: 'Optional. Specifies the mechanism to be used to restore volume data. Default: VOLUME_DATA_RESTORE_POLICY_UNSPECIFIED (will be treated as NO_VOLUME_DATA_RESTORATION).'
          enum:
            - VOLUME_DATA_RESTORE_POLICY_UNSPECIFIED
            - RESTORE_VOLUME_DATA_FROM_BACKUP
            - REUSE_VOLUME_HANDLE_FROM_BACKUP
            - NO_VOLUME_DATA_RESTORATION
          enumDescriptions:
            - Unspecified (illegal).
            - 'For each PVC to be restored, create a new underlying volume and PV from the corresponding VolumeBackup contained within the Backup.'
            - 'For each PVC to be restored, attempt to reuse the original PV contained in the Backup (with its original underlying volume). This option is likely only usable when restoring a workload to its original cluster.'
            - 'For each PVC to be restored, create PVC without any particular action to restore data. In this case, the normal Kubernetes provisioning logic would kick in, and this would likely result in either dynamically provisioning blank PVs or binding to statically provisioned PVs.'
        transformationRules:
          items:
            $ref: '#/components/schemas/TransformationRule'
          description: 'Optional. A list of transformation rules to be applied against Kubernetes resources as they are selected for restoration from a Backup. Rules are executed in order defined - this order matters, as changes made by a rule may impact the filtering logic of subsequent rules. An empty list means no transformation will occur.'
          type: array
        clusterResourceRestoreScope:
          $ref: '#/components/schemas/ClusterResourceRestoreScope'
          description: Optional. Identifies the cluster-scoped resources to restore from the Backup. Not specifying it means NO cluster resource will be restored.
      type: object
    GoogleLongrunningListOperationsResponse:
      id: GoogleLongrunningListOperationsResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        operations:
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
          type: array
          description: A list of operations that matches the specified filter in the request.
      description: The response message for Operations.ListOperations.
    TransformationRule:
      type: object
      id: TransformationRule
      properties:
        fieldActions:
          items:
            $ref: '#/components/schemas/TransformationRuleAction'
          description: 'Required. A list of transformation rule actions to take against candidate resources. Actions are executed in order defined - this order matters, as they could potentially interfere with each other and the first operation could affect the outcome of the second operation.'
          type: array
        resourceFilter:
          description: 'Optional. This field is used to specify a set of fields that should be used to determine which resources in backup should be acted upon by the supplied transformation rule actions, and this will ensure that only specific resources are affected by transformation rule actions.'
          $ref: '#/components/schemas/ResourceFilter'
        description:
          description: Optional. The description is a user specified string description of the transformation rule.
          type: string
      description: A transformation rule to be applied against Kubernetes resources as they are selected for restoration from a Backup. A rule contains both filtering logic (which resources are subject to transform) and transformation logic.
    NamespacedName:
      description: A reference to a namespaced resource in Kubernetes.
      type: object
      properties:
        namespace:
          type: string
          description: Optional. The Namespace of the Kubernetes resource.
        name:
          description: Optional. The name of the Kubernetes resource.
          type: string
      id: NamespacedName
    RestorePlan:
      id: RestorePlan
      type: object
      properties:
        createTime:
          format: google-datetime
          description: Output only. The timestamp when this RestorePlan resource was created.
          type: string
          readOnly: true
        stateReason:
          type: string
          description: Output only. Human-readable description of why RestorePlan is in the current `state`
          readOnly: true
        backupPlan:
          type: string
          description: 'Required. Immutable. A reference to the BackupPlan from which Backups may be used as the source for Restores created via this RestorePlan. Format: `projects/*/locations/*/backupPlans/*`.'
        state:
          enumDescriptions:
            - Default first value for Enums.
            - Waiting for cluster state to be RUNNING.
            - The RestorePlan has successfully been created and is ready for Restores.
            - RestorePlan creation has failed.
            - The RestorePlan is in the process of being deleted.
          enum:
            - STATE_UNSPECIFIED
            - CLUSTER_PENDING
            - READY
            - FAILED
            - DELETING
          readOnly: true
          description: Output only. State of the RestorePlan. This State field reflects the various stages a RestorePlan can be in during the Create operation.
          type: string
        updateTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The timestamp when this RestorePlan resource was last updated.
        labels:
          description: Optional. A set of custom labels supplied by user.
          type: object
          additionalProperties:
            type: string
        name:
          description: 'Output only. The full name of the RestorePlan resource. Format: `projects/*/locations/*/restorePlans/*`.'
          readOnly: true
          type: string
        cluster:
          type: string
          description: 'Required. Immutable. The target cluster into which Restores created via this RestorePlan will restore data. NOTE: the cluster''s region must be the same as the RestorePlan. Valid formats: - `projects/*/locations/*/clusters/*` - `projects/*/zones/*/clusters/*`'
        etag:
          type: string
          readOnly: true
          description: 'Output only. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a restore from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform restore updates in order to avoid race conditions: An `etag` is returned in the response to `GetRestorePlan`, and systems are expected to put that etag in the request to `UpdateRestorePlan` or `DeleteRestorePlan` to ensure that their change will be applied to the same version of the resource.'
        description:
          description: Optional. User specified descriptive string for this RestorePlan.
          type: string
        restoreConfig:
          description: Required. Configuration of Restores created via this RestorePlan.
          $ref: '#/components/schemas/RestoreConfig'
        uid:
          readOnly: true
          description: 'Output only. Server generated global unique identifier of [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.'
          type: string
      description: 'The configuration of a potential series of Restore operations to be performed against Backups belong to a particular BackupPlan. Next id: 13'
    ClusterResourceRestoreScope:
      id: ClusterResourceRestoreScope
      type: object
      properties:
        allGroupKinds:
          type: boolean
          description: 'Optional. If True, all valid cluster-scoped resources will be restored. Mutually exclusive to any other field in the message.'
        noGroupKinds:
          type: boolean
          description: 'Optional. If True, no cluster-scoped resources will be restored. This has the same restore scope as if the message is not defined. Mutually exclusive to any other field in the message.'
        selectedGroupKinds:
          items:
            $ref: '#/components/schemas/GroupKind'
          description: 'Optional. A list of cluster-scoped resource group kinds to restore from the backup. If specified, only the selected resources will be restored. Mutually exclusive to any other field in the message.'
          type: array
        excludedGroupKinds:
          items:
            $ref: '#/components/schemas/GroupKind'
          type: array
          description: 'Optional. A list of cluster-scoped resource group kinds to NOT restore from the backup. If specified, all valid cluster-scoped resources will be restored except for those specified in the list. Mutually exclusive to any other field in the message.'
      description: 'Defines the scope of cluster-scoped resources to restore. Some group kinds are not reasonable choices for a restore, and will cause an error if selected here. Any scope selection that would restore "all valid" resources automatically excludes these group kinds. - gkebackup.gke.io/BackupJob - gkebackup.gke.io/RestoreJob - metrics.k8s.io/NodeMetrics - migration.k8s.io/StorageState - migration.k8s.io/StorageVersionMigration - Node - snapshot.storage.k8s.io/VolumeSnapshotContent - storage.k8s.io/CSINode Some group kinds are driven by restore configuration elsewhere, and will cause an error if selected here. - Namespace - PersistentVolume'
    ListBackupsResponse:
      type: object
      description: Response message for ListBackups.
      properties:
        backups:
          items:
            $ref: '#/components/schemas/Backup'
          description: The list of Backups matching the given criteria.
          type: array
        nextPageToken:
          description: 'A token which may be sent as page_token in a subsequent `ListBackups` call to retrieve the next page of results. If this field is omitted or empty, then there are no more results to return.'
          type: string
      id: ListBackupsResponse
    VolumeBackup:
      id: VolumeBackup
      type: object
      properties:
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. The timestamp when this VolumeBackup resource was created.
          type: string
        updateTime:
          description: Output only. The timestamp when this VolumeBackup resource was last updated.
          format: google-datetime
          readOnly: true
          type: string
        state:
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - SNAPSHOTTING
            - UPLOADING
            - SUCCEEDED
            - FAILED
            - DELETING
          enumDescriptions:
            - This is an illegal state and should not be encountered.
            - A volume for the backup was identified and backup process is about to start.
            - The volume backup operation has begun and is in the initial "snapshot" phase of the process. Any defined ProtectedApplication "pre" hooks will be executed before entering this state and "post" hooks will be executed upon leaving this state.
            - The snapshot phase of the volume backup operation has completed and the snapshot is now being uploaded to backup storage.
            - The volume backup operation has completed successfully.
            - The volume backup operation has failed.
            - This VolumeBackup resource (and its associated artifacts) is in the process of being deleted.
          description: Output only. The current state of this VolumeBackup.
          type: string
          readOnly: true
        sourcePvc:
          description: Output only. A reference to the source Kubernetes PVC from which this VolumeBackup was created.
          readOnly: true
          $ref: '#/components/schemas/NamespacedName'
        completeTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The timestamp when the associated underlying volume backup operation completed.
        stateMessage:
          type: string
          description: Output only. A human readable message explaining why the VolumeBackup is in its current state.
          readOnly: true
        uid:
          readOnly: true
          description: 'Output only. Server generated global unique identifier of [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.'
          type: string
        storageBytes:
          type: string
          format: int64
          readOnly: true
          description: 'Output only. The aggregate size of the underlying artifacts associated with this VolumeBackup in the backup storage. This may change over time when multiple backups of the same volume share the same backup storage location. In particular, this is likely to increase in size when the immediately preceding backup of the same volume is deleted.'
        volumeBackupHandle:
          readOnly: true
          type: string
          description: Output only. A storage system-specific opaque handle to the underlying volume backup.
        etag:
          type: string
          readOnly: true
          description: Output only. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a volume backup from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform volume backup updates in order to avoid race conditions.
        name:
          type: string
          description: 'Output only. The full name of the VolumeBackup resource. Format: `projects/*/locations/*/backupPlans/*/backups/*/volumeBackups/*`.'
          readOnly: true
        format:
          enumDescriptions:
            - 'Default value, not specified.'
            - Compute Engine Persistent Disk snapshot based volume backup.
          enum:
            - VOLUME_BACKUP_FORMAT_UNSPECIFIED
            - GCE_PERSISTENT_DISK
          description: Output only. The format used for the volume backup.
          readOnly: true
          type: string
        diskSizeBytes:
          readOnly: true
          description: Output only. The minimum size of the disk to which this VolumeBackup can be restored.
          format: int64
          type: string
      description: 'Represents the backup of a specific persistent volume as a component of a Backup - both the record of the operation and a pointer to the underlying storage-specific artifacts. Next id: 14'
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      type: object
      id: SetIamPolicyRequest
      properties:
        updateMask:
          type: string
          description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`'
          format: google-fieldmask
        policy:
          description: 'REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.'
          $ref: '#/components/schemas/Policy'
    TransformationRuleAction:
      id: TransformationRuleAction
      description: 'TransformationRuleAction defines a TransformationRule action based on the JSON Patch RFC (https://www.rfc-editor.org/rfc/rfc6902)'
      properties:
        path:
          type: string
          description: Optional. A string containing a JSON-Pointer value that references a location within the target document where the operation is performed.
        fromPath:
          description: Optional. A string containing a JSON Pointer value that references the location in the target document to move the value from.
          type: string
        value:
          description: Optional. A string that specifies the desired value in string format to use for transformation.
          type: string
        op:
          enumDescriptions:
            - Unspecified operation
            - The "remove" operation removes the value at the target location.
            - The "move" operation removes the value at a specified location and adds it to the target location.
            - The "copy" operation copies the value at a specified location to the target location.
            - 'The "add" operation performs one of the following functions, depending upon what the target location references: 1. If the target location specifies an array index, a new value is inserted into the array at the specified index. 2. If the target location specifies an object member that does not already exist, a new member is added to the object. 3. If the target location specifies an object member that does exist, that member''s value is replaced.'
            - The "test" operation tests that a value at the target location is equal to a specified value.
            - The "replace" operation replaces the value at the target location with a new value. The operation object MUST contain a "value" member whose content specifies the replacement value.
          enum:
            - OP_UNSPECIFIED
            - REMOVE
            - MOVE
            - COPY
            - ADD
            - TEST
            - REPLACE
          type: string
          description: Required. op specifies the operation to perform.
      type: object
    TestIamPermissionsResponse:
      id: TestIamPermissionsResponse
      description: Response message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          type: array
          items:
            type: string
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
    SubstitutionRule:
      type: object
      id: SubstitutionRule
      description: A transformation rule to be applied against Kubernetes resources as they are selected for restoration from a Backup. A rule contains both filtering logic (which resources are subject to substitution) and substitution logic.
      properties:
        targetJsonPath:
          type: string
          description: 'Required. This is a [JSONPath] (https://kubernetes.io/docs/reference/kubectl/jsonpath/) expression that matches specific fields of candidate resources and it operates as both a filtering parameter (resources that are not matched with this expression will not be candidates for substitution) as well as a field identifier (identifies exactly which fields out of the candidate resources will be modified).'
        newValue:
          type: string
          description: 'Optional. This is the new value to set for any fields that pass the filtering and selection criteria. To remove a value from a Kubernetes resource, either leave this field unspecified, or set it to the empty string ("").'
        targetGroupKinds:
          type: array
          description: 'Optional. (Filtering parameter) Any resource subject to substitution must belong to one of the listed "types". If this field is not provided, no type filtering will be performed (all resources of all types matching previous filtering parameters will be candidates for substitution).'
          items:
            $ref: '#/components/schemas/GroupKind'
        targetNamespaces:
          items:
            type: string
          description: 'Optional. (Filtering parameter) Any resource subject to substitution must be contained within one of the listed Kubernetes Namespace in the Backup. If this field is not provided, no namespace filtering will be performed (all resources in all Namespaces, including all cluster-scoped resources, will be candidates for substitution). To mix cluster-scoped and namespaced resources in the same rule, use an empty string ("") as one of the target namespaces.'
          type: array
        originalValuePattern:
          type: string
          description: 'Optional. (Filtering parameter) This is a [regular expression] (https://en.wikipedia.org/wiki/Regular_expression) that is compared against the fields matched by the target_json_path expression (and must also have passed the previous filters). Substitution will not be performed against fields whose value does not match this expression. If this field is NOT specified, then ALL fields matched by the target_json_path expression will undergo substitution. Note that an empty (e.g., "", rather than unspecified) value for this field will only match empty fields.'
    AuditLogConfig:
      id: AuditLogConfig
      properties:
        logType:
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          type: string
          description: The log type that this config enables.
        exemptedMembers:
          type: array
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
          items:
            type: string
      type: object
      description: 'Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables ''DATA_READ'' and ''DATA_WRITE'' logging, while exempting jose@example.com from DATA_READ logging.'
    BackupConfig:
      description: BackupConfig defines the configuration of Backups created via this BackupPlan.
      id: BackupConfig
      properties:
        allNamespaces:
          description: 'If True, include all namespaced resources'
          type: boolean
        encryptionKey:
          description: 'Optional. This defines a customer managed encryption key that will be used to encrypt the "config" portion (the Kubernetes resources) of Backups created via this plan. Default (empty): Config backup artifacts will not be encrypted.'
          $ref: '#/components/schemas/EncryptionKey'
        selectedNamespaces:
          $ref: '#/components/schemas/Namespaces'
          description: 'If set, include just the resources in the listed namespaces.'
        includeVolumeData:
          type: boolean
          description: 'Optional. This flag specifies whether volume data should be backed up when PVCs are included in the scope of a Backup. Default: False'
        selectedApplications:
          $ref: '#/components/schemas/NamespacedNames'
          description: 'If set, include just the resources referenced by the listed ProtectedApplications.'
        includeSecrets:
          description: 'Optional. This flag specifies whether Kubernetes Secret resources should be included when they fall into the scope of Backups. Default: False'
          type: boolean
      type: object
    Namespaces:
      properties:
        namespaces:
          type: array
          items:
            type: string
          description: Optional. A list of Kubernetes Namespaces
      id: Namespaces
      description: A list of Kubernetes Namespaces
      type: object
    VolumeRestore:
      type: object
      description: 'Represents the operation of restoring a volume from a VolumeBackup. Next id: 13'
      id: VolumeRestore
      properties:
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The timestamp when this VolumeRestore resource was created.
        updateTime:
          readOnly: true
          description: Output only. The timestamp when this VolumeRestore resource was last updated.
          type: string
          format: google-datetime
        uid:
          description: 'Output only. Server generated global unique identifier of [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.'
          type: string
          readOnly: true
        targetPvc:
          $ref: '#/components/schemas/NamespacedName'
          description: Output only. The reference to the target Kubernetes PVC to be restored.
          readOnly: true
        stateMessage:
          readOnly: true
          description: Output only. A human readable message explaining why the VolumeRestore is in its current state.
          type: string
        volumeType:
          readOnly: true
          description: Output only. The type of volume provisioned
          enum:
            - VOLUME_TYPE_UNSPECIFIED
            - GCE_PERSISTENT_DISK
          enumDescriptions:
            - Default
            - Compute Engine Persistent Disk volume
          type: string
        state:
          type: string
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - RESTORING
            - SUCCEEDED
            - FAILED
            - DELETING
          description: Output only. The current state of this VolumeRestore.
          readOnly: true
          enumDescriptions:
            - This is an illegal state and should not be encountered.
            - A volume for the restore was identified and restore process is about to start.
            - The volume is currently being restored.
            - The volume has been successfully restored.
            - The volume restoration process failed.
            - This VolumeRestore resource is in the process of being deleted.
        name:
          description: 'Output only. Full name of the VolumeRestore resource. Format: `projects/*/locations/*/restorePlans/*/restores/*/volumeRestores/*`'
          type: string
          readOnly: true
        volumeHandle:
          type: string
          description: Output only. A storage system-specific opaque handler to the underlying volume created for the target PVC from the volume backup.
          readOnly: true
        volumeBackup:
          readOnly: true
          type: string
          description: 'Output only. The full name of the VolumeBackup from which the volume will be restored. Format: `projects/*/locations/*/backupPlans/*/backups/*/volumeBackups/*`.'
        etag:
          type: string
          readOnly: true
          description: Output only. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a volume restore from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform volume restore updates in order to avoid race conditions.
        completeTime:
          readOnly: true
          description: Output only. The timestamp when the associated underlying volume restoration completed.
          type: string
          format: google-datetime
    Schedule:
      id: Schedule
      properties:
        cronSchedule:
          description: 'Optional. A standard [cron](https://wikipedia.com/wiki/cron) string that defines a repeating schedule for creating Backups via this BackupPlan. This is mutually exclusive with the rpo_config field since at most one schedule can be defined for a BackupPlan. If this is defined, then backup_retain_days must also be defined. Default (empty): no automatic backup creation will occur.'
          type: string
        paused:
          type: boolean
          description: 'Optional. This flag denotes whether automatic Backup creation is paused for this BackupPlan. Default: False'
      description: Defines scheduling parameters for automatically creating Backups via this BackupPlan.
      type: object
    Policy:
      type: object
      properties:
        auditConfigs:
          items:
            $ref: '#/components/schemas/AuditConfig'
          type: array
          description: Specifies cloud audit logging configuration for this policy.
        version:
          description: 'Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
          type: integer
          format: int32
        bindings:
          type: array
          items:
            $ref: '#/components/schemas/Binding'
          description: 'Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.'
        etag:
          description: '`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.'
          type: string
          format: byte
      id: Policy
      description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp(''2020-10-01T00:00:00.000Z'')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).'
    AuditConfig:
      id: AuditConfig
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.'
      type: object
      properties:
        service:
          type: string
          description: 'Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.'
        auditLogConfigs:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogConfig'
          description: The configuration for logging of each type of permission.
    Location:
      properties:
        labels:
          additionalProperties:
            type: string
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          type: object
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
          description: Service-specific metadata. For example the available capacity at the given location.
        locationId:
          type: string
          description: 'The canonical id for this location. For example: `"us-east1"`.'
        displayName:
          description: 'The friendly name for this location, typically a nearby city name. For example, "Tokyo".'
          type: string
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
      description: A resource that represents a Google Cloud location.
      type: object
      id: Location
    ListVolumeBackupsResponse:
      properties:
        volumeBackups:
          items:
            $ref: '#/components/schemas/VolumeBackup'
          type: array
          description: The list of VolumeBackups matching the given criteria.
        nextPageToken:
          type: string
          description: 'A token which may be sent as page_token in a subsequent `ListVolumeBackups` call to retrieve the next page of results. If this field is omitted or empty, then there are no more results to return.'
      description: Response message for ListVolumeBackups.
      type: object
      id: ListVolumeBackupsResponse
    ListVolumeRestoresResponse:
      type: object
      description: Response message for ListVolumeRestores.
      properties:
        nextPageToken:
          description: 'A token which may be sent as page_token in a subsequent `ListVolumeRestores` call to retrieve the next page of results. If this field is omitted or empty, then there are no more results to return.'
          type: string
        volumeRestores:
          items:
            $ref: '#/components/schemas/VolumeRestore'
          description: The list of VolumeRestores matching the given criteria.
          type: array
      id: ListVolumeRestoresResponse
    Expr:
      description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != ''private'' && document.type != ''internal''" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "''New message received at '' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.'
      properties:
        location:
          description: 'Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.'
          type: string
        expression:
          description: Textual representation of an expression in Common Expression Language syntax.
          type: string
        description:
          type: string
          description: 'Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.'
        title:
          description: 'Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.'
          type: string
      id: Expr
      type: object
    GroupKind:
      properties:
        resourceKind:
          description: 'Optional. Kind of a Kubernetes resource, e.g. "CustomResourceDefinition", "StorageClass", etc.'
          type: string
        resourceGroup:
          description: 'Optional. API group string of a Kubernetes resource, e.g. "apiextensions.k8s.io", "storage.k8s.io", etc. Note: use empty string for core API group'
          type: string
      description: 'This is a direct map to the Kubernetes GroupKind type [GroupKind](https://godoc.org/k8s.io/apimachinery/pkg/runtime/schema#GroupKind) and is used for identifying specific "types" of resources to restore.'
      id: GroupKind
      type: object
    GoogleLongrunningCancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      properties: {}
      id: GoogleLongrunningCancelOperationRequest
      type: object
    Restore:
      description: 'Represents both a request to Restore some portion of a Backup into a target GKE cluster and a record of the restore operation itself. Next id: 18'
      id: Restore
      type: object
      properties:
        volumesRestoredCount:
          readOnly: true
          format: int32
          description: Output only. Number of volumes restored during the restore execution.
          type: integer
        completeTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. Timestamp of when the restore operation completed.
        resourcesRestoredCount:
          description: Output only. Number of resources restored during the restore execution.
          readOnly: true
          format: int32
          type: integer
        labels:
          additionalProperties:
            type: string
          description: A set of custom labels supplied by user.
          type: object
        state:
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - IN_PROGRESS
            - SUCCEEDED
            - FAILED
            - DELETING
          enumDescriptions:
            - The Restore resource is in the process of being created.
            - The Restore resource has been created and the associated RestoreJob Kubernetes resource has been injected into target cluster.
            - The gkebackup agent in the cluster has begun executing the restore operation.
            - The restore operation has completed successfully. Restored workloads may not yet be operational.
            - The restore operation has failed.
            - This Restore resource is in the process of being deleted.
          readOnly: true
          description: Output only. The current state of the Restore.
          type: string
        stateReason:
          readOnly: true
          type: string
          description: Output only. Human-readable description of why the Restore is in its current state.
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The timestamp when this Restore resource was created.
        backup:
          type: string
          description: 'Required. Immutable. A reference to the Backup used as the source from which this Restore will restore. Note that this Backup must be a sub-resource of the RestorePlan''s backup_plan. Format: `projects/*/locations/*/backupPlans/*/backups/*`.'
        cluster:
          readOnly: true
          description: 'Output only. The target cluster into which this Restore will restore data. Valid formats: - `projects/*/locations/*/clusters/*` - `projects/*/zones/*/clusters/*` Inherited from parent RestorePlan''s cluster value.'
          type: string
        name:
          type: string
          readOnly: true
          description: 'Output only. The full name of the Restore resource. Format: `projects/*/locations/*/restorePlans/*/restores/*`'
        uid:
          type: string
          readOnly: true
          description: 'Output only. Server generated global unique identifier of [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.'
        etag:
          readOnly: true
          description: 'Output only. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a restore from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform restore updates in order to avoid race conditions: An `etag` is returned in the response to `GetRestore`, and systems are expected to put that etag in the request to `UpdateRestore` or `DeleteRestore` to ensure that their change will be applied to the same version of the resource.'
          type: string
        resourcesExcludedCount:
          readOnly: true
          description: Output only. Number of resources excluded during the restore execution.
          format: int32
          type: integer
        description:
          type: string
          description: User specified descriptive string for this Restore.
        restoreConfig:
          description: Output only. Configuration of the Restore. Inherited from parent RestorePlan's restore_config.
          $ref: '#/components/schemas/RestoreConfig'
          readOnly: true
        resourcesFailedCount:
          format: int32
          readOnly: true
          type: integer
          description: Output only. Number of resources that failed to be restored during the restore execution.
        updateTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The timestamp when this Restore resource was last updated.
    OperationMetadata:
      type: object
      properties:
        apiVersion:
          type: string
          description: Output only. API version used to start the operation.
          readOnly: true
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        endTime:
          type: string
          format: google-datetime
          description: Output only. The time the operation finished running.
          readOnly: true
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
          type: string
        target:
          description: Output only. Server-defined resource path for the target of the operation.
          readOnly: true
          type: string
        requestedCancellation:
          description: 'Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
          type: boolean
          readOnly: true
        statusMessage:
          type: string
          description: 'Output only. Human-readable status of the operation, if any.'
          readOnly: true
      id: OperationMetadata
      description: Represents the metadata of the long-running operation.
    ListRestorePlansResponse:
      id: ListRestorePlansResponse
      properties:
        nextPageToken:
          type: string
          description: 'A token which may be sent as page_token in a subsequent `ListRestorePlans` call to retrieve the next page of results. If this field is omitted or empty, then there are no more results to return.'
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
        restorePlans:
          description: The list of RestorePlans matching the given criteria.
          items:
            $ref: '#/components/schemas/RestorePlan'
          type: array
      type: object
      description: Response message for ListRestorePlans.
    ClusterMetadata:
      id: ClusterMetadata
      description: Information about the GKE cluster from which this Backup was created.
      properties:
        k8sVersion:
          description: Output only. The Kubernetes server version of the source cluster.
          readOnly: true
          type: string
        gkeVersion:
          type: string
          description: Output only. GKE version
          readOnly: true
        cluster:
          readOnly: true
          description: 'Output only. The source cluster from which this Backup was created. Valid formats: - `projects/*/locations/*/clusters/*` - `projects/*/zones/*/clusters/*` This is inherited from the parent BackupPlan''s cluster field.'
          type: string
        anthosVersion:
          readOnly: true
          description: Output only. Anthos version
          type: string
        backupCrdVersions:
          type: object
          description: Output only. A list of the Backup for GKE CRD versions found in the cluster.
          readOnly: true
          additionalProperties:
            type: string
      type: object
    Binding:
      id: Binding
      type: object
      properties:
        members:
          items:
            type: string
          type: array
          description: 'Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.'
        condition:
          $ref: '#/components/schemas/Expr'
          description: 'The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
        role:
          type: string
          description: 'Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.'
      description: 'Associates `members`, or principals, with a `role`.'
    GoogleLongrunningOperation:
      id: GoogleLongrunningOperation
      type: object
      properties:
        error:
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: The error result of the operation in case of failure or cancellation.
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
          type: object
        metadata:
          type: object
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        name:
          type: string
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
        done:
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
          type: boolean
      description: This resource represents a long-running operation that is the result of a network API call.
    ListBackupPlansResponse:
      id: ListBackupPlansResponse
      description: Response message for ListBackupPlans.
      type: object
      properties:
        unreachable:
          items:
            type: string
          type: array
          description: Locations that could not be reached.
        backupPlans:
          type: array
          description: The list of BackupPlans matching the given criteria.
          items:
            $ref: '#/components/schemas/BackupPlan'
        nextPageToken:
          type: string
          description: 'A token which may be sent as page_token in a subsequent `ListBackupPlans` call to retrieve the next page of results. If this field is omitted or empty, then there are no more results to return.'
  parameters:
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
  x-stackQL-resources:
    backups:
      id: google.gkebackup.backups
      name: backups
      title: Backups
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}~1backups~1{backupsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}~1backups~1{backupsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}~1backups~1{backupsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}~1backups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.backups
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}~1backups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}~1backups/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backups/methods/get'
          - $ref: '#/components/x-stackQL-resources/backups/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/backups/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/backups/methods/delete'
    backups_iam_policies:
      id: google.gkebackup.backups_iam_policies
      name: backups_iam_policies
      title: Backups Iam Policies
      methods:
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}~1backups~1{backupsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}~1backups~1{backupsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}~1backups~1{backupsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}~1backups~1{backupsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backups_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    volume_backups:
      id: google.gkebackup.volume_backups
      name: volume_backups
      title: Volume Backups
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}~1backups~1{backupsId}~1volumeBackups~1{volumeBackupsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}~1backups~1{backupsId}~1volumeBackups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.volumeBackups
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}~1backups~1{backupsId}~1volumeBackups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/volume_backups/methods/get'
          - $ref: '#/components/x-stackQL-resources/volume_backups/methods/list'
        insert: []
        update: []
        delete: []
    volume_backups_iam_policies:
      id: google.gkebackup.volume_backups_iam_policies
      name: volume_backups_iam_policies
      title: Volume Backups Iam Policies
      methods:
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}~1backups~1{backupsId}~1volumeBackups~1{volumeBackupsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}~1backups~1{backupsId}~1volumeBackups~1{volumeBackupsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}~1backups~1{backupsId}~1volumeBackups~1{volumeBackupsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}~1backups~1{backupsId}~1volumeBackups~1{volumeBackupsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/volume_backups_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    backup_plans:
      id: google.gkebackup.backup_plans
      name: backup_plans
      title: Backup Plans
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.backupPlans
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backup_plans/methods/get'
          - $ref: '#/components/x-stackQL-resources/backup_plans/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/backup_plans/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/backup_plans/methods/delete'
    backup_plans_iam_policies:
      id: google.gkebackup.backup_plans_iam_policies
      name: backup_plans_iam_policies
      title: Backup Plans Iam Policies
      methods:
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backup_plans_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    restore_plans:
      id: google.gkebackup.restore_plans
      name: restore_plans
      title: Restore Plans
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.restorePlans
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/restore_plans/methods/get'
          - $ref: '#/components/x-stackQL-resources/restore_plans/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/restore_plans/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/restore_plans/methods/delete'
    restore_plans_iam_policies:
      id: google.gkebackup.restore_plans_iam_policies
      name: restore_plans_iam_policies
      title: Restore Plans Iam Policies
      methods:
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/restore_plans_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    volume_restores:
      id: google.gkebackup.volume_restores
      name: volume_restores
      title: Volume Restores
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}~1restores~1{restoresId}~1volumeRestores~1{volumeRestoresId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}~1restores~1{restoresId}~1volumeRestores/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.volumeRestores
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}~1restores~1{restoresId}~1volumeRestores/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/volume_restores/methods/get'
          - $ref: '#/components/x-stackQL-resources/volume_restores/methods/list'
        insert: []
        update: []
        delete: []
    volume_restores_iam_policies:
      id: google.gkebackup.volume_restores_iam_policies
      name: volume_restores_iam_policies
      title: Volume Restores Iam Policies
      methods:
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}~1restores~1{restoresId}~1volumeRestores~1{volumeRestoresId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}~1restores~1{restoresId}~1volumeRestores~1{volumeRestoresId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}~1restores~1{restoresId}~1volumeRestores~1{volumeRestoresId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}~1restores~1{restoresId}~1volumeRestores~1{volumeRestoresId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/volume_restores_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    restores:
      id: google.gkebackup.restores
      name: restores
      title: Restores
      methods:
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}~1restores/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}~1restores/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.restores
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}~1restores/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}~1restores~1{restoresId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}~1restores~1{restoresId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}~1restores~1{restoresId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/restores/methods/get'
          - $ref: '#/components/x-stackQL-resources/restores/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/restores/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/restores/methods/delete'
    restores_iam_policies:
      id: google.gkebackup.restores_iam_policies
      name: restores_iam_policies
      title: Restores Iam Policies
      methods:
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}~1restores~1{restoresId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}~1restores~1{restoresId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}~1restores~1{restoresId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}~1restores~1{restoresId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/restores_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    operations:
      id: google.gkebackup.operations
      name: operations
      title: Operations
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_operations:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete_operations'
    locations:
      id: google.gkebackup.locations
      name: locations
      title: Locations
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        delete: []
paths:
  '/v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}/backups/{backupsId}':
    parameters: &ref_1
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/upload_protocol'
    get:
      description: Retrieve the details of a single Backup.
      operationId: gkebackup.projects.locations.backupPlans.backups.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: backups
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes an existing Backup.
      operationId: gkebackup.projects.locations.backupPlans.backups.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: backups
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Update a Backup.
      operationId: gkebackup.projects.locations.backupPlans.backups.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Backup'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: backups
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}/backups/{backupsId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: gkebackup.projects.locations.backupPlans.backups.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: backups_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}/backups':
    parameters: *ref_1
    get:
      description: Lists the Backups for a given BackupPlan.
      operationId: gkebackup.projects.locations.backupPlans.backups.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: backups
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.backups
    post:
      description: Creates a Backup for the given BackupPlan.
      operationId: gkebackup.projects.locations.backupPlans.backups.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Backup'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
        - in: query
          name: backupId
          schema:
            type: string
      x-stackQL-resource: backups
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}/backups/{backupsId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: gkebackup.projects.locations.backupPlans.backups.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: backups_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}/backups/{backupsId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: gkebackup.projects.locations.backupPlans.backups.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: backups_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}/backups/{backupsId}/volumeBackups/{volumeBackupsId}':
    parameters: *ref_1
    get:
      description: Retrieve the details of a single VolumeBackup.
      operationId: gkebackup.projects.locations.backupPlans.backups.volumeBackups.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeBackup'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
        - in: path
          name: volumeBackupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: volume_backups
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}/backups/{backupsId}/volumeBackups/{volumeBackupsId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: gkebackup.projects.locations.backupPlans.backups.volumeBackups.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
        - in: path
          name: volumeBackupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: volume_backups_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}/backups/{backupsId}/volumeBackups':
    parameters: *ref_1
    get:
      description: Lists the VolumeBackups for a given Backup.
      operationId: gkebackup.projects.locations.backupPlans.backups.volumeBackups.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVolumeBackupsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: volume_backups
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.volumeBackups
  '/v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}/backups/{backupsId}/volumeBackups/{volumeBackupsId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: gkebackup.projects.locations.backupPlans.backups.volumeBackups.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
        - in: path
          name: volumeBackupsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: volume_backups_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}/backups/{backupsId}/volumeBackups/{volumeBackupsId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: gkebackup.projects.locations.backupPlans.backups.volumeBackups.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
        - in: path
          name: volumeBackupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: volume_backups_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}':
    parameters: *ref_1
    get:
      description: Retrieve the details of a single BackupPlan.
      operationId: gkebackup.projects.locations.backupPlans.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupPlan'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
      x-stackQL-resource: backup_plans
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes an existing BackupPlan.
      operationId: gkebackup.projects.locations.backupPlans.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
      x-stackQL-resource: backup_plans
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Update a BackupPlan.
      operationId: gkebackup.projects.locations.backupPlans.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupPlan'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: backup_plans
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: gkebackup.projects.locations.backupPlans.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
      x-stackQL-resource: backup_plans_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/backupPlans':
    parameters: *ref_1
    get:
      description: Lists BackupPlans in a given location.
      operationId: gkebackup.projects.locations.backupPlans.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupPlansResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: backup_plans
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.backupPlans
    post:
      description: Creates a new BackupPlan in a given location.
      operationId: gkebackup.projects.locations.backupPlans.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupPlan'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: backupPlanId
          schema:
            type: string
      x-stackQL-resource: backup_plans
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: gkebackup.projects.locations.backupPlans.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: backup_plans_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: gkebackup.projects.locations.backupPlans.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
      x-stackQL-resource: backup_plans_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/restorePlans':
    parameters: *ref_1
    get:
      description: Lists RestorePlans in a given location.
      operationId: gkebackup.projects.locations.restorePlans.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRestorePlansResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: restore_plans
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.restorePlans
    post:
      description: Creates a new RestorePlan in a given location.
      operationId: gkebackup.projects.locations.restorePlans.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestorePlan'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: restorePlanId
          schema:
            type: string
      x-stackQL-resource: restore_plans
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: gkebackup.projects.locations.restorePlans.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
      x-stackQL-resource: restore_plans_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: gkebackup.projects.locations.restorePlans.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
      x-stackQL-resource: restore_plans_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}':
    parameters: *ref_1
    get:
      description: Retrieve the details of a single RestorePlan.
      operationId: gkebackup.projects.locations.restorePlans.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestorePlan'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
      x-stackQL-resource: restore_plans
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes an existing RestorePlan.
      operationId: gkebackup.projects.locations.restorePlans.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
      x-stackQL-resource: restore_plans
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Update a RestorePlan.
      operationId: gkebackup.projects.locations.restorePlans.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestorePlan'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: restore_plans
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: gkebackup.projects.locations.restorePlans.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: restore_plans_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}/restores/{restoresId}/volumeRestores/{volumeRestoresId}':
    parameters: *ref_1
    get:
      description: Retrieve the details of a single VolumeRestore.
      operationId: gkebackup.projects.locations.restorePlans.restores.volumeRestores.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeRestore'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
        - in: path
          name: restoresId
          required: true
          schema:
            type: string
        - in: path
          name: volumeRestoresId
          required: true
          schema:
            type: string
      x-stackQL-resource: volume_restores
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}/restores/{restoresId}/volumeRestores/{volumeRestoresId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: gkebackup.projects.locations.restorePlans.restores.volumeRestores.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
        - in: path
          name: restoresId
          required: true
          schema:
            type: string
        - in: path
          name: volumeRestoresId
          required: true
          schema:
            type: string
      x-stackQL-resource: volume_restores_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}/restores/{restoresId}/volumeRestores/{volumeRestoresId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: gkebackup.projects.locations.restorePlans.restores.volumeRestores.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
        - in: path
          name: restoresId
          required: true
          schema:
            type: string
        - in: path
          name: volumeRestoresId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: volume_restores_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}/restores/{restoresId}/volumeRestores':
    parameters: *ref_1
    get:
      description: Lists the VolumeRestores for a given Restore.
      operationId: gkebackup.projects.locations.restorePlans.restores.volumeRestores.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVolumeRestoresResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
        - in: path
          name: restoresId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: volume_restores
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.volumeRestores
  '/v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}/restores/{restoresId}/volumeRestores/{volumeRestoresId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: gkebackup.projects.locations.restorePlans.restores.volumeRestores.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
        - in: path
          name: restoresId
          required: true
          schema:
            type: string
        - in: path
          name: volumeRestoresId
          required: true
          schema:
            type: string
      x-stackQL-resource: volume_restores_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}/restores':
    parameters: *ref_1
    post:
      description: Creates a new Restore for the given RestorePlan.
      operationId: gkebackup.projects.locations.restorePlans.restores.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Restore'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
        - in: query
          name: restoreId
          schema:
            type: string
      x-stackQL-resource: restores
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists the Restores for a given RestorePlan.
      operationId: gkebackup.projects.locations.restorePlans.restores.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRestoresResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: restores
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.restores
  '/v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}/restores/{restoresId}':
    parameters: *ref_1
    patch:
      description: Update a Restore.
      operationId: gkebackup.projects.locations.restorePlans.restores.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Restore'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
        - in: path
          name: restoresId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: restores
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Retrieves the details of a single Restore.
      operationId: gkebackup.projects.locations.restorePlans.restores.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restore'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
        - in: path
          name: restoresId
          required: true
          schema:
            type: string
      x-stackQL-resource: restores
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes an existing Restore.
      operationId: gkebackup.projects.locations.restorePlans.restores.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
        - in: path
          name: restoresId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
      x-stackQL-resource: restores
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}/restores/{restoresId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: gkebackup.projects.locations.restorePlans.restores.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
        - in: path
          name: restoresId
          required: true
          schema:
            type: string
      x-stackQL-resource: restores_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}/restores/{restoresId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: gkebackup.projects.locations.restorePlans.restores.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
        - in: path
          name: restoresId
          required: true
          schema:
            type: string
      x-stackQL-resource: restores_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}/restores/{restoresId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: gkebackup.projects.locations.restorePlans.restores.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
        - in: path
          name: restoresId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: restores_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: gkebackup.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: gkebackup.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: gkebackup.projects.locations.deleteOperations
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete_operations
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: gkebackup.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleLongrunningCancelOperationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}':
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: gkebackup.projects.locations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations':
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: gkebackup.projects.locations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.locations
