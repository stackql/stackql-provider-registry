openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Backup for GKE API
  description: >-
    Backup for GKE is a managed Kubernetes workload backup and restore service
    for GKE clusters.
  version: v1
  x-discovery-doc-revision: '20241016'
  x-generated-date: '2024-11-06'
externalDocs:
  url: https://cloud.google.com/kubernetes-engine/docs/add-on/backup-for-gke
servers:
  - url: https://gkebackup.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    GoogleLongrunningListOperationsResponse:
      id: GoogleLongrunningListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    GoogleLongrunningOperation:
      id: GoogleLongrunningOperation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/GoogleRpcStatus'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    GoogleRpcStatus:
      id: GoogleRpcStatus
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    GoogleLongrunningCancelOperationRequest:
      id: GoogleLongrunningCancelOperationRequest
      description: The request message for Operations.CancelOperation.
      type: object
      properties: {}
    BackupPlan:
      id: BackupPlan
      description: Defines the configuration and scheduling for a "line" of Backups.
      type: object
      properties:
        name:
          description: >-
            Output only. The full name of the BackupPlan resource. Format:
            `projects/*/locations/*/backupPlans/*`
          readOnly: true
          type: string
        uid:
          description: >-
            Output only. Server generated global unique identifier of
            [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier)
            format.
          readOnly: true
          type: string
        createTime:
          description: >-
            Output only. The timestamp when this BackupPlan resource was
            created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. The timestamp when this BackupPlan resource was last
            updated.
          readOnly: true
          type: string
          format: google-datetime
        description:
          description: Optional. User specified descriptive string for this BackupPlan.
          type: string
        cluster:
          description: >-
            Required. Immutable. The source cluster from which Backups will be
            created via this BackupPlan. Valid formats: -
            `projects/*/locations/*/clusters/*` -
            `projects/*/zones/*/clusters/*`
          type: string
        retentionPolicy:
          description: >-
            Optional. RetentionPolicy governs lifecycle of Backups created under
            this plan.
          $ref: '#/components/schemas/RetentionPolicy'
        labels:
          description: Optional. A set of custom labels supplied by user.
          type: object
          additionalProperties:
            type: string
        backupSchedule:
          description: >-
            Optional. Defines a schedule for automatic Backup creation via this
            BackupPlan.
          $ref: '#/components/schemas/Schedule'
        etag:
          description: >-
            Output only. `etag` is used for optimistic concurrency control as a
            way to help prevent simultaneous updates of a backup plan from
            overwriting each other. It is strongly suggested that systems make
            use of the 'etag' in the read-modify-write cycle to perform
            BackupPlan updates in order to avoid race conditions: An `etag` is
            returned in the response to `GetBackupPlan`, and systems are
            expected to put that etag in the request to `UpdateBackupPlan` or
            `DeleteBackupPlan` to ensure that their change will be applied to
            the same version of the resource.
          readOnly: true
          type: string
        deactivated:
          description: >-
            Optional. This flag indicates whether this BackupPlan has been
            deactivated. Setting this field to True locks the BackupPlan such
            that no further updates will be allowed (except deletes), including
            the deactivated field itself. It also prevents any new Backups from
            being created via this BackupPlan (including scheduled Backups).
            Default: False
          type: boolean
        backupConfig:
          description: >-
            Optional. Defines the configuration of Backups created via this
            BackupPlan.
          $ref: '#/components/schemas/BackupConfig'
        protectedPodCount:
          description: >-
            Output only. The number of Kubernetes Pods backed up in the last
            successful Backup created via this BackupPlan.
          readOnly: true
          type: integer
          format: int32
        state:
          description: >-
            Output only. State of the BackupPlan. This State field reflects the
            various stages a BackupPlan can be in during the Create operation.
            It will be set to "DEACTIVATED" if the BackupPlan is deactivated on
            an Update
          readOnly: true
          type: string
          enumDescriptions:
            - Default first value for Enums.
            - Waiting for cluster state to be RUNNING.
            - The BackupPlan is in the process of being created.
            - >-
              The BackupPlan has successfully been created and is ready for
              Backups.
            - BackupPlan creation has failed.
            - The BackupPlan has been deactivated.
            - The BackupPlan is in the process of being deleted.
          enum:
            - STATE_UNSPECIFIED
            - CLUSTER_PENDING
            - PROVISIONING
            - READY
            - FAILED
            - DEACTIVATED
            - DELETING
        stateReason:
          description: >-
            Output only. Human-readable description of why BackupPlan is in the
            current `state`
          readOnly: true
          type: string
        rpoRiskLevel:
          description: >-
            Output only. A number that represents the current risk level of this
            BackupPlan from RPO perspective with 1 being no risk and 5 being
            highest risk.
          readOnly: true
          type: integer
          format: int32
        rpoRiskReason:
          description: >-
            Output only. Human-readable description of why the BackupPlan is in
            the current rpo_risk_level and action items if any.
          readOnly: true
          type: string
    RetentionPolicy:
      id: RetentionPolicy
      description: RetentionPolicy defines a Backup retention policy for a BackupPlan.
      type: object
      properties:
        backupDeleteLockDays:
          description: >-
            Optional. Minimum age for Backups created via this BackupPlan (in
            days). This field MUST be an integer value between 0-90 (inclusive).
            A Backup created under this BackupPlan will NOT be deletable until
            it reaches Backup's (create_time + backup_delete_lock_days).
            Updating this field of a BackupPlan does NOT affect existing Backups
            under it. Backups created AFTER a successful update will inherit the
            new value. Default: 0 (no delete blocking)
          type: integer
          format: int32
        backupRetainDays:
          description: >-
            Optional. The default maximum age of a Backup created via this
            BackupPlan. This field MUST be an integer value >= 0 and <= 365. If
            specified, a Backup created under this BackupPlan will be
            automatically deleted after its age reaches (create_time +
            backup_retain_days). If not specified, Backups created under this
            BackupPlan will NOT be subject to automatic deletion. Updating this
            field does NOT affect existing Backups under it. Backups created
            AFTER a successful update will automatically pick up the new value.
            NOTE: backup_retain_days must be >= backup_delete_lock_days. If
            cron_schedule is defined, then this must be <= 360 * the creation
            interval. If rpo_config is defined, then this must be <= 360 *
            target_rpo_minutes / (1440minutes/day). Default: 0 (no automatic
            deletion)
          type: integer
          format: int32
        locked:
          description: >-
            Optional. This flag denotes whether the retention policy of this
            BackupPlan is locked. If set to True, no further update is allowed
            on this policy, including the `locked` field itself. Default: False
          type: boolean
    Schedule:
      id: Schedule
      description: >-
        Defines scheduling parameters for automatically creating Backups via
        this BackupPlan.
      type: object
      properties:
        cronSchedule:
          description: >-
            Optional. A standard [cron](https://wikipedia.com/wiki/cron) string
            that defines a repeating schedule for creating Backups via this
            BackupPlan. This is mutually exclusive with the rpo_config field
            since at most one schedule can be defined for a BackupPlan. If this
            is defined, then backup_retain_days must also be defined. Default
            (empty): no automatic backup creation will occur.
          type: string
        paused:
          description: >-
            Optional. This flag denotes whether automatic Backup creation is
            paused for this BackupPlan. Default: False
          type: boolean
        rpoConfig:
          description: >-
            Optional. Defines the RPO schedule configuration for this
            BackupPlan. This is mutually exclusive with the cron_schedule field
            since at most one schedule can be defined for a BackupPLan. If this
            is defined, then backup_retain_days must also be defined. Default
            (empty): no automatic backup creation will occur.
          $ref: '#/components/schemas/RpoConfig'
        nextScheduledBackupTime:
          description: >-
            Output only. Start time of next scheduled backup under this
            BackupPlan by either cron_schedule or rpo config.
          readOnly: true
          type: string
          format: google-datetime
    RpoConfig:
      id: RpoConfig
      description: >-
        Defines RPO scheduling configuration for automatically creating Backups
        via this BackupPlan.
      type: object
      properties:
        targetRpoMinutes:
          description: >-
            Required. Defines the target RPO for the BackupPlan in minutes,
            which means the target maximum data loss in time that is acceptable
            for this BackupPlan. This must be at least 60, i.e., 1 hour, and at
            most 86400, i.e., 60 days.
          type: integer
          format: int32
        exclusionWindows:
          description: >-
            Optional. User specified time windows during which backup can NOT
            happen for this BackupPlan - backups should start and finish outside
            of any given exclusion window. Note: backup jobs will be scheduled
            to start and finish outside the duration of the window as much as
            possible, but running jobs will not get canceled when it runs into
            the window. All the time and date values in exclusion_windows entry
            in the API are in UTC. We only allow <=1 recurrence (daily or
            weekly) exclusion window for a BackupPlan while no restriction on
            number of single occurrence windows.
          type: array
          items:
            $ref: '#/components/schemas/ExclusionWindow'
    ExclusionWindow:
      id: ExclusionWindow
      description: >-
        Defines a time window during which no backup should happen. All time and
        date are in UTC.
      type: object
      properties:
        startTime:
          description: >-
            Required. Specifies the start time of the window using time of the
            day in UTC.
          $ref: '#/components/schemas/TimeOfDay'
        duration:
          description: >-
            Required. Specifies duration of the window. Duration must be >= 5
            minutes and < (target RPO - 20 minutes). Additional restrictions
            based on the recurrence type to allow some time for backup to
            happen: - single_occurrence_date: no restriction, but UI may warn
            about this when duration >= target RPO - daily window: duration < 24
            hours - weekly window: - days of week includes all seven days of a
            week: duration < 24 hours - all other weekly window: duration < 168
            hours (i.e., 24 * 7 hours)
          type: string
          format: google-duration
        singleOccurrenceDate:
          description: >-
            No recurrence. The exclusion window occurs only once and on this
            date in UTC.
          $ref: '#/components/schemas/Date'
        daily:
          description: >-
            The exclusion window occurs every day if set to "True". Specifying
            this field to "False" is an error.
          type: boolean
        daysOfWeek:
          description: The exclusion window occurs on these days of each week in UTC.
          $ref: '#/components/schemas/DayOfWeekList'
    TimeOfDay:
      id: TimeOfDay
      description: >-
        Represents a time of day. The date and time zone are either not
        significant or are specified elsewhere. An API may choose to allow leap
        seconds. Related types are google.type.Date and
        `google.protobuf.Timestamp`.
      type: object
      properties:
        hours:
          description: >-
            Hours of a day in 24 hour format. Must be greater than or equal to 0
            and typically must be less than or equal to 23. An API may choose to
            allow the value "24:00:00" for scenarios like business closing time.
          type: integer
          format: int32
        minutes:
          description: >-
            Minutes of an hour. Must be greater than or equal to 0 and less than
            or equal to 59.
          type: integer
          format: int32
        seconds:
          description: >-
            Seconds of a minute. Must be greater than or equal to 0 and
            typically must be less than or equal to 59. An API may allow the
            value 60 if it allows leap-seconds.
          type: integer
          format: int32
        nanos:
          description: >-
            Fractions of seconds, in nanoseconds. Must be greater than or equal
            to 0 and less than or equal to 999,999,999.
          type: integer
          format: int32
    Date:
      id: Date
      description: >-
        Represents a whole or partial calendar date, such as a birthday. The
        time of day and time zone are either specified elsewhere or are
        insignificant. The date is relative to the Gregorian Calendar. This can
        represent one of the following: * A full date, with non-zero year,
        month, and day values. * A month and day, with a zero year (for example,
        an anniversary). * A year on its own, with a zero month and a zero day.
        * A year and month, with a zero day (for example, a credit card
        expiration date). Related types: * google.type.TimeOfDay *
        google.type.DateTime * google.protobuf.Timestamp
      type: object
      properties:
        year:
          description: >-
            Year of the date. Must be from 1 to 9999, or 0 to specify a date
            without a year.
          type: integer
          format: int32
        month:
          description: >-
            Month of a year. Must be from 1 to 12, or 0 to specify a year
            without a month and day.
          type: integer
          format: int32
        day:
          description: >-
            Day of a month. Must be from 1 to 31 and valid for the year and
            month, or 0 to specify a year by itself or a year and month where
            the day isn't significant.
          type: integer
          format: int32
    DayOfWeekList:
      id: DayOfWeekList
      description: Holds repeated DaysOfWeek values as a container.
      type: object
      properties:
        daysOfWeek:
          description: Optional. A list of days of week.
          type: array
          items:
            type: string
            enumDescriptions:
              - The day of the week is unspecified.
              - Monday
              - Tuesday
              - Wednesday
              - Thursday
              - Friday
              - Saturday
              - Sunday
            enum:
              - DAY_OF_WEEK_UNSPECIFIED
              - MONDAY
              - TUESDAY
              - WEDNESDAY
              - THURSDAY
              - FRIDAY
              - SATURDAY
              - SUNDAY
    BackupConfig:
      id: BackupConfig
      description: >-
        BackupConfig defines the configuration of Backups created via this
        BackupPlan.
      type: object
      properties:
        allNamespaces:
          description: If True, include all namespaced resources
          type: boolean
        selectedNamespaces:
          description: If set, include just the resources in the listed namespaces.
          $ref: '#/components/schemas/Namespaces'
        selectedApplications:
          description: >-
            If set, include just the resources referenced by the listed
            ProtectedApplications.
          $ref: '#/components/schemas/NamespacedNames'
        includeVolumeData:
          description: >-
            Optional. This flag specifies whether volume data should be backed
            up when PVCs are included in the scope of a Backup. Default: False
          type: boolean
        includeSecrets:
          description: >-
            Optional. This flag specifies whether Kubernetes Secret resources
            should be included when they fall into the scope of Backups.
            Default: False
          type: boolean
        encryptionKey:
          description: >-
            Optional. This defines a customer managed encryption key that will
            be used to encrypt the "config" portion (the Kubernetes resources)
            of Backups created via this plan. Default (empty): Config backup
            artifacts will not be encrypted.
          $ref: '#/components/schemas/EncryptionKey'
        permissiveMode:
          description: >-
            Optional. If false, Backups will fail when Backup for GKE detects
            Kubernetes configuration that is non-standard or requires additional
            setup to restore. Default: False
          type: boolean
    Namespaces:
      id: Namespaces
      description: A list of Kubernetes Namespaces.
      type: object
      properties:
        namespaces:
          description: Optional. A list of Kubernetes Namespaces.
          type: array
          items:
            type: string
    NamespacedNames:
      id: NamespacedNames
      description: A list of namespaced Kubernetes resources.
      type: object
      properties:
        namespacedNames:
          description: Optional. A list of namespaced Kubernetes resources.
          type: array
          items:
            $ref: '#/components/schemas/NamespacedName'
    NamespacedName:
      id: NamespacedName
      description: A reference to a namespaced resource in Kubernetes.
      type: object
      properties:
        namespace:
          description: Optional. The Namespace of the Kubernetes resource.
          type: string
        name:
          description: Optional. The name of the Kubernetes resource.
          type: string
    EncryptionKey:
      id: EncryptionKey
      description: >-
        Defined a customer managed encryption key that will be used to encrypt
        Backup artifacts.
      type: object
      properties:
        gcpKmsEncryptionKey:
          description: >-
            Optional. Google Cloud KMS encryption key. Format:
            `projects/*/locations/*/keyRings/*/cryptoKeys/*`
          type: string
    ListBackupPlansResponse:
      id: ListBackupPlansResponse
      description: Response message for ListBackupPlans.
      type: object
      properties:
        backupPlans:
          description: The list of BackupPlans matching the given criteria.
          type: array
          items:
            $ref: '#/components/schemas/BackupPlan'
        nextPageToken:
          description: >-
            A token which may be sent as page_token in a subsequent
            `ListBackupPlans` call to retrieve the next page of results. If this
            field is omitted or empty, then there are no more results to return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Backup:
      id: Backup
      description: >-
        Represents a request to perform a single point-in-time capture of some
        portion of the state of a GKE cluster, the record of the backup
        operation itself, and an anchor for the underlying artifacts that
        comprise the Backup (the config backup and VolumeBackups).
      type: object
      properties:
        name:
          description: >-
            Output only. The fully qualified name of the Backup.
            `projects/*/locations/*/backupPlans/*/backups/*`
          readOnly: true
          type: string
        uid:
          description: >-
            Output only. Server generated global unique identifier of
            [UUID4](https://en.wikipedia.org/wiki/Universally_unique_identifier)
          readOnly: true
          type: string
        createTime:
          description: Output only. The timestamp when this Backup resource was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. The timestamp when this Backup resource was last
            updated.
          readOnly: true
          type: string
          format: google-datetime
        manual:
          description: >-
            Output only. This flag indicates whether this Backup resource was
            created manually by a user or via a schedule in the BackupPlan. A
            value of True means that the Backup was created manually.
          readOnly: true
          type: boolean
        labels:
          description: Optional. A set of custom labels supplied by user.
          type: object
          additionalProperties:
            type: string
        deleteLockDays:
          description: >-
            Optional. Minimum age for this Backup (in days). If this field is
            set to a non-zero value, the Backup will be "locked" against
            deletion (either manual or automatic deletion) for the number of
            days provided (measured from the creation time of the Backup). MUST
            be an integer value between 0-90 (inclusive). Defaults to parent
            BackupPlan's backup_delete_lock_days setting and may only be
            increased (either at creation time or in a subsequent update).
          type: integer
          format: int32
        deleteLockExpireTime:
          description: >-
            Output only. The time at which an existing delete lock will expire
            for this backup (calculated from create_time + delete_lock_days).
          readOnly: true
          type: string
          format: google-datetime
        retainDays:
          description: >-
            Optional. The age (in days) after which this Backup will be
            automatically deleted. Must be an integer value >= 0: - If 0, no
            automatic deletion will occur for this Backup. - If not 0, this must
            be >= delete_lock_days and <= 365. Once a Backup is created, this
            value may only be increased. Defaults to the parent BackupPlan's
            backup_retain_days value.
          type: integer
          format: int32
        retainExpireTime:
          description: >-
            Output only. The time at which this Backup will be automatically
            deleted (calculated from create_time + retain_days).
          readOnly: true
          type: string
          format: google-datetime
        encryptionKey:
          description: >-
            Output only. The customer managed encryption key that was used to
            encrypt the Backup's artifacts. Inherited from the parent
            BackupPlan's encryption_key value.
          readOnly: true
          $ref: '#/components/schemas/EncryptionKey'
        allNamespaces:
          description: Output only. If True, all namespaces were included in the Backup.
          readOnly: true
          type: boolean
        selectedNamespaces:
          description: >-
            Output only. If set, the list of namespaces that were included in
            the Backup.
          readOnly: true
          $ref: '#/components/schemas/Namespaces'
        selectedApplications:
          description: >-
            Output only. If set, the list of ProtectedApplications whose
            resources were included in the Backup.
          readOnly: true
          $ref: '#/components/schemas/NamespacedNames'
        containsVolumeData:
          description: >-
            Output only. Whether or not the Backup contains volume data.
            Controlled by the parent BackupPlan's include_volume_data value.
          readOnly: true
          type: boolean
        containsSecrets:
          description: >-
            Output only. Whether or not the Backup contains Kubernetes Secrets.
            Controlled by the parent BackupPlan's include_secrets value.
          readOnly: true
          type: boolean
        clusterMetadata:
          description: >-
            Output only. Information about the GKE cluster from which this
            Backup was created.
          readOnly: true
          $ref: '#/components/schemas/ClusterMetadata'
        state:
          description: Output only. Current state of the Backup
          readOnly: true
          type: string
          enumDescriptions:
            - The Backup resource is in the process of being created.
            - >-
              The Backup resource has been created and the associated BackupJob
              Kubernetes resource has been injected into the source cluster.
            - >-
              The gkebackup agent in the cluster has begun executing the backup
              operation.
            - The backup operation has completed successfully.
            - The backup operation has failed.
            - >-
              This Backup resource (and its associated artifacts) is in the
              process of being deleted.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - IN_PROGRESS
            - SUCCEEDED
            - FAILED
            - DELETING
        stateReason:
          description: >-
            Output only. Human-readable description of why the backup is in the
            current `state`.
          readOnly: true
          type: string
        completeTime:
          description: Output only. Completion time of the Backup
          readOnly: true
          type: string
          format: google-datetime
        resourceCount:
          description: >-
            Output only. The total number of Kubernetes resources included in
            the Backup.
          readOnly: true
          type: integer
          format: int32
        volumeCount:
          description: >-
            Output only. The total number of volume backups contained in the
            Backup.
          readOnly: true
          type: integer
          format: int32
        sizeBytes:
          description: >-
            Output only. The total size of the Backup in bytes = config backup
            size + sum(volume backup sizes)
          readOnly: true
          type: string
          format: int64
        etag:
          description: >-
            Output only. `etag` is used for optimistic concurrency control as a
            way to help prevent simultaneous updates of a backup from
            overwriting each other. It is strongly suggested that systems make
            use of the `etag` in the read-modify-write cycle to perform backup
            updates in order to avoid race conditions: An `etag` is returned in
            the response to `GetBackup`, and systems are expected to put that
            etag in the request to `UpdateBackup` or `DeleteBackup` to ensure
            that their change will be applied to the same version of the
            resource.
          readOnly: true
          type: string
        description:
          description: Optional. User specified descriptive string for this Backup.
          type: string
        podCount:
          description: >-
            Output only. The total number of Kubernetes Pods contained in the
            Backup.
          readOnly: true
          type: integer
          format: int32
        configBackupSizeBytes:
          description: Output only. The size of the config backup in bytes.
          readOnly: true
          type: string
          format: int64
        permissiveMode:
          description: >-
            Output only. If false, Backup will fail when Backup for GKE detects
            Kubernetes configuration that is non-standard or requires additional
            setup to restore. Inherited from the parent BackupPlan's
            permissive_mode value.
          readOnly: true
          type: boolean
    ClusterMetadata:
      id: ClusterMetadata
      description: Information about the GKE cluster from which this Backup was created.
      type: object
      properties:
        cluster:
          description: >-
            Output only. The source cluster from which this Backup was created.
            Valid formats: - `projects/*/locations/*/clusters/*` -
            `projects/*/zones/*/clusters/*` This is inherited from the parent
            BackupPlan's cluster field.
          readOnly: true
          type: string
        k8sVersion:
          description: Output only. The Kubernetes server version of the source cluster.
          readOnly: true
          type: string
        backupCrdVersions:
          description: >-
            Output only. A list of the Backup for GKE CRD versions found in the
            cluster.
          readOnly: true
          type: object
          additionalProperties:
            type: string
        gkeVersion:
          description: Output only. GKE version
          readOnly: true
          type: string
        anthosVersion:
          description: Output only. Anthos version
          readOnly: true
          type: string
    ListBackupsResponse:
      id: ListBackupsResponse
      description: Response message for ListBackups.
      type: object
      properties:
        backups:
          description: The list of Backups matching the given criteria.
          type: array
          items:
            $ref: '#/components/schemas/Backup'
        nextPageToken:
          description: >-
            A token which may be sent as page_token in a subsequent
            `ListBackups` call to retrieve the next page of results. If this
            field is omitted or empty, then there are no more results to return.
          type: string
    ListVolumeBackupsResponse:
      id: ListVolumeBackupsResponse
      description: Response message for ListVolumeBackups.
      type: object
      properties:
        volumeBackups:
          description: The list of VolumeBackups matching the given criteria.
          type: array
          items:
            $ref: '#/components/schemas/VolumeBackup'
        nextPageToken:
          description: >-
            A token which may be sent as page_token in a subsequent
            `ListVolumeBackups` call to retrieve the next page of results. If
            this field is omitted or empty, then there are no more results to
            return.
          type: string
    VolumeBackup:
      id: VolumeBackup
      description: >-
        Represents the backup of a specific persistent volume as a component of
        a Backup - both the record of the operation and a pointer to the
        underlying storage-specific artifacts.
      type: object
      properties:
        name:
          description: >-
            Output only. The full name of the VolumeBackup resource. Format:
            `projects/*/locations/*/backupPlans/*/backups/*/volumeBackups/*`.
          readOnly: true
          type: string
        uid:
          description: >-
            Output only. Server generated global unique identifier of
            [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier)
            format.
          readOnly: true
          type: string
        createTime:
          description: >-
            Output only. The timestamp when this VolumeBackup resource was
            created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. The timestamp when this VolumeBackup resource was last
            updated.
          readOnly: true
          type: string
          format: google-datetime
        sourcePvc:
          description: >-
            Output only. A reference to the source Kubernetes PVC from which
            this VolumeBackup was created.
          readOnly: true
          $ref: '#/components/schemas/NamespacedName'
        volumeBackupHandle:
          description: >-
            Output only. A storage system-specific opaque handle to the
            underlying volume backup.
          readOnly: true
          type: string
        format:
          description: Output only. The format used for the volume backup.
          readOnly: true
          type: string
          enumDescriptions:
            - Default value, not specified.
            - Compute Engine Persistent Disk snapshot based volume backup.
          enum:
            - VOLUME_BACKUP_FORMAT_UNSPECIFIED
            - GCE_PERSISTENT_DISK
        storageBytes:
          description: >-
            Output only. The aggregate size of the underlying artifacts
            associated with this VolumeBackup in the backup storage. This may
            change over time when multiple backups of the same volume share the
            same backup storage location. In particular, this is likely to
            increase in size when the immediately preceding backup of the same
            volume is deleted.
          readOnly: true
          type: string
          format: int64
        diskSizeBytes:
          description: >-
            Output only. The minimum size of the disk to which this VolumeBackup
            can be restored.
          readOnly: true
          type: string
          format: int64
        completeTime:
          description: >-
            Output only. The timestamp when the associated underlying volume
            backup operation completed.
          readOnly: true
          type: string
          format: google-datetime
        state:
          description: Output only. The current state of this VolumeBackup.
          readOnly: true
          type: string
          enumDescriptions:
            - This is an illegal state and should not be encountered.
            - >-
              A volume for the backup was identified and backup process is about
              to start.
            - >-
              The volume backup operation has begun and is in the initial
              "snapshot" phase of the process. Any defined ProtectedApplication
              "pre" hooks will be executed before entering this state and "post"
              hooks will be executed upon leaving this state.
            - >-
              The snapshot phase of the volume backup operation has completed
              and the snapshot is now being uploaded to backup storage.
            - The volume backup operation has completed successfully.
            - The volume backup operation has failed.
            - >-
              This VolumeBackup resource (and its associated artifacts) is in
              the process of being deleted.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - SNAPSHOTTING
            - UPLOADING
            - SUCCEEDED
            - FAILED
            - DELETING
        stateMessage:
          description: >-
            Output only. A human readable message explaining why the
            VolumeBackup is in its current state.
          readOnly: true
          type: string
        etag:
          description: >-
            Output only. `etag` is used for optimistic concurrency control as a
            way to help prevent simultaneous updates of a volume backup from
            overwriting each other. It is strongly suggested that systems make
            use of the `etag` in the read-modify-write cycle to perform volume
            backup updates in order to avoid race conditions.
          readOnly: true
          type: string
    RestorePlan:
      id: RestorePlan
      description: >-
        The configuration of a potential series of Restore operations to be
        performed against Backups belong to a particular BackupPlan.
      type: object
      properties:
        name:
          description: >-
            Output only. The full name of the RestorePlan resource. Format:
            `projects/*/locations/*/restorePlans/*`.
          readOnly: true
          type: string
        uid:
          description: >-
            Output only. Server generated global unique identifier of
            [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier)
            format.
          readOnly: true
          type: string
        createTime:
          description: >-
            Output only. The timestamp when this RestorePlan resource was
            created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. The timestamp when this RestorePlan resource was last
            updated.
          readOnly: true
          type: string
          format: google-datetime
        description:
          description: Optional. User specified descriptive string for this RestorePlan.
          type: string
        backupPlan:
          description: >-
            Required. Immutable. A reference to the BackupPlan from which
            Backups may be used as the source for Restores created via this
            RestorePlan. Format: `projects/*/locations/*/backupPlans/*`.
          type: string
        cluster:
          description: >-
            Required. Immutable. The target cluster into which Restores created
            via this RestorePlan will restore data. NOTE: the cluster's region
            must be the same as the RestorePlan. Valid formats: -
            `projects/*/locations/*/clusters/*` -
            `projects/*/zones/*/clusters/*`
          type: string
        restoreConfig:
          description: Required. Configuration of Restores created via this RestorePlan.
          $ref: '#/components/schemas/RestoreConfig'
        labels:
          description: Optional. A set of custom labels supplied by user.
          type: object
          additionalProperties:
            type: string
        etag:
          description: >-
            Output only. `etag` is used for optimistic concurrency control as a
            way to help prevent simultaneous updates of a restore from
            overwriting each other. It is strongly suggested that systems make
            use of the `etag` in the read-modify-write cycle to perform restore
            updates in order to avoid race conditions: An `etag` is returned in
            the response to `GetRestorePlan`, and systems are expected to put
            that etag in the request to `UpdateRestorePlan` or
            `DeleteRestorePlan` to ensure that their change will be applied to
            the same version of the resource.
          readOnly: true
          type: string
        state:
          description: >-
            Output only. State of the RestorePlan. This State field reflects the
            various stages a RestorePlan can be in during the Create operation.
          readOnly: true
          type: string
          enumDescriptions:
            - Default first value for Enums.
            - Waiting for cluster state to be RUNNING.
            - >-
              The RestorePlan has successfully been created and is ready for
              Restores.
            - RestorePlan creation has failed.
            - The RestorePlan is in the process of being deleted.
          enum:
            - STATE_UNSPECIFIED
            - CLUSTER_PENDING
            - READY
            - FAILED
            - DELETING
        stateReason:
          description: >-
            Output only. Human-readable description of why RestorePlan is in the
            current `state`
          readOnly: true
          type: string
    RestoreConfig:
      id: RestoreConfig
      description: Configuration of a restore.
      type: object
      properties:
        volumeDataRestorePolicy:
          description: >-
            Optional. Specifies the mechanism to be used to restore volume data.
            Default: VOLUME_DATA_RESTORE_POLICY_UNSPECIFIED (will be treated as
            NO_VOLUME_DATA_RESTORATION).
          type: string
          enumDescriptions:
            - Unspecified (illegal).
            - >-
              For each PVC to be restored, create a new underlying volume and PV
              from the corresponding VolumeBackup contained within the Backup.
            - >-
              For each PVC to be restored, attempt to reuse the original PV
              contained in the Backup (with its original underlying volume).
              This option is likely only usable when restoring a workload to its
              original cluster.
            - >-
              For each PVC to be restored, create PVC without any particular
              action to restore data. In this case, the normal Kubernetes
              provisioning logic would kick in, and this would likely result in
              either dynamically provisioning blank PVs or binding to statically
              provisioned PVs.
          enum:
            - VOLUME_DATA_RESTORE_POLICY_UNSPECIFIED
            - RESTORE_VOLUME_DATA_FROM_BACKUP
            - REUSE_VOLUME_HANDLE_FROM_BACKUP
            - NO_VOLUME_DATA_RESTORATION
        clusterResourceConflictPolicy:
          description: >-
            Optional. Defines the behavior for handling the situation where
            cluster-scoped resources being restored already exist in the target
            cluster. This MUST be set to a value other than
            CLUSTER_RESOURCE_CONFLICT_POLICY_UNSPECIFIED if
            cluster_resource_restore_scope is not empty.
          type: string
          enumDescriptions:
            - >-
              Unspecified. Only allowed if no cluster-scoped resources will be
              restored.
            - Do not attempt to restore the conflicting resource.
            - >-
              Delete the existing version before re-creating it from the Backup.
              This is a dangerous option which could cause unintentional data
              loss if used inappropriately. For example, deleting a CRD will
              cause Kubernetes to delete all CRs of that type.
          enum:
            - CLUSTER_RESOURCE_CONFLICT_POLICY_UNSPECIFIED
            - USE_EXISTING_VERSION
            - USE_BACKUP_VERSION
        namespacedResourceRestoreMode:
          description: >-
            Optional. Defines the behavior for handling the situation where sets
            of namespaced resources being restored already exist in the target
            cluster. This MUST be set to a value other than
            NAMESPACED_RESOURCE_RESTORE_MODE_UNSPECIFIED.
          type: string
          enumDescriptions:
            - Unspecified (invalid).
            - >-
              When conflicting top-level resources (either Namespaces or
              ProtectedApplications, depending upon the scope) are encountered,
              this will first trigger a delete of the conflicting resource AND
              ALL OF ITS REFERENCED RESOURCES (e.g., all resources in the
              Namespace or all resources referenced by the ProtectedApplication)
              before restoring the resources from the Backup. This mode should
              only be used when you are intending to revert some portion of a
              cluster to an earlier state.
            - >-
              If conflicting top-level resources (either Namespaces or
              ProtectedApplications, depending upon the scope) are encountered
              at the beginning of a restore process, the Restore will fail. If a
              conflict occurs during the restore process itself (e.g., because
              an out of band process creates conflicting resources), a conflict
              will be reported.
            - >-
              This mode merges the backup and the target cluster and skips the
              conflicting resources. If a single resource to restore exists in
              the cluster before restoration, the resource will be skipped,
              otherwise it will be restored.
            - >-
              This mode merges the backup and the target cluster and skips the
              conflicting resources except volume data. If a PVC to restore
              already exists, this mode will restore/reconnect the volume
              without overwriting the PVC. It is similar to
              MERGE_SKIP_ON_CONFLICT except that it will apply the volume data
              policy for the conflicting PVCs: -
              RESTORE_VOLUME_DATA_FROM_BACKUP: restore data only and respect the
              reclaim policy of the original PV; -
              REUSE_VOLUME_HANDLE_FROM_BACKUP: reconnect and respect the reclaim
              policy of the original PV; - NO_VOLUME_DATA_RESTORATION: new
              provision and respect the reclaim policy of the original PV. Note
              that this mode could cause data loss as the original PV can be
              retained or deleted depending on its reclaim policy.
            - >-
              This mode merges the backup and the target cluster and replaces
              the conflicting resources with the ones in the backup. If a single
              resource to restore exists in the cluster before restoration, the
              resource will be replaced with the one from the backup. To replace
              an existing resource, the first attempt is to update the resource
              to match the one from the backup; if the update fails, the second
              attempt is to delete the resource and restore it from the backup.
              Note that this mode could cause data loss as it replaces the
              existing resources in the target cluster, and the original PV can
              be retained or deleted depending on its reclaim policy.
          enum:
            - NAMESPACED_RESOURCE_RESTORE_MODE_UNSPECIFIED
            - DELETE_AND_RESTORE
            - FAIL_ON_CONFLICT
            - MERGE_SKIP_ON_CONFLICT
            - MERGE_REPLACE_VOLUME_ON_CONFLICT
            - MERGE_REPLACE_ON_CONFLICT
        clusterResourceRestoreScope:
          description: >-
            Optional. Identifies the cluster-scoped resources to restore from
            the Backup. Not specifying it means NO cluster resource will be
            restored.
          $ref: '#/components/schemas/ClusterResourceRestoreScope'
        allNamespaces:
          description: >-
            Restore all namespaced resources in the Backup if set to "True".
            Specifying this field to "False" is an error.
          type: boolean
        selectedNamespaces:
          description: >-
            A list of selected Namespaces to restore from the Backup. The listed
            Namespaces and all resources contained in them will be restored.
          $ref: '#/components/schemas/Namespaces'
        selectedApplications:
          description: >-
            A list of selected ProtectedApplications to restore. The listed
            ProtectedApplications and all the resources to which they refer will
            be restored.
          $ref: '#/components/schemas/NamespacedNames'
        noNamespaces:
          description: >-
            Do not restore any namespaced resources if set to "True". Specifying
            this field to "False" is not allowed.
          type: boolean
        excludedNamespaces:
          description: >-
            A list of selected namespaces excluded from restoration. All
            namespaces except those in this list will be restored.
          $ref: '#/components/schemas/Namespaces'
        substitutionRules:
          description: >-
            Optional. A list of transformation rules to be applied against
            Kubernetes resources as they are selected for restoration from a
            Backup. Rules are executed in order defined - this order matters, as
            changes made by a rule may impact the filtering logic of subsequent
            rules. An empty list means no substitution will occur.
          type: array
          items:
            $ref: '#/components/schemas/SubstitutionRule'
        transformationRules:
          description: >-
            Optional. A list of transformation rules to be applied against
            Kubernetes resources as they are selected for restoration from a
            Backup. Rules are executed in order defined - this order matters, as
            changes made by a rule may impact the filtering logic of subsequent
            rules. An empty list means no transformation will occur.
          type: array
          items:
            $ref: '#/components/schemas/TransformationRule'
        volumeDataRestorePolicyBindings:
          description: >-
            Optional. A table that binds volumes by their scope to a restore
            policy. Bindings must have a unique scope. Any volumes not scoped in
            the bindings are subject to the policy defined in
            volume_data_restore_policy.
          type: array
          items:
            $ref: '#/components/schemas/VolumeDataRestorePolicyBinding'
        restoreOrder:
          description: Optional. RestoreOrder contains custom ordering to use on a Restore.
          $ref: '#/components/schemas/RestoreOrder'
    ClusterResourceRestoreScope:
      id: ClusterResourceRestoreScope
      description: >-
        Defines the scope of cluster-scoped resources to restore. Some group
        kinds are not reasonable choices for a restore, and will cause an error
        if selected here. Any scope selection that would restore "all valid"
        resources automatically excludes these group kinds. -
        gkebackup.gke.io/BackupJob - gkebackup.gke.io/RestoreJob -
        metrics.k8s.io/NodeMetrics - migration.k8s.io/StorageState -
        migration.k8s.io/StorageVersionMigration - Node -
        snapshot.storage.k8s.io/VolumeSnapshotContent - storage.k8s.io/CSINode
        Some group kinds are driven by restore configuration elsewhere, and will
        cause an error if selected here. - Namespace - PersistentVolume
      type: object
      properties:
        selectedGroupKinds:
          description: >-
            Optional. A list of cluster-scoped resource group kinds to restore
            from the backup. If specified, only the selected resources will be
            restored. Mutually exclusive to any other field in the message.
          type: array
          items:
            $ref: '#/components/schemas/GroupKind'
        excludedGroupKinds:
          description: >-
            Optional. A list of cluster-scoped resource group kinds to NOT
            restore from the backup. If specified, all valid cluster-scoped
            resources will be restored except for those specified in the list.
            Mutually exclusive to any other field in the message.
          type: array
          items:
            $ref: '#/components/schemas/GroupKind'
        allGroupKinds:
          description: >-
            Optional. If True, all valid cluster-scoped resources will be
            restored. Mutually exclusive to any other field in the message.
          type: boolean
        noGroupKinds:
          description: >-
            Optional. If True, no cluster-scoped resources will be restored.
            This has the same restore scope as if the message is not defined.
            Mutually exclusive to any other field in the message.
          type: boolean
    GroupKind:
      id: GroupKind
      description: >-
        This is a direct map to the Kubernetes GroupKind type
        [GroupKind](https://godoc.org/k8s.io/apimachinery/pkg/runtime/schema#GroupKind)
        and is used for identifying specific "types" of resources to restore.
      type: object
      properties:
        resourceGroup:
          description: >-
            Optional. API group string of a Kubernetes resource, e.g.
            "apiextensions.k8s.io", "storage.k8s.io", etc. Note: use empty
            string for core API group.
          type: string
        resourceKind:
          description: >-
            Optional. Kind of a Kubernetes resource, must be in UpperCamelCase
            (PascalCase) and singular form. E.g. "CustomResourceDefinition",
            "StorageClass", etc.
          type: string
    SubstitutionRule:
      id: SubstitutionRule
      description: >-
        A transformation rule to be applied against Kubernetes resources as they
        are selected for restoration from a Backup. A rule contains both
        filtering logic (which resources are subject to substitution) and
        substitution logic.
      type: object
      properties:
        targetNamespaces:
          description: >-
            Optional. (Filtering parameter) Any resource subject to substitution
            must be contained within one of the listed Kubernetes Namespace in
            the Backup. If this field is not provided, no namespace filtering
            will be performed (all resources in all Namespaces, including all
            cluster-scoped resources, will be candidates for substitution). To
            mix cluster-scoped and namespaced resources in the same rule, use an
            empty string ("") as one of the target namespaces.
          type: array
          items:
            type: string
        targetGroupKinds:
          description: >-
            Optional. (Filtering parameter) Any resource subject to substitution
            must belong to one of the listed "types". If this field is not
            provided, no type filtering will be performed (all resources of all
            types matching previous filtering parameters will be candidates for
            substitution).
          type: array
          items:
            $ref: '#/components/schemas/GroupKind'
        targetJsonPath:
          description: >-
            Required. This is a [JSONPath]
            (https://kubernetes.io/docs/reference/kubectl/jsonpath/) expression
            that matches specific fields of candidate resources and it operates
            as both a filtering parameter (resources that are not matched with
            this expression will not be candidates for substitution) as well as
            a field identifier (identifies exactly which fields out of the
            candidate resources will be modified).
          type: string
        originalValuePattern:
          description: >-
            Optional. (Filtering parameter) This is a [regular expression]
            (https://en.wikipedia.org/wiki/Regular_expression) that is compared
            against the fields matched by the target_json_path expression (and
            must also have passed the previous filters). Substitution will not
            be performed against fields whose value does not match this
            expression. If this field is NOT specified, then ALL fields matched
            by the target_json_path expression will undergo substitution. Note
            that an empty (e.g., "", rather than unspecified) value for this
            field will only match empty fields.
          type: string
        newValue:
          description: >-
            Optional. This is the new value to set for any fields that pass the
            filtering and selection criteria. To remove a value from a
            Kubernetes resource, either leave this field unspecified, or set it
            to the empty string ("").
          type: string
    TransformationRule:
      id: TransformationRule
      description: >-
        A transformation rule to be applied against Kubernetes resources as they
        are selected for restoration from a Backup. A rule contains both
        filtering logic (which resources are subject to transform) and
        transformation logic.
      type: object
      properties:
        fieldActions:
          description: >-
            Required. A list of transformation rule actions to take against
            candidate resources. Actions are executed in order defined - this
            order matters, as they could potentially interfere with each other
            and the first operation could affect the outcome of the second
            operation.
          type: array
          items:
            $ref: '#/components/schemas/TransformationRuleAction'
        resourceFilter:
          description: >-
            Optional. This field is used to specify a set of fields that should
            be used to determine which resources in backup should be acted upon
            by the supplied transformation rule actions, and this will ensure
            that only specific resources are affected by transformation rule
            actions.
          $ref: '#/components/schemas/ResourceFilter'
        description:
          description: >-
            Optional. The description is a user specified string description of
            the transformation rule.
          type: string
    TransformationRuleAction:
      id: TransformationRuleAction
      description: >-
        TransformationRuleAction defines a TransformationRule action based on
        the JSON Patch RFC (https://www.rfc-editor.org/rfc/rfc6902)
      type: object
      properties:
        op:
          description: Required. op specifies the operation to perform.
          type: string
          enumDescriptions:
            - Unspecified operation
            - The "remove" operation removes the value at the target location.
            - >-
              The "move" operation removes the value at a specified location and
              adds it to the target location.
            - >-
              The "copy" operation copies the value at a specified location to
              the target location.
            - >-
              The "add" operation performs one of the following functions,
              depending upon what the target location references: 1. If the
              target location specifies an array index, a new value is inserted
              into the array at the specified index. 2. If the target location
              specifies an object member that does not already exist, a new
              member is added to the object. 3. If the target location specifies
              an object member that does exist, that member's value is replaced.
            - >-
              The "test" operation tests that a value at the target location is
              equal to a specified value.
            - >-
              The "replace" operation replaces the value at the target location
              with a new value. The operation object MUST contain a "value"
              member whose content specifies the replacement value.
          enum:
            - OP_UNSPECIFIED
            - REMOVE
            - MOVE
            - COPY
            - ADD
            - TEST
            - REPLACE
        fromPath:
          description: >-
            Optional. A string containing a JSON Pointer value that references
            the location in the target document to move the value from.
          type: string
        path:
          description: >-
            Optional. A string containing a JSON-Pointer value that references a
            location within the target document where the operation is
            performed.
          type: string
        value:
          description: >-
            Optional. A string that specifies the desired value in string format
            to use for transformation.
          type: string
    ResourceFilter:
      id: ResourceFilter
      description: >-
        ResourceFilter specifies matching criteria to limit the scope of a
        change to a specific set of kubernetes resources that are selected for
        restoration from a backup.
      type: object
      properties:
        namespaces:
          description: >-
            Optional. (Filtering parameter) Any resource subject to
            transformation must be contained within one of the listed Kubernetes
            Namespace in the Backup. If this field is not provided, no namespace
            filtering will be performed (all resources in all Namespaces,
            including all cluster-scoped resources, will be candidates for
            transformation).
          type: array
          items:
            type: string
        groupKinds:
          description: >-
            Optional. (Filtering parameter) Any resource subject to
            transformation must belong to one of the listed "types". If this
            field is not provided, no type filtering will be performed (all
            resources of all types matching previous filtering parameters will
            be candidates for transformation).
          type: array
          items:
            $ref: '#/components/schemas/GroupKind'
        jsonPath:
          description: >-
            Optional. This is a [JSONPath]
            (https://github.com/json-path/JsonPath/blob/master/README.md)
            expression that matches specific fields of candidate resources and
            it operates as a filtering parameter (resources that are not matched
            with this expression will not be candidates for transformation).
          type: string
    VolumeDataRestorePolicyBinding:
      id: VolumeDataRestorePolicyBinding
      description: Binds resources in the scope to the given VolumeDataRestorePolicy.
      type: object
      properties:
        policy:
          description: >-
            Required. The VolumeDataRestorePolicy to apply when restoring
            volumes in scope.
          type: string
          enumDescriptions:
            - Unspecified (illegal).
            - >-
              For each PVC to be restored, create a new underlying volume and PV
              from the corresponding VolumeBackup contained within the Backup.
            - >-
              For each PVC to be restored, attempt to reuse the original PV
              contained in the Backup (with its original underlying volume).
              This option is likely only usable when restoring a workload to its
              original cluster.
            - >-
              For each PVC to be restored, create PVC without any particular
              action to restore data. In this case, the normal Kubernetes
              provisioning logic would kick in, and this would likely result in
              either dynamically provisioning blank PVs or binding to statically
              provisioned PVs.
          enum:
            - VOLUME_DATA_RESTORE_POLICY_UNSPECIFIED
            - RESTORE_VOLUME_DATA_FROM_BACKUP
            - REUSE_VOLUME_HANDLE_FROM_BACKUP
            - NO_VOLUME_DATA_RESTORATION
        volumeType:
          description: >-
            The volume type, as determined by the PVC's bound PV, to apply the
            policy to.
          type: string
          enumDescriptions:
            - Default
            - Compute Engine Persistent Disk volume
          enum:
            - VOLUME_TYPE_UNSPECIFIED
            - GCE_PERSISTENT_DISK
    RestoreOrder:
      id: RestoreOrder
      description: >-
        Allows customers to specify dependencies between resources that Backup
        for GKE can use to compute a resasonable restore order.
      type: object
      properties:
        groupKindDependencies:
          description: >-
            Optional. Contains a list of group kind dependency pairs provided by
            the customer, that is used by Backup for GKE to generate a group
            kind restore order.
          type: array
          items:
            $ref: '#/components/schemas/GroupKindDependency'
    GroupKindDependency:
      id: GroupKindDependency
      description: Defines a dependency between two group kinds.
      type: object
      properties:
        satisfying:
          description: >-
            Required. The satisfying group kind must be restored first in order
            to satisfy the dependency.
          $ref: '#/components/schemas/GroupKind'
        requiring:
          description: >-
            Required. The requiring group kind requires that the other group
            kind be restored first.
          $ref: '#/components/schemas/GroupKind'
    ListRestorePlansResponse:
      id: ListRestorePlansResponse
      description: Response message for ListRestorePlans.
      type: object
      properties:
        restorePlans:
          description: The list of RestorePlans matching the given criteria.
          type: array
          items:
            $ref: '#/components/schemas/RestorePlan'
        nextPageToken:
          description: >-
            A token which may be sent as page_token in a subsequent
            `ListRestorePlans` call to retrieve the next page of results. If
            this field is omitted or empty, then there are no more results to
            return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Restore:
      id: Restore
      description: >-
        Represents both a request to Restore some portion of a Backup into a
        target GKE cluster and a record of the restore operation itself.
      type: object
      properties:
        name:
          description: >-
            Output only. The full name of the Restore resource. Format:
            `projects/*/locations/*/restorePlans/*/restores/*`
          readOnly: true
          type: string
        uid:
          description: >-
            Output only. Server generated global unique identifier of
            [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier)
            format.
          readOnly: true
          type: string
        createTime:
          description: Output only. The timestamp when this Restore resource was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. The timestamp when this Restore resource was last
            updated.
          readOnly: true
          type: string
          format: google-datetime
        description:
          description: User specified descriptive string for this Restore.
          type: string
        backup:
          description: >-
            Required. Immutable. A reference to the Backup used as the source
            from which this Restore will restore. Note that this Backup must be
            a sub-resource of the RestorePlan's backup_plan. Format:
            `projects/*/locations/*/backupPlans/*/backups/*`.
          type: string
        cluster:
          description: >-
            Output only. The target cluster into which this Restore will restore
            data. Valid formats: - `projects/*/locations/*/clusters/*` -
            `projects/*/zones/*/clusters/*` Inherited from parent RestorePlan's
            cluster value.
          readOnly: true
          type: string
        restoreConfig:
          description: >-
            Output only. Configuration of the Restore. Inherited from parent
            RestorePlan's restore_config.
          readOnly: true
          $ref: '#/components/schemas/RestoreConfig'
        labels:
          description: A set of custom labels supplied by user.
          type: object
          additionalProperties:
            type: string
        state:
          description: Output only. The current state of the Restore.
          readOnly: true
          type: string
          enumDescriptions:
            - The Restore resource is in the process of being created.
            - >-
              The Restore resource has been created and the associated
              RestoreJob Kubernetes resource has been injected into target
              cluster.
            - >-
              The gkebackup agent in the cluster has begun executing the restore
              operation.
            - >-
              The restore operation has completed successfully. Restored
              workloads may not yet be operational.
            - The restore operation has failed.
            - This Restore resource is in the process of being deleted.
            - >-
              The Kubernetes resources created by this Restore are being
              validated.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - IN_PROGRESS
            - SUCCEEDED
            - FAILED
            - DELETING
            - VALIDATING
        stateReason:
          description: >-
            Output only. Human-readable description of why the Restore is in its
            current state.
          readOnly: true
          type: string
        completeTime:
          description: Output only. Timestamp of when the restore operation completed.
          readOnly: true
          type: string
          format: google-datetime
        resourcesRestoredCount:
          description: >-
            Output only. Number of resources restored during the restore
            execution.
          readOnly: true
          type: integer
          format: int32
        resourcesExcludedCount:
          description: >-
            Output only. Number of resources excluded during the restore
            execution.
          readOnly: true
          type: integer
          format: int32
        resourcesFailedCount:
          description: >-
            Output only. Number of resources that failed to be restored during
            the restore execution.
          readOnly: true
          type: integer
          format: int32
        volumesRestoredCount:
          description: >-
            Output only. Number of volumes restored during the restore
            execution.
          readOnly: true
          type: integer
          format: int32
        etag:
          description: >-
            Output only. `etag` is used for optimistic concurrency control as a
            way to help prevent simultaneous updates of a restore from
            overwriting each other. It is strongly suggested that systems make
            use of the `etag` in the read-modify-write cycle to perform restore
            updates in order to avoid race conditions: An `etag` is returned in
            the response to `GetRestore`, and systems are expected to put that
            etag in the request to `UpdateRestore` or `DeleteRestore` to ensure
            that their change will be applied to the same version of the
            resource.
          readOnly: true
          type: string
        filter:
          description: >-
            Optional. Immutable. Filters resources for `Restore`. If not
            specified, the scope of the restore will remain the same as defined
            in the `RestorePlan`. If this is specified and no resources are
            matched by the `inclusion_filters` or everyting is excluded by the
            `exclusion_filters`, nothing will be restored. This filter can only
            be specified if the value of namespaced_resource_restore_mode is set
            to `MERGE_SKIP_ON_CONFLICT`, `MERGE_REPLACE_VOLUME_ON_CONFLICT` or
            `MERGE_REPLACE_ON_CONFLICT`.
          $ref: '#/components/schemas/Filter'
        volumeDataRestorePolicyOverrides:
          description: >-
            Optional. Immutable. Overrides the volume data restore policies
            selected in the Restore Config for override-scoped resources.
          type: array
          items:
            $ref: '#/components/schemas/VolumeDataRestorePolicyOverride'
    Filter:
      id: Filter
      description: >-
        Defines the filter for `Restore`. This filter can be used to further
        refine the resource selection of the `Restore` beyond the coarse-grained
        scope defined in the `RestorePlan`. `exclusion_filters` take precedence
        over `inclusion_filters`. If a resource matches both `inclusion_filters`
        and `exclusion_filters`, it will not be restored.
      type: object
      properties:
        inclusionFilters:
          description: >-
            Optional. Selects resources for restoration. If specified, only
            resources which match `inclusion_filters` will be selected for
            restoration. A resource will be selected if it matches any
            `ResourceSelector` of the `inclusion_filters`.
          type: array
          items:
            $ref: '#/components/schemas/ResourceSelector'
        exclusionFilters:
          description: >-
            Optional. Excludes resources from restoration. If specified, a
            resource will not be restored if it matches any `ResourceSelector`
            of the `exclusion_filters`.
          type: array
          items:
            $ref: '#/components/schemas/ResourceSelector'
    ResourceSelector:
      id: ResourceSelector
      description: >-
        Defines a selector to identify a single or a group of resources.
        Conditions in the selector are optional, but at least one field should
        be set to a non-empty value. If a condition is not specified, no
        restrictions will be applied on that dimension. If more than one
        condition is specified, a resource will be selected if and only if all
        conditions are met.
      type: object
      properties:
        groupKind:
          description: >-
            Optional. Selects resources using their Kubernetes GroupKinds. If
            specified, only resources of provided GroupKind will be selected.
          $ref: '#/components/schemas/GroupKind'
        name:
          description: >-
            Optional. Selects resources using their resource names. If
            specified, only resources with the provided name will be selected.
          type: string
        namespace:
          description: >-
            Optional. Selects resources using their namespaces. This only
            applies to namespace scoped resources and cannot be used for
            selecting cluster scoped resources. If specified, only resources in
            the provided namespace will be selected. If not specified, the
            filter will apply to both cluster scoped and namespace scoped
            resources (e.g. name or label). The
            [Namespace](https://pkg.go.dev/k8s.io/api/core/v1#Namespace)
            resource itself will be restored if and only if any resources within
            the namespace are restored.
          type: string
        labels:
          description: >-
            Optional. Selects resources using Kubernetes
            [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
            If specified, a resource will be selected if and only if the
            resource has all of the provided labels and all the label values
            match.
          type: object
          additionalProperties:
            type: string
    VolumeDataRestorePolicyOverride:
      id: VolumeDataRestorePolicyOverride
      description: >-
        Defines an override to apply a VolumeDataRestorePolicy for scoped
        resources.
      type: object
      properties:
        policy:
          description: >-
            Required. The VolumeDataRestorePolicy to apply when restoring
            volumes in scope.
          type: string
          enumDescriptions:
            - Unspecified (illegal).
            - >-
              For each PVC to be restored, create a new underlying volume and PV
              from the corresponding VolumeBackup contained within the Backup.
            - >-
              For each PVC to be restored, attempt to reuse the original PV
              contained in the Backup (with its original underlying volume).
              This option is likely only usable when restoring a workload to its
              original cluster.
            - >-
              For each PVC to be restored, create PVC without any particular
              action to restore data. In this case, the normal Kubernetes
              provisioning logic would kick in, and this would likely result in
              either dynamically provisioning blank PVs or binding to statically
              provisioned PVs.
          enum:
            - VOLUME_DATA_RESTORE_POLICY_UNSPECIFIED
            - RESTORE_VOLUME_DATA_FROM_BACKUP
            - REUSE_VOLUME_HANDLE_FROM_BACKUP
            - NO_VOLUME_DATA_RESTORATION
        selectedPvcs:
          description: A list of PVCs to apply the policy override to.
          $ref: '#/components/schemas/NamespacedNames'
    ListRestoresResponse:
      id: ListRestoresResponse
      description: Response message for ListRestores.
      type: object
      properties:
        restores:
          description: The list of Restores matching the given criteria.
          type: array
          items:
            $ref: '#/components/schemas/Restore'
        nextPageToken:
          description: >-
            A token which may be sent as page_token in a subsequent
            `ListRestores` call to retrieve the next page of results. If this
            field is omitted or empty, then there are no more results to return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    ListVolumeRestoresResponse:
      id: ListVolumeRestoresResponse
      description: Response message for ListVolumeRestores.
      type: object
      properties:
        volumeRestores:
          description: The list of VolumeRestores matching the given criteria.
          type: array
          items:
            $ref: '#/components/schemas/VolumeRestore'
        nextPageToken:
          description: >-
            A token which may be sent as page_token in a subsequent
            `ListVolumeRestores` call to retrieve the next page of results. If
            this field is omitted or empty, then there are no more results to
            return.
          type: string
    VolumeRestore:
      id: VolumeRestore
      description: Represents the operation of restoring a volume from a VolumeBackup.
      type: object
      properties:
        name:
          description: >-
            Output only. Full name of the VolumeRestore resource. Format:
            `projects/*/locations/*/restorePlans/*/restores/*/volumeRestores/*`
          readOnly: true
          type: string
        uid:
          description: >-
            Output only. Server generated global unique identifier of
            [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier)
            format.
          readOnly: true
          type: string
        createTime:
          description: >-
            Output only. The timestamp when this VolumeRestore resource was
            created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. The timestamp when this VolumeRestore resource was last
            updated.
          readOnly: true
          type: string
          format: google-datetime
        volumeBackup:
          description: >-
            Output only. The full name of the VolumeBackup from which the volume
            will be restored. Format:
            `projects/*/locations/*/backupPlans/*/backups/*/volumeBackups/*`.
          readOnly: true
          type: string
        targetPvc:
          description: >-
            Output only. The reference to the target Kubernetes PVC to be
            restored.
          readOnly: true
          $ref: '#/components/schemas/NamespacedName'
        volumeHandle:
          description: >-
            Output only. A storage system-specific opaque handler to the
            underlying volume created for the target PVC from the volume backup.
          readOnly: true
          type: string
        volumeType:
          description: Output only. The type of volume provisioned
          readOnly: true
          type: string
          enumDescriptions:
            - Default
            - Compute Engine Persistent Disk volume
          enum:
            - VOLUME_TYPE_UNSPECIFIED
            - GCE_PERSISTENT_DISK
        completeTime:
          description: >-
            Output only. The timestamp when the associated underlying volume
            restoration completed.
          readOnly: true
          type: string
          format: google-datetime
        state:
          description: Output only. The current state of this VolumeRestore.
          readOnly: true
          type: string
          enumDescriptions:
            - This is an illegal state and should not be encountered.
            - >-
              A volume for the restore was identified and restore process is
              about to start.
            - The volume is currently being restored.
            - The volume has been successfully restored.
            - The volume restoration process failed.
            - This VolumeRestore resource is in the process of being deleted.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - RESTORING
            - SUCCEEDED
            - FAILED
            - DELETING
        stateMessage:
          description: >-
            Output only. A human readable message explaining why the
            VolumeRestore is in its current state.
          readOnly: true
          type: string
        etag:
          description: >-
            Output only. `etag` is used for optimistic concurrency control as a
            way to help prevent simultaneous updates of a volume restore from
            overwriting each other. It is strongly suggested that systems make
            use of the `etag` in the read-modify-write cycle to perform volume
            restore updates in order to avoid race conditions.
          readOnly: true
          type: string
    GetBackupIndexDownloadUrlResponse:
      id: GetBackupIndexDownloadUrlResponse
      description: Response message for GetBackupIndexDownloadUrl.
      type: object
      properties:
        signedUrl:
          type: string
    ListLocationsResponse:
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Location:
      id: Location
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
          additionalProperties:
            type: string
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    SetIamPolicyRequest:
      id: SetIamPolicyRequest
      description: Request message for `SetIamPolicy` method.
      type: object
      properties:
        policy:
          description: >-
            REQUIRED: The complete policy to be applied to the `resource`. The
            size of the policy is limited to a few 10s of KB. An empty policy is
            a valid policy but certain Google Cloud services (such as Projects)
            might reject them.
          $ref: '#/components/schemas/Policy'
        updateMask:
          description: >-
            OPTIONAL: A FieldMask specifying which fields of the policy to
            modify. Only the fields in the mask will be modified. If no mask is
            provided, the following default mask is used: `paths: "bindings,
            etag"`
          type: string
          format: google-fieldmask
    Policy:
      id: Policy
      description: >-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources. A `Policy` is a collection of
        `bindings`. A `binding` binds one or more `members`, or principals, to a
        single `role`. Principals can be user accounts, service accounts, Google
        groups, and domains (such as G Suite). A `role` is a named list of
        permissions; each `role` can be an IAM predefined role or a user-created
        custom role. For some types of Google Cloud resources, a `binding` can
        also specify a `condition`, which is a logical expression that allows
        access to a resource only if the expression evaluates to `true`. A
        condition can add constraints based on attributes of the request, the
        resource, or both. To learn which resources support conditions in their
        IAM policies, see the [IAM
        documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        **JSON example:** ``` { "bindings": [ { "role":
        "roles/resourcemanager.organizationAdmin", "members": [
        "user:mike@example.com", "group:admins@example.com",
        "domain:google.com",
        "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, {
        "role": "roles/resourcemanager.organizationViewer", "members": [
        "user:eve@example.com" ], "condition": { "title": "expirable access",
        "description": "Does not grant access after Sep 2020", "expression":
        "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
        "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: -
        members: - user:mike@example.com - group:admins@example.com -
        domain:google.com -
        serviceAccount:my-project-id@appspot.gserviceaccount.com role:
        roles/resourcemanager.organizationAdmin - members: -
        user:eve@example.com role: roles/resourcemanager.organizationViewer
        condition: title: expirable access description: Does not grant access
        after Sep 2020 expression: request.time <
        timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ```
        For a description of IAM and its features, see the [IAM
        documentation](https://cloud.google.com/iam/docs/).
      type: object
      properties:
        version:
          description: >-
            Specifies the format of the policy. Valid values are `0`, `1`, and
            `3`. Requests that specify an invalid value are rejected. Any
            operation that affects conditional role bindings must specify
            version `3`. This requirement applies to the following operations: *
            Getting a policy that includes a conditional role binding * Adding a
            conditional role binding to a policy * Changing a conditional role
            binding in a policy * Removing any role binding, with or without a
            condition, from a policy that includes conditions **Important:** If
            you use IAM Conditions, you must include the `etag` field whenever
            you call `setIamPolicy`. If you omit this field, then IAM allows you
            to overwrite a version `3` policy with a version `1` policy, and all
            of the conditions in the version `3` policy are lost. If a policy
            does not include any conditions, operations on that policy may
            specify any valid version or leave the field unset. To learn which
            resources support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          type: integer
          format: int32
        bindings:
          description: >-
            Associates a list of `members`, or principals, with a `role`.
            Optionally, may specify a `condition` that determines how and when
            the `bindings` are applied. Each of the `bindings` must contain at
            least one principal. The `bindings` in a `Policy` can refer to up to
            1,500 principals; up to 250 of these principals can be Google
            groups. Each occurrence of a principal counts towards these limits.
            For example, if the `bindings` grant 50 different roles to
            `user:alice@example.com`, and not to any other principal, then you
            can add another 1,450 principals to the `bindings` in the `Policy`.
          type: array
          items:
            $ref: '#/components/schemas/Binding'
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          type: array
          items:
            $ref: '#/components/schemas/AuditConfig'
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy. **Important:** If you use
            IAM Conditions, you must include the `etag` field whenever you call
            `setIamPolicy`. If you omit this field, then IAM allows you to
            overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.
          type: string
          format: byte
    Binding:
      id: Binding
      description: Associates `members`, or principals, with a `role`.
      type: object
      properties:
        role:
          description: >-
            Role that is assigned to the list of `members`, or principals. For
            example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an
            overview of the IAM roles and permissions, see the [IAM
            documentation](https://cloud.google.com/iam/docs/roles-overview).
            For a list of the available pre-defined roles, see
            [here](https://cloud.google.com/iam/docs/understanding-roles).
          type: string
        members:
          description: >-
            Specifies the principals requesting access for a Google Cloud
            resource. `members` can have the following values: * `allUsers`: A
            special identifier that represents anyone who is on the internet;
            with or without a Google account. * `allAuthenticatedUsers`: A
            special identifier that represents anyone who is authenticated with
            a Google account or a service account. Does not include identities
            that come from external identity providers (IdPs) through identity
            federation. * `user:{emailid}`: An email address that represents a
            specific Google account. For example, `alice@example.com` . *
            `serviceAccount:{emailid}`: An email address that represents a
            Google service account. For example,
            `my-other-app@appspot.gserviceaccount.com`. *
            `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
            An identifier for a [Kubernetes service
            account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
            For example,
            `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
            `group:{emailid}`: An email address that represents a Google group.
            For example, `admins@example.com`. * `domain:{domain}`: The G Suite
            domain (primary) that represents all the users of that domain. For
            example, `google.com` or `example.com`. *
            `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workforce identity pool. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`:
            All workforce identities in a group. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All workforce identities with a specific attribute value. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`:
            All identities in a workforce identity pool. *
            `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workload identity pool. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`:
            A workload identity pool group. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All identities in a workload identity pool with a certain attribute.
            *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`:
            All identities in a workload identity pool. *
            `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus
            unique identifier) representing a user that has been recently
            deleted. For example, `alice@example.com?uid=123456789012345678901`.
            If the user is recovered, this value reverts to `user:{emailid}` and
            the recovered user retains the role in the binding. *
            `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
            (plus unique identifier) representing a service account that has
            been recently deleted. For example,
            `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
            If the service account is undeleted, this value reverts to
            `serviceAccount:{emailid}` and the undeleted service account retains
            the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:
            An email address (plus unique identifier) representing a Google
            group that has been recently deleted. For example,
            `admins@example.com?uid=123456789012345678901`. If the group is
            recovered, this value reverts to `group:{emailid}` and the recovered
            group retains the role in the binding. *
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            Deleted single identity in a workforce identity pool. For example,
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
          type: array
          items:
            type: string
        condition:
          description: >-
            The condition that is associated with this binding. If the condition
            evaluates to `true`, then this binding applies to the current
            request. If the condition evaluates to `false`, then this binding
            does not apply to the current request. However, a different role
            binding might grant the same role to one or more of the principals
            in this binding. To learn which resources support conditions in
            their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          $ref: '#/components/schemas/Expr'
    Expr:
      id: Expr
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      type: object
      properties:
        expression:
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
          type: string
        title:
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
        description:
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
          type: string
        location:
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
          type: string
    AuditConfig:
      id: AuditConfig
      description: >-
        Specifies the audit configuration for a service. The configuration
        determines which permission types are logged, and what identities, if
        any, are exempted from logging. An AuditConfig must have one or more
        AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
        specific service, the union of the two AuditConfigs is used for that
        service: the log_types specified in each AuditConfig are enabled, and
        the exempted_members in each AuditLogConfig are exempted. Example Policy
        with multiple AuditConfigs: { "audit_configs": [ { "service":
        "allServices", "audit_log_configs": [ { "log_type": "DATA_READ",
        "exempted_members": [ "user:jose@example.com" ] }, { "log_type":
        "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service":
        "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type":
        "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [
        "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy
        enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts
        `jose@example.com` from DATA_READ logging, and `aliya@example.com` from
        DATA_WRITE logging.
      type: object
      properties:
        service:
          description: >-
            Specifies a service that will be enabled for audit logging. For
            example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
          type: string
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          type: array
          items:
            $ref: '#/components/schemas/AuditLogConfig'
    AuditLogConfig:
      id: AuditLogConfig
      description: >-
        Provides the configuration for logging a type of permissions. Example: {
        "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
        "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This
        enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        jose@example.com from DATA_READ logging.
      type: object
      properties:
        logType:
          description: The log type that this config enables.
          type: string
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
        exemptedMembers:
          description: >-
            Specifies the identities that do not cause logging for this type of
            permission. Follows the same format of Binding.members.
          type: array
          items:
            type: string
    TestIamPermissionsRequest:
      id: TestIamPermissionsRequest
      description: Request message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          description: >-
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as `*` or `storage.*`) are not allowed. For more
            information see [IAM
            Overview](https://cloud.google.com/iam/docs/overview#permissions).
          type: array
          items:
            type: string
    TestIamPermissionsResponse:
      id: TestIamPermissionsResponse
      description: Response message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          description: >-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          type: array
          items:
            type: string
    OperationMetadata:
      id: OperationMetadata
      description: Represents the metadata of the long-running operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        target:
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        requestedCancellation:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have successfully been cancelled
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    locations:
      id: google.gkebackup.locations
      name: locations
      title: Locations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: google.gkebackup.operations
      name: operations
      title: Operations
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    backup_plans:
      id: google.gkebackup.backup_plans
      name: backup_plans
      title: Backup_plans
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.backupPlans
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backup_plans/methods/get'
          - $ref: '#/components/x-stackQL-resources/backup_plans/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/backup_plans/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/backup_plans/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/backup_plans/methods/delete'
    backup_plans_iam_policies:
      id: google.gkebackup.backup_plans_iam_policies
      name: backup_plans_iam_policies
      title: Backup_plans_iam_policies
      methods:
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/backup_plans_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/backup_plans_iam_policies/methods/set_iam_policy
        delete: []
    backups:
      id: google.gkebackup.backups
      name: backups
      title: Backups
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}~1backups/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}~1backups/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.backups
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}~1backups~1{backupsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}~1backups~1{backupsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}~1backups~1{backupsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backups/methods/get'
          - $ref: '#/components/x-stackQL-resources/backups/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/backups/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/backups/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/backups/methods/delete'
    backups_backup_index_download_url:
      id: google.gkebackup.backups_backup_index_download_url
      name: backups_backup_index_download_url
      title: Backups_backup_index_download_url
      methods:
        get_backup_index_download_url:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}~1backups~1{backupsId}:getBackupIndexDownloadUrl/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/backups_backup_index_download_url/methods/get_backup_index_download_url
        insert: []
        update: []
        replace: []
        delete: []
    backups_iam_policies:
      id: google.gkebackup.backups_iam_policies
      name: backups_iam_policies
      title: Backups_iam_policies
      methods:
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}~1backups~1{backupsId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}~1backups~1{backupsId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}~1backups~1{backupsId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/backups_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/backups_iam_policies/methods/set_iam_policy
        delete: []
    volume_backups:
      id: google.gkebackup.volume_backups
      name: volume_backups
      title: Volume_backups
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}~1backups~1{backupsId}~1volumeBackups/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.volumeBackups
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}~1backups~1{backupsId}~1volumeBackups~1{volumeBackupsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/volume_backups/methods/get'
          - $ref: '#/components/x-stackQL-resources/volume_backups/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    volume_backups_iam_policies:
      id: google.gkebackup.volume_backups_iam_policies
      name: volume_backups_iam_policies
      title: Volume_backups_iam_policies
      methods:
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}~1backups~1{backupsId}~1volumeBackups~1{volumeBackupsId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}~1backups~1{backupsId}~1volumeBackups~1{volumeBackupsId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backupPlans~1{backupPlansId}~1backups~1{backupsId}~1volumeBackups~1{volumeBackupsId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/volume_backups_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/volume_backups_iam_policies/methods/set_iam_policy
        delete: []
    restore_plans:
      id: google.gkebackup.restore_plans
      name: restore_plans
      title: Restore_plans
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.restorePlans
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/restore_plans/methods/get'
          - $ref: '#/components/x-stackQL-resources/restore_plans/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/restore_plans/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/restore_plans/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/restore_plans/methods/delete'
    restore_plans_iam_policies:
      id: google.gkebackup.restore_plans_iam_policies
      name: restore_plans_iam_policies
      title: Restore_plans_iam_policies
      methods:
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/restore_plans_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/restore_plans_iam_policies/methods/set_iam_policy
        delete: []
    restores:
      id: google.gkebackup.restores
      name: restores
      title: Restores
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}~1restores/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}~1restores/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.restores
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}~1restores~1{restoresId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}~1restores~1{restoresId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}~1restores~1{restoresId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/restores/methods/get'
          - $ref: '#/components/x-stackQL-resources/restores/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/restores/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/restores/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/restores/methods/delete'
    restores_iam_policies:
      id: google.gkebackup.restores_iam_policies
      name: restores_iam_policies
      title: Restores_iam_policies
      methods:
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}~1restores~1{restoresId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}~1restores~1{restoresId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}~1restores~1{restoresId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/restores_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/restores_iam_policies/methods/set_iam_policy
        delete: []
    volume_restores:
      id: google.gkebackup.volume_restores
      name: volume_restores
      title: Volume_restores
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}~1restores~1{restoresId}~1volumeRestores/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.volumeRestores
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}~1restores~1{restoresId}~1volumeRestores~1{volumeRestoresId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/volume_restores/methods/get'
          - $ref: '#/components/x-stackQL-resources/volume_restores/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    volume_restores_iam_policies:
      id: google.gkebackup.volume_restores_iam_policies
      name: volume_restores_iam_policies
      title: Volume_restores_iam_policies
      methods:
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}~1restores~1{restoresId}~1volumeRestores~1{volumeRestoresId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}~1restores~1{restoresId}~1volumeRestores~1{volumeRestoresId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1restorePlans~1{restorePlansId}~1restores~1{restoresId}~1volumeRestores~1{volumeRestoresId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/volume_restores_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/volume_restores_iam_policies/methods/set_iam_policy
        delete: []
paths:
  /v1/projects/{projectsId}/locations:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Lists information about the supported locations for this service.
      operationId: gkebackup.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: gkebackup.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: gkebackup.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: gkebackup.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: gkebackup.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: gkebackup.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleLongrunningCancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupPlans:
    parameters: *ref_1
    post:
      description: Creates a new BackupPlan in a given location.
      operationId: gkebackup.projects.locations.backupPlans.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupPlan'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: backupPlanId
          schema:
            type: string
    get:
      description: Lists BackupPlans in a given location.
      operationId: gkebackup.projects.locations.backupPlans.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupPlansResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}:
    parameters: *ref_1
    get:
      description: Retrieve the details of a single BackupPlan.
      operationId: gkebackup.projects.locations.backupPlans.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupPlan'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
    patch:
      description: Update a BackupPlan.
      operationId: gkebackup.projects.locations.backupPlans.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupPlan'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes an existing BackupPlan.
      operationId: gkebackup.projects.locations.backupPlans.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: gkebackup.projects.locations.backupPlans.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: gkebackup.projects.locations.backupPlans.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: gkebackup.projects.locations.backupPlans.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}/backups:
    parameters: *ref_1
    post:
      description: Creates a Backup for the given BackupPlan.
      operationId: gkebackup.projects.locations.backupPlans.backups.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Backup'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
        - in: query
          name: backupId
          schema:
            type: string
    get:
      description: Lists the Backups for a given BackupPlan.
      operationId: gkebackup.projects.locations.backupPlans.backups.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}/backups/{backupsId}:
    parameters: *ref_1
    get:
      description: Retrieve the details of a single Backup.
      operationId: gkebackup.projects.locations.backupPlans.backups.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
    patch:
      description: Update a Backup.
      operationId: gkebackup.projects.locations.backupPlans.backups.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Backup'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes an existing Backup.
      operationId: gkebackup.projects.locations.backupPlans.backups.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}/backups/{backupsId}:getBackupIndexDownloadUrl:
    parameters: *ref_1
    get:
      description: Retrieve the link to the backupIndex.
      operationId: >-
        gkebackup.projects.locations.backupPlans.backups.getBackupIndexDownloadUrl
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackupIndexDownloadUrlResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}/backups/{backupsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: gkebackup.projects.locations.backupPlans.backups.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}/backups/{backupsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: gkebackup.projects.locations.backupPlans.backups.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}/backups/{backupsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: gkebackup.projects.locations.backupPlans.backups.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}/backups/{backupsId}/volumeBackups:
    parameters: *ref_1
    get:
      description: Lists the VolumeBackups for a given Backup.
      operationId: gkebackup.projects.locations.backupPlans.backups.volumeBackups.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVolumeBackupsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}/backups/{backupsId}/volumeBackups/{volumeBackupsId}:
    parameters: *ref_1
    get:
      description: Retrieve the details of a single VolumeBackup.
      operationId: gkebackup.projects.locations.backupPlans.backups.volumeBackups.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeBackup'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
        - in: path
          name: volumeBackupsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}/backups/{backupsId}/volumeBackups/{volumeBackupsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: >-
        gkebackup.projects.locations.backupPlans.backups.volumeBackups.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
        - in: path
          name: volumeBackupsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}/backups/{backupsId}/volumeBackups/{volumeBackupsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: >-
        gkebackup.projects.locations.backupPlans.backups.volumeBackups.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
        - in: path
          name: volumeBackupsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}/backups/{backupsId}/volumeBackups/{volumeBackupsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: >-
        gkebackup.projects.locations.backupPlans.backups.volumeBackups.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backupPlansId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
        - in: path
          name: volumeBackupsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/restorePlans:
    parameters: *ref_1
    post:
      description: Creates a new RestorePlan in a given location.
      operationId: gkebackup.projects.locations.restorePlans.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestorePlan'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: restorePlanId
          schema:
            type: string
    get:
      description: Lists RestorePlans in a given location.
      operationId: gkebackup.projects.locations.restorePlans.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRestorePlansResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}:
    parameters: *ref_1
    get:
      description: Retrieve the details of a single RestorePlan.
      operationId: gkebackup.projects.locations.restorePlans.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestorePlan'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
    patch:
      description: Update a RestorePlan.
      operationId: gkebackup.projects.locations.restorePlans.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestorePlan'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes an existing RestorePlan.
      operationId: gkebackup.projects.locations.restorePlans.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: gkebackup.projects.locations.restorePlans.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: gkebackup.projects.locations.restorePlans.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: gkebackup.projects.locations.restorePlans.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}/restores:
    parameters: *ref_1
    post:
      description: Creates a new Restore for the given RestorePlan.
      operationId: gkebackup.projects.locations.restorePlans.restores.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Restore'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
        - in: query
          name: restoreId
          schema:
            type: string
    get:
      description: Lists the Restores for a given RestorePlan.
      operationId: gkebackup.projects.locations.restorePlans.restores.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRestoresResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}/restores/{restoresId}:
    parameters: *ref_1
    get:
      description: Retrieves the details of a single Restore.
      operationId: gkebackup.projects.locations.restorePlans.restores.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restore'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
        - in: path
          name: restoresId
          required: true
          schema:
            type: string
    patch:
      description: Update a Restore.
      operationId: gkebackup.projects.locations.restorePlans.restores.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Restore'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
        - in: path
          name: restoresId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes an existing Restore.
      operationId: gkebackup.projects.locations.restorePlans.restores.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
        - in: path
          name: restoresId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}/restores/{restoresId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: gkebackup.projects.locations.restorePlans.restores.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
        - in: path
          name: restoresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}/restores/{restoresId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: gkebackup.projects.locations.restorePlans.restores.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
        - in: path
          name: restoresId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}/restores/{restoresId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: gkebackup.projects.locations.restorePlans.restores.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
        - in: path
          name: restoresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}/restores/{restoresId}/volumeRestores:
    parameters: *ref_1
    get:
      description: Lists the VolumeRestores for a given Restore.
      operationId: gkebackup.projects.locations.restorePlans.restores.volumeRestores.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVolumeRestoresResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
        - in: path
          name: restoresId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}/restores/{restoresId}/volumeRestores/{volumeRestoresId}:
    parameters: *ref_1
    get:
      description: Retrieve the details of a single VolumeRestore.
      operationId: gkebackup.projects.locations.restorePlans.restores.volumeRestores.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeRestore'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
        - in: path
          name: restoresId
          required: true
          schema:
            type: string
        - in: path
          name: volumeRestoresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}/restores/{restoresId}/volumeRestores/{volumeRestoresId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: >-
        gkebackup.projects.locations.restorePlans.restores.volumeRestores.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
        - in: path
          name: restoresId
          required: true
          schema:
            type: string
        - in: path
          name: volumeRestoresId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}/restores/{restoresId}/volumeRestores/{volumeRestoresId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: >-
        gkebackup.projects.locations.restorePlans.restores.volumeRestores.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
        - in: path
          name: restoresId
          required: true
          schema:
            type: string
        - in: path
          name: volumeRestoresId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}/restores/{restoresId}/volumeRestores/{volumeRestoresId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: >-
        gkebackup.projects.locations.restorePlans.restores.volumeRestores.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: restorePlansId
          required: true
          schema:
            type: string
        - in: path
          name: restoresId
          required: true
          schema:
            type: string
        - in: path
          name: volumeRestoresId
          required: true
          schema:
            type: string
