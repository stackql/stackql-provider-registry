components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        enum:
          - '1'
          - '2'
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    AuditConfig:
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.'
      id: AuditConfig
      properties:
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          items:
            $ref: '#/components/schemas/AuditLogConfig'
          type: array
        service:
          description: Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
          type: string
      type: object
    AuditLogConfig:
      description: 'Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables ''DATA_READ'' and ''DATA_WRITE'' logging, while exempting jose@example.com from DATA_READ logging.'
      id: AuditLogConfig
      properties:
        exemptedMembers:
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
          items:
            type: string
          type: array
        ignoreChildExemptions:
          type: boolean
        logType:
          description: The log type that this config enables.
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          type: string
      type: object
    AuthorizationLoggingOptions:
      description: Authorization-related information used by Cloud Audit Logging.
      id: AuthorizationLoggingOptions
      properties:
        permissionType:
          description: The type of the permission that was checked.
          enum:
            - PERMISSION_TYPE_UNSPECIFIED
            - ADMIN_READ
            - ADMIN_WRITE
            - DATA_READ
            - DATA_WRITE
          enumDescriptions:
            - Default. Should not be used.
            - A read of admin (meta) data.
            - A write of admin (meta) data.
            - A read of standard data.
            - A write of standard data.
          type: string
      type: object
    Binding:
      description: Associates `members`, or principals, with a `role`.
      id: Binding
      properties:
        bindingId:
          type: string
        condition:
          $ref: '#/components/schemas/Expr'
          description: The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        members:
          description: 'Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. '
          items:
            type: string
          type: array
        role:
          description: Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
          type: string
      type: object
    CancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      id: CancelOperationRequest
      properties: {}
      type: object
    CloudAuditOptions:
      description: Write a Cloud Audit log
      id: CloudAuditOptions
      properties:
        authorizationLoggingOptions:
          $ref: '#/components/schemas/AuthorizationLoggingOptions'
          description: Information used by the Cloud Audit Logging pipeline.
        logName:
          description: The log_name to populate in the Cloud Audit Record.
          enum:
            - UNSPECIFIED_LOG_NAME
            - ADMIN_ACTIVITY
            - DATA_ACCESS
          enumDescriptions:
            - Default. Should not be used.
            - Corresponds to "cloudaudit.googleapis.com/activity"
            - Corresponds to "cloudaudit.googleapis.com/data_access"
          type: string
      type: object
    Condition:
      description: A condition to be met.
      id: Condition
      properties:
        iam:
          description: Trusted attributes supplied by the IAM system.
          enum:
            - NO_ATTR
            - AUTHORITY
            - ATTRIBUTION
            - SECURITY_REALM
            - APPROVER
            - JUSTIFICATION_TYPE
            - CREDENTIALS_TYPE
            - CREDS_ASSERTION
          enumDescriptions:
            - Default non-attribute.
            - Either principal or (if present) authority selector.
            - The principal (even if an authority selector is present), which must only be used for attribution, not authorization.
            - 'Any of the security realms in the IAMContext (go/security-realms). When used with IN, the condition indicates "any of the request''s realms match one of the given values; with NOT_IN, "none of the realms match any of the given values". Note that a value can be: - ''self:campus'' (i.e., clients that are in the same campus) - ''self:metro'' (i.e., clients that are in the same metro) - ''self:cloud-region'' (i.e., allow connections from clients that are in the same cloud region) - ''self:prod-region'' (i.e., allow connections from clients that are in the same prod region) - ''guardians'' (i.e., allow connections from its guardian realms. See go/security-realms-glossary#guardian for more information.) - ''self'' [DEPRECATED] (i.e., allow connections from clients that are in the same security realm, which is currently but not guaranteed to be campus-sized) - a realm (e.g., ''campus-abc'') - a realm group (e.g., ''realms-for-borg-cell-xx'', see: go/realm-groups) A match is determined by a realm group membership check performed by a RealmAclRep object (go/realm-acl-howto). It is not permitted to grant access based on the *absence* of a realm, so realm conditions can only be used in a "positive" context (e.g., ALLOW/IN or DENY/NOT_IN).'
            - An approver (distinct from the requester) that has authorized this request. When used with IN, the condition indicates that one of the approvers associated with the request matches the specified principal, or is a member of the specified group. Approvers can only grant additional access, and are thus only used in a strictly positive context (e.g. ALLOW/IN or DENY/NOT_IN).
            - What types of justifications have been supplied with this request. String values should match enum names from security.credentials.JustificationType, e.g. "MANUAL_STRING". It is not permitted to grant access based on the *absence* of a justification, so justification conditions can only be used in a "positive" context (e.g., ALLOW/IN or DENY/NOT_IN). Multiple justifications, e.g., a Buganizer ID and a manually-entered reason, are normal and supported.
            - What type of credentials have been supplied with this request. String values should match enum names from security_loas_l2.CredentialsType - currently, only CREDS_TYPE_EMERGENCY is supported. It is not permitted to grant access based on the *absence* of a credentials type, so the conditions can only be used in a "positive" context (e.g., ALLOW/IN or DENY/NOT_IN).
            - EXPERIMENTAL -- DO NOT USE. The conditions can only be used in a "positive" context (e.g., ALLOW/IN or DENY/NOT_IN).
          type: string
        op:
          description: An operator to apply the subject with.
          enum:
            - NO_OP
            - EQUALS
            - NOT_EQUALS
            - IN
            - NOT_IN
            - DISCHARGED
          enumDescriptions:
            - Default no-op.
            - DEPRECATED. Use IN instead.
            - DEPRECATED. Use NOT_IN instead.
            - The condition is true if the subject (or any element of it if it is a set) matches any of the supplied values.
            - The condition is true if the subject (or every element of it if it is a set) matches none of the supplied values.
            - Subject is discharged
          type: string
        svc:
          description: Trusted attributes discharged by the service.
          type: string
        sys:
          description: Trusted attributes supplied by any service that owns resources and uses the IAM system for access control.
          enum:
            - NO_ATTR
            - REGION
            - SERVICE
            - NAME
            - IP
          enumDescriptions:
            - Default non-attribute type
            - Region of the resource
            - Service name
            - Resource name
            - IP address of the caller
          type: string
        values:
          description: The objects of the condition.
          items:
            type: string
          type: array
      type: object
    CounterOptions:
      description: 'Increment a streamz counter with the specified metric and field names. Metric names should start with a ''/'', generally be lowercase-only, and end in "_count". Field names should not contain an initial slash. The actual exported metric names will have "/iam/policy" prepended. Field names correspond to IAM request parameters and field values are their respective values. Supported field names: - "authority", which is "[token]" if IAMContext.token is present, otherwise the value of IAMContext.authority_selector if present, and otherwise a representation of IAMContext.principal; or - "iam_principal", a representation of IAMContext.principal even if a token or authority selector is present; or - "" (empty string), resulting in a counter with no fields. Examples: counter { metric: "/debug_access_count" field: "iam_principal" } ==> increment counter /iam/policy/debug_access_count {iam_principal=[value of IAMContext.principal]}'
      id: CounterOptions
      properties:
        customFields:
          description: Custom fields.
          items:
            $ref: '#/components/schemas/CustomField'
          type: array
        field:
          description: The field value to attribute.
          type: string
        metric:
          description: The metric to update.
          type: string
      type: object
    CustomField:
      description: 'Custom fields. These can be used to create a counter with arbitrary field/value pairs. See: go/rpcsp-custom-fields.'
      id: CustomField
      properties:
        name:
          description: Name is the field name.
          type: string
        value:
          description: Value is the field value. It is important that in contrast to the CounterOptions.field, the value here is a constant that is not derived from the IAMContext.
          type: string
      type: object
    DataAccessOptions:
      description: Write a Data Access (Gin) log
      id: DataAccessOptions
      properties:
        logMode:
          enum:
            - LOG_MODE_UNSPECIFIED
            - LOG_FAIL_CLOSED
          enumDescriptions:
            - Client is not required to write a partial Gin log immediately after the authorization check. If client chooses to write one and it fails, client may either fail open (allow the operation to continue) or fail closed (handle as a DENY outcome).
            - The application's operation in the context of which this authorization check is being made may only be performed if it is successfully logged to Gin. For instance, the authorization library may satisfy this obligation by emitting a partial log entry at authorization check time and only returning ALLOW to the application if it succeeds. If a matching Rule has this directive, but the client has not indicated that it will honor such requirements, then the IAM check will result in authorization failure by setting CheckPolicyResponse.success=false.
          type: string
      type: object
    DeployedClusterState:
      description: The game server cluster changes made by the game server deployment.
      id: DeployedClusterState
      properties:
        cluster:
          description: The name of the cluster.
          type: string
        fleetDetails:
          description: The details about the Agones fleets and autoscalers created in the game server cluster.
          items:
            $ref: '#/components/schemas/DeployedFleetDetails'
          type: array
      type: object
    DeployedFleet:
      description: Agones fleet specification and details.
      id: DeployedFleet
      properties:
        fleet:
          description: The name of the Agones fleet.
          type: string
        fleetSpec:
          description: The fleet spec retrieved from the Agones fleet.
          type: string
        specSource:
          $ref: '#/components/schemas/SpecSource'
          description: The source spec that is used to create the Agones fleet. The GameServerConfig resource may no longer exist in the system.
        status:
          $ref: '#/components/schemas/DeployedFleetStatus'
          description: The current status of the Agones fleet. Includes count of game servers in various states.
      type: object
    DeployedFleetAutoscaler:
      description: Details about the Agones autoscaler.
      id: DeployedFleetAutoscaler
      properties:
        autoscaler:
          description: The name of the Agones autoscaler.
          type: string
        fleetAutoscalerSpec:
          description: The autoscaler spec retrieved from Agones.
          type: string
        specSource:
          $ref: '#/components/schemas/SpecSource'
          description: The source spec that is used to create the autoscaler. The GameServerConfig resource may no longer exist in the system.
      type: object
    DeployedFleetDetails:
      description: Details of the deployed Agones fleet.
      id: DeployedFleetDetails
      properties:
        deployedAutoscaler:
          $ref: '#/components/schemas/DeployedFleetAutoscaler'
          description: Information about the Agones autoscaler for that fleet.
        deployedFleet:
          $ref: '#/components/schemas/DeployedFleet'
          description: Information about the Agones fleet.
      type: object
    DeployedFleetStatus:
      description: DeployedFleetStatus has details about the Agones fleets, such as how many are running, how many are allocated, and so on.
      id: DeployedFleetStatus
      properties:
        allocatedReplicas:
          description: The number of GameServer replicas in the ALLOCATED state in this fleet.
          format: int64
          type: string
        readyReplicas:
          description: The number of GameServer replicas in the READY state in this fleet.
          format: int64
          type: string
        replicas:
          description: The total number of current GameServer replicas in this fleet.
          format: int64
          type: string
        reservedReplicas:
          description: The number of GameServer replicas in the RESERVED state in this fleet. Reserved instances won't be deleted on scale down, but won't cause an autoscaler to scale up.
          format: int64
          type: string
      type: object
    Empty:
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      id: Empty
      properties: {}
      type: object
    Expr:
      description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != ''private'' && document.type != ''internal''" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "''New message received at '' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.'
      id: Expr
      properties:
        description:
          description: Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          description: Textual representation of an expression in Common Expression Language syntax.
          type: string
        location:
          description: Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
          type: string
        title:
          description: Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
          type: string
      type: object
    FetchDeploymentStateRequest:
      description: Request message for GameServerDeploymentsService.FetchDeploymentState.
      id: FetchDeploymentStateRequest
      properties: {}
      type: object
    FetchDeploymentStateResponse:
      description: Response message for GameServerDeploymentsService.FetchDeploymentState.
      id: FetchDeploymentStateResponse
      properties:
        clusterState:
          description: The state of the game server deployment in each game server cluster.
          items:
            $ref: '#/components/schemas/DeployedClusterState'
          type: array
        unavailable:
          description: List of locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    FleetConfig:
      description: Fleet configs for Agones.
      id: FleetConfig
      properties:
        fleetSpec:
          description: Agones fleet spec (see [example spec](https://agones.dev/site/docs/reference/fleet/)).
          type: string
        name:
          description: The name of the FleetConfig.
          type: string
      type: object
    GameServerCluster:
      description: A game server cluster resource.
      id: GameServerCluster
      properties:
        clusterState:
          $ref: '#/components/schemas/KubernetesClusterState'
          description: Output only. The state of the Kubernetes cluster in preview. This will be available if view is set to FULL in the relevant list/get/preview request.
          readOnly: true
        connectionInfo:
          $ref: '#/components/schemas/GameServerClusterConnectionInfo'
          description: The game server cluster connection information. This information is used to manage game server clusters.
        createTime:
          description: Output only. The creation time.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Human readable description of the cluster.
          type: string
        etag:
          description: Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
          type: string
        labels:
          additionalProperties:
            type: string
          description: The labels associated with this game server cluster. Each label is a key-value pair.
          type: object
        name:
          description: 'Required. The resource name of the game server cluster, in the following form: `projects/{project}/locations/{locationId}/realms/{realmId}/gameServerClusters/{gameServerClusterId}`. For example, `projects/my-project/locations/global/realms/zanzibar/gameServerClusters/my-gke-cluster`.'
          type: string
        updateTime:
          description: Output only. The last-modified time.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GameServerClusterConnectionInfo:
      description: The game server cluster connection information.
      id: GameServerClusterConnectionInfo
      properties:
        gkeClusterReference:
          $ref: '#/components/schemas/GkeClusterReference'
          description: Reference to the GKE cluster where the game servers are installed.
        namespace:
          description: Namespace designated on the game server cluster where the Agones game server instances will be created. Existence of the namespace will be validated during creation.
          type: string
      type: object
    GameServerConfig:
      description: A game server config resource.
      id: GameServerConfig
      properties:
        createTime:
          description: Output only. The creation time.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: The description of the game server config.
          type: string
        fleetConfigs:
          description: FleetConfig contains a list of Agones fleet specs. Only one FleetConfig is allowed.
          items:
            $ref: '#/components/schemas/FleetConfig'
          type: array
        labels:
          additionalProperties:
            type: string
          description: The labels associated with this game server config. Each label is a key-value pair.
          type: object
        name:
          description: 'The resource name of the game server config, in the following form: `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}/configs/{configId}`. For example, `projects/my-project/locations/global/gameServerDeployments/my-game/configs/my-config`.'
          type: string
        scalingConfigs:
          description: The autoscaling settings.
          items:
            $ref: '#/components/schemas/ScalingConfig'
          type: array
        updateTime:
          description: Output only. The last-modified time.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GameServerConfigOverride:
      description: A game server config override.
      id: GameServerConfigOverride
      properties:
        configVersion:
          description: The game server config for this override.
          type: string
        realmsSelector:
          $ref: '#/components/schemas/RealmSelector'
          description: Selector for choosing applicable realms.
      type: object
    GameServerDeployment:
      description: A game server deployment resource.
      id: GameServerDeployment
      properties:
        createTime:
          description: Output only. The creation time.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Human readable description of the game server deployment.
          type: string
        etag:
          description: Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
          type: string
        labels:
          additionalProperties:
            type: string
          description: The labels associated with this game server deployment. Each label is a key-value pair.
          type: object
        name:
          description: 'The resource name of the game server deployment, in the following form: `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}`. For example, `projects/my-project/locations/global/gameServerDeployments/my-deployment`.'
          type: string
        updateTime:
          description: Output only. The last-modified time.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GameServerDeploymentRollout:
      description: The game server deployment rollout which represents the desired rollout state.
      id: GameServerDeploymentRollout
      properties:
        createTime:
          description: Output only. The creation time.
          format: google-datetime
          readOnly: true
          type: string
        defaultGameServerConfig:
          description: The default game server config is applied to all realms unless overridden in the rollout. For example, `projects/my-project/locations/global/gameServerDeployments/my-game/configs/my-config`.
          type: string
        etag:
          description: ETag of the resource.
          type: string
        gameServerConfigOverrides:
          description: Contains the game server config rollout overrides. Overrides are processed in the order they are listed. Once a match is found for a realm, the rest of the list is not processed.
          items:
            $ref: '#/components/schemas/GameServerConfigOverride'
          type: array
        name:
          description: 'The resource name of the game server deployment rollout, in the following form: `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}/rollout`. For example, `projects/my-project/locations/global/gameServerDeployments/my-deployment/rollout`.'
          type: string
        updateTime:
          description: Output only. The last-modified time.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GkeClusterReference:
      description: A reference to a GKE cluster.
      id: GkeClusterReference
      properties:
        cluster:
          description: 'The full or partial name of a GKE cluster, using one of the following forms: * `projects/{project}/locations/{locationId}/clusters/{cluster}` * `locations/{locationId}/clusters/{cluster}` * `{cluster}` If project and location are not specified, the project and location of the GameServerCluster resource are used to generate the full name of the GKE cluster.'
          type: string
      type: object
    KubernetesClusterState:
      description: The state of the Kubernetes cluster.
      id: KubernetesClusterState
      properties:
        agonesVersionInstalled:
          description: Output only. The version of Agones currently installed in the registered Kubernetes cluster.
          readOnly: true
          type: string
        agonesVersionTargeted:
          description: Output only. The version of Agones that is targeted to be installed in the cluster.
          readOnly: true
          type: string
        installationState:
          description: Output only. The state for the installed versions of Agones/Kubernetes.
          enum:
            - INSTALLATION_STATE_UNSPECIFIED
            - AGONES_KUBERNETES_VERSION_SUPPORTED
            - AGONES_VERSION_UNSUPPORTED
            - AGONES_KUBERNETES_VERSION_UNSUPPORTED
            - AGONES_VERSION_UNRECOGNIZED
            - KUBERNETES_VERSION_UNRECOGNIZED
            - VERSION_VERIFICATION_FAILED
            - AGONES_NOT_INSTALLED
          enumDescriptions:
            - The default installation state. This value is used if the state is omitted.
            - Both the Agones and Kubernetes versions are supported by Google Cloud Game Servers and Agones and Kubernetes versions are compatible.
            - The installed version of Agones is not supported by Google Cloud Game Servers.
            - The installed version of Agones is supported by Google Cloud Game Servers, but the installed version of Kubernetes is not recommended or supported by the version of Agones.
            - The installed version of Agones is not recognized because the Agones controller's image name does not have a version string reported as {major}.{minor}(.{patch}).
            - The server version of Kubernetes cluster is not recognized because the API server didn't return parsable version info on path/version.
            - Failed to read or verify the version of Agones or Kubernetes. See `version_installed_error_message` for details.
            - Agones is not installed.
          readOnly: true
          type: string
        kubernetesVersionInstalled:
          description: Output only. The version of Kubernetes that is currently used in the registered Kubernetes cluster (as detected by the Cloud Game Servers service).
          readOnly: true
          type: string
        provider:
          description: Output only. The cloud provider type reported by the first node's `providerID` in the list of nodes on the Kubernetes endpoint. On Kubernetes platforms that support zero-node clusters (like GKE-on-GCP), the provider type will be empty.
          readOnly: true
          type: string
        versionInstalledErrorMessage:
          description: Output only. The detailed error message for the installed versions of Agones/Kubernetes.
          readOnly: true
          type: string
      type: object
    LabelSelector:
      description: The label selector, used to group labels on the resources.
      id: LabelSelector
      properties:
        labels:
          additionalProperties:
            type: string
          description: Resource labels for this selector.
          type: object
      type: object
    ListGameServerClustersResponse:
      description: Response message for GameServerClustersService.ListGameServerClusters.
      id: ListGameServerClustersResponse
      properties:
        gameServerClusters:
          description: The list of game server clusters.
          items:
            $ref: '#/components/schemas/GameServerCluster'
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
        unreachable:
          description: List of locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListGameServerConfigsResponse:
      description: Response message for GameServerConfigsService.ListGameServerConfigs.
      id: ListGameServerConfigsResponse
      properties:
        gameServerConfigs:
          description: The list of game server configs.
          items:
            $ref: '#/components/schemas/GameServerConfig'
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
        unreachable:
          description: List of locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListGameServerDeploymentsResponse:
      description: Response message for GameServerDeploymentsService.ListGameServerDeployments.
      id: ListGameServerDeploymentsResponse
      properties:
        gameServerDeployments:
          description: The list of game server deployments.
          items:
            $ref: '#/components/schemas/GameServerDeployment'
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
        unreachable:
          description: List of locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      id: ListLocationsResponse
      properties:
        locations:
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Location'
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      id: ListOperationsResponse
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Operation'
          type: array
      type: object
    ListRealmsResponse:
      description: Response message for RealmsService.ListRealms.
      id: ListRealmsResponse
      properties:
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
        realms:
          description: The list of realms.
          items:
            $ref: '#/components/schemas/Realm'
          type: array
        unreachable:
          description: List of locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    Location:
      description: A resource that represents Google Cloud Platform location.
      id: Location
      properties:
        displayName:
          description: The friendly name for this location, typically a nearby city name. For example, "Tokyo".
          type: string
        labels:
          additionalProperties:
            type: string
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          type: object
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: Service-specific metadata. For example the available capacity at the given location.
          type: object
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
      type: object
    LogConfig:
      description: Specifies what kind of log the caller must write
      id: LogConfig
      properties:
        cloudAudit:
          $ref: '#/components/schemas/CloudAuditOptions'
          description: Cloud audit options.
        counter:
          $ref: '#/components/schemas/CounterOptions'
          description: Counter options.
        dataAccess:
          $ref: '#/components/schemas/DataAccessOptions'
          description: Data access options.
      type: object
    Operation:
      description: This resource represents a long-running operation that is the result of a network API call.
      id: Operation
      properties:
        done:
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
          type: boolean
        error:
          $ref: '#/components/schemas/Status'
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          type: object
      type: object
    OperationMetadata:
      description: Represents the metadata of the long-running operation.
      id: OperationMetadata
      properties:
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
          type: string
        endTime:
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
          type: string
        operationStatus:
          additionalProperties:
            $ref: '#/components/schemas/OperationStatus'
          description: Output only. Operation status for Game Services API operations. Operation status is in the form of key-value pairs where keys are resource IDs and the values show the status of the operation. In case of failures, the value includes an error code and error message.
          readOnly: true
          type: object
        requestedCancellation:
          description: Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        target:
          description: Output only. Server-defined resource path for the target of the operation.
          readOnly: true
          type: string
        unreachable:
          description: Output only. List of Locations that could not be reached.
          items:
            type: string
          readOnly: true
          type: array
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
      type: object
    OperationStatus:
      id: OperationStatus
      properties:
        done:
          description: Output only. Whether the operation is done or still in progress.
          readOnly: true
          type: boolean
        errorCode:
          description: The error code in case of failures.
          enum:
            - ERROR_CODE_UNSPECIFIED
            - INTERNAL_ERROR
            - PERMISSION_DENIED
            - CLUSTER_CONNECTION
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          type: string
        errorMessage:
          description: The human-readable error message.
          type: string
      type: object
    Policy:
      description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp(''2020-10-01T00:00:00.000Z'')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).'
      id: Policy
      properties:
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: '#/components/schemas/AuditConfig'
          type: array
        bindings:
          description: Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.
          items:
            $ref: '#/components/schemas/Binding'
          type: array
        etag:
          description: '`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.'
          format: byte
          type: string
        rules:
          description: 'If more than one rule is specified, the rules are applied in the following manner: - All matching LOG rules are always applied. - If any DENY/DENY_WITH_LOG rule matches, permission is denied. Logging will be applied if one or more matching rule requires logging. - Otherwise, if any ALLOW/ALLOW_WITH_LOG rule matches, permission is granted. Logging will be applied if one or more matching rule requires logging. - Otherwise, if no rule applies, permission is denied.'
          items:
            $ref: '#/components/schemas/Rule'
          type: array
        version:
          description: 'Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
          format: int32
          type: integer
      type: object
    PreviewCreateGameServerClusterResponse:
      description: Response message for GameServerClustersService.PreviewCreateGameServerCluster.
      id: PreviewCreateGameServerClusterResponse
      properties:
        clusterState:
          $ref: '#/components/schemas/KubernetesClusterState'
          description: Output only. The state of the Kubernetes cluster in preview. This will be available if view is set to FULL in the relevant list/get/preview request.
          readOnly: true
        etag:
          description: The ETag of the game server cluster.
          type: string
        targetState:
          $ref: '#/components/schemas/TargetState'
          description: The target state.
      type: object
    PreviewDeleteGameServerClusterResponse:
      description: Response message for GameServerClustersService.PreviewDeleteGameServerCluster.
      id: PreviewDeleteGameServerClusterResponse
      properties:
        etag:
          description: The ETag of the game server cluster.
          type: string
        targetState:
          $ref: '#/components/schemas/TargetState'
          description: The target state.
      type: object
    PreviewGameServerDeploymentRolloutResponse:
      description: Response message for PreviewGameServerDeploymentRollout. This has details about the Agones fleet and autoscaler to be actuated.
      id: PreviewGameServerDeploymentRolloutResponse
      properties:
        etag:
          description: ETag of the game server deployment.
          type: string
        targetState:
          $ref: '#/components/schemas/TargetState'
          description: The target state.
        unavailable:
          description: Locations that could not be reached on this request.
          items:
            type: string
          type: array
      type: object
    PreviewRealmUpdateResponse:
      description: Response message for RealmsService.PreviewRealmUpdate.
      id: PreviewRealmUpdateResponse
      properties:
        etag:
          description: ETag of the realm.
          type: string
        targetState:
          $ref: '#/components/schemas/TargetState'
          description: The target state.
      type: object
    PreviewUpdateGameServerClusterResponse:
      description: Response message for GameServerClustersService.PreviewUpdateGameServerCluster
      id: PreviewUpdateGameServerClusterResponse
      properties:
        etag:
          description: The ETag of the game server cluster.
          type: string
        targetState:
          $ref: '#/components/schemas/TargetState'
          description: The target state.
      type: object
    Realm:
      description: A realm resource.
      id: Realm
      properties:
        createTime:
          description: Output only. The creation time.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Human readable description of the realm.
          type: string
        etag:
          description: Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
          type: string
        labels:
          additionalProperties:
            type: string
          description: The labels associated with this realm. Each label is a key-value pair.
          type: object
        name:
          description: 'The resource name of the realm, in the following form: `projects/{project}/locations/{locationId}/realms/{realmId}`. For example, `projects/my-project/locations/global/realms/my-realm`.'
          type: string
        timeZone:
          description: Required. Time zone where all policies targeting this realm are evaluated. The value of this field must be from the [IANA time zone database](https://www.iana.org/time-zones).
          type: string
        updateTime:
          description: Output only. The last-modified time.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    RealmSelector:
      description: The realm selector, used to match realm resources.
      id: RealmSelector
      properties:
        realms:
          description: List of realms to match.
          items:
            type: string
          type: array
      type: object
    Rule:
      description: A rule to be applied in a Policy.
      id: Rule
      properties:
        action:
          description: Required
          enum:
            - NO_ACTION
            - ALLOW
            - ALLOW_WITH_LOG
            - DENY
            - DENY_WITH_LOG
            - LOG
          enumDescriptions:
            - Default no action.
            - Matching 'Entries' grant access.
            - Matching 'Entries' grant access and the caller promises to log the request per the returned log_configs.
            - Matching 'Entries' deny access.
            - Matching 'Entries' deny access and the caller promises to log the request per the returned log_configs.
            - Matching 'Entries' tell IAM.Check callers to generate logs.
          type: string
        conditions:
          description: Additional restrictions that must be met. All conditions must pass for the rule to match.
          items:
            $ref: '#/components/schemas/Condition'
          type: array
        description:
          description: Human-readable description of the rule.
          type: string
        in:
          description: If one or more 'in' clauses are specified, the rule matches if the PRINCIPAL/AUTHORITY_SELECTOR is in at least one of these entries.
          items:
            type: string
          type: array
        logConfig:
          description: The config returned to callers of CheckPolicy for any entries that match the LOG action.
          items:
            $ref: '#/components/schemas/LogConfig'
          type: array
        notIn:
          description: If one or more 'not_in' clauses are specified, the rule matches if the PRINCIPAL/AUTHORITY_SELECTOR is in none of the entries. The format for in and not_in entries can be found at in the Local IAM documentation (see go/local-iam#features).
          items:
            type: string
          type: array
        permissions:
          description: A permission is a string of form '..' (e.g., 'storage.buckets.list'). A value of '*' matches all permissions, and a verb part of '*' (e.g., 'storage.buckets.*') matches all verbs.
          items:
            type: string
          type: array
      type: object
    ScalingConfig:
      description: Autoscaling config for an Agones fleet.
      id: ScalingConfig
      properties:
        fleetAutoscalerSpec:
          description: Required. Agones fleet autoscaler spec (see [example spec](https://agones.dev/site/docs/reference/fleetautoscaler/)).
          type: string
        name:
          description: Required. The name of the scaling config.
          type: string
        schedules:
          description: The schedules to which this scaling config applies.
          items:
            $ref: '#/components/schemas/Schedule'
          type: array
        selectors:
          description: Labels used to identify the game server clusters to which this Agones scaling config applies. A game server cluster is subject to this Agones scaling config if its labels match any of the selector entries.
          items:
            $ref: '#/components/schemas/LabelSelector'
          type: array
      type: object
    Schedule:
      description: 'The schedule of a recurring or one time event. The event''s time span is specified by start_time and end_time. If the scheduled event''s timespan is larger than cron_spec added with cron_job_duration, the event is recurring. If only cron_spec and cron_job_duration are specified, the event starts at the local time specified by cron_spec, and is recurring. ``` start_time|-------[cron job]-------[cron job]-------[cron job]---|end_time cron job: cron spec start time + duration ```'
      id: Schedule
      properties:
        cronJobDuration:
          description: The duration for the cron job event. The duration of the event is effective after the cron job's start time.
          format: google-duration
          type: string
        cronSpec:
          description: The cron definition of the scheduled event. See https://en.wikipedia.org/wiki/Cron. The cron spec specifies the local time as defined by the realm.
          type: string
        endTime:
          description: The end time of the event.
          format: google-datetime
          type: string
        startTime:
          description: The start time of the event.
          format: google-datetime
          type: string
      type: object
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      id: SetIamPolicyRequest
      properties:
        policy:
          $ref: '#/components/schemas/Policy'
          description: 'REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.'
        updateMask:
          description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`'
          format: google-fieldmask
          type: string
      type: object
    SpecSource:
      description: Encapsulates Agones fleet spec and Agones autoscaler spec sources.
      id: SpecSource
      properties:
        gameServerConfigName:
          description: 'The game server config resource. Uses the form: `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}/configs/{configId}`.'
          type: string
        name:
          description: The name of the Agones fleet config or Agones scaling config used to derive the Agones fleet or Agones autoscaler spec.
          type: string
      type: object
    Status:
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      id: Status
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
          type: array
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    TargetDetails:
      description: Details about the Agones resources.
      id: TargetDetails
      properties:
        fleetDetails:
          description: Agones fleet details for game server clusters and game server deployments.
          items:
            $ref: '#/components/schemas/TargetFleetDetails'
          type: array
        gameServerClusterName:
          description: 'The game server cluster name. Uses the form: `projects/{project}/locations/{locationId}/realms/{realmId}/gameServerClusters/{gameServerClusterId}`.'
          type: string
        gameServerDeploymentName:
          description: 'The game server deployment name. Uses the form: `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}`.'
          type: string
      type: object
    TargetFleet:
      description: Target Agones fleet specification.
      id: TargetFleet
      properties:
        name:
          description: The name of the Agones fleet.
          type: string
        specSource:
          $ref: '#/components/schemas/SpecSource'
          description: Encapsulates the source of the Agones fleet spec. The Agones fleet spec source.
      type: object
    TargetFleetAutoscaler:
      description: Target Agones autoscaler policy reference.
      id: TargetFleetAutoscaler
      properties:
        name:
          description: The name of the Agones autoscaler.
          type: string
        specSource:
          $ref: '#/components/schemas/SpecSource'
          description: Encapsulates the source of the Agones fleet spec. Details about the Agones autoscaler spec.
      type: object
    TargetFleetDetails:
      description: Details of the target Agones fleet.
      id: TargetFleetDetails
      properties:
        autoscaler:
          $ref: '#/components/schemas/TargetFleetAutoscaler'
          description: Reference to target Agones fleet autoscaling policy.
        fleet:
          $ref: '#/components/schemas/TargetFleet'
          description: Reference to target Agones fleet.
      type: object
    TargetState:
      description: Encapsulates the Target state.
      id: TargetState
      properties:
        details:
          description: Details about Agones fleets.
          items:
            $ref: '#/components/schemas/TargetDetails'
          type: array
      type: object
    TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      id: TestIamPermissionsRequest
      properties:
        permissions:
          description: The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
          items:
            type: string
          type: array
      type: object
    TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      id: TestIamPermissionsResponse
      properties:
        permissions:
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
          items:
            type: string
          type: array
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
  x-stackQL-resources:
    locations:
      id: google.gameservices.locations
      name: locations
      title: Locations
      methods:
        projects_locations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: locations
        projects_locations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_list'
        insert: []
        update: []
        delete: []
    game_server_deployments:
      id: google.gameservices.game_server_deployments
      name: game_server_deployments
      title: Game_server_deployments
      methods:
        projects_locations_gameServerDeployments_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gameServerDeployments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_gameServerDeployments_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gameServerDeployments/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_gameServerDeployments_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gameServerDeployments~1{gameServerDeploymentsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_gameServerDeployments_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gameServerDeployments~1{gameServerDeploymentsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_gameServerDeployments_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gameServerDeployments~1{gameServerDeploymentsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_gameServerDeployments_updateRollout:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gameServerDeployments~1{gameServerDeploymentsId}~1rollout/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_gameServerDeployments_previewRollout:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gameServerDeployments~1{gameServerDeploymentsId}~1rollout:preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/game_server_deployments/methods/projects_locations_gameServerDeployments_get'
          - $ref: '#/components/x-stackQL-resources/game_server_deployments/methods/projects_locations_gameServerDeployments_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/game_server_deployments/methods/projects_locations_gameServerDeployments_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/game_server_deployments/methods/projects_locations_gameServerDeployments_delete'
    configs:
      id: google.gameservices.configs
      name: configs
      title: Configs
      methods:
        projects_locations_gameServerDeployments_configs_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gameServerDeployments~1{gameServerDeploymentsId}~1configs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_gameServerDeployments_configs_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gameServerDeployments~1{gameServerDeploymentsId}~1configs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_gameServerDeployments_configs_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gameServerDeployments~1{gameServerDeploymentsId}~1configs~1{configsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_gameServerDeployments_configs_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gameServerDeployments~1{gameServerDeploymentsId}~1configs~1{configsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/configs/methods/projects_locations_gameServerDeployments_configs_get'
          - $ref: '#/components/x-stackQL-resources/configs/methods/projects_locations_gameServerDeployments_configs_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/configs/methods/projects_locations_gameServerDeployments_configs_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/configs/methods/projects_locations_gameServerDeployments_configs_delete'
    game_server_deployments_rollout:
      id: google.gameservices.game_server_deployments_rollout
      name: game_server_deployments_rollout
      title: Game_server_deployments_rollout
      methods:
        projects_locations_gameServerDeployments_getRollout:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gameServerDeployments~1{gameServerDeploymentsId}~1rollout/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/game_server_deployments_rollout/methods/projects_locations_gameServerDeployments_getRollout'
        insert: []
        update: []
        delete: []
    game_server_deployments_deployment_state:
      id: google.gameservices.game_server_deployments_deployment_state
      name: game_server_deployments_deployment_state
      title: Game_server_deployments_deployment_state
      methods:
        projects_locations_gameServerDeployments_fetchDeploymentState:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gameServerDeployments~1{gameServerDeploymentsId}:fetchDeploymentState/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/game_server_deployments_deployment_state/methods/projects_locations_gameServerDeployments_fetchDeploymentState'
        insert: []
        update: []
        delete: []
    game_server_deployments_iam_policies:
      id: google.gameservices.game_server_deployments_iam_policies
      name: game_server_deployments_iam_policies
      title: Game_server_deployments_iam_policies
      methods:
        projects_locations_gameServerDeployments_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gameServerDeployments~1{gameServerDeploymentsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_gameServerDeployments_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gameServerDeployments~1{gameServerDeploymentsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_gameServerDeployments_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gameServerDeployments~1{gameServerDeploymentsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/game_server_deployments_iam_policies/methods/projects_locations_gameServerDeployments_getIamPolicy'
        insert: []
        update: []
        delete: []
    operations:
      id: google.gameservices.operations
      name: operations
      title: Operations
      methods:
        projects_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: operations
        projects_locations_operations_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_delete'
    realms:
      id: google.gameservices.realms
      name: realms
      title: Realms
      methods:
        projects_locations_realms_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1realms/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_realms_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1realms/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_realms_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1realms~1{realmsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_realms_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1realms~1{realmsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_realms_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1realms~1{realmsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_realms_previewUpdate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1realms~1{realmsId}:previewUpdate/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/realms/methods/projects_locations_realms_get'
          - $ref: '#/components/x-stackQL-resources/realms/methods/projects_locations_realms_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/realms/methods/projects_locations_realms_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/realms/methods/projects_locations_realms_delete'
    game_server_clusters:
      id: google.gameservices.game_server_clusters
      name: game_server_clusters
      title: Game_server_clusters
      methods:
        projects_locations_realms_gameServerClusters_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1realms~1{realmsId}~1gameServerClusters/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_realms_gameServerClusters_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1realms~1{realmsId}~1gameServerClusters/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_realms_gameServerClusters_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1realms~1{realmsId}~1gameServerClusters~1{gameServerClustersId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_realms_gameServerClusters_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1realms~1{realmsId}~1gameServerClusters~1{gameServerClustersId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_realms_gameServerClusters_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1realms~1{realmsId}~1gameServerClusters~1{gameServerClustersId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_realms_gameServerClusters_previewDelete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1realms~1{realmsId}~1gameServerClusters~1{gameServerClustersId}:previewDelete/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_realms_gameServerClusters_previewUpdate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1realms~1{realmsId}~1gameServerClusters~1{gameServerClustersId}:previewUpdate/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_realms_gameServerClusters_previewCreate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1realms~1{realmsId}~1gameServerClusters:previewCreate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/game_server_clusters/methods/projects_locations_realms_gameServerClusters_get'
          - $ref: '#/components/x-stackQL-resources/game_server_clusters/methods/projects_locations_realms_gameServerClusters_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/game_server_clusters/methods/projects_locations_realms_gameServerClusters_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/game_server_clusters/methods/projects_locations_realms_gameServerClusters_delete'
    game_server_deployments_iam_bindings:
      id: google.gameservices.game_server_deployments_iam_bindings
      name: game_server_deployments_iam_bindings
      title: game_server_deployments_iam_bindings
      methods:
        projects_locations_gameServerDeployments_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gameServerDeployments~1{gameServerDeploymentsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/game_server_deployments_iam_bindings/methods/projects_locations_gameServerDeployments_getIamPolicy'
    game_server_deployments_iam_audit_configs:
      id: google.gameservices.game_server_deployments_iam_audit_configs
      name: game_server_deployments_iam_audit_configs
      title: game_server_deployments_iam_audit_configs
      methods:
        projects_locations_gameServerDeployments_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1gameServerDeployments~1{gameServerDeploymentsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: auditConfigs
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/game_server_deployments_iam_audit_configs/methods/projects_locations_gameServerDeployments_getIamPolicy'
externalDocs:
  url: https://cloud.google.com/solutions/gaming/
info:
  description: Deploy and manage infrastructure for global multiplayer gaming experiences.
  title: Game Services API
  version: v1
openapi: 3.1.0
paths:
  /v1/projects/{projectsId}/locations:
    get:
      description: Lists information about the supported locations for this service.
      operationId: gameservices.projects.locations.list
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: includeUnrevealedLocations
          schema:
            type: boolean
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - locations
    parameters:
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
  /v1/projects/{projectsId}/locations/{locationsId}:
    get:
      description: Gets information about a location.
      operationId: gameservices.projects.locations.get
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - locations
    parameters:
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
  /v1/projects/{projectsId}/locations/{locationsId}/gameServerDeployments:
    get:
      description: Lists game server deployments in a given project and location.
      operationId: gameservices.projects.locations.gameServerDeployments.list
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGameServerDeploymentsResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - game_server_deployments
    parameters:
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
    post:
      description: Creates a new game server deployment in a given project and location.
      operationId: gameservices.projects.locations.gameServerDeployments.create
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: deploymentId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameServerDeployment'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - game_server_deployments
  /v1/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}:
    delete:
      description: Deletes a single game server deployment.
      operationId: gameservices.projects.locations.gameServerDeployments.delete
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: gameServerDeploymentsId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - game_server_deployments
    get:
      description: Gets details of a single game server deployment.
      operationId: gameservices.projects.locations.gameServerDeployments.get
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: gameServerDeploymentsId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameServerDeployment'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - game_server_deployments
    parameters:
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
    patch:
      description: Patches a game server deployment.
      operationId: gameservices.projects.locations.gameServerDeployments.patch
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: gameServerDeploymentsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameServerDeployment'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - game_server_deployments
  /v1/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}/configs:
    get:
      description: Lists game server configs in a given project, location, and game server deployment.
      operationId: gameservices.projects.locations.gameServerDeployments.configs.list
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: gameServerDeploymentsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGameServerConfigsResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - configs
    parameters:
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
    post:
      description: Creates a new game server config in a given project, location, and game server deployment. Game server configs are immutable, and are not applied until referenced in the game server deployment rollout resource.
      operationId: gameservices.projects.locations.gameServerDeployments.configs.create
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: gameServerDeploymentsId
          required: true
          schema:
            type: string
        - in: query
          name: configId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameServerConfig'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - configs
  /v1/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}/configs/{configsId}:
    delete:
      description: Deletes a single game server config. The deletion fails if the game server config is referenced in a game server deployment rollout.
      operationId: gameservices.projects.locations.gameServerDeployments.configs.delete
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: gameServerDeploymentsId
          required: true
          schema:
            type: string
        - in: path
          name: configsId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - configs
    get:
      description: Gets details of a single game server config.
      operationId: gameservices.projects.locations.gameServerDeployments.configs.get
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: gameServerDeploymentsId
          required: true
          schema:
            type: string
        - in: path
          name: configsId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameServerConfig'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - configs
    parameters:
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
  /v1/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}/rollout:
    get:
      description: Gets details of a single game server deployment rollout.
      operationId: gameservices.projects.locations.gameServerDeployments.getRollout
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: gameServerDeploymentsId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameServerDeploymentRollout'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - game_server_deployments_rollout
    parameters:
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
    patch:
      description: 'Patches a single game server deployment rollout. The method will not return an error if the update does not affect any existing realms. For example, the following cases will not return an error: * The default_game_server_config is changed but all existing realms use the override. * A non-existing realm is explicitly called out in the game_server_config_overrides field.'
      operationId: gameservices.projects.locations.gameServerDeployments.updateRollout
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: gameServerDeploymentsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameServerDeploymentRollout'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - game_server_deployments
  /v1/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}/rollout:preview:
    parameters:
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
    patch:
      description: Previews the game server deployment rollout. This API does not mutate the rollout resource.
      operationId: gameservices.projects.locations.gameServerDeployments.previewRollout
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: gameServerDeploymentsId
          required: true
          schema:
            type: string
        - in: query
          name: previewTime
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameServerDeploymentRollout'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewGameServerDeploymentRolloutResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - game_server_deployments
  /v1/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}:fetchDeploymentState:
    parameters:
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
    post:
      description: Retrieves information about the current state of the game server deployment. Gathers all the Agones fleets and Agones autoscalers, including fleets running an older version of the game server deployment.
      operationId: gameservices.projects.locations.gameServerDeployments.fetchDeploymentState
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: gameServerDeploymentsId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchDeploymentStateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchDeploymentStateResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - game_server_deployments_deployment_state
  /v1/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}:getIamPolicy:
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: gameservices.projects.locations.gameServerDeployments.getIamPolicy
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: gameServerDeploymentsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - game_server_deployments_iam_policies
    parameters:
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
  /v1/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}:setIamPolicy:
    parameters:
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
      operationId: gameservices.projects.locations.gameServerDeployments.setIamPolicy
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: gameServerDeploymentsId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - game_server_deployments_iam_policies
  /v1/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}:testIamPermissions:
    parameters:
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: gameservices.projects.locations.gameServerDeployments.testIamPermissions
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: gameServerDeploymentsId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - game_server_deployments_iam_policies
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.'
      operationId: gameservices.projects.locations.operations.list
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - operations
    parameters:
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    delete:
      description: Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
      operationId: gameservices.projects.locations.operations.delete
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - operations
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: gameservices.projects.locations.operations.get
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - operations
    parameters:
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters:
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: gameservices.projects.locations.operations.cancel
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - operations
  /v1/projects/{projectsId}/locations/{locationsId}/realms:
    get:
      description: Lists realms in a given project and location.
      operationId: gameservices.projects.locations.realms.list
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRealmsResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - realms
    parameters:
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
    post:
      description: Creates a new realm in a given project and location.
      operationId: gameservices.projects.locations.realms.create
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: realmId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Realm'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - realms
  /v1/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}:
    delete:
      description: Deletes a single realm.
      operationId: gameservices.projects.locations.realms.delete
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: realmsId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - realms
    get:
      description: Gets details of a single realm.
      operationId: gameservices.projects.locations.realms.get
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: realmsId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Realm'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - realms
    parameters:
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
    patch:
      description: Patches a single realm.
      operationId: gameservices.projects.locations.realms.patch
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: realmsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Realm'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - realms
  /v1/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}/gameServerClusters:
    get:
      description: Lists game server clusters in a given project and location.
      operationId: gameservices.projects.locations.realms.gameServerClusters.list
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: realmsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGameServerClustersResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - game_server_clusters
    parameters:
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
    post:
      description: Creates a new game server cluster in a given project and location.
      operationId: gameservices.projects.locations.realms.gameServerClusters.create
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: realmsId
          required: true
          schema:
            type: string
        - in: query
          name: gameServerClusterId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameServerCluster'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - game_server_clusters
  /v1/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}/gameServerClusters/{gameServerClustersId}:
    delete:
      description: Deletes a single game server cluster.
      operationId: gameservices.projects.locations.realms.gameServerClusters.delete
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: realmsId
          required: true
          schema:
            type: string
        - in: path
          name: gameServerClustersId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - game_server_clusters
    get:
      description: Gets details of a single game server cluster.
      operationId: gameservices.projects.locations.realms.gameServerClusters.get
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: realmsId
          required: true
          schema:
            type: string
        - in: path
          name: gameServerClustersId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameServerCluster'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - game_server_clusters
    parameters:
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
    patch:
      description: Patches a single game server cluster.
      operationId: gameservices.projects.locations.realms.gameServerClusters.patch
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: realmsId
          required: true
          schema:
            type: string
        - in: path
          name: gameServerClustersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameServerCluster'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - game_server_clusters
  /v1/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}/gameServerClusters/{gameServerClustersId}:previewDelete:
    delete:
      description: Previews deletion of a single game server cluster.
      operationId: gameservices.projects.locations.realms.gameServerClusters.previewDelete
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: realmsId
          required: true
          schema:
            type: string
        - in: path
          name: gameServerClustersId
          required: true
          schema:
            type: string
        - in: query
          name: previewTime
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewDeleteGameServerClusterResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - game_server_clusters
    parameters:
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
  /v1/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}/gameServerClusters/{gameServerClustersId}:previewUpdate:
    parameters:
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
    patch:
      description: Previews updating a GameServerCluster.
      operationId: gameservices.projects.locations.realms.gameServerClusters.previewUpdate
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: realmsId
          required: true
          schema:
            type: string
        - in: path
          name: gameServerClustersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: previewTime
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameServerCluster'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewUpdateGameServerClusterResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - game_server_clusters
  /v1/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}/gameServerClusters:previewCreate:
    parameters:
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
    post:
      description: Previews creation of a new game server cluster in a given project and location.
      operationId: gameservices.projects.locations.realms.gameServerClusters.previewCreate
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: realmsId
          required: true
          schema:
            type: string
        - in: query
          name: gameServerClusterId
          schema:
            type: string
        - in: query
          name: previewTime
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameServerCluster'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewCreateGameServerClusterResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - game_server_clusters
  /v1/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}:previewUpdate:
    parameters:
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
    patch:
      description: Previews patches to a single realm.
      operationId: gameservices.projects.locations.realms.previewUpdate
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: realmsId
          required: true
          schema:
            type: string
        - in: query
          name: previewTime
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Realm'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewRealmUpdateResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - realms
servers:
  - url: https://gameservices.googleapis.com
