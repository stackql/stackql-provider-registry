openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Cloud Bigtable Admin API
  description: Administer your Cloud Bigtable tables and instances.
  version: v2
  x-discovery-doc-revision: '20250811'
  x-generated-date: '2025-08-28'
externalDocs:
  url: https://cloud.google.com/bigtable/
servers:
  - url: https://bigtableadmin.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/bigtable.admin: Administer your Cloud Bigtable tables and clusters
            https://www.googleapis.com/auth/bigtable.admin.cluster: Administer your Cloud Bigtable clusters
            https://www.googleapis.com/auth/bigtable.admin.instance: Administer your Cloud Bigtable clusters
            https://www.googleapis.com/auth/bigtable.admin.table: Administer your Cloud Bigtable tables
            https://www.googleapis.com/auth/cloud-bigtable.admin: Administer your Cloud Bigtable tables and clusters
            https://www.googleapis.com/auth/cloud-bigtable.admin.cluster: Administer your Cloud Bigtable clusters
            https://www.googleapis.com/auth/cloud-bigtable.admin.table: Administer your Cloud Bigtable tables
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
            https://www.googleapis.com/auth/cloud-platform.read-only: >-
              View your data across Google Cloud services and see the email
              address of your Google Account
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    ListOperationsResponse:
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Operation:
      id: Operation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    Status:
      id: Status
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    CreateInstanceRequest:
      id: CreateInstanceRequest
      description: Request message for BigtableInstanceAdmin.CreateInstance.
      type: object
      properties:
        parent:
          description: >-
            Required. The unique name of the project in which to create the new
            instance. Values are of the form `projects/{project}`.
          type: string
        instanceId:
          description: >-
            Required. The ID to be used when referring to the new instance
            within its project, e.g., just `myinstance` rather than
            `projects/myproject/instances/myinstance`.
          type: string
        instance:
          description: >-
            Required. The instance to create. Fields marked `OutputOnly` must be
            left blank.
          $ref: '#/components/schemas/Instance'
        clusters:
          description: >-
            Required. The clusters to be created within the instance, mapped by
            desired cluster ID, e.g., just `mycluster` rather than
            `projects/myproject/instances/myinstance/clusters/mycluster`. Fields
            marked `OutputOnly` must be left blank.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Cluster'
    Instance:
      id: Instance
      description: >-
        A collection of Bigtable Tables and the resources that serve them. All
        tables in an instance are served from all Clusters in the instance.
      type: object
      properties:
        name:
          description: >-
            The unique name of the instance. Values are of the form
            `projects/{project}/instances/a-z+[a-z0-9]`.
          type: string
        displayName:
          description: >-
            Required. The descriptive name for this instance as it appears in
            UIs. Can be changed at any time, but should be kept globally unique
            to avoid confusion.
          type: string
        state:
          description: Output only. The current state of the instance.
          readOnly: true
          type: string
          enumDescriptions:
            - The state of the instance could not be determined.
            - >-
              The instance has been successfully created and can serve requests
              to its tables.
            - >-
              The instance is currently being created, and may be destroyed if
              the creation process encounters an error.
          enum:
            - STATE_NOT_KNOWN
            - READY
            - CREATING
        type:
          description: The type of the instance. Defaults to `PRODUCTION`.
          type: string
          enumDescriptions:
            - >-
              The type of the instance is unspecified. If set when creating an
              instance, a `PRODUCTION` instance will be created. If set when
              updating an instance, the type will be left unchanged.
            - >-
              An instance meant for production use. `serve_nodes` must be set on
              the cluster.
            - >-
              DEPRECATED: Prefer PRODUCTION for all use cases, as it no longer
              enforces a higher minimum node count than DEVELOPMENT.
          enum:
            - TYPE_UNSPECIFIED
            - PRODUCTION
            - DEVELOPMENT
        labels:
          description: >-
            Labels are a flexible and lightweight mechanism for organizing cloud
            resources into groups that reflect a customer's organizational needs
            and deployment strategies. They can be used to filter resources and
            aggregate metrics. * Label keys must be between 1 and 63 characters
            long and must conform to the regular expression:
            `\p{Ll}\p{Lo}{0,62}`. * Label values must be between 0 and 63
            characters long and must conform to the regular expression:
            `[\p{Ll}\p{Lo}\p{N}_-]{0,63}`. * No more than 64 labels can be
            associated with a given resource. * Keys and values must both be
            under 128 bytes.
          type: object
          additionalProperties:
            type: string
        createTime:
          description: >-
            Output only. A commit timestamp representing when this Instance was
            created. For instances created before this field was added (August
            2021), this value is `seconds: 0, nanos: 1`.
          readOnly: true
          type: string
          format: google-datetime
        satisfiesPzs:
          description: Output only. Reserved for future use.
          readOnly: true
          type: boolean
        satisfiesPzi:
          description: Output only. Reserved for future use.
          readOnly: true
          type: boolean
        tags:
          description: >-
            Optional. Input only. Immutable. Tag keys/values directly bound to
            this resource. For example: - "123/environment": "production", -
            "123/costCenter": "marketing" Tags and Labels (above) are both used
            to bind metadata to resources, with different use-cases. See
            https://cloud.google.com/resource-manager/docs/tags/tags-overview
            for an in-depth overview on the difference between tags and labels.
          type: object
          additionalProperties:
            type: string
    Cluster:
      id: Cluster
      description: >-
        A resizable group of nodes in a particular cloud location, capable of
        serving all Tables in the parent Instance.
      type: object
      properties:
        name:
          description: >-
            The unique name of the cluster. Values are of the form
            `projects/{project}/instances/{instance}/clusters/a-z*`.
          type: string
        location:
          description: >-
            Immutable. The location where this cluster's nodes and storage
            reside. For best performance, clients should be located as close as
            possible to this cluster. Currently only zones are supported, so
            values should be of the form `projects/{project}/locations/{zone}`.
          type: string
        state:
          description: Output only. The current state of the cluster.
          readOnly: true
          type: string
          enumDescriptions:
            - The state of the cluster could not be determined.
            - >-
              The cluster has been successfully created and is ready to serve
              requests.
            - >-
              The cluster is currently being created, and may be destroyed if
              the creation process encounters an error. A cluster may not be
              able to serve requests while being created.
            - >-
              The cluster is currently being resized, and may revert to its
              previous node count if the process encounters an error. A cluster
              is still capable of serving requests while being resized, but may
              exhibit performance as if its number of allocated nodes is between
              the starting and requested states.
            - >-
              The cluster has no backing nodes. The data (tables) still exist,
              but no operations can be performed on the cluster.
          enum:
            - STATE_NOT_KNOWN
            - READY
            - CREATING
            - RESIZING
            - DISABLED
        serveNodes:
          description: >-
            The number of nodes in the cluster. If no value is set, Cloud
            Bigtable automatically allocates nodes based on your data footprint
            and optimized for 50% storage utilization.
          type: integer
          format: int32
        nodeScalingFactor:
          description: Immutable. The node scaling factor of this cluster.
          type: string
          enumDescriptions:
            - No node scaling specified. Defaults to NODE_SCALING_FACTOR_1X.
            - The cluster is running with a scaling factor of 1.
            - >-
              The cluster is running with a scaling factor of 2. All node count
              values must be in increments of 2 with this scaling factor
              enabled, otherwise an INVALID_ARGUMENT error will be returned.
          enum:
            - NODE_SCALING_FACTOR_UNSPECIFIED
            - NODE_SCALING_FACTOR_1X
            - NODE_SCALING_FACTOR_2X
        clusterConfig:
          description: Configuration for this cluster.
          $ref: '#/components/schemas/ClusterConfig'
        defaultStorageType:
          description: >-
            Immutable. The type of storage used by this cluster to serve its
            parent instance's tables, unless explicitly overridden.
          type: string
          enumDescriptions:
            - The user did not specify a storage type.
            - Flash (SSD) storage should be used.
            - Magnetic drive (HDD) storage should be used.
          enum:
            - STORAGE_TYPE_UNSPECIFIED
            - SSD
            - HDD
        encryptionConfig:
          description: Immutable. The encryption configuration for CMEK-protected clusters.
          $ref: '#/components/schemas/EncryptionConfig'
    ClusterConfig:
      id: ClusterConfig
      description: Configuration for a cluster.
      type: object
      properties:
        clusterAutoscalingConfig:
          description: Autoscaling configuration for this cluster.
          $ref: '#/components/schemas/ClusterAutoscalingConfig'
    ClusterAutoscalingConfig:
      id: ClusterAutoscalingConfig
      description: Autoscaling config for a cluster.
      type: object
      properties:
        autoscalingLimits:
          description: Required. Autoscaling limits for this cluster.
          $ref: '#/components/schemas/AutoscalingLimits'
        autoscalingTargets:
          description: Required. Autoscaling targets for this cluster.
          $ref: '#/components/schemas/AutoscalingTargets'
    AutoscalingLimits:
      id: AutoscalingLimits
      description: Limits for the number of nodes a Cluster can autoscale up/down to.
      type: object
      properties:
        minServeNodes:
          description: Required. Minimum number of nodes to scale down to.
          type: integer
          format: int32
        maxServeNodes:
          description: Required. Maximum number of nodes to scale up to.
          type: integer
          format: int32
    AutoscalingTargets:
      id: AutoscalingTargets
      description: >-
        The Autoscaling targets for a Cluster. These determine the recommended
        nodes.
      type: object
      properties:
        cpuUtilizationPercent:
          description: >-
            The cpu utilization that the Autoscaler should be trying to achieve.
            This number is on a scale from 0 (no utilization) to 100 (total
            utilization), and is limited between 10 and 80, otherwise it will
            return INVALID_ARGUMENT error.
          type: integer
          format: int32
        storageUtilizationGibPerNode:
          description: >-
            The storage utilization that the Autoscaler should be trying to
            achieve. This number is limited between 2560 (2.5TiB) and 5120
            (5TiB) for a SSD cluster and between 8192 (8TiB) and 16384 (16TiB)
            for an HDD cluster, otherwise it will return INVALID_ARGUMENT error.
            If this value is set to 0, it will be treated as if it were set to
            the default value: 2560 for SSD, 8192 for HDD.
          type: integer
          format: int32
    EncryptionConfig:
      id: EncryptionConfig
      description: >-
        Cloud Key Management Service (Cloud KMS) settings for a CMEK-protected
        cluster.
      type: object
      properties:
        kmsKeyName:
          description: >-
            Describes the Cloud KMS encryption key that will be used to protect
            the destination Bigtable cluster. The requirements for this key are:
            1) The Cloud Bigtable service account associated with the project
            that contains this cluster must be granted the
            `cloudkms.cryptoKeyEncrypterDecrypter` role on the CMEK key. 2) Only
            regional keys can be used and the region of the CMEK key must match
            the region of the cluster. Values are of the form
            `projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}`
          type: string
    ListInstancesResponse:
      id: ListInstancesResponse
      description: Response message for BigtableInstanceAdmin.ListInstances.
      type: object
      properties:
        instances:
          description: The list of requested instances.
          type: array
          items:
            $ref: '#/components/schemas/Instance'
        failedLocations:
          description: >-
            Locations from which Instance information could not be retrieved,
            due to an outage or some other transient condition. Instances whose
            Clusters are all in one of the failed locations may be missing from
            `instances`, and Instances with at least one Cluster in a failed
            location may only have partial information returned. Values are of
            the form `projects//locations/`
          type: array
          items:
            type: string
        nextPageToken:
          description: 'DEPRECATED: This field is unused and ignored.'
          type: string
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    ListClustersResponse:
      id: ListClustersResponse
      description: Response message for BigtableInstanceAdmin.ListClusters.
      type: object
      properties:
        clusters:
          description: The list of requested clusters.
          type: array
          items:
            $ref: '#/components/schemas/Cluster'
        failedLocations:
          description: >-
            Locations from which Cluster information could not be retrieved, due
            to an outage or some other transient condition. Clusters from these
            locations may be missing from `clusters`, or may only have partial
            information returned. Values are of the form `projects//locations/`
          type: array
          items:
            type: string
        nextPageToken:
          description: 'DEPRECATED: This field is unused and ignored.'
          type: string
    AppProfile:
      id: AppProfile
      description: >-
        A configuration object describing how Cloud Bigtable should treat
        traffic from a particular end user application.
      type: object
      properties:
        name:
          description: >-
            The unique name of the app profile, up to 50 characters long. Values
            are of the form
            `projects/{project}/instances/{instance}/appProfiles/_a-zA-Z0-9*`.
          type: string
        etag:
          description: >-
            Strongly validated etag for optimistic concurrency control. Preserve
            the value returned from `GetAppProfile` when calling
            `UpdateAppProfile` to fail the request if there has been a
            modification in the mean time. The `update_mask` of the request need
            not include `etag` for this protection to apply. See
            [Wikipedia](https://en.wikipedia.org/wiki/HTTP_ETag) and [RFC
            7232](https://tools.ietf.org/html/rfc7232#section-2.3) for more
            details.
          type: string
        description:
          description: Long form description of the use case for this AppProfile.
          type: string
        multiClusterRoutingUseAny:
          description: Use a multi-cluster routing policy.
          $ref: '#/components/schemas/MultiClusterRoutingUseAny'
        singleClusterRouting:
          description: Use a single-cluster routing policy.
          $ref: '#/components/schemas/SingleClusterRouting'
        priority:
          description: >-
            This field has been deprecated in favor of
            `standard_isolation.priority`. If you set this field,
            `standard_isolation.priority` will be set instead. The priority of
            requests sent using this app profile.
          deprecated: true
          type: string
          enumDescriptions:
            - >-
              Default value. Mapped to PRIORITY_HIGH (the legacy behavior) on
              creation.
            - ''
            - ''
            - ''
          enum:
            - PRIORITY_UNSPECIFIED
            - PRIORITY_LOW
            - PRIORITY_MEDIUM
            - PRIORITY_HIGH
        standardIsolation:
          description: >-
            The standard options used for isolating this app profile's traffic
            from other use cases.
          $ref: '#/components/schemas/StandardIsolation'
        dataBoostIsolationReadOnly:
          description: >-
            Specifies that this app profile is intended for read-only usage via
            the Data Boost feature.
          $ref: '#/components/schemas/DataBoostIsolationReadOnly'
    MultiClusterRoutingUseAny:
      id: MultiClusterRoutingUseAny
      description: >-
        Read/write requests are routed to the nearest cluster in the instance,
        and will fail over to the nearest cluster that is available in the event
        of transient errors or delays. Clusters in a region are considered
        equidistant. Choosing this option sacrifices read-your-writes
        consistency to improve availability.
      type: object
      properties:
        clusterIds:
          description: >-
            The set of clusters to route to. The order is ignored; clusters will
            be tried in order of distance. If left empty, all clusters are
            eligible.
          type: array
          items:
            type: string
        rowAffinity:
          description: >-
            Row affinity sticky routing based on the row key of the request.
            Requests that span multiple rows are routed non-deterministically.
          $ref: '#/components/schemas/RowAffinity'
    RowAffinity:
      id: RowAffinity
      description: >-
        If enabled, Bigtable will route the request based on the row key of the
        request, rather than randomly. Instead, each row key will be assigned to
        a cluster, and will stick to that cluster. If clusters are added or
        removed, then this may affect which row keys stick to which clusters. To
        avoid this, users can use a cluster group to specify which clusters are
        to be used. In this case, new clusters that are not a part of the
        cluster group will not be routed to, and routing will be unaffected by
        the new cluster. Moreover, clusters specified in the cluster group
        cannot be deleted unless removed from the cluster group.
      type: object
      properties: {}
    SingleClusterRouting:
      id: SingleClusterRouting
      description: >-
        Unconditionally routes all read/write requests to a specific cluster.
        This option preserves read-your-writes consistency but does not improve
        availability.
      type: object
      properties:
        clusterId:
          description: The cluster to which read/write requests should be routed.
          type: string
        allowTransactionalWrites:
          description: >-
            Whether or not `CheckAndMutateRow` and `ReadModifyWriteRow` requests
            are allowed by this app profile. It is unsafe to send these requests
            to the same table/row/column in multiple clusters.
          type: boolean
    StandardIsolation:
      id: StandardIsolation
      description: >-
        Standard options for isolating this app profile's traffic from other use
        cases.
      type: object
      properties:
        priority:
          description: The priority of requests sent using this app profile.
          type: string
          enumDescriptions:
            - >-
              Default value. Mapped to PRIORITY_HIGH (the legacy behavior) on
              creation.
            - ''
            - ''
            - ''
          enum:
            - PRIORITY_UNSPECIFIED
            - PRIORITY_LOW
            - PRIORITY_MEDIUM
            - PRIORITY_HIGH
    DataBoostIsolationReadOnly:
      id: DataBoostIsolationReadOnly
      description: >-
        Data Boost is a serverless compute capability that lets you run
        high-throughput read jobs and queries on your Bigtable data, without
        impacting the performance of the clusters that handle your application
        traffic. Data Boost supports read-only use cases with single-cluster
        routing.
      type: object
      properties:
        computeBillingOwner:
          description: The Compute Billing Owner for this Data Boost App Profile.
          type: string
          enumDescriptions:
            - Unspecified value.
            - >-
              The host Cloud Project containing the targeted Bigtable Instance /
              Table pays for compute.
          enum:
            - COMPUTE_BILLING_OWNER_UNSPECIFIED
            - HOST_PAYS
    ListAppProfilesResponse:
      id: ListAppProfilesResponse
      description: Response message for BigtableInstanceAdmin.ListAppProfiles.
      type: object
      properties:
        appProfiles:
          description: The list of requested app profiles.
          type: array
          items:
            $ref: '#/components/schemas/AppProfile'
        nextPageToken:
          description: >-
            Set if not all app profiles could be returned in a single response.
            Pass this value to `page_token` in another request to get the next
            page of results.
          type: string
        failedLocations:
          description: >-
            Locations from which AppProfile information could not be retrieved,
            due to an outage or some other transient condition. AppProfiles from
            these locations may be missing from `app_profiles`. Values are of
            the form `projects//locations/`
          type: array
          items:
            type: string
    GetIamPolicyRequest:
      id: GetIamPolicyRequest
      description: Request message for `GetIamPolicy` method.
      type: object
      properties:
        options:
          description: >-
            OPTIONAL: A `GetPolicyOptions` object for specifying options to
            `GetIamPolicy`.
          $ref: '#/components/schemas/GetPolicyOptions'
    GetPolicyOptions:
      id: GetPolicyOptions
      description: Encapsulates settings provided to GetIamPolicy.
      type: object
      properties:
        requestedPolicyVersion:
          description: >-
            Optional. The maximum policy version that will be used to format the
            policy. Valid values are 0, 1, and 3. Requests specifying an invalid
            value will be rejected. Requests for policies with any conditional
            role bindings must specify version 3. Policies with no conditional
            role bindings may specify any valid value or leave the field unset.
            The policy in the response might use the policy version that you
            specified, or it might use a lower policy version. For example, if
            you specify version 3, but the policy has no conditional role
            bindings, the response uses version 1. To learn which resources
            support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          type: integer
          format: int32
    Policy:
      id: Policy
      description: >-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources. A `Policy` is a collection of
        `bindings`. A `binding` binds one or more `members`, or principals, to a
        single `role`. Principals can be user accounts, service accounts, Google
        groups, and domains (such as G Suite). A `role` is a named list of
        permissions; each `role` can be an IAM predefined role or a user-created
        custom role. For some types of Google Cloud resources, a `binding` can
        also specify a `condition`, which is a logical expression that allows
        access to a resource only if the expression evaluates to `true`. A
        condition can add constraints based on attributes of the request, the
        resource, or both. To learn which resources support conditions in their
        IAM policies, see the [IAM
        documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        **JSON example:** ``` { "bindings": [ { "role":
        "roles/resourcemanager.organizationAdmin", "members": [
        "user:mike@example.com", "group:admins@example.com",
        "domain:google.com",
        "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, {
        "role": "roles/resourcemanager.organizationViewer", "members": [
        "user:eve@example.com" ], "condition": { "title": "expirable access",
        "description": "Does not grant access after Sep 2020", "expression":
        "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
        "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: -
        members: - user:mike@example.com - group:admins@example.com -
        domain:google.com -
        serviceAccount:my-project-id@appspot.gserviceaccount.com role:
        roles/resourcemanager.organizationAdmin - members: -
        user:eve@example.com role: roles/resourcemanager.organizationViewer
        condition: title: expirable access description: Does not grant access
        after Sep 2020 expression: request.time <
        timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ```
        For a description of IAM and its features, see the [IAM
        documentation](https://cloud.google.com/iam/docs/).
      type: object
      properties:
        version:
          description: >-
            Specifies the format of the policy. Valid values are `0`, `1`, and
            `3`. Requests that specify an invalid value are rejected. Any
            operation that affects conditional role bindings must specify
            version `3`. This requirement applies to the following operations: *
            Getting a policy that includes a conditional role binding * Adding a
            conditional role binding to a policy * Changing a conditional role
            binding in a policy * Removing any role binding, with or without a
            condition, from a policy that includes conditions **Important:** If
            you use IAM Conditions, you must include the `etag` field whenever
            you call `setIamPolicy`. If you omit this field, then IAM allows you
            to overwrite a version `3` policy with a version `1` policy, and all
            of the conditions in the version `3` policy are lost. If a policy
            does not include any conditions, operations on that policy may
            specify any valid version or leave the field unset. To learn which
            resources support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          type: integer
          format: int32
        bindings:
          description: >-
            Associates a list of `members`, or principals, with a `role`.
            Optionally, may specify a `condition` that determines how and when
            the `bindings` are applied. Each of the `bindings` must contain at
            least one principal. The `bindings` in a `Policy` can refer to up to
            1,500 principals; up to 250 of these principals can be Google
            groups. Each occurrence of a principal counts towards these limits.
            For example, if the `bindings` grant 50 different roles to
            `user:alice@example.com`, and not to any other principal, then you
            can add another 1,450 principals to the `bindings` in the `Policy`.
          type: array
          items:
            $ref: '#/components/schemas/Binding'
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          type: array
          items:
            $ref: '#/components/schemas/AuditConfig'
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy. **Important:** If you use
            IAM Conditions, you must include the `etag` field whenever you call
            `setIamPolicy`. If you omit this field, then IAM allows you to
            overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.
          type: string
          format: byte
    Binding:
      id: Binding
      description: Associates `members`, or principals, with a `role`.
      type: object
      properties:
        role:
          description: >-
            Role that is assigned to the list of `members`, or principals. For
            example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an
            overview of the IAM roles and permissions, see the [IAM
            documentation](https://cloud.google.com/iam/docs/roles-overview).
            For a list of the available pre-defined roles, see
            [here](https://cloud.google.com/iam/docs/understanding-roles).
          type: string
        members:
          description: >-
            Specifies the principals requesting access for a Google Cloud
            resource. `members` can have the following values: * `allUsers`: A
            special identifier that represents anyone who is on the internet;
            with or without a Google account. * `allAuthenticatedUsers`: A
            special identifier that represents anyone who is authenticated with
            a Google account or a service account. Does not include identities
            that come from external identity providers (IdPs) through identity
            federation. * `user:{emailid}`: An email address that represents a
            specific Google account. For example, `alice@example.com` . *
            `serviceAccount:{emailid}`: An email address that represents a
            Google service account. For example,
            `my-other-app@appspot.gserviceaccount.com`. *
            `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
            An identifier for a [Kubernetes service
            account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
            For example,
            `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
            `group:{emailid}`: An email address that represents a Google group.
            For example, `admins@example.com`. * `domain:{domain}`: The G Suite
            domain (primary) that represents all the users of that domain. For
            example, `google.com` or `example.com`. *
            `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workforce identity pool. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`:
            All workforce identities in a group. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All workforce identities with a specific attribute value. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`:
            All identities in a workforce identity pool. *
            `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workload identity pool. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`:
            A workload identity pool group. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All identities in a workload identity pool with a certain attribute.
            *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`:
            All identities in a workload identity pool. *
            `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus
            unique identifier) representing a user that has been recently
            deleted. For example, `alice@example.com?uid=123456789012345678901`.
            If the user is recovered, this value reverts to `user:{emailid}` and
            the recovered user retains the role in the binding. *
            `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
            (plus unique identifier) representing a service account that has
            been recently deleted. For example,
            `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
            If the service account is undeleted, this value reverts to
            `serviceAccount:{emailid}` and the undeleted service account retains
            the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:
            An email address (plus unique identifier) representing a Google
            group that has been recently deleted. For example,
            `admins@example.com?uid=123456789012345678901`. If the group is
            recovered, this value reverts to `group:{emailid}` and the recovered
            group retains the role in the binding. *
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            Deleted single identity in a workforce identity pool. For example,
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
          type: array
          items:
            type: string
        condition:
          description: >-
            The condition that is associated with this binding. If the condition
            evaluates to `true`, then this binding applies to the current
            request. If the condition evaluates to `false`, then this binding
            does not apply to the current request. However, a different role
            binding might grant the same role to one or more of the principals
            in this binding. To learn which resources support conditions in
            their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          $ref: '#/components/schemas/Expr'
    Expr:
      id: Expr
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      type: object
      properties:
        expression:
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
          type: string
        title:
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
        description:
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
          type: string
        location:
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
          type: string
    AuditConfig:
      id: AuditConfig
      description: >-
        Specifies the audit configuration for a service. The configuration
        determines which permission types are logged, and what identities, if
        any, are exempted from logging. An AuditConfig must have one or more
        AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
        specific service, the union of the two AuditConfigs is used for that
        service: the log_types specified in each AuditConfig are enabled, and
        the exempted_members in each AuditLogConfig are exempted. Example Policy
        with multiple AuditConfigs: { "audit_configs": [ { "service":
        "allServices", "audit_log_configs": [ { "log_type": "DATA_READ",
        "exempted_members": [ "user:jose@example.com" ] }, { "log_type":
        "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service":
        "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type":
        "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [
        "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy
        enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts
        `jose@example.com` from DATA_READ logging, and `aliya@example.com` from
        DATA_WRITE logging.
      type: object
      properties:
        service:
          description: >-
            Specifies a service that will be enabled for audit logging. For
            example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
          type: string
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          type: array
          items:
            $ref: '#/components/schemas/AuditLogConfig'
    AuditLogConfig:
      id: AuditLogConfig
      description: >-
        Provides the configuration for logging a type of permissions. Example: {
        "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
        "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This
        enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        jose@example.com from DATA_READ logging.
      type: object
      properties:
        logType:
          description: The log type that this config enables.
          type: string
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
        exemptedMembers:
          description: >-
            Specifies the identities that do not cause logging for this type of
            permission. Follows the same format of Binding.members.
          type: array
          items:
            type: string
    SetIamPolicyRequest:
      id: SetIamPolicyRequest
      description: Request message for `SetIamPolicy` method.
      type: object
      properties:
        policy:
          description: >-
            REQUIRED: The complete policy to be applied to the `resource`. The
            size of the policy is limited to a few 10s of KB. An empty policy is
            a valid policy but certain Google Cloud services (such as Projects)
            might reject them.
          $ref: '#/components/schemas/Policy'
        updateMask:
          description: >-
            OPTIONAL: A FieldMask specifying which fields of the policy to
            modify. Only the fields in the mask will be modified. If no mask is
            provided, the following default mask is used: `paths: "bindings,
            etag"`
          type: string
          format: google-fieldmask
    TestIamPermissionsRequest:
      id: TestIamPermissionsRequest
      description: Request message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          description: >-
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as `*` or `storage.*`) are not allowed. For more
            information see [IAM
            Overview](https://cloud.google.com/iam/docs/overview#permissions).
          type: array
          items:
            type: string
    TestIamPermissionsResponse:
      id: TestIamPermissionsResponse
      description: Response message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          description: >-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          type: array
          items:
            type: string
    ListHotTabletsResponse:
      id: ListHotTabletsResponse
      description: Response message for BigtableInstanceAdmin.ListHotTablets.
      type: object
      properties:
        hotTablets:
          description: >-
            List of hot tablets in the tables of the requested cluster that fall
            within the requested time range. Hot tablets are ordered by node cpu
            usage percent. If there are multiple hot tablets that correspond to
            the same tablet within a 15-minute interval, only the hot tablet
            with the highest node cpu usage will be included in the response.
          type: array
          items:
            $ref: '#/components/schemas/HotTablet'
        nextPageToken:
          description: >-
            Set if not all hot tablets could be returned in a single response.
            Pass this value to `page_token` in another request to get the next
            page of results.
          type: string
    HotTablet:
      id: HotTablet
      description: >-
        A tablet is a defined by a start and end key and is explained in
        https://cloud.google.com/bigtable/docs/overview#architecture and
        https://cloud.google.com/bigtable/docs/performance#optimization. A Hot
        tablet is a tablet that exhibits high average cpu usage during the time
        interval from start time to end time.
      type: object
      properties:
        name:
          description: >-
            The unique name of the hot tablet. Values are of the form
            `projects/{project}/instances/{instance}/clusters/{cluster}/hotTablets/[a-zA-Z0-9_-]*`.
          type: string
        tableName:
          description: >-
            Name of the table that contains the tablet. Values are of the form
            `projects/{project}/instances/{instance}/tables/_a-zA-Z0-9*`.
          type: string
        startTime:
          description: Output only. The start time of the hot tablet.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The end time of the hot tablet.
          readOnly: true
          type: string
          format: google-datetime
        startKey:
          description: Tablet Start Key (inclusive).
          type: string
        endKey:
          description: Tablet End Key (inclusive).
          type: string
        nodeCpuUsagePercent:
          description: >-
            Output only. The average CPU usage spent by a node on this tablet
            over the start_time to end_time time range. The percentage is the
            amount of CPU used by the node to serve the tablet, from 0% (tablet
            was not interacted with) to 100% (the node spent all cycles serving
            the hot tablet).
          readOnly: true
          type: number
          format: float
    LogicalView:
      id: LogicalView
      description: A SQL logical view object that can be referenced in SQL queries.
      type: object
      properties:
        name:
          description: >-
            Identifier. The unique name of the logical view. Format:
            `projects/{project}/instances/{instance}/logicalViews/{logical_view}`
          type: string
        query:
          description: Required. The logical view's select query.
          type: string
        etag:
          description: >-
            Optional. The etag for this logical view. This may be sent on update
            requests to ensure that the client has an up-to-date value before
            proceeding. The server returns an ABORTED error on a mismatched
            etag.
          type: string
        deletionProtection:
          description: >-
            Optional. Set to true to make the LogicalView protected against
            deletion.
          type: boolean
    ListLogicalViewsResponse:
      id: ListLogicalViewsResponse
      description: Response message for BigtableInstanceAdmin.ListLogicalViews.
      type: object
      properties:
        logicalViews:
          description: The list of requested logical views.
          type: array
          items:
            $ref: '#/components/schemas/LogicalView'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    MaterializedView:
      id: MaterializedView
      description: A materialized view object that can be referenced in SQL queries.
      type: object
      properties:
        name:
          description: >-
            Identifier. The unique name of the materialized view. Format:
            `projects/{project}/instances/{instance}/materializedViews/{materialized_view}`
          type: string
        query:
          description: Required. Immutable. The materialized view's select query.
          type: string
        etag:
          description: >-
            Optional. The etag for this materialized view. This may be sent on
            update requests to ensure that the client has an up-to-date value
            before proceeding. The server returns an ABORTED error on a
            mismatched etag.
          type: string
        deletionProtection:
          description: Set to true to make the MaterializedView protected against deletion.
          type: boolean
    ListMaterializedViewsResponse:
      id: ListMaterializedViewsResponse
      description: Response message for BigtableInstanceAdmin.ListMaterializedViews.
      type: object
      properties:
        materializedViews:
          description: The list of requested materialized views.
          type: array
          items:
            $ref: '#/components/schemas/MaterializedView'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    CreateTableRequest:
      id: CreateTableRequest
      description: >-
        Request message for
        google.bigtable.admin.v2.BigtableTableAdmin.CreateTable
      type: object
      properties:
        tableId:
          description: >-
            Required. The name by which the new table should be referred to
            within the parent instance, e.g., `foobar` rather than
            `{parent}/tables/foobar`. Maximum 50 characters.
          type: string
        table:
          description: Required. The Table to create.
          $ref: '#/components/schemas/Table'
        initialSplits:
          description: >-
            The optional list of row keys that will be used to initially split
            the table into several tablets (tablets are similar to HBase
            regions). Given two split keys, `s1` and `s2`, three tablets will be
            created, spanning the key ranges: `[, s1), [s1, s2), [s2, )`.
            Example: * Row keys := `["a", "apple", "custom", "customer_1",
            "customer_2",` `"other", "zz"]` * initial_split_keys := `["apple",
            "customer_1", "customer_2", "other"]` * Key assignment: - Tablet 1
            `[, apple) => {"a"}.` - Tablet 2 `[apple, customer_1) => {"apple",
            "custom"}.` - Tablet 3 `[customer_1, customer_2) => {"customer_1"}.`
            - Tablet 4 `[customer_2, other) => {"customer_2"}.` - Tablet 5
            `[other, ) => {"other", "zz"}.`
          type: array
          items:
            $ref: '#/components/schemas/Split'
    Table:
      id: Table
      description: >-
        A collection of user data indexed by row, column, and timestamp. Each
        table is served using the resources of its parent cluster.
      type: object
      properties:
        name:
          description: >-
            The unique name of the table. Values are of the form
            `projects/{project}/instances/{instance}/tables/_a-zA-Z0-9*`. Views:
            `NAME_ONLY`, `SCHEMA_VIEW`, `REPLICATION_VIEW`, `STATS_VIEW`, `FULL`
          type: string
        clusterStates:
          description: >-
            Output only. Map from cluster ID to per-cluster table state. If it
            could not be determined whether or not the table has data in a
            particular cluster (for example, if its zone is unavailable), then
            there will be an entry for the cluster with UNKNOWN
            `replication_status`. Views: `REPLICATION_VIEW`, `ENCRYPTION_VIEW`,
            `FULL`
          readOnly: true
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ClusterState'
        columnFamilies:
          description: >-
            The column families configured for this table, mapped by column
            family ID. Views: `SCHEMA_VIEW`, `STATS_VIEW`, `FULL`
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ColumnFamily'
        granularity:
          description: >-
            Immutable. The granularity (i.e. `MILLIS`) at which timestamps are
            stored in this table. Timestamps not matching the granularity will
            be rejected. If unspecified at creation time, the value will be set
            to `MILLIS`. Views: `SCHEMA_VIEW`, `FULL`.
          type: string
          enumDescriptions:
            - >-
              The user did not specify a granularity. Should not be returned.
              When specified during table creation, MILLIS will be used.
            - The table keeps data versioned at a granularity of 1ms.
          enum:
            - TIMESTAMP_GRANULARITY_UNSPECIFIED
            - MILLIS
        restoreInfo:
          description: >-
            Output only. If this table was restored from another data source
            (e.g. a backup), this field will be populated with information about
            the restore.
          readOnly: true
          $ref: '#/components/schemas/RestoreInfo'
        changeStreamConfig:
          description: >-
            If specified, enable the change stream on this table. Otherwise, the
            change stream is disabled and the change stream is not retained.
          $ref: '#/components/schemas/ChangeStreamConfig'
        deletionProtection:
          description: >-
            Set to true to make the table protected against data loss. i.e.
            deleting the following resources through Admin APIs are prohibited:
            * The table. * The column families in the table. * The instance
            containing the table. Note one can still delete the data stored in
            the table through Data APIs.
          type: boolean
        stats:
          description: >-
            Output only. Only available with STATS_VIEW, this includes summary
            statistics about the entire table contents. For statistics about a
            specific column family, see ColumnFamilyStats in the mapped
            ColumnFamily collection above.
          readOnly: true
          $ref: '#/components/schemas/TableStats'
        automatedBackupPolicy:
          description: >-
            If specified, automated backups are enabled for this table.
            Otherwise, automated backups are disabled.
          $ref: '#/components/schemas/AutomatedBackupPolicy'
        tieredStorageConfig:
          description: >-
            Rules to specify what data is stored in each storage tier. Different
            tiers store data differently, providing different trade-offs between
            cost and performance. Different parts of a table can be stored
            separately on different tiers. If a config is specified, tiered
            storage is enabled for this table. Otherwise, tiered storage is
            disabled. Only SSD instances can configure tiered storage.
          $ref: '#/components/schemas/TieredStorageConfig'
        rowKeySchema:
          description: >-
            The row key schema for this table. The schema is used to decode the
            raw row key bytes into a structured format. The order of field
            declarations in this schema is important, as it reflects how the raw
            row key bytes are structured. Currently, this only affects how the
            key is read via a GoogleSQL query from the ExecuteQuery API. For a
            SQL query, the _key column is still read as raw bytes. But queries
            can reference the key fields by name, which will be decoded from
            _key using provided type and encoding. Queries that reference key
            fields will fail if they encounter an invalid row key. For example,
            if _key = "some_id#2024-04-30#\x00\x13\x00\xf3" with the following
            schema: { fields { field_name: "id" type { string { encoding:
            utf8_bytes {} } } } fields { field_name: "date" type { string {
            encoding: utf8_bytes {} } } } fields { field_name: "product_code"
            type { int64 { encoding: big_endian_bytes {} } } } encoding {
            delimited_bytes { delimiter: "#" } } } The decoded key parts would
            be: id = "some_id", date = "2024-04-30", product_code = 1245427 The
            query "SELECT _key, product_code FROM table" will return two
            columns: /------------------------------------------------------\ |
            _key | product_code | |
            --------------------------------------|--------------| |
            "some_id#2024-04-30#\x00\x13\x00\xf3" | 1245427 |
            \------------------------------------------------------/ The schema
            has the following invariants: (1) The decoded field values are
            order-preserved. For read, the field values will be decoded in
            sorted mode from the raw bytes. (2) Every field in the schema must
            specify a non-empty name. (3) Every field must specify a type with
            an associated encoding. The type is limited to scalar types only:
            Array, Map, Aggregate, and Struct are not allowed. (4) The field
            names must not collide with existing column family names and
            reserved keywords "_key" and "_timestamp". The following update
            operations are allowed for row_key_schema: - Update from an empty
            schema to a new schema. - Remove the existing schema. This operation
            requires setting the `ignore_warnings` flag to `true`, since it
            might be a backward incompatible change. Without the flag, the
            update request will fail with an INVALID_ARGUMENT error. Any other
            row key schema update operation (e.g. update existing schema columns
            names or types) is currently unsupported.
          $ref: '#/components/schemas/GoogleBigtableAdminV2TypeStruct'
    ClusterState:
      id: ClusterState
      description: The state of a table's data in a particular cluster.
      type: object
      properties:
        replicationState:
          description: Output only. The state of replication for the table in this cluster.
          readOnly: true
          type: string
          enumDescriptions:
            - The replication state of the table is unknown in this cluster.
            - >-
              The cluster was recently created, and the table must finish
              copying over pre-existing data from other clusters before it can
              begin receiving live replication updates and serving Data API
              requests.
            - >-
              The table is temporarily unable to serve Data API requests from
              this cluster due to planned internal maintenance.
            - >-
              The table is temporarily unable to serve Data API requests from
              this cluster due to unplanned or emergency maintenance.
            - >-
              The table can serve Data API requests from this cluster. Depending
              on replication delay, reads may not immediately reflect the state
              of the table in other clusters.
            - >-
              The table is fully created and ready for use after a restore, and
              is being optimized for performance. When optimizations are
              complete, the table will transition to `READY` state.
          enum:
            - STATE_NOT_KNOWN
            - INITIALIZING
            - PLANNED_MAINTENANCE
            - UNPLANNED_MAINTENANCE
            - READY
            - READY_OPTIMIZING
        encryptionInfo:
          description: >-
            Output only. The encryption information for the table in this
            cluster. If the encryption key protecting this resource is customer
            managed, then its version can be rotated in Cloud Key Management
            Service (Cloud KMS). The primary version of the key and its status
            will be reflected here when changes propagate from Cloud KMS.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/EncryptionInfo'
    EncryptionInfo:
      id: EncryptionInfo
      description: >-
        Encryption information for a given resource. If this resource is
        protected with customer managed encryption, the in-use Cloud Key
        Management Service (Cloud KMS) key version is specified along with its
        status.
      type: object
      properties:
        encryptionType:
          description: Output only. The type of encryption used to protect this resource.
          readOnly: true
          type: string
          enumDescriptions:
            - >-
              Encryption type was not specified, though data at rest remains
              encrypted.
            - >-
              The data backing this resource is encrypted at rest with a key
              that is fully managed by Google. No key version or status will be
              populated. This is the default state.
            - >-
              The data backing this resource is encrypted at rest with a key
              that is managed by the customer. The in-use version of the key and
              its status are populated for CMEK-protected tables. CMEK-protected
              backups are pinned to the key version that was in use at the time
              the backup was taken. This key version is populated but its status
              is not tracked and is reported as `UNKNOWN`.
          enum:
            - ENCRYPTION_TYPE_UNSPECIFIED
            - GOOGLE_DEFAULT_ENCRYPTION
            - CUSTOMER_MANAGED_ENCRYPTION
        encryptionStatus:
          description: >-
            Output only. The status of encrypt/decrypt calls on underlying data
            for this resource. Regardless of status, the existing data is always
            encrypted at rest.
          readOnly: true
          $ref: '#/components/schemas/Status'
        kmsKeyVersion:
          description: >-
            Output only. The version of the Cloud KMS key specified in the
            parent cluster that is in use for the data underlying this table.
          readOnly: true
          type: string
    ColumnFamily:
      id: ColumnFamily
      description: A set of columns within a table which share a common configuration.
      type: object
      properties:
        gcRule:
          description: >-
            Garbage collection rule specified as a protobuf. Must serialize to
            at most 500 bytes. NOTE: Garbage collection executes
            opportunistically in the background, and so it's possible for reads
            to return a cell even if it matches the active GC expression for its
            family.
          $ref: '#/components/schemas/GcRule'
        stats:
          description: >-
            Output only. Only available with STATS_VIEW, this includes summary
            statistics about column family contents. For statistics over an
            entire table, see TableStats above.
          readOnly: true
          $ref: '#/components/schemas/ColumnFamilyStats'
        valueType:
          description: >-
            The type of data stored in each of this family's cell values,
            including its full encoding. If omitted, the family only serves raw
            untyped bytes. For now, only the `Aggregate` type is supported.
            `Aggregate` can only be set at family creation and is immutable
            afterwards. If `value_type` is `Aggregate`, written data must be
            compatible with: * `value_type.input_type` for `AddInput` mutations
          $ref: '#/components/schemas/Type'
    GcRule:
      id: GcRule
      description: Rule for determining which cells to delete during garbage collection.
      type: object
      properties:
        maxNumVersions:
          description: Delete all cells in a column except the most recent N.
          type: integer
          format: int32
        maxAge:
          description: >-
            Delete cells in a column older than the given age. Values must be at
            least one millisecond, and will be truncated to microsecond
            granularity.
          type: string
          format: google-duration
        intersection:
          description: Delete cells that would be deleted by every nested rule.
          $ref: '#/components/schemas/Intersection'
        union:
          description: Delete cells that would be deleted by any nested rule.
          $ref: '#/components/schemas/Union'
    Intersection:
      id: Intersection
      description: A GcRule which deletes cells matching all of the given rules.
      type: object
      properties:
        rules:
          description: >-
            Only delete cells which would be deleted by every element of
            `rules`.
          type: array
          items:
            $ref: '#/components/schemas/GcRule'
    Union:
      id: Union
      description: A GcRule which deletes cells matching any of the given rules.
      type: object
      properties:
        rules:
          description: Delete cells which would be deleted by any element of `rules`.
          type: array
          items:
            $ref: '#/components/schemas/GcRule'
    ColumnFamilyStats:
      id: ColumnFamilyStats
      description: >-
        Approximate statistics related to a single column family within a table.
        This information may change rapidly, interpreting these values at a
        point in time may already preset out-of-date information. Everything
        below is approximate, unless otherwise specified.
      type: object
      properties:
        averageColumnsPerRow:
          description: >-
            How many column qualifiers are present in this column family,
            averaged over all rows in the table. e.g. For column family "family"
            in a table with 3 rows: * A row with cells in "family:col" and
            "other:col" (1 column in "family") * A row with cells in
            "family:col", "family:other_col", and "other:data" (2 columns in
            "family") * A row with cells in "other:col" (0 columns in "family",
            "family" not present) would report (1 + 2 + 0)/3 = 1.5 in this
            field.
          type: number
          format: double
        averageCellsPerColumn:
          description: >-
            How many cells are present per column qualifier in this column
            family, averaged over all rows containing any column in the column
            family. e.g. For column family "family" in a table with 3 rows: * A
            row with 3 cells in "family:col" and 1 cell in "other:col" (3 cells
            / 1 column in "family") * A row with 1 cell in "family:col", 7 cells
            in "family:other_col", and 7 cells in "other:data" (8 cells / 2
            columns in "family") * A row with 3 cells in "other:col" (0 columns
            in "family", "family" not present) would report (3 + 8 + 0)/(1 + 2 +
            0) = 3.66 in this field.
          type: number
          format: double
        logicalDataBytes:
          description: >-
            How much space the data in the column family occupies. This is
            roughly how many bytes would be needed to read the contents of the
            entire column family (e.g. by streaming all contents out).
          type: string
          format: int64
    Type:
      id: Type
      description: >-
        `Type` represents the type of data that is written to, read from, or
        stored in Bigtable. It is heavily based on the GoogleSQL standard to
        help maintain familiarity and consistency across products and features.
        For compatibility with Bigtable's existing untyped APIs, each `Type`
        includes an `Encoding` which describes how to convert to or from the
        underlying data. Each encoding can operate in one of two modes: -
        Sorted: In this mode, Bigtable guarantees that `Encode(X) <= Encode(Y)`
        if and only if `X <= Y`. This is useful anywhere sort order is
        important, for example when encoding keys. - Distinct: In this mode,
        Bigtable guarantees that if `X != Y` then `Encode(X) != Encode(Y)`.
        However, the converse is not guaranteed. For example, both "{'foo': '1',
        'bar': '2'}" and "{'bar': '2', 'foo': '1'}" are valid encodings of the
        same JSON value. The API clearly documents which mode is used wherever
        an encoding can be configured. Each encoding also documents which values
        are supported in which modes. For example, when encoding INT64 as a
        numeric STRING, negative numbers cannot be encoded in sorted mode. This
        is because `INT64(1) > INT64(-1)`, but `STRING("-00001") >
        STRING("00001")`.
      type: object
      properties:
        bytesType:
          description: Bytes
          $ref: '#/components/schemas/GoogleBigtableAdminV2TypeBytes'
        stringType:
          description: String
          $ref: '#/components/schemas/GoogleBigtableAdminV2TypeString'
        int64Type:
          description: Int64
          $ref: '#/components/schemas/GoogleBigtableAdminV2TypeInt64'
        float32Type:
          description: Float32
          $ref: '#/components/schemas/GoogleBigtableAdminV2TypeFloat32'
        float64Type:
          description: Float64
          $ref: '#/components/schemas/GoogleBigtableAdminV2TypeFloat64'
        boolType:
          description: Bool
          $ref: '#/components/schemas/GoogleBigtableAdminV2TypeBool'
        timestampType:
          description: Timestamp
          $ref: '#/components/schemas/GoogleBigtableAdminV2TypeTimestamp'
        dateType:
          description: Date
          $ref: '#/components/schemas/GoogleBigtableAdminV2TypeDate'
        aggregateType:
          description: Aggregate
          $ref: '#/components/schemas/GoogleBigtableAdminV2TypeAggregate'
        structType:
          description: Struct
          $ref: '#/components/schemas/GoogleBigtableAdminV2TypeStruct'
        arrayType:
          description: Array
          $ref: '#/components/schemas/GoogleBigtableAdminV2TypeArray'
        mapType:
          description: Map
          $ref: '#/components/schemas/GoogleBigtableAdminV2TypeMap'
        protoType:
          description: Proto
          $ref: '#/components/schemas/GoogleBigtableAdminV2TypeProto'
        enumType:
          description: Enum
          $ref: '#/components/schemas/GoogleBigtableAdminV2TypeEnum'
    GoogleBigtableAdminV2TypeBytes:
      id: GoogleBigtableAdminV2TypeBytes
      description: Bytes Values of type `Bytes` are stored in `Value.bytes_value`.
      type: object
      properties:
        encoding:
          description: The encoding to use when converting to or from lower level types.
          $ref: '#/components/schemas/GoogleBigtableAdminV2TypeBytesEncoding'
    GoogleBigtableAdminV2TypeBytesEncoding:
      id: GoogleBigtableAdminV2TypeBytesEncoding
      description: Rules used to convert to or from lower level types.
      type: object
      properties:
        raw:
          description: Use `Raw` encoding.
          $ref: '#/components/schemas/GoogleBigtableAdminV2TypeBytesEncodingRaw'
    GoogleBigtableAdminV2TypeBytesEncodingRaw:
      id: GoogleBigtableAdminV2TypeBytesEncodingRaw
      description: >-
        Leaves the value as-is. Sorted mode: all values are supported. Distinct
        mode: all values are supported.
      type: object
      properties:
        escapeNulls:
          description: >-
            If set, allows NULL values to be encoded as the empty string "". The
            actual empty string, or any value which only contains the null byte
            0x00, has one more null byte appended.
          type: boolean
    GoogleBigtableAdminV2TypeString:
      id: GoogleBigtableAdminV2TypeString
      description: String Values of type `String` are stored in `Value.string_value`.
      type: object
      properties:
        encoding:
          description: The encoding to use when converting to or from lower level types.
          $ref: '#/components/schemas/GoogleBigtableAdminV2TypeStringEncoding'
    GoogleBigtableAdminV2TypeStringEncoding:
      id: GoogleBigtableAdminV2TypeStringEncoding
      description: Rules used to convert to or from lower level types.
      type: object
      properties:
        utf8Raw:
          description: 'Deprecated: if set, converts to an empty `utf8_bytes`.'
          deprecated: true
          $ref: '#/components/schemas/GoogleBigtableAdminV2TypeStringEncodingUtf8Raw'
        utf8Bytes:
          description: Use `Utf8Bytes` encoding.
          $ref: >-
            #/components/schemas/GoogleBigtableAdminV2TypeStringEncodingUtf8Bytes
    GoogleBigtableAdminV2TypeStringEncodingUtf8Raw:
      id: GoogleBigtableAdminV2TypeStringEncodingUtf8Raw
      deprecated: true
      description: 'Deprecated: prefer the equivalent `Utf8Bytes`.'
      type: object
      properties: {}
    GoogleBigtableAdminV2TypeStringEncodingUtf8Bytes:
      id: GoogleBigtableAdminV2TypeStringEncodingUtf8Bytes
      description: >-
        UTF-8 encoding. Sorted mode: - All values are supported. - Code point
        order is preserved. Distinct mode: all values are supported. Compatible
        with: - BigQuery `TEXT` encoding - HBase `Bytes.toBytes` - Java
        `String#getBytes(StandardCharsets.UTF_8)`
      type: object
      properties:
        nullEscapeChar:
          description: >-
            Single-character escape sequence used to support NULL values. If
            set, allows NULL values to be encoded as the empty string "". The
            actual empty string, or any value where every character equals
            `null_escape_char`, has one more `null_escape_char` appended. If
            `null_escape_char` is set and does not equal the ASCII null
            character 0x00, then the encoding will not support sorted mode. .
          type: string
    GoogleBigtableAdminV2TypeInt64:
      id: GoogleBigtableAdminV2TypeInt64
      description: Int64 Values of type `Int64` are stored in `Value.int_value`.
      type: object
      properties:
        encoding:
          description: The encoding to use when converting to or from lower level types.
          $ref: '#/components/schemas/GoogleBigtableAdminV2TypeInt64Encoding'
    GoogleBigtableAdminV2TypeInt64Encoding:
      id: GoogleBigtableAdminV2TypeInt64Encoding
      description: Rules used to convert to or from lower level types.
      type: object
      properties:
        bigEndianBytes:
          description: Use `BigEndianBytes` encoding.
          $ref: >-
            #/components/schemas/GoogleBigtableAdminV2TypeInt64EncodingBigEndianBytes
        orderedCodeBytes:
          description: Use `OrderedCodeBytes` encoding.
          $ref: >-
            #/components/schemas/GoogleBigtableAdminV2TypeInt64EncodingOrderedCodeBytes
    GoogleBigtableAdminV2TypeInt64EncodingBigEndianBytes:
      id: GoogleBigtableAdminV2TypeInt64EncodingBigEndianBytes
      description: >-
        Encodes the value as an 8-byte big-endian two's complement value. Sorted
        mode: non-negative values are supported. Distinct mode: all values are
        supported. Compatible with: - BigQuery `BINARY` encoding - HBase
        `Bytes.toBytes` - Java `ByteBuffer.putLong()` with
        `ByteOrder.BIG_ENDIAN`
      type: object
      properties:
        bytesType:
          description: 'Deprecated: ignored if set.'
          deprecated: true
          $ref: '#/components/schemas/GoogleBigtableAdminV2TypeBytes'
    GoogleBigtableAdminV2TypeInt64EncodingOrderedCodeBytes:
      id: GoogleBigtableAdminV2TypeInt64EncodingOrderedCodeBytes
      description: >-
        Encodes the value in a variable length binary format of up to 10 bytes.
        Values that are closer to zero use fewer bytes. Sorted mode: all values
        are supported. Distinct mode: all values are supported.
      type: object
      properties: {}
    GoogleBigtableAdminV2TypeFloat32:
      id: GoogleBigtableAdminV2TypeFloat32
      description: Float32 Values of type `Float32` are stored in `Value.float_value`.
      type: object
      properties: {}
    GoogleBigtableAdminV2TypeFloat64:
      id: GoogleBigtableAdminV2TypeFloat64
      description: Float64 Values of type `Float64` are stored in `Value.float_value`.
      type: object
      properties: {}
    GoogleBigtableAdminV2TypeBool:
      id: GoogleBigtableAdminV2TypeBool
      description: bool Values of type `Bool` are stored in `Value.bool_value`.
      type: object
      properties: {}
    GoogleBigtableAdminV2TypeTimestamp:
      id: GoogleBigtableAdminV2TypeTimestamp
      description: >-
        Timestamp Values of type `Timestamp` are stored in
        `Value.timestamp_value`.
      type: object
      properties:
        encoding:
          description: The encoding to use when converting to or from lower level types.
          $ref: '#/components/schemas/GoogleBigtableAdminV2TypeTimestampEncoding'
    GoogleBigtableAdminV2TypeTimestampEncoding:
      id: GoogleBigtableAdminV2TypeTimestampEncoding
      description: Rules used to convert to or from lower level types.
      type: object
      properties:
        unixMicrosInt64:
          description: >-
            Encodes the number of microseconds since the Unix epoch using the
            given `Int64` encoding. Values must be microsecond-aligned.
            Compatible with: - Java `Instant.truncatedTo()` with
            `ChronoUnit.MICROS`
          $ref: '#/components/schemas/GoogleBigtableAdminV2TypeInt64Encoding'
    GoogleBigtableAdminV2TypeDate:
      id: GoogleBigtableAdminV2TypeDate
      description: Date Values of type `Date` are stored in `Value.date_value`.
      type: object
      properties: {}
    GoogleBigtableAdminV2TypeAggregate:
      id: GoogleBigtableAdminV2TypeAggregate
      description: >-
        A value that combines incremental updates into a summarized value. Data
        is never directly written or read using type `Aggregate`. Writes provide
        either the `input_type` or `state_type`, and reads always return the
        `state_type` .
      type: object
      properties:
        inputType:
          description: >-
            Type of the inputs that are accumulated by this `Aggregate`. Use
            `AddInput` mutations to accumulate new inputs.
          $ref: '#/components/schemas/Type'
        stateType:
          description: >-
            Output only. Type that holds the internal accumulator state for the
            `Aggregate`. This is a function of the `input_type` and `aggregator`
            chosen.
          readOnly: true
          $ref: '#/components/schemas/Type'
        sum:
          description: Sum aggregator.
          $ref: '#/components/schemas/GoogleBigtableAdminV2TypeAggregateSum'
        hllppUniqueCount:
          description: HyperLogLogPlusPlusUniqueCount aggregator.
          $ref: >-
            #/components/schemas/GoogleBigtableAdminV2TypeAggregateHyperLogLogPlusPlusUniqueCount
        max:
          description: Max aggregator.
          $ref: '#/components/schemas/GoogleBigtableAdminV2TypeAggregateMax'
        min:
          description: Min aggregator.
          $ref: '#/components/schemas/GoogleBigtableAdminV2TypeAggregateMin'
    GoogleBigtableAdminV2TypeAggregateSum:
      id: GoogleBigtableAdminV2TypeAggregateSum
      description: >-
        Computes the sum of the input values. Allowed input: `Int64` State: same
        as input
      type: object
      properties: {}
    GoogleBigtableAdminV2TypeAggregateHyperLogLogPlusPlusUniqueCount:
      id: GoogleBigtableAdminV2TypeAggregateHyperLogLogPlusPlusUniqueCount
      description: >-
        Computes an approximate unique count over the input values. When using
        raw data as input, be careful to use a consistent encoding. Otherwise
        the same value encoded differently could count more than once, or two
        distinct values could count as identical. Input: Any, or omit for Raw
        State: TBD Special state conversions: `Int64` (the unique count
        estimate)
      type: object
      properties: {}
    GoogleBigtableAdminV2TypeAggregateMax:
      id: GoogleBigtableAdminV2TypeAggregateMax
      description: >-
        Computes the max of the input values. Allowed input: `Int64` State: same
        as input
      type: object
      properties: {}
    GoogleBigtableAdminV2TypeAggregateMin:
      id: GoogleBigtableAdminV2TypeAggregateMin
      description: >-
        Computes the min of the input values. Allowed input: `Int64` State: same
        as input
      type: object
      properties: {}
    GoogleBigtableAdminV2TypeStruct:
      id: GoogleBigtableAdminV2TypeStruct
      description: >-
        A structured data value, consisting of fields which map to dynamically
        typed values. Values of type `Struct` are stored in `Value.array_value`
        where entries are in the same order and number as `field_types`.
      type: object
      properties:
        fields:
          description: The names and types of the fields in this struct.
          type: array
          items:
            $ref: '#/components/schemas/GoogleBigtableAdminV2TypeStructField'
        encoding:
          description: The encoding to use when converting to or from lower level types.
          $ref: '#/components/schemas/GoogleBigtableAdminV2TypeStructEncoding'
    GoogleBigtableAdminV2TypeStructField:
      id: GoogleBigtableAdminV2TypeStructField
      description: A struct field and its type.
      type: object
      properties:
        fieldName:
          description: >-
            The field name (optional). Fields without a `field_name` are
            considered anonymous and cannot be referenced by name.
          type: string
        type:
          description: The type of values in this field.
          $ref: '#/components/schemas/Type'
    GoogleBigtableAdminV2TypeStructEncoding:
      id: GoogleBigtableAdminV2TypeStructEncoding
      description: Rules used to convert to or from lower level types.
      type: object
      properties:
        singleton:
          description: Use `Singleton` encoding.
          $ref: >-
            #/components/schemas/GoogleBigtableAdminV2TypeStructEncodingSingleton
        delimitedBytes:
          description: Use `DelimitedBytes` encoding.
          $ref: >-
            #/components/schemas/GoogleBigtableAdminV2TypeStructEncodingDelimitedBytes
        orderedCodeBytes:
          description: User `OrderedCodeBytes` encoding.
          $ref: >-
            #/components/schemas/GoogleBigtableAdminV2TypeStructEncodingOrderedCodeBytes
    GoogleBigtableAdminV2TypeStructEncodingSingleton:
      id: GoogleBigtableAdminV2TypeStructEncodingSingleton
      description: >-
        Uses the encoding of `fields[0].type` as-is. Only valid if `fields.size
        == 1`.
      type: object
      properties: {}
    GoogleBigtableAdminV2TypeStructEncodingDelimitedBytes:
      id: GoogleBigtableAdminV2TypeStructEncodingDelimitedBytes
      description: >-
        Fields are encoded independently and concatenated with a configurable
        `delimiter` in between. A struct with no fields defined is encoded as a
        single `delimiter`. Sorted mode: - Fields are encoded in sorted mode. -
        Encoded field values must not contain any bytes <= `delimiter[0]` -
        Element-wise order is preserved: `A < B` if `A[0] < B[0]`, or if `A[0]
        == B[0] && A[1] < B[1]`, etc. Strict prefixes sort first. Distinct mode:
        - Fields are encoded in distinct mode. - Encoded field values must not
        contain `delimiter[0]`.
      type: object
      properties:
        delimiter:
          description: >-
            Byte sequence used to delimit concatenated fields. The delimiter
            must contain at least 1 character and at most 50 characters.
          type: string
          format: byte
    GoogleBigtableAdminV2TypeStructEncodingOrderedCodeBytes:
      id: GoogleBigtableAdminV2TypeStructEncodingOrderedCodeBytes
      description: >-
        Fields are encoded independently and concatenated with the fixed byte
        pair {0x00, 0x01} in between. Any null (0x00) byte in an encoded field
        is replaced by the fixed byte pair {0x00, 0xFF}. Fields that encode to
        the empty string "" have special handling: - If *every* field encodes to
        "", or if the STRUCT has no fields defined, then the STRUCT is encoded
        as the fixed byte pair {0x00, 0x00}. - Otherwise, the STRUCT only
        encodes until the last non-empty field, omitting any trailing empty
        fields. Any empty fields that aren't omitted are replaced with the fixed
        byte pair {0x00, 0x00}. Examples: - STRUCT() -> "\00\00" - STRUCT("") ->
        "\00\00" - STRUCT("", "") -> "\00\00" - STRUCT("", "B") -> "\00\00" +
        "\00\01" + "B" - STRUCT("A", "") -> "A" - STRUCT("", "B", "") ->
        "\00\00" + "\00\01" + "B" - STRUCT("A", "", "C") -> "A" + "\00\01" +
        "\00\00" + "\00\01" + "C" Since null bytes are always escaped, this
        encoding can cause size blowup for encodings like `Int64.BigEndianBytes`
        that are likely to produce many such bytes. Sorted mode: - Fields are
        encoded in sorted mode. - All values supported by the field encodings
        are allowed - Element-wise order is preserved: `A < B` if `A[0] < B[0]`,
        or if `A[0] == B[0] && A[1] < B[1]`, etc. Strict prefixes sort first.
        Distinct mode: - Fields are encoded in distinct mode. - All values
        supported by the field encodings are allowed.
      type: object
      properties: {}
    GoogleBigtableAdminV2TypeArray:
      id: GoogleBigtableAdminV2TypeArray
      description: >-
        An ordered list of elements of a given type. Values of type `Array` are
        stored in `Value.array_value`.
      type: object
      properties:
        elementType:
          description: The type of the elements in the array. This must not be `Array`.
          $ref: '#/components/schemas/Type'
    GoogleBigtableAdminV2TypeMap:
      id: GoogleBigtableAdminV2TypeMap
      description: >-
        A mapping of keys to values of a given type. Values of type `Map` are
        stored in a `Value.array_value` where each entry is another
        `Value.array_value` with two elements (the key and the value, in that
        order). Normally encoded Map values won't have repeated keys, however,
        clients are expected to handle the case in which they do. If the same
        key appears multiple times, the _last_ value takes precedence.
      type: object
      properties:
        keyType:
          description: >-
            The type of a map key. Only `Bytes`, `String`, and `Int64` are
            allowed as key types.
          $ref: '#/components/schemas/Type'
        valueType:
          description: The type of the values in a map.
          $ref: '#/components/schemas/Type'
    GoogleBigtableAdminV2TypeProto:
      id: GoogleBigtableAdminV2TypeProto
      description: >-
        A protobuf message type. Values of type `Proto` are stored in
        `Value.bytes_value`.
      type: object
      properties:
        schemaBundleId:
          description: The ID of the schema bundle that this proto is defined in.
          type: string
        messageName:
          description: >-
            The fully qualified name of the protobuf message, including package.
            In the format of "foo.bar.Message".
          type: string
    GoogleBigtableAdminV2TypeEnum:
      id: GoogleBigtableAdminV2TypeEnum
      description: >-
        A protobuf enum type. Values of type `Enum` are stored in
        `Value.int_value`.
      type: object
      properties:
        schemaBundleId:
          description: The ID of the schema bundle that this enum is defined in.
          type: string
        enumName:
          description: >-
            The fully qualified name of the protobuf enum message, including
            package. In the format of "foo.bar.EnumMessage".
          type: string
    RestoreInfo:
      id: RestoreInfo
      description: Information about a table restore.
      type: object
      properties:
        sourceType:
          description: The type of the restore source.
          type: string
          enumDescriptions:
            - No restore associated.
            - A backup was used as the source of the restore.
          enum:
            - RESTORE_SOURCE_TYPE_UNSPECIFIED
            - BACKUP
        backupInfo:
          description: >-
            Information about the backup used to restore the table. The backup
            may no longer exist.
          $ref: '#/components/schemas/BackupInfo'
    BackupInfo:
      id: BackupInfo
      description: Information about a backup.
      type: object
      properties:
        backup:
          description: Output only. Name of the backup.
          readOnly: true
          type: string
        startTime:
          description: >-
            Output only. The time that the backup was started. Row data in the
            backup will be no older than this timestamp.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: >-
            Output only. This time that the backup was finished. Row data in the
            backup will be no newer than this timestamp.
          readOnly: true
          type: string
          format: google-datetime
        sourceTable:
          description: Output only. Name of the table the backup was created from.
          readOnly: true
          type: string
        sourceBackup:
          description: >-
            Output only. Name of the backup from which this backup was copied.
            If a backup is not created by copying a backup, this field will be
            empty. Values are of the form:
            projects//instances//clusters//backups/
          readOnly: true
          type: string
    ChangeStreamConfig:
      id: ChangeStreamConfig
      description: Change stream configuration.
      type: object
      properties:
        retentionPeriod:
          description: >-
            How long the change stream should be retained. Change stream data
            older than the retention period will not be returned when reading
            the change stream from the table. Values must be at least 1 day and
            at most 7 days, and will be truncated to microsecond granularity.
          type: string
          format: google-duration
    TableStats:
      id: TableStats
      description: >-
        Approximate statistics related to a table. These statistics are
        calculated infrequently, while simultaneously, data in the table can
        change rapidly. Thus the values reported here (e.g. row count) are very
        likely out-of date, even the instant they are received in this API.
        Thus, only treat these values as approximate. IMPORTANT: Everything
        below is approximate, unless otherwise specified.
      type: object
      properties:
        rowCount:
          description: How many rows are in the table.
          type: string
          format: int64
        averageColumnsPerRow:
          description: >-
            How many (column family, column qualifier) combinations are present
            per row in the table, averaged over all rows in the table. e.g. A
            table with 2 rows: * A row with cells in "family:col" and
            "other:col" (2 distinct columns) * A row with cells in "family:col",
            "family:other_col", and "other:data" (3 distinct columns) would
            report (2 + 3)/2 = 2.5 in this field.
          type: number
          format: double
        averageCellsPerColumn:
          description: >-
            How many cells are present per column (column family, column
            qualifier) combinations, averaged over all columns in all rows in
            the table. e.g. A table with 2 rows: * A row with 3 cells in
            "family:col" and 1 cell in "other:col" (4 cells / 2 columns) * A row
            with 1 cell in "family:col", 7 cells in "family:other_col", and 7
            cells in "other:data" (15 cells / 3 columns) would report (4 +
            15)/(2 + 3) = 3.8 in this field.
          type: number
          format: double
        logicalDataBytes:
          description: >-
            This is roughly how many bytes would be needed to read the entire
            table (e.g. by streaming all contents out).
          type: string
          format: int64
    AutomatedBackupPolicy:
      id: AutomatedBackupPolicy
      description: Defines an automated backup policy for a table
      type: object
      properties:
        retentionPeriod:
          description: >-
            Required. How long the automated backups should be retained. Values
            must be at least 3 days and at most 90 days.
          type: string
          format: google-duration
        frequency:
          description: >-
            How frequently automated backups should occur. The only supported
            value at this time is 24 hours. An undefined frequency is treated as
            24 hours.
          type: string
          format: google-duration
    TieredStorageConfig:
      id: TieredStorageConfig
      description: >-
        Config for tiered storage. A valid config must have a valid
        TieredStorageRule. Otherwise the whole TieredStorageConfig must be
        unset. By default all data is stored in the SSD tier (only SSD instances
        can configure tiered storage).
      type: object
      properties:
        infrequentAccess:
          description: >-
            Rule to specify what data is stored in the infrequent access(IA)
            tier. The IA tier allows storing more data per node with reduced
            performance.
          $ref: '#/components/schemas/TieredStorageRule'
    TieredStorageRule:
      id: TieredStorageRule
      description: Rule to specify what data is stored in a storage tier.
      type: object
      properties:
        includeIfOlderThan:
          description: >-
            Include cells older than the given age. For the infrequent access
            tier, this value must be at least 30 days.
          type: string
          format: google-duration
    Split:
      id: Split
      description: An initial split point for a newly created table.
      type: object
      properties:
        key:
          description: Row key to use as an initial tablet boundary.
          type: string
          format: byte
    ListTablesResponse:
      id: ListTablesResponse
      description: >-
        Response message for
        google.bigtable.admin.v2.BigtableTableAdmin.ListTables
      type: object
      properties:
        tables:
          description: The tables present in the requested instance.
          type: array
          items:
            $ref: '#/components/schemas/Table'
        nextPageToken:
          description: >-
            Set if not all tables could be returned in a single response. Pass
            this value to `page_token` in another request to get the next page
            of results.
          type: string
    UndeleteTableRequest:
      id: UndeleteTableRequest
      description: >-
        Request message for
        google.bigtable.admin.v2.BigtableTableAdmin.UndeleteTable
      type: object
      properties: {}
    AuthorizedView:
      id: AuthorizedView
      description: An Authorized View of a Cloud Bigtable Table.
      type: object
      properties:
        name:
          description: >-
            Identifier. The name of this AuthorizedView. Values are of the form
            `projects/{project}/instances/{instance}/tables/{table}/authorizedViews/{authorized_view}`
          type: string
        subsetView:
          description: >-
            An AuthorizedView permitting access to an explicit subset of a
            Table.
          $ref: '#/components/schemas/GoogleBigtableAdminV2AuthorizedViewSubsetView'
        etag:
          description: >-
            The etag for this AuthorizedView. If this is provided on update, it
            must match the server's etag. The server returns ABORTED error on a
            mismatched etag.
          type: string
        deletionProtection:
          description: >-
            Set to true to make the AuthorizedView protected against deletion.
            The parent Table and containing Instance cannot be deleted if an
            AuthorizedView has this bit set.
          type: boolean
    GoogleBigtableAdminV2AuthorizedViewSubsetView:
      id: GoogleBigtableAdminV2AuthorizedViewSubsetView
      description: >-
        Defines a simple AuthorizedView that is a subset of the underlying
        Table.
      type: object
      properties:
        rowPrefixes:
          description: >-
            Row prefixes to be included in the AuthorizedView. To provide access
            to all rows, include the empty string as a prefix ("").
          type: array
          items:
            type: string
            format: byte
        familySubsets:
          description: >-
            Map from column family name to the columns in this family to be
            included in the AuthorizedView.
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleBigtableAdminV2AuthorizedViewFamilySubsets
    GoogleBigtableAdminV2AuthorizedViewFamilySubsets:
      id: GoogleBigtableAdminV2AuthorizedViewFamilySubsets
      description: Subsets of a column family that are included in this AuthorizedView.
      type: object
      properties:
        qualifiers:
          description: >-
            Individual exact column qualifiers to be included in the
            AuthorizedView.
          type: array
          items:
            type: string
            format: byte
        qualifierPrefixes:
          description: >-
            Prefixes for qualifiers to be included in the AuthorizedView. Every
            qualifier starting with one of these prefixes is included in the
            AuthorizedView. To provide access to all qualifiers, include the
            empty string as a prefix ("").
          type: array
          items:
            type: string
            format: byte
    ListAuthorizedViewsResponse:
      id: ListAuthorizedViewsResponse
      description: >-
        Response message for
        google.bigtable.admin.v2.BigtableTableAdmin.ListAuthorizedViews
      type: object
      properties:
        authorizedViews:
          description: The AuthorizedViews present in the requested table.
          type: array
          items:
            $ref: '#/components/schemas/AuthorizedView'
        nextPageToken:
          description: >-
            Set if not all tables could be returned in a single response. Pass
            this value to `page_token` in another request to get the next page
            of results.
          type: string
    ModifyColumnFamiliesRequest:
      id: ModifyColumnFamiliesRequest
      description: >-
        Request message for
        google.bigtable.admin.v2.BigtableTableAdmin.ModifyColumnFamilies
      type: object
      properties:
        modifications:
          description: >-
            Required. Modifications to be atomically applied to the specified
            table's families. Entries are applied in order, meaning that earlier
            modifications can be masked by later ones (in the case of repeated
            updates to the same family, for example).
          type: array
          items:
            $ref: '#/components/schemas/Modification'
        ignoreWarnings:
          description: >-
            Optional. If true, ignore safety checks when modifying the column
            families.
          type: boolean
    Modification:
      id: Modification
      description: A create, update, or delete of a particular column family.
      type: object
      properties:
        id:
          description: The ID of the column family to be modified.
          type: string
        create:
          description: >-
            Create a new column family with the specified schema, or fail if one
            already exists with the given ID.
          $ref: '#/components/schemas/ColumnFamily'
        update:
          description: >-
            Update an existing column family to the specified schema, or fail if
            no column family exists with the given ID.
          $ref: '#/components/schemas/ColumnFamily'
        drop:
          description: >-
            Drop (delete) the column family with the given ID, or fail if no
            such family exists.
          type: boolean
        updateMask:
          description: >-
            Optional. A mask specifying which fields (e.g. `gc_rule`) in the
            `update` mod should be updated, ignored for other modification
            types. If unset or empty, we treat it as updating `gc_rule` to be
            backward compatible.
          type: string
          format: google-fieldmask
    DropRowRangeRequest:
      id: DropRowRangeRequest
      description: >-
        Request message for
        google.bigtable.admin.v2.BigtableTableAdmin.DropRowRange
      type: object
      properties:
        rowKeyPrefix:
          description: >-
            Delete all rows that start with this row key prefix. Prefix cannot
            be zero length.
          type: string
          format: byte
        deleteAllDataFromTable:
          description: Delete all rows in the table. Setting this to false is a no-op.
          type: boolean
    GenerateConsistencyTokenRequest:
      id: GenerateConsistencyTokenRequest
      description: >-
        Request message for
        google.bigtable.admin.v2.BigtableTableAdmin.GenerateConsistencyToken
      type: object
      properties: {}
    GenerateConsistencyTokenResponse:
      id: GenerateConsistencyTokenResponse
      description: >-
        Response message for
        google.bigtable.admin.v2.BigtableTableAdmin.GenerateConsistencyToken
      type: object
      properties:
        consistencyToken:
          description: The generated consistency token.
          type: string
    CheckConsistencyRequest:
      id: CheckConsistencyRequest
      description: >-
        Request message for
        google.bigtable.admin.v2.BigtableTableAdmin.CheckConsistency
      type: object
      properties:
        consistencyToken:
          description: >-
            Required. The token created using GenerateConsistencyToken for the
            Table.
          type: string
        standardReadRemoteWrites:
          description: >-
            Checks that reads using an app profile with `StandardIsolation` can
            see all writes committed before the token was created, even if the
            read and write target different clusters.
          $ref: '#/components/schemas/StandardReadRemoteWrites'
        dataBoostReadLocalWrites:
          description: >-
            Checks that reads using an app profile with
            `DataBoostIsolationReadOnly` can see all writes committed before the
            token was created, but only if the read and write target the same
            cluster.
          $ref: '#/components/schemas/DataBoostReadLocalWrites'
    StandardReadRemoteWrites:
      id: StandardReadRemoteWrites
      description: >-
        Checks that all writes before the consistency token was generated are
        replicated in every cluster and readable.
      type: object
      properties: {}
    DataBoostReadLocalWrites:
      id: DataBoostReadLocalWrites
      description: >-
        Checks that all writes before the consistency token was generated in the
        same cluster are readable by Databoost.
      type: object
      properties: {}
    CheckConsistencyResponse:
      id: CheckConsistencyResponse
      description: >-
        Response message for
        google.bigtable.admin.v2.BigtableTableAdmin.CheckConsistency
      type: object
      properties:
        consistent:
          description: >-
            True only if the token is consistent. A token is consistent if
            replication has caught up with the restrictions specified in the
            request.
          type: boolean
    Backup:
      id: Backup
      description: A backup of a Cloud Bigtable table.
      type: object
      properties:
        name:
          description: >-
            A globally unique identifier for the backup which cannot be changed.
            Values are of the form
            `projects/{project}/instances/{instance}/clusters/{cluster}/
            backups/_a-zA-Z0-9*` The final segment of the name must be between 1
            and 50 characters in length. The backup is stored in the cluster
            identified by the prefix of the backup name of the form
            `projects/{project}/instances/{instance}/clusters/{cluster}`.
          type: string
        sourceTable:
          description: >-
            Required. Immutable. Name of the table from which this backup was
            created. This needs to be in the same instance as the backup. Values
            are of the form
            `projects/{project}/instances/{instance}/tables/{source_table}`.
          type: string
        sourceBackup:
          description: >-
            Output only. Name of the backup from which this backup was copied.
            If a backup is not created by copying a backup, this field will be
            empty. Values are of the form:
            projects//instances//clusters//backups/
          readOnly: true
          type: string
        expireTime:
          description: >-
            Required. The expiration time of the backup. When creating a backup
            or updating its `expire_time`, the value must be greater than the
            backup creation time by: - At least 6 hours - At most 90 days Once
            the `expire_time` has passed, Cloud Bigtable will delete the backup.
          type: string
          format: google-datetime
        startTime:
          description: >-
            Output only. `start_time` is the time that the backup was started
            (i.e. approximately the time the CreateBackup request is received).
            The row data in this backup will be no older than this timestamp.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: >-
            Output only. `end_time` is the time that the backup was finished.
            The row data in the backup will be no newer than this timestamp.
          readOnly: true
          type: string
          format: google-datetime
        sizeBytes:
          description: Output only. Size of the backup in bytes.
          readOnly: true
          type: string
          format: int64
        state:
          description: Output only. The current state of the backup.
          readOnly: true
          type: string
          enumDescriptions:
            - Not specified.
            - >-
              The pending backup is still being created. Operations on the
              backup may fail with `FAILED_PRECONDITION` in this state.
            - The backup is complete and ready for use.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - READY
        encryptionInfo:
          description: Output only. The encryption information for the backup.
          readOnly: true
          $ref: '#/components/schemas/EncryptionInfo'
        backupType:
          description: Indicates the backup type of the backup.
          type: string
          enumDescriptions:
            - Not specified.
            - >-
              The default type for Cloud Bigtable managed backups. Supported for
              backups created in both HDD and SSD instances. Requires
              optimization when restored to a table in an SSD instance.
            - >-
              A backup type with faster restore to SSD performance. Only
              supported for backups created in SSD instances. A new SSD table
              restored from a hot backup reaches production performance more
              quickly than a standard backup.
          enum:
            - BACKUP_TYPE_UNSPECIFIED
            - STANDARD
            - HOT
        hotToStandardTime:
          description: >-
            The time at which the hot backup will be converted to a standard
            backup. Once the `hot_to_standard_time` has passed, Cloud Bigtable
            will convert the hot backup to a standard backup. This value must be
            greater than the backup creation time by: - At least 24 hours This
            field only applies for hot backups. When creating or updating a
            standard backup, attempting to set this field will fail the request.
          type: string
          format: google-datetime
    ListBackupsResponse:
      id: ListBackupsResponse
      description: The response for ListBackups.
      type: object
      properties:
        backups:
          description: The list of matching backups.
          type: array
          items:
            $ref: '#/components/schemas/Backup'
        nextPageToken:
          description: >-
            `next_page_token` can be sent in a subsequent ListBackups call to
            fetch more of the matching backups.
          type: string
    RestoreTableRequest:
      id: RestoreTableRequest
      description: The request for RestoreTable.
      type: object
      properties:
        tableId:
          description: >-
            Required. The id of the table to create and restore to. This table
            must not already exist. The `table_id` appended to `parent` forms
            the full table name of the form `projects//instances//tables/`.
          type: string
        backup:
          description: >-
            Name of the backup from which to restore. Values are of the form
            `projects//instances//clusters//backups/`.
          type: string
    CopyBackupRequest:
      id: CopyBackupRequest
      description: The request for CopyBackup.
      type: object
      properties:
        backupId:
          description: >-
            Required. The id of the new backup. The `backup_id` along with
            `parent` are combined as {parent}/backups/{backup_id} to create the
            full backup name, of the form:
            `projects/{project}/instances/{instance}/clusters/{cluster}/backups/{backup_id}`.
            This string must be between 1 and 50 characters in length and match
            the regex _a-zA-Z0-9*.
          type: string
        sourceBackup:
          description: >-
            Required. The source backup to be copied from. The source backup
            needs to be in READY state for it to be copied. Copying a copied
            backup is not allowed. Once CopyBackup is in progress, the source
            backup cannot be deleted or cleaned up on expiration until
            CopyBackup is finished. Values are of the form:
            `projects//instances//clusters//backups/`.
          type: string
        expireTime:
          description: >-
            Required. Required. The expiration time of the copied backup with
            microsecond granularity that must be at least 6 hours and at most 30
            days from the time the request is received. Once the `expire_time`
            has passed, Cloud Bigtable will delete the backup and free the
            resources used by the backup.
          type: string
          format: google-datetime
    SchemaBundle:
      id: SchemaBundle
      description: A named collection of related schemas.
      type: object
      properties:
        name:
          description: >-
            Identifier. The unique name identifying this schema bundle. Values
            are of the form
            `projects/{project}/instances/{instance}/tables/{table}/schemaBundles/{schema_bundle}`
          type: string
        protoSchema:
          description: Schema for Protobufs.
          $ref: '#/components/schemas/ProtoSchema'
        etag:
          description: >-
            Optional. The etag for this schema bundle. This may be sent on
            update and delete requests to ensure the client has an up-to-date
            value before proceeding. The server returns an ABORTED error on a
            mismatched etag.
          type: string
    ProtoSchema:
      id: ProtoSchema
      description: Represents a protobuf schema.
      type: object
      properties:
        protoDescriptors:
          description: >-
            Required. Contains a protobuf-serialized
            [google.protobuf.FileDescriptorSet](https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/descriptor.proto),
            which could include multiple proto files. To generate it,
            [install](https://grpc.io/docs/protoc-installation/) and run
            `protoc` with `--include_imports` and `--descriptor_set_out`. For
            example, to generate for moon/shot/app.proto, run ``` $protoc
            --proto_path=/app_path --proto_path=/lib_path \ --include_imports \
            --descriptor_set_out=descriptors.pb \ moon/shot/app.proto ``` For
            more details, see protobuffer [self
            description](https://developers.google.com/protocol-buffers/docs/techniques#self-description).
          type: string
          format: byte
    ListSchemaBundlesResponse:
      id: ListSchemaBundlesResponse
      description: The response for ListSchemaBundles.
      type: object
      properties:
        schemaBundles:
          description: The schema bundles from the specified table.
          type: array
          items:
            $ref: '#/components/schemas/SchemaBundle'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    ListLocationsResponse:
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Location:
      id: Location
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
          additionalProperties:
            type: string
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    CreateInstanceMetadata:
      id: CreateInstanceMetadata
      description: The metadata for the Operation returned by CreateInstance.
      type: object
      properties:
        originalRequest:
          description: >-
            The request that prompted the initiation of this CreateInstance
            operation.
          $ref: '#/components/schemas/CreateInstanceRequest'
        requestTime:
          description: The time at which the original request was received.
          type: string
          format: google-datetime
        finishTime:
          description: >-
            The time at which the operation failed or was completed
            successfully.
          type: string
          format: google-datetime
    UpdateInstanceMetadata:
      id: UpdateInstanceMetadata
      description: The metadata for the Operation returned by UpdateInstance.
      type: object
      properties:
        originalRequest:
          description: >-
            The request that prompted the initiation of this UpdateInstance
            operation.
          $ref: '#/components/schemas/PartialUpdateInstanceRequest'
        requestTime:
          description: The time at which the original request was received.
          type: string
          format: google-datetime
        finishTime:
          description: >-
            The time at which the operation failed or was completed
            successfully.
          type: string
          format: google-datetime
    PartialUpdateInstanceRequest:
      id: PartialUpdateInstanceRequest
      description: Request message for BigtableInstanceAdmin.PartialUpdateInstance.
      type: object
      properties:
        instance:
          description: >-
            Required. The Instance which will (partially) replace the current
            value.
          $ref: '#/components/schemas/Instance'
        updateMask:
          description: >-
            Required. The subset of Instance fields which should be replaced.
            Must be explicitly set.
          type: string
          format: google-fieldmask
    CreateClusterMetadata:
      id: CreateClusterMetadata
      description: The metadata for the Operation returned by CreateCluster.
      type: object
      properties:
        originalRequest:
          description: >-
            The request that prompted the initiation of this CreateCluster
            operation.
          $ref: '#/components/schemas/CreateClusterRequest'
        requestTime:
          description: The time at which the original request was received.
          type: string
          format: google-datetime
        finishTime:
          description: >-
            The time at which the operation failed or was completed
            successfully.
          type: string
          format: google-datetime
        tables:
          description: >-
            Keys: the full `name` of each table that existed in the instance
            when CreateCluster was first called, i.e.
            `projects//instances//tables/`. Any table added to the instance by a
            later API call will be created in the new cluster by that API call,
            not this one. Values: information on how much of a table's data has
            been copied to the newly-created cluster so far.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/TableProgress'
    CreateClusterRequest:
      id: CreateClusterRequest
      description: Request message for BigtableInstanceAdmin.CreateCluster.
      type: object
      properties:
        parent:
          description: >-
            Required. The unique name of the instance in which to create the new
            cluster. Values are of the form
            `projects/{project}/instances/{instance}`.
          type: string
        clusterId:
          description: >-
            Required. The ID to be used when referring to the new cluster within
            its instance, e.g., just `mycluster` rather than
            `projects/myproject/instances/myinstance/clusters/mycluster`.
          type: string
        cluster:
          description: >-
            Required. The cluster to be created. Fields marked `OutputOnly` must
            be left blank.
          $ref: '#/components/schemas/Cluster'
    TableProgress:
      id: TableProgress
      description: Progress info for copying a table's data to the new cluster.
      type: object
      properties:
        estimatedSizeBytes:
          description: Estimate of the size of the table to be copied.
          type: string
          format: int64
        estimatedCopiedBytes:
          description: >-
            Estimate of the number of bytes copied so far for this table. This
            will eventually reach 'estimated_size_bytes' unless the table copy
            is CANCELLED.
          type: string
          format: int64
        state:
          type: string
          enumDescriptions:
            - ''
            - The table has not yet begun copying to the new cluster.
            - The table is actively being copied to the new cluster.
            - The table has been fully copied to the new cluster.
            - >-
              The table was deleted before it finished copying to the new
              cluster. Note that tables deleted after completion will stay
              marked as COMPLETED, not CANCELLED.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - COPYING
            - COMPLETED
            - CANCELLED
    PartialUpdateClusterMetadata:
      id: PartialUpdateClusterMetadata
      description: The metadata for the Operation returned by PartialUpdateCluster.
      type: object
      properties:
        requestTime:
          description: The time at which the original request was received.
          type: string
          format: google-datetime
        finishTime:
          description: >-
            The time at which the operation failed or was completed
            successfully.
          type: string
          format: google-datetime
        originalRequest:
          description: The original request for PartialUpdateCluster.
          $ref: '#/components/schemas/PartialUpdateClusterRequest'
    PartialUpdateClusterRequest:
      id: PartialUpdateClusterRequest
      description: Request message for BigtableInstanceAdmin.PartialUpdateCluster.
      type: object
      properties:
        cluster:
          description: >-
            Required. The Cluster which contains the partial updates to be
            applied, subject to the update_mask.
          $ref: '#/components/schemas/Cluster'
        updateMask:
          description: Required. The subset of Cluster fields which should be replaced.
          type: string
          format: google-fieldmask
    UpdateClusterMetadata:
      id: UpdateClusterMetadata
      description: The metadata for the Operation returned by UpdateCluster.
      type: object
      properties:
        originalRequest:
          description: >-
            The request that prompted the initiation of this UpdateCluster
            operation.
          $ref: '#/components/schemas/Cluster'
        requestTime:
          description: The time at which the original request was received.
          type: string
          format: google-datetime
        finishTime:
          description: >-
            The time at which the operation failed or was completed
            successfully.
          type: string
          format: google-datetime
    UpdateAppProfileMetadata:
      id: UpdateAppProfileMetadata
      description: The metadata for the Operation returned by UpdateAppProfile.
      type: object
      properties: {}
    CreateBackupMetadata:
      id: CreateBackupMetadata
      description: Metadata type for the operation returned by CreateBackup.
      type: object
      properties:
        name:
          description: The name of the backup being created.
          type: string
        sourceTable:
          description: The name of the table the backup is created from.
          type: string
        startTime:
          description: The time at which this operation started.
          type: string
          format: google-datetime
        endTime:
          description: If set, the time at which this operation finished or was cancelled.
          type: string
          format: google-datetime
    CreateAuthorizedViewMetadata:
      id: CreateAuthorizedViewMetadata
      description: The metadata for the Operation returned by CreateAuthorizedView.
      type: object
      properties:
        originalRequest:
          description: >-
            The request that prompted the initiation of this
            CreateAuthorizedView operation.
          $ref: '#/components/schemas/CreateAuthorizedViewRequest'
        requestTime:
          description: The time at which the original request was received.
          type: string
          format: google-datetime
        finishTime:
          description: >-
            The time at which the operation failed or was completed
            successfully.
          type: string
          format: google-datetime
    CreateAuthorizedViewRequest:
      id: CreateAuthorizedViewRequest
      description: The request for CreateAuthorizedView
      type: object
      properties:
        parent:
          description: >-
            Required. This is the name of the table the AuthorizedView belongs
            to. Values are of the form
            `projects/{project}/instances/{instance}/tables/{table}`.
          type: string
        authorizedViewId:
          description: >-
            Required. The id of the AuthorizedView to create. This
            AuthorizedView must not already exist. The `authorized_view_id`
            appended to `parent` forms the full AuthorizedView name of the form
            `projects/{project}/instances/{instance}/tables/{table}/authorizedView/{authorized_view}`.
          type: string
        authorizedView:
          description: Required. The AuthorizedView to create.
          $ref: '#/components/schemas/AuthorizedView'
    CopyBackupMetadata:
      id: CopyBackupMetadata
      description: >-
        Metadata type for the google.longrunning.Operation returned by
        CopyBackup.
      type: object
      properties:
        name:
          description: >-
            The name of the backup being created through the copy operation.
            Values are of the form `projects//instances//clusters//backups/`.
          type: string
        sourceBackupInfo:
          description: Information about the source backup that is being copied from.
          $ref: '#/components/schemas/BackupInfo'
        progress:
          description: The progress of the CopyBackup operation.
          $ref: '#/components/schemas/OperationProgress'
    OperationProgress:
      id: OperationProgress
      description: >-
        Encapsulates progress related information for a Cloud Bigtable long
        running operation.
      type: object
      properties:
        progressPercent:
          description: >-
            Percent completion of the operation. Values are between 0 and 100
            inclusive.
          type: integer
          format: int32
        startTime:
          description: Time the request was received.
          type: string
          format: google-datetime
        endTime:
          description: >-
            If set, the time at which this operation failed or was completed
            successfully.
          type: string
          format: google-datetime
    RestoreTableMetadata:
      id: RestoreTableMetadata
      description: Metadata type for the long-running operation returned by RestoreTable.
      type: object
      properties:
        name:
          description: Name of the table being created and restored to.
          type: string
        sourceType:
          description: The type of the restore source.
          type: string
          enumDescriptions:
            - No restore associated.
            - A backup was used as the source of the restore.
          enum:
            - RESTORE_SOURCE_TYPE_UNSPECIFIED
            - BACKUP
        backupInfo:
          $ref: '#/components/schemas/BackupInfo'
        optimizeTableOperationName:
          description: >-
            If exists, the name of the long-running operation that will be used
            to track the post-restore optimization process to optimize the
            performance of the restored table. The metadata type of the
            long-running operation is OptimizeRestoredTableMetadata. The
            response type is Empty. This long-running operation may be
            automatically created by the system if applicable after the
            RestoreTable long-running operation completes successfully. This
            operation may not be created if the table is already optimized or
            the restore was not successful.
          type: string
        progress:
          description: The progress of the RestoreTable operation.
          $ref: '#/components/schemas/OperationProgress'
    OptimizeRestoredTableMetadata:
      id: OptimizeRestoredTableMetadata
      description: >-
        Metadata type for the long-running operation used to track the progress
        of optimizations performed on a newly restored table. This long-running
        operation is automatically created by the system after the successful
        completion of a table restore, and cannot be cancelled.
      type: object
      properties:
        name:
          description: Name of the restored table being optimized.
          type: string
        progress:
          description: The progress of the post-restore optimizations.
          $ref: '#/components/schemas/OperationProgress'
    UndeleteTableMetadata:
      id: UndeleteTableMetadata
      description: >-
        Metadata type for the operation returned by
        google.bigtable.admin.v2.BigtableTableAdmin.UndeleteTable.
      type: object
      properties:
        name:
          description: The name of the table being restored.
          type: string
        startTime:
          description: The time at which this operation started.
          type: string
          format: google-datetime
        endTime:
          description: If set, the time at which this operation finished or was cancelled.
          type: string
          format: google-datetime
    UpdateTableMetadata:
      id: UpdateTableMetadata
      description: Metadata type for the operation returned by UpdateTable.
      type: object
      properties:
        name:
          description: The name of the table being updated.
          type: string
        startTime:
          description: The time at which this operation started.
          type: string
          format: google-datetime
        endTime:
          description: If set, the time at which this operation finished or was canceled.
          type: string
          format: google-datetime
    UpdateAuthorizedViewMetadata:
      id: UpdateAuthorizedViewMetadata
      description: >-
        Metadata for the google.longrunning.Operation returned by
        UpdateAuthorizedView.
      type: object
      properties:
        originalRequest:
          description: >-
            The request that prompted the initiation of this
            UpdateAuthorizedView operation.
          $ref: '#/components/schemas/UpdateAuthorizedViewRequest'
        requestTime:
          description: The time at which the original request was received.
          type: string
          format: google-datetime
        finishTime:
          description: >-
            The time at which the operation failed or was completed
            successfully.
          type: string
          format: google-datetime
    UpdateAuthorizedViewRequest:
      id: UpdateAuthorizedViewRequest
      description: The request for UpdateAuthorizedView.
      type: object
      properties:
        authorizedView:
          description: >-
            Required. The AuthorizedView to update. The `name` in
            `authorized_view` is used to identify the AuthorizedView.
            AuthorizedView name must in this format:
            `projects/{project}/instances/{instance}/tables/{table}/authorizedViews/{authorized_view}`.
          $ref: '#/components/schemas/AuthorizedView'
        updateMask:
          description: >-
            Optional. The list of fields to update. A mask specifying which
            fields in the AuthorizedView resource should be updated. This mask
            is relative to the AuthorizedView resource, not to the request
            message. A field will be overwritten if it is in the mask. If empty,
            all fields set in the request will be overwritten. A special value
            `*` means to overwrite all fields (including fields not set in the
            request).
          type: string
          format: google-fieldmask
        ignoreWarnings:
          description: >-
            Optional. If true, ignore the safety checks when updating the
            AuthorizedView.
          type: boolean
    CreateSchemaBundleMetadata:
      id: CreateSchemaBundleMetadata
      description: The metadata for the Operation returned by CreateSchemaBundle.
      type: object
      properties:
        name:
          description: >-
            The unique name identifying this schema bundle. Values are of the
            form
            `projects/{project}/instances/{instance}/tables/{table}/schemaBundles/{schema_bundle}`
          type: string
        startTime:
          description: The time at which this operation started.
          type: string
          format: google-datetime
        endTime:
          description: If set, the time at which this operation finished or was canceled.
          type: string
          format: google-datetime
    UpdateSchemaBundleMetadata:
      id: UpdateSchemaBundleMetadata
      description: The metadata for the Operation returned by UpdateSchemaBundle.
      type: object
      properties:
        name:
          description: >-
            The unique name identifying this schema bundle. Values are of the
            form
            `projects/{project}/instances/{instance}/tables/{table}/schemaBundles/{schema_bundle}`
          type: string
        startTime:
          description: The time at which this operation started.
          type: string
          format: google-datetime
        endTime:
          description: If set, the time at which this operation finished or was canceled.
          type: string
          format: google-datetime
    CreateLogicalViewMetadata:
      id: CreateLogicalViewMetadata
      description: The metadata for the Operation returned by CreateLogicalView.
      type: object
      properties:
        originalRequest:
          description: >-
            The request that prompted the initiation of this CreateLogicalView
            operation.
          $ref: '#/components/schemas/CreateLogicalViewRequest'
        startTime:
          description: The time at which this operation started.
          type: string
          format: google-datetime
        endTime:
          description: If set, the time at which this operation finished or was canceled.
          type: string
          format: google-datetime
    CreateLogicalViewRequest:
      id: CreateLogicalViewRequest
      description: Request message for BigtableInstanceAdmin.CreateLogicalView.
      type: object
      properties:
        parent:
          description: >-
            Required. The parent instance where this logical view will be
            created. Format: `projects/{project}/instances/{instance}`.
          type: string
        logicalViewId:
          description: >-
            Required. The ID to use for the logical view, which will become the
            final component of the logical view's resource name.
          type: string
        logicalView:
          description: Required. The logical view to create.
          $ref: '#/components/schemas/LogicalView'
    UpdateLogicalViewMetadata:
      id: UpdateLogicalViewMetadata
      description: The metadata for the Operation returned by UpdateLogicalView.
      type: object
      properties:
        originalRequest:
          description: >-
            The request that prompted the initiation of this UpdateLogicalView
            operation.
          $ref: '#/components/schemas/UpdateLogicalViewRequest'
        startTime:
          description: The time at which this operation was started.
          type: string
          format: google-datetime
        endTime:
          description: If set, the time at which this operation finished or was canceled.
          type: string
          format: google-datetime
    UpdateLogicalViewRequest:
      id: UpdateLogicalViewRequest
      description: Request message for BigtableInstanceAdmin.UpdateLogicalView.
      type: object
      properties:
        logicalView:
          description: >-
            Required. The logical view to update. The logical view's `name`
            field is used to identify the view to update. Format:
            `projects/{project}/instances/{instance}/logicalViews/{logical_view}`.
          $ref: '#/components/schemas/LogicalView'
        updateMask:
          description: Optional. The list of fields to update.
          type: string
          format: google-fieldmask
    CreateMaterializedViewMetadata:
      id: CreateMaterializedViewMetadata
      description: The metadata for the Operation returned by CreateMaterializedView.
      type: object
      properties:
        originalRequest:
          description: >-
            The request that prompted the initiation of this
            CreateMaterializedView operation.
          $ref: '#/components/schemas/CreateMaterializedViewRequest'
        startTime:
          description: The time at which this operation started.
          type: string
          format: google-datetime
        endTime:
          description: If set, the time at which this operation finished or was canceled.
          type: string
          format: google-datetime
    CreateMaterializedViewRequest:
      id: CreateMaterializedViewRequest
      description: Request message for BigtableInstanceAdmin.CreateMaterializedView.
      type: object
      properties:
        parent:
          description: >-
            Required. The parent instance where this materialized view will be
            created. Format: `projects/{project}/instances/{instance}`.
          type: string
        materializedViewId:
          description: >-
            Required. The ID to use for the materialized view, which will become
            the final component of the materialized view's resource name.
          type: string
        materializedView:
          description: Required. The materialized view to create.
          $ref: '#/components/schemas/MaterializedView'
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    operations:
      id: google.bigtableadmin.operations
      name: operations
      title: Operations
      methods:
        get:
          operation:
            $ref: '#/paths/~1v2~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v2~1operations~1projects~1{projectsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    instances:
      id: google.bigtableadmin.instances
      name: instances
      title: Instances
      methods:
        create:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.instances
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        partial_update_instance:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/instances/methods/get'
          - $ref: '#/components/x-stackQL-resources/instances/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/instances/methods/create'
        update: []
        replace:
          - $ref: '#/components/x-stackQL-resources/instances/methods/update'
        delete:
          - $ref: '#/components/x-stackQL-resources/instances/methods/delete'
    instances_iam_policies:
      id: google.bigtableadmin.instances_iam_policies
      name: instances_iam_policies
      title: Instances_iam_policies
      methods:
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}:getIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/instances_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/instances_iam_policies/methods/set_iam_policy
        delete: []
    clusters:
      id: google.bigtableadmin.clusters
      name: clusters
      title: Clusters
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1clusters/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1clusters/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.clusters
        get:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1clusters~1{clustersId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1clusters~1{clustersId}/put
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        partial_update_cluster:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1clusters~1{clustersId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1clusters~1{clustersId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/get'
          - $ref: '#/components/x-stackQL-resources/clusters/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/create'
        update: []
        replace:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/update'
        delete:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/delete'
    hot_tablets:
      id: google.bigtableadmin.hot_tablets
      name: hot_tablets
      title: Hot_tablets
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1clusters~1{clustersId}~1hotTablets/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.hotTablets
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hot_tablets/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    backups:
      id: google.bigtableadmin.backups
      name: backups
      title: Backups
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1clusters~1{clustersId}~1backups/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1clusters~1{clustersId}~1backups/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.backups
        get:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1clusters~1{clustersId}~1backups~1{backupsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1clusters~1{clustersId}~1backups~1{backupsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1clusters~1{clustersId}~1backups~1{backupsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        copy:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1clusters~1{clustersId}~1backups:copy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backups/methods/get'
          - $ref: '#/components/x-stackQL-resources/backups/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/backups/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/backups/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/backups/methods/delete'
    backups_iam_policies:
      id: google.bigtableadmin.backups_iam_policies
      name: backups_iam_policies
      title: Backups_iam_policies
      methods:
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1clusters~1{clustersId}~1backups~1{backupsId}:getIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1clusters~1{clustersId}~1backups~1{backupsId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1clusters~1{clustersId}~1backups~1{backupsId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/backups_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/backups_iam_policies/methods/set_iam_policy
        delete: []
    app_profiles:
      id: google.bigtableadmin.app_profiles
      name: app_profiles
      title: App_profiles
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1appProfiles/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1appProfiles/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.appProfiles
        get:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1appProfiles~1{appProfilesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1appProfiles~1{appProfilesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1appProfiles~1{appProfilesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/app_profiles/methods/get'
          - $ref: '#/components/x-stackQL-resources/app_profiles/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/app_profiles/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/app_profiles/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/app_profiles/methods/delete'
    materialized_views_iam_policies:
      id: google.bigtableadmin.materialized_views_iam_policies
      name: materialized_views_iam_policies
      title: Materialized_views_iam_policies
      methods:
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1materializedViews~1{materializedViewsId}:getIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1materializedViews~1{materializedViewsId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1materializedViews~1{materializedViewsId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/materialized_views_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/materialized_views_iam_policies/methods/set_iam_policy
        delete: []
    materialized_views:
      id: google.bigtableadmin.materialized_views
      name: materialized_views
      title: Materialized_views
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1materializedViews/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1materializedViews/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.materializedViews
        get:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1materializedViews~1{materializedViewsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1materializedViews~1{materializedViewsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1materializedViews~1{materializedViewsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/materialized_views/methods/get'
          - $ref: '#/components/x-stackQL-resources/materialized_views/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/materialized_views/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/materialized_views/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/materialized_views/methods/delete'
    logical_views_iam_policies:
      id: google.bigtableadmin.logical_views_iam_policies
      name: logical_views_iam_policies
      title: Logical_views_iam_policies
      methods:
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1logicalViews~1{logicalViewsId}:getIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1logicalViews~1{logicalViewsId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1logicalViews~1{logicalViewsId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/logical_views_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/logical_views_iam_policies/methods/set_iam_policy
        delete: []
    logical_views:
      id: google.bigtableadmin.logical_views
      name: logical_views
      title: Logical_views
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1logicalViews/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1logicalViews/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.logicalViews
        get:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1logicalViews~1{logicalViewsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1logicalViews~1{logicalViewsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1logicalViews~1{logicalViewsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/logical_views/methods/get'
          - $ref: '#/components/x-stackQL-resources/logical_views/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/logical_views/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/logical_views/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/logical_views/methods/delete'
    tables:
      id: google.bigtableadmin.tables
      name: tables
      title: Tables
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.tables
        get:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        undelete:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}:undelete/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        modify_column_families:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}:modifyColumnFamilies/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        drop_row_range:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}:dropRowRange/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        generate_consistency_token:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}:generateConsistencyToken/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        check_consistency:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}:checkConsistency/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restore:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables:restore/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tables/methods/get'
          - $ref: '#/components/x-stackQL-resources/tables/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/tables/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/tables/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/tables/methods/delete'
    tables_iam_policies:
      id: google.bigtableadmin.tables_iam_policies
      name: tables_iam_policies
      title: Tables_iam_policies
      methods:
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}:getIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/tables_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/tables_iam_policies/methods/set_iam_policy
        delete: []
    authorized_views:
      id: google.bigtableadmin.authorized_views
      name: authorized_views
      title: Authorized_views
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}~1authorizedViews/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}~1authorizedViews/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.authorizedViews
        get:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}~1authorizedViews~1{authorizedViewsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}~1authorizedViews~1{authorizedViewsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}~1authorizedViews~1{authorizedViewsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/authorized_views/methods/get'
          - $ref: '#/components/x-stackQL-resources/authorized_views/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/authorized_views/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/authorized_views/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/authorized_views/methods/delete'
    authorized_views_iam_policies:
      id: google.bigtableadmin.authorized_views_iam_policies
      name: authorized_views_iam_policies
      title: Authorized_views_iam_policies
      methods:
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}~1authorizedViews~1{authorizedViewsId}:getIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}~1authorizedViews~1{authorizedViewsId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}~1authorizedViews~1{authorizedViewsId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/authorized_views_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/authorized_views_iam_policies/methods/set_iam_policy
        delete: []
    schema_bundles_iam_policies:
      id: google.bigtableadmin.schema_bundles_iam_policies
      name: schema_bundles_iam_policies
      title: Schema_bundles_iam_policies
      methods:
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}~1schemaBundles~1{schemaBundlesId}:getIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}~1schemaBundles~1{schemaBundlesId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}~1schemaBundles~1{schemaBundlesId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/schema_bundles_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/schema_bundles_iam_policies/methods/set_iam_policy
        delete: []
    schema_bundles:
      id: google.bigtableadmin.schema_bundles
      name: schema_bundles
      title: Schema_bundles
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}~1schemaBundles/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}~1schemaBundles/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.schemaBundles
        patch:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}~1schemaBundles~1{schemaBundlesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}~1schemaBundles~1{schemaBundlesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}~1schemaBundles~1{schemaBundlesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/schema_bundles/methods/get'
          - $ref: '#/components/x-stackQL-resources/schema_bundles/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/schema_bundles/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/schema_bundles/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/schema_bundles/methods/delete'
    locations:
      id: google.bigtableadmin.locations
      name: locations
      title: Locations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
paths:
  /v2/operations/{operationsId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: bigtableadmin.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v2/operations/projects/{projectsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: bigtableadmin.operations.projects.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v2/projects/{projectsId}/instances:
    parameters: *ref_1
    post:
      description: >-
        Create an instance within a project. Note that exactly one of
        Cluster.serve_nodes and
        Cluster.cluster_config.cluster_autoscaling_config can be set. If
        serve_nodes is set to non-zero, then the cluster is manually scaled. If
        cluster_config.cluster_autoscaling_config is non-empty, then autoscaling
        is enabled.
      operationId: bigtableadmin.projects.instances.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
    get:
      description: Lists information about instances in a project.
      operationId: bigtableadmin.projects.instances.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstancesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}:
    parameters: *ref_1
    get:
      description: Gets information about an instance.
      operationId: bigtableadmin.projects.instances.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
    put:
      description: >-
        Updates an instance within a project. This method updates only the
        display name and type for an Instance. To update other Instance
        properties, such as labels, use PartialUpdateInstance.
      operationId: bigtableadmin.projects.instances.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Partially updates an instance within a project. This method can modify
        all fields of an Instance and is the preferred way to update an
        Instance.
      operationId: bigtableadmin.projects.instances.partialUpdateInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Delete an instance from a project.
      operationId: bigtableadmin.projects.instances.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}:getIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Gets the access control policy for an instance resource. Returns an
        empty policy if an instance exists but does not have a policy set.
      operationId: bigtableadmin.projects.instances.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on an instance resource. Replaces any
        existing policy.
      operationId: bigtableadmin.projects.instances.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that the caller has on the specified instance
        resource.
      operationId: bigtableadmin.projects.instances.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/clusters:
    parameters: *ref_1
    post:
      description: >-
        Creates a cluster within an instance. Note that exactly one of
        Cluster.serve_nodes and
        Cluster.cluster_config.cluster_autoscaling_config can be set. If
        serve_nodes is set to non-zero, then the cluster is manually scaled. If
        cluster_config.cluster_autoscaling_config is non-empty, then autoscaling
        is enabled.
      operationId: bigtableadmin.projects.instances.clusters.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: clusterId
          schema:
            type: string
    get:
      description: Lists information about clusters in an instance.
      operationId: bigtableadmin.projects.instances.clusters.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClustersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}:
    parameters: *ref_1
    get:
      description: Gets information about a cluster.
      operationId: bigtableadmin.projects.instances.clusters.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
    put:
      description: >-
        Updates a cluster within an instance. Note that UpdateCluster does not
        support updating cluster_config.cluster_autoscaling_config. In order to
        update it, you must use PartialUpdateCluster.
      operationId: bigtableadmin.projects.instances.clusters.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Partially updates a cluster within a project. This method is the
        preferred way to update a Cluster. To enable and update autoscaling, set
        cluster_config.cluster_autoscaling_config. When autoscaling is enabled,
        serve_nodes is treated as an OUTPUT_ONLY field, meaning that updates to
        it are ignored. Note that an update cannot simultaneously set
        serve_nodes to non-zero and cluster_config.cluster_autoscaling_config to
        non-empty, and also specify both in the update_mask. To disable
        autoscaling, clear cluster_config.cluster_autoscaling_config, and
        explicitly set a serve_node count via the update_mask.
      operationId: bigtableadmin.projects.instances.clusters.partialUpdateCluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a cluster from an instance.
      operationId: bigtableadmin.projects.instances.clusters.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}/hotTablets:
    parameters: *ref_1
    get:
      description: >-
        Lists hot tablets in a cluster, within the time range provided. Hot
        tablets are ordered based on CPU usage.
      operationId: bigtableadmin.projects.instances.clusters.hotTablets.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHotTabletsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: query
          name: startTime
          schema:
            type: string
            format: google-datetime
        - in: query
          name: endTime
          schema:
            type: string
            format: google-datetime
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}/backups:
    parameters: *ref_1
    post:
      description: >-
        Starts creating a new Cloud Bigtable Backup. The returned backup
        long-running operation can be used to track creation of the backup. The
        metadata field type is CreateBackupMetadata. The response field type is
        Backup, if successful. Cancelling the returned operation will stop the
        creation and delete the backup.
      operationId: bigtableadmin.projects.instances.clusters.backups.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Backup'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: query
          name: backupId
          schema:
            type: string
    get:
      description: >-
        Lists Cloud Bigtable backups. Returns both completed and pending
        backups.
      operationId: bigtableadmin.projects.instances.clusters.backups.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}/backups/{backupsId}:
    parameters: *ref_1
    get:
      description: Gets metadata on a pending or completed Cloud Bigtable Backup.
      operationId: bigtableadmin.projects.instances.clusters.backups.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
    patch:
      description: Updates a pending or completed Cloud Bigtable Backup.
      operationId: bigtableadmin.projects.instances.clusters.backups.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Backup'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a pending or completed Cloud Bigtable backup.
      operationId: bigtableadmin.projects.instances.clusters.backups.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}/backups:copy:
    parameters: *ref_1
    post:
      description: >-
        Copy a Cloud Bigtable backup to a new backup in the destination cluster
        located in the destination instance and project.
      operationId: bigtableadmin.projects.instances.clusters.backups.copy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyBackupRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}/backups/{backupsId}:getIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Gets the access control policy for a Bigtable resource. Returns an empty
        policy if the resource exists but does not have a policy set.
      operationId: bigtableadmin.projects.instances.clusters.backups.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}/backups/{backupsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on a Bigtable resource. Replaces any
        existing policy.
      operationId: bigtableadmin.projects.instances.clusters.backups.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}/backups/{backupsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that the caller has on the specified Bigtable
        resource.
      operationId: bigtableadmin.projects.instances.clusters.backups.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/appProfiles:
    parameters: *ref_1
    post:
      description: Creates an app profile within an instance.
      operationId: bigtableadmin.projects.instances.appProfiles.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppProfile'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppProfile'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: appProfileId
          schema:
            type: string
        - in: query
          name: ignoreWarnings
          schema:
            type: boolean
    get:
      description: Lists information about app profiles in an instance.
      operationId: bigtableadmin.projects.instances.appProfiles.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAppProfilesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/appProfiles/{appProfilesId}:
    parameters: *ref_1
    get:
      description: Gets information about an app profile.
      operationId: bigtableadmin.projects.instances.appProfiles.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppProfile'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: appProfilesId
          required: true
          schema:
            type: string
    patch:
      description: Updates an app profile within an instance.
      operationId: bigtableadmin.projects.instances.appProfiles.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppProfile'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: appProfilesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: ignoreWarnings
          schema:
            type: boolean
    delete:
      description: Deletes an app profile from an instance.
      operationId: bigtableadmin.projects.instances.appProfiles.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: appProfilesId
          required: true
          schema:
            type: string
        - in: query
          name: ignoreWarnings
          schema:
            type: boolean
  /v2/projects/{projectsId}/instances/{instancesId}/materializedViews/{materializedViewsId}:getIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Gets the access control policy for an instance resource. Returns an
        empty policy if an instance exists but does not have a policy set.
      operationId: bigtableadmin.projects.instances.materializedViews.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: materializedViewsId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/materializedViews/{materializedViewsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on an instance resource. Replaces any
        existing policy.
      operationId: bigtableadmin.projects.instances.materializedViews.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: materializedViewsId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/materializedViews/{materializedViewsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that the caller has on the specified instance
        resource.
      operationId: bigtableadmin.projects.instances.materializedViews.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: materializedViewsId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/materializedViews:
    parameters: *ref_1
    post:
      description: Creates a materialized view within an instance.
      operationId: bigtableadmin.projects.instances.materializedViews.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterializedView'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: materializedViewId
          schema:
            type: string
    get:
      description: Lists information about materialized views in an instance.
      operationId: bigtableadmin.projects.instances.materializedViews.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMaterializedViewsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/materializedViews/{materializedViewsId}:
    parameters: *ref_1
    get:
      description: Gets information about a materialized view.
      operationId: bigtableadmin.projects.instances.materializedViews.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterializedView'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: materializedViewsId
          required: true
          schema:
            type: string
    patch:
      description: Updates a materialized view within an instance.
      operationId: bigtableadmin.projects.instances.materializedViews.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterializedView'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: materializedViewsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a materialized view from an instance.
      operationId: bigtableadmin.projects.instances.materializedViews.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: materializedViewsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/logicalViews/{logicalViewsId}:getIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Gets the access control policy for an instance resource. Returns an
        empty policy if an instance exists but does not have a policy set.
      operationId: bigtableadmin.projects.instances.logicalViews.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: logicalViewsId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/logicalViews/{logicalViewsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on an instance resource. Replaces any
        existing policy.
      operationId: bigtableadmin.projects.instances.logicalViews.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: logicalViewsId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/logicalViews/{logicalViewsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that the caller has on the specified instance
        resource.
      operationId: bigtableadmin.projects.instances.logicalViews.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: logicalViewsId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/logicalViews:
    parameters: *ref_1
    post:
      description: Creates a logical view within an instance.
      operationId: bigtableadmin.projects.instances.logicalViews.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogicalView'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: logicalViewId
          schema:
            type: string
    get:
      description: Lists information about logical views in an instance.
      operationId: bigtableadmin.projects.instances.logicalViews.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLogicalViewsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/logicalViews/{logicalViewsId}:
    parameters: *ref_1
    get:
      description: Gets information about a logical view.
      operationId: bigtableadmin.projects.instances.logicalViews.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogicalView'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: logicalViewsId
          required: true
          schema:
            type: string
    patch:
      description: Updates a logical view within an instance.
      operationId: bigtableadmin.projects.instances.logicalViews.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogicalView'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: logicalViewsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes a logical view from an instance.
      operationId: bigtableadmin.projects.instances.logicalViews.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: logicalViewsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/tables:
    parameters: *ref_1
    post:
      description: >-
        Creates a new table in the specified instance. The table can be created
        with a full set of initial column families, specified in the request.
      operationId: bigtableadmin.projects.instances.tables.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTableRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
    get:
      description: Lists all tables served from a specified instance.
      operationId: bigtableadmin.projects.instances.tables.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTablesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}:
    parameters: *ref_1
    get:
      description: Gets metadata information about the specified table.
      operationId: bigtableadmin.projects.instances.tables.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
    patch:
      description: Updates a specified table.
      operationId: bigtableadmin.projects.instances.tables.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Table'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: ignoreWarnings
          schema:
            type: boolean
    delete:
      description: Permanently deletes a specified table and all of its data.
      operationId: bigtableadmin.projects.instances.tables.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}:undelete:
    parameters: *ref_1
    post:
      description: Restores a specified table which was accidentally deleted.
      operationId: bigtableadmin.projects.instances.tables.undelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeleteTableRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}:modifyColumnFamilies:
    parameters: *ref_1
    post:
      description: >-
        Performs a series of column family modifications on the specified table.
        Either all or none of the modifications will occur before this method
        returns, but data requests received prior to that point may see a table
        where only some modifications have taken effect.
      operationId: bigtableadmin.projects.instances.tables.modifyColumnFamilies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyColumnFamiliesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}:dropRowRange:
    parameters: *ref_1
    post:
      description: >-
        Permanently drop/delete a row range from a specified table. The request
        can specify whether to delete all rows in a table, or only those that
        match a particular prefix. Note that row key prefixes used here are
        treated as service data. For more information about how service data is
        handled, see the [Google Cloud Privacy
        Notice](https://cloud.google.com/terms/cloud-privacy-notice).
      operationId: bigtableadmin.projects.instances.tables.dropRowRange
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DropRowRangeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}:generateConsistencyToken:
    parameters: *ref_1
    post:
      description: >-
        Generates a consistency token for a Table, which can be used in
        CheckConsistency to check whether mutations to the table that finished
        before this call started have been replicated. The tokens will be
        available for 90 days.
      operationId: bigtableadmin.projects.instances.tables.generateConsistencyToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateConsistencyTokenRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateConsistencyTokenResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}:checkConsistency:
    parameters: *ref_1
    post:
      description: >-
        Checks replication consistency based on a consistency token, that is, if
        replication has caught up based on the conditions specified in the token
        and the check request.
      operationId: bigtableadmin.projects.instances.tables.checkConsistency
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckConsistencyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckConsistencyResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/tables:restore:
    parameters: *ref_1
    post:
      description: >-
        Create a new table by restoring from a completed backup. The returned
        table long-running operation can be used to track the progress of the
        operation, and to cancel it. The metadata field type is
        RestoreTableMetadata. The response type is Table, if successful.
      operationId: bigtableadmin.projects.instances.tables.restore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreTableRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}:getIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Gets the access control policy for a Bigtable resource. Returns an empty
        policy if the resource exists but does not have a policy set.
      operationId: bigtableadmin.projects.instances.tables.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on a Bigtable resource. Replaces any
        existing policy.
      operationId: bigtableadmin.projects.instances.tables.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that the caller has on the specified Bigtable
        resource.
      operationId: bigtableadmin.projects.instances.tables.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}/authorizedViews:
    parameters: *ref_1
    post:
      description: Creates a new AuthorizedView in a table.
      operationId: bigtableadmin.projects.instances.tables.authorizedViews.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizedView'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
        - in: query
          name: authorizedViewId
          schema:
            type: string
    get:
      description: Lists all AuthorizedViews from a specific table.
      operationId: bigtableadmin.projects.instances.tables.authorizedViews.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAuthorizedViewsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}/authorizedViews/{authorizedViewsId}:
    parameters: *ref_1
    get:
      description: Gets information from a specified AuthorizedView.
      operationId: bigtableadmin.projects.instances.tables.authorizedViews.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizedView'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
    patch:
      description: Updates an AuthorizedView in a table.
      operationId: bigtableadmin.projects.instances.tables.authorizedViews.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizedView'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: ignoreWarnings
          schema:
            type: boolean
    delete:
      description: Permanently deletes a specified AuthorizedView.
      operationId: bigtableadmin.projects.instances.tables.authorizedViews.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}/authorizedViews/{authorizedViewsId}:getIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Gets the access control policy for a Bigtable resource. Returns an empty
        policy if the resource exists but does not have a policy set.
      operationId: bigtableadmin.projects.instances.tables.authorizedViews.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}/authorizedViews/{authorizedViewsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on a Bigtable resource. Replaces any
        existing policy.
      operationId: bigtableadmin.projects.instances.tables.authorizedViews.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}/authorizedViews/{authorizedViewsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that the caller has on the specified Bigtable
        resource.
      operationId: >-
        bigtableadmin.projects.instances.tables.authorizedViews.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedViewsId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}/schemaBundles/{schemaBundlesId}:getIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Gets the access control policy for a Bigtable resource. Returns an empty
        policy if the resource exists but does not have a policy set.
      operationId: bigtableadmin.projects.instances.tables.schemaBundles.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
        - in: path
          name: schemaBundlesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}/schemaBundles/{schemaBundlesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on a Bigtable resource. Replaces any
        existing policy.
      operationId: bigtableadmin.projects.instances.tables.schemaBundles.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
        - in: path
          name: schemaBundlesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}/schemaBundles/{schemaBundlesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that the caller has on the specified Bigtable
        resource.
      operationId: bigtableadmin.projects.instances.tables.schemaBundles.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
        - in: path
          name: schemaBundlesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}/schemaBundles:
    parameters: *ref_1
    post:
      description: Creates a new schema bundle in the specified table.
      operationId: bigtableadmin.projects.instances.tables.schemaBundles.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SchemaBundle'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
        - in: query
          name: schemaBundleId
          schema:
            type: string
    get:
      description: Lists all schema bundles associated with the specified table.
      operationId: bigtableadmin.projects.instances.tables.schemaBundles.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSchemaBundlesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
  /v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}/schemaBundles/{schemaBundlesId}:
    parameters: *ref_1
    patch:
      description: Updates a schema bundle in the specified table.
      operationId: bigtableadmin.projects.instances.tables.schemaBundles.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SchemaBundle'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
        - in: path
          name: schemaBundlesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: ignoreWarnings
          schema:
            type: boolean
    get:
      description: Gets metadata information about the specified schema bundle.
      operationId: bigtableadmin.projects.instances.tables.schemaBundles.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaBundle'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
        - in: path
          name: schemaBundlesId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a schema bundle in the specified table.
      operationId: bigtableadmin.projects.instances.tables.schemaBundles.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
        - in: path
          name: schemaBundlesId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
  /v2/projects/{projectsId}/locations:
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: bigtableadmin.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: extraLocationTypes
          schema:
            type: string
