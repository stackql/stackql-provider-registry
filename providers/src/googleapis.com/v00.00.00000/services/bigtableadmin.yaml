openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Cloud Bigtable Admin API
  description: Administer your Cloud Bigtable tables and instances.
  version: v2
  x-discovery-doc-revision: '20230731'
  x-generated-date: '2023-09-01'
externalDocs:
  url: 'https://cloud.google.com/bigtable/'
servers:
  - url: 'https://bigtableadmin.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform.read-only': View your data across Google Cloud services and see the email address of your Google Account
            'https://www.googleapis.com/auth/bigtable.admin.cluster': Administer your Cloud Bigtable clusters
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
            'https://www.googleapis.com/auth/bigtable.admin.table': Administer your Cloud Bigtable tables
            'https://www.googleapis.com/auth/bigtable.admin': Administer your Cloud Bigtable tables and clusters
            'https://www.googleapis.com/auth/bigtable.admin.instance': Administer your Cloud Bigtable clusters
            'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster': Administer your Cloud Bigtable clusters
            'https://www.googleapis.com/auth/cloud-bigtable.admin': Administer your Cloud Bigtable tables and clusters
            'https://www.googleapis.com/auth/cloud-bigtable.admin.table': Administer your Cloud Bigtable tables
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    UpdateTableMetadata:
      type: object
      properties:
        name:
          type: string
          description: The name of the table being updated.
        startTime:
          type: string
          format: google-datetime
          description: The time at which this operation started.
        endTime:
          format: google-datetime
          type: string
          description: 'If set, the time at which this operation finished or was canceled.'
      description: Metadata type for the operation returned by UpdateTable.
      id: UpdateTableMetadata
    Policy:
      id: Policy
      properties:
        etag:
          description: '`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.'
          format: byte
          type: string
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          type: array
          items:
            $ref: '#/components/schemas/AuditConfig'
        bindings:
          description: 'Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.'
          type: array
          items:
            $ref: '#/components/schemas/Binding'
        version:
          format: int32
          type: integer
          description: 'Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
      description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp(''2020-10-01T00:00:00.000Z'')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).'
      type: object
    EncryptionInfo:
      type: object
      description: 'Encryption information for a given resource. If this resource is protected with customer managed encryption, the in-use Cloud Key Management Service (Cloud KMS) key version is specified along with its status.'
      id: EncryptionInfo
      properties:
        encryptionType:
          enum:
            - ENCRYPTION_TYPE_UNSPECIFIED
            - GOOGLE_DEFAULT_ENCRYPTION
            - CUSTOMER_MANAGED_ENCRYPTION
          type: string
          description: Output only. The type of encryption used to protect this resource.
          enumDescriptions:
            - 'Encryption type was not specified, though data at rest remains encrypted.'
            - The data backing this resource is encrypted at rest with a key that is fully managed by Google. No key version or status will be populated. This is the default state.
            - The data backing this resource is encrypted at rest with a key that is managed by the customer. The in-use version of the key and its status are populated for CMEK-protected tables. CMEK-protected backups are pinned to the key version that was in use at the time the backup was taken. This key version is populated but its status is not tracked and is reported as `UNKNOWN`.
          readOnly: true
        encryptionStatus:
          description: 'Output only. The status of encrypt/decrypt calls on underlying data for this resource. Regardless of status, the existing data is always encrypted at rest.'
          readOnly: true
          $ref: '#/components/schemas/Status'
        kmsKeyVersion:
          readOnly: true
          description: Output only. The version of the Cloud KMS key specified in the parent cluster that is in use for the data underlying this table.
          type: string
    ListOperationsResponse:
      type: object
      description: The response message for Operations.ListOperations.
      id: ListOperationsResponse
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Operation'
          type: array
    ModifyColumnFamiliesRequest:
      type: object
      description: Request message for google.bigtable.admin.v2.BigtableTableAdmin.ModifyColumnFamilies
      properties:
        modifications:
          items:
            $ref: '#/components/schemas/Modification'
          description: 'Required. Modifications to be atomically applied to the specified table''s families. Entries are applied in order, meaning that earlier modifications can be masked by later ones (in the case of repeated updates to the same family, for example).'
          type: array
        ignoreWarnings:
          description: 'If true, ignore safety checks when modifying the column families.'
          type: boolean
      id: ModifyColumnFamiliesRequest
    CreateInstanceMetadata:
      description: The metadata for the Operation returned by CreateInstance.
      properties:
        finishTime:
          format: google-datetime
          type: string
          description: The time at which the operation failed or was completed successfully.
        originalRequest:
          $ref: '#/components/schemas/CreateInstanceRequest'
          description: The request that prompted the initiation of this CreateInstance operation.
        requestTime:
          format: google-datetime
          description: The time at which the original request was received.
          type: string
      id: CreateInstanceMetadata
      type: object
    EncryptionConfig:
      type: object
      description: Cloud Key Management Service (Cloud KMS) settings for a CMEK-protected cluster.
      id: EncryptionConfig
      properties:
        kmsKeyName:
          description: 'Describes the Cloud KMS encryption key that will be used to protect the destination Bigtable cluster. The requirements for this key are: 1) The Cloud Bigtable service account associated with the project that contains this cluster must be granted the `cloudkms.cryptoKeyEncrypterDecrypter` role on the CMEK key. 2) Only regional keys can be used and the region of the CMEK key must match the region of the cluster. Values are of the form `projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}`'
          type: string
    CheckConsistencyRequest:
      properties:
        consistencyToken:
          description: Required. The token created using GenerateConsistencyToken for the Table.
          type: string
      description: Request message for google.bigtable.admin.v2.BigtableTableAdmin.CheckConsistency
      id: CheckConsistencyRequest
      type: object
    CreateClusterMetadata:
      description: The metadata for the Operation returned by CreateCluster.
      id: CreateClusterMetadata
      type: object
      properties:
        tables:
          description: 'Keys: the full `name` of each table that existed in the instance when CreateCluster was first called, i.e. `projects//instances//tables/`. Any table added to the instance by a later API call will be created in the new cluster by that API call, not this one. Values: information on how much of a table''s data has been copied to the newly-created cluster so far.'
          type: object
          additionalProperties:
            $ref: '#/components/schemas/TableProgress'
        finishTime:
          type: string
          description: The time at which the operation failed or was completed successfully.
          format: google-datetime
        originalRequest:
          $ref: '#/components/schemas/CreateClusterRequest'
          description: The request that prompted the initiation of this CreateCluster operation.
        requestTime:
          description: The time at which the original request was received.
          format: google-datetime
          type: string
    CheckConsistencyResponse:
      id: CheckConsistencyResponse
      type: object
      properties:
        consistent:
          type: boolean
          description: True only if the token is consistent. A token is consistent if replication has caught up with the restrictions specified in the request.
      description: Response message for google.bigtable.admin.v2.BigtableTableAdmin.CheckConsistency
    AuditLogConfig:
      id: AuditLogConfig
      properties:
        logType:
          description: The log type that this config enables.
          type: string
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
        exemptedMembers:
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
          items:
            type: string
          type: array
      type: object
      description: 'Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables ''DATA_READ'' and ''DATA_WRITE'' logging, while exempting jose@example.com from DATA_READ logging.'
    GetPolicyOptions:
      type: object
      properties:
        requestedPolicyVersion:
          type: integer
          description: 'Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
          format: int32
      description: Encapsulates settings provided to GetIamPolicy.
      id: GetPolicyOptions
    ListBackupsResponse:
      properties:
        nextPageToken:
          description: '`next_page_token` can be sent in a subsequent ListBackups call to fetch more of the matching backups.'
          type: string
        backups:
          type: array
          description: The list of matching backups.
          items:
            $ref: '#/components/schemas/Backup'
      description: The response for ListBackups.
      type: object
      id: ListBackupsResponse
    PartialUpdateClusterRequest:
      properties:
        cluster:
          description: 'Required. The Cluster which contains the partial updates to be applied, subject to the update_mask.'
          $ref: '#/components/schemas/Cluster'
        updateMask:
          type: string
          format: google-fieldmask
          description: Required. The subset of Cluster fields which should be replaced.
      type: object
      description: Request message for BigtableInstanceAdmin.PartialUpdateCluster.
      id: PartialUpdateClusterRequest
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          items:
            $ref: '#/components/schemas/Location'
          description: A list of locations that matches the specified filter in the request.
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
      id: ListLocationsResponse
    Intersection:
      description: A GcRule which deletes cells matching all of the given rules.
      type: object
      id: Intersection
      properties:
        rules:
          items:
            $ref: '#/components/schemas/GcRule'
          type: array
          description: Only delete cells which would be deleted by every element of `rules`.
    ListClustersResponse:
      properties:
        failedLocations:
          items:
            type: string
          type: array
          description: 'Locations from which Cluster information could not be retrieved, due to an outage or some other transient condition. Clusters from these locations may be missing from `clusters`, or may only have partial information returned. Values are of the form `projects//locations/`'
        clusters:
          type: array
          items:
            $ref: '#/components/schemas/Cluster'
          description: The list of requested clusters.
        nextPageToken:
          type: string
          description: 'DEPRECATED: This field is unused and ignored.'
      type: object
      id: ListClustersResponse
      description: Response message for BigtableInstanceAdmin.ListClusters.
    AutoscalingTargets:
      properties:
        storageUtilizationGibPerNode:
          format: int32
          description: 'The storage utilization that the Autoscaler should be trying to achieve. This number is limited between 2560 (2.5TiB) and 5120 (5TiB) for a SSD cluster and between 8192 (8TiB) and 16384 (16TiB) for an HDD cluster, otherwise it will return INVALID_ARGUMENT error. If this value is set to 0, it will be treated as if it were set to the default value: 2560 for SSD, 8192 for HDD.'
          type: integer
        cpuUtilizationPercent:
          format: int32
          description: 'The cpu utilization that the Autoscaler should be trying to achieve. This number is on a scale from 0 (no utilization) to 100 (total utilization), and is limited between 10 and 80, otherwise it will return INVALID_ARGUMENT error.'
          type: integer
      type: object
      description: The Autoscaling targets for a Cluster. These determine the recommended nodes.
      id: AutoscalingTargets
    TableProgress:
      id: TableProgress
      type: object
      description: Progress info for copying a table's data to the new cluster.
      properties:
        estimatedCopiedBytes:
          format: int64
          type: string
          description: Estimate of the number of bytes copied so far for this table. This will eventually reach 'estimated_size_bytes' unless the table copy is CANCELLED.
        state:
          type: string
          enumDescriptions:
            - ''
            - The table has not yet begun copying to the new cluster.
            - The table is actively being copied to the new cluster.
            - The table has been fully copied to the new cluster.
            - 'The table was deleted before it finished copying to the new cluster. Note that tables deleted after completion will stay marked as COMPLETED, not CANCELLED.'
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - COPYING
            - COMPLETED
            - CANCELLED
        estimatedSizeBytes:
          type: string
          format: int64
          description: Estimate of the size of the table to be copied.
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      type: object
      properties:
        policy:
          $ref: '#/components/schemas/Policy'
          description: 'REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.'
        updateMask:
          description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`'
          type: string
          format: google-fieldmask
      id: SetIamPolicyRequest
    DropRowRangeRequest:
      type: object
      description: Request message for google.bigtable.admin.v2.BigtableTableAdmin.DropRowRange
      properties:
        rowKeyPrefix:
          type: string
          description: Delete all rows that start with this row key prefix. Prefix cannot be zero length.
          format: byte
        deleteAllDataFromTable:
          description: Delete all rows in the table. Setting this to false is a no-op.
          type: boolean
      id: DropRowRangeRequest
    AutoscalingLimits:
      properties:
        maxServeNodes:
          description: Required. Maximum number of nodes to scale up to.
          format: int32
          type: integer
        minServeNodes:
          description: Required. Minimum number of nodes to scale down to.
          format: int32
          type: integer
      type: object
      description: Limits for the number of nodes a Cluster can autoscale up/down to.
      id: AutoscalingLimits
    ChangeStreamConfig:
      description: Change stream configuration.
      id: ChangeStreamConfig
      type: object
      properties:
        retentionPeriod:
          format: google-duration
          description: 'How long the change stream should be retained. Change stream data older than the retention period will not be returned when reading the change stream from the table. Values must be at least 1 day and at most 7 days, and will be truncated to microsecond granularity.'
          type: string
    ListTablesResponse:
      description: Response message for google.bigtable.admin.v2.BigtableTableAdmin.ListTables
      type: object
      properties:
        tables:
          description: The tables present in the requested instance.
          items:
            $ref: '#/components/schemas/Table'
          type: array
        nextPageToken:
          type: string
          description: Set if not all tables could be returned in a single response. Pass this value to `page_token` in another request to get the next page of results.
      id: ListTablesResponse
    Operation:
      properties:
        name:
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
          type: string
        error:
          description: The error result of the operation in case of failure or cancellation.
          $ref: '#/components/schemas/Status'
        metadata:
          type: object
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          type: boolean
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
        response:
          description: 'The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
      type: object
      id: Operation
      description: This resource represents a long-running operation that is the result of a network API call.
    Status:
      type: object
      properties:
        details:
          items:
            type: object
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          type: array
        code:
          format: int32
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          type: integer
        message:
          type: string
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      id: Status
    ListAppProfilesResponse:
      id: ListAppProfilesResponse
      description: Response message for BigtableInstanceAdmin.ListAppProfiles.
      properties:
        appProfiles:
          description: The list of requested app profiles.
          items:
            $ref: '#/components/schemas/AppProfile'
          type: array
        nextPageToken:
          type: string
          description: Set if not all app profiles could be returned in a single response. Pass this value to `page_token` in another request to get the next page of results.
        failedLocations:
          description: 'Locations from which AppProfile information could not be retrieved, due to an outage or some other transient condition. AppProfiles from these locations may be missing from `app_profiles`. Values are of the form `projects//locations/`'
          items:
            type: string
          type: array
      type: object
    OperationProgress:
      type: object
      id: OperationProgress
      properties:
        progressPercent:
          description: Percent completion of the operation. Values are between 0 and 100 inclusive.
          type: integer
          format: int32
        startTime:
          format: google-datetime
          type: string
          description: Time the request was received.
        endTime:
          type: string
          description: 'If set, the time at which this operation failed or was completed successfully.'
          format: google-datetime
      description: Encapsulates progress related information for a Cloud Bigtable long running operation.
    RestoreTableMetadata:
      id: RestoreTableMetadata
      description: Metadata type for the long-running operation returned by RestoreTable.
      type: object
      properties:
        progress:
          $ref: '#/components/schemas/OperationProgress'
          description: The progress of the RestoreTable operation.
        sourceType:
          description: The type of the restore source.
          enumDescriptions:
            - No restore associated.
            - A backup was used as the source of the restore.
          type: string
          enum:
            - RESTORE_SOURCE_TYPE_UNSPECIFIED
            - BACKUP
        backupInfo:
          $ref: '#/components/schemas/BackupInfo'
        optimizeTableOperationName:
          description: 'If exists, the name of the long-running operation that will be used to track the post-restore optimization process to optimize the performance of the restored table. The metadata type of the long-running operation is OptimizeRestoreTableMetadata. The response type is Empty. This long-running operation may be automatically created by the system if applicable after the RestoreTable long-running operation completes successfully. This operation may not be created if the table is already optimized or the restore was not successful.'
          type: string
        name:
          description: Name of the table being created and restored to.
          type: string
    GenerateConsistencyTokenRequest:
      id: GenerateConsistencyTokenRequest
      type: object
      description: Request message for google.bigtable.admin.v2.BigtableTableAdmin.GenerateConsistencyToken
      properties: {}
    GenerateConsistencyTokenResponse:
      properties:
        consistencyToken:
          description: The generated consistency token.
          type: string
      type: object
      id: GenerateConsistencyTokenResponse
      description: Response message for google.bigtable.admin.v2.BigtableTableAdmin.GenerateConsistencyToken
    Empty:
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      properties: {}
      type: object
      id: Empty
    CreateTableRequest:
      properties:
        initialSplits:
          items:
            $ref: '#/components/schemas/Split'
          type: array
          description: 'The optional list of row keys that will be used to initially split the table into several tablets (tablets are similar to HBase regions). Given two split keys, `s1` and `s2`, three tablets will be created, spanning the key ranges: `[, s1), [s1, s2), [s2, )`. Example: * Row keys := `["a", "apple", "custom", "customer_1", "customer_2",` `"other", "zz"]` * initial_split_keys := `["apple", "customer_1", "customer_2", "other"]` * Key assignment: - Tablet 1 `[, apple) => {"a"}.` - Tablet 2 `[apple, customer_1) => {"apple", "custom"}.` - Tablet 3 `[customer_1, customer_2) => {"customer_1"}.` - Tablet 4 `[customer_2, other) => {"customer_2"}.` - Tablet 5 `[other, ) => {"other", "zz"}.`'
        table:
          description: Required. The Table to create.
          $ref: '#/components/schemas/Table'
        tableId:
          description: 'Required. The name by which the new table should be referred to within the parent instance, e.g., `foobar` rather than `{parent}/tables/foobar`. Maximum 50 characters.'
          type: string
      id: CreateTableRequest
      description: Request message for google.bigtable.admin.v2.BigtableTableAdmin.CreateTable
      type: object
    UpdateInstanceMetadata:
      description: The metadata for the Operation returned by UpdateInstance.
      type: object
      properties:
        originalRequest:
          $ref: '#/components/schemas/PartialUpdateInstanceRequest'
          description: The request that prompted the initiation of this UpdateInstance operation.
        requestTime:
          description: The time at which the original request was received.
          type: string
          format: google-datetime
        finishTime:
          description: The time at which the operation failed or was completed successfully.
          type: string
          format: google-datetime
      id: UpdateInstanceMetadata
    CreateClusterRequest:
      description: Request message for BigtableInstanceAdmin.CreateCluster.
      type: object
      id: CreateClusterRequest
      properties:
        cluster:
          description: Required. The cluster to be created. Fields marked `OutputOnly` must be left blank.
          $ref: '#/components/schemas/Cluster'
        clusterId:
          type: string
          description: 'Required. The ID to be used when referring to the new cluster within its instance, e.g., just `mycluster` rather than `projects/myproject/instances/myinstance/clusters/mycluster`.'
        parent:
          description: 'Required. The unique name of the instance in which to create the new cluster. Values are of the form `projects/{project}/instances/{instance}`.'
          type: string
    CreateInstanceRequest:
      properties:
        instanceId:
          type: string
          description: 'Required. The ID to be used when referring to the new instance within its project, e.g., just `myinstance` rather than `projects/myproject/instances/myinstance`.'
        parent:
          description: 'Required. The unique name of the project in which to create the new instance. Values are of the form `projects/{project}`.'
          type: string
        clusters:
          additionalProperties:
            $ref: '#/components/schemas/Cluster'
          type: object
          description: 'Required. The clusters to be created within the instance, mapped by desired cluster ID, e.g., just `mycluster` rather than `projects/myproject/instances/myinstance/clusters/mycluster`. Fields marked `OutputOnly` must be left blank.'
        instance:
          $ref: '#/components/schemas/Instance'
          description: Required. The instance to create. Fields marked `OutputOnly` must be left blank.
      type: object
      description: Request message for BigtableInstanceAdmin.CreateInstance.
      id: CreateInstanceRequest
    Binding:
      properties:
        role:
          type: string
          description: 'Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.'
        members:
          type: array
          description: 'Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.'
          items:
            type: string
        condition:
          description: 'The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
          $ref: '#/components/schemas/Expr'
      description: 'Associates `members`, or principals, with a `role`.'
      id: Binding
      type: object
    CopyBackupRequest:
      id: CopyBackupRequest
      properties:
        backupId:
          type: string
          description: 'Required. The id of the new backup. The `backup_id` along with `parent` are combined as {parent}/backups/{backup_id} to create the full backup name, of the form: `projects/{project}/instances/{instance}/clusters/{cluster}/backups/{backup_id}`. This string must be between 1 and 50 characters in length and match the regex _a-zA-Z0-9*.'
        sourceBackup:
          description: 'Required. The source backup to be copied from. The source backup needs to be in READY state for it to be copied. Copying a copied backup is not allowed. Once CopyBackup is in progress, the source backup cannot be deleted or cleaned up on expiration until CopyBackup is finished. Values are of the form: `projects//instances//clusters//backups/`.'
          type: string
        expireTime:
          description: 'Required. Required. The expiration time of the copied backup with microsecond granularity that must be at least 6 hours and at most 30 days from the time the request is received. Once the `expire_time` has passed, Cloud Bigtable will delete the backup and free the resources used by the backup.'
          format: google-datetime
          type: string
      description: The request for CopyBackup.
      type: object
    RestoreInfo:
      description: Information about a table restore.
      type: object
      properties:
        sourceType:
          enumDescriptions:
            - No restore associated.
            - A backup was used as the source of the restore.
          description: The type of the restore source.
          enum:
            - RESTORE_SOURCE_TYPE_UNSPECIFIED
            - BACKUP
          type: string
        backupInfo:
          $ref: '#/components/schemas/BackupInfo'
          description: Information about the backup used to restore the table. The backup may no longer exist.
      id: RestoreInfo
    AuditConfig:
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.'
      id: AuditConfig
      type: object
      properties:
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          type: array
          items:
            $ref: '#/components/schemas/AuditLogConfig'
        service:
          type: string
          description: 'Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.'
    Expr:
      type: object
      properties:
        title:
          type: string
          description: 'Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.'
        description:
          type: string
          description: 'Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.'
        expression:
          description: Textual representation of an expression in Common Expression Language syntax.
          type: string
        location:
          description: 'Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.'
          type: string
      description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != ''private'' && document.type != ''internal''" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "''New message received at '' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.'
      id: Expr
    RestoreTableRequest:
      properties:
        backup:
          type: string
          description: Name of the backup from which to restore. Values are of the form `projects//instances//clusters//backups/`.
        tableId:
          type: string
          description: Required. The id of the table to create and restore to. This table must not already exist. The `table_id` appended to `parent` forms the full table name of the form `projects//instances//tables/`.
      id: RestoreTableRequest
      description: The request for RestoreTable.
      type: object
    ColumnFamilyStats:
      type: object
      description: 'Approximate statistics related to a single column family within a table. This information may change rapidly, interpreting these values at a point in time may already preset out-of-date information. Everything below is approximate, unless otherwise specified.'
      id: ColumnFamilyStats
      properties:
        logicalDataBytes:
          format: int64
          type: string
          description: How much space the data in the column family occupies. This is roughly how many bytes would be needed to read the contents of the entire column family (e.g. by streaming all contents out).
        averageColumnsPerRow:
          description: 'How many column qualifiers are present in this column family, averaged over all rows in the table. e.g. For column family "family" in a table with 3 rows: * A row with cells in "family:col" and "other:col" (1 column in "family") * A row with cells in "family:col", "family:other_col", and "other:data" (2 columns in "family") * A row with cells in "other:col" (0 columns in "family", "family" not present) would report (1 + 2 + 0)/3 = 1.5 in this field.'
          format: double
          type: number
        averageCellsPerColumn:
          description: 'How many cells are present per column qualifier in this column family, averaged over all rows containing any column in the column family. e.g. For column family "family" in a table with 3 rows: * A row with 3 cells in "family:col" and 1 cell in "other:col" (3 cells / 1 column in "family") * A row with 1 cell in "family:col", 7 cells in "family:other_col", and 7 cells in "other:data" (8 cells / 2 columns in "family") * A row with 3 cells in "other:col" (0 columns in "family", "family" not present) would report (3 + 8 + 0)/(1 + 2 + 0) = 3.66 in this field.'
          format: double
          type: number
    ClusterState:
      id: ClusterState
      description: The state of a table's data in a particular cluster.
      properties:
        replicationState:
          enum:
            - STATE_NOT_KNOWN
            - INITIALIZING
            - PLANNED_MAINTENANCE
            - UNPLANNED_MAINTENANCE
            - READY
            - READY_OPTIMIZING
          readOnly: true
          enumDescriptions:
            - The replication state of the table is unknown in this cluster.
            - 'The cluster was recently created, and the table must finish copying over pre-existing data from other clusters before it can begin receiving live replication updates and serving Data API requests.'
            - The table is temporarily unable to serve Data API requests from this cluster due to planned internal maintenance.
            - The table is temporarily unable to serve Data API requests from this cluster due to unplanned or emergency maintenance.
            - 'The table can serve Data API requests from this cluster. Depending on replication delay, reads may not immediately reflect the state of the table in other clusters.'
            - 'The table is fully created and ready for use after a restore, and is being optimized for performance. When optimizations are complete, the table will transition to `READY` state.'
          description: Output only. The state of replication for the table in this cluster.
          type: string
        encryptionInfo:
          type: array
          description: 'Output only. The encryption information for the table in this cluster. If the encryption key protecting this resource is customer managed, then its version can be rotated in Cloud Key Management Service (Cloud KMS). The primary version of the key and its status will be reflected here when changes propagate from Cloud KMS.'
          items:
            $ref: '#/components/schemas/EncryptionInfo'
          readOnly: true
      type: object
    Union:
      type: object
      id: Union
      description: A GcRule which deletes cells matching any of the given rules.
      properties:
        rules:
          items:
            $ref: '#/components/schemas/GcRule'
          type: array
          description: Delete cells which would be deleted by any element of `rules`.
    GetIamPolicyRequest:
      properties:
        options:
          $ref: '#/components/schemas/GetPolicyOptions'
          description: 'OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`.'
      id: GetIamPolicyRequest
      description: Request message for `GetIamPolicy` method.
      type: object
    UndeleteTableMetadata:
      properties:
        name:
          type: string
          description: The name of the table being restored.
        endTime:
          description: 'If set, the time at which this operation finished or was cancelled.'
          format: google-datetime
          type: string
        startTime:
          format: google-datetime
          description: The time at which this operation started.
          type: string
      description: Metadata type for the operation returned by google.bigtable.admin.v2.BigtableTableAdmin.UndeleteTable.
      id: UndeleteTableMetadata
      type: object
    SingleClusterRouting:
      type: object
      description: Unconditionally routes all read/write requests to a specific cluster. This option preserves read-your-writes consistency but does not improve availability.
      id: SingleClusterRouting
      properties:
        clusterId:
          type: string
          description: The cluster to which read/write requests should be routed.
        allowTransactionalWrites:
          type: boolean
          description: Whether or not `CheckAndMutateRow` and `ReadModifyWriteRow` requests are allowed by this app profile. It is unsafe to send these requests to the same table/row/column in multiple clusters.
    Cluster:
      type: object
      id: Cluster
      properties:
        state:
          type: string
          description: Output only. The current state of the cluster.
          enum:
            - STATE_NOT_KNOWN
            - READY
            - CREATING
            - RESIZING
            - DISABLED
          enumDescriptions:
            - The state of the cluster could not be determined.
            - The cluster has been successfully created and is ready to serve requests.
            - 'The cluster is currently being created, and may be destroyed if the creation process encounters an error. A cluster may not be able to serve requests while being created.'
            - 'The cluster is currently being resized, and may revert to its previous node count if the process encounters an error. A cluster is still capable of serving requests while being resized, but may exhibit performance as if its number of allocated nodes is between the starting and requested states.'
            - 'The cluster has no backing nodes. The data (tables) still exist, but no operations can be performed on the cluster.'
          readOnly: true
        encryptionConfig:
          description: Immutable. The encryption configuration for CMEK-protected clusters.
          $ref: '#/components/schemas/EncryptionConfig'
        location:
          description: 'Immutable. The location where this cluster''s nodes and storage reside. For best performance, clients should be located as close as possible to this cluster. Currently only zones are supported, so values should be of the form `projects/{project}/locations/{zone}`.'
          type: string
        serveNodes:
          description: 'The number of nodes in the cluster. If no value is set, Cloud Bigtable automatically allocates nodes based on your data footprint and optimized for 50% storage utilization.'
          format: int32
          type: integer
        clusterConfig:
          $ref: '#/components/schemas/ClusterConfig'
          description: Configuration for this cluster.
        defaultStorageType:
          description: 'Immutable. The type of storage used by this cluster to serve its parent instance''s tables, unless explicitly overridden.'
          enumDescriptions:
            - The user did not specify a storage type.
            - Flash (SSD) storage should be used.
            - Magnetic drive (HDD) storage should be used.
          enum:
            - STORAGE_TYPE_UNSPECIFIED
            - SSD
            - HDD
          type: string
        name:
          description: 'The unique name of the cluster. Values are of the form `projects/{project}/instances/{instance}/clusters/a-z*`.'
          type: string
      description: 'A resizable group of nodes in a particular cloud location, capable of serving all Tables in the parent Instance.'
    CopyBackupMetadata:
      description: Metadata type for the google.longrunning.Operation returned by CopyBackup.
      id: CopyBackupMetadata
      type: object
      properties:
        sourceBackupInfo:
          description: Information about the source backup that is being copied from.
          $ref: '#/components/schemas/BackupInfo'
        name:
          description: The name of the backup being created through the copy operation. Values are of the form `projects//instances//clusters//backups/`.
          type: string
        progress:
          description: The progress of the CopyBackup operation.
          $ref: '#/components/schemas/OperationProgress'
    TableStats:
      properties:
        rowCount:
          format: int64
          type: string
          description: How many rows are in the table.
        logicalDataBytes:
          format: int64
          description: This is roughly how many bytes would be needed to read the entire table (e.g. by streaming all contents out).
          type: string
        averageColumnsPerRow:
          type: number
          description: 'How many (column family, column qualifier) combinations are present per row in the table, averaged over all rows in the table. e.g. A table with 2 rows: * A row with cells in "family:col" and "other:col" (2 distinct columns) * A row with cells in "family:col", "family:other_col", and "other:data" (3 distinct columns) would report (2 + 3)/2 = 2.5 in this field.'
          format: double
        averageCellsPerColumn:
          description: 'How many cells are present per column (column family, column qualifier) combinations, averaged over all columns in all rows in the table. e.g. A table with 2 rows: * A row with 3 cells in "family:col" and 1 cell in "other:col" (4 cells / 2 columns) * A row with 1 cell in "family:col", 7 cells in "family:other_col", and 7 cells in "other:data" (15 cells / 3 columns) would report (4 + 15)/(2 + 3) = 3.8 in this field.'
          format: double
          type: number
      id: TableStats
      description: 'Approximate statistics related to a table. These statistics are calculated infrequently, while simultaneously, data in the table can change rapidly. Thus the values reported here (e.g. row count) are very likely out-of date, even the instant they are received in this API. Thus, only treat these values as approximate. IMPORTANT: Everything below is approximate, unless otherwise specified.'
      type: object
    Modification:
      description: 'A create, update, or delete of a particular column family.'
      type: object
      id: Modification
      properties:
        create:
          $ref: '#/components/schemas/ColumnFamily'
          description: 'Create a new column family with the specified schema, or fail if one already exists with the given ID.'
        id:
          type: string
          description: The ID of the column family to be modified.
        update:
          description: 'Update an existing column family to the specified schema, or fail if no column family exists with the given ID.'
          $ref: '#/components/schemas/ColumnFamily'
        drop:
          type: boolean
          description: 'Drop (delete) the column family with the given ID, or fail if no such family exists.'
    TestIamPermissionsResponse:
      id: TestIamPermissionsResponse
      description: Response message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          type: array
          items:
            type: string
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
    ClusterAutoscalingConfig:
      type: object
      description: Autoscaling config for a cluster.
      properties:
        autoscalingTargets:
          description: Required. Autoscaling targets for this cluster.
          $ref: '#/components/schemas/AutoscalingTargets'
        autoscalingLimits:
          description: Required. Autoscaling limits for this cluster.
          $ref: '#/components/schemas/AutoscalingLimits'
      id: ClusterAutoscalingConfig
    Instance:
      description: A collection of Bigtable Tables and the resources that serve them. All tables in an instance are served from all Clusters in the instance.
      id: Instance
      properties:
        displayName:
          type: string
          description: 'Required. The descriptive name for this instance as it appears in UIs. Can be changed at any time, but should be kept globally unique to avoid confusion.'
        satisfiesPzs:
          readOnly: true
          type: boolean
          description: Output only. Reserved for future use.
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'Labels are a flexible and lightweight mechanism for organizing cloud resources into groups that reflect a customer''s organizational needs and deployment strategies. They can be used to filter resources and aggregate metrics. * Label keys must be between 1 and 63 characters long and must conform to the regular expression: `\p{Ll}\p{Lo}{0,62}`. * Label values must be between 0 and 63 characters long and must conform to the regular expression: `[\p{Ll}\p{Lo}\p{N}_-]{0,63}`. * No more than 64 labels can be associated with a given resource. * Keys and values must both be under 128 bytes.'
        type:
          type: string
          enum:
            - TYPE_UNSPECIFIED
            - PRODUCTION
            - DEVELOPMENT
          description: The type of the instance. Defaults to `PRODUCTION`.
          enumDescriptions:
            - 'The type of the instance is unspecified. If set when creating an instance, a `PRODUCTION` instance will be created. If set when updating an instance, the type will be left unchanged.'
            - An instance meant for production use. `serve_nodes` must be set on the cluster.
            - 'DEPRECATED: Prefer PRODUCTION for all use cases, as it no longer enforces a higher minimum node count than DEVELOPMENT.'
        state:
          type: string
          readOnly: true
          enum:
            - STATE_NOT_KNOWN
            - READY
            - CREATING
          description: Output only. The current state of the instance.
          enumDescriptions:
            - The state of the instance could not be determined.
            - The instance has been successfully created and can serve requests to its tables.
            - 'The instance is currently being created, and may be destroyed if the creation process encounters an error.'
        name:
          type: string
          description: 'The unique name of the instance. Values are of the form `projects/{project}/instances/a-z+[a-z0-9]`.'
        createTime:
          description: 'Output only. A commit timestamp representing when this Instance was created. For instances created before this field was added (August 2021), this value is `seconds: 0, nanos: 1`.'
          type: string
          format: google-datetime
          readOnly: true
      type: object
    Split:
      id: Split
      type: object
      properties:
        key:
          format: byte
          description: Row key to use as an initial tablet boundary.
          type: string
      description: An initial split point for a newly created table.
    HotTablet:
      properties:
        tableName:
          description: 'Name of the table that contains the tablet. Values are of the form `projects/{project}/instances/{instance}/tables/_a-zA-Z0-9*`.'
          type: string
        startKey:
          type: string
          description: Tablet Start Key (inclusive).
        startTime:
          format: google-datetime
          description: Output only. The start time of the hot tablet.
          readOnly: true
          type: string
        name:
          description: 'The unique name of the hot tablet. Values are of the form `projects/{project}/instances/{instance}/clusters/{cluster}/hotTablets/[a-zA-Z0-9_-]*`.'
          type: string
        endKey:
          description: Tablet End Key (inclusive).
          type: string
        nodeCpuUsagePercent:
          readOnly: true
          description: 'Output only. The average CPU usage spent by a node on this tablet over the start_time to end_time time range. The percentage is the amount of CPU used by the node to serve the tablet, from 0% (tablet was not interacted with) to 100% (the node spent all cycles serving the hot tablet).'
          format: float
          type: number
        endTime:
          format: google-datetime
          readOnly: true
          description: Output only. The end time of the hot tablet.
          type: string
      id: HotTablet
      type: object
      description: 'A tablet is a defined by a start and end key and is explained in https://cloud.google.com/bigtable/docs/overview#architecture and https://cloud.google.com/bigtable/docs/performance#optimization. A Hot tablet is a tablet that exhibits high average cpu usage during the time interval from start time to end time.'
    BackupInfo:
      id: BackupInfo
      type: object
      description: Information about a backup.
      properties:
        backup:
          readOnly: true
          description: Output only. Name of the backup.
          type: string
        sourceBackup:
          type: string
          readOnly: true
          description: 'Output only. Name of the backup from which this backup was copied. If a backup is not created by copying a backup, this field will be empty. Values are of the form: projects//instances//backups/.'
        startTime:
          description: Output only. The time that the backup was started. Row data in the backup will be no older than this timestamp.
          readOnly: true
          format: google-datetime
          type: string
        endTime:
          format: google-datetime
          description: Output only. This time that the backup was finished. Row data in the backup will be no newer than this timestamp.
          type: string
          readOnly: true
        sourceTable:
          type: string
          readOnly: true
          description: Output only. Name of the table the backup was created from.
    Location:
      type: object
      properties:
        displayName:
          description: 'The friendly name for this location, typically a nearby city name. For example, "Tokyo".'
          type: string
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        metadata:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata. For example the available capacity at the given location.
          type: object
        name:
          type: string
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
      id: Location
      description: A resource that represents a Google Cloud location.
    AppProfile:
      type: object
      description: A configuration object describing how Cloud Bigtable should treat traffic from a particular end user application.
      id: AppProfile
      properties:
        name:
          description: 'The unique name of the app profile. Values are of the form `projects/{project}/instances/{instance}/appProfiles/_a-zA-Z0-9*`.'
          type: string
        singleClusterRouting:
          description: Use a single-cluster routing policy.
          $ref: '#/components/schemas/SingleClusterRouting'
        etag:
          type: string
          description: 'Strongly validated etag for optimistic concurrency control. Preserve the value returned from `GetAppProfile` when calling `UpdateAppProfile` to fail the request if there has been a modification in the mean time. The `update_mask` of the request need not include `etag` for this protection to apply. See [Wikipedia](https://en.wikipedia.org/wiki/HTTP_ETag) and [RFC 7232](https://tools.ietf.org/html/rfc7232#section-2.3) for more details.'
        multiClusterRoutingUseAny:
          $ref: '#/components/schemas/MultiClusterRoutingUseAny'
          description: Use a multi-cluster routing policy.
        description:
          type: string
          description: Long form description of the use case for this AppProfile.
    PartialUpdateClusterMetadata:
      properties:
        requestTime:
          type: string
          description: The time at which the original request was received.
          format: google-datetime
        originalRequest:
          description: The original request for PartialUpdateCluster.
          $ref: '#/components/schemas/PartialUpdateClusterRequest'
        finishTime:
          format: google-datetime
          type: string
          description: The time at which the operation failed or was completed successfully.
      id: PartialUpdateClusterMetadata
      description: The metadata for the Operation returned by PartialUpdateCluster.
      type: object
    CreateBackupMetadata:
      type: object
      properties:
        startTime:
          description: The time at which this operation started.
          type: string
          format: google-datetime
        endTime:
          format: google-datetime
          description: 'If set, the time at which this operation finished or was cancelled.'
          type: string
        name:
          type: string
          description: The name of the backup being created.
        sourceTable:
          type: string
          description: The name of the table the backup is created from.
      description: Metadata type for the operation returned by CreateBackup.
      id: CreateBackupMetadata
    GcRule:
      type: object
      properties:
        union:
          $ref: '#/components/schemas/Union'
          description: Delete cells that would be deleted by any nested rule.
        maxNumVersions:
          description: Delete all cells in a column except the most recent N.
          type: integer
          format: int32
        intersection:
          description: Delete cells that would be deleted by every nested rule.
          $ref: '#/components/schemas/Intersection'
        maxAge:
          type: string
          format: google-duration
          description: 'Delete cells in a column older than the given age. Values must be at least one millisecond, and will be truncated to microsecond granularity.'
      id: GcRule
      description: Rule for determining which cells to delete during garbage collection.
    UpdateAppProfileMetadata:
      properties: {}
      description: The metadata for the Operation returned by UpdateAppProfile.
      type: object
      id: UpdateAppProfileMetadata
    Table:
      id: Table
      type: object
      description: 'A collection of user data indexed by row, column, and timestamp. Each table is served using the resources of its parent cluster.'
      properties:
        restoreInfo:
          description: 'Output only. If this table was restored from another data source (e.g. a backup), this field will be populated with information about the restore.'
          readOnly: true
          $ref: '#/components/schemas/RestoreInfo'
        granularity:
          description: 'Immutable. The granularity (i.e. `MILLIS`) at which timestamps are stored in this table. Timestamps not matching the granularity will be rejected. If unspecified at creation time, the value will be set to `MILLIS`. Views: `SCHEMA_VIEW`, `FULL`.'
          type: string
          enumDescriptions:
            - 'The user did not specify a granularity. Should not be returned. When specified during table creation, MILLIS will be used.'
            - The table keeps data versioned at a granularity of 1ms.
          enum:
            - TIMESTAMP_GRANULARITY_UNSPECIFIED
            - MILLIS
        changeStreamConfig:
          description: 'If specified, enable the change stream on this table. Otherwise, the change stream is disabled and the change stream is not retained.'
          $ref: '#/components/schemas/ChangeStreamConfig'
        name:
          type: string
          description: 'The unique name of the table. Values are of the form `projects/{project}/instances/{instance}/tables/_a-zA-Z0-9*`. Views: `NAME_ONLY`, `SCHEMA_VIEW`, `REPLICATION_VIEW`, `STATS_VIEW`, `FULL`'
        columnFamilies:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ColumnFamily'
          description: 'The column families configured for this table, mapped by column family ID. Views: `SCHEMA_VIEW`, `STATS_VIEW`, `FULL`'
        deletionProtection:
          type: boolean
          description: 'Set to true to make the table protected against data loss. i.e. deleting the following resources through Admin APIs are prohibited: * The table. * The column families in the table. * The instance containing the table. Note one can still delete the data stored in the table through Data APIs.'
        stats:
          $ref: '#/components/schemas/TableStats'
          description: 'Only available with STATS_VIEW, this includes summary statistics about the entire table contents. For statistics about a specific column family, see ColumnFamilyStats in the mapped ColumnFamily collection above.'
        clusterStates:
          additionalProperties:
            $ref: '#/components/schemas/ClusterState'
          description: 'Output only. Map from cluster ID to per-cluster table state. If it could not be determined whether or not the table has data in a particular cluster (for example, if its zone is unavailable), then there will be an entry for the cluster with UNKNOWN `replication_status`. Views: `REPLICATION_VIEW`, `ENCRYPTION_VIEW`, `FULL`'
          readOnly: true
          type: object
    MultiClusterRoutingUseAny:
      properties:
        clusterIds:
          description: 'The set of clusters to route to. The order is ignored; clusters will be tried in order of distance. If left empty, all clusters are eligible.'
          items:
            type: string
          type: array
      description: 'Read/write requests are routed to the nearest cluster in the instance, and will fail over to the nearest cluster that is available in the event of transient errors or delays. Clusters in a region are considered equidistant. Choosing this option sacrifices read-your-writes consistency to improve availability.'
      type: object
      id: MultiClusterRoutingUseAny
    OptimizeRestoredTableMetadata:
      properties:
        progress:
          description: The progress of the post-restore optimizations.
          $ref: '#/components/schemas/OperationProgress'
        name:
          type: string
          description: Name of the restored table being optimized.
      id: OptimizeRestoredTableMetadata
      description: 'Metadata type for the long-running operation used to track the progress of optimizations performed on a newly restored table. This long-running operation is automatically created by the system after the successful completion of a table restore, and cannot be cancelled.'
      type: object
    Backup:
      type: object
      id: Backup
      properties:
        startTime:
          description: Output only. `start_time` is the time that the backup was started (i.e. approximately the time the CreateBackup request is received). The row data in this backup will be no older than this timestamp.
          type: string
          format: google-datetime
          readOnly: true
        sourceTable:
          description: 'Required. Immutable. Name of the table from which this backup was created. This needs to be in the same instance as the backup. Values are of the form `projects/{project}/instances/{instance}/tables/{source_table}`.'
          type: string
        name:
          description: 'A globally unique identifier for the backup which cannot be changed. Values are of the form `projects/{project}/instances/{instance}/clusters/{cluster}/ backups/_a-zA-Z0-9*` The final segment of the name must be between 1 and 50 characters in length. The backup is stored in the cluster identified by the prefix of the backup name of the form `projects/{project}/instances/{instance}/clusters/{cluster}`.'
          type: string
        state:
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - READY
          readOnly: true
          enumDescriptions:
            - Not specified.
            - The pending backup is still being created. Operations on the backup may fail with `FAILED_PRECONDITION` in this state.
            - The backup is complete and ready for use.
          description: Output only. The current state of the backup.
          type: string
        expireTime:
          type: string
          description: 'Required. The expiration time of the backup, with microseconds granularity that must be at least 6 hours and at most 90 days from the time the request is received. Once the `expire_time` has passed, Cloud Bigtable will delete the backup and free the resources used by the backup.'
          format: google-datetime
        encryptionInfo:
          description: Output only. The encryption information for the backup.
          $ref: '#/components/schemas/EncryptionInfo'
          readOnly: true
        sourceBackup:
          description: 'Output only. Name of the backup from which this backup was copied. If a backup is not created by copying a backup, this field will be empty. Values are of the form: projects//instances//backups/.'
          type: string
          readOnly: true
        endTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. `end_time` is the time that the backup was finished. The row data in the backup will be no newer than this timestamp.
        sizeBytes:
          format: int64
          type: string
          readOnly: true
          description: Output only. Size of the backup in bytes.
      description: A backup of a Cloud Bigtable table.
    ClusterConfig:
      description: Configuration for a cluster.
      type: object
      properties:
        clusterAutoscalingConfig:
          description: Autoscaling configuration for this cluster.
          $ref: '#/components/schemas/ClusterAutoscalingConfig'
      id: ClusterConfig
    UpdateClusterMetadata:
      id: UpdateClusterMetadata
      type: object
      description: The metadata for the Operation returned by UpdateCluster.
      properties:
        finishTime:
          type: string
          description: The time at which the operation failed or was completed successfully.
          format: google-datetime
        requestTime:
          format: google-datetime
          description: The time at which the original request was received.
          type: string
        originalRequest:
          $ref: '#/components/schemas/Cluster'
          description: The request that prompted the initiation of this UpdateCluster operation.
    UndeleteTableRequest:
      id: UndeleteTableRequest
      type: object
      properties: {}
      description: Request message for google.bigtable.admin.v2.BigtableTableAdmin.UndeleteTable
    ListInstancesResponse:
      type: object
      properties:
        instances:
          items:
            $ref: '#/components/schemas/Instance'
          description: The list of requested instances.
          type: array
        failedLocations:
          items:
            type: string
          type: array
          description: 'Locations from which Instance information could not be retrieved, due to an outage or some other transient condition. Instances whose Clusters are all in one of the failed locations may be missing from `instances`, and Instances with at least one Cluster in a failed location may only have partial information returned. Values are of the form `projects//locations/`'
        nextPageToken:
          type: string
          description: 'DEPRECATED: This field is unused and ignored.'
      id: ListInstancesResponse
      description: Response message for BigtableInstanceAdmin.ListInstances.
    ColumnFamily:
      type: object
      description: A set of columns within a table which share a common configuration.
      id: ColumnFamily
      properties:
        stats:
          $ref: '#/components/schemas/ColumnFamilyStats'
          description: 'Only available with STATS_VIEW, this includes summary statistics about column family contents. For statistics over an entire table, see TableStats above.'
        gcRule:
          $ref: '#/components/schemas/GcRule'
          description: 'Garbage collection rule specified as a protobuf. Must serialize to at most 500 bytes. NOTE: Garbage collection executes opportunistically in the background, and so it''s possible for reads to return a cell even if it matches the active GC expression for its family.'
    ListHotTabletsResponse:
      properties:
        hotTablets:
          items:
            $ref: '#/components/schemas/HotTablet'
          description: 'List of hot tablets in the tables of the requested cluster that fall within the requested time range. Hot tablets are ordered by node cpu usage percent. If there are multiple hot tablets that correspond to the same tablet within a 15-minute interval, only the hot tablet with the highest node cpu usage will be included in the response.'
          type: array
        nextPageToken:
          description: Set if not all hot tablets could be returned in a single response. Pass this value to `page_token` in another request to get the next page of results.
          type: string
      id: ListHotTabletsResponse
      description: Response message for BigtableInstanceAdmin.ListHotTablets.
      type: object
    TestIamPermissionsRequest:
      properties:
        permissions:
          description: 'The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).'
          type: array
          items:
            type: string
      id: TestIamPermissionsRequest
      description: Request message for `TestIamPermissions` method.
      type: object
    PartialUpdateInstanceRequest:
      type: object
      description: Request message for BigtableInstanceAdmin.PartialUpdateInstance.
      properties:
        instance:
          description: Required. The Instance which will (partially) replace the current value.
          $ref: '#/components/schemas/Instance'
        updateMask:
          format: google-fieldmask
          description: Required. The subset of Instance fields which should be replaced. Must be explicitly set.
          type: string
      id: PartialUpdateInstanceRequest
  parameters:
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
  x-stackQL-resources:
    clusters:
      id: google.bigtableadmin.clusters
      name: clusters
      title: Clusters
      methods:
        partial_update_cluster:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1clusters~1{clustersId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1clusters~1{clustersId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1clusters~1{clustersId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1clusters~1{clustersId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1clusters/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1clusters/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.clusters
        _list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1clusters/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/get'
          - $ref: '#/components/x-stackQL-resources/clusters/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/delete'
    hot_tablets:
      id: google.bigtableadmin.hot_tablets
      name: hot_tablets
      title: Hot Tablets
      methods:
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1clusters~1{clustersId}~1hotTablets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.hotTablets
        _list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1clusters~1{clustersId}~1hotTablets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hot_tablets/methods/list'
        insert: []
        update: []
        delete: []
    backups:
      id: google.bigtableadmin.backups
      name: backups
      title: Backups
      methods:
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1clusters~1{clustersId}~1backups~1{backupsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1clusters~1{clustersId}~1backups~1{backupsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1clusters~1{clustersId}~1backups~1{backupsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1clusters~1{clustersId}~1backups/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1clusters~1{clustersId}~1backups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.backups
        _list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1clusters~1{clustersId}~1backups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        copy:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1clusters~1{clustersId}~1backups:copy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backups/methods/get'
          - $ref: '#/components/x-stackQL-resources/backups/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/backups/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/backups/methods/delete'
    backups_iam_policies:
      id: google.bigtableadmin.backups_iam_policies
      name: backups_iam_policies
      title: Backups Iam Policies
      methods:
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1clusters~1{clustersId}~1backups~1{backupsId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1clusters~1{clustersId}~1backups~1{backupsId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1clusters~1{clustersId}~1backups~1{backupsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1clusters~1{clustersId}~1backups~1{backupsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backups_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    tables:
      id: google.bigtableadmin.tables
      name: tables
      title: Tables
      methods:
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.tables
        _list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restore:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables:restore/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        undelete:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}:undelete/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        modify_column_families:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}:modifyColumnFamilies/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        generate_consistency_token:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}:generateConsistencyToken/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        check_consistency:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}:checkConsistency/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        drop_row_range:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}:dropRowRange/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tables/methods/get'
          - $ref: '#/components/x-stackQL-resources/tables/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/tables/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/tables/methods/delete'
    tables_iam_policies:
      id: google.bigtableadmin.tables_iam_policies
      name: tables_iam_policies
      title: Tables Iam Policies
      methods:
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1tables~1{tablesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tables_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    app_profiles:
      id: google.bigtableadmin.app_profiles
      name: app_profiles
      title: App Profiles
      methods:
        patch:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1appProfiles~1{appProfilesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1appProfiles~1{appProfilesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1appProfiles~1{appProfilesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1appProfiles/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1appProfiles/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.appProfiles
        _list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}~1appProfiles/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/app_profiles/methods/get'
          - $ref: '#/components/x-stackQL-resources/app_profiles/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/app_profiles/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/app_profiles/methods/delete'
    instances:
      id: google.bigtableadmin.instances
      name: instances
      title: Instances
      methods:
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        partial_update_instance:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.instances
        _list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/instances/methods/get'
          - $ref: '#/components/x-stackQL-resources/instances/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/instances/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/instances/methods/delete'
    instances_iam_policies:
      id: google.bigtableadmin.instances_iam_policies
      name: instances_iam_policies
      title: Instances Iam Policies
      methods:
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}:getIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1instances~1{instancesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/instances_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    locations:
      id: google.bigtableadmin.locations
      name: locations
      title: Locations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        _list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        delete: []
    operations:
      id: google.bigtableadmin.operations
      name: operations
      title: Operations
      methods:
        get:
          operation:
            $ref: '#/paths/~1v2~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v2~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1v2~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v2~1operations~1projects~1{projectsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _list:
          operation:
            $ref: '#/paths/~1v2~1operations~1projects~1{projectsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
paths:
  '/v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}':
    parameters: &ref_1
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/key'
    patch:
      description: 'Partially updates a cluster within a project. This method is the preferred way to update a Cluster. To enable and update autoscaling, set cluster_config.cluster_autoscaling_config. When autoscaling is enabled, serve_nodes is treated as an OUTPUT_ONLY field, meaning that updates to it are ignored. Note that an update cannot simultaneously set serve_nodes to non-zero and cluster_config.cluster_autoscaling_config to non-empty, and also specify both in the update_mask. To disable autoscaling, clear cluster_config.cluster_autoscaling_config, and explicitly set a serve_node count via the update_mask.'
      operationId: bigtableadmin.projects.instances.clusters.partialUpdateCluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-method: partial_update_cluster
      x-stackQL-verb: exec
    delete:
      description: Deletes a cluster from an instance.
      operationId: bigtableadmin.projects.instances.clusters.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets information about a cluster.
      operationId: bigtableadmin.projects.instances.clusters.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-method: get
      x-stackQL-verb: select
    put:
      description: 'Updates a cluster within an instance. Note that UpdateCluster does not support updating cluster_config.cluster_autoscaling_config. In order to update it, you must use PartialUpdateCluster.'
      operationId: bigtableadmin.projects.instances.clusters.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-method: update
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/instances/{instancesId}/clusters':
    parameters: *ref_1
    post:
      description: 'Creates a cluster within an instance. Note that exactly one of Cluster.serve_nodes and Cluster.cluster_config.cluster_autoscaling_config can be set. If serve_nodes is set to non-zero, then the cluster is manually scaled. If cluster_config.cluster_autoscaling_config is non-empty, then autoscaling is enabled.'
      operationId: bigtableadmin.projects.instances.clusters.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: clusterId
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists information about clusters in an instance.
      operationId: bigtableadmin.projects.instances.clusters.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClustersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.clusters
  '/v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}/hotTablets':
    parameters: *ref_1
    get:
      description: 'Lists hot tablets in a cluster, within the time range provided. Hot tablets are ordered based on CPU usage.'
      operationId: bigtableadmin.projects.instances.clusters.hotTablets.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHotTabletsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: endTime
          schema:
            type: string
        - in: query
          name: startTime
          schema:
            type: string
      x-stackQL-resource: hot_tablets
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.hotTablets
  '/v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}/backups/{backupsId}':
    parameters: *ref_1
    get:
      description: Gets metadata on a pending or completed Cloud Bigtable Backup.
      operationId: bigtableadmin.projects.instances.clusters.backups.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: backups
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes a pending or completed Cloud Bigtable backup.
      operationId: bigtableadmin.projects.instances.clusters.backups.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: backups
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Updates a pending or completed Cloud Bigtable Backup.
      operationId: bigtableadmin.projects.instances.clusters.backups.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Backup'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: backups
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}/backups/{backupsId}:getIamPolicy':
    parameters: *ref_1
    post:
      description: Gets the access control policy for a Table resource. Returns an empty policy if the resource exists but does not have a policy set.
      operationId: bigtableadmin.projects.instances.clusters.backups.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: backups_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}/backups':
    parameters: *ref_1
    post:
      description: 'Starts creating a new Cloud Bigtable Backup. The returned backup long-running operation can be used to track creation of the backup. The metadata field type is CreateBackupMetadata. The response field type is Backup, if successful. Cancelling the returned operation will stop the creation and delete the backup.'
      operationId: bigtableadmin.projects.instances.clusters.backups.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Backup'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: query
          name: backupId
          schema:
            type: string
      x-stackQL-resource: backups
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists Cloud Bigtable backups. Returns both completed and pending backups.
      operationId: bigtableadmin.projects.instances.clusters.backups.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: backups
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.backups
  '/v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}/backups/{backupsId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: Sets the access control policy on a Table resource. Replaces any existing policy.
      operationId: bigtableadmin.projects.instances.clusters.backups.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: backups_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}/backups/{backupsId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: Returns permissions that the caller has on the specified table resource.
      operationId: bigtableadmin.projects.instances.clusters.backups.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: backups_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}/backups:copy':
    parameters: *ref_1
    post:
      description: Copy a Cloud Bigtable backup to a new backup in the destination cluster located in the destination instance and project.
      operationId: bigtableadmin.projects.instances.clusters.backups.copy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyBackupRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: backups
      x-stackQL-method: copy
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/instances/{instancesId}/tables':
    parameters: *ref_1
    get:
      description: Lists all tables served from a specified instance.
      operationId: bigtableadmin.projects.instances.tables.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTablesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: tables
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.tables
    post:
      description: 'Creates a new table in the specified instance. The table can be created with a full set of initial column families, specified in the request.'
      operationId: bigtableadmin.projects.instances.tables.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTableRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: tables
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v2/projects/{projectsId}/instances/{instancesId}/tables:restore':
    parameters: *ref_1
    post:
      description: 'Create a new table by restoring from a completed backup. The returned table long-running operation can be used to track the progress of the operation, and to cancel it. The metadata field type is RestoreTableMetadata. The response type is Table, if successful.'
      operationId: bigtableadmin.projects.instances.tables.restore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreTableRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: tables
      x-stackQL-method: restore
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}:undelete':
    parameters: *ref_1
    post:
      description: Restores a specified table which was accidentally deleted.
      operationId: bigtableadmin.projects.instances.tables.undelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeleteTableRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
      x-stackQL-resource: tables
      x-stackQL-method: undelete
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: Sets the access control policy on a Table resource. Replaces any existing policy.
      operationId: bigtableadmin.projects.instances.tables.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
      x-stackQL-resource: tables_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}':
    parameters: *ref_1
    delete:
      description: Permanently deletes a specified table and all of its data.
      operationId: bigtableadmin.projects.instances.tables.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
      x-stackQL-resource: tables
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Updates a specified table.
      operationId: bigtableadmin.projects.instances.tables.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Table'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: tables
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Gets metadata information about the specified table.
      operationId: bigtableadmin.projects.instances.tables.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: tables
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}:getIamPolicy':
    parameters: *ref_1
    post:
      description: Gets the access control policy for a Table resource. Returns an empty policy if the resource exists but does not have a policy set.
      operationId: bigtableadmin.projects.instances.tables.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
      x-stackQL-resource: tables_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}:modifyColumnFamilies':
    parameters: *ref_1
    post:
      description: 'Performs a series of column family modifications on the specified table. Either all or none of the modifications will occur before this method returns, but data requests received prior to that point may see a table where only some modifications have taken effect.'
      operationId: bigtableadmin.projects.instances.tables.modifyColumnFamilies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyColumnFamiliesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
      x-stackQL-resource: tables
      x-stackQL-method: modify_column_families
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}:generateConsistencyToken':
    parameters: *ref_1
    post:
      description: 'Generates a consistency token for a Table, which can be used in CheckConsistency to check whether mutations to the table that finished before this call started have been replicated. The tokens will be available for 90 days.'
      operationId: bigtableadmin.projects.instances.tables.generateConsistencyToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateConsistencyTokenRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateConsistencyTokenResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
      x-stackQL-resource: tables
      x-stackQL-method: generate_consistency_token
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: Returns permissions that the caller has on the specified table resource.
      operationId: bigtableadmin.projects.instances.tables.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
      x-stackQL-resource: tables_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}:checkConsistency':
    parameters: *ref_1
    post:
      description: 'Checks replication consistency based on a consistency token, that is, if replication has caught up based on the conditions specified in the token and the check request.'
      operationId: bigtableadmin.projects.instances.tables.checkConsistency
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckConsistencyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckConsistencyResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
      x-stackQL-resource: tables
      x-stackQL-method: check_consistency
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}:dropRowRange':
    parameters: *ref_1
    post:
      description: 'Permanently drop/delete a row range from a specified table. The request can specify whether to delete all rows in a table, or only those that match a particular prefix.'
      operationId: bigtableadmin.projects.instances.tables.dropRowRange
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DropRowRangeRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.table'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
      x-stackQL-resource: tables
      x-stackQL-method: drop_row_range
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/instances/{instancesId}/appProfiles/{appProfilesId}':
    parameters: *ref_1
    patch:
      description: Updates an app profile within an instance.
      operationId: bigtableadmin.projects.instances.appProfiles.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppProfile'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: appProfilesId
          required: true
          schema:
            type: string
        - in: query
          name: ignoreWarnings
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: app_profiles
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Gets information about an app profile.
      operationId: bigtableadmin.projects.instances.appProfiles.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppProfile'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: appProfilesId
          required: true
          schema:
            type: string
      x-stackQL-resource: app_profiles
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes an app profile from an instance.
      operationId: bigtableadmin.projects.instances.appProfiles.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: appProfilesId
          required: true
          schema:
            type: string
        - in: query
          name: ignoreWarnings
          schema:
            type: boolean
      x-stackQL-resource: app_profiles
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v2/projects/{projectsId}/instances/{instancesId}/appProfiles':
    parameters: *ref_1
    post:
      description: Creates an app profile within an instance.
      operationId: bigtableadmin.projects.instances.appProfiles.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppProfile'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppProfile'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: appProfileId
          schema:
            type: string
        - in: query
          name: ignoreWarnings
          schema:
            type: boolean
      x-stackQL-resource: app_profiles
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists information about app profiles in an instance.
      operationId: bigtableadmin.projects.instances.appProfiles.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAppProfilesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: app_profiles
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.appProfiles
  '/v2/projects/{projectsId}/instances/{instancesId}':
    parameters: *ref_1
    get:
      description: Gets information about an instance.
      operationId: bigtableadmin.projects.instances.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: get
      x-stackQL-verb: select
    patch:
      description: Partially updates an instance within a project. This method can modify all fields of an Instance and is the preferred way to update an Instance.
      operationId: bigtableadmin.projects.instances.partialUpdateInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: partial_update_instance
      x-stackQL-verb: exec
    put:
      description: 'Updates an instance within a project. This method updates only the display name and type for an Instance. To update other Instance properties, such as labels, use PartialUpdateInstance.'
      operationId: bigtableadmin.projects.instances.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: update
      x-stackQL-verb: exec
    delete:
      description: Delete an instance from a project.
      operationId: bigtableadmin.projects.instances.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v2/projects/{projectsId}/instances/{instancesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: Returns permissions that the caller has on the specified instance resource.
      operationId: bigtableadmin.projects.instances.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/instances':
    parameters: *ref_1
    get:
      description: Lists information about instances in a project.
      operationId: bigtableadmin.projects.instances.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstancesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.instances
    post:
      description: 'Create an instance within a project. Note that exactly one of Cluster.serve_nodes and Cluster.cluster_config.cluster_autoscaling_config can be set. If serve_nodes is set to non-zero, then the cluster is manually scaled. If cluster_config.cluster_autoscaling_config is non-empty, then autoscaling is enabled.'
      operationId: bigtableadmin.projects.instances.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInstanceRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v2/projects/{projectsId}/instances/{instancesId}:getIamPolicy':
    parameters: *ref_1
    post:
      description: Gets the access control policy for an instance resource. Returns an empty policy if an instance exists but does not have a policy set.
      operationId: bigtableadmin.projects.instances.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v2/projects/{projectsId}/instances/{instancesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: Sets the access control policy on an instance resource. Replaces any existing policy.
      operationId: bigtableadmin.projects.instances.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations':
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: bigtableadmin.projects.locations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: locations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.locations
  '/v2/projects/{projectsId}/locations/{locationsId}':
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: bigtableadmin.projects.locations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v2/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: bigtableadmin.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: bigtableadmin.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v2/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: bigtableadmin.operations.cancel
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v2/operations/projects/{projectsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: bigtableadmin.operations.projects.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
          Oauth2c:
            - 'https://www.googleapis.com/auth/bigtable.admin.instance'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-bigtable.admin.cluster'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
