openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Kubernetes Engine API
  description: Builds and manages container-based applications, powered by the open source Kubernetes technology.
  version: v1
  x-discovery-doc-revision: '20230104'
  x-generated-date: '2023-01-19'
externalDocs:
  url: https://cloud.google.com/container-engine/
servers:
  - url: https://container.googleapis.com
components:
  schemas:
    NotificationConfig:
      description: NotificationConfig is the configuration of notifications.
      type: object
      properties:
        pubsub:
          $ref: '#/components/schemas/PubSub'
          description: Notification config for Pub/Sub.
      id: NotificationConfig
    UsableSubnetworkSecondaryRange:
      properties:
        rangeName:
          description: The name associated with this subnetwork secondary range, used when adding an alias IP range to a VM instance.
          type: string
        ipCidrRange:
          type: string
          description: The range of IP addresses belonging to this subnetwork secondary range.
        status:
          enumDescriptions:
            - UNKNOWN is the zero value of the Status enum. It's not a valid status.
            - UNUSED denotes that this range is unclaimed by any cluster.
            - IN_USE_SERVICE denotes that this range is claimed by a cluster for services. It cannot be used for other clusters.
            - IN_USE_SHAREABLE_POD denotes this range was created by the network admin and is currently claimed by a cluster for pods. It can only be used by other clusters as a pod range.
            - IN_USE_MANAGED_POD denotes this range was created by GKE and is claimed for pods. It cannot be used for other clusters.
          type: string
          enum:
            - UNKNOWN
            - UNUSED
            - IN_USE_SERVICE
            - IN_USE_SHAREABLE_POD
            - IN_USE_MANAGED_POD
          description: This field is to determine the status of the secondary range programmably.
      type: object
      description: Secondary IP range of a usable subnetwork.
      id: UsableSubnetworkSecondaryRange
    AdvancedMachineFeatures:
      type: object
      id: AdvancedMachineFeatures
      properties:
        threadsPerCore:
          format: int64
          description: The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1. If unset, the maximum number of threads supported per core by the underlying processor is assumed.
          type: string
      description: Specifies options for controlling advanced machine features.
    SetNodePoolManagementRequest:
      properties:
        nodePoolId:
          description: Deprecated. The name of the node pool to update. This field has been deprecated and replaced by the name field.
          type: string
        name:
          description: The name (project, location, cluster, node pool id) of the node pool to set management properties. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.
          type: string
        zone:
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          type: string
        management:
          $ref: '#/components/schemas/NodeManagement'
          description: Required. NodeManagement configuration for the node pool.
        clusterId:
          type: string
          description: Deprecated. The name of the cluster to update. This field has been deprecated and replaced by the name field.
        projectId:
          type: string
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
      description: SetNodePoolManagementRequest sets the node management properties of a node pool.
      type: object
      id: SetNodePoolManagementRequest
    BlueGreenInfo:
      type: object
      properties:
        phase:
          enumDescriptions:
            - Unspecified phase.
            - blue-green upgrade has been initiated.
            - Start creating green pool nodes.
            - Start cordoning blue pool nodes.
            - Start draining blue pool nodes.
            - Start soaking time after draining entire blue pool.
            - Start deleting blue nodes.
            - Rollback has been initiated.
          type: string
          enum:
            - PHASE_UNSPECIFIED
            - UPDATE_STARTED
            - CREATING_GREEN_POOL
            - CORDONING_BLUE_POOL
            - DRAINING_BLUE_POOL
            - NODE_POOL_SOAKING
            - DELETING_BLUE_POOL
            - ROLLBACK_STARTED
          description: Current blue-green upgrade phase.
        bluePoolDeletionStartTime:
          description: Time to start deleting blue pool to complete blue-green upgrade, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
        greenPoolVersion:
          description: Version of green pool.
          type: string
        greenInstanceGroupUrls:
          items:
            type: string
          type: array
          description: The resource URLs of the [managed instance groups] (/compute/docs/instance-groups/creating-groups-of-managed-instances) associated with green pool.
        blueInstanceGroupUrls:
          description: The resource URLs of the [managed instance groups] (/compute/docs/instance-groups/creating-groups-of-managed-instances) associated with blue pool.
          type: array
          items:
            type: string
      description: Information relevant to blue-green upgrade.
      id: BlueGreenInfo
    CompleteIPRotationRequest:
      properties:
        projectId:
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          type: string
        clusterId:
          type: string
          description: Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field.
        name:
          description: The name (project, location, cluster name) of the cluster to complete IP rotation. Specified in the format `projects/*/locations/*/clusters/*`.
          type: string
        zone:
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          type: string
      id: CompleteIPRotationRequest
      description: CompleteIPRotationRequest moves the cluster master back into single-IP mode.
      type: object
    StartIPRotationRequest:
      properties:
        projectId:
          type: string
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
        clusterId:
          description: Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field.
          type: string
        zone:
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          type: string
        name:
          description: The name (project, location, cluster name) of the cluster to start IP rotation. Specified in the format `projects/*/locations/*/clusters/*`.
          type: string
        rotateCredentials:
          description: Whether to rotate credentials during IP rotation.
          type: boolean
      type: object
      description: StartIPRotationRequest creates a new IP for the cluster and then performs a node upgrade on each node pool to point to the new IP.
      id: StartIPRotationRequest
    Cluster:
      properties:
        currentNodeVersion:
          type: string
          description: '[Output only] Deprecated, use [NodePools.version](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools) instead. The current version of the node software components. If they are currently at multiple versions because they''re in the process of being upgraded, this reflects the minimum version of all nodes.'
        servicesIpv4Cidr:
          type: string
          description: '[Output only] The IP address range of the Kubernetes services in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `1.2.3.4/29`). Service addresses are typically put in the last `/16` from the container CIDR.'
        conditions:
          items:
            $ref: '#/components/schemas/StatusCondition'
          description: Which conditions caused the current cluster state.
          type: array
        resourceLabels:
          type: object
          description: The resource labels for the cluster to use to annotate any related Google Compute Engine resources.
          additionalProperties:
            type: string
        description:
          description: An optional description of this cluster.
          type: string
        loggingService:
          description: 'The logging service the cluster should use to write logs. Currently available options: * `logging.googleapis.com/kubernetes` - The Cloud Logging service with a Kubernetes-native resource model * `logging.googleapis.com` - The legacy Cloud Logging service (no longer available as of GKE 1.15). * `none` - no logs will be exported from the cluster. If left as an empty string,`logging.googleapis.com/kubernetes` will be used for GKE 1.14+ or `logging.googleapis.com` for earlier versions.'
          type: string
        etag:
          type: string
          description: This checksum is computed by the server based on the value of cluster fields, and may be sent on update requests to ensure the client has an up-to-date value before proceeding.
        nodePoolAutoConfig:
          description: Node pool configs that apply to all auto-provisioned node pools in autopilot clusters and node auto-provisioning enabled clusters.
          $ref: '#/components/schemas/NodePoolAutoConfig'
        masterAuthorizedNetworksConfig:
          $ref: '#/components/schemas/MasterAuthorizedNetworksConfig'
          description: The configuration options for master authorized networks feature.
        id:
          readOnly: true
          description: Output only. Unique id for the cluster.
          type: string
        selfLink:
          description: '[Output only] Server-defined URL for the resource.'
          type: string
        legacyAbac:
          description: Configuration for the legacy ABAC authorization mode.
          $ref: '#/components/schemas/LegacyAbac'
        releaseChannel:
          $ref: '#/components/schemas/ReleaseChannel'
          description: Release channel configuration.
        initialClusterVersion:
          type: string
          description: 'The initial Kubernetes version for this cluster. Valid versions are those found in validMasterVersions returned by getServerConfig. The version can be upgraded over time; such upgrades are reflected in currentMasterVersion and currentNodeVersion. Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - "latest": picks the highest valid Kubernetes version - "1.X": picks the highest valid patch+gke.N patch in the 1.X version - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version - "1.X.Y-gke.N": picks an explicit Kubernetes version - "","-": picks the default Kubernetes version'
        status:
          description: '[Output only] The current status of this cluster.'
          enum:
            - STATUS_UNSPECIFIED
            - PROVISIONING
            - RUNNING
            - RECONCILING
            - STOPPING
            - ERROR
            - DEGRADED
          enumDescriptions:
            - Not set.
            - The PROVISIONING state indicates the cluster is being created.
            - The RUNNING state indicates the cluster has been created and is fully usable.
            - The RECONCILING state indicates that some work is actively being done on the cluster, such as upgrading the master or node software. Details can be found in the `statusMessage` field.
            - The STOPPING state indicates the cluster is being deleted.
            - The ERROR state indicates the cluster is unusable. It will be automatically deleted. Details can be found in the `statusMessage` field.
            - The DEGRADED state indicates the cluster requires user action to restore full functionality. Details can be found in the `statusMessage` field.
          type: string
        identityServiceConfig:
          description: Configuration for Identity Service component.
          $ref: '#/components/schemas/IdentityServiceConfig'
        shieldedNodes:
          $ref: '#/components/schemas/ShieldedNodes'
          description: Shielded Nodes configuration.
        initialNodeCount:
          description: The number of nodes to create in this cluster. You must ensure that your Compute Engine [resource quota](https://cloud.google.com/compute/quotas) is sufficient for this number of instances. You must also have available firewall and routes quota. For requests, this field should only be used in lieu of a "node_pool" object, since this configuration (along with the "node_config") will be used to create a "NodePool" object with an auto-generated name. Do not use this and a node_pool at the same time. This field is deprecated, use node_pool.initial_node_count instead.
          type: integer
          format: int32
        labelFingerprint:
          type: string
          description: The fingerprint of the set of labels for this cluster.
        binaryAuthorization:
          $ref: '#/components/schemas/BinaryAuthorization'
          description: Configuration for Binary Authorization.
        masterAuth:
          description: 'The authentication information for accessing the master endpoint. If unspecified, the defaults are used: For clusters before v1.12, if master_auth is unspecified, `username` will be set to "admin", a random password will be generated, and a client certificate will be issued.'
          $ref: '#/components/schemas/MasterAuth'
        expireTime:
          description: '[Output only] The time the cluster will be automatically deleted in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.'
          type: string
        workloadIdentityConfig:
          $ref: '#/components/schemas/WorkloadIdentityConfig'
          description: Configuration for the use of Kubernetes Service Accounts in GCP IAM policies.
        maintenancePolicy:
          description: Configure the maintenance policy for this cluster.
          $ref: '#/components/schemas/MaintenancePolicy'
        loggingConfig:
          description: Logging configuration for the cluster.
          $ref: '#/components/schemas/LoggingConfig'
        privateClusterConfig:
          $ref: '#/components/schemas/PrivateClusterConfig'
          description: Configuration for private cluster.
        location:
          type: string
          description: '[Output only] The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) or [region](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) in which the cluster resides.'
        currentMasterVersion:
          type: string
          description: '[Output only] The current software version of the master endpoint.'
        resourceUsageExportConfig:
          description: Configuration for exporting resource usages. Resource usage export is disabled when this config is unspecified.
          $ref: '#/components/schemas/ResourceUsageExportConfig'
        clusterIpv4Cidr:
          type: string
          description: The IP address range of the container pods in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`). Leave blank to have one automatically chosen or specify a `/14` block in `10.0.0.0/8`.
        autoscaling:
          description: Cluster-level autoscaling configuration.
          $ref: '#/components/schemas/ClusterAutoscaling'
        autopilot:
          $ref: '#/components/schemas/Autopilot'
          description: Autopilot configuration for the cluster.
        instanceGroupUrls:
          items:
            type: string
          type: array
          description: Deprecated. Use node_pools.instance_group_urls.
        monitoringService:
          type: string
          description: 'The monitoring service the cluster should use to write metrics. Currently available options: * "monitoring.googleapis.com/kubernetes" - The Cloud Monitoring service with a Kubernetes-native resource model * `monitoring.googleapis.com` - The legacy Cloud Monitoring service (no longer available as of GKE 1.15). * `none` - No metrics will be exported from the cluster. If left as an empty string,`monitoring.googleapis.com/kubernetes` will be used for GKE 1.14+ or `monitoring.googleapis.com` for earlier versions.'
        name:
          type: string
          description: 'The name of this cluster. The name must be unique within this project and location (e.g. zone or region), and can be up to 40 characters with the following restrictions: * Lowercase letters, numbers, and hyphens only. * Must start with a letter. * Must end with a number or a letter.'
        databaseEncryption:
          $ref: '#/components/schemas/DatabaseEncryption'
          description: Configuration of etcd encryption.
        costManagementConfig:
          $ref: '#/components/schemas/CostManagementConfig'
          description: Configuration for the fine-grained cost management feature.
        nodeIpv4CidrSize:
          description: '[Output only] The size of the address space on each node for hosting containers. This is provisioned from within the `container_ipv4_cidr` range. This field will only be set when cluster is in route-based network mode.'
          format: int32
          type: integer
        zone:
          description: '[Output only] The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field is deprecated, use location instead.'
          type: string
        monitoringConfig:
          description: Monitoring configuration for the cluster.
          $ref: '#/components/schemas/MonitoringConfig'
        tpuIpv4CidrBlock:
          type: string
          description: '[Output only] The IP address range of the Cloud TPUs in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `1.2.3.4/29`).'
        meshCertificates:
          description: Configuration for issuance of mTLS keys and certificates to Kubernetes pods.
          $ref: '#/components/schemas/MeshCertificates'
        ipAllocationPolicy:
          $ref: '#/components/schemas/IPAllocationPolicy'
          description: Configuration for cluster IP allocation.
        network:
          type: string
          description: The name of the Google Compute Engine [network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks) to which the cluster is connected. If left unspecified, the `default` network will be used.
        networkPolicy:
          description: Configuration options for the NetworkPolicy feature.
          $ref: '#/components/schemas/NetworkPolicy'
        authenticatorGroupsConfig:
          description: Configuration controlling RBAC group membership information.
          $ref: '#/components/schemas/AuthenticatorGroupsConfig'
        locations:
          items:
            type: string
          description: 'The list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the cluster''s nodes should be located. This field provides a default value if [NodePool.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools#NodePool.FIELDS.locations) are not specified during node pool creation. Warning: changing cluster locations will update the [NodePool.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools#NodePool.FIELDS.locations) of all node pools and will result in nodes being added and/or removed.'
          type: array
        subnetwork:
          description: The name of the Google Compute Engine [subnetwork](https://cloud.google.com/compute/docs/subnetworks) to which the cluster is connected.
          type: string
        enableKubernetesAlpha:
          description: Kubernetes alpha features are enabled on this cluster. This includes alpha API groups (e.g. v1alpha1) and features that may not be production ready in the kubernetes version of the master and nodes. The cluster has no SLA for uptime and master/node upgrades are disabled. Alpha enabled clusters are automatically deleted thirty days after creation.
          type: boolean
        notificationConfig:
          description: Notification configuration of the cluster.
          $ref: '#/components/schemas/NotificationConfig'
        defaultMaxPodsConstraint:
          $ref: '#/components/schemas/MaxPodsConstraint'
          description: The default constraint on the maximum number of pods that can be run simultaneously on a node in the node pool of this cluster. Only honored if cluster created with IP Alias support.
        confidentialNodes:
          $ref: '#/components/schemas/ConfidentialNodes'
          description: Configuration of Confidential Nodes. All the nodes in the cluster will be Confidential VM once enabled.
        nodePools:
          type: array
          description: The node pools associated with this cluster. This field should not be set if "node_config" or "initial_node_count" are specified.
          items:
            $ref: '#/components/schemas/NodePool'
        networkConfig:
          $ref: '#/components/schemas/NetworkConfig'
          description: Configuration for cluster networking.
        endpoint:
          type: string
          description: '[Output only] The IP address of this cluster''s master endpoint. The endpoint can be accessed from the internet at `https://username:password@endpoint/`. See the `masterAuth` property of this resource for username and password information.'
        verticalPodAutoscaling:
          $ref: '#/components/schemas/VerticalPodAutoscaling'
          description: Cluster-level Vertical Pod Autoscaling configuration.
        createTime:
          type: string
          description: '[Output only] The time the cluster was created, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.'
        currentNodeCount:
          format: int32
          description: '[Output only] The number of nodes currently in the cluster. Deprecated. Call Kubernetes API directly to retrieve node information.'
          type: integer
        nodePoolDefaults:
          description: Default NodePool settings for the entire cluster. These settings are overridden if specified on the specific NodePool object.
          $ref: '#/components/schemas/NodePoolDefaults'
        statusMessage:
          type: string
          description: '[Output only] Deprecated. Use conditions instead. Additional information about the current status of this cluster, if available.'
        addonsConfig:
          description: Configurations for the various addons available to run in the cluster.
          $ref: '#/components/schemas/AddonsConfig'
        nodeConfig:
          $ref: '#/components/schemas/NodeConfig'
          description: Parameters used in creating the cluster's nodes. For requests, this field should only be used in lieu of a "node_pool" object, since this configuration (along with the "initial_node_count") will be used to create a "NodePool" object with an auto-generated name. Do not use this and a node_pool at the same time. For responses, this field will be populated with the node configuration of the first node pool. (For configuration of each node pool, see `node_pool.config`) If unspecified, the defaults are used. This field is deprecated, use node_pool.config instead.
        enableTpu:
          type: boolean
          description: Enable the ability to use Cloud TPUs in this cluster.
      description: A Google Kubernetes Engine cluster.
      id: Cluster
      type: object
    GatewayAPIConfig:
      properties:
        channel:
          type: string
          enum:
            - CHANNEL_UNSPECIFIED
            - CHANNEL_DISABLED
            - CHANNEL_EXPERIMENTAL
            - CHANNEL_STANDARD
          enumDescriptions:
            - Default value.
            - Gateway API support is disabled
            - Gateway API support is enabled, experimental CRDs are installed
            - Gateway API support is enabled, standard CRDs are installed
          description: The Gateway API release channel to use for Gateway API.
      description: GatewayAPIConfig contains the desired config of Gateway API on this cluster.
      type: object
      id: GatewayAPIConfig
    IPAllocationPolicy:
      properties:
        useRoutes:
          description: Whether routes will be used for pod IPs in the cluster. This is used in conjunction with use_ip_aliases. It cannot be true if use_ip_aliases is true. If both use_ip_aliases and use_routes are false, then the server picks the default IP allocation mode
          type: boolean
        servicesIpv4CidrBlock:
          description: The IP address range of the services IPs in this cluster. If blank, a range will be automatically chosen with the default size. This field is only applicable when `use_ip_aliases` is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. `/14`) to have a range chosen with a specific netmask. Set to a [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g. `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range to use.
          type: string
        subnetworkName:
          type: string
          description: A custom subnetwork name to be used if `create_subnetwork` is true. If this field is empty, then an automatic name will be chosen for the new subnetwork.
        servicesSecondaryRangeName:
          description: The name of the secondary range to be used as for the services CIDR block. The secondary range will be used for service ClusterIPs. This must be an existing secondary range associated with the cluster subnetwork. This field is only applicable with use_ip_aliases is true and create_subnetwork is false.
          type: string
        stackType:
          type: string
          description: The IP stack type of the cluster
          enum:
            - STACK_TYPE_UNSPECIFIED
            - IPV4
            - IPV4_IPV6
          enumDescriptions:
            - Default value, will be defaulted as IPV4 only
            - Cluster is IPV4 only
            - Cluster can use both IPv4 and IPv6
        createSubnetwork:
          type: boolean
          description: Whether a new subnetwork will be created automatically for the cluster. This field is only applicable when `use_ip_aliases` is true.
        clusterIpv4Cidr:
          description: This field is deprecated, use cluster_ipv4_cidr_block.
          type: string
        useIpAliases:
          description: Whether alias IPs will be used for pod IPs in the cluster. This is used in conjunction with use_routes. It cannot be true if use_routes is true. If both use_ip_aliases and use_routes are false, then the server picks the default IP allocation mode
          type: boolean
        nodeIpv4Cidr:
          type: string
          description: This field is deprecated, use node_ipv4_cidr_block.
        nodeIpv4CidrBlock:
          description: The IP address range of the instance IPs in this cluster. This is applicable only if `create_subnetwork` is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. `/14`) to have a range chosen with a specific netmask. Set to a [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g. `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range to use.
          type: string
        clusterSecondaryRangeName:
          description: The name of the secondary range to be used for the cluster CIDR block. The secondary range will be used for pod IP addresses. This must be an existing secondary range associated with the cluster subnetwork. This field is only applicable with use_ip_aliases is true and create_subnetwork is false.
          type: string
        ipv6AccessType:
          enumDescriptions:
            - Default value, will be defaulted as type external.
            - Access type internal (all v6 addresses are internal IPs)
            - Access type external (all v6 addresses are external IPs)
          enum:
            - IPV6_ACCESS_TYPE_UNSPECIFIED
            - INTERNAL
            - EXTERNAL
          description: The ipv6 access type (internal or external) when create_subnetwork is true
          type: string
        servicesIpv4Cidr:
          type: string
          description: This field is deprecated, use services_ipv4_cidr_block.
        tpuIpv4CidrBlock:
          description: The IP address range of the Cloud TPUs in this cluster. If unspecified, a range will be automatically chosen with the default size. This field is only applicable when `use_ip_aliases` is true. If unspecified, the range will use the default size. Set to /netmask (e.g. `/14`) to have a range chosen with a specific netmask. Set to a [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g. `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range to use.
          type: string
        clusterIpv4CidrBlock:
          description: The IP address range for the cluster pod IPs. If this field is set, then `cluster.cluster_ipv4_cidr` must be left blank. This field is only applicable when `use_ip_aliases` is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. `/14`) to have a range chosen with a specific netmask. Set to a [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g. `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range to use.
          type: string
      id: IPAllocationPolicy
      description: Configuration for controlling how IPs are allocated in the cluster.
      type: object
    WorkloadIdentityConfig:
      type: object
      description: Configuration for the use of Kubernetes Service Accounts in GCP IAM policies.
      id: WorkloadIdentityConfig
      properties:
        workloadPool:
          type: string
          description: The workload pool to attach all Kubernetes service accounts to.
    ListOperationsResponse:
      properties:
        operations:
          items:
            $ref: '#/components/schemas/Operation'
          type: array
          description: A list of operations in the project in the specified zone.
        missingZones:
          description: If any zones are listed here, the list of operations returned may be missing the operations from those zones.
          type: array
          items:
            type: string
      type: object
      id: ListOperationsResponse
      description: ListOperationsResponse is the result of ListOperationsRequest.
    IntraNodeVisibilityConfig:
      type: object
      id: IntraNodeVisibilityConfig
      properties:
        enabled:
          type: boolean
          description: Enables intra node visibility for this cluster.
      description: IntraNodeVisibilityConfig contains the desired config of the intra-node visibility on this cluster.
    IdentityServiceConfig:
      properties:
        enabled:
          type: boolean
          description: Whether to enable the Identity Service component
      description: IdentityServiceConfig is configuration for Identity Service which allows customers to use external identity providers with the K8S API
      type: object
      id: IdentityServiceConfig
    AutoUpgradeOptions:
      id: AutoUpgradeOptions
      type: object
      description: AutoUpgradeOptions defines the set of options for the user to control how the Auto Upgrades will proceed.
      properties:
        autoUpgradeStartTime:
          description: '[Output only] This field is set when upgrades are about to commence with the approximate start time for the upgrades, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.'
          type: string
        description:
          description: '[Output only] This field is set when upgrades are about to commence with the description of the upgrade.'
          type: string
    ReleaseChannelConfig:
      type: object
      properties:
        validVersions:
          description: List of valid versions for the channel.
          type: array
          items:
            type: string
        channel:
          description: The release channel this configuration applies to.
          enumDescriptions:
            - No channel specified.
            - 'RAPID channel is offered on an early access basis for customers who want to test new releases. WARNING: Versions available in the RAPID Channel may be subject to unresolved issues with no known workaround and are not subject to any SLAs.'
            - Clusters subscribed to REGULAR receive versions that are considered GA quality. REGULAR is intended for production users who want to take advantage of new features.
            - Clusters subscribed to STABLE receive versions that are known to be stable and reliable in production.
          enum:
            - UNSPECIFIED
            - RAPID
            - REGULAR
            - STABLE
          type: string
        defaultVersion:
          description: The default version for newly created clusters on the channel.
          type: string
      id: ReleaseChannelConfig
      description: ReleaseChannelConfig exposes configuration for a release channel.
    Filter:
      id: Filter
      properties:
        eventType:
          type: array
          description: Event types to allowlist.
          items:
            type: string
            enumDescriptions:
              - Not set, will be ignored.
              - Corresponds with UpgradeAvailableEvent.
              - Corresponds with UpgradeEvent.
              - Corresponds with SecurityBulletinEvent.
            enum:
              - EVENT_TYPE_UNSPECIFIED
              - UPGRADE_AVAILABLE_EVENT
              - UPGRADE_EVENT
              - SECURITY_BULLETIN_EVENT
      type: object
      description: Allows filtering to one or more specific event types. If event types are present, those and only those event types will be transmitted to the cluster. Other types will be skipped. If no filter is specified, or no event types are present, all event types will be sent
    GcfsConfig:
      properties:
        enabled:
          type: boolean
          description: Whether to use GCFS.
      id: GcfsConfig
      description: GcfsConfig contains configurations of Google Container File System (image streaming).
      type: object
    AddonsConfig:
      type: object
      description: Configuration for the addons that can be automatically spun up in the cluster, enabling additional functionality.
      properties:
        horizontalPodAutoscaling:
          description: Configuration for the horizontal pod autoscaling feature, which increases or decreases the number of replica pods a replication controller has based on the resource usage of the existing pods.
          $ref: '#/components/schemas/HorizontalPodAutoscaling'
        dnsCacheConfig:
          description: Configuration for NodeLocalDNS, a dns cache running on cluster nodes
          $ref: '#/components/schemas/DnsCacheConfig'
        networkPolicyConfig:
          description: Configuration for NetworkPolicy. This only tracks whether the addon is enabled or not on the Master, it does not track whether network policy is enabled for the nodes.
          $ref: '#/components/schemas/NetworkPolicyConfig'
        kubernetesDashboard:
          $ref: '#/components/schemas/KubernetesDashboard'
          description: 'Configuration for the Kubernetes Dashboard. This addon is deprecated, and will be disabled in 1.15. It is recommended to use the Cloud Console to manage and monitor your Kubernetes clusters, workloads and applications. For more information, see: https://cloud.google.com/kubernetes-engine/docs/concepts/dashboards'
        gcpFilestoreCsiDriverConfig:
          $ref: '#/components/schemas/GcpFilestoreCsiDriverConfig'
          description: Configuration for the GCP Filestore CSI driver.
        gcePersistentDiskCsiDriverConfig:
          $ref: '#/components/schemas/GcePersistentDiskCsiDriverConfig'
          description: Configuration for the Compute Engine Persistent Disk CSI driver.
        cloudRunConfig:
          $ref: '#/components/schemas/CloudRunConfig'
          description: Configuration for the Cloud Run addon, which allows the user to use a managed Knative service.
        gkeBackupAgentConfig:
          description: Configuration for the Backup for GKE agent addon.
          $ref: '#/components/schemas/GkeBackupAgentConfig'
        configConnectorConfig:
          $ref: '#/components/schemas/ConfigConnectorConfig'
          description: Configuration for the ConfigConnector add-on, a Kubernetes extension to manage hosted GCP services through the Kubernetes API
        httpLoadBalancing:
          $ref: '#/components/schemas/HttpLoadBalancing'
          description: Configuration for the HTTP (L7) load balancing controller addon, which makes it easy to set up HTTP load balancers for services in a cluster.
      id: AddonsConfig
    PubSub:
      type: object
      properties:
        topic:
          type: string
          description: The desired Pub/Sub topic to which notifications will be sent by GKE. Format is `projects/{project}/topics/{topic}`.
        enabled:
          description: Enable notifications for Pub/Sub.
          type: boolean
        filter:
          $ref: '#/components/schemas/Filter'
          description: Allows filtering to one or more specific event types. If no filter is specified, or if a filter is specified with no event types, all event types will be sent
      description: Pub/Sub specific notification config.
      id: PubSub
    SetMonitoringServiceRequest:
      type: object
      id: SetMonitoringServiceRequest
      description: SetMonitoringServiceRequest sets the monitoring service of a cluster.
      properties:
        name:
          type: string
          description: The name (project, location, cluster) of the cluster to set monitoring. Specified in the format `projects/*/locations/*/clusters/*`.
        clusterId:
          description: Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.
          type: string
        monitoringService:
          description: 'Required. The monitoring service the cluster should use to write metrics. Currently available options: * "monitoring.googleapis.com/kubernetes" - The Cloud Monitoring service with a Kubernetes-native resource model * `monitoring.googleapis.com` - The legacy Cloud Monitoring service (no longer available as of GKE 1.15). * `none` - No metrics will be exported from the cluster. If left as an empty string,`monitoring.googleapis.com/kubernetes` will be used for GKE 1.14+ or `monitoring.googleapis.com` for earlier versions.'
          type: string
        projectId:
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          type: string
        zone:
          type: string
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
    ListClustersResponse:
      properties:
        missingZones:
          type: array
          items:
            type: string
          description: If any zones are listed here, the list of clusters returned may be missing those zones.
        clusters:
          items:
            $ref: '#/components/schemas/Cluster'
          description: A list of clusters in the project in the specified zone, or across all ones.
          type: array
      id: ListClustersResponse
      type: object
      description: ListClustersResponse is the result of ListClustersRequest.
    KubernetesDashboard:
      type: object
      description: Configuration for the Kubernetes Dashboard.
      id: KubernetesDashboard
      properties:
        disabled:
          description: Whether the Kubernetes Dashboard is enabled for this cluster.
          type: boolean
    SetNodePoolAutoscalingRequest:
      type: object
      description: SetNodePoolAutoscalingRequest sets the autoscaler settings of a node pool.
      properties:
        name:
          type: string
          description: The name (project, location, cluster, node pool) of the node pool to set autoscaler settings. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.
        nodePoolId:
          type: string
          description: Deprecated. The name of the node pool to upgrade. This field has been deprecated and replaced by the name field.
        zone:
          type: string
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
        clusterId:
          description: Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.
          type: string
        autoscaling:
          $ref: '#/components/schemas/NodePoolAutoscaling'
          description: Required. Autoscaling configuration for the node pool.
        projectId:
          type: string
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
      id: SetNodePoolAutoscalingRequest
    Status:
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      properties:
        details:
          type: array
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
        code:
          type: integer
          format: int32
          description: The status code, which should be an enum value of google.rpc.Code.
      id: Status
      type: object
    NodePoolAutoConfig:
      properties:
        networkTags:
          description: The list of instance tags applied to all nodes. Tags are used to identify valid sources or targets for network firewalls and are specified by the client during cluster creation. Each tag within the list must comply with RFC1035.
          $ref: '#/components/schemas/NetworkTags'
      type: object
      description: Node pool configs that apply to all auto-provisioned node pools in autopilot clusters and node auto-provisioning enabled clusters.
      id: NodePoolAutoConfig
    DnsCacheConfig:
      type: object
      description: Configuration for NodeLocal DNSCache
      id: DnsCacheConfig
      properties:
        enabled:
          description: Whether NodeLocal DNSCache is enabled for this cluster.
          type: boolean
    NodeManagement:
      properties:
        autoUpgrade:
          description: A flag that specifies whether node auto-upgrade is enabled for the node pool. If enabled, node auto-upgrade helps keep the nodes in your node pool up to date with the latest release version of Kubernetes.
          type: boolean
        autoRepair:
          type: boolean
          description: A flag that specifies whether the node auto-repair is enabled for the node pool. If enabled, the nodes in this node pool will be monitored and, if they fail health checks too many times, an automatic repair action will be triggered.
        upgradeOptions:
          $ref: '#/components/schemas/AutoUpgradeOptions'
          description: Specifies the Auto Upgrade knobs for the node pool.
      description: NodeManagement defines the set of node management services turned on for the node pool.
      type: object
      id: NodeManagement
    HttpLoadBalancing:
      properties:
        disabled:
          type: boolean
          description: Whether the HTTP Load Balancing controller is enabled in the cluster. When enabled, it runs a small pod in the cluster that manages the load balancers.
      description: Configuration options for the HTTP (L7) load balancing controller addon, which makes it easy to set up HTTP load balancers for services in a cluster.
      type: object
      id: HttpLoadBalancing
    EphemeralStorageLocalSsdConfig:
      properties:
        localSsdCount:
          description: 'Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD is 375 GB in size. If zero, it means to disable using local SSDs as ephemeral storage. The limit for this value is dependent upon the maximum number of disks available on a machine per zone. See: https://cloud.google.com/compute/docs/disks/local-ssd for more information.'
          type: integer
          format: int32
      id: EphemeralStorageLocalSsdConfig
      description: EphemeralStorageLocalSsdConfig contains configuration for the node ephemeral storage using Local SSD.
      type: object
    MeshCertificates:
      description: Configuration for issuance of mTLS keys and certificates to Kubernetes pods.
      id: MeshCertificates
      type: object
      properties:
        enableCertificates:
          description: enable_certificates controls issuance of workload mTLS certificates. If set, the GKE Workload Identity Certificates controller and node agent will be deployed in the cluster, which can then be configured by creating a WorkloadCertificateConfig Custom Resource. Requires Workload Identity (workload_pool must be non-empty).
          type: boolean
    NodePoolAutoscaling:
      properties:
        maxNodeCount:
          type: integer
          format: int32
          description: Maximum number of nodes for one location in the NodePool. Must be >= min_node_count. There has to be enough quota to scale up the cluster.
        totalMaxNodeCount:
          description: Maximum number of nodes in the node pool. Must be greater than total_min_node_count. There has to be enough quota to scale up the cluster. The total_*_node_count fields are mutually exclusive with the *_node_count fields.
          type: integer
          format: int32
        autoprovisioned:
          description: Can this node pool be deleted automatically.
          type: boolean
        enabled:
          type: boolean
          description: Is autoscaling enabled for this node pool.
        totalMinNodeCount:
          description: Minimum number of nodes in the node pool. Must be greater than 1 less than total_max_node_count. The total_*_node_count fields are mutually exclusive with the *_node_count fields.
          format: int32
          type: integer
        locationPolicy:
          description: Location policy used when scaling up a nodepool.
          enum:
            - LOCATION_POLICY_UNSPECIFIED
            - BALANCED
            - ANY
          type: string
          enumDescriptions:
            - Not set.
            - BALANCED is a best effort policy that aims to balance the sizes of different zones.
            - ANY policy picks zones that have the highest capacity available.
        minNodeCount:
          type: integer
          format: int32
          description: Minimum number of nodes for one location in the NodePool. Must be >= 1 and <= max_node_count.
      type: object
      description: NodePoolAutoscaling contains information required by cluster autoscaler to adjust the size of the node pool to the current cluster usage.
      id: NodePoolAutoscaling
    AcceleratorConfig:
      type: object
      id: AcceleratorConfig
      description: AcceleratorConfig represents a Hardware Accelerator request.
      properties:
        acceleratorCount:
          format: int64
          type: string
          description: The number of the accelerator cards exposed to an instance.
        gpuPartitionSize:
          type: string
          description: Size of partitions to create on the GPU. Valid values are described in the NVIDIA [mig user guide](https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning).
        acceleratorType:
          description: The accelerator type resource name. List of supported accelerators [here](https://cloud.google.com/compute/docs/gpus)
          type: string
        gpuSharingConfig:
          $ref: '#/components/schemas/GPUSharingConfig'
          description: The configuration for GPU sharing options.
    DailyMaintenanceWindow:
      properties:
        startTime:
          description: 'Time within the maintenance window to start the maintenance operations. Time format should be in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format "HH:MM", where HH : [00-23] and MM : [00-59] GMT.'
          type: string
        duration:
          description: '[Output only] Duration of the time window, automatically chosen to be smallest possible in the given scenario. Duration will be in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format "PTnHnMnS".'
          type: string
      description: Time window specified for daily maintenance operations.
      type: object
      id: DailyMaintenanceWindow
    SecurityBulletinEvent:
      properties:
        manualStepsRequired:
          type: boolean
          description: If this field is specified, it means there are manual steps that the user must take to make their clusters safe.
        bulletinUri:
          description: The URI link to the bulletin on the website for more information.
          type: string
        resourceTypeAffected:
          type: string
          description: The resource type (node/control plane) that has the vulnerability. Multiple notifications (1 notification per resource type) will be sent for a vulnerability that affects > 1 resource type.
        cveIds:
          items:
            type: string
          description: The CVEs associated with this bulletin.
          type: array
        bulletinId:
          description: The ID of the bulletin corresponding to the vulnerability.
          type: string
        affectedSupportedMinors:
          items:
            type: string
          description: The GKE minor versions affected by this vulnerability.
          type: array
        severity:
          type: string
          description: The severity of this bulletin as it relates to GKE.
        briefDescription:
          description: A brief description of the bulletin. See the bulletin pointed to by the bulletin_uri field for an expanded description.
          type: string
        suggestedUpgradeTarget:
          description: This represents a version selected from the patched_versions field that the cluster receiving this notification should most likely want to upgrade to based on its current version. Note that if this notification is being received by a given cluster, it means that this version is currently available as an upgrade target in that cluster's location.
          type: string
        patchedVersions:
          description: The GKE versions where this vulnerability is patched.
          items:
            type: string
          type: array
      type: object
      description: SecurityBulletinEvent is a notification sent to customers when a security bulletin has been posted that they are vulnerable to.
      id: SecurityBulletinEvent
    UpdateClusterRequest:
      id: UpdateClusterRequest
      description: UpdateClusterRequest updates the settings of a cluster.
      properties:
        name:
          type: string
          description: The name (project, location, cluster) of the cluster to update. Specified in the format `projects/*/locations/*/clusters/*`.
        clusterId:
          type: string
          description: Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.
        update:
          description: Required. A description of the update.
          $ref: '#/components/schemas/ClusterUpdate'
        zone:
          type: string
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
        projectId:
          type: string
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
      type: object
    SetMasterAuthRequest:
      properties:
        zone:
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          type: string
        name:
          description: The name (project, location, cluster) of the cluster to set auth. Specified in the format `projects/*/locations/*/clusters/*`.
          type: string
        projectId:
          type: string
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
        action:
          type: string
          description: Required. The exact form of action to be taken on the master auth.
          enumDescriptions:
            - Operation is unknown and will error out.
            - Set the password to a user generated value.
            - Generate a new password and set it to that.
            - Set the username. If an empty username is provided, basic authentication is disabled for the cluster. If a non-empty username is provided, basic authentication is enabled, with either a provided password or a generated one.
          enum:
            - UNKNOWN
            - SET_PASSWORD
            - GENERATE_PASSWORD
            - SET_USERNAME
        clusterId:
          description: Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.
          type: string
        update:
          description: Required. A description of the update.
          $ref: '#/components/schemas/MasterAuth'
      type: object
      description: SetMasterAuthRequest updates the admin password of a cluster.
      id: SetMasterAuthRequest
    NetworkPolicy:
      properties:
        provider:
          description: The selected network policy provider.
          enumDescriptions:
            - Not set
            - Tigera (Calico Felix).
          type: string
          enum:
            - PROVIDER_UNSPECIFIED
            - CALICO
        enabled:
          type: boolean
          description: Whether network policy is enabled on the cluster.
      type: object
      description: Configuration options for the NetworkPolicy feature. https://kubernetes.io/docs/concepts/services-networking/networkpolicies/
      id: NetworkPolicy
    NodeConfig:
      description: Parameters that describe the nodes in a cluster. GKE Autopilot clusters do not recognize parameters in `NodeConfig`. Use AutoprovisioningNodePoolDefaults instead.
      properties:
        resourceLabels:
          type: object
          description: The resource labels for the node pool to use to annotate any related Google Compute Engine resources.
          additionalProperties:
            type: string
        reservationAffinity:
          description: The optional reservation affinity. Setting this field will apply the specified [Zonal Compute Reservation](https://cloud.google.com/compute/docs/instances/reserving-zonal-resources) to this node pool.
          $ref: '#/components/schemas/ReservationAffinity'
        metadata:
          additionalProperties:
            type: string
          type: object
          description: 'The metadata key/value pairs assigned to instances in the cluster. Keys must conform to the regexp `[a-zA-Z0-9-_]+` and be less than 128 bytes in length. These are reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project or be one of the reserved keys: - "cluster-location" - "cluster-name" - "cluster-uid" - "configure-sh" - "containerd-configure-sh" - "enable-os-login" - "gci-ensure-gke-docker" - "gci-metrics-enabled" - "gci-update-strategy" - "instance-template" - "kube-env" - "startup-script" - "user-data" - "disable-address-manager" - "windows-startup-script-ps1" - "common-psm1" - "k8s-node-setup-psm1" - "install-ssh-psm1" - "user-profile-psm1" Values are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on them is that each value''s size must be less than or equal to 32 KB. The total size of all keys and values must be less than 512 KB.'
        preemptible:
          type: boolean
          description: 'Whether the nodes are created as preemptible VM instances. See: https://cloud.google.com/compute/docs/instances/preemptible for more information about preemptible VM instances.'
        linuxNodeConfig:
          $ref: '#/components/schemas/LinuxNodeConfig'
          description: Parameters that can be configured on Linux nodes.
        shieldedInstanceConfig:
          description: Shielded Instance options.
          $ref: '#/components/schemas/ShieldedInstanceConfig'
        gcfsConfig:
          $ref: '#/components/schemas/GcfsConfig'
          description: Google Container File System (image streaming) configs.
        ephemeralStorageLocalSsdConfig:
          description: Parameters for the node ephemeral storage using Local SSDs. If unspecified, ephemeral storage is backed by the boot disk.
          $ref: '#/components/schemas/EphemeralStorageLocalSsdConfig'
        fastSocket:
          description: Enable or disable NCCL fast socket for the node pool.
          $ref: '#/components/schemas/FastSocket'
        gvnic:
          $ref: '#/components/schemas/VirtualNIC'
          description: Enable or disable gvnic in the node pool.
        nodeGroup:
          type: string
          description: Setting this field will assign instances of this pool to run on the specified node group. This is useful for running workloads on [sole tenant nodes](https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes).
        diskType:
          description: Type of the disk attached to each node (e.g. 'pd-standard', 'pd-ssd' or 'pd-balanced') If unspecified, the default disk type is 'pd-standard'
          type: string
        serviceAccount:
          type: string
          description: The Google Cloud Platform Service Account to be used by the node VMs. Specify the email address of the Service Account; otherwise, if no Service Account is specified, the "default" service account is used.
        advancedMachineFeatures:
          description: Advanced features for the Compute Engine VM.
          $ref: '#/components/schemas/AdvancedMachineFeatures'
        workloadMetadataConfig:
          description: The workload metadata configuration for this node.
          $ref: '#/components/schemas/WorkloadMetadataConfig'
        sandboxConfig:
          $ref: '#/components/schemas/SandboxConfig'
          description: Sandbox configuration for this node.
        spot:
          description: Spot flag for enabling Spot VM, which is a rebrand of the existing preemptible flag.
          type: boolean
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'The map of Kubernetes labels (key/value pairs) to be applied to each node. These will added in addition to any default label(s) that Kubernetes may apply to the node. In case of conflict in label keys, the applied set may differ depending on the Kubernetes version -- it''s best to assume the behavior is undefined and conflicts should be avoided. For more information, including usage and the valid values, see: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/'
        kubeletConfig:
          description: Node kubelet configs.
          $ref: '#/components/schemas/NodeKubeletConfig'
        bootDiskKmsKey:
          description: ' The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption'
          type: string
        oauthScopes:
          description: 'The set of Google API scopes to be made available on all of the node VMs under the "default" service account. The following scopes are recommended, but not required, and by default are not included: * `https://www.googleapis.com/auth/compute` is required for mounting persistent storage on your nodes. * `https://www.googleapis.com/auth/devstorage.read_only` is required for communicating with **gcr.io** (the [Google Container Registry](https://cloud.google.com/container-registry/)). If unspecified, no scopes are added, unless Cloud Logging or Cloud Monitoring are enabled, in which case their required scopes will be added.'
          items:
            type: string
          type: array
        localSsdCount:
          description: 'The number of local SSD disks to be attached to the node. The limit for this value is dependent upon the maximum number of disks available on a machine per zone. See: https://cloud.google.com/compute/docs/disks/local-ssd for more information.'
          type: integer
          format: int32
        diskSizeGb:
          format: int32
          description: Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB. If unspecified, the default disk size is 100GB.
          type: integer
        loggingConfig:
          $ref: '#/components/schemas/NodePoolLoggingConfig'
          description: Logging configuration.
        imageType:
          description: The image type to use for this node. Note that for a given image type, the latest version of it will be used.
          type: string
        windowsNodeConfig:
          $ref: '#/components/schemas/WindowsNodeConfig'
          description: Parameters that can be configured on Windows nodes.
        confidentialNodes:
          description: Confidential nodes config. All the nodes in the node pool will be Confidential VM once enabled.
          $ref: '#/components/schemas/ConfidentialNodes'
        minCpuPlatform:
          description: 'Minimum CPU platform to be used by this instance. The instance may be scheduled on the specified or newer CPU platform. Applicable values are the friendly names of CPU platforms, such as `minCpuPlatform: "Intel Haswell"` or `minCpuPlatform: "Intel Sandy Bridge"`. For more information, read [how to specify min CPU platform](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)'
          type: string
        accelerators:
          type: array
          items:
            $ref: '#/components/schemas/AcceleratorConfig'
          description: A list of hardware accelerators to be attached to each node. See https://cloud.google.com/compute/docs/gpus for more information about support for GPUs.
        machineType:
          type: string
          description: The name of a Google Compute Engine [machine type](https://cloud.google.com/compute/docs/machine-types) If unspecified, the default machine type is `e2-medium`.
        tags:
          items:
            type: string
          description: The list of instance tags applied to all nodes. Tags are used to identify valid sources or targets for network firewalls and are specified by the client during cluster or node pool creation. Each tag within the list must comply with RFC1035.
          type: array
        localNvmeSsdBlockConfig:
          description: Parameters for using raw-block Local NVMe SSDs.
          $ref: '#/components/schemas/LocalNvmeSsdBlockConfig'
        taints:
          type: array
          items:
            $ref: '#/components/schemas/NodeTaint'
          description: 'List of kubernetes taints to be applied to each node. For more information, including usage and the valid values, see: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/'
      id: NodeConfig
      type: object
    ShieldedNodes:
      id: ShieldedNodes
      type: object
      description: Configuration of Shielded Nodes feature.
      properties:
        enabled:
          type: boolean
          description: Whether Shielded Nodes features are enabled on all nodes in this cluster.
    WindowsNodeConfig:
      type: object
      properties:
        osVersion:
          enumDescriptions:
            - When OSVersion is not specified
            - LTSC2019 specifies to use LTSC2019 as the Windows Servercore Base Image
            - LTSC2022 specifies to use LTSC2022 as the Windows Servercore Base Image
          description: OSVersion specifies the Windows node config to be used on the node
          enum:
            - OS_VERSION_UNSPECIFIED
            - OS_VERSION_LTSC2019
            - OS_VERSION_LTSC2022
          type: string
      description: Parameters that can be configured on Windows nodes. Windows Node Config that define the parameters that will be used to configure the Windows node pool settings
      id: WindowsNodeConfig
    SetLoggingServiceRequest:
      properties:
        zone:
          type: string
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
        name:
          type: string
          description: The name (project, location, cluster) of the cluster to set logging. Specified in the format `projects/*/locations/*/clusters/*`.
        projectId:
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          type: string
        clusterId:
          type: string
          description: Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.
        loggingService:
          type: string
          description: 'Required. The logging service the cluster should use to write logs. Currently available options: * `logging.googleapis.com/kubernetes` - The Cloud Logging service with a Kubernetes-native resource model * `logging.googleapis.com` - The legacy Cloud Logging service (no longer available as of GKE 1.15). * `none` - no logs will be exported from the cluster. If left as an empty string,`logging.googleapis.com/kubernetes` will be used for GKE 1.14+ or `logging.googleapis.com` for earlier versions.'
      description: SetLoggingServiceRequest sets the logging service of a cluster.
      type: object
      id: SetLoggingServiceRequest
    BlueGreenSettings:
      description: Settings for blue-green upgrade.
      type: object
      properties:
        standardRolloutPolicy:
          $ref: '#/components/schemas/StandardRolloutPolicy'
          description: Standard policy for the blue-green upgrade.
        nodePoolSoakDuration:
          format: google-duration
          type: string
          description: Time needed after draining entire blue pool. After this period, blue pool will be cleaned up.
      id: BlueGreenSettings
    UpdateInfo:
      properties:
        blueGreenInfo:
          description: Information of a blue-green upgrade.
          $ref: '#/components/schemas/BlueGreenInfo'
      description: UpdateInfo contains resource (instance groups, etc), status and other intermediate information relevant to a node pool upgrade.
      type: object
      id: UpdateInfo
    UpgradeAvailableEvent:
      description: UpgradeAvailableEvent is a notification sent to customers when a new available version is released.
      id: UpgradeAvailableEvent
      type: object
      properties:
        resourceType:
          type: string
          enum:
            - UPGRADE_RESOURCE_TYPE_UNSPECIFIED
            - MASTER
            - NODE_POOL
          enumDescriptions:
            - Default value. This shouldn't be used.
            - Master / control plane
            - Node pool
          description: The resource type of the release version.
        releaseChannel:
          $ref: '#/components/schemas/ReleaseChannel'
          description: The release channel of the version. If empty, it means a non-channel release.
        version:
          type: string
          description: The release version available for upgrade.
        resource:
          type: string
          description: Optional relative path to the resource. For example, the relative path of the node pool.
    LoggingVariantConfig:
      description: LoggingVariantConfig specifies the behaviour of the logging component.
      id: LoggingVariantConfig
      properties:
        variant:
          enumDescriptions:
            - Default value. This shouldn't be used.
            - default logging variant.
            - maximum logging throughput variant.
          enum:
            - VARIANT_UNSPECIFIED
            - DEFAULT
            - MAX_THROUGHPUT
          description: Logging variant deployed on nodes.
          type: string
      type: object
    NodeTaints:
      id: NodeTaints
      type: object
      description: Collection of Kubernetes [node taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration).
      properties:
        taints:
          description: List of node taints.
          type: array
          items:
            $ref: '#/components/schemas/NodeTaint'
    ClientCertificateConfig:
      properties:
        issueClientCertificate:
          description: Issue a client certificate.
          type: boolean
      type: object
      description: Configuration for client certificates on the cluster.
      id: ClientCertificateConfig
    Jwk:
      properties:
        e:
          type: string
          description: Used for RSA keys.
        'y':
          description: Used for ECDSA keys.
          type: string
        alg:
          description: Algorithm.
          type: string
        crv:
          type: string
          description: Used for ECDSA keys.
        kid:
          type: string
          description: Key ID.
        x:
          description: Used for ECDSA keys.
          type: string
        kty:
          description: Key Type.
          type: string
        use:
          description: Permitted uses for the public keys.
          type: string
        'n':
          type: string
          description: Used for RSA keys.
      description: Jwk is a JSON Web Key as specified in RFC 7517
      type: object
      id: Jwk
    CancelOperationRequest:
      id: CancelOperationRequest
      type: object
      description: CancelOperationRequest cancels a single operation.
      properties:
        projectId:
          type: string
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
        name:
          description: The name (project, location, operation id) of the operation to cancel. Specified in the format `projects/*/locations/*/operations/*`.
          type: string
        zone:
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the operation resides. This field has been deprecated and replaced by the name field.
          type: string
        operationId:
          type: string
          description: Deprecated. The server-assigned `name` of the operation. This field has been deprecated and replaced by the name field.
    HttpCacheControlResponseHeader:
      description: 'RFC-2616: cache control support'
      id: HttpCacheControlResponseHeader
      type: object
      properties:
        age:
          type: string
          format: int64
          description: 14.6 response cache age, in seconds since the response is generated
        expires:
          description: 14.21 response cache expires, in RFC 1123 date format
          type: string
        directive:
          type: string
          description: 14.9 request and response directives
    SetMaintenancePolicyRequest:
      type: object
      description: SetMaintenancePolicyRequest sets the maintenance policy for a cluster.
      id: SetMaintenancePolicyRequest
      properties:
        maintenancePolicy:
          description: Required. The maintenance policy to be set for the cluster. An empty field clears the existing maintenance policy.
          $ref: '#/components/schemas/MaintenancePolicy'
        projectId:
          description: Required. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects).
          type: string
        name:
          description: The name (project, location, cluster name) of the cluster to set maintenance policy. Specified in the format `projects/*/locations/*/clusters/*`.
          type: string
        clusterId:
          description: Required. The name of the cluster to update.
          type: string
        zone:
          type: string
          description: Required. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides.
    AuthenticatorGroupsConfig:
      id: AuthenticatorGroupsConfig
      description: Configuration for returning group information from authenticators.
      properties:
        enabled:
          type: boolean
          description: Whether this cluster should return group membership lookups during authentication using a group of security groups.
        securityGroup:
          type: string
          description: The name of the security group-of-groups to be used. Only relevant if enabled = true.
      type: object
    ReservationAffinity:
      id: ReservationAffinity
      type: object
      properties:
        key:
          type: string
          description: Corresponds to the label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify "compute.googleapis.com/reservation-name" as the key and specify the name of your reservation as its value.
        consumeReservationType:
          type: string
          enum:
            - UNSPECIFIED
            - NO_RESERVATION
            - ANY_RESERVATION
            - SPECIFIC_RESERVATION
          description: Corresponds to the type of reservation consumption.
          enumDescriptions:
            - Default value. This should not be used.
            - Do not consume from any reserved capacity.
            - Consume any reservation available.
            - Must consume from a specific reservation. Must specify key value fields for specifying the reservations.
        values:
          type: array
          description: Corresponds to the label value(s) of reservation resource(s).
          items:
            type: string
      description: '[ReservationAffinity](https://cloud.google.com/compute/docs/instances/reserving-zonal-resources) is the configuration of desired reservation which instances could take capacity from.'
    SetNetworkPolicyRequest:
      id: SetNetworkPolicyRequest
      description: SetNetworkPolicyRequest enables/disables network policy for a cluster.
      properties:
        projectId:
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          type: string
        name:
          type: string
          description: The name (project, location, cluster name) of the cluster to set networking policy. Specified in the format `projects/*/locations/*/clusters/*`.
        zone:
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          type: string
        clusterId:
          description: Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field.
          type: string
        networkPolicy:
          description: Required. Configuration options for the NetworkPolicy feature.
          $ref: '#/components/schemas/NetworkPolicy'
      type: object
    LoggingConfig:
      id: LoggingConfig
      type: object
      description: LoggingConfig is cluster logging configuration.
      properties:
        componentConfig:
          $ref: '#/components/schemas/LoggingComponentConfig'
          description: Logging components configuration
    GPUSharingConfig:
      id: GPUSharingConfig
      description: GPUSharingConfig represents the GPU sharing configuration for Hardware Accelerators.
      properties:
        maxSharedClientsPerGpu:
          description: The max number of containers that can share a physical GPU.
          format: int64
          type: string
        gpuSharingStrategy:
          enumDescriptions:
            - Default value.
            - GPUs are time-shared between containers.
          enum:
            - GPU_SHARING_STRATEGY_UNSPECIFIED
            - TIME_SHARING
          type: string
          description: The type of GPU sharing strategy to enable on the GPU node.
      type: object
    CloudRunConfig:
      type: object
      description: Configuration options for the Cloud Run feature.
      id: CloudRunConfig
      properties:
        loadBalancerType:
          description: Which load balancer type is installed for Cloud Run.
          enumDescriptions:
            - Load balancer type for Cloud Run is unspecified.
            - Install external load balancer for Cloud Run.
            - Install internal load balancer for Cloud Run.
          enum:
            - LOAD_BALANCER_TYPE_UNSPECIFIED
            - LOAD_BALANCER_TYPE_EXTERNAL
            - LOAD_BALANCER_TYPE_INTERNAL
          type: string
        disabled:
          type: boolean
          description: Whether Cloud Run addon is enabled for this cluster.
    VirtualNIC:
      description: Configuration of gVNIC feature.
      id: VirtualNIC
      properties:
        enabled:
          type: boolean
          description: Whether gVNIC features are enabled in the node pool.
      type: object
    SetAddonsConfigRequest:
      id: SetAddonsConfigRequest
      description: SetAddonsConfigRequest sets the addons associated with the cluster.
      properties:
        projectId:
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          type: string
        clusterId:
          description: Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.
          type: string
        zone:
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          type: string
        addonsConfig:
          $ref: '#/components/schemas/AddonsConfig'
          description: Required. The desired configurations for the various addons available to run in the cluster.
        name:
          description: The name (project, location, cluster) of the cluster to set addons. Specified in the format `projects/*/locations/*/clusters/*`.
          type: string
      type: object
    MasterAuth:
      id: MasterAuth
      type: object
      properties:
        clientCertificate:
          type: string
          description: '[Output only] Base64-encoded public certificate used by clients to authenticate to the cluster endpoint.'
        clientKey:
          type: string
          description: '[Output only] Base64-encoded private key used by clients to authenticate to the cluster endpoint.'
        clientCertificateConfig:
          description: Configuration for client certificate authentication on the cluster. For clusters before v1.12, if no configuration is specified, a client certificate is issued.
          $ref: '#/components/schemas/ClientCertificateConfig'
        username:
          type: string
          description: 'The username to use for HTTP basic authentication to the master endpoint. For clusters v1.6.0 and later, basic authentication can be disabled by leaving username unspecified (or setting it to the empty string). Warning: basic authentication is deprecated, and will be removed in GKE control plane versions 1.19 and newer. For a list of recommended authentication methods, see: https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication'
        clusterCaCertificate:
          type: string
          description: '[Output only] Base64-encoded public certificate that is the root of trust for the cluster.'
        password:
          description: 'The password to use for HTTP basic authentication to the master endpoint. Because the master endpoint is open to the Internet, you should create a strong password. If a password is provided for cluster creation, username must be non-empty. Warning: basic authentication is deprecated, and will be removed in GKE control plane versions 1.19 and newer. For a list of recommended authentication methods, see: https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication'
          type: string
      description: The authentication information for accessing the master endpoint. Authentication can be done using HTTP basic auth or using client certificates.
    GetJSONWebKeysResponse:
      id: GetJSONWebKeysResponse
      description: GetJSONWebKeysResponse is a valid JSON Web Key Set as specififed in rfc 7517
      type: object
      properties:
        keys:
          items:
            $ref: '#/components/schemas/Jwk'
          description: The public component of the keys used by the cluster to sign token requests.
          type: array
        cacheHeader:
          $ref: '#/components/schemas/HttpCacheControlResponseHeader'
          description: OnePlatform automatically extracts this field and uses it to set the HTTP Cache-Control header.
    RollbackNodePoolUpgradeRequest:
      id: RollbackNodePoolUpgradeRequest
      description: RollbackNodePoolUpgradeRequest rollbacks the previously Aborted or Failed NodePool upgrade. This will be an no-op if the last upgrade successfully completed.
      type: object
      properties:
        zone:
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          type: string
        projectId:
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          type: string
        clusterId:
          type: string
          description: Deprecated. The name of the cluster to rollback. This field has been deprecated and replaced by the name field.
        name:
          type: string
          description: The name (project, location, cluster, node pool id) of the node poll to rollback upgrade. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.
        nodePoolId:
          description: Deprecated. The name of the node pool to rollback. This field has been deprecated and replaced by the name field.
          type: string
        respectPdb:
          description: Option for rollback to ignore the PodDisruptionBudget. Default value is false.
          type: boolean
    DNSConfig:
      properties:
        clusterDns:
          enum:
            - PROVIDER_UNSPECIFIED
            - PLATFORM_DEFAULT
            - CLOUD_DNS
          enumDescriptions:
            - Default value
            - Use GKE default DNS provider(kube-dns) for DNS resolution.
            - Use CloudDNS for DNS resolution.
          type: string
          description: cluster_dns indicates which in-cluster DNS provider should be used.
        clusterDnsDomain:
          type: string
          description: cluster_dns_domain is the suffix used for all cluster service records.
        clusterDnsScope:
          description: cluster_dns_scope indicates the scope of access to cluster DNS records.
          enumDescriptions:
            - Default value, will be inferred as cluster scope.
            - DNS records are accessible from within the cluster.
            - DNS records are accessible from within the VPC.
          enum:
            - DNS_SCOPE_UNSPECIFIED
            - CLUSTER_SCOPE
            - VPC_SCOPE
          type: string
      id: DNSConfig
      description: DNSConfig contains the desired set of options for configuring clusterDNS.
      type: object
    RecurringTimeWindow:
      properties:
        window:
          description: The window of the first recurrence.
          $ref: '#/components/schemas/TimeWindow'
        recurrence:
          description: 'An RRULE (https://tools.ietf.org/html/rfc5545#section-3.8.5.3) for how this window reccurs. They go on for the span of time between the start and end time. For example, to have something repeat every weekday, you''d use: `FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR` To repeat some window daily (equivalent to the DailyMaintenanceWindow): `FREQ=DAILY` For the first weekend of every month: `FREQ=MONTHLY;BYSETPOS=1;BYDAY=SA,SU` This specifies how frequently the window starts. Eg, if you wanted to have a 9-5 UTC-4 window every weekday, you''d use something like: ``` start time = 2019-01-01T09:00:00-0400 end time = 2019-01-01T17:00:00-0400 recurrence = FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR ``` Windows can span multiple days. Eg, to make the window encompass every weekend from midnight Saturday till the last minute of Sunday UTC: ``` start time = 2019-01-05T00:00:00Z end time = 2019-01-07T23:59:00Z recurrence = FREQ=WEEKLY;BYDAY=SA ``` Note the start and end time''s specific dates are largely arbitrary except to specify duration of the window and when it first starts. The FREQ values of HOURLY, MINUTELY, and SECONDLY are not supported.'
          type: string
      description: Represents an arbitrary window of time that recurs.
      id: RecurringTimeWindow
      type: object
    NodePool:
      properties:
        statusMessage:
          type: string
          description: '[Output only] Deprecated. Use conditions instead. Additional information about the current status of this node pool instance, if available.'
        updateInfo:
          description: Output only. [Output only] Update info contains relevant information during a node pool update.
          readOnly: true
          $ref: '#/components/schemas/UpdateInfo'
        upgradeSettings:
          $ref: '#/components/schemas/UpgradeSettings'
          description: Upgrade settings control disruption and speed of the upgrade.
        name:
          type: string
          description: The name of the node pool.
        management:
          description: NodeManagement configuration for this NodePool.
          $ref: '#/components/schemas/NodeManagement'
        placementPolicy:
          $ref: '#/components/schemas/PlacementPolicy'
          description: Specifies the node placement policy.
        networkConfig:
          $ref: '#/components/schemas/NodeNetworkConfig'
          description: Networking configuration for this NodePool. If specified, it overrides the cluster-level defaults.
        config:
          $ref: '#/components/schemas/NodeConfig'
          description: The node configuration of the pool.
        locations:
          description: 'The list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the NodePool''s nodes should be located. If this value is unspecified during node pool creation, the [Cluster.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters#Cluster.FIELDS.locations) value will be used, instead. Warning: changing node pool locations will result in nodes being added and/or removed.'
          items:
            type: string
          type: array
        selfLink:
          type: string
          description: '[Output only] Server-defined URL for the resource.'
        initialNodeCount:
          type: integer
          format: int32
          description: The initial node count for the pool. You must ensure that your Compute Engine [resource quota](https://cloud.google.com/compute/quotas) is sufficient for this number of instances. You must also have available firewall and routes quota.
        etag:
          type: string
          description: This checksum is computed by the server based on the value of node pool fields, and may be sent on update requests to ensure the client has an up-to-date value before proceeding.
        instanceGroupUrls:
          items:
            type: string
          description: '[Output only] The resource URLs of the [managed instance groups](https://cloud.google.com/compute/docs/instance-groups/creating-groups-of-managed-instances) associated with this node pool. During the node pool blue-green upgrade operation, the URLs contain both blue and green resources.'
          type: array
        maxPodsConstraint:
          $ref: '#/components/schemas/MaxPodsConstraint'
          description: The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.
        autoscaling:
          description: Autoscaler configuration for this NodePool. Autoscaler is enabled only if a valid configuration is present.
          $ref: '#/components/schemas/NodePoolAutoscaling'
        version:
          description: The version of the Kubernetes of this node.
          type: string
        podIpv4CidrSize:
          description: '[Output only] The pod CIDR block size per node in this node pool.'
          format: int32
          type: integer
        conditions:
          description: Which conditions caused the current node pool state.
          items:
            $ref: '#/components/schemas/StatusCondition'
          type: array
        status:
          type: string
          description: '[Output only] The status of the nodes in this pool instance.'
          enumDescriptions:
            - Not set.
            - The PROVISIONING state indicates the node pool is being created.
            - The RUNNING state indicates the node pool has been created and is fully usable.
            - The RUNNING_WITH_ERROR state indicates the node pool has been created and is partially usable. Some error state has occurred and some functionality may be impaired. Customer may need to reissue a request or trigger a new update.
            - The RECONCILING state indicates that some work is actively being done on the node pool, such as upgrading node software. Details can be found in the `statusMessage` field.
            - The STOPPING state indicates the node pool is being deleted.
            - The ERROR state indicates the node pool may be unusable. Details can be found in the `statusMessage` field.
          enum:
            - STATUS_UNSPECIFIED
            - PROVISIONING
            - RUNNING
            - RUNNING_WITH_ERROR
            - RECONCILING
            - STOPPING
            - ERROR
      description: NodePool contains the name and configuration for a cluster's node pool. Node pools are a set of nodes (i.e. VM's), with a common configuration and specification, under the control of the cluster master. They may have a set of Kubernetes labels applied to them, which may be used to reference them during pod scheduling. They may also be resized up or down, to accommodate the workload.
      id: NodePool
      type: object
    ListNodePoolsResponse:
      id: ListNodePoolsResponse
      properties:
        nodePools:
          items:
            $ref: '#/components/schemas/NodePool'
          type: array
          description: A list of node pools for a cluster.
      type: object
      description: ListNodePoolsResponse is the result of ListNodePoolsRequest.
    UpdateNodePoolRequest:
      type: object
      description: UpdateNodePoolRequests update a node pool's image and/or version.
      id: UpdateNodePoolRequest
      properties:
        nodeVersion:
          description: 'Required. The Kubernetes version to change the nodes to (typically an upgrade). Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - "latest": picks the highest valid Kubernetes version - "1.X": picks the highest valid patch+gke.N patch in the 1.X version - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version - "1.X.Y-gke.N": picks an explicit Kubernetes version - "-": picks the Kubernetes master version'
          type: string
        name:
          type: string
          description: The name (project, location, cluster, node pool) of the node pool to update. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.
        loggingConfig:
          description: Logging configuration.
          $ref: '#/components/schemas/NodePoolLoggingConfig'
        resourceLabels:
          description: The resource labels for the node pool to use to annotate any related Google Compute Engine resources.
          $ref: '#/components/schemas/ResourceLabels'
        tags:
          description: The desired network tags to be applied to all nodes in the node pool. If this field is not present, the tags will not be changed. Otherwise, the existing network tags will be *replaced* with the provided tags.
          $ref: '#/components/schemas/NetworkTags'
        confidentialNodes:
          description: Confidential nodes config. All the nodes in the node pool will be Confidential VM once enabled.
          $ref: '#/components/schemas/ConfidentialNodes'
        nodePoolId:
          description: Deprecated. The name of the node pool to upgrade. This field has been deprecated and replaced by the name field.
          type: string
        workloadMetadataConfig:
          $ref: '#/components/schemas/WorkloadMetadataConfig'
          description: The desired workload metadata config for the node pool.
        kubeletConfig:
          $ref: '#/components/schemas/NodeKubeletConfig'
          description: Node kubelet configs.
        windowsNodeConfig:
          description: Parameters that can be configured on Windows nodes.
          $ref: '#/components/schemas/WindowsNodeConfig'
        labels:
          $ref: '#/components/schemas/NodeLabels'
          description: The desired node labels to be applied to all nodes in the node pool. If this field is not present, the labels will not be changed. Otherwise, the existing node labels will be *replaced* with the provided labels.
        locations:
          description: The desired list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the node pool's nodes should be located. Changing the locations for a node pool will result in nodes being either created or removed from the node pool, depending on whether locations are being added or removed.
          items:
            type: string
          type: array
        gvnic:
          description: Enable or disable gvnic on the node pool.
          $ref: '#/components/schemas/VirtualNIC'
        fastSocket:
          description: Enable or disable NCCL fast socket for the node pool.
          $ref: '#/components/schemas/FastSocket'
        etag:
          description: The current etag of the node pool. If an etag is provided and does not match the current etag of the node pool, update will be blocked and an ABORTED error will be returned.
          type: string
        nodeNetworkConfig:
          description: Node network config.
          $ref: '#/components/schemas/NodeNetworkConfig'
        zone:
          type: string
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
        linuxNodeConfig:
          $ref: '#/components/schemas/LinuxNodeConfig'
          description: Parameters that can be configured on Linux nodes.
        imageType:
          description: Required. The desired image type for the node pool.
          type: string
        projectId:
          type: string
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
        upgradeSettings:
          description: Upgrade settings control disruption and speed of the upgrade.
          $ref: '#/components/schemas/UpgradeSettings'
        taints:
          description: The desired node taints to be applied to all nodes in the node pool. If this field is not present, the taints will not be changed. Otherwise, the existing node taints will be *replaced* with the provided taints.
          $ref: '#/components/schemas/NodeTaints'
        gcfsConfig:
          description: GCFS config.
          $ref: '#/components/schemas/GcfsConfig'
        clusterId:
          type: string
          description: Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.
    NodeNetworkConfig:
      description: Parameters for node pool-level network config.
      type: object
      properties:
        enablePrivateNodes:
          description: Whether nodes have internal IP addresses only. If enable_private_nodes is not specified, then the value is derived from cluster.privateClusterConfig.enablePrivateNodes
          type: boolean
        podRange:
          type: string
          description: The ID of the secondary range for pod IPs. If `create_pod_range` is true, this ID is used for the new range. If `create_pod_range` is false, uses an existing secondary range with this ID. Only applicable if `ip_allocation_policy.use_ip_aliases` is true. This field cannot be changed after the node pool has been created.
        createPodRange:
          description: Input only. Whether to create a new range for pod IPs in this node pool. Defaults are provided for `pod_range` and `pod_ipv4_cidr_block` if they are not specified. If neither `create_pod_range` or `pod_range` are specified, the cluster-level default (`ip_allocation_policy.cluster_ipv4_cidr_block`) is used. Only applicable if `ip_allocation_policy.use_ip_aliases` is true. This field cannot be changed after the node pool has been created.
          type: boolean
        podIpv4CidrBlock:
          type: string
          description: The IP address range for pod IPs in this node pool. Only applicable if `create_pod_range` is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. `/14`) to have a range chosen with a specific netmask. Set to a [CIDR](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) to pick a specific range to use. Only applicable if `ip_allocation_policy.use_ip_aliases` is true. This field cannot be changed after the node pool has been created.
        networkPerformanceConfig:
          $ref: '#/components/schemas/NetworkPerformanceConfig'
          description: Network bandwidth tier configuration.
      id: NodeNetworkConfig
    ILBSubsettingConfig:
      properties:
        enabled:
          type: boolean
          description: Enables l4 ILB subsetting for this cluster.
      description: ILBSubsettingConfig contains the desired config of L4 Internal LoadBalancer subsetting on this cluster.
      type: object
      id: ILBSubsettingConfig
    TimeWindow:
      type: object
      id: TimeWindow
      properties:
        maintenanceExclusionOptions:
          $ref: '#/components/schemas/MaintenanceExclusionOptions'
          description: MaintenanceExclusionOptions provides maintenance exclusion related options.
        endTime:
          description: The time that the window ends. The end time should take place after the start time.
          format: google-datetime
          type: string
        startTime:
          type: string
          description: The time that the window first starts.
          format: google-datetime
      description: Represents an arbitrary window of time.
    DefaultSnatStatus:
      type: object
      description: DefaultSnatStatus contains the desired state of whether default sNAT should be disabled on the cluster.
      properties:
        disabled:
          description: Disables cluster default sNAT rules.
          type: boolean
      id: DefaultSnatStatus
    NetworkTags:
      type: object
      properties:
        tags:
          type: array
          items:
            type: string
          description: List of network tags.
      id: NetworkTags
      description: Collection of Compute Engine network tags that can be applied to a node's underlying VM instance.
    MaintenanceExclusionOptions:
      type: object
      id: MaintenanceExclusionOptions
      properties:
        scope:
          enum:
            - NO_UPGRADES
            - NO_MINOR_UPGRADES
            - NO_MINOR_OR_NODE_UPGRADES
          type: string
          description: Scope specifies the upgrade scope which upgrades are blocked by the exclusion.
          enumDescriptions:
            - NO_UPGRADES excludes all upgrades, including patch upgrades and minor upgrades across control planes and nodes. This is the default exclusion behavior.
            - NO_MINOR_UPGRADES excludes all minor upgrades for the cluster, only patches are allowed.
            - NO_MINOR_OR_NODE_UPGRADES excludes all minor upgrades for the cluster, and also exclude all node pool upgrades. Only control plane patches are allowed.
      description: Represents the Maintenance exclusion option.
    UsableSubnetwork:
      id: UsableSubnetwork
      type: object
      properties:
        secondaryIpRanges:
          items:
            $ref: '#/components/schemas/UsableSubnetworkSecondaryRange'
          type: array
          description: Secondary IP ranges.
        ipCidrRange:
          type: string
          description: The range of internal addresses that are owned by this subnetwork.
        network:
          description: 'Network Name. Example: projects/my-project/global/networks/my-network'
          type: string
        statusMessage:
          type: string
          description: A human readable status message representing the reasons for cases where the caller cannot use the secondary ranges under the subnet. For example if the secondary_ip_ranges is empty due to a permission issue, an insufficient permission message will be given by status_message.
        subnetwork:
          type: string
          description: 'Subnetwork Name. Example: projects/my-project/regions/us-central1/subnetworks/my-subnet'
      description: UsableSubnetwork resource returns the subnetwork name, its associated network and the primary CIDR range.
    UpdateMasterRequest:
      description: UpdateMasterRequest updates the master of the cluster.
      properties:
        projectId:
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          type: string
        masterVersion:
          type: string
          description: 'Required. The Kubernetes version to change the master to. Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - "latest": picks the highest valid Kubernetes version - "1.X": picks the highest valid patch+gke.N patch in the 1.X version - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version - "1.X.Y-gke.N": picks an explicit Kubernetes version - "-": picks the default Kubernetes version'
        clusterId:
          type: string
          description: Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.
        zone:
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          type: string
        name:
          type: string
          description: The name (project, location, cluster) of the cluster to update. Specified in the format `projects/*/locations/*/clusters/*`.
      type: object
      id: UpdateMasterRequest
    PlacementPolicy:
      id: PlacementPolicy
      properties:
        type:
          enum:
            - TYPE_UNSPECIFIED
            - COMPACT
          enumDescriptions:
            - TYPE_UNSPECIFIED specifies no requirements on nodes placement.
            - COMPACT specifies node placement in the same availability domain to ensure low communication latency.
          type: string
          description: The type of placement.
      type: object
      description: PlacementPolicy defines the placement policy used by the node pool.
    SetNodePoolSizeRequest:
      type: object
      properties:
        zone:
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          type: string
        clusterId:
          description: Deprecated. The name of the cluster to update. This field has been deprecated and replaced by the name field.
          type: string
        name:
          description: The name (project, location, cluster, node pool id) of the node pool to set size. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.
          type: string
        nodeCount:
          type: integer
          description: Required. The desired node count for the pool.
          format: int32
        nodePoolId:
          description: Deprecated. The name of the node pool to update. This field has been deprecated and replaced by the name field.
          type: string
        projectId:
          type: string
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
      id: SetNodePoolSizeRequest
      description: SetNodePoolSizeRequest sets the size of a node pool.
    LinuxNodeConfig:
      type: object
      description: Parameters that can be configured on Linux nodes.
      id: LinuxNodeConfig
      properties:
        cgroupMode:
          enum:
            - CGROUP_MODE_UNSPECIFIED
            - CGROUP_MODE_V1
            - CGROUP_MODE_V2
          type: string
          description: cgroup_mode specifies the cgroup mode to be used on the node.
          enumDescriptions:
            - CGROUP_MODE_UNSPECIFIED is when unspecified cgroup configuration is used. The default for the GKE node OS image will be used.
            - CGROUP_MODE_V1 specifies to use cgroupv1 for the cgroup configuration on the node image.
            - CGROUP_MODE_V2 specifies to use cgroupv2 for the cgroup configuration on the node image.
        sysctls:
          additionalProperties:
            type: string
          type: object
          description: The Linux kernel parameters to be applied to the nodes and all pods running on the nodes. The following parameters are supported. net.core.busy_poll net.core.busy_read net.core.netdev_max_backlog net.core.rmem_max net.core.wmem_default net.core.wmem_max net.core.optmem_max net.core.somaxconn net.ipv4.tcp_rmem net.ipv4.tcp_wmem net.ipv4.tcp_tw_reuse
    LoggingComponentConfig:
      type: object
      properties:
        enableComponents:
          description: Select components to collect logs. An empty set would disable all logging.
          items:
            enum:
              - COMPONENT_UNSPECIFIED
              - SYSTEM_COMPONENTS
              - WORKLOADS
              - APISERVER
              - SCHEDULER
              - CONTROLLER_MANAGER
            type: string
            enumDescriptions:
              - Default value. This shouldn't be used.
              - system components
              - workloads
              - kube-apiserver
              - kube-scheduler
              - kube-controller-manager
          type: array
      description: LoggingComponentConfig is cluster logging component configuration.
      id: LoggingComponentConfig
    BigQueryDestination:
      properties:
        datasetId:
          type: string
          description: The ID of a BigQuery Dataset.
      type: object
      description: Parameters for using BigQuery as the destination of resource usage export.
      id: BigQueryDestination
    SandboxConfig:
      id: SandboxConfig
      type: object
      properties:
        type:
          enumDescriptions:
            - Default value. This should not be used.
            - Run sandbox using gvisor.
          enum:
            - UNSPECIFIED
            - GVISOR
          description: Type of the sandbox to use for the node.
          type: string
      description: SandboxConfig contains configurations of the sandbox to use for the node.
    FastSocket:
      type: object
      id: FastSocket
      properties:
        enabled:
          description: Whether Fast Socket features are enabled in the node pool.
          type: boolean
      description: Configuration of Fast Socket feature.
    ServiceExternalIPsConfig:
      id: ServiceExternalIPsConfig
      type: object
      properties:
        enabled:
          description: Whether Services with ExternalIPs field are allowed or not.
          type: boolean
      description: Config to block services with externalIPs field.
    Autopilot:
      properties:
        enabled:
          description: Enable Autopilot
          type: boolean
      type: object
      description: Autopilot is the configuration for Autopilot settings on the cluster.
      id: Autopilot
    Operation:
      type: object
      properties:
        selfLink:
          description: Server-defined URL for the resource.
          type: string
        clusterConditions:
          description: Which conditions caused the current cluster state. Deprecated. Use field error instead.
          type: array
          items:
            $ref: '#/components/schemas/StatusCondition'
        endTime:
          description: '[Output only] The time the operation completed, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.'
          type: string
        operationType:
          enum:
            - TYPE_UNSPECIFIED
            - CREATE_CLUSTER
            - DELETE_CLUSTER
            - UPGRADE_MASTER
            - UPGRADE_NODES
            - REPAIR_CLUSTER
            - UPDATE_CLUSTER
            - CREATE_NODE_POOL
            - DELETE_NODE_POOL
            - SET_NODE_POOL_MANAGEMENT
            - AUTO_REPAIR_NODES
            - AUTO_UPGRADE_NODES
            - SET_LABELS
            - SET_MASTER_AUTH
            - SET_NODE_POOL_SIZE
            - SET_NETWORK_POLICY
            - SET_MAINTENANCE_POLICY
          enumDescriptions:
            - Not set.
            - Cluster create.
            - Cluster delete.
            - A master upgrade.
            - A node upgrade.
            - Cluster repair.
            - Cluster update.
            - Node pool create.
            - Node pool delete.
            - Set node pool management.
            - Automatic node pool repair.
            - Automatic node upgrade.
            - Set labels.
            - Set/generate master auth materials
            - Set node pool size.
            - Updates network policy for a cluster.
            - Set the maintenance policy.
          description: The operation type.
          type: string
        statusMessage:
          readOnly: true
          type: string
          description: Output only. If an error has occurred, a textual description of the error. Deprecated. Use the field error instead.
        nodepoolConditions:
          type: array
          description: Which conditions caused the current node pool state. Deprecated. Use field error instead.
          items:
            $ref: '#/components/schemas/StatusCondition'
        location:
          type: string
          description: '[Output only] The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) or [region](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) in which the cluster resides.'
        name:
          description: The server-assigned ID for the operation.
          type: string
        zone:
          description: The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the operation is taking place. This field is deprecated, use location instead.
          type: string
        error:
          $ref: '#/components/schemas/Status'
          description: The error result of the operation in case of failure.
        detail:
          description: Detailed operation progress, if available.
          type: string
        targetLink:
          type: string
          description: Server-defined URL for the target of the operation.
        progress:
          readOnly: true
          description: Output only. [Output only] Progress information for an operation.
          $ref: '#/components/schemas/OperationProgress'
        status:
          type: string
          description: The current status of the operation.
          enum:
            - STATUS_UNSPECIFIED
            - PENDING
            - RUNNING
            - DONE
            - ABORTING
          enumDescriptions:
            - Not set.
            - The operation has been created.
            - The operation is currently running.
            - The operation is done, either cancelled or completed.
            - The operation is aborting.
        startTime:
          type: string
          description: '[Output only] The time the operation started, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.'
      description: This operation resource represents operations that may have happened or are happening on the cluster. All fields are output only.
      id: Operation
    LocalNvmeSsdBlockConfig:
      id: LocalNvmeSsdBlockConfig
      description: LocalNvmeSsdBlockConfig contains configuration for using raw-block local NVMe SSD.
      type: object
      properties:
        localSsdCount:
          format: int32
          type: integer
          description: 'The number of raw-block local NVMe SSD disks to be attached to the node. Each local SSD is 375 GB in size. If zero, it means no raw-block local NVMe SSD disks to be attached to the node. The limit for this value is dependent upon the maximum number of disks available on a machine per zone. See: https://cloud.google.com/compute/docs/disks/local-ssd for more information.'
    GetOpenIDConfigResponse:
      properties:
        grant_types:
          type: array
          description: Supported grant types.
          items:
            type: string
        claims_supported:
          items:
            type: string
          type: array
          description: Supported claims.
        id_token_signing_alg_values_supported:
          items:
            type: string
          description: supported ID Token signing Algorithms.
          type: array
        subject_types_supported:
          items:
            type: string
          type: array
          description: Supported subject types.
        response_types_supported:
          type: array
          items:
            type: string
          description: Supported response types.
        jwks_uri:
          type: string
          description: JSON Web Key uri.
        issuer:
          type: string
          description: OIDC Issuer.
        cacheHeader:
          description: OnePlatform automatically extracts this field and uses it to set the HTTP Cache-Control header.
          $ref: '#/components/schemas/HttpCacheControlResponseHeader'
      description: GetOpenIDConfigResponse is an OIDC discovery document for the cluster. See the OpenID Connect Discovery 1.0 specification for details.
      id: GetOpenIDConfigResponse
      type: object
    NodeTaint:
      properties:
        effect:
          enum:
            - EFFECT_UNSPECIFIED
            - NO_SCHEDULE
            - PREFER_NO_SCHEDULE
            - NO_EXECUTE
          enumDescriptions:
            - Not set
            - NoSchedule
            - PreferNoSchedule
            - NoExecute
          description: Effect for taint.
          type: string
        value:
          description: Value for taint.
          type: string
        key:
          type: string
          description: Key for taint.
      description: 'Kubernetes taint is comprised of three fields: key, value, and effect. Effect can only be one of three types: NoSchedule, PreferNoSchedule or NoExecute. See [here](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration) for more information, including usage and the valid values.'
      id: NodeTaint
      type: object
    UpgradeSettings:
      properties:
        blueGreenSettings:
          $ref: '#/components/schemas/BlueGreenSettings'
          description: Settings for blue-green upgrade strategy.
        maxUnavailable:
          description: The maximum number of nodes that can be simultaneously unavailable during the upgrade process. A node is considered available if its status is Ready.
          type: integer
          format: int32
        strategy:
          enumDescriptions:
            - Default value.
            - blue-green upgrade.
            - SURGE is the traditional way of upgrade a node pool. max_surge and max_unavailable determines the level of upgrade parallelism.
          description: Update strategy of the node pool.
          type: string
          enum:
            - NODE_POOL_UPDATE_STRATEGY_UNSPECIFIED
            - BLUE_GREEN
            - SURGE
        maxSurge:
          format: int32
          description: The maximum number of nodes that can be created beyond the current size of the node pool during the upgrade process.
          type: integer
      id: UpgradeSettings
      description: 'These upgrade settings control the level of parallelism and the level of disruption caused by an upgrade. maxUnavailable controls the number of nodes that can be simultaneously unavailable. maxSurge controls the number of additional nodes that can be added to the node pool temporarily for the time of the upgrade to increase the number of available nodes. (maxUnavailable + maxSurge) determines the level of parallelism (how many nodes are being upgraded at the same time). Note: upgrades inevitably introduce some disruption since workloads need to be moved from old nodes to new, upgraded ones. Even if maxUnavailable=0, this holds true. (Disruption stays within the limits of PodDisruptionBudget, if it is configured.) Consider a hypothetical node pool with 5 nodes having maxSurge=2, maxUnavailable=1. This means the upgrade process upgrades 3 nodes simultaneously. It creates 2 additional (upgraded) nodes, then it brings down 3 old (not yet upgraded) nodes at the same time. This ensures that there are always at least 4 nodes available. These upgrade settings configure the upgrade strategy for the node pool. Use strategy to switch between the strategies applied to the node pool. If the strategy is ROLLING, use max_surge and max_unavailable to control the level of parallelism and the level of disruption caused by upgrade. 1. maxSurge controls the number of additional nodes that can be added to the node pool temporarily for the time of the upgrade to increase the number of available nodes. 2. maxUnavailable controls the number of nodes that can be simultaneously unavailable. 3. (maxUnavailable + maxSurge) determines the level of parallelism (how many nodes are being upgraded at the same time). If the strategy is BLUE_GREEN, use blue_green_settings to configure the blue-green upgrade related settings. 1. standard_rollout_policy is the default policy. The policy is used to control the way blue pool gets drained. The draining is executed in the batch mode. The batch size could be specified as either percentage of the node pool size or the number of nodes. batch_soak_duration is the soak time after each batch gets drained. 2. node_pool_soak_duration is the soak time after all blue nodes are drained. After this period, the blue pool nodes will be deleted.'
      type: object
    LegacyAbac:
      type: object
      description: Configuration for the legacy Attribute Based Access Control authorization mode.
      id: LegacyAbac
      properties:
        enabled:
          type: boolean
          description: Whether the ABAC authorizer is enabled for this cluster. When enabled, identities in the system, including service accounts, nodes, and controllers, will have statically granted permissions beyond those provided by the RBAC configuration or IAM.
    CostManagementConfig:
      description: Configuration for fine-grained cost management feature.
      properties:
        enabled:
          description: Whether the feature is enabled or not.
          type: boolean
      id: CostManagementConfig
      type: object
    NetworkPolicyConfig:
      properties:
        disabled:
          type: boolean
          description: Whether NetworkPolicy is enabled for this cluster.
      type: object
      id: NetworkPolicyConfig
      description: Configuration for NetworkPolicy. This only tracks whether the addon is enabled or not on the Master, it does not track whether network policy is enabled for the nodes.
    StatusCondition:
      properties:
        message:
          description: Human-friendly representation of the condition
          type: string
        code:
          description: Machine-friendly representation of the condition Deprecated. Use canonical_code instead.
          enum:
            - UNKNOWN
            - GCE_STOCKOUT
            - GKE_SERVICE_ACCOUNT_DELETED
            - GCE_QUOTA_EXCEEDED
            - SET_BY_OPERATOR
            - CLOUD_KMS_KEY_ERROR
            - CA_EXPIRING
          type: string
          enumDescriptions:
            - UNKNOWN indicates a generic condition.
            - GCE_STOCKOUT indicates that Google Compute Engine resources are temporarily unavailable.
            - GKE_SERVICE_ACCOUNT_DELETED indicates that the user deleted their robot service account.
            - Google Compute Engine quota was exceeded.
            - Cluster state was manually changed by an SRE due to a system logic error.
            - Unable to perform an encrypt operation against the CloudKMS key used for etcd level encryption.
            - Cluster CA is expiring soon.
        canonicalCode:
          enumDescriptions:
            - 'Not an error; returned on success. HTTP Mapping: 200 OK'
            - 'The operation was cancelled, typically by the caller. HTTP Mapping: 499 Client Closed Request'
            - 'Unknown error. For example, this error may be returned when a `Status` value received from another address space belongs to an error space that is not known in this address space. Also errors raised by APIs that do not return enough error information may be converted to this error. HTTP Mapping: 500 Internal Server Error'
            - 'The client specified an invalid argument. Note that this differs from `FAILED_PRECONDITION`. `INVALID_ARGUMENT` indicates arguments that are problematic regardless of the state of the system (e.g., a malformed file name). HTTP Mapping: 400 Bad Request'
            - 'The deadline expired before the operation could complete. For operations that change the state of the system, this error may be returned even if the operation has completed successfully. For example, a successful response from a server could have been delayed long enough for the deadline to expire. HTTP Mapping: 504 Gateway Timeout'
            - 'Some requested entity (e.g., file or directory) was not found. Note to server developers: if a request is denied for an entire class of users, such as gradual feature rollout or undocumented allowlist, `NOT_FOUND` may be used. If a request is denied for some users within a class of users, such as user-based access control, `PERMISSION_DENIED` must be used. HTTP Mapping: 404 Not Found'
            - 'The entity that a client attempted to create (e.g., file or directory) already exists. HTTP Mapping: 409 Conflict'
            - 'The caller does not have permission to execute the specified operation. `PERMISSION_DENIED` must not be used for rejections caused by exhausting some resource (use `RESOURCE_EXHAUSTED` instead for those errors). `PERMISSION_DENIED` must not be used if the caller can not be identified (use `UNAUTHENTICATED` instead for those errors). This error code does not imply the request is valid or the requested entity exists or satisfies other pre-conditions. HTTP Mapping: 403 Forbidden'
            - 'The request does not have valid authentication credentials for the operation. HTTP Mapping: 401 Unauthorized'
            - 'Some resource has been exhausted, perhaps a per-user quota, or perhaps the entire file system is out of space. HTTP Mapping: 429 Too Many Requests'
            - 'The operation was rejected because the system is not in a state required for the operation''s execution. For example, the directory to be deleted is non-empty, an rmdir operation is applied to a non-directory, etc. Service implementors can use the following guidelines to decide between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`: (a) Use `UNAVAILABLE` if the client can retry just the failing call. (b) Use `ABORTED` if the client should retry at a higher level. For example, when a client-specified test-and-set fails, indicating the client should restart a read-modify-write sequence. (c) Use `FAILED_PRECONDITION` if the client should not retry until the system state has been explicitly fixed. For example, if an "rmdir" fails because the directory is non-empty, `FAILED_PRECONDITION` should be returned since the client should not retry unless the files are deleted from the directory. HTTP Mapping: 400 Bad Request'
            - 'The operation was aborted, typically due to a concurrency issue such as a sequencer check failure or transaction abort. See the guidelines above for deciding between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`. HTTP Mapping: 409 Conflict'
            - 'The operation was attempted past the valid range. E.g., seeking or reading past end-of-file. Unlike `INVALID_ARGUMENT`, this error indicates a problem that may be fixed if the system state changes. For example, a 32-bit file system will generate `INVALID_ARGUMENT` if asked to read at an offset that is not in the range [0,2^32-1], but it will generate `OUT_OF_RANGE` if asked to read from an offset past the current file size. There is a fair bit of overlap between `FAILED_PRECONDITION` and `OUT_OF_RANGE`. We recommend using `OUT_OF_RANGE` (the more specific error) when it applies so that callers who are iterating through a space can easily look for an `OUT_OF_RANGE` error to detect when they are done. HTTP Mapping: 400 Bad Request'
            - 'The operation is not implemented or is not supported/enabled in this service. HTTP Mapping: 501 Not Implemented'
            - 'Internal errors. This means that some invariants expected by the underlying system have been broken. This error code is reserved for serious errors. HTTP Mapping: 500 Internal Server Error'
            - 'The service is currently unavailable. This is most likely a transient condition, which can be corrected by retrying with a backoff. Note that it is not always safe to retry non-idempotent operations. See the guidelines above for deciding between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`. HTTP Mapping: 503 Service Unavailable'
            - 'Unrecoverable data loss or corruption. HTTP Mapping: 500 Internal Server Error'
          enum:
            - OK
            - CANCELLED
            - UNKNOWN
            - INVALID_ARGUMENT
            - DEADLINE_EXCEEDED
            - NOT_FOUND
            - ALREADY_EXISTS
            - PERMISSION_DENIED
            - UNAUTHENTICATED
            - RESOURCE_EXHAUSTED
            - FAILED_PRECONDITION
            - ABORTED
            - OUT_OF_RANGE
            - UNIMPLEMENTED
            - INTERNAL
            - UNAVAILABLE
            - DATA_LOSS
          type: string
          description: Canonical code of the condition.
      description: StatusCondition describes why a cluster or a node pool has a certain status (e.g., ERROR or DEGRADED).
      type: object
      id: StatusCondition
    NodeLabels:
      properties:
        labels:
          description: Map of node label keys and node label values.
          type: object
          additionalProperties:
            type: string
      type: object
      description: Collection of node-level [Kubernetes labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels).
      id: NodeLabels
    GcpFilestoreCsiDriverConfig:
      properties:
        enabled:
          type: boolean
          description: Whether the GCP Filestore CSI driver is enabled for this cluster.
      description: Configuration for the GCP Filestore CSI driver.
      id: GcpFilestoreCsiDriverConfig
      type: object
    PrivateClusterMasterGlobalAccessConfig:
      id: PrivateClusterMasterGlobalAccessConfig
      properties:
        enabled:
          description: Whenever master is accessible globally or not.
          type: boolean
      description: Configuration for controlling master global access settings.
      type: object
    UpgradeEvent:
      type: object
      id: UpgradeEvent
      description: UpgradeEvent is a notification sent to customers by the cluster server when a resource is upgrading.
      properties:
        targetVersion:
          description: The target version for the upgrade.
          type: string
        resource:
          type: string
          description: Optional relative path to the resource. For example in node pool upgrades, the relative path of the node pool.
        operation:
          description: The operation associated with this upgrade.
          type: string
        currentVersion:
          type: string
          description: The current version before the upgrade.
        resourceType:
          type: string
          enumDescriptions:
            - Default value. This shouldn't be used.
            - Master / control plane
            - Node pool
          description: The resource type that is upgrading.
          enum:
            - UPGRADE_RESOURCE_TYPE_UNSPECIFIED
            - MASTER
            - NODE_POOL
        operationStartTime:
          type: string
          format: google-datetime
          description: The time when the operation was started.
    AutoprovisioningNodePoolDefaults:
      properties:
        diskSizeGb:
          format: int32
          type: integer
          description: Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB. If unspecified, the default disk size is 100GB.
        shieldedInstanceConfig:
          $ref: '#/components/schemas/ShieldedInstanceConfig'
          description: Shielded Instance options.
        imageType:
          description: The image type to use for NAP created node.
          type: string
        bootDiskKmsKey:
          description: 'The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption'
          type: string
        serviceAccount:
          description: The Google Cloud Platform Service Account to be used by the node VMs.
          type: string
        diskType:
          type: string
          description: Type of the disk attached to each node (e.g. 'pd-standard', 'pd-ssd' or 'pd-balanced') If unspecified, the default disk type is 'pd-standard'
        upgradeSettings:
          description: Specifies the upgrade settings for NAP created node pools
          $ref: '#/components/schemas/UpgradeSettings'
        management:
          description: Specifies the node management options for NAP created node-pools.
          $ref: '#/components/schemas/NodeManagement'
        minCpuPlatform:
          type: string
          description: 'Deprecated. Minimum CPU platform to be used for NAP created node pools. The instance may be scheduled on the specified or newer CPU platform. Applicable values are the friendly names of CPU platforms, such as minCpuPlatform: Intel Haswell or minCpuPlatform: Intel Sandy Bridge. For more information, read [how to specify min CPU platform](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform). This field is deprecated, min_cpu_platform should be specified using https://cloud.google.com/requested-min-cpu-platform label selector on the pod. To unset the min cpu platform field pass "automatic" as field value.'
        oauthScopes:
          items:
            type: string
          type: array
          description: Scopes that are used by NAP when creating node pools.
      id: AutoprovisioningNodePoolDefaults
      description: AutoprovisioningNodePoolDefaults contains defaults for a node pool created by NAP.
      type: object
    Metric:
      id: Metric
      properties:
        doubleValue:
          description: For metrics with floating point value.
          format: double
          type: number
        name:
          type: string
          description: Required. Metric name, e.g., "nodes total", "percent done".
        stringValue:
          description: For metrics with custom values (ratios, visual progress, etc.).
          type: string
        intValue:
          type: string
          description: For metrics with integer value.
          format: int64
      type: object
      description: Progress metric is (string, int|float|string) pair.
    ClusterAutoscaling:
      type: object
      id: ClusterAutoscaling
      description: ClusterAutoscaling contains global, per-cluster information required by Cluster Autoscaler to automatically adjust the size of the cluster and create/delete node pools based on the current needs.
      properties:
        autoprovisioningLocations:
          type: array
          items:
            type: string
          description: The list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the NodePool's nodes can be created by NAP.
        resourceLimits:
          items:
            $ref: '#/components/schemas/ResourceLimit'
          description: Contains global constraints regarding minimum and maximum amount of resources in the cluster.
          type: array
        autoprovisioningNodePoolDefaults:
          $ref: '#/components/schemas/AutoprovisioningNodePoolDefaults'
          description: AutoprovisioningNodePoolDefaults contains defaults for a node pool created by NAP.
        enableNodeAutoprovisioning:
          type: boolean
          description: Enables automatic node pool creation and deletion.
        autoscalingProfile:
          enumDescriptions:
            - No change to autoscaling configuration.
            - Prioritize optimizing utilization of resources.
            - Use default (balanced) autoscaling configuration.
          description: Defines autoscaling behaviour.
          enum:
            - PROFILE_UNSPECIFIED
            - OPTIMIZE_UTILIZATION
            - BALANCED
          type: string
    ResourceLimit:
      id: ResourceLimit
      type: object
      description: Contains information about amount of some resource in the cluster. For memory, value should be in GB.
      properties:
        resourceType:
          type: string
          description: Resource name "cpu", "memory" or gpu-specific string.
        minimum:
          format: int64
          type: string
          description: Minimum amount of the resource in the cluster.
        maximum:
          type: string
          description: Maximum amount of the resource in the cluster.
          format: int64
    NodeConfigDefaults:
      description: Subset of NodeConfig message that has defaults.
      id: NodeConfigDefaults
      type: object
      properties:
        loggingConfig:
          description: Logging configuration for node pools.
          $ref: '#/components/schemas/NodePoolLoggingConfig'
        gcfsConfig:
          $ref: '#/components/schemas/GcfsConfig'
          description: GCFS (Google Container File System, also known as Riptide) options.
    ConsumptionMeteringConfig:
      type: object
      description: Parameters for controlling consumption metering.
      id: ConsumptionMeteringConfig
      properties:
        enabled:
          type: boolean
          description: Whether to enable consumption metering for this cluster. If enabled, a second BigQuery table will be created to hold resource consumption records.
    ServerConfig:
      type: object
      id: ServerConfig
      properties:
        validImageTypes:
          description: List of valid image types.
          items:
            type: string
          type: array
        channels:
          type: array
          description: List of release channel configurations.
          items:
            $ref: '#/components/schemas/ReleaseChannelConfig'
        validMasterVersions:
          type: array
          items:
            type: string
          description: List of valid master versions, in descending order.
        defaultClusterVersion:
          description: Version of Kubernetes the service deploys by default.
          type: string
        validNodeVersions:
          description: List of valid node upgrade target versions, in descending order.
          type: array
          items:
            type: string
        defaultImageType:
          description: Default image type.
          type: string
      description: Kubernetes Engine service configuration.
    ResourceUsageExportConfig:
      properties:
        consumptionMeteringConfig:
          $ref: '#/components/schemas/ConsumptionMeteringConfig'
          description: Configuration to enable resource consumption metering.
        enableNetworkEgressMetering:
          type: boolean
          description: Whether to enable network egress metering for this cluster. If enabled, a daemonset will be created in the cluster to meter network egress traffic.
        bigqueryDestination:
          $ref: '#/components/schemas/BigQueryDestination'
          description: Configuration to use BigQuery as usage export destination.
      description: Configuration for exporting cluster resource usages.
      id: ResourceUsageExportConfig
      type: object
    MasterAuthorizedNetworksConfig:
      description: Configuration options for the master authorized networks feature. Enabled master authorized networks will disallow all external traffic to access Kubernetes master through HTTPS except traffic from the given CIDR blocks, Google Compute Engine Public IPs and Google Prod IPs.
      type: object
      properties:
        enabled:
          description: Whether or not master authorized networks is enabled.
          type: boolean
        gcpPublicCidrsAccessEnabled:
          description: Whether master is accessbile via Google Compute Engine Public IP addresses.
          type: boolean
        cidrBlocks:
          description: cidr_blocks define up to 50 external networks that could access Kubernetes master through HTTPS.
          type: array
          items:
            $ref: '#/components/schemas/CidrBlock'
      id: MasterAuthorizedNetworksConfig
    NetworkPerformanceConfig:
      id: NetworkPerformanceConfig
      properties:
        totalEgressBandwidthTier:
          enum:
            - TIER_UNSPECIFIED
            - TIER_1
          description: Specifies the total network bandwidth tier for the NodePool.
          enumDescriptions:
            - Default value
            - Higher bandwidth, actual values based on VM size.
          type: string
      description: Configuration of all network bandwidth tiers
      type: object
    StandardRolloutPolicy:
      properties:
        batchNodeCount:
          description: Number of blue nodes to drain in a batch.
          type: integer
          format: int32
        batchSoakDuration:
          format: google-duration
          description: Soak time after each batch gets drained. Default to zero.
          type: string
        batchPercentage:
          type: number
          format: float
          description: Percentage of the blue pool nodes to drain in a batch. The range of this field should be (0.0, 1.0].
      type: object
      id: StandardRolloutPolicy
      description: Standard rollout policy is the default policy for blue-green.
    ConfidentialNodes:
      properties:
        enabled:
          type: boolean
          description: Whether Confidential Nodes feature is enabled.
      type: object
      id: ConfidentialNodes
      description: ConfidentialNodes is configuration for the confidential nodes feature, which makes nodes run on confidential VMs.
    NetworkConfig:
      description: NetworkConfig reports the relative names of network & subnetwork.
      type: object
      properties:
        gatewayApiConfig:
          $ref: '#/components/schemas/GatewayAPIConfig'
          description: GatewayAPIConfig contains the desired config of Gateway API on this cluster.
        enableL4ilbSubsetting:
          description: Whether L4ILB Subsetting is enabled for this cluster.
          type: boolean
        dnsConfig:
          description: DNSConfig contains clusterDNS config for this cluster.
          $ref: '#/components/schemas/DNSConfig'
        datapathProvider:
          enum:
            - DATAPATH_PROVIDER_UNSPECIFIED
            - LEGACY_DATAPATH
            - ADVANCED_DATAPATH
          type: string
          enumDescriptions:
            - Default value.
            - Use the IPTables implementation based on kube-proxy.
            - Use the eBPF based GKE Dataplane V2 with additional features. See the [GKE Dataplane V2 documentation](https://cloud.google.com/kubernetes-engine/docs/how-to/dataplane-v2) for more.
          description: The desired datapath provider for this cluster. By default, uses the IPTables-based kube-proxy implementation.
        subnetwork:
          type: string
          description: 'Output only. The relative name of the Google Compute Engine [subnetwork](https://cloud.google.com/compute/docs/vpc) to which the cluster is connected. Example: projects/my-project/regions/us-central1/subnetworks/my-subnet'
        enableIntraNodeVisibility:
          type: boolean
          description: Whether Intra-node visibility is enabled for this cluster. This makes same node pod to pod traffic visible for VPC network.
        serviceExternalIpsConfig:
          $ref: '#/components/schemas/ServiceExternalIPsConfig'
          description: ServiceExternalIPsConfig specifies if services with externalIPs field are blocked or not.
        privateIpv6GoogleAccess:
          enumDescriptions:
            - Default value. Same as DISABLED
            - No private access to or from Google Services
            - Enables private IPv6 access to Google Services from GKE
            - Enables priate IPv6 access to and from Google Services
          description: The desired state of IPv6 connectivity to Google Services. By default, no private IPv6 access to or from Google Services (all access will be via IPv4)
          enum:
            - PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED
            - PRIVATE_IPV6_GOOGLE_ACCESS_DISABLED
            - PRIVATE_IPV6_GOOGLE_ACCESS_TO_GOOGLE
            - PRIVATE_IPV6_GOOGLE_ACCESS_BIDIRECTIONAL
          type: string
        network:
          description: 'Output only. The relative name of the Google Compute Engine network(https://cloud.google.com/compute/docs/networks-and-firewalls#networks) to which the cluster is connected. Example: projects/my-project/global/networks/my-network'
          type: string
        defaultSnatStatus:
          $ref: '#/components/schemas/DefaultSnatStatus'
          description: Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when default_snat_status is disabled. When disabled is set to false, default IP masquerade rules will be applied to the nodes to prevent sNAT on cluster internal traffic.
      id: NetworkConfig
    SetLegacyAbacRequest:
      id: SetLegacyAbacRequest
      description: SetLegacyAbacRequest enables or disables the ABAC authorization mechanism for a cluster.
      type: object
      properties:
        clusterId:
          description: Deprecated. The name of the cluster to update. This field has been deprecated and replaced by the name field.
          type: string
        name:
          type: string
          description: The name (project, location, cluster name) of the cluster to set legacy abac. Specified in the format `projects/*/locations/*/clusters/*`.
        projectId:
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          type: string
        zone:
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          type: string
        enabled:
          type: boolean
          description: Required. Whether ABAC authorization will be enabled in the cluster.
    OperationProgress:
      type: object
      id: OperationProgress
      description: Information about operation (or operation stage) progress.
      properties:
        status:
          type: string
          description: Status of an operation stage. Unset for single-stage operations.
          enum:
            - STATUS_UNSPECIFIED
            - PENDING
            - RUNNING
            - DONE
            - ABORTING
          enumDescriptions:
            - Not set.
            - The operation has been created.
            - The operation is currently running.
            - The operation is done, either cancelled or completed.
            - The operation is aborting.
        stages:
          type: array
          description: Substages of an operation or a stage.
          items:
            $ref: '#/components/schemas/OperationProgress'
        name:
          description: A non-parameterized string describing an operation stage. Unset for single-stage operations.
          type: string
        metrics:
          type: array
          items:
            $ref: '#/components/schemas/Metric'
          description: 'Progress metric bundle, for example: metrics: [{name: "nodes done", int_value: 15}, {name: "nodes total", int_value: 32}] or metrics: [{name: "progress", double_value: 0.56}, {name: "progress scale", double_value: 1.0}]'
    ListUsableSubnetworksResponse:
      description: ListUsableSubnetworksResponse is the response of ListUsableSubnetworksRequest.
      type: object
      id: ListUsableSubnetworksResponse
      properties:
        subnetworks:
          items:
            $ref: '#/components/schemas/UsableSubnetwork'
          description: A list of usable subnetworks in the specified network project.
          type: array
        nextPageToken:
          description: This token allows you to get the next page of results for list requests. If the number of results is larger than `page_size`, use the `next_page_token` as a value for the query parameter `page_token` in the next request. The value will become empty when there are no more pages.
          type: string
    MaintenancePolicy:
      type: object
      properties:
        window:
          description: Specifies the maintenance window in which maintenance may be performed.
          $ref: '#/components/schemas/MaintenanceWindow'
        resourceVersion:
          type: string
          description: A hash identifying the version of this policy, so that updates to fields of the policy won't accidentally undo intermediate changes (and so that users of the API unaware of some fields won't accidentally remove other fields). Make a `get()` request to the cluster to get the current resource version and include it with requests to set the policy.
      id: MaintenancePolicy
      description: MaintenancePolicy defines the maintenance policy to be used for the cluster.
    ManagedPrometheusConfig:
      id: ManagedPrometheusConfig
      properties:
        enabled:
          type: boolean
          description: Enable Managed Collection.
      description: ManagedPrometheusConfig defines the configuration for Google Cloud Managed Service for Prometheus.
      type: object
    MonitoringComponentConfig:
      description: MonitoringComponentConfig is cluster monitoring component configuration.
      id: MonitoringComponentConfig
      type: object
      properties:
        enableComponents:
          type: array
          description: Select components to collect metrics. An empty set would disable all monitoring.
          items:
            enum:
              - COMPONENT_UNSPECIFIED
              - SYSTEM_COMPONENTS
              - APISERVER
              - SCHEDULER
              - CONTROLLER_MANAGER
            type: string
            enumDescriptions:
              - Default value. This shouldn't be used.
              - system components
              - kube-apiserver
              - kube-scheduler
              - kube-controller-manager
    ConfigConnectorConfig:
      description: Configuration options for the Config Connector add-on.
      id: ConfigConnectorConfig
      properties:
        enabled:
          description: Whether Cloud Connector is enabled for this cluster.
          type: boolean
      type: object
    NodeKubeletConfig:
      type: object
      description: Node kubelet configs.
      id: NodeKubeletConfig
      properties:
        cpuManagerPolicy:
          description: 'Control the CPU management policy on the node. See https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/ The following values are allowed. * "none": the default, which represents the existing scheduling behavior. * "static": allows pods with certain resource characteristics to be granted increased CPU affinity and exclusivity on the node. The default value is ''none'' if unspecified.'
          type: string
        cpuCfsQuotaPeriod:
          description: Set the CPU CFS quota period value 'cpu.cfs_period_us'. The string must be a sequence of decimal numbers, each with optional fraction and a unit suffix, such as "300ms". Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h". The value must be a positive duration.
          type: string
        podPidsLimit:
          type: string
          description: Set the Pod PID limits. See https://kubernetes.io/docs/concepts/policy/pid-limiting/#pod-pid-limits Controls the maximum number of processes allowed to run in a pod. The value must be greater than or equal to 1024 and less than 4194304.
          format: int64
        cpuCfsQuota:
          description: Enable CPU CFS quota enforcement for containers that specify CPU limits. This option is enabled by default which makes kubelet use CFS quota (https://www.kernel.org/doc/Documentation/scheduler/sched-bwc.txt) to enforce container CPU limits. Otherwise, CPU limits will not be enforced at all. Disable this option to mitigate CPU throttling problems while still having your pods to be in Guaranteed QoS class by specifying the CPU limits. The default value is 'true' if unspecified.
          type: boolean
    GcePersistentDiskCsiDriverConfig:
      id: GcePersistentDiskCsiDriverConfig
      type: object
      description: Configuration for the Compute Engine PD CSI driver.
      properties:
        enabled:
          description: Whether the Compute Engine PD CSI driver is enabled for this cluster.
          type: boolean
    ReleaseChannel:
      type: object
      id: ReleaseChannel
      description: ReleaseChannel indicates which release channel a cluster is subscribed to. Release channels are arranged in order of risk. When a cluster is subscribed to a release channel, Google maintains both the master version and the node version. Node auto-upgrade defaults to true and cannot be disabled.
      properties:
        channel:
          enum:
            - UNSPECIFIED
            - RAPID
            - REGULAR
            - STABLE
          enumDescriptions:
            - No channel specified.
            - 'RAPID channel is offered on an early access basis for customers who want to test new releases. WARNING: Versions available in the RAPID Channel may be subject to unresolved issues with no known workaround and are not subject to any SLAs.'
            - Clusters subscribed to REGULAR receive versions that are considered GA quality. REGULAR is intended for production users who want to take advantage of new features.
            - Clusters subscribed to STABLE receive versions that are known to be stable and reliable in production.
          description: channel specifies which release channel the cluster is subscribed to.
          type: string
    Empty:
      id: Empty
      type: object
      properties: {}
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
    SetLocationsRequest:
      description: SetLocationsRequest sets the locations of the cluster.
      properties:
        zone:
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          type: string
        clusterId:
          type: string
          description: Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.
        projectId:
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          type: string
        locations:
          items:
            type: string
          type: array
          description: Required. The desired list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the cluster's nodes should be located. Changing the locations a cluster is in will result in nodes being either created or removed from the cluster, depending on whether locations are being added or removed. This list must always include the cluster's primary zone.
        name:
          description: The name (project, location, cluster) of the cluster to set locations. Specified in the format `projects/*/locations/*/clusters/*`.
          type: string
      type: object
      id: SetLocationsRequest
    DatabaseEncryption:
      id: DatabaseEncryption
      description: Configuration of etcd encryption.
      properties:
        keyName:
          type: string
          description: Name of CloudKMS key to use for the encryption of secrets in etcd. Ex. projects/my-project/locations/global/keyRings/my-ring/cryptoKeys/my-key
        state:
          enum:
            - UNKNOWN
            - ENCRYPTED
            - DECRYPTED
          type: string
          enumDescriptions:
            - Should never be set
            - Secrets in etcd are encrypted.
            - Secrets in etcd are stored in plain text (at etcd level) - this is unrelated to Compute Engine level full disk encryption.
          description: Denotes the state of etcd encryption.
      type: object
    CreateClusterRequest:
      id: CreateClusterRequest
      properties:
        cluster:
          description: Required. A [cluster resource](https://cloud.google.com/container-engine/reference/rest/v1/projects.locations.clusters)
          $ref: '#/components/schemas/Cluster'
        parent:
          type: string
          description: The parent (project and location) where the cluster will be created. Specified in the format `projects/*/locations/*`.
        projectId:
          type: string
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the parent field.
        zone:
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the parent field.
          type: string
      type: object
      description: CreateClusterRequest creates a cluster.
    ClusterUpdate:
      type: object
      properties:
        desiredResourceUsageExportConfig:
          $ref: '#/components/schemas/ResourceUsageExportConfig'
          description: The desired configuration for exporting resource usage.
        desiredMonitoringService:
          type: string
          description: 'The monitoring service the cluster should use to write metrics. Currently available options: * "monitoring.googleapis.com/kubernetes" - The Cloud Monitoring service with a Kubernetes-native resource model * `monitoring.googleapis.com` - The legacy Cloud Monitoring service (no longer available as of GKE 1.15). * `none` - No metrics will be exported from the cluster. If left as an empty string,`monitoring.googleapis.com/kubernetes` will be used for GKE 1.14+ or `monitoring.googleapis.com` for earlier versions.'
        desiredMonitoringConfig:
          description: The desired monitoring configuration.
          $ref: '#/components/schemas/MonitoringConfig'
        desiredReleaseChannel:
          description: The desired release channel configuration.
          $ref: '#/components/schemas/ReleaseChannel'
        desiredPrivateClusterConfig:
          $ref: '#/components/schemas/PrivateClusterConfig'
          description: The desired private cluster configuration.
        desiredNodePoolAutoConfigNetworkTags:
          description: The desired network tags that apply to all auto-provisioned node pools in autopilot clusters and node auto-provisioning enabled clusters.
          $ref: '#/components/schemas/NetworkTags'
        desiredDatabaseEncryption:
          description: Configuration of etcd encryption.
          $ref: '#/components/schemas/DatabaseEncryption'
        desiredShieldedNodes:
          $ref: '#/components/schemas/ShieldedNodes'
          description: Configuration for Shielded Nodes.
        desiredCostManagementConfig:
          $ref: '#/components/schemas/CostManagementConfig'
          description: The desired configuration for the fine-grained cost management feature.
        desiredGcfsConfig:
          description: The desired GCFS config for the cluster
          $ref: '#/components/schemas/GcfsConfig'
        desiredGatewayApiConfig:
          description: The desired config of Gateway API on this cluster.
          $ref: '#/components/schemas/GatewayAPIConfig'
        desiredClusterAutoscaling:
          $ref: '#/components/schemas/ClusterAutoscaling'
          description: Cluster-level autoscaling configuration.
        desiredMeshCertificates:
          description: Configuration for issuance of mTLS keys and certificates to Kubernetes pods.
          $ref: '#/components/schemas/MeshCertificates'
        desiredIntraNodeVisibilityConfig:
          $ref: '#/components/schemas/IntraNodeVisibilityConfig'
          description: The desired config of Intra-node visibility.
        desiredNodePoolAutoscaling:
          $ref: '#/components/schemas/NodePoolAutoscaling'
          description: Autoscaler configuration for the node pool specified in desired_node_pool_id. If there is only one pool in the cluster and desired_node_pool_id is not provided then the change applies to that single node pool.
        desiredDnsConfig:
          description: DNSConfig contains clusterDNS config for this cluster.
          $ref: '#/components/schemas/DNSConfig'
        desiredDatapathProvider:
          enumDescriptions:
            - Default value.
            - Use the IPTables implementation based on kube-proxy.
            - Use the eBPF based GKE Dataplane V2 with additional features. See the [GKE Dataplane V2 documentation](https://cloud.google.com/kubernetes-engine/docs/how-to/dataplane-v2) for more.
          description: The desired datapath provider for the cluster.
          type: string
          enum:
            - DATAPATH_PROVIDER_UNSPECIFIED
            - LEGACY_DATAPATH
            - ADVANCED_DATAPATH
        desiredNodePoolLoggingConfig:
          $ref: '#/components/schemas/NodePoolLoggingConfig'
          description: The desired node pool logging configuration defaults for the cluster.
        etag:
          type: string
          description: The current etag of the cluster. If an etag is provided and does not match the current etag of the cluster, update will be blocked and an ABORTED error will be returned.
        desiredAddonsConfig:
          $ref: '#/components/schemas/AddonsConfig'
          description: Configurations for the various addons available to run in the cluster.
        desiredAuthenticatorGroupsConfig:
          description: The desired authenticator groups config for the cluster.
          $ref: '#/components/schemas/AuthenticatorGroupsConfig'
        desiredStackType:
          enum:
            - STACK_TYPE_UNSPECIFIED
            - IPV4
            - IPV4_IPV6
          enumDescriptions:
            - Default value, will be defaulted as IPV4 only
            - Cluster is IPV4 only
            - Cluster can use both IPv4 and IPv6
          type: string
          description: The desired stack type of the cluster. If a stack type is provided and does not match the current stack type of the cluster, update will attempt to change the stack type to the new type.
        desiredNotificationConfig:
          description: The desired notification configuration.
          $ref: '#/components/schemas/NotificationConfig'
        desiredDefaultSnatStatus:
          $ref: '#/components/schemas/DefaultSnatStatus'
          description: The desired status of whether to disable default sNAT for this cluster.
        desiredMasterVersion:
          type: string
          description: 'The Kubernetes version to change the master to. Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - "latest": picks the highest valid Kubernetes version - "1.X": picks the highest valid patch+gke.N patch in the 1.X version - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version - "1.X.Y-gke.N": picks an explicit Kubernetes version - "-": picks the default Kubernetes version'
        desiredBinaryAuthorization:
          $ref: '#/components/schemas/BinaryAuthorization'
          description: The desired configuration options for the Binary Authorization feature.
        desiredImageType:
          description: 'The desired image type for the node pool. NOTE: Set the "desired_node_pool" field as well.'
          type: string
        desiredLoggingService:
          type: string
          description: 'The logging service the cluster should use to write logs. Currently available options: * `logging.googleapis.com/kubernetes` - The Cloud Logging service with a Kubernetes-native resource model * `logging.googleapis.com` - The legacy Cloud Logging service (no longer available as of GKE 1.15). * `none` - no logs will be exported from the cluster. If left as an empty string,`logging.googleapis.com/kubernetes` will be used for GKE 1.14+ or `logging.googleapis.com` for earlier versions.'
        desiredServiceExternalIpsConfig:
          description: ServiceExternalIPsConfig specifies the config for the use of Services with ExternalIPs field.
          $ref: '#/components/schemas/ServiceExternalIPsConfig'
        desiredNodeVersion:
          description: 'The Kubernetes version to change the nodes to (typically an upgrade). Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - "latest": picks the highest valid Kubernetes version - "1.X": picks the highest valid patch+gke.N patch in the 1.X version - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version - "1.X.Y-gke.N": picks an explicit Kubernetes version - "-": picks the Kubernetes master version'
          type: string
        desiredEnablePrivateEndpoint:
          description: Enable/Disable private endpoint for the cluster's master.
          type: boolean
        desiredIdentityServiceConfig:
          $ref: '#/components/schemas/IdentityServiceConfig'
          description: The desired Identity Service component configuration.
        desiredNodePoolId:
          type: string
          description: The node pool to be upgraded. This field is mandatory if "desired_node_version", "desired_image_family" or "desired_node_pool_autoscaling" is specified and there is more than one node pool on the cluster.
        desiredWorkloadIdentityConfig:
          description: Configuration for Workload Identity.
          $ref: '#/components/schemas/WorkloadIdentityConfig'
        desiredLocations:
          description: 'The desired list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the cluster''s nodes should be located. This list must always include the cluster''s primary zone. Warning: changing cluster locations will update the locations of all node pools and will result in nodes being added and/or removed.'
          items:
            type: string
          type: array
        desiredLoggingConfig:
          $ref: '#/components/schemas/LoggingConfig'
          description: The desired logging configuration.
        desiredL4ilbSubsettingConfig:
          description: The desired L4 Internal Load Balancer Subsetting configuration.
          $ref: '#/components/schemas/ILBSubsettingConfig'
        desiredMasterAuthorizedNetworksConfig:
          $ref: '#/components/schemas/MasterAuthorizedNetworksConfig'
          description: The desired configuration options for master authorized networks feature.
        desiredVerticalPodAutoscaling:
          $ref: '#/components/schemas/VerticalPodAutoscaling'
          description: Cluster-level Vertical Pod Autoscaling configuration.
        desiredPrivateIpv6GoogleAccess:
          type: string
          enum:
            - PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED
            - PRIVATE_IPV6_GOOGLE_ACCESS_DISABLED
            - PRIVATE_IPV6_GOOGLE_ACCESS_TO_GOOGLE
            - PRIVATE_IPV6_GOOGLE_ACCESS_BIDIRECTIONAL
          enumDescriptions:
            - Default value. Same as DISABLED
            - No private access to or from Google Services
            - Enables private IPv6 access to Google Services from GKE
            - Enables priate IPv6 access to and from Google Services
          description: The desired state of IPv6 connectivity to Google Services.
      description: ClusterUpdate describes an update to the cluster. Exactly one update can be applied to a cluster with each request, so at most one field can be provided.
      id: ClusterUpdate
    MaintenanceWindow:
      id: MaintenanceWindow
      type: object
      description: MaintenanceWindow defines the maintenance window to be used for the cluster.
      properties:
        maintenanceExclusions:
          additionalProperties:
            $ref: '#/components/schemas/TimeWindow'
          description: Exceptions to maintenance window. Non-emergency maintenance should not occur in these windows.
          type: object
        dailyMaintenanceWindow:
          $ref: '#/components/schemas/DailyMaintenanceWindow'
          description: DailyMaintenanceWindow specifies a daily maintenance operation window.
        recurringWindow:
          $ref: '#/components/schemas/RecurringTimeWindow'
          description: RecurringWindow specifies some number of recurring time periods for maintenance to occur. The time windows may be overlapping. If no maintenance windows are set, maintenance can occur at any time.
    GkeBackupAgentConfig:
      type: object
      description: Configuration for the Backup for GKE Agent.
      properties:
        enabled:
          description: Whether the Backup for GKE agent is enabled for this cluster.
          type: boolean
      id: GkeBackupAgentConfig
    NodePoolDefaults:
      type: object
      id: NodePoolDefaults
      description: Subset of Nodepool message that has defaults.
      properties:
        nodeConfigDefaults:
          $ref: '#/components/schemas/NodeConfigDefaults'
          description: Subset of NodeConfig message that has defaults.
    SetLabelsRequest:
      properties:
        clusterId:
          type: string
          description: Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field.
        labelFingerprint:
          description: Required. The fingerprint of the previous set of labels for this resource, used to detect conflicts. The fingerprint is initially generated by Kubernetes Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash when updating or changing labels. Make a `get()` request to the resource to get the latest fingerprint.
          type: string
        name:
          description: The name (project, location, cluster name) of the cluster to set labels. Specified in the format `projects/*/locations/*/clusters/*`.
          type: string
        projectId:
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          type: string
        resourceLabels:
          description: Required. The labels to set for that cluster.
          type: object
          additionalProperties:
            type: string
        zone:
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          type: string
      id: SetLabelsRequest
      type: object
      description: SetLabelsRequest sets the Google Cloud Platform labels on a Google Container Engine cluster, which will in turn set them for Google Compute Engine resources used by that cluster
    PrivateClusterConfig:
      id: PrivateClusterConfig
      type: object
      properties:
        privateEndpointSubnetwork:
          description: Subnet to provision the master's private endpoint during cluster creation. Specified in projects/*/regions/*/subnetworks/* format.
          type: string
        privateEndpoint:
          description: Output only. The internal IP address of this cluster's master endpoint.
          type: string
        masterGlobalAccessConfig:
          description: Controls master global access settings.
          $ref: '#/components/schemas/PrivateClusterMasterGlobalAccessConfig'
        enablePrivateEndpoint:
          type: boolean
          description: Whether the master's internal IP address is used as the cluster endpoint.
        publicEndpoint:
          type: string
          description: Output only. The external IP address of this cluster's master endpoint.
        peeringName:
          description: Output only. The peering name in the customer VPC used by this cluster.
          type: string
        enablePrivateNodes:
          description: Whether nodes have internal IP addresses only. If enabled, all nodes are given only RFC 1918 private addresses and communicate with the master via private networking.
          type: boolean
        masterIpv4CidrBlock:
          type: string
          description: The IP range in CIDR notation to use for the hosted master network. This range will be used for assigning internal IP addresses to the master or set of masters, as well as the ILB VIP. This range must not overlap with any other ranges in use within the cluster's network.
      description: Configuration options for private clusters.
    CompleteNodePoolUpgradeRequest:
      properties: {}
      description: CompleteNodePoolUpgradeRequest sets the name of target node pool to complete upgrade.
      type: object
      id: CompleteNodePoolUpgradeRequest
    ResourceLabels:
      description: Collection of [GCP labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels).
      properties:
        labels:
          additionalProperties:
            type: string
          description: Map of node label keys and node label values.
          type: object
      id: ResourceLabels
      type: object
    WorkloadMetadataConfig:
      type: object
      id: WorkloadMetadataConfig
      description: WorkloadMetadataConfig defines the metadata configuration to expose to workloads on the node pool.
      properties:
        mode:
          description: Mode is the configuration for how to expose metadata to workloads running on the node pool.
          enumDescriptions:
            - Not set.
            - Expose all Compute Engine metadata to pods.
            - Run the GKE Metadata Server on this node. The GKE Metadata Server exposes a metadata API to workloads that is compatible with the V1 Compute Metadata APIs exposed by the Compute Engine and App Engine Metadata Servers. This feature can only be enabled if Workload Identity is enabled at the cluster level.
          enum:
            - MODE_UNSPECIFIED
            - GCE_METADATA
            - GKE_METADATA
          type: string
    HorizontalPodAutoscaling:
      type: object
      id: HorizontalPodAutoscaling
      description: Configuration options for the horizontal pod autoscaling feature, which increases or decreases the number of replica pods a replication controller has based on the resource usage of the existing pods.
      properties:
        disabled:
          description: Whether the Horizontal Pod Autoscaling feature is enabled in the cluster. When enabled, it ensures that metrics are collected into Stackdriver Monitoring.
          type: boolean
    VerticalPodAutoscaling:
      description: VerticalPodAutoscaling contains global, per-cluster information required by Vertical Pod Autoscaler to automatically adjust the resources of pods controlled by it.
      type: object
      properties:
        enabled:
          description: Enables vertical pod autoscaling.
          type: boolean
      id: VerticalPodAutoscaling
    MaxPodsConstraint:
      description: Constraints applied to pods.
      type: object
      properties:
        maxPodsPerNode:
          format: int64
          type: string
          description: Constraint enforced on the max num of pods per node.
      id: MaxPodsConstraint
    CidrBlock:
      id: CidrBlock
      type: object
      properties:
        displayName:
          description: display_name is an optional field for users to identify CIDR blocks.
          type: string
        cidrBlock:
          type: string
          description: cidr_block must be specified in CIDR notation.
      description: CidrBlock contains an optional name and one CIDR block.
    MonitoringConfig:
      description: MonitoringConfig is cluster monitoring configuration.
      properties:
        componentConfig:
          $ref: '#/components/schemas/MonitoringComponentConfig'
          description: Monitoring components configuration
        managedPrometheusConfig:
          description: Enable Google Cloud Managed Service for Prometheus in the cluster.
          $ref: '#/components/schemas/ManagedPrometheusConfig'
      id: MonitoringConfig
      type: object
    ShieldedInstanceConfig:
      type: object
      description: A set of Shielded Instance options.
      properties:
        enableIntegrityMonitoring:
          description: Defines whether the instance has integrity monitoring enabled. Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created.
          type: boolean
        enableSecureBoot:
          description: Defines whether the instance has Secure Boot enabled. Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails.
          type: boolean
      id: ShieldedInstanceConfig
    BinaryAuthorization:
      type: object
      description: Configuration for Binary Authorization.
      id: BinaryAuthorization
      properties:
        evaluationMode:
          description: Mode of operation for binauthz policy evaluation. If unspecified, defaults to DISABLED.
          enumDescriptions:
            - Default value
            - Disable BinaryAuthorization
            - Enforce Kubernetes admission requests with BinaryAuthorization using the project's singleton policy. This is equivalent to setting the enabled boolean to true.
          enum:
            - EVALUATION_MODE_UNSPECIFIED
            - DISABLED
            - PROJECT_SINGLETON_POLICY_ENFORCE
          type: string
        enabled:
          type: boolean
          description: This field is deprecated. Leave this unset and instead configure BinaryAuthorization using evaluation_mode. If evaluation_mode is set to anything other than EVALUATION_MODE_UNSPECIFIED, this field is ignored.
    NodePoolLoggingConfig:
      properties:
        variantConfig:
          description: Logging variant configuration.
          $ref: '#/components/schemas/LoggingVariantConfig'
      type: object
      id: NodePoolLoggingConfig
      description: NodePoolLoggingConfig specifies logging configuration for nodepools.
    CreateNodePoolRequest:
      id: CreateNodePoolRequest
      type: object
      description: CreateNodePoolRequest creates a node pool for a cluster.
      properties:
        projectId:
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the parent field.
          type: string
        parent:
          description: The parent (project, location, cluster name) where the node pool will be created. Specified in the format `projects/*/locations/*/clusters/*`.
          type: string
        clusterId:
          description: Deprecated. The name of the cluster. This field has been deprecated and replaced by the parent field.
          type: string
        zone:
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the parent field.
          type: string
        nodePool:
          description: Required. The node pool to create.
          $ref: '#/components/schemas/NodePool'
  parameters:
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    usable_subnetworks:
      id: google.container.usable_subnetworks
      name: usable_subnetworks
      title: Usable_subnetworks
      methods:
        projects_aggregated_usableSubnetworks_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1aggregated~1usableSubnetworks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: subnetworks
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/usable_subnetworks/methods/projects_aggregated_usableSubnetworks_list'
        insert: []
        update: []
        delete: []
    clusters:
      id: google.container.clusters
      name: clusters
      title: Clusters
      methods:
        projects_locations_clusters_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_clusters_update:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_clusters_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_clusters_setAddons:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}:setAddons/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_clusters_setLogging:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}:setLogging/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_clusters_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_clusters_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_clusters_setMasterAuth:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}:setMasterAuth/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_clusters_setLegacyAbac:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}:setLegacyAbac/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_clusters_updateMaster:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}:updateMaster/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_clusters_setResourceLabels:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}:setResourceLabels/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_clusters_setLocations:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}:setLocations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_clusters_setNetworkPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}:setNetworkPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_clusters_startIpRotation:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}:startIpRotation/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_clusters_completeIpRotation:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}:completeIpRotation/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_clusters_setMonitoring:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}:setMonitoring/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_clusters_setMaintenancePolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}:setMaintenancePolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_zones_clusters_setMaintenancePolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1zones~1{zone}~1clusters~1{clusterId}:setMaintenancePolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_zones_clusters_setNetworkPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1zones~1{zone}~1clusters~1{clusterId}:setNetworkPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_zones_clusters_setMasterAuth:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1zones~1{zone}~1clusters~1{clusterId}:setMasterAuth/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_zones_clusters_master:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1zones~1{zone}~1clusters~1{clusterId}~1master/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_zones_clusters_locations:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1zones~1{zone}~1clusters~1{clusterId}~1locations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_zones_clusters_resourceLabels:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1zones~1{zone}~1clusters~1{clusterId}~1resourceLabels/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_zones_clusters_startIpRotation:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1zones~1{zone}~1clusters~1{clusterId}:startIpRotation/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_zones_clusters_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1zones~1{zone}~1clusters/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_zones_clusters_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1zones~1{zone}~1clusters/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_zones_clusters_update:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1zones~1{zone}~1clusters~1{clusterId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_zones_clusters_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1zones~1{zone}~1clusters~1{clusterId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_zones_clusters_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1zones~1{zone}~1clusters~1{clusterId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_zones_clusters_completeIpRotation:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1zones~1{zone}~1clusters~1{clusterId}:completeIpRotation/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_zones_clusters_monitoring:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1zones~1{zone}~1clusters~1{clusterId}~1monitoring/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_zones_clusters_legacyAbac:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1zones~1{zone}~1clusters~1{clusterId}~1legacyAbac/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_zones_clusters_logging:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1zones~1{zone}~1clusters~1{clusterId}~1logging/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/projects_locations_clusters_get'
          - $ref: '#/components/x-stackQL-resources/clusters/methods/projects_zones_clusters_get'
          - $ref: '#/components/x-stackQL-resources/clusters/methods/projects_locations_clusters_list'
          - $ref: '#/components/x-stackQL-resources/clusters/methods/projects_zones_clusters_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/projects_locations_clusters_create'
          - $ref: '#/components/x-stackQL-resources/clusters/methods/projects_zones_clusters_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/projects_locations_clusters_delete'
          - $ref: '#/components/x-stackQL-resources/clusters/methods/projects_zones_clusters_delete'
    clusters_jwks:
      id: google.container.clusters_jwks
      name: clusters_jwks
      title: Clusters_jwks
      methods:
        projects_locations_clusters_getJwks:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}~1jwks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/clusters_jwks/methods/projects_locations_clusters_getJwks'
        insert: []
        update: []
        delete: []
    node_pools:
      id: google.container.node_pools
      name: node_pools
      title: Node_pools
      methods:
        projects_locations_clusters_nodePools_setAutoscaling:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}~1nodePools~1{nodePoolsId}:setAutoscaling/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_clusters_nodePools_update:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}~1nodePools~1{nodePoolsId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_clusters_nodePools_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}~1nodePools~1{nodePoolsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_clusters_nodePools_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}~1nodePools~1{nodePoolsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_clusters_nodePools_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}~1nodePools/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_clusters_nodePools_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}~1nodePools/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: nodePools
        projects_locations_clusters_nodePools_setSize:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}~1nodePools~1{nodePoolsId}:setSize/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_clusters_nodePools_rollback:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}~1nodePools~1{nodePoolsId}:rollback/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_clusters_nodePools_completeUpgrade:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}~1nodePools~1{nodePoolsId}:completeUpgrade/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_clusters_nodePools_setManagement:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}~1nodePools~1{nodePoolsId}:setManagement/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_zones_clusters_nodePools_autoscaling:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1zones~1{zone}~1clusters~1{clusterId}~1nodePools~1{nodePoolId}~1autoscaling/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_zones_clusters_nodePools_rollback:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1zones~1{zone}~1clusters~1{clusterId}~1nodePools~1{nodePoolId}:rollback/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_zones_clusters_nodePools_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1zones~1{zone}~1clusters~1{clusterId}~1nodePools~1{nodePoolId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_zones_clusters_nodePools_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1zones~1{zone}~1clusters~1{clusterId}~1nodePools~1{nodePoolId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_zones_clusters_nodePools_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1zones~1{zone}~1clusters~1{clusterId}~1nodePools/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: nodePools
        projects_zones_clusters_nodePools_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1zones~1{zone}~1clusters~1{clusterId}~1nodePools/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_zones_clusters_nodePools_setManagement:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1zones~1{zone}~1clusters~1{clusterId}~1nodePools~1{nodePoolId}~1setManagement/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_zones_clusters_nodePools_update:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1zones~1{zone}~1clusters~1{clusterId}~1nodePools~1{nodePoolId}~1update/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_zones_clusters_nodePools_setSize:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1zones~1{zone}~1clusters~1{clusterId}~1nodePools~1{nodePoolId}~1setSize/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/node_pools/methods/projects_locations_clusters_nodePools_get'
          - $ref: '#/components/x-stackQL-resources/node_pools/methods/projects_zones_clusters_nodePools_get'
          - $ref: '#/components/x-stackQL-resources/node_pools/methods/projects_locations_clusters_nodePools_list'
          - $ref: '#/components/x-stackQL-resources/node_pools/methods/projects_zones_clusters_nodePools_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/node_pools/methods/projects_locations_clusters_nodePools_create'
          - $ref: '#/components/x-stackQL-resources/node_pools/methods/projects_zones_clusters_nodePools_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/node_pools/methods/projects_locations_clusters_nodePools_delete'
          - $ref: '#/components/x-stackQL-resources/node_pools/methods/projects_zones_clusters_nodePools_delete'
    well_known_openid_configuration:
      id: google.container.well_known_openid_configuration
      name: well_known_openid_configuration
      title: Well_known_openid_configuration
      methods:
        projects_locations_clusters_well_known_getOpenid_configuration:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1clusters~1{clustersId}~1.well-known~1openid-configuration/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/well_known_openid_configuration/methods/projects_locations_clusters_well_known_getOpenid_configuration'
        insert: []
        update: []
        delete: []
    operations:
      id: google.container.operations
      name: operations
      title: Operations
      methods:
        projects_locations_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_zones_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1zones~1{zone}~1operations~1{operationId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_zones_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1zones~1{zone}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_zones_operations_cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1zones~1{zone}~1operations~1{operationId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_zones_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_zones_operations_list'
        insert: []
        update: []
        delete: []
    locations_server_config:
      id: google.container.locations_server_config
      name: locations_server_config
      title: Locations_server_config
      methods:
        projects_locations_getServerConfig:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serverConfig/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations_server_config/methods/projects_locations_getServerConfig'
        insert: []
        update: []
        delete: []
    zones_serverconfig:
      id: google.container.zones_serverconfig
      name: zones_serverconfig
      title: Zones_serverconfig
      methods:
        projects_zones_getServerconfig:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1zones~1{zone}~1serverconfig/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/zones_serverconfig/methods/projects_zones_getServerconfig'
        insert: []
        update: []
        delete: []
    clusters_ons:
      id: google.container.clusters_ons
      name: clusters_ons
      title: Clusters_ons
      methods:
        projects_zones_clusters_addons:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectId}~1zones~1{zone}~1clusters~1{clusterId}~1addons/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  /v1/projects/{projectsId}/aggregated/usableSubnetworks:
    parameters: &ref_1
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Lists subnetworks that are usable for creating clusters in a project.
      operationId: container.projects.aggregated.usableSubnetworks.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsableSubnetworksResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: usable_subnetworks
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:
    parameters: *ref_1
    delete:
      description: Deletes the cluster, including the Kubernetes endpoint and all worker nodes. Firewalls and routes that were configured during cluster creation are also deleted. Other Google Compute Engine resources that might be in use by the cluster, such as load balancer resources, are not deleted if they weren't present when the cluster was initially created.
      operationId: container.projects.locations.clusters.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: query
          name: clusterId
          schema:
            type: string
        - in: query
          name: projectId
          schema:
            type: string
        - in: query
          name: zone
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-verb: delete
    put:
      description: Updates the settings of a specific cluster.
      operationId: container.projects.locations.clusters.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClusterRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-verb: exec
    get:
      description: Gets the details of a specific cluster.
      operationId: container.projects.locations.clusters.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: query
          name: clusterId
          schema:
            type: string
        - in: query
          name: zone
          schema:
            type: string
        - in: query
          name: projectId
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:setAddons:
    parameters: *ref_1
    post:
      description: Sets the addons for a specific cluster.
      operationId: container.projects.locations.clusters.setAddons
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetAddonsConfigRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:setLogging:
    parameters: *ref_1
    post:
      description: Sets the logging service for a specific cluster.
      operationId: container.projects.locations.clusters.setLogging
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetLoggingServiceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/clusters:
    parameters: *ref_1
    get:
      description: Lists all clusters owned by a project in either the specified zone or all zones.
      operationId: container.projects.locations.clusters.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClustersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: zone
          schema:
            type: string
        - in: query
          name: projectId
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-verb: select
    post:
      description: Creates a cluster, consisting of the specified number and type of Google Compute Engine instances. By default, the cluster is created in the project's [default network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks). One firewall is added for the cluster. After cluster creation, the Kubelet creates routes for each node to allow the containers on that node to communicate with all other instances in the cluster. Finally, an entry is added to the project's global metadata indicating which CIDR range the cluster is using.
      operationId: container.projects.locations.clusters.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:setMasterAuth:
    parameters: *ref_1
    post:
      description: Sets master auth materials. Currently supports changing the admin password or a specific cluster, either via password generation or explicitly setting the password.
      operationId: container.projects.locations.clusters.setMasterAuth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetMasterAuthRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:setLegacyAbac:
    parameters: *ref_1
    post:
      description: Enables or disables the ABAC authorization mechanism on a cluster.
      operationId: container.projects.locations.clusters.setLegacyAbac
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetLegacyAbacRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:updateMaster:
    parameters: *ref_1
    post:
      description: Updates the master for a specific cluster.
      operationId: container.projects.locations.clusters.updateMaster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMasterRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:setResourceLabels:
    parameters: *ref_1
    post:
      description: Sets labels on a cluster.
      operationId: container.projects.locations.clusters.setResourceLabels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetLabelsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:setLocations:
    parameters: *ref_1
    post:
      description: Sets the locations for a specific cluster. Deprecated. Use [projects.locations.clusters.update](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters/update) instead.
      operationId: container.projects.locations.clusters.setLocations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetLocationsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:setNetworkPolicy:
    parameters: *ref_1
    post:
      description: Enables or disables Network Policy for a cluster.
      operationId: container.projects.locations.clusters.setNetworkPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetNetworkPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:startIpRotation:
    parameters: *ref_1
    post:
      description: Starts master IP rotation.
      operationId: container.projects.locations.clusters.startIpRotation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartIPRotationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:completeIpRotation:
    parameters: *ref_1
    post:
      description: Completes master IP rotation.
      operationId: container.projects.locations.clusters.completeIpRotation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteIPRotationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:setMonitoring:
    parameters: *ref_1
    post:
      description: Sets the monitoring service for a specific cluster.
      operationId: container.projects.locations.clusters.setMonitoring
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetMonitoringServiceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/jwks:
    parameters: *ref_1
    get:
      description: Gets the public component of the cluster signing keys in JSON Web Key format. This API is not yet intended for general use, and is not available for all clusters.
      operationId: container.projects.locations.clusters.getJwks
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJSONWebKeysResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters_jwks
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:setMaintenancePolicy:
    parameters: *ref_1
    post:
      description: Sets the maintenance policy for a cluster.
      operationId: container.projects.locations.clusters.setMaintenancePolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetMaintenancePolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/nodePools/{nodePoolsId}:setAutoscaling:
    parameters: *ref_1
    post:
      description: Sets the autoscaling settings for the specified node pool.
      operationId: container.projects.locations.clusters.nodePools.setAutoscaling
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetNodePoolAutoscalingRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: path
          name: nodePoolsId
          required: true
          schema:
            type: string
      x-stackQL-resource: node_pools
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/nodePools/{nodePoolsId}:
    parameters: *ref_1
    put:
      description: Updates the version and/or image type for the specified node pool.
      operationId: container.projects.locations.clusters.nodePools.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNodePoolRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: path
          name: nodePoolsId
          required: true
          schema:
            type: string
      x-stackQL-resource: node_pools
      x-stackQL-verb: exec
    get:
      description: Retrieves the requested node pool.
      operationId: container.projects.locations.clusters.nodePools.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodePool'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: path
          name: nodePoolsId
          required: true
          schema:
            type: string
        - in: query
          name: projectId
          schema:
            type: string
        - in: query
          name: clusterId
          schema:
            type: string
        - in: query
          name: zone
          schema:
            type: string
        - in: query
          name: nodePoolId
          schema:
            type: string
      x-stackQL-resource: node_pools
      x-stackQL-verb: select
    delete:
      description: Deletes a node pool from a cluster.
      operationId: container.projects.locations.clusters.nodePools.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: path
          name: nodePoolsId
          required: true
          schema:
            type: string
        - in: query
          name: clusterId
          schema:
            type: string
        - in: query
          name: nodePoolId
          schema:
            type: string
        - in: query
          name: projectId
          schema:
            type: string
        - in: query
          name: zone
          schema:
            type: string
      x-stackQL-resource: node_pools
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/nodePools:
    parameters: *ref_1
    post:
      description: Creates a node pool for a cluster.
      operationId: container.projects.locations.clusters.nodePools.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNodePoolRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: node_pools
      x-stackQL-verb: insert
    get:
      description: Lists the node pools for a cluster.
      operationId: container.projects.locations.clusters.nodePools.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNodePoolsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: query
          name: zone
          schema:
            type: string
        - in: query
          name: projectId
          schema:
            type: string
        - in: query
          name: clusterId
          schema:
            type: string
      x-stackQL-resource: node_pools
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/nodePools/{nodePoolsId}:setSize:
    parameters: *ref_1
    post:
      description: Sets the size for a specific node pool. The new size will be used for all replicas, including future replicas created by modifying NodePool.locations.
      operationId: container.projects.locations.clusters.nodePools.setSize
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetNodePoolSizeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: path
          name: nodePoolsId
          required: true
          schema:
            type: string
      x-stackQL-resource: node_pools
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/nodePools/{nodePoolsId}:rollback:
    parameters: *ref_1
    post:
      description: Rolls back a previously Aborted or Failed NodePool upgrade. This makes no changes if the last upgrade successfully completed.
      operationId: container.projects.locations.clusters.nodePools.rollback
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollbackNodePoolUpgradeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: path
          name: nodePoolsId
          required: true
          schema:
            type: string
      x-stackQL-resource: node_pools
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/nodePools/{nodePoolsId}:completeUpgrade:
    parameters: *ref_1
    post:
      description: CompleteNodePoolUpgrade will signal an on-going node pool upgrade to complete.
      operationId: container.projects.locations.clusters.nodePools.completeUpgrade
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteNodePoolUpgradeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: path
          name: nodePoolsId
          required: true
          schema:
            type: string
      x-stackQL-resource: node_pools
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/nodePools/{nodePoolsId}:setManagement:
    parameters: *ref_1
    post:
      description: Sets the NodeManagement options for a node pool.
      operationId: container.projects.locations.clusters.nodePools.setManagement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetNodePoolManagementRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: path
          name: nodePoolsId
          required: true
          schema:
            type: string
      x-stackQL-resource: node_pools
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/.well-known/openid-configuration:
    parameters: *ref_1
    get:
      description: Gets the OIDC discovery document for the cluster. See the [OpenID Connect Discovery 1.0 specification](https://openid.net/specs/openid-connect-discovery-1_0.html) for details. This API is not yet intended for general use, and is not available for all clusters.
      operationId: container.projects.locations.clusters.well-known.getOpenid-configuration
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOpenIDConfigResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
      x-stackQL-resource: well-known_openid-configuration
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: Gets the specified operation.
      operationId: container.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: operationId
          schema:
            type: string
        - in: query
          name: projectId
          schema:
            type: string
        - in: query
          name: zone
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: Lists all operations in a project in a specific zone or all zones.
      operationId: container.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: projectId
          schema:
            type: string
        - in: query
          name: zone
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: Cancels the specified operation.
      operationId: container.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/serverConfig:
    parameters: *ref_1
    get:
      description: Returns configuration info about the Google Kubernetes Engine service.
      operationId: container.projects.locations.getServerConfig
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: projectId
          schema:
            type: string
        - in: query
          name: zone
          schema:
            type: string
      x-stackQL-resource: locations_server_config
      x-stackQL-verb: select
  /v1/projects/{projectId}/zones/{zone}/serverconfig:
    parameters: *ref_1
    get:
      description: Returns configuration info about the Google Kubernetes Engine service.
      operationId: container.projects.zones.getServerconfig
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerConfig'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: zone
          required: true
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
      x-stackQL-resource: zones_serverconfig
      x-stackQL-verb: select
  /v1/projects/{projectId}/zones/{zone}/operations/{operationId}:
    parameters: *ref_1
    get:
      description: Gets the specified operation.
      operationId: container.projects.zones.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: zone
          required: true
          schema:
            type: string
        - in: path
          name: operationId
          required: true
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{projectId}/zones/{zone}/operations:
    parameters: *ref_1
    get:
      description: Lists all operations in a project in a specific zone or all zones.
      operationId: container.projects.zones.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: zone
          required: true
          schema:
            type: string
        - in: query
          name: parent
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{projectId}/zones/{zone}/operations/{operationId}:cancel:
    parameters: *ref_1
    post:
      description: Cancels the specified operation.
      operationId: container.projects.zones.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: zone
          required: true
          schema:
            type: string
        - in: path
          name: operationId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: exec
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}:setMaintenancePolicy:
    parameters: *ref_1
    post:
      description: Sets the maintenance policy for a cluster.
      operationId: container.projects.zones.clusters.setMaintenancePolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetMaintenancePolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: zone
          required: true
          schema:
            type: string
        - in: path
          name: clusterId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-verb: exec
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}:setNetworkPolicy:
    parameters: *ref_1
    post:
      description: Enables or disables Network Policy for a cluster.
      operationId: container.projects.zones.clusters.setNetworkPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetNetworkPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: zone
          required: true
          schema:
            type: string
        - in: path
          name: clusterId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-verb: exec
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}:setMasterAuth:
    parameters: *ref_1
    post:
      description: Sets master auth materials. Currently supports changing the admin password or a specific cluster, either via password generation or explicitly setting the password.
      operationId: container.projects.zones.clusters.setMasterAuth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetMasterAuthRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: zone
          required: true
          schema:
            type: string
        - in: path
          name: clusterId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-verb: exec
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/master:
    parameters: *ref_1
    post:
      description: Updates the master for a specific cluster.
      operationId: container.projects.zones.clusters.master
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMasterRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: zone
          required: true
          schema:
            type: string
        - in: path
          name: clusterId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-verb: exec
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/locations:
    parameters: *ref_1
    post:
      description: Sets the locations for a specific cluster. Deprecated. Use [projects.locations.clusters.update](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters/update) instead.
      operationId: container.projects.zones.clusters.locations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetLocationsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: zone
          required: true
          schema:
            type: string
        - in: path
          name: clusterId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-verb: exec
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/resourceLabels:
    parameters: *ref_1
    post:
      description: Sets labels on a cluster.
      operationId: container.projects.zones.clusters.resourceLabels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetLabelsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: zone
          required: true
          schema:
            type: string
        - in: path
          name: clusterId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-verb: exec
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}:startIpRotation:
    parameters: *ref_1
    post:
      description: Starts master IP rotation.
      operationId: container.projects.zones.clusters.startIpRotation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartIPRotationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: zone
          required: true
          schema:
            type: string
        - in: path
          name: clusterId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-verb: exec
  /v1/projects/{projectId}/zones/{zone}/clusters:
    parameters: *ref_1
    get:
      description: Lists all clusters owned by a project in either the specified zone or all zones.
      operationId: container.projects.zones.clusters.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClustersResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: zone
          required: true
          schema:
            type: string
        - in: query
          name: parent
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-verb: select
    post:
      description: Creates a cluster, consisting of the specified number and type of Google Compute Engine instances. By default, the cluster is created in the project's [default network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks). One firewall is added for the cluster. After cluster creation, the Kubelet creates routes for each node to allow the containers on that node to communicate with all other instances in the cluster. Finally, an entry is added to the project's global metadata indicating which CIDR range the cluster is using.
      operationId: container.projects.zones.clusters.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: zone
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-verb: insert
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}:
    parameters: *ref_1
    put:
      description: Updates the settings of a specific cluster.
      operationId: container.projects.zones.clusters.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClusterRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: zone
          required: true
          schema:
            type: string
        - in: path
          name: clusterId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-verb: exec
    get:
      description: Gets the details of a specific cluster.
      operationId: container.projects.zones.clusters.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: zone
          required: true
          schema:
            type: string
        - in: path
          name: clusterId
          required: true
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-verb: select
    delete:
      description: Deletes the cluster, including the Kubernetes endpoint and all worker nodes. Firewalls and routes that were configured during cluster creation are also deleted. Other Google Compute Engine resources that might be in use by the cluster, such as load balancer resources, are not deleted if they weren't present when the cluster was initially created.
      operationId: container.projects.zones.clusters.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: zone
          required: true
          schema:
            type: string
        - in: path
          name: clusterId
          required: true
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-verb: delete
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}:completeIpRotation:
    parameters: *ref_1
    post:
      description: Completes master IP rotation.
      operationId: container.projects.zones.clusters.completeIpRotation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteIPRotationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: zone
          required: true
          schema:
            type: string
        - in: path
          name: clusterId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-verb: exec
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/monitoring:
    parameters: *ref_1
    post:
      description: Sets the monitoring service for a specific cluster.
      operationId: container.projects.zones.clusters.monitoring
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetMonitoringServiceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: zone
          required: true
          schema:
            type: string
        - in: path
          name: clusterId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-verb: exec
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/legacyAbac:
    parameters: *ref_1
    post:
      description: Enables or disables the ABAC authorization mechanism on a cluster.
      operationId: container.projects.zones.clusters.legacyAbac
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetLegacyAbacRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: zone
          required: true
          schema:
            type: string
        - in: path
          name: clusterId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-verb: exec
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/addons:
    parameters: *ref_1
    post:
      description: Sets the addons for a specific cluster.
      operationId: container.projects.zones.clusters.addons
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetAddonsConfigRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: zone
          required: true
          schema:
            type: string
        - in: path
          name: clusterId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters_ons
      x-stackQL-verb: exec
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/logging:
    parameters: *ref_1
    post:
      description: Sets the logging service for a specific cluster.
      operationId: container.projects.zones.clusters.logging
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetLoggingServiceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: zone
          required: true
          schema:
            type: string
        - in: path
          name: clusterId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-verb: exec
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}/autoscaling:
    parameters: *ref_1
    post:
      description: Sets the autoscaling settings for the specified node pool.
      operationId: container.projects.zones.clusters.nodePools.autoscaling
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetNodePoolAutoscalingRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: zone
          required: true
          schema:
            type: string
        - in: path
          name: clusterId
          required: true
          schema:
            type: string
        - in: path
          name: nodePoolId
          required: true
          schema:
            type: string
      x-stackQL-resource: node_pools
      x-stackQL-verb: exec
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}:rollback:
    parameters: *ref_1
    post:
      description: Rolls back a previously Aborted or Failed NodePool upgrade. This makes no changes if the last upgrade successfully completed.
      operationId: container.projects.zones.clusters.nodePools.rollback
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollbackNodePoolUpgradeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: zone
          required: true
          schema:
            type: string
        - in: path
          name: clusterId
          required: true
          schema:
            type: string
        - in: path
          name: nodePoolId
          required: true
          schema:
            type: string
      x-stackQL-resource: node_pools
      x-stackQL-verb: exec
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}:
    parameters: *ref_1
    get:
      description: Retrieves the requested node pool.
      operationId: container.projects.zones.clusters.nodePools.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodePool'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: zone
          required: true
          schema:
            type: string
        - in: path
          name: clusterId
          required: true
          schema:
            type: string
        - in: path
          name: nodePoolId
          required: true
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
      x-stackQL-resource: node_pools
      x-stackQL-verb: select
    delete:
      description: Deletes a node pool from a cluster.
      operationId: container.projects.zones.clusters.nodePools.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: zone
          required: true
          schema:
            type: string
        - in: path
          name: clusterId
          required: true
          schema:
            type: string
        - in: path
          name: nodePoolId
          required: true
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
      x-stackQL-resource: node_pools
      x-stackQL-verb: delete
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools:
    parameters: *ref_1
    get:
      description: Lists the node pools for a cluster.
      operationId: container.projects.zones.clusters.nodePools.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNodePoolsResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: zone
          required: true
          schema:
            type: string
        - in: path
          name: clusterId
          required: true
          schema:
            type: string
        - in: query
          name: parent
          schema:
            type: string
      x-stackQL-resource: node_pools
      x-stackQL-verb: select
    post:
      description: Creates a node pool for a cluster.
      operationId: container.projects.zones.clusters.nodePools.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNodePoolRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: zone
          required: true
          schema:
            type: string
        - in: path
          name: clusterId
          required: true
          schema:
            type: string
      x-stackQL-resource: node_pools
      x-stackQL-verb: insert
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}/setManagement:
    parameters: *ref_1
    post:
      description: Sets the NodeManagement options for a node pool.
      operationId: container.projects.zones.clusters.nodePools.setManagement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetNodePoolManagementRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: zone
          required: true
          schema:
            type: string
        - in: path
          name: clusterId
          required: true
          schema:
            type: string
        - in: path
          name: nodePoolId
          required: true
          schema:
            type: string
      x-stackQL-resource: node_pools
      x-stackQL-verb: exec
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}/update:
    parameters: *ref_1
    post:
      description: Updates the version and/or image type for the specified node pool.
      operationId: container.projects.zones.clusters.nodePools.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNodePoolRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: zone
          required: true
          schema:
            type: string
        - in: path
          name: clusterId
          required: true
          schema:
            type: string
        - in: path
          name: nodePoolId
          required: true
          schema:
            type: string
      x-stackQL-resource: node_pools
      x-stackQL-verb: exec
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}/setSize:
    parameters: *ref_1
    post:
      description: Sets the size for a specific node pool. The new size will be used for all replicas, including future replicas created by modifying NodePool.locations.
      operationId: container.projects.zones.clusters.nodePools.setSize
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetNodePoolSizeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: zone
          required: true
          schema:
            type: string
        - in: path
          name: clusterId
          required: true
          schema:
            type: string
        - in: path
          name: nodePoolId
          required: true
          schema:
            type: string
      x-stackQL-resource: node_pools
      x-stackQL-verb: exec
