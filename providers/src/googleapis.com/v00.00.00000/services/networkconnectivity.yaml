openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Network Connectivity API
  description: This API enables connectivity with and between Google Cloud resources.
  version: v1
  x-discovery-doc-revision: '20230804'
  x-generated-date: '2023-08-17'
externalDocs:
  url: 'https://cloud.google.com/network-connectivity/docs/reference/networkconnectivity/rest'
servers:
  - url: 'https://networkconnectivity.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    ListHubsResponse:
      description: Response for HubService.ListHubs method.
      type: object
      properties:
        nextPageToken:
          description: 'The token for the next page of the response. To see more results, use this value as the page_token for your next request. If this value is empty, there are no more results.'
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
        hubs:
          type: array
          description: The requested hubs.
          items:
            $ref: '#/components/schemas/Hub'
      id: ListHubsResponse
    OperationMetadata:
      id: OperationMetadata
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          type: string
          readOnly: true
          format: google-datetime
        requestedCancellation:
          readOnly: true
          type: boolean
          description: 'Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          format: google-datetime
          type: string
        target:
          description: Output only. Server-defined resource path for the target of the operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusMessage:
          description: 'Output only. Human-readable status of the operation, if any.'
          readOnly: true
          type: string
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
      description: Represents the metadata of the long-running operation.
    RouterApplianceInstance:
      type: object
      id: RouterApplianceInstance
      description: A router appliance instance is a Compute Engine virtual machine (VM) instance that acts as a BGP speaker. A router appliance instance is specified by the URI of the VM and the internal IP address of one of the VM's network interfaces.
      properties:
        ipAddress:
          description: The IP address on the VM to use for peering.
          type: string
        virtualMachine:
          type: string
          description: The URI of the VM.
    SpokeStateCount:
      properties:
        count:
          format: int64
          readOnly: true
          type: string
          description: Output only. The total number of spokes that are in this state and associated with a given hub.
        state:
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - DELETING
            - ACCEPTING
            - REJECTING
            - UPDATING
            - INACTIVE
            - OBSOLETE
          readOnly: true
          enumDescriptions:
            - No state information available
            - The resource's create operation is in progress.
            - The resource is active
            - The resource's delete operation is in progress.
            - The resource's accept operation is in progress.
            - The resource's reject operation is in progress.
            - The resource's update operation is in progress.
            - The resource is inactive.
            - The hub associated with this spoke resource has been deleted. This state applies to spoke resources only.
          type: string
          description: Output only. The state of the spokes.
      description: The number of spokes that are in a particular state and associated with a given hub.
      id: SpokeStateCount
      type: object
    PscConfig:
      properties:
        subnetworks:
          type: array
          description: 'The resource paths of subnetworks to use for IP address management. Example: projects/{projectNumOrId}/regions/{region}/subnetworks/{resourceId}.'
          items:
            type: string
        limit:
          format: int64
          description: Optional. Max number of PSC connections for this policy.
          type: string
      type: object
      description: Configuration used for Private Service Connect connections. Used when Infrastructure is PSC.
      id: PscConfig
    Empty:
      id: Empty
      properties: {}
      type: object
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
    ListServiceConnectionPoliciesResponse:
      properties:
        unreachable:
          type: array
          items:
            type: string
          description: Locations that could not be reached.
        nextPageToken:
          type: string
          description: The next pagination token in the List response. It should be used as page_token for the following request. An empty value means no more result.
        serviceConnectionPolicies:
          items:
            $ref: '#/components/schemas/ServiceConnectionPolicy'
          type: array
          description: ServiceConnectionPolicies to be returned.
      id: ListServiceConnectionPoliciesResponse
      description: Response for ListServiceConnectionPolicies.
      type: object
    AuditConfig:
      type: object
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.'
      properties:
        service:
          type: string
          description: 'Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.'
        auditLogConfigs:
          items:
            $ref: '#/components/schemas/AuditLogConfig'
          description: The configuration for logging of each type of permission.
          type: array
      id: AuditConfig
    RejectSpokeRequest:
      description: The request for HubService.RejectSpoke.
      id: RejectSpokeRequest
      properties:
        details:
          description: Optional. Additional information provided by the hub administrator in the `RejectSpoke` call.
          type: string
        requestId:
          description: 'Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server guarantees that a request doesn''t result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).'
          type: string
      type: object
    RoutingVPC:
      description: RoutingVPC contains information about the VPC networks associated with the spokes of a Network Connectivity Center hub.
      properties:
        requiredForNewSiteToSiteDataTransferSpokes:
          description: 'Output only. If true, indicates that this VPC network is currently associated with spokes that use the data transfer feature (spokes where the site_to_site_data_transfer field is set to true). If you create new spokes that use data transfer, they must be associated with this VPC network. At most, one VPC network will have this field set to true.'
          readOnly: true
          type: boolean
        uri:
          description: The URI of the VPC network.
          type: string
      id: RoutingVPC
      type: object
    GoogleRpcErrorInfo:
      properties:
        domain:
          description: 'The logical grouping to which the "reason" belongs. The error domain is typically the registered service name of the tool or product that generates the error. Example: "pubsub.googleapis.com". If the error is generated by some common infrastructure, the error domain must be a globally unique value that identifies the infrastructure. For Google API infrastructure, the error domain is "googleapis.com".'
          type: string
        metadata:
          description: 'Additional structured details about this error. Keys should match /[a-zA-Z0-9-_]/ and be limited to 64 characters in length. When identifying the current value of an exceeded limit, the units should be contained in the key, not the value. For example, rather than {"instanceLimit": "100/request"}, should be returned as, {"instanceLimitPerRequest": "100"}, if the client exceeds the number of instances that can be created in a single (batch) request.'
          additionalProperties:
            type: string
          type: object
        reason:
          type: string
          description: 'The reason of the error. This is a constant value that identifies the proximate cause of the error. Error reasons are unique within a particular domain of errors. This should be at most 63 characters and match a regular expression of `A-Z+[A-Z0-9]`, which represents UPPER_SNAKE_CASE.'
      id: GoogleRpcErrorInfo
      description: 'Describes the cause of the error with structured details. Example of an error when contacting the "pubsub.googleapis.com" API when it is not enabled: { "reason": "API_DISABLED" "domain": "googleapis.com" "metadata": { "resource": "projects/123", "service": "pubsub.googleapis.com" } } This response indicates that the pubsub.googleapis.com API is not enabled. Example of an error that is returned when attempting to create a Spanner instance in a region that is out of stock: { "reason": "STOCKOUT" "domain": "spanner.googleapis.com", "metadata": { "availableRegions": "us-central1,us-east2" } }'
      type: object
    StateReason:
      description: The reason a spoke is inactive.
      type: object
      properties:
        message:
          description: Human-readable details about this reason.
          type: string
        code:
          description: The code associated with this reason.
          type: string
          enum:
            - CODE_UNSPECIFIED
            - PENDING_REVIEW
            - REJECTED
            - PAUSED
            - FAILED
          enumDescriptions:
            - No information available.
            - The proposed spoke is pending review.
            - The proposed spoke has been rejected by the hub administrator.
            - The spoke has been deactivated internally.
            - Network Connectivity Center encountered errors while accepting the spoke.
        userDetails:
          type: string
          description: Additional information provided by the user in the RejectSpoke call.
      id: StateReason
    InternalRange:
      description: The internal range resource for IPAM operations within a VPC network. Used to represent a private address range along with behavioral characterstics of that range (its usage and peering behavior). Networking resources can link to this range if they are created as belonging to it.
      type: object
      properties:
        users:
          description: 'Output only. The list of resources that refer to this internal range. Resources that use the internal range for their range allocation are referred to as users of the range. Other resources mark themselves as users while doing so by creating a reference to this internal range. Having a user, based on this reference, prevents deletion of the internal range referred to. Can be empty.'
          items:
            type: string
          readOnly: true
          type: array
        name:
          type: string
          description: 'Immutable. The name of an internal range. Format: projects/{project}/locations/{location}/internalRanges/{internal_range} See: https://google.aip.dev/122#fields-representing-resource-names'
        description:
          type: string
          description: A description of this resource.
        updateTime:
          format: google-datetime
          type: string
          description: Time when the internal range was updated.
        peering:
          description: The type of peering set for this internal range.
          type: string
          enum:
            - PEERING_UNSPECIFIED
            - FOR_SELF
            - FOR_PEER
            - NOT_SHARED
          enumDescriptions:
            - 'If Peering is left unspecified in CreateInternalRange or UpdateInternalRange, it will be defaulted to FOR_SELF.'
            - This is the default behavior and represents the case that this internal range is intended to be used in the VPC in which it is created and is accessible from its peers. This implies that peers or peers-of-peers cannot use this range.
            - 'This behavior can be set when the internal range is being reserved for usage by peers. This means that no resource within the VPC in which it is being created can use this to associate with a VPC resource, but one of the peers can. This represents donating a range for peers to use.'
            - 'This behavior can be set when the internal range is being reserved for usage by the VPC in which it is created, but not shared with peers. In a sense, it is local to the VPC. This can be used to create internal ranges for various purposes like HTTP_INTERNAL_LOAD_BALANCER or for Interconnect routes that are not shared with peers. This also implies that peers cannot use this range in a way that is visible to this VPC, but can re-use this range as long as it is NOT_SHARED from the peer VPC, too.'
        labels:
          additionalProperties:
            type: string
          type: object
          description: User-defined labels.
        usage:
          enum:
            - USAGE_UNSPECIFIED
            - FOR_VPC
            - EXTERNAL_TO_VPC
          type: string
          description: The type of usage set for this InternalRange.
          enumDescriptions:
            - 'Unspecified usage is allowed in calls which identify the resource by other fields and do not need Usage set to complete. These are, i.e.: GetInternalRange and DeleteInternalRange. Usage needs to be specified explicitly in CreateInternalRange or UpdateInternalRange calls.'
            - A VPC resource can use the reserved CIDR block by associating it with the internal range resource if usage is set to FOR_VPC.
            - 'Ranges created with EXTERNAL_TO_VPC cannot be associated with VPC resources and are meant to block out address ranges for various use cases, like for example, usage on-prem, with dynamic route announcements via interconnect.'
        overlaps:
          items:
            type: string
            enum:
              - OVERLAP_UNSPECIFIED
              - OVERLAP_ROUTE_RANGE
              - OVERLAP_EXISTING_SUBNET_RANGE
            enumDescriptions:
              - No overlap overrides.
              - Allow creation of static routes more specific that the current internal range.
              - Allow creation of internal ranges that overlap with existing subnets.
          description: Optional. Types of resources that are allowed to overlap with the current internal range.
          type: array
        targetCidrRange:
          type: array
          description: 'Optional. Can be set to narrow down or pick a different address space while searching for a free range. If not set, defaults to the "10.0.0.0/8" address space. This can be used to search in other rfc-1918 address spaces like "172.16.0.0/12" and "192.168.0.0/16" or non-rfc-1918 address spaces used in the VPC.'
          items:
            type: string
        prefixLength:
          type: integer
          description: 'An alternate to ip_cidr_range. Can be set when trying to create a reservation that automatically finds a free range of the given size. If both ip_cidr_range and prefix_length are set, there is an error if the range sizes do not match. Can also be used during updates to change the range size.'
          format: int32
        createTime:
          format: google-datetime
          type: string
          description: Time when the internal range was created.
        ipCidrRange:
          type: string
          description: The IP range that this internal range defines.
        network:
          description: 'The URL or resource ID of the network in which to reserve the internal range. The network cannot be deleted if there are any reserved internal ranges referring to it. Legacy networks are not supported. This can only be specified for a global internal address. Example: - URL: /compute/v1/projects/{project}/global/networks/{resourceId} - ID: network123'
          type: string
      id: InternalRange
    LinkedInterconnectAttachments:
      type: object
      id: LinkedInterconnectAttachments
      description: 'A collection of VLAN attachment resources. These resources should be redundant attachments that all advertise the same prefixes to Google Cloud. Alternatively, in active/passive configurations, all attachments should be capable of advertising the same prefixes.'
      properties:
        vpcNetwork:
          readOnly: true
          type: string
          description: Output only. The VPC network where these VLAN attachments are located.
        siteToSiteDataTransfer:
          type: boolean
          description: 'A value that controls whether site-to-site data transfer is enabled for these resources. Data transfer is available only in [supported locations](https://cloud.google.com/network-connectivity/docs/network-connectivity-center/concepts/locations).'
        uris:
          items:
            type: string
          description: The URIs of linked interconnect attachment resources
          type: array
    ListLocationsResponse:
      type: object
      description: The response message for Locations.ListLocations.
      id: ListLocationsResponse
      properties:
        locations:
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Location'
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
    LinkedRouterApplianceInstances:
      id: LinkedRouterApplianceInstances
      type: object
      description: 'A collection of router appliance instances. If you configure multiple router appliance instances to receive data from the same set of sites outside of Google Cloud, we recommend that you associate those instances with the same spoke.'
      properties:
        vpcNetwork:
          description: Output only. The VPC network where these router appliance instances are located.
          type: string
          readOnly: true
        siteToSiteDataTransfer:
          description: 'A value that controls whether site-to-site data transfer is enabled for these resources. Data transfer is available only in [supported locations](https://cloud.google.com/network-connectivity/docs/network-connectivity-center/concepts/locations).'
          type: boolean
        instances:
          description: The list of router appliance instances.
          items:
            $ref: '#/components/schemas/RouterApplianceInstance'
          type: array
    ServiceConnectionToken:
      description: 'The ServiceConnectionToken resource. Next id: 10'
      properties:
        labels:
          type: object
          additionalProperties:
            type: string
          description: User-defined labels.
        description:
          description: A description of this resource.
          type: string
        updateTime:
          format: google-datetime
          type: string
          description: Output only. Time when the ServiceConnectionToken was updated.
          readOnly: true
        name:
          description: 'Immutable. The name of a ServiceConnectionToken. Format: projects/{project}/locations/{location}/ServiceConnectionTokens/{service_connection_token} See: https://google.aip.dev/122#fields-representing-resource-names'
          type: string
        expireTime:
          description: Output only. The time to which this token is valid.
          type: string
          format: google-datetime
          readOnly: true
        token:
          readOnly: true
          type: string
          description: Output only. The token generated by Automation.
        network:
          type: string
          description: 'The resource path of the network associated with this token. Example: projects/{projectNumOrId}/global/networks/{resourceId}.'
        createTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. Time when the ServiceConnectionToken was created.
        etag:
          description: 'Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.'
          type: string
      type: object
      id: ServiceConnectionToken
    GoogleLongrunningCancelOperationRequest:
      type: object
      id: GoogleLongrunningCancelOperationRequest
      description: The request message for Operations.CancelOperation.
      properties: {}
    ServiceConnectionMap:
      type: object
      properties:
        labels:
          description: User-defined labels.
          type: object
          additionalProperties:
            type: string
        description:
          description: A description of this resource.
          type: string
        token:
          description: The token provided by the consumer. This token authenticates that the consumer can create a connecton within the specified project and network.
          type: string
        updateTime:
          readOnly: true
          type: string
          description: Output only. Time when the ServiceConnectionMap was updated.
          format: google-datetime
        consumerPscConfigs:
          type: array
          description: The PSC configurations on consumer side.
          items:
            $ref: '#/components/schemas/ConsumerPscConfig'
        etag:
          type: string
          description: 'Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.'
        serviceClass:
          type: string
          description: The service class identifier this ServiceConnectionMap is for. The user of ServiceConnectionMap create API needs to have networkconnecitivty.serviceclasses.use iam permission for the service class.
        consumerPscConnections:
          items:
            $ref: '#/components/schemas/ConsumerPscConnection'
          readOnly: true
          type: array
          description: Output only. PSC connection details on consumer side.
        name:
          description: 'Immutable. The name of a ServiceConnectionMap. Format: projects/{project}/locations/{location}/serviceConnectionMaps/{service_connection_map} See: https://google.aip.dev/122#fields-representing-resource-names'
          type: string
        producerPscConfigs:
          type: array
          items:
            $ref: '#/components/schemas/ProducerPscConfig'
          description: The PSC configurations on producer side.
        infrastructure:
          enumDescriptions:
            - An invalid infrastructure as the default case.
            - Private Service Connect is used for connections.
          type: string
          description: Output only. The infrastructure used for connections between consumers/producers.
          readOnly: true
          enum:
            - INFRASTRUCTURE_UNSPECIFIED
            - PSC
        createTime:
          description: Output only. Time when the ServiceConnectionMap was created.
          format: google-datetime
          readOnly: true
          type: string
        serviceClassUri:
          description: Output only. The service class uri this ServiceConnectionMap is for.
          type: string
          readOnly: true
      id: ServiceConnectionMap
      description: 'The ServiceConnectionMap resource. Next id: 15'
    Policy:
      id: Policy
      type: object
      description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp(''2020-10-01T00:00:00.000Z'')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).'
      properties:
        etag:
          format: byte
          type: string
          description: '`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.'
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          type: array
          items:
            $ref: '#/components/schemas/AuditConfig'
        version:
          format: int32
          type: integer
          description: 'Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
        bindings:
          items:
            $ref: '#/components/schemas/Binding'
          description: 'Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.'
          type: array
    Expr:
      type: object
      description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != ''private'' && document.type != ''internal''" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "''New message received at '' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.'
      id: Expr
      properties:
        title:
          type: string
          description: 'Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.'
        description:
          type: string
          description: 'Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.'
        location:
          description: 'Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.'
          type: string
        expression:
          description: Textual representation of an expression in Common Expression Language syntax.
          type: string
    ListGroupsResponse:
      id: ListGroupsResponse
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/Group'
          description: The requested groups.
        nextPageToken:
          type: string
          description: 'The token for the next page of the response. To see more results, use this value as the page_token for your next request. If this value is empty, there are no more results.'
        unreachable:
          items:
            type: string
          description: Hubs that could not be reached.
          type: array
      description: Response for HubService.ListGroups method.
    SpokeStateReasonCount:
      type: object
      properties:
        stateReasonCode:
          readOnly: true
          description: Output only. The reason that a spoke is inactive.
          type: string
          enum:
            - CODE_UNSPECIFIED
            - PENDING_REVIEW
            - REJECTED
            - PAUSED
            - FAILED
          enumDescriptions:
            - No information available.
            - The proposed spoke is pending review.
            - The proposed spoke has been rejected by the hub administrator.
            - The spoke has been deactivated internally.
            - Network Connectivity Center encountered errors while accepting the spoke.
        count:
          type: string
          readOnly: true
          description: Output only. The total number of spokes that are inactive for a particular reason and associated with a given hub.
          format: int64
      id: SpokeStateReasonCount
      description: The number of spokes in the hub that are inactive for this reason.
    GoogleLongrunningListOperationsResponse:
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        operations:
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
          type: array
          description: A list of operations that matches the specified filter in the request.
        nextPageToken:
          description: The standard List next-page token.
          type: string
      id: GoogleLongrunningListOperationsResponse
    SpokeTypeCount:
      description: The number of spokes of a given type that are associated with a specific hub. The type indicates what kind of resource is associated with the spoke.
      properties:
        spokeType:
          readOnly: true
          enum:
            - SPOKE_TYPE_UNSPECIFIED
            - VPN_TUNNEL
            - INTERCONNECT_ATTACHMENT
            - ROUTER_APPLIANCE
            - VPC_NETWORK
          type: string
          enumDescriptions:
            - Unspecified spoke type.
            - Spokes associated with VPN tunnels.
            - Spokes associated with VLAN attachments.
            - Spokes associated with router appliance instances.
            - Spokes associated with VPC networks.
          description: Output only. The type of the spokes.
        count:
          format: int64
          readOnly: true
          type: string
          description: Output only. The total number of spokes of this type that are associated with the hub.
      type: object
      id: SpokeTypeCount
    AuditLogConfig:
      description: 'Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables ''DATA_READ'' and ''DATA_WRITE'' logging, while exempting jose@example.com from DATA_READ logging.'
      properties:
        exemptedMembers:
          items:
            type: string
          type: array
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
        logType:
          description: The log type that this config enables.
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          type: string
      id: AuditLogConfig
      type: object
    ListHubSpokesResponse:
      properties:
        spokes:
          type: array
          items:
            $ref: '#/components/schemas/Spoke'
          description: The requested spokes. The spoke fields can be partially populated based on the `view` field in the request message.
        nextPageToken:
          type: string
          description: 'The token for the next page of the response. To see more results, use this value as the page_token for your next request. If this value is empty, there are no more results.'
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      description: The response for HubService.ListHubSpokes.
      type: object
      id: ListHubSpokesResponse
    ServiceClass:
      description: 'The ServiceClass resource. Next id: 9'
      properties:
        serviceClass:
          description: Output only. The generated service class name. Use this name to refer to the Service class in Service Connection Maps and Service Connection Policies.
          type: string
          readOnly: true
        updateTime:
          description: Output only. Time when the ServiceClass was updated.
          readOnly: true
          format: google-datetime
          type: string
        name:
          type: string
          description: 'Immutable. The name of a ServiceClass resource. Format: projects/{project}/locations/{location}/serviceClasses/{service_class} See: https://google.aip.dev/122#fields-representing-resource-names'
        etag:
          description: 'Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.'
          type: string
        description:
          description: A description of this resource.
          type: string
        createTime:
          readOnly: true
          type: string
          description: Output only. Time when the ServiceClass was created.
          format: google-datetime
        labels:
          description: User-defined labels.
          additionalProperties:
            type: string
          type: object
      id: ServiceClass
      type: object
    ListRoutesResponse:
      description: Response for HubService.ListRoutes method.
      properties:
        nextPageToken:
          description: 'The token for the next page of the response. To see more results, use this value as the page_token for your next request. If this value is empty, there are no more results.'
          type: string
        routes:
          type: array
          description: The requested routes.
          items:
            $ref: '#/components/schemas/Route'
        unreachable:
          items:
            type: string
          type: array
          description: RouteTables that could not be reached.
      type: object
      id: ListRoutesResponse
    TestIamPermissionsRequest:
      properties:
        permissions:
          description: 'The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).'
          items:
            type: string
          type: array
      description: Request message for `TestIamPermissions` method.
      type: object
      id: TestIamPermissionsRequest
    ListServiceConnectionMapsResponse:
      type: object
      id: ListServiceConnectionMapsResponse
      description: Response for ListServiceConnectionMaps.
      properties:
        unreachable:
          type: array
          items:
            type: string
          description: Locations that could not be reached.
        serviceConnectionMaps:
          description: ServiceConnectionMaps to be returned.
          type: array
          items:
            $ref: '#/components/schemas/ServiceConnectionMap'
        nextPageToken:
          type: string
          description: The next pagination token in the List response. It should be used as page_token for the following request. An empty value means no more result.
    ListServiceConnectionTokensResponse:
      id: ListServiceConnectionTokensResponse
      properties:
        serviceConnectionTokens:
          type: array
          items:
            $ref: '#/components/schemas/ServiceConnectionToken'
          description: ServiceConnectionTokens to be returned.
        unreachable:
          items:
            type: string
          type: array
          description: Locations that could not be reached.
        nextPageToken:
          type: string
          description: The next pagination token in the List response. It should be used as page_token for the following request. An empty value means no more result.
      description: Response for ListServiceConnectionTokens.
      type: object
    Group:
      properties:
        description:
          description: Optional. The description of the group.
          type: string
        state:
          description: Output only. The current lifecycle state of this group.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - DELETING
            - ACCEPTING
            - REJECTING
            - UPDATING
            - INACTIVE
            - OBSOLETE
          readOnly: true
          enumDescriptions:
            - No state information available
            - The resource's create operation is in progress.
            - The resource is active
            - The resource's delete operation is in progress.
            - The resource's accept operation is in progress.
            - The resource's reject operation is in progress.
            - The resource's update operation is in progress.
            - The resource is inactive.
            - The hub associated with this spoke resource has been deleted. This state applies to spoke resources only.
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'Optional. Labels in key:value format. For more information about labels, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).'
        uid:
          type: string
          readOnly: true
          description: 'Output only. The Google-generated UUID for the group. This value is unique across all group resources. If a group is deleted and another with the same name is created, the new route table is assigned a different unique_id.'
        updateTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time the group was last updated.
        createTime:
          readOnly: true
          type: string
          description: Output only. The time the group was created.
          format: google-datetime
        name:
          description: 'Immutable. The name of the group. Group names must be unique. They use the following form: `projects/{project_number}/locations/global/hubs/{hub}/groups/{group_id}`'
          type: string
      description: 'A group is a set of spokes to which you can apply policies. Each group of spokes has its own route table. For each group, you can also set different rules for whether spokes can be automatically attached to the hub.'
      id: Group
      type: object
    GoogleLongrunningOperation:
      description: This resource represents a long-running operation that is the result of a network API call.
      id: GoogleLongrunningOperation
      properties:
        done:
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
          type: boolean
        name:
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
          type: string
        error:
          description: The error result of the operation in case of failure or cancellation.
          $ref: '#/components/schemas/GoogleRpcStatus'
        metadata:
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        response:
          type: object
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
      type: object
    Route:
      id: Route
      properties:
        nextHopVpcNetwork:
          description: Immutable. The destination VPC network for packets on this route.
          $ref: '#/components/schemas/NextHopVpcNetwork'
        labels:
          type: object
          description: 'Optional labels in key:value format. For more information about labels, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).'
          additionalProperties:
            type: string
        updateTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The time the route was last updated.
        description:
          description: An optional description of the route.
          type: string
        uid:
          type: string
          readOnly: true
          description: 'Output only. The Google-generated UUID for the route. This value is unique across all Network Connectivity Center route resources. If a route is deleted and another with the same name is created, the new route is assigned a different `uid`.'
        location:
          type: string
          description: 'Output only. The location of the route. Uses the following form: "projects/{project}/locations/{location}" Example: projects/1234/locations/us-central1'
          readOnly: true
        state:
          description: Output only. The current lifecycle state of the route.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - DELETING
            - ACCEPTING
            - REJECTING
            - UPDATING
            - INACTIVE
            - OBSOLETE
          enumDescriptions:
            - No state information available
            - The resource's create operation is in progress.
            - The resource is active
            - The resource's delete operation is in progress.
            - The resource's accept operation is in progress.
            - The resource's reject operation is in progress.
            - The resource's update operation is in progress.
            - The resource is inactive.
            - The hub associated with this spoke resource has been deleted. This state applies to spoke resources only.
          readOnly: true
        name:
          description: 'Immutable. The name of the route. Route names must be unique. Route names use the following form: `projects/{project_number}/locations/global/hubs/{hub}/routeTables/{route_table_id}/routes/{route_id}`'
          type: string
        type:
          enum:
            - ROUTE_TYPE_UNSPECIFIED
            - VPC_PRIMARY_SUBNET
            - VPC_SECONDARY_SUBNET
          type: string
          readOnly: true
          enumDescriptions:
            - No route type information specified
            - The route leads to a destination within the primary address range of the VPC network's subnet.
            - The route leads to a destination within the secondary address range of the VPC network's subnet.
          description: Output only. The route's type. Its type is determined by the properties of its IP address range.
        createTime:
          readOnly: true
          type: string
          description: Output only. The time the route was created.
          format: google-datetime
        ipCidrRange:
          description: The destination IP address range.
          type: string
        spoke:
          description: 'Immutable. The spoke that this route leads to. Example: projects/12345/locations/global/spokes/SPOKE'
          type: string
      description: A route defines a path from VM instances within a spoke to a specific destination resource. Only VPC spokes have routes.
      type: object
    Binding:
      properties:
        role:
          type: string
          description: 'Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.'
        condition:
          description: 'The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
          $ref: '#/components/schemas/Expr'
        members:
          type: array
          items:
            type: string
          description: 'Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.'
      description: 'Associates `members`, or principals, with a `role`.'
      type: object
      id: Binding
    SetIamPolicyRequest:
      id: SetIamPolicyRequest
      type: object
      description: Request message for `SetIamPolicy` method.
      properties:
        updateMask:
          type: string
          format: google-fieldmask
          description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`'
        policy:
          $ref: '#/components/schemas/Policy'
          description: 'REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.'
    PscConnection:
      id: PscConnection
      description: Information about a specific Private Service Connect connection.
      type: object
      properties:
        consumerForwardingRule:
          description: The resource reference of the PSC Forwarding Rule within the consumer VPC.
          type: string
        error:
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: The most recent error during operating this connection.
        consumerAddress:
          type: string
          description: The resource reference of the consumer address.
        errorInfo:
          description: Output only. The error info for the latest error during operating this connection.
          readOnly: true
          $ref: '#/components/schemas/GoogleRpcErrorInfo'
        consumerTargetProject:
          type: string
          description: The project where the PSC connection is created.
        gceOperation:
          type: string
          description: The last Compute Engine operation to setup PSC connection.
        errorType:
          description: 'The error type indicates whether the error is consumer facing, producer facing or system internal.'
          type: string
          enum:
            - CONNECTION_ERROR_TYPE_UNSPECIFIED
            - ERROR_INTERNAL
            - ERROR_CONSUMER_SIDE
            - ERROR_PRODUCER_SIDE
          enumDescriptions:
            - An invalid error type as the default case.
            - The error is due to Service Automation system internal.
            - The error is due to the setup on consumer side.
            - The error is due to the setup on producer side.
        state:
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - FAILED
            - CREATING
            - DELETING
          enumDescriptions:
            - An invalid state as the default case.
            - The connection is fully established and ready to use.
            - The connection is not functional since some resources on the connection fail to be created.
            - The connection is being created.
            - The connection is being deleted.
          description: State of the PSC Connection
          type: string
        pscConnectionId:
          type: string
          description: The PSC connection id of the PSC forwarding rule.
    TestIamPermissionsResponse:
      type: object
      properties:
        permissions:
          type: array
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
          items:
            type: string
      description: Response message for `TestIamPermissions` method.
      id: TestIamPermissionsResponse
    LinkedVpcNetwork:
      properties:
        excludeExportRanges:
          items:
            type: string
          type: array
          description: Optional. IP ranges encompassing the subnets to be excluded from peering.
        uri:
          description: Required. The URI of the VPC network resource.
          type: string
      type: object
      description: An existing VPC network.
      id: LinkedVpcNetwork
    Spoke:
      description: 'A Network Connectivity Center spoke represents one or more network connectivity resources. When you create a spoke, you associate it with a hub. You must also identify a value for exactly one of the following fields: * linked_vpn_tunnels * linked_interconnect_attachments * linked_router_appliance_instances * linked_vpc_network'
      properties:
        linkedInterconnectAttachments:
          $ref: '#/components/schemas/LinkedInterconnectAttachments'
          description: VLAN attachments that are associated with the spoke.
        updateTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time the spoke was last updated.
          type: string
        spokeType:
          enum:
            - SPOKE_TYPE_UNSPECIFIED
            - VPN_TUNNEL
            - INTERCONNECT_ATTACHMENT
            - ROUTER_APPLIANCE
            - VPC_NETWORK
          type: string
          readOnly: true
          description: Output only. The type of resource associated with the spoke.
          enumDescriptions:
            - Unspecified spoke type.
            - Spokes associated with VPN tunnels.
            - Spokes associated with VLAN attachments.
            - Spokes associated with router appliance instances.
            - Spokes associated with VPC networks.
        name:
          description: 'Immutable. The name of the spoke. Spoke names must be unique. They use the following form: `projects/{project_number}/locations/{region}/spokes/{spoke_id}`'
          type: string
        group:
          description: The name of the group that this spoke is associated with.
          type: string
        state:
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - DELETING
            - ACCEPTING
            - REJECTING
            - UPDATING
            - INACTIVE
            - OBSOLETE
          type: string
          readOnly: true
          enumDescriptions:
            - No state information available
            - The resource's create operation is in progress.
            - The resource is active
            - The resource's delete operation is in progress.
            - The resource's accept operation is in progress.
            - The resource's reject operation is in progress.
            - The resource's update operation is in progress.
            - The resource is inactive.
            - The hub associated with this spoke resource has been deleted. This state applies to spoke resources only.
          description: Output only. The current lifecycle state of this spoke.
        linkedVpcNetwork:
          $ref: '#/components/schemas/LinkedVpcNetwork'
          description: Optional. VPC network that is associated with the spoke.
        uniqueId:
          description: 'Output only. The Google-generated UUID for the spoke. This value is unique across all spoke resources. If a spoke is deleted and another with the same name is created, the new spoke is assigned a different `unique_id`.'
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'Optional labels in key:value format. For more information about labels, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).'
        hub:
          description: Immutable. The name of the hub that this spoke is attached to.
          type: string
        description:
          type: string
          description: An optional description of the spoke.
        linkedRouterApplianceInstances:
          $ref: '#/components/schemas/LinkedRouterApplianceInstances'
          description: Router appliance instances that are associated with the spoke.
        linkedVpnTunnels:
          description: VPN tunnels that are associated with the spoke.
          $ref: '#/components/schemas/LinkedVpnTunnels'
        reasons:
          readOnly: true
          description: Output only. The reasons for current state of the spoke. Only present when the spoke is in the `INACTIVE` state.
          items:
            $ref: '#/components/schemas/StateReason'
          type: array
        createTime:
          type: string
          description: Output only. The time the spoke was created.
          format: google-datetime
          readOnly: true
      id: Spoke
      type: object
    GoogleRpcStatus:
      id: GoogleRpcStatus
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      properties:
        message:
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
          type: string
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
          type: array
        code:
          type: integer
          format: int32
          description: 'The status code, which should be an enum value of google.rpc.Code.'
      type: object
    LinkedVpnTunnels:
      id: LinkedVpnTunnels
      properties:
        vpcNetwork:
          type: string
          readOnly: true
          description: Output only. The VPC network where these VPN tunnels are located.
        uris:
          type: array
          items:
            type: string
          description: The URIs of linked VPN tunnel resources.
        siteToSiteDataTransfer:
          description: 'A value that controls whether site-to-site data transfer is enabled for these resources. Data transfer is available only in [supported locations](https://cloud.google.com/network-connectivity/docs/network-connectivity-center/concepts/locations).'
          type: boolean
      description: 'A collection of Cloud VPN tunnel resources. These resources should be redundant HA VPN tunnels that all advertise the same prefixes to Google Cloud. Alternatively, in a passive/active configuration, all tunnels should be capable of advertising the same prefixes.'
      type: object
    ListInternalRangesResponse:
      type: object
      description: Response for InternalRange.ListInternalRanges
      id: ListInternalRangesResponse
      properties:
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
        internalRanges:
          items:
            $ref: '#/components/schemas/InternalRange'
          description: Internal ranges to be returned.
          type: array
        nextPageToken:
          type: string
          description: The next pagination token in the List response. It should be used as page_token for the following request. An empty value means no more result.
    RouteTable:
      properties:
        name:
          description: 'Immutable. The name of the route table. Route table names must be unique. They use the following form: `projects/{project_number}/locations/global/hubs/{hub}/routeTables/{route_table_id}`'
          type: string
        uid:
          readOnly: true
          description: 'Output only. The Google-generated UUID for the route table. This value is unique across all route table resources. If a route table is deleted and another with the same name is created, the new route table is assigned a different `uid`.'
          type: string
        updateTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The time the route table was last updated.
        state:
          type: string
          enumDescriptions:
            - No state information available
            - The resource's create operation is in progress.
            - The resource is active
            - The resource's delete operation is in progress.
            - The resource's accept operation is in progress.
            - The resource's reject operation is in progress.
            - The resource's update operation is in progress.
            - The resource is inactive.
            - The hub associated with this spoke resource has been deleted. This state applies to spoke resources only.
          description: Output only. The current lifecycle state of this route table.
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - DELETING
            - ACCEPTING
            - REJECTING
            - UPDATING
            - INACTIVE
            - OBSOLETE
        createTime:
          description: Output only. The time the route table was created.
          format: google-datetime
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'Optional labels in key:value format. For more information about labels, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).'
        description:
          type: string
          description: An optional description of the route table.
      id: RouteTable
      type: object
    ListSpokesResponse:
      type: object
      description: The response for HubService.ListSpokes.
      properties:
        unreachable:
          items:
            type: string
          description: Locations that could not be reached.
          type: array
        spokes:
          type: array
          description: The requested spokes.
          items:
            $ref: '#/components/schemas/Spoke'
        nextPageToken:
          description: 'The token for the next page of the response. To see more results, use this value as the page_token for your next request. If this value is empty, there are no more results.'
          type: string
      id: ListSpokesResponse
    NextHopVpcNetwork:
      type: object
      properties:
        uri:
          description: The URI of the VPC network resource
          type: string
      id: NextHopVpcNetwork
    SpokeSummary:
      properties:
        spokeStateReasonCounts:
          items:
            $ref: '#/components/schemas/SpokeStateReasonCount'
          type: array
          readOnly: true
          description: Output only. Counts the number of spokes that are inactive for each possible reason and associated with a given hub.
        spokeTypeCounts:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/SpokeTypeCount'
          description: Output only. Counts the number of spokes of each type that are associated with a specific hub.
        spokeStateCounts:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SpokeStateCount'
          description: Output only. Counts the number of spokes that are in each state and associated with a given hub.
      type: object
      id: SpokeSummary
      description: 'Summarizes information about the spokes associated with a hub. The summary includes a count of spokes according to type and according to state. If any spokes are inactive, the summary also lists the reasons they are inactive, including a count for each reason.'
    ConsumerPscConfig:
      type: object
      description: Allow the producer to specify which consumers can connect to it.
      properties:
        disableGlobalAccess:
          type: boolean
          description: This is used in PSC consumer ForwardingRule to control whether the PSC endpoint can be accessed from another region.
        project:
          type: string
          description: The consumer project where PSC connections are allowed to be created in.
        state:
          enum:
            - STATE_UNSPECIFIED
            - VALID
            - CONNECTION_POLICY_MISSING
            - POLICY_LIMIT_REACHED
          description: Output only. Overall state of PSC Connections management for this consumer psc config.
          enumDescriptions:
            - 'Default state, when Connection Map is created initially.'
            - 'Set when policy and map configuration is valid, and their matching can lead to allowing creation of PSC Connections subject to other constraints like connections limit.'
            - No Service Connection Policy found for this network and Service Class
            - Service Connection Policy limit reached for this network and Service Class
          readOnly: true
          type: string
        network:
          type: string
          description: 'The resource path of the consumer network where PSC connections are allowed to be created in. Note, this network does not need be in the ConsumerPscConfig.project in the case of SharedVPC. Example: projects/{projectNumOrId}/global/networks/{networkId}.'
      id: ConsumerPscConfig
    LocationMetadata:
      id: LocationMetadata
      type: object
      description: Metadata about locations
      properties:
        locationFeatures:
          type: array
          items:
            enum:
              - LOCATION_FEATURE_UNSPECIFIED
              - SITE_TO_CLOUD_SPOKES
              - SITE_TO_SITE_SPOKES
            enumDescriptions:
              - No publicly supported feature in this location
              - Site-to-cloud spokes are supported in this location
              - Site-to-site spokes are supported in this location
            type: string
          description: List of supported features
    AcceptSpokeRequest:
      description: The request for HubService.AcceptSpoke.
      type: object
      id: AcceptSpokeRequest
      properties:
        requestId:
          type: string
          description: 'Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server guarantees that a request doesn''t result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).'
    Location:
      id: Location
      type: object
      description: A resource that represents a Google Cloud location.
      properties:
        displayName:
          description: 'The friendly name for this location, typically a nearby city name. For example, "Tokyo".'
          type: string
        labels:
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          type: object
          additionalProperties:
            type: string
        locationId:
          type: string
          description: 'The canonical id for this location. For example: `"us-east1"`.'
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
        metadata:
          type: object
          description: Service-specific metadata. For example the available capacity at the given location.
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
    ListServiceClassesResponse:
      id: ListServiceClassesResponse
      description: Response for ListServiceClasses.
      type: object
      properties:
        nextPageToken:
          description: The next pagination token in the List response. It should be used as page_token for the following request. An empty value means no more result.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
        serviceClasses:
          description: ServiceClasses to be returned.
          items:
            $ref: '#/components/schemas/ServiceClass'
          type: array
    ServiceConnectionPolicy:
      id: ServiceConnectionPolicy
      type: object
      properties:
        etag:
          description: 'Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.'
          type: string
        description:
          type: string
          description: A description of this resource.
        name:
          description: 'Immutable. The name of a ServiceConnectionPolicy. Format: projects/{project}/locations/{location}/serviceConnectionPolicies/{service_connection_policy} See: https://google.aip.dev/122#fields-representing-resource-names'
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
          description: User-defined labels.
        serviceClass:
          type: string
          description: 'The service class identifier for which this ServiceConnectionPolicy is for. The service class identifier is a unique, symbolic representation of a ServiceClass. It is provided by the Service Producer. Google services have a prefix of gcp. For example, gcp-cloud-sql. 3rd party services do not. For example, test-service-a3dfcx.'
        infrastructure:
          type: string
          description: Output only. The type of underlying resources used to create the connection.
          enum:
            - INFRASTRUCTURE_UNSPECIFIED
            - PSC
          readOnly: true
          enumDescriptions:
            - An invalid infrastructure as the default case.
            - Private Service Connect is used for connections.
        pscConfig:
          $ref: '#/components/schemas/PscConfig'
          description: Configuration used for Private Service Connect connections. Used when Infrastructure is PSC.
        createTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. Time when the ServiceConnectionMap was created.
        pscConnections:
          description: 'Output only. [Output only] Information about each Private Service Connect connection.'
          items:
            $ref: '#/components/schemas/PscConnection'
          readOnly: true
          type: array
        updateTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. Time when the ServiceConnectionMap was updated.
        network:
          description: 'The resource path of the consumer network. Example: - projects/{projectNumOrId}/global/networks/{resourceId}.'
          type: string
      description: 'The ServiceConnectionPolicy resource. Next id: 12'
    ProducerPscConfig:
      type: object
      id: ProducerPscConfig
      description: The PSC configurations on producer side.
      properties:
        serviceAttachmentUri:
          type: string
          description: 'The resource path of a service attachment. Example: projects/{projectNumOrId}/regions/{region}/serviceAttachments/{resourceId}.'
    ListRouteTablesResponse:
      id: ListRouteTablesResponse
      type: object
      properties:
        routeTables:
          items:
            $ref: '#/components/schemas/RouteTable'
          description: The requested route tables.
          type: array
        nextPageToken:
          type: string
          description: 'The token for the next page of the response. To see more results, use this value as the page_token for your next request. If this value is empty, there are no more results.'
        unreachable:
          description: Hubs that could not be reached.
          items:
            type: string
          type: array
      description: Response for HubService.ListRouteTables method.
    ConsumerPscConnection:
      id: ConsumerPscConnection
      properties:
        pscConnectionId:
          type: string
          description: The PSC connection id of the PSC forwarding rule connected to the service attachments in this service connection map.
        project:
          type: string
          description: The consumer project whose PSC forwarding rule is connected to the service attachments in this service connection map.
        errorInfo:
          $ref: '#/components/schemas/GoogleRpcErrorInfo'
          description: Output only. The error info for the latest error during operating this connection.
          readOnly: true
        network:
          description: The consumer network whose PSC forwarding rule is connected to the service attachments in this service connection map. Note that the network could be on a different project (shared VPC).
          type: string
        state:
          enumDescriptions:
            - An invalid state as the default case.
            - The connection is fully established and ready to use.
            - The connection is not functional since some resources on the connection fail to be created.
            - The connection is being created.
            - The connection is being deleted.
          type: string
          description: The state of the PSC connection.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - FAILED
            - CREATING
            - DELETING
        ip:
          description: The IP literal allocated on the consumer network for the PSC forwarding rule that is created to connect to the producer service attachment in this service connection map.
          type: string
        errorType:
          enum:
            - CONNECTION_ERROR_TYPE_UNSPECIFIED
            - ERROR_INTERNAL
            - ERROR_CONSUMER_SIDE
            - ERROR_PRODUCER_SIDE
          enumDescriptions:
            - An invalid error type as the default case.
            - The error is due to Service Automation system internal.
            - The error is due to the setup on consumer side.
            - The error is due to the setup on producer side.
          description: 'The error type indicates whether the error is consumer facing, producer facing or system internal.'
          type: string
        error:
          description: The most recent error during operating this connection.
          $ref: '#/components/schemas/GoogleRpcStatus'
        forwardingRule:
          description: 'The URI of the consumer forwarding rule created. Example: projects/{projectNumOrId}/regions/us-east1/networks/{resourceId}.'
          type: string
        serviceAttachmentUri:
          type: string
          description: The URI of a service attachment which is the target of the PSC connection.
        gceOperation:
          type: string
          description: The last Compute Engine operation to setup PSC connection.
      type: object
      description: PSC connection details on consumer side.
    Hub:
      properties:
        uniqueId:
          description: 'Output only. The Google-generated UUID for the hub. This value is unique across all hub resources. If a hub is deleted and another with the same name is created, the new hub is assigned a different unique_id.'
          type: string
          readOnly: true
        updateTime:
          type: string
          description: Output only. The time the hub was last updated.
          format: google-datetime
          readOnly: true
        spokeSummary:
          readOnly: true
          $ref: '#/components/schemas/SpokeSummary'
          description: 'Output only. A summary of the spokes associated with a hub. The summary includes a count of spokes according to type and according to state. If any spokes are inactive, the summary also lists the reasons they are inactive, including a count for each reason.'
        name:
          type: string
          description: 'Immutable. The name of the hub. Hub names must be unique. They use the following form: `projects/{project_number}/locations/global/hubs/{hub_id}`'
        labels:
          additionalProperties:
            type: string
          description: 'Optional labels in key:value format. For more information about labels, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).'
          type: object
        routingVpcs:
          items:
            $ref: '#/components/schemas/RoutingVPC'
          type: array
          description: The VPC networks associated with this hub's spokes. This field is read-only. Network Connectivity Center automatically populates it based on the set of spokes attached to the hub.
        description:
          description: An optional description of the hub.
          type: string
        createTime:
          description: Output only. The time the hub was created.
          type: string
          format: google-datetime
          readOnly: true
        state:
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - DELETING
            - ACCEPTING
            - REJECTING
            - UPDATING
            - INACTIVE
            - OBSOLETE
          enumDescriptions:
            - No state information available
            - The resource's create operation is in progress.
            - The resource is active
            - The resource's delete operation is in progress.
            - The resource's accept operation is in progress.
            - The resource's reject operation is in progress.
            - The resource's update operation is in progress.
            - The resource is inactive.
            - The hub associated with this spoke resource has been deleted. This state applies to spoke resources only.
          type: string
          description: Output only. The current lifecycle state of this hub.
          readOnly: true
        routeTables:
          readOnly: true
          type: array
          items:
            type: string
          description: 'Output only. The route tables that belong to this hub. They use the following form: `projects/{project_number}/locations/global/hubs/{hub_id}/routeTables/{route_table_id}` This field is read-only. Network Connectivity Center automatically populates it based on the route tables nested under the hub.'
      type: object
      id: Hub
      description: 'A Network Connectivity Center hub is a global management resource to which you attach spokes. A single hub can contain spokes from multiple regions. However, if any of a hub''s spokes use the site-to-site data transfer feature, the resources associated with those spokes must all be in the same VPC network. Spokes that do not use site-to-site data transfer can be associated with any VPC network in your project.'
  parameters:
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
  x-stackQL-resources:
    locations:
      id: google.networkconnectivity.locations
      name: locations
      title: Locations
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        delete: []
    operations:
      id: google.networkconnectivity.operations
      name: operations
      title: Operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    groups:
      id: google.networkconnectivity.groups
      name: groups
      title: Groups
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}~1groups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.groups
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}~1groups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}~1groups~1{groupsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/groups/methods/list'
        insert: []
        update: []
        delete: []
    groups_iam_policies:
      id: google.networkconnectivity.groups_iam_policies
      name: groups_iam_policies
      title: Groups Iam Policies
      methods:
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}~1groups~1{groupsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}~1groups~1{groupsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}~1groups~1{groupsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}~1groups~1{groupsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/groups_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    routes:
      id: google.networkconnectivity.routes
      name: routes
      title: Routes
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}~1routeTables~1{routeTablesId}~1routes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.routes
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}~1routeTables~1{routeTablesId}~1routes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}~1routeTables~1{routeTablesId}~1routes~1{routesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/routes/methods/list'
        insert: []
        update: []
        delete: []
    route_tables:
      id: google.networkconnectivity.route_tables
      name: route_tables
      title: Route Tables
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}~1routeTables~1{routeTablesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}~1routeTables/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.routeTables
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}~1routeTables/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/route_tables/methods/list'
        insert: []
        update: []
        delete: []
    hubs_iam_policies:
      id: google.networkconnectivity.hubs_iam_policies
      name: hubs_iam_policies
      title: Hubs Iam Policies
      methods:
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hubs_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    hubs:
      id: google.networkconnectivity.hubs
      name: hubs
      title: Hubs
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.hubs
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hubs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/hubs/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/hubs/methods/delete'
    spokes:
      id: google.networkconnectivity.spokes
      name: spokes
      title: Spokes
      methods:
        list_spokes:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}:listSpokes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.spokes
        _list_spokes:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}:listSpokes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accept:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1spokes~1{spokesId}:accept/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1spokes~1{spokesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1spokes~1{spokesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1spokes~1{spokesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1spokes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.spokes
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1spokes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1spokes/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reject:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1spokes~1{spokesId}:reject/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/spokes/methods/list_spokes'
          - $ref: '#/components/x-stackQL-resources/spokes/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/spokes/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/spokes/methods/delete'
    policy_based_routes_iam_policies:
      id: google.networkconnectivity.policy_based_routes_iam_policies
      name: policy_based_routes_iam_policies
      title: Policy Based Routes Iam Policies
      methods:
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1policyBasedRoutes~1{policyBasedRoutesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1policyBasedRoutes~1{policyBasedRoutesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1policyBasedRoutes~1{policyBasedRoutesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1policyBasedRoutes~1{policyBasedRoutesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/policy_based_routes_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    internal_ranges:
      id: google.networkconnectivity.internal_ranges
      name: internal_ranges
      title: Internal Ranges
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1internalRanges/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.internalRanges
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1internalRanges/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1internalRanges/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1internalRanges~1{internalRangesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1internalRanges~1{internalRangesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1internalRanges~1{internalRangesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/internal_ranges/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/internal_ranges/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/internal_ranges/methods/delete'
    service_connection_tokens:
      id: google.networkconnectivity.service_connection_tokens
      name: service_connection_tokens
      title: Service Connection Tokens
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionTokens~1{serviceConnectionTokensId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionTokens~1{serviceConnectionTokensId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionTokens/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionTokens/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.serviceConnectionTokens
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionTokens/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/service_connection_tokens/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/service_connection_tokens/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/service_connection_tokens/methods/delete'
    service_connection_policies:
      id: google.networkconnectivity.service_connection_policies
      name: service_connection_policies
      title: Service Connection Policies
      methods:
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionPolicies/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionPolicies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.serviceConnectionPolicies
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionPolicies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionPolicies~1{serviceConnectionPoliciesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionPolicies~1{serviceConnectionPoliciesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionPolicies~1{serviceConnectionPoliciesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/service_connection_policies/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/service_connection_policies/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/service_connection_policies/methods/delete'
    service_connection_policies_iam_policies:
      id: google.networkconnectivity.service_connection_policies_iam_policies
      name: service_connection_policies_iam_policies
      title: Service Connection Policies Iam Policies
      methods:
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionPolicies~1{serviceConnectionPoliciesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionPolicies~1{serviceConnectionPoliciesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionPolicies~1{serviceConnectionPoliciesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionPolicies~1{serviceConnectionPoliciesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/service_connection_policies_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    spokes_iam_policies:
      id: google.networkconnectivity.spokes_iam_policies
      name: spokes_iam_policies
      title: Spokes Iam Policies
      methods:
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1spokes~1{spokesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1spokes~1{spokesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1spokes~1{spokesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1spokes~1{spokesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/spokes_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    service_classes:
      id: google.networkconnectivity.service_classes
      name: service_classes
      title: Service Classes
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceClasses~1{serviceClassesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceClasses~1{serviceClassesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceClasses~1{serviceClassesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceClasses/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.serviceClasses
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceClasses/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/service_classes/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/service_classes/methods/delete'
    service_classes_iam_policies:
      id: google.networkconnectivity.service_classes_iam_policies
      name: service_classes_iam_policies
      title: Service Classes Iam Policies
      methods:
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceClasses~1{serviceClassesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceClasses~1{serviceClassesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceClasses~1{serviceClassesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceClasses~1{serviceClassesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/service_classes_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    service_connection_maps:
      id: google.networkconnectivity.service_connection_maps
      name: service_connection_maps
      title: Service Connection Maps
      methods:
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionMaps~1{serviceConnectionMapsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionMaps~1{serviceConnectionMapsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionMaps~1{serviceConnectionMapsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionMaps/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionMaps/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.serviceConnectionMaps
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionMaps/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/service_connection_maps/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/service_connection_maps/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/service_connection_maps/methods/delete'
    service_connection_maps_iam_policies:
      id: google.networkconnectivity.service_connection_maps_iam_policies
      name: service_connection_maps_iam_policies
      title: Service Connection Maps Iam Policies
      methods:
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionMaps~1{serviceConnectionMapsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionMaps~1{serviceConnectionMapsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionMaps~1{serviceConnectionMapsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionMaps~1{serviceConnectionMapsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/service_connection_maps_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
paths:
  '/v1/projects/{projectsId}/locations/{locationsId}':
    parameters: &ref_1
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/callback'
    get:
      description: Gets information about a location.
      operationId: networkconnectivity.projects.locations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations':
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: networkconnectivity.projects.locations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.locations
  '/v1/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: networkconnectivity.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: networkconnectivity.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: networkconnectivity.projects.locations.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: networkconnectivity.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleLongrunningCancelOperationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/global/hubs/{hubsId}/groups':
    parameters: *ref_1
    get:
      description: Lists groups in a given hub.
      operationId: networkconnectivity.projects.locations.global.hubs.groups.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGroupsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: groups
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.groups
  '/v1/projects/{projectsId}/locations/global/hubs/{hubsId}/groups/{groupsId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: networkconnectivity.projects.locations.global.hubs.groups.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: groups_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/global/hubs/{hubsId}/groups/{groupsId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: networkconnectivity.projects.locations.global.hubs.groups.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: groups_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/global/hubs/{hubsId}/groups/{groupsId}':
    parameters: *ref_1
    get:
      description: Gets details about a Network Connectivity Center group.
      operationId: networkconnectivity.projects.locations.global.hubs.groups.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/global/hubs/{hubsId}/groups/{groupsId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: networkconnectivity.projects.locations.global.hubs.groups.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: groups_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/global/hubs/{hubsId}/routeTables/{routeTablesId}/routes':
    parameters: *ref_1
    get:
      description: Lists routes in a given project.
      operationId: networkconnectivity.projects.locations.global.hubs.routeTables.routes.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRoutesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
        - in: path
          name: routeTablesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: routes
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.routes
  '/v1/projects/{projectsId}/locations/global/hubs/{hubsId}/routeTables/{routeTablesId}/routes/{routesId}':
    parameters: *ref_1
    get:
      description: Gets details about the specified route.
      operationId: networkconnectivity.projects.locations.global.hubs.routeTables.routes.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
        - in: path
          name: routeTablesId
          required: true
          schema:
            type: string
        - in: path
          name: routesId
          required: true
          schema:
            type: string
      x-stackQL-resource: routes
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/global/hubs/{hubsId}/routeTables/{routeTablesId}':
    parameters: *ref_1
    get:
      description: Gets details about a Network Connectivity Center route table.
      operationId: networkconnectivity.projects.locations.global.hubs.routeTables.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteTable'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
        - in: path
          name: routeTablesId
          required: true
          schema:
            type: string
      x-stackQL-resource: route_tables
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/global/hubs/{hubsId}/routeTables':
    parameters: *ref_1
    get:
      description: Lists route tables in a given project.
      operationId: networkconnectivity.projects.locations.global.hubs.routeTables.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRouteTablesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: route_tables
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.routeTables
  '/v1/projects/{projectsId}/locations/global/hubs/{hubsId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: networkconnectivity.projects.locations.global.hubs.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
      x-stackQL-resource: hubs_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/global/hubs/{hubsId}':
    parameters: *ref_1
    get:
      description: Gets details about a Network Connectivity Center hub.
      operationId: networkconnectivity.projects.locations.global.hubs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hub'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
      x-stackQL-resource: hubs
      x-stackQL-method: get
      x-stackQL-verb: exec
    patch:
      description: Updates the description and/or labels of a Network Connectivity Center hub.
      operationId: networkconnectivity.projects.locations.global.hubs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hub'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: hubs
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a Network Connectivity Center hub.
      operationId: networkconnectivity.projects.locations.global.hubs.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: hubs
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/global/hubs':
    parameters: *ref_1
    get:
      description: Lists the Network Connectivity Center hubs associated with a given project.
      operationId: networkconnectivity.projects.locations.global.hubs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHubsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: hubs
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.hubs
    post:
      description: Creates a new Network Connectivity Center hub in the specified project.
      operationId: networkconnectivity.projects.locations.global.hubs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hub'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: hubId
          schema:
            type: string
      x-stackQL-resource: hubs
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/global/hubs/{hubsId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: networkconnectivity.projects.locations.global.hubs.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
      x-stackQL-resource: hubs_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/global/hubs/{hubsId}:listSpokes':
    parameters: *ref_1
    get:
      description: Lists the Network Connectivity Center spokes associated with a specified hub and location. The list includes both spokes that are attached to the hub and spokes that have been proposed but not yet accepted.
      operationId: networkconnectivity.projects.locations.global.hubs.listSpokes
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHubSpokesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: spokeLocations
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: spokes
      x-stackQL-method: list_spokes
      x-stackQL-verb: select
      x-stackQL-objectKey: $.spokes
  '/v1/projects/{projectsId}/locations/global/hubs/{hubsId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: networkconnectivity.projects.locations.global.hubs.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: hubs_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/global/policyBasedRoutes/{policyBasedRoutesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: networkconnectivity.projects.locations.global.policyBasedRoutes.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: policyBasedRoutesId
          required: true
          schema:
            type: string
      x-stackQL-resource: policy_based_routes_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/global/policyBasedRoutes/{policyBasedRoutesId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: networkconnectivity.projects.locations.global.policyBasedRoutes.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: policyBasedRoutesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: policy_based_routes_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/global/policyBasedRoutes/{policyBasedRoutesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: networkconnectivity.projects.locations.global.policyBasedRoutes.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: policyBasedRoutesId
          required: true
          schema:
            type: string
      x-stackQL-resource: policy_based_routes_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/internalRanges':
    parameters: *ref_1
    get:
      description: Lists internal ranges in a given project and location.
      operationId: networkconnectivity.projects.locations.internalRanges.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInternalRangesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: internal_ranges
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.internalRanges
    post:
      description: Creates a new internal range in a given project and location.
      operationId: networkconnectivity.projects.locations.internalRanges.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternalRange'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: internalRangeId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: internal_ranges
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/internalRanges/{internalRangesId}':
    parameters: *ref_1
    patch:
      description: Updates the parameters of a single internal range.
      operationId: networkconnectivity.projects.locations.internalRanges.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternalRange'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: internalRangesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: internal_ranges
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a single internal range.
      operationId: networkconnectivity.projects.locations.internalRanges.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: internalRangesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: internal_ranges
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets details of a single internal range.
      operationId: networkconnectivity.projects.locations.internalRanges.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalRange'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: internalRangesId
          required: true
          schema:
            type: string
      x-stackQL-resource: internal_ranges
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionTokens/{serviceConnectionTokensId}':
    parameters: *ref_1
    get:
      description: Gets details of a single ServiceConnectionToken.
      operationId: networkconnectivity.projects.locations.serviceConnectionTokens.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceConnectionToken'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionTokensId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_connection_tokens
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: Deletes a single ServiceConnectionToken.
      operationId: networkconnectivity.projects.locations.serviceConnectionTokens.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionTokensId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
      x-stackQL-resource: service_connection_tokens
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionTokens':
    parameters: *ref_1
    post:
      description: Creates a new ServiceConnectionToken in a given project and location.
      operationId: networkconnectivity.projects.locations.serviceConnectionTokens.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceConnectionToken'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: serviceConnectionTokenId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: service_connection_tokens
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists ServiceConnectionTokens in a given project and location.
      operationId: networkconnectivity.projects.locations.serviceConnectionTokens.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceConnectionTokensResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: service_connection_tokens
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.serviceConnectionTokens
  '/v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionPolicies':
    parameters: *ref_1
    post:
      description: Creates a new ServiceConnectionPolicy in a given project and location.
      operationId: networkconnectivity.projects.locations.serviceConnectionPolicies.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceConnectionPolicy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: serviceConnectionPolicyId
          schema:
            type: string
      x-stackQL-resource: service_connection_policies
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists ServiceConnectionPolicies in a given project and location.
      operationId: networkconnectivity.projects.locations.serviceConnectionPolicies.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceConnectionPoliciesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: service_connection_policies
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.serviceConnectionPolicies
  '/v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionPolicies/{serviceConnectionPoliciesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: networkconnectivity.projects.locations.serviceConnectionPolicies.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_connection_policies_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionPolicies/{serviceConnectionPoliciesId}':
    parameters: *ref_1
    delete:
      description: Deletes a single ServiceConnectionPolicy.
      operationId: networkconnectivity.projects.locations.serviceConnectionPolicies.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: service_connection_policies
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Updates the parameters of a single ServiceConnectionPolicy.
      operationId: networkconnectivity.projects.locations.serviceConnectionPolicies.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceConnectionPolicy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: service_connection_policies
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Gets details of a single ServiceConnectionPolicy.
      operationId: networkconnectivity.projects.locations.serviceConnectionPolicies.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceConnectionPolicy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_connection_policies
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionPolicies/{serviceConnectionPoliciesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: networkconnectivity.projects.locations.serviceConnectionPolicies.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_connection_policies_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionPolicies/{serviceConnectionPoliciesId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: networkconnectivity.projects.locations.serviceConnectionPolicies.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: service_connection_policies_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/spokes/{spokesId}:accept':
    parameters: *ref_1
    post:
      description: Accepts a proposal to attach a Network Connectivity Center spoke to the hub.
      operationId: networkconnectivity.projects.locations.spokes.accept
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptSpokeRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: spokesId
          required: true
          schema:
            type: string
      x-stackQL-resource: spokes
      x-stackQL-method: accept
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/spokes/{spokesId}':
    parameters: *ref_1
    delete:
      description: Deletes a Network Connectivity Center spoke.
      operationId: networkconnectivity.projects.locations.spokes.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: spokesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: spokes
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets details about a Network Connectivity Center spoke.
      operationId: networkconnectivity.projects.locations.spokes.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Spoke'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: spokesId
          required: true
          schema:
            type: string
      x-stackQL-resource: spokes
      x-stackQL-method: get
      x-stackQL-verb: exec
    patch:
      description: Updates the parameters of a Network Connectivity Center spoke.
      operationId: networkconnectivity.projects.locations.spokes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Spoke'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: spokesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: spokes
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/spokes/{spokesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: networkconnectivity.projects.locations.spokes.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: spokesId
          required: true
          schema:
            type: string
      x-stackQL-resource: spokes_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/spokes':
    parameters: *ref_1
    get:
      description: Lists the Network Connectivity Center spokes in a specified project and location.
      operationId: networkconnectivity.projects.locations.spokes.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSpokesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: spokes
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.spokes
    post:
      description: Creates a Network Connectivity Center spoke.
      operationId: networkconnectivity.projects.locations.spokes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Spoke'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: spokeId
          schema:
            type: string
      x-stackQL-resource: spokes
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/spokes/{spokesId}:reject':
    parameters: *ref_1
    post:
      description: 'Rejects a Network Connectivity Center spoke from being attached to the hub. If the spoke was previously in the `ACTIVE` state, it transitions to the `INACTIVE` state and is no longer able to connect to other spokes that are attached to the hub.'
      operationId: networkconnectivity.projects.locations.spokes.reject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RejectSpokeRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: spokesId
          required: true
          schema:
            type: string
      x-stackQL-resource: spokes
      x-stackQL-method: reject
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/spokes/{spokesId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: networkconnectivity.projects.locations.spokes.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: spokesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: spokes_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/spokes/{spokesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: networkconnectivity.projects.locations.spokes.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: spokesId
          required: true
          schema:
            type: string
      x-stackQL-resource: spokes_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/serviceClasses/{serviceClassesId}':
    parameters: *ref_1
    get:
      description: Gets details of a single ServiceClass.
      operationId: networkconnectivity.projects.locations.serviceClasses.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceClass'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceClassesId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_classes
      x-stackQL-method: get
      x-stackQL-verb: exec
    patch:
      description: Updates the parameters of a single ServiceClass.
      operationId: networkconnectivity.projects.locations.serviceClasses.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceClass'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceClassesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: service_classes
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a single ServiceClass.
      operationId: networkconnectivity.projects.locations.serviceClasses.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceClassesId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: service_classes
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/serviceClasses/{serviceClassesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: networkconnectivity.projects.locations.serviceClasses.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceClassesId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_classes_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/serviceClasses':
    parameters: *ref_1
    get:
      description: Lists ServiceClasses in a given project and location.
      operationId: networkconnectivity.projects.locations.serviceClasses.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceClassesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: service_classes
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.serviceClasses
  '/v1/projects/{projectsId}/locations/{locationsId}/serviceClasses/{serviceClassesId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: networkconnectivity.projects.locations.serviceClasses.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceClassesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: service_classes_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v1/projects/{projectsId}/locations/{locationsId}/serviceClasses/{serviceClassesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: networkconnectivity.projects.locations.serviceClasses.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceClassesId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_classes_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionMaps/{serviceConnectionMapsId}':
    parameters: *ref_1
    patch:
      description: Updates the parameters of a single ServiceConnectionMap.
      operationId: networkconnectivity.projects.locations.serviceConnectionMaps.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceConnectionMap'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionMapsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: service_connection_maps
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Gets details of a single ServiceConnectionMap.
      operationId: networkconnectivity.projects.locations.serviceConnectionMaps.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceConnectionMap'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionMapsId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_connection_maps
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: Deletes a single ServiceConnectionMap.
      operationId: networkconnectivity.projects.locations.serviceConnectionMaps.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionMapsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: service_connection_maps
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionMaps':
    parameters: *ref_1
    post:
      description: Creates a new ServiceConnectionMap in a given project and location.
      operationId: networkconnectivity.projects.locations.serviceConnectionMaps.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceConnectionMap'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: serviceConnectionMapId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: service_connection_maps
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists ServiceConnectionMaps in a given project and location.
      operationId: networkconnectivity.projects.locations.serviceConnectionMaps.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceConnectionMapsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: service_connection_maps
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.serviceConnectionMaps
  '/v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionMaps/{serviceConnectionMapsId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: networkconnectivity.projects.locations.serviceConnectionMaps.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionMapsId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_connection_maps_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionMaps/{serviceConnectionMapsId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: networkconnectivity.projects.locations.serviceConnectionMaps.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionMapsId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_connection_maps_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionMaps/{serviceConnectionMapsId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: networkconnectivity.projects.locations.serviceConnectionMaps.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionMapsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: service_connection_maps_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
