openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Network Connectivity API
  description: This API enables connectivity with and between Google Cloud resources.
  version: v1
  x-discovery-doc-revision: '20250819'
  x-generated-date: '2025-08-28'
externalDocs:
  url: >-
    https://cloud.google.com/network-connectivity/docs/reference/networkconnectivity/rest
servers:
  - url: https://networkconnectivity.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    GoogleLongrunningListOperationsResponse:
      id: GoogleLongrunningListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    GoogleLongrunningOperation:
      id: GoogleLongrunningOperation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/GoogleRpcStatus'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    GoogleRpcStatus:
      id: GoogleRpcStatus
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    GoogleLongrunningCancelOperationRequest:
      id: GoogleLongrunningCancelOperationRequest
      description: The request message for Operations.CancelOperation.
      type: object
      properties: {}
    ListServiceConnectionMapsResponse:
      id: ListServiceConnectionMapsResponse
      description: Response for ListServiceConnectionMaps.
      type: object
      properties:
        serviceConnectionMaps:
          description: ServiceConnectionMaps to be returned.
          type: array
          items:
            $ref: '#/components/schemas/ServiceConnectionMap'
        nextPageToken:
          description: >-
            The next pagination token in the List response. It should be used as
            page_token for the following request. An empty value means no more
            result.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    ServiceConnectionMap:
      id: ServiceConnectionMap
      description: The ServiceConnectionMap resource.
      type: object
      properties:
        name:
          description: >-
            Immutable. The name of a ServiceConnectionMap. Format:
            projects/{project}/locations/{location}/serviceConnectionMaps/{service_connection_map}
            See: https://google.aip.dev/122#fields-representing-resource-names
          type: string
        createTime:
          description: Output only. Time when the ServiceConnectionMap was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Time when the ServiceConnectionMap was updated.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: User-defined labels.
          type: object
          additionalProperties:
            type: string
        description:
          description: A description of this resource.
          type: string
        serviceClass:
          description: >-
            The service class identifier this ServiceConnectionMap is for. The
            user of ServiceConnectionMap create API needs to have
            networkconnecitivty.serviceclasses.use iam permission for the
            service class.
          type: string
        serviceClassUri:
          description: Output only. The service class uri this ServiceConnectionMap is for.
          readOnly: true
          type: string
        infrastructure:
          description: >-
            Output only. The infrastructure used for connections between
            consumers/producers.
          readOnly: true
          type: string
          enumDescriptions:
            - An invalid infrastructure as the default case.
            - Private Service Connect is used for connections.
          enum:
            - INFRASTRUCTURE_UNSPECIFIED
            - PSC
        producerPscConfigs:
          description: The PSC configurations on producer side.
          type: array
          items:
            $ref: '#/components/schemas/ProducerPscConfig'
        consumerPscConfigs:
          description: The PSC configurations on consumer side.
          type: array
          items:
            $ref: '#/components/schemas/ConsumerPscConfig'
        consumerPscConnections:
          description: Output only. PSC connection details on consumer side.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ConsumerPscConnection'
        token:
          description: >-
            The token provided by the consumer. This token authenticates that
            the consumer can create a connection within the specified project
            and network.
          type: string
        etag:
          description: >-
            Optional. The etag is computed by the server, and may be sent on
            update and delete requests to ensure the client has an up-to-date
            value before proceeding.
          type: string
    ProducerPscConfig:
      id: ProducerPscConfig
      description: The PSC configurations on producer side.
      type: object
      properties:
        serviceAttachmentUri:
          description: >-
            The resource path of a service attachment. Example:
            projects/{projectNumOrId}/regions/{region}/serviceAttachments/{resourceId}.
          type: string
    ConsumerPscConfig:
      id: ConsumerPscConfig
      description: Allow the producer to specify which consumers can connect to it.
      type: object
      properties:
        project:
          description: >-
            The consumer project where PSC connections are allowed to be created
            in.
          type: string
        network:
          description: >-
            The resource path of the consumer network where PSC connections are
            allowed to be created in. Note, this network does not need be in the
            ConsumerPscConfig.project in the case of SharedVPC. Example:
            projects/{projectNumOrId}/global/networks/{networkId}.
          type: string
        disableGlobalAccess:
          description: >-
            This is used in PSC consumer ForwardingRule to control whether the
            PSC endpoint can be accessed from another region.
          type: boolean
        state:
          description: >-
            Output only. Overall state of PSC Connections management for this
            consumer psc config.
          readOnly: true
          type: string
          enumDescriptions:
            - Default state, when Connection Map is created initially.
            - >-
              Set when policy and map configuration is valid, and their matching
              can lead to allowing creation of PSC Connections subject to other
              constraints like connections limit.
            - >-
              No Service Connection Policy found for this network and Service
              Class
            - >-
              Service Connection Policy limit reached for this network and
              Service Class
            - >-
              The consumer instance project is not in
              AllowedGoogleProducersResourceHierarchyLevels of the matching
              ServiceConnectionPolicy.
          enum:
            - STATE_UNSPECIFIED
            - VALID
            - CONNECTION_POLICY_MISSING
            - POLICY_LIMIT_REACHED
            - CONSUMER_INSTANCE_PROJECT_NOT_ALLOWLISTED
        producerInstanceId:
          description: >-
            Immutable. Deprecated. Use producer_instance_metadata instead. An
            immutable identifier for the producer instance.
          deprecated: true
          type: string
        serviceAttachmentIpAddressMap:
          description: >-
            Output only. A map to store mapping between customer vip and target
            service attachment. Only service attachment with producer specified
            ip addresses are stored here.
          readOnly: true
          type: object
          additionalProperties:
            type: string
        consumerInstanceProject:
          description: >-
            Required. The project ID or project number of the consumer project.
            This project is the one that the consumer uses to interact with the
            producer instance. From the perspective of a consumer who's created
            a producer instance, this is the project of the producer instance.
            Format: 'projects/' Eg. 'projects/consumer-project' or
            'projects/1234'
          type: string
        producerInstanceMetadata:
          description: Immutable. An immutable map for the producer instance metadata.
          type: object
          additionalProperties:
            type: string
        ipVersion:
          description: The requested IP version for the PSC connection.
          type: string
          enumDescriptions:
            - >-
              Default value. We will use IPv4 or IPv6 depending on the IP
              version of first available subnetwork.
            - Will use IPv4 only.
            - Will use IPv6 only.
          enum:
            - IP_VERSION_UNSPECIFIED
            - IPV4
            - IPV6
    ConsumerPscConnection:
      id: ConsumerPscConnection
      description: PSC connection details on consumer side.
      type: object
      properties:
        serviceAttachmentUri:
          description: >-
            The URI of a service attachment which is the target of the PSC
            connection.
          type: string
        state:
          description: The state of the PSC connection.
          type: string
          enumDescriptions:
            - An invalid state as the default case.
            - >-
              The connection has been created successfully. However, for the
              up-to-date connection status, please use the service attachment's
              "ConnectedEndpoint.status" as the source of truth.
            - >-
              The connection is not functional since some resources on the
              connection fail to be created.
            - The connection is being created.
            - The connection is being deleted.
            - The connection is being repaired to complete creation.
            - The connection is being repaired to complete deletion.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - FAILED
            - CREATING
            - DELETING
            - CREATE_REPAIRING
            - DELETE_REPAIRING
        project:
          description: >-
            The consumer project whose PSC forwarding rule is connected to the
            service attachments in this service connection map.
          type: string
        network:
          description: >-
            The consumer network whose PSC forwarding rule is connected to the
            service attachments in this service connection map. Note that the
            network could be on a different project (shared VPC).
          type: string
        pscConnectionId:
          description: >-
            The PSC connection id of the PSC forwarding rule connected to the
            service attachments in this service connection map.
          type: string
        ip:
          description: >-
            The IP literal allocated on the consumer network for the PSC
            forwarding rule that is created to connect to the producer service
            attachment in this service connection map.
          type: string
        errorType:
          description: >-
            The error type indicates whether the error is consumer facing,
            producer facing or system internal.
          deprecated: true
          type: string
          enumDescriptions:
            - An invalid error type as the default case.
            - The error is due to Service Automation system internal.
            - The error is due to the setup on consumer side.
            - The error is due to the setup on producer side.
          enum:
            - CONNECTION_ERROR_TYPE_UNSPECIFIED
            - ERROR_INTERNAL
            - ERROR_CONSUMER_SIDE
            - ERROR_PRODUCER_SIDE
        error:
          description: The most recent error during operating this connection.
          deprecated: true
          $ref: '#/components/schemas/GoogleRpcStatus'
        gceOperation:
          description: The last Compute Engine operation to setup PSC connection.
          type: string
        forwardingRule:
          description: >-
            The URI of the consumer forwarding rule created. Example:
            projects/{projectNumOrId}/regions/us-east1/networks/{resourceId}.
          type: string
        errorInfo:
          description: >-
            Output only. The error info for the latest error during operating
            this connection.
          readOnly: true
          $ref: '#/components/schemas/GoogleRpcErrorInfo'
        selectedSubnetwork:
          description: >-
            Output only. The URI of the selected subnetwork selected to allocate
            IP address for this connection.
          readOnly: true
          type: string
        producerInstanceId:
          description: >-
            Immutable. Deprecated. Use producer_instance_metadata instead. An
            immutable identifier for the producer instance.
          deprecated: true
          type: string
        producerInstanceMetadata:
          description: Immutable. An immutable map for the producer instance metadata.
          type: object
          additionalProperties:
            type: string
        ipVersion:
          description: The requested IP version for the PSC connection.
          type: string
          enumDescriptions:
            - >-
              Default value. We will use IPv4 or IPv6 depending on the IP
              version of first available subnetwork.
            - Will use IPv4 only.
            - Will use IPv6 only.
          enum:
            - IP_VERSION_UNSPECIFIED
            - IPV4
            - IPV6
    GoogleRpcErrorInfo:
      id: GoogleRpcErrorInfo
      description: >-
        Describes the cause of the error with structured details. Example of an
        error when contacting the "pubsub.googleapis.com" API when it is not
        enabled: { "reason": "API_DISABLED" "domain": "googleapis.com"
        "metadata": { "resource": "projects/123", "service":
        "pubsub.googleapis.com" } } This response indicates that the
        pubsub.googleapis.com API is not enabled. Example of an error that is
        returned when attempting to create a Spanner instance in a region that
        is out of stock: { "reason": "STOCKOUT" "domain":
        "spanner.googleapis.com", "metadata": { "availableRegions":
        "us-central1,us-east2" } }
      type: object
      properties:
        reason:
          description: >-
            The reason of the error. This is a constant value that identifies
            the proximate cause of the error. Error reasons are unique within a
            particular domain of errors. This should be at most 63 characters
            and match a regular expression of `A-Z+[A-Z0-9]`, which represents
            UPPER_SNAKE_CASE.
          type: string
        domain:
          description: >-
            The logical grouping to which the "reason" belongs. The error domain
            is typically the registered service name of the tool or product that
            generates the error. Example: "pubsub.googleapis.com". If the error
            is generated by some common infrastructure, the error domain must be
            a globally unique value that identifies the infrastructure. For
            Google API infrastructure, the error domain is "googleapis.com".
          type: string
        metadata:
          description: >-
            Additional structured details about this error. Keys must match a
            regular expression of `a-z+` but should ideally be lowerCamelCase.
            Also, they must be limited to 64 characters in length. When
            identifying the current value of an exceeded limit, the units should
            be contained in the key, not the value. For example, rather than
            `{"instanceLimit": "100/request"}`, should be returned as,
            `{"instanceLimitPerRequest": "100"}`, if the client exceeds the
            number of instances that can be created in a single (batch) request.
          type: object
          additionalProperties:
            type: string
    ListServiceConnectionPoliciesResponse:
      id: ListServiceConnectionPoliciesResponse
      description: Response for ListServiceConnectionPolicies.
      type: object
      properties:
        serviceConnectionPolicies:
          description: ServiceConnectionPolicies to be returned.
          type: array
          items:
            $ref: '#/components/schemas/ServiceConnectionPolicy'
        nextPageToken:
          description: >-
            The next pagination token in the List response. It should be used as
            page_token for the following request. An empty value means no more
            result.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    ServiceConnectionPolicy:
      id: ServiceConnectionPolicy
      description: The ServiceConnectionPolicy resource.
      type: object
      properties:
        name:
          description: >-
            Immutable. The name of a ServiceConnectionPolicy. Format:
            projects/{project}/locations/{location}/serviceConnectionPolicies/{service_connection_policy}
            See: https://google.aip.dev/122#fields-representing-resource-names
          type: string
        createTime:
          description: Output only. Time when the ServiceConnectionPolicy was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Time when the ServiceConnectionPolicy was updated.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: User-defined labels.
          type: object
          additionalProperties:
            type: string
        description:
          description: A description of this resource.
          type: string
        network:
          description: >-
            The resource path of the consumer network. Example: -
            projects/{projectNumOrId}/global/networks/{resourceId}.
          type: string
        serviceClass:
          description: >-
            The service class identifier for which this ServiceConnectionPolicy
            is for. The service class identifier is a unique, symbolic
            representation of a ServiceClass. It is provided by the Service
            Producer. Google services have a prefix of gcp or google-cloud. For
            example, gcp-memorystore-redis or google-cloud-sql. 3rd party
            services do not. For example, test-service-a3dfcx.
          type: string
        infrastructure:
          description: >-
            Output only. The type of underlying resources used to create the
            connection.
          readOnly: true
          type: string
          enumDescriptions:
            - An invalid infrastructure as the default case.
            - Private Service Connect is used for connections.
          enum:
            - INFRASTRUCTURE_UNSPECIFIED
            - PSC
        pscConfig:
          description: >-
            Configuration used for Private Service Connect connections. Used
            when Infrastructure is PSC.
          $ref: '#/components/schemas/PscConfig'
        pscConnections:
          description: >-
            Output only. [Output only] Information about each Private Service
            Connect connection.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/PscConnection'
        etag:
          description: >-
            Optional. The etag is computed by the server, and may be sent on
            update and delete requests to ensure the client has an up-to-date
            value before proceeding.
          type: string
    PscConfig:
      id: PscConfig
      description: >-
        Configuration used for Private Service Connect connections. Used when
        Infrastructure is PSC.
      type: object
      properties:
        subnetworks:
          description: >-
            The resource paths of subnetworks to use for IP address management.
            Example:
            projects/{projectNumOrId}/regions/{region}/subnetworks/{resourceId}.
          type: array
          items:
            type: string
        limit:
          description: Optional. Max number of PSC connections for this policy.
          type: string
          format: int64
        producerInstanceLocation:
          description: >-
            Optional. ProducerInstanceLocation is used to specify which
            authorization mechanism to use to determine which projects the
            Producer instance can be within.
          type: string
          enumDescriptions:
            - >-
              Producer instance location is not specified. When this option is
              chosen, then the PSC connections created by this
              ServiceConnectionPolicy must be within the same project as the
              Producer instance. This is the default ProducerInstanceLocation
              value. To allow for PSC connections from this network to other
              networks, use the CUSTOM_RESOURCE_HIERARCHY_LEVELS option.
            - >-
              Producer instance must be within one of the values provided in
              allowed_google_producers_resource_hierarchy_level.
          enum:
            - PRODUCER_INSTANCE_LOCATION_UNSPECIFIED
            - CUSTOM_RESOURCE_HIERARCHY_LEVELS
        allowedGoogleProducersResourceHierarchyLevel:
          description: >-
            Optional. List of Projects, Folders, or Organizations from where the
            Producer instance can be within. For example, a network
            administrator can provide both 'organizations/foo' and
            'projects/bar' as
            allowed_google_producers_resource_hierarchy_levels. This allowlists
            this network to connect with any Producer instance within the 'foo'
            organization or the 'bar' project. By default,
            allowed_google_producers_resource_hierarchy_level is empty. The
            format for each allowed_google_producers_resource_hierarchy_level is
            / where is one of 'projects', 'folders', or 'organizations' and is
            either the ID or the number of the resource type. Format for each
            allowed_google_producers_resource_hierarchy_level value: 'projects/'
            or 'folders/' or 'organizations/' Eg. [projects/my-project-id,
            projects/567, folders/891, organizations/123]
          type: array
          items:
            type: string
    PscConnection:
      id: PscConnection
      description: Information about a specific Private Service Connect connection.
      type: object
      properties:
        state:
          description: State of the PSC Connection
          type: string
          enumDescriptions:
            - An invalid state as the default case.
            - >-
              The connection has been created successfully. However, for the
              up-to-date connection status, please use the created forwarding
              rule's "PscConnectionStatus" as the source of truth.
            - >-
              The connection is not functional since some resources on the
              connection fail to be created.
            - The connection is being created.
            - The connection is being deleted.
            - The connection is being repaired to complete creation.
            - The connection is being repaired to complete deletion.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - FAILED
            - CREATING
            - DELETING
            - CREATE_REPAIRING
            - DELETE_REPAIRING
        consumerForwardingRule:
          description: >-
            The resource reference of the PSC Forwarding Rule within the
            consumer VPC.
          type: string
        consumerAddress:
          description: The resource reference of the consumer address.
          type: string
        errorType:
          description: >-
            The error type indicates whether the error is consumer facing,
            producer facing or system internal.
          deprecated: true
          type: string
          enumDescriptions:
            - An invalid error type as the default case.
            - The error is due to Service Automation system internal.
            - The error is due to the setup on consumer side.
            - The error is due to the setup on producer side.
          enum:
            - CONNECTION_ERROR_TYPE_UNSPECIFIED
            - ERROR_INTERNAL
            - ERROR_CONSUMER_SIDE
            - ERROR_PRODUCER_SIDE
        error:
          description: >-
            The most recent error during operating this connection. Deprecated,
            please use error_info instead.
          deprecated: true
          $ref: '#/components/schemas/GoogleRpcStatus'
        gceOperation:
          description: The last Compute Engine operation to setup PSC connection.
          type: string
        consumerTargetProject:
          description: The project where the PSC connection is created.
          type: string
        pscConnectionId:
          description: The PSC connection id of the PSC forwarding rule.
          type: string
        errorInfo:
          description: >-
            Output only. The error info for the latest error during operating
            this connection.
          readOnly: true
          $ref: '#/components/schemas/GoogleRpcErrorInfo'
        selectedSubnetwork:
          description: >-
            Output only. The URI of the subnetwork selected to allocate IP
            address for this connection.
          readOnly: true
          type: string
        producerInstanceId:
          description: >-
            Immutable. Deprecated. Use producer_instance_metadata instead. An
            immutable identifier for the producer instance.
          deprecated: true
          type: string
        producerInstanceMetadata:
          description: Immutable. An immutable map for the producer instance metadata.
          type: object
          additionalProperties:
            type: string
        serviceClass:
          description: >-
            Output only. [Output only] The service class associated with this
            PSC Connection. The value is derived from the SCPolicy and matches
            the service class name provided by the customer.
          readOnly: true
          type: string
        ipVersion:
          description: The requested IP version for the PSC connection.
          type: string
          enumDescriptions:
            - >-
              Default value. We will use IPv4 or IPv6 depending on the IP
              version of first available subnetwork.
            - Will use IPv4 only.
            - Will use IPv6 only.
          enum:
            - IP_VERSION_UNSPECIFIED
            - IPV4
            - IPV6
    ListServiceClassesResponse:
      id: ListServiceClassesResponse
      description: Response for ListServiceClasses.
      type: object
      properties:
        serviceClasses:
          description: ServiceClasses to be returned.
          type: array
          items:
            $ref: '#/components/schemas/ServiceClass'
        nextPageToken:
          description: >-
            The next pagination token in the List response. It should be used as
            page_token for the following request. An empty value means no more
            result.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    ServiceClass:
      id: ServiceClass
      description: The ServiceClass resource.
      type: object
      properties:
        name:
          description: >-
            Immutable. The name of a ServiceClass resource. Format:
            projects/{project}/locations/{location}/serviceClasses/{service_class}
            See: https://google.aip.dev/122#fields-representing-resource-names
          type: string
        serviceClass:
          description: >-
            Output only. The generated service class name. Use this name to
            refer to the Service class in Service Connection Maps and Service
            Connection Policies.
          readOnly: true
          type: string
        createTime:
          description: Output only. Time when the ServiceClass was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Time when the ServiceClass was updated.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: User-defined labels.
          type: object
          additionalProperties:
            type: string
        description:
          description: A description of this resource.
          type: string
        etag:
          description: >-
            Optional. The etag is computed by the server, and may be sent on
            update and delete requests to ensure the client has an up-to-date
            value before proceeding.
          type: string
    ServiceConnectionToken:
      id: ServiceConnectionToken
      description: The ServiceConnectionToken resource.
      type: object
      properties:
        name:
          description: >-
            Immutable. The name of a ServiceConnectionToken. Format:
            projects/{project}/locations/{location}/ServiceConnectionTokens/{service_connection_token}
            See: https://google.aip.dev/122#fields-representing-resource-names
          type: string
        createTime:
          description: Output only. Time when the ServiceConnectionToken was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Time when the ServiceConnectionToken was updated.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: User-defined labels.
          type: object
          additionalProperties:
            type: string
        description:
          description: A description of this resource.
          type: string
        network:
          description: >-
            The resource path of the network associated with this token.
            Example: projects/{projectNumOrId}/global/networks/{resourceId}.
          type: string
        token:
          description: Output only. The token generated by Automation.
          readOnly: true
          type: string
        expireTime:
          description: Output only. The time to which this token is valid.
          readOnly: true
          type: string
          format: google-datetime
        etag:
          description: >-
            Optional. The etag is computed by the server, and may be sent on
            update and delete requests to ensure the client has an up-to-date
            value before proceeding.
          type: string
    ListServiceConnectionTokensResponse:
      id: ListServiceConnectionTokensResponse
      description: Response for ListServiceConnectionTokens.
      type: object
      properties:
        serviceConnectionTokens:
          description: ServiceConnectionTokens to be returned.
          type: array
          items:
            $ref: '#/components/schemas/ServiceConnectionToken'
        nextPageToken:
          description: >-
            The next pagination token in the List response. It should be used as
            page_token for the following request. An empty value means no more
            result.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    ListMulticloudDataTransferConfigsResponse:
      id: ListMulticloudDataTransferConfigsResponse
      description: Response message for ListMulticloudDataTransferConfigs.
      type: object
      properties:
        multicloudDataTransferConfigs:
          description: MulticloudDataTransferConfigs to be returned.
          type: array
          items:
            $ref: '#/components/schemas/MulticloudDataTransferConfig'
        nextPageToken:
          description: The next page token.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    MulticloudDataTransferConfig:
      id: MulticloudDataTransferConfig
      description: >-
        The MulticloudDataTransferConfig resource. This lists the services for
        which customer is opting in for Multicloud Data Transfer.
      type: object
      properties:
        name:
          description: >-
            Identifier. The name of the MulticloudDataTransferConfig resource.
            Format:
            `projects/{project}/locations/{location}/multicloudDataTransferConfigs/{multicloud_data_transfer_config}`.
          type: string
        createTime:
          description: Output only. Time when the MulticloudDataTransferConfig was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Time when the MulticloudDataTransferConfig was updated.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: Optional. User-defined labels.
          type: object
          additionalProperties:
            type: string
        etag:
          description: >-
            The etag is computed by the server, and may be sent on update and
            delete requests to ensure the client has an up-to-date value before
            proceeding.
          type: string
        description:
          description: >-
            Optional. An optional field to provide a description of this
            resource.
          type: string
        destinationsCount:
          description: >-
            Output only. The number of Destinations configured under the
            MulticloudDataTransferConfig resource.
          readOnly: true
          type: integer
          format: int32
        destinationsActiveCount:
          description: >-
            Output only. The number of Destinations in use under the
            MulticloudDataTransferConfig resource.
          readOnly: true
          type: integer
          format: int32
        services:
          description: >-
            Optional. This map services to either their current or planned
            states. Service names are keys, and the associated values describe
            the service's state. If a state change is expected, the value will
            be the list of ADDING or DELETING states depending on the actions
            taken. Example: "services": { "big-query": { "states": [ { "state":
            "ADDING", "effective_time": "2024-12-12T08:00:00Z" }, ] },
            "cloud-storage": { "states": [ { "state": "ACTIVE", } ] } }
          type: object
          additionalProperties:
            $ref: '#/components/schemas/StateTimeline'
        uid:
          description: >-
            Output only. The Google-generated UUID for the
            MulticloudDataTransferConfig. This value is unique across all
            MulticloudDataTransferConfig resources. If a
            MulticloudDataTransferConfig is deleted and another with the same
            name is created, the new MulticloudDataTransferConfig is assigned a
            different uid.
          readOnly: true
          type: string
    StateTimeline:
      id: StateTimeline
      description: The timeline of pending states for a resource.
      type: object
      properties:
        states:
          description: >-
            Output only. The state and activation time details of the resource
            state.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/StateMetadata'
    StateMetadata:
      id: StateMetadata
      description: The state and activation time details of the resource state.
      type: object
      properties:
        state:
          description: Output only. The state of the resource.
          readOnly: true
          type: string
          enumDescriptions:
            - An invalid state as the default case.
            - The resource is being added.
            - The resource is in use.
            - The resource is being deleted.
            - The resource is being suspended.
            - The resource is not in use for billing and is suspended.
          enum:
            - STATE_UNSPECIFIED
            - ADDING
            - ACTIVE
            - DELETING
            - SUSPENDING
            - SUSPENDED
        effectiveTime:
          description: >-
            Output only. This field will be accompanied only with transient
            states (PENDING_ADD, PENDING_DELETE, PENDING_SUSPENSION) and denotes
            the time when the transient state of the resource will be effective.
            For instance, if the state is "ADDING," this field will show the
            time the resource transitions to "ACTIVE." Similarly, if the state
            is "PENDING_DELETE," it will show the deletion time.
          readOnly: true
          type: string
          format: google-datetime
    ListDestinationsResponse:
      id: ListDestinationsResponse
      description: Response message for ListDestinations.
      type: object
      properties:
        destinations:
          description: Destinations to be returned.
          type: array
          items:
            $ref: '#/components/schemas/Destination'
        nextPageToken:
          description: The next page token.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Destination:
      id: Destination
      description: The Destination resource.
      type: object
      properties:
        name:
          description: >-
            Identifier. The name of the Destination resource. Format:
            `projects/{project}/locations/{location}/multicloudDataTransferConfigs/{multicloud_data_transfer_config}/destinations/{destination}`.
          type: string
        createTime:
          description: Output only. Time when the Destination was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Time when the Destination was updated.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: Optional. User-defined labels.
          type: object
          additionalProperties:
            type: string
        etag:
          description: >-
            The etag is computed by the server, and may be sent on update and
            delete requests to ensure the client has an up-to-date value before
            proceeding.
          type: string
        description:
          description: >-
            Optional. An optional field to provide a description of this
            resource.
          type: string
        ipPrefix:
          description: >-
            Required. Immutable. Remote IP Prefix in the remote CSP, where the
            customer's workload is located
          type: string
        endpoints:
          description: >-
            Required. Unordered list. The list of Endpoints configured for the
            IP Prefix.
          type: array
          items:
            $ref: '#/components/schemas/DestinationEndpoint'
        stateTimeline:
          description: >-
            Output only. The timeline of the expected Destination states or the
            current rest state. If a state change is expected, the value will be
            the list of ADDING, DELETING or SUSPENDING statesdepending on the
            actions taken. Example: "state_timeline": { "states": [ { "state":
            "ADDING", // The time when the Destination will be activated.
            "effective_time": "2024-12-01T08:00:00Z" }, { "state": "SUSPENDING",
            // The time when the Destination will be suspended.
            "effective_time": "2024-12-01T20:00:00Z" } ] }
          readOnly: true
          $ref: '#/components/schemas/StateTimeline'
        uid:
          description: >-
            Output only. The Google-generated UUID for the destination. This
            value is unique across all destination resources. If a destination
            is deleted and another with the same name is created, the new
            destination is assigned a different uid.
          readOnly: true
          type: string
    DestinationEndpoint:
      id: DestinationEndpoint
      description: The metadata for a DestinationEndpoint.
      type: object
      properties:
        asn:
          description: Required. The ASN of the remote IP Prefix.
          type: string
          format: int64
        csp:
          description: Required. The name of the CSP of the remote IP Prefix.
          type: string
        state:
          description: Output only. The state of the Endpoint.
          readOnly: true
          type: string
          enumDescriptions:
            - An invalid state as the default case.
            - The Endpoint is valid.
            - The Endpoint is invalid.
          enum:
            - STATE_UNSPECIFIED
            - VALID
            - INVALID
        updateTime:
          description: Output only. Time when the DestinationEndpoint was updated.
          readOnly: true
          type: string
          format: google-datetime
    MulticloudDataTransferSupportedService:
      id: MulticloudDataTransferSupportedService
      description: The supported service for Multicloud Data Transfer.
      type: object
      properties:
        name:
          description: Identifier. The name of the service.
          type: string
        serviceConfigs:
          description: Output only. The network service tiers supported for the service.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ServiceConfig'
    ServiceConfig:
      id: ServiceConfig
      description: >-
        Specifies the Multicloud Data Transfer supported services configuration.
        This includes either the network tier or the request endpoint. If end of
        support for multicloud data transfer is planned for a service's network
        tier or request endpoint, the end time will be provided.
      type: object
      properties:
        eligibilityCriteria:
          description: >-
            Output only. The eligibility criteria for the service. The user has
            to meet the eligibility criteria specified here for the service to
            qualify for multicloud data transfer.
          readOnly: true
          type: string
          enumDescriptions:
            - An invalid eligibility criteria as the default case.
            - >-
              The service is eligible for multicloud data transfer only for the
              premium network tier.
            - >-
              The service is eligible for multicloud data transfer only for the
              standard network tier.
            - >-
              The service is eligible for multicloud data transfer only for the
              regional endpoint.
          enum:
            - ELIGIBILITY_CRITERIA_UNSPECIFIED
            - NETWORK_SERVICE_TIER_PREMIUM_ONLY
            - NETWORK_SERVICE_TIER_STANDARD_ONLY
            - REQUEST_ENDPOINT_REGIONAL_ENDPOINT_ONLY
        supportEndTime:
          description: >-
            Output only. The eligibility criteria support end time. If the end
            time is not specified, no planned end time is available.
          readOnly: true
          type: string
          format: google-datetime
    ListMulticloudDataTransferSupportedServicesResponse:
      id: ListMulticloudDataTransferSupportedServicesResponse
      description: Response message for ListMulticloudDataTransferSupportedServices.
      type: object
      properties:
        multicloudDataTransferSupportedServices:
          description: The list of supported services.
          type: array
          items:
            $ref: '#/components/schemas/MulticloudDataTransferSupportedService'
        nextPageToken:
          description: The next page token.
          type: string
    ListHubsResponse:
      id: ListHubsResponse
      description: Response for HubService.ListHubs method.
      type: object
      properties:
        hubs:
          description: The requested hubs.
          type: array
          items:
            $ref: '#/components/schemas/Hub'
        nextPageToken:
          description: >-
            The token for the next page of the response. To see more results,
            use this value as the page_token for your next request. If this
            value is empty, there are no more results.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Hub:
      id: Hub
      description: >-
        A Network Connectivity Center hub is a global management resource to
        which you attach spokes. A single hub can contain spokes from multiple
        regions. However, if any of a hub's spokes use the site-to-site data
        transfer feature, the resources associated with those spokes must all be
        in the same VPC network. Spokes that do not use site-to-site data
        transfer can be associated with any VPC network in your project.
      type: object
      properties:
        name:
          description: >-
            Immutable. The name of the hub. Hub names must be unique. They use
            the following form:
            `projects/{project_number}/locations/global/hubs/{hub_id}`
          type: string
        createTime:
          description: Output only. The time the hub was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time the hub was last updated.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: >-
            Optional labels in key-value pair format. For more information about
            labels, see [Requirements for
            labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).
          type: object
          additionalProperties:
            type: string
        description:
          description: Optional. An optional description of the hub.
          type: string
        uniqueId:
          description: >-
            Output only. The Google-generated UUID for the hub. This value is
            unique across all hub resources. If a hub is deleted and another
            with the same name is created, the new hub is assigned a different
            unique_id.
          readOnly: true
          type: string
        state:
          description: Output only. The current lifecycle state of this hub.
          readOnly: true
          type: string
          enumDescriptions:
            - No state information available
            - The resource's create operation is in progress.
            - The resource is active
            - The resource's delete operation is in progress.
            - The resource's accept operation is in progress.
            - The resource's reject operation is in progress.
            - The resource's update operation is in progress.
            - The resource is inactive.
            - >-
              The hub associated with this spoke resource has been deleted. This
              state applies to spoke resources only.
            - >-
              The resource is in an undefined state due to resource creation or
              deletion failure. You can try to delete the resource later or
              contact support for help.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - DELETING
            - ACCEPTING
            - REJECTING
            - UPDATING
            - INACTIVE
            - OBSOLETE
            - FAILED
        routingVpcs:
          description: >-
            Output only. The VPC networks associated with this hub's spokes.
            This field is read-only. Network Connectivity Center automatically
            populates it based on the set of spokes attached to the hub.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/RoutingVPC'
        routeTables:
          description: >-
            Output only. The route tables that belong to this hub. They use the
            following form:
            `projects/{project_number}/locations/global/hubs/{hub_id}/routeTables/{route_table_id}`
            This field is read-only. Network Connectivity Center automatically
            populates it based on the route tables nested under the hub.
          readOnly: true
          type: array
          items:
            type: string
        spokeSummary:
          description: >-
            Output only. A summary of the spokes associated with a hub. The
            summary includes a count of spokes according to type and according
            to state. If any spokes are inactive, the summary also lists the
            reasons they are inactive, including a count for each reason.
          readOnly: true
          $ref: '#/components/schemas/SpokeSummary'
        policyMode:
          description: >-
            Optional. The policy mode of this hub. This field can be either
            PRESET or CUSTOM. If unspecified, the policy_mode defaults to
            PRESET.
          type: string
          enumDescriptions:
            - >-
              Policy mode is unspecified. It defaults to PRESET with
              preset_topology = MESH.
            - Hub uses one of the preset topologies.
          enum:
            - POLICY_MODE_UNSPECIFIED
            - PRESET
        presetTopology:
          description: >-
            Optional. The topology implemented in this hub. Currently, this
            field is only used when policy_mode = PRESET. The available preset
            topologies are MESH and STAR. If preset_topology is unspecified and
            policy_mode = PRESET, the preset_topology defaults to MESH. When
            policy_mode = CUSTOM, the preset_topology is set to
            PRESET_TOPOLOGY_UNSPECIFIED.
          type: string
          enumDescriptions:
            - >-
              Preset topology is unspecified. When policy_mode = PRESET, it
              defaults to MESH.
            - >-
              Mesh topology is implemented. Group `default` is automatically
              created. All spokes in the hub are added to group `default`.
            - >-
              Star topology is implemented. Two groups, `center` and `edge`, are
              automatically created along with hub creation. Spokes have to join
              one of the groups during creation.
          enum:
            - PRESET_TOPOLOGY_UNSPECIFIED
            - MESH
            - STAR
        exportPsc:
          description: >-
            Optional. Whether Private Service Connect connection propagation is
            enabled for the hub. If true, Private Service Connect endpoints in
            VPC spokes attached to the hub are made accessible to other VPC
            spokes attached to the hub. The default value is false.
          type: boolean
    RoutingVPC:
      id: RoutingVPC
      description: >-
        RoutingVPC contains information about the VPC networks associated with
        the spokes of a Network Connectivity Center hub.
      type: object
      properties:
        uri:
          description: The URI of the VPC network.
          type: string
        requiredForNewSiteToSiteDataTransferSpokes:
          description: >-
            Output only. If true, indicates that this VPC network is currently
            associated with spokes that use the data transfer feature (spokes
            where the site_to_site_data_transfer field is set to true). If you
            create new spokes that use data transfer, they must be associated
            with this VPC network. At most, one VPC network will have this field
            set to true.
          readOnly: true
          type: boolean
    SpokeSummary:
      id: SpokeSummary
      description: >-
        Summarizes information about the spokes associated with a hub. The
        summary includes a count of spokes according to type and according to
        state. If any spokes are inactive, the summary also lists the reasons
        they are inactive, including a count for each reason.
      type: object
      properties:
        spokeTypeCounts:
          description: >-
            Output only. Counts the number of spokes of each type that are
            associated with a specific hub.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SpokeTypeCount'
        spokeStateCounts:
          description: >-
            Output only. Counts the number of spokes that are in each state and
            associated with a given hub.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SpokeStateCount'
        spokeStateReasonCounts:
          description: >-
            Output only. Counts the number of spokes that are inactive for each
            possible reason and associated with a given hub.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SpokeStateReasonCount'
    SpokeTypeCount:
      id: SpokeTypeCount
      description: >-
        The number of spokes of a given type that are associated with a specific
        hub. The type indicates what kind of resource is associated with the
        spoke.
      type: object
      properties:
        spokeType:
          description: Output only. The type of the spokes.
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified spoke type.
            - Spokes associated with VPN tunnels.
            - Spokes associated with VLAN attachments.
            - Spokes associated with router appliance instances.
            - Spokes associated with VPC networks.
            - Spokes that are backed by a producer VPC network.
          enum:
            - SPOKE_TYPE_UNSPECIFIED
            - VPN_TUNNEL
            - INTERCONNECT_ATTACHMENT
            - ROUTER_APPLIANCE
            - VPC_NETWORK
            - PRODUCER_VPC_NETWORK
        count:
          description: >-
            Output only. The total number of spokes of this type that are
            associated with the hub.
          readOnly: true
          type: string
          format: int64
    SpokeStateCount:
      id: SpokeStateCount
      description: >-
        The number of spokes that are in a particular state and associated with
        a given hub.
      type: object
      properties:
        state:
          description: Output only. The state of the spokes.
          readOnly: true
          type: string
          enumDescriptions:
            - No state information available
            - The resource's create operation is in progress.
            - The resource is active
            - The resource's delete operation is in progress.
            - The resource's accept operation is in progress.
            - The resource's reject operation is in progress.
            - The resource's update operation is in progress.
            - The resource is inactive.
            - >-
              The hub associated with this spoke resource has been deleted. This
              state applies to spoke resources only.
            - >-
              The resource is in an undefined state due to resource creation or
              deletion failure. You can try to delete the resource later or
              contact support for help.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - DELETING
            - ACCEPTING
            - REJECTING
            - UPDATING
            - INACTIVE
            - OBSOLETE
            - FAILED
        count:
          description: >-
            Output only. The total number of spokes that are in this state and
            associated with a given hub.
          readOnly: true
          type: string
          format: int64
    SpokeStateReasonCount:
      id: SpokeStateReasonCount
      description: The number of spokes in the hub that are inactive for this reason.
      type: object
      properties:
        stateReasonCode:
          description: Output only. The reason that a spoke is inactive.
          readOnly: true
          type: string
          enumDescriptions:
            - No information available.
            - The proposed spoke is pending review.
            - The proposed spoke has been rejected by the hub administrator.
            - The spoke has been deactivated internally.
            - >-
              Network Connectivity Center encountered errors while accepting the
              spoke.
            - The proposed spoke update is pending review.
            - >-
              The proposed spoke update has been rejected by the hub
              administrator.
            - >-
              Network Connectivity Center encountered errors while accepting the
              spoke update.
          enum:
            - CODE_UNSPECIFIED
            - PENDING_REVIEW
            - REJECTED
            - PAUSED
            - FAILED
            - UPDATE_PENDING_REVIEW
            - UPDATE_REJECTED
            - UPDATE_FAILED
        count:
          description: >-
            Output only. The total number of spokes that are inactive for a
            particular reason and associated with a given hub.
          readOnly: true
          type: string
          format: int64
    ListHubSpokesResponse:
      id: ListHubSpokesResponse
      description: The response for HubService.ListHubSpokes.
      type: object
      properties:
        spokes:
          description: >-
            The requested spokes. The spoke fields can be partially populated
            based on the `view` field in the request message.
          type: array
          items:
            $ref: '#/components/schemas/Spoke'
        nextPageToken:
          description: >-
            The token for the next page of the response. To see more results,
            use this value as the page_token for your next request. If this
            value is empty, there are no more results.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Spoke:
      id: Spoke
      description: >-
        A Network Connectivity Center spoke represents one or more network
        connectivity resources. When you create a spoke, you associate it with a
        hub. You must also identify a value for exactly one of the following
        fields: * linked_vpn_tunnels * linked_interconnect_attachments *
        linked_router_appliance_instances * linked_vpc_network
      type: object
      properties:
        name:
          description: >-
            Immutable. The name of the spoke. Spoke names must be unique. They
            use the following form:
            `projects/{project_number}/locations/{region}/spokes/{spoke_id}`
          type: string
        createTime:
          description: Output only. The time the spoke was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time the spoke was last updated.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: >-
            Optional labels in key-value pair format. For more information about
            labels, see [Requirements for
            labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).
          type: object
          additionalProperties:
            type: string
        description:
          description: Optional. An optional description of the spoke.
          type: string
        hub:
          description: Immutable. The name of the hub that this spoke is attached to.
          type: string
        group:
          description: Optional. The name of the group that this spoke is associated with.
          type: string
        linkedVpnTunnels:
          description: Optional. VPN tunnels that are associated with the spoke.
          $ref: '#/components/schemas/LinkedVpnTunnels'
        linkedInterconnectAttachments:
          description: Optional. VLAN attachments that are associated with the spoke.
          $ref: '#/components/schemas/LinkedInterconnectAttachments'
        linkedRouterApplianceInstances:
          description: >-
            Optional. Router appliance instances that are associated with the
            spoke.
          $ref: '#/components/schemas/LinkedRouterApplianceInstances'
        linkedVpcNetwork:
          description: Optional. VPC network that is associated with the spoke.
          $ref: '#/components/schemas/LinkedVpcNetwork'
        linkedProducerVpcNetwork:
          description: Optional. The linked producer VPC that is associated with the spoke.
          $ref: '#/components/schemas/LinkedProducerVpcNetwork'
        uniqueId:
          description: >-
            Output only. The Google-generated UUID for the spoke. This value is
            unique across all spoke resources. If a spoke is deleted and another
            with the same name is created, the new spoke is assigned a different
            `unique_id`.
          readOnly: true
          type: string
        state:
          description: Output only. The current lifecycle state of this spoke.
          readOnly: true
          type: string
          enumDescriptions:
            - No state information available
            - The resource's create operation is in progress.
            - The resource is active
            - The resource's delete operation is in progress.
            - The resource's accept operation is in progress.
            - The resource's reject operation is in progress.
            - The resource's update operation is in progress.
            - The resource is inactive.
            - >-
              The hub associated with this spoke resource has been deleted. This
              state applies to spoke resources only.
            - >-
              The resource is in an undefined state due to resource creation or
              deletion failure. You can try to delete the resource later or
              contact support for help.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - DELETING
            - ACCEPTING
            - REJECTING
            - UPDATING
            - INACTIVE
            - OBSOLETE
            - FAILED
        reasons:
          description: Output only. The reasons for current state of the spoke.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/StateReason'
        spokeType:
          description: Output only. The type of resource associated with the spoke.
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified spoke type.
            - Spokes associated with VPN tunnels.
            - Spokes associated with VLAN attachments.
            - Spokes associated with router appliance instances.
            - Spokes associated with VPC networks.
            - Spokes that are backed by a producer VPC network.
          enum:
            - SPOKE_TYPE_UNSPECIFIED
            - VPN_TUNNEL
            - INTERCONNECT_ATTACHMENT
            - ROUTER_APPLIANCE
            - VPC_NETWORK
            - PRODUCER_VPC_NETWORK
        etag:
          description: >-
            Optional. This checksum is computed by the server based on the value
            of other fields, and may be sent on update and delete requests to
            ensure the client has an up-to-date value before proceeding.
          type: string
        fieldPathsPendingUpdate:
          description: >-
            Optional. The list of fields waiting for hub administration's
            approval.
          type: array
          items:
            type: string
    LinkedVpnTunnels:
      id: LinkedVpnTunnels
      description: >-
        A collection of Cloud VPN tunnel resources. These resources should be
        redundant HA VPN tunnels that all advertise the same prefixes to Google
        Cloud. Alternatively, in a passive/active configuration, all tunnels
        should be capable of advertising the same prefixes.
      type: object
      properties:
        uris:
          description: The URIs of linked VPN tunnel resources.
          type: array
          items:
            type: string
        siteToSiteDataTransfer:
          description: >-
            A value that controls whether site-to-site data transfer is enabled
            for these resources. Data transfer is available only in [supported
            locations](https://cloud.google.com/network-connectivity/docs/network-connectivity-center/concepts/locations).
          type: boolean
        vpcNetwork:
          description: Output only. The VPC network where these VPN tunnels are located.
          readOnly: true
          type: string
        includeImportRanges:
          description: >-
            Optional. Hub routes fully encompassed by include import ranges are
            included during import from hub.
          type: array
          items:
            type: string
    LinkedInterconnectAttachments:
      id: LinkedInterconnectAttachments
      description: >-
        A collection of VLAN attachment resources. These resources should be
        redundant attachments that all advertise the same prefixes to Google
        Cloud. Alternatively, in active/passive configurations, all attachments
        should be capable of advertising the same prefixes.
      type: object
      properties:
        uris:
          description: The URIs of linked interconnect attachment resources
          type: array
          items:
            type: string
        siteToSiteDataTransfer:
          description: >-
            A value that controls whether site-to-site data transfer is enabled
            for these resources. Data transfer is available only in [supported
            locations](https://cloud.google.com/network-connectivity/docs/network-connectivity-center/concepts/locations).
          type: boolean
        vpcNetwork:
          description: >-
            Output only. The VPC network where these VLAN attachments are
            located.
          readOnly: true
          type: string
        includeImportRanges:
          description: >-
            Optional. Hub routes fully encompassed by include import ranges are
            included during import from hub.
          type: array
          items:
            type: string
    LinkedRouterApplianceInstances:
      id: LinkedRouterApplianceInstances
      description: >-
        A collection of router appliance instances. If you configure multiple
        router appliance instances to receive data from the same set of sites
        outside of Google Cloud, we recommend that you associate those instances
        with the same spoke.
      type: object
      properties:
        instances:
          description: The list of router appliance instances.
          type: array
          items:
            $ref: '#/components/schemas/RouterApplianceInstance'
        siteToSiteDataTransfer:
          description: >-
            A value that controls whether site-to-site data transfer is enabled
            for these resources. Data transfer is available only in [supported
            locations](https://cloud.google.com/network-connectivity/docs/network-connectivity-center/concepts/locations).
          type: boolean
        vpcNetwork:
          description: >-
            Output only. The VPC network where these router appliance instances
            are located.
          readOnly: true
          type: string
        includeImportRanges:
          description: >-
            Optional. Hub routes fully encompassed by include import ranges are
            included during import from hub.
          type: array
          items:
            type: string
    RouterApplianceInstance:
      id: RouterApplianceInstance
      description: >-
        A router appliance instance is a Compute Engine virtual machine (VM)
        instance that acts as a BGP speaker. A router appliance instance is
        specified by the URI of the VM and the internal IP address of one of the
        VM's network interfaces.
      type: object
      properties:
        virtualMachine:
          description: The URI of the VM.
          type: string
        ipAddress:
          description: The IP address on the VM to use for peering.
          type: string
    LinkedVpcNetwork:
      id: LinkedVpcNetwork
      description: An existing VPC network.
      type: object
      properties:
        uri:
          description: Required. The URI of the VPC network resource.
          type: string
        excludeExportRanges:
          description: >-
            Optional. IP ranges encompassing the subnets to be excluded from
            peering.
          type: array
          items:
            type: string
        includeExportRanges:
          description: Optional. IP ranges allowed to be included from peering.
          type: array
          items:
            type: string
        proposedIncludeExportRanges:
          description: >-
            Output only. The proposed include export IP ranges waiting for hub
            administration's approval.
          readOnly: true
          type: array
          items:
            type: string
        proposedExcludeExportRanges:
          description: >-
            Output only. The proposed exclude export IP ranges waiting for hub
            administration's approval.
          readOnly: true
          type: array
          items:
            type: string
        producerVpcSpokes:
          description: >-
            Output only. The list of Producer VPC spokes that this VPC spoke is
            a service consumer VPC spoke for. These producer VPCs are connected
            through VPC peering to this spoke's backing VPC network. Because
            they are directly connected through VPC peering, NCC export filters
            do not apply between the service consumer VPC spoke and any of its
            producer VPC spokes. This VPC spoke cannot be deleted as long as any
            of these producer VPC spokes are connected to the NCC Hub.
          readOnly: true
          type: array
          items:
            type: string
    LinkedProducerVpcNetwork:
      id: LinkedProducerVpcNetwork
      type: object
      properties:
        network:
          description: >-
            Immutable. The URI of the Service Consumer VPC that the Producer VPC
            is peered with.
          type: string
        serviceConsumerVpcSpoke:
          description: Output only. The Service Consumer Network spoke.
          readOnly: true
          type: string
        peering:
          description: >-
            Immutable. The name of the VPC peering between the Service Consumer
            VPC and the Producer VPC (defined in the Tenant project) which is
            added to the NCC hub. This peering must be in ACTIVE state.
          type: string
        producerNetwork:
          description: Output only. The URI of the Producer VPC.
          readOnly: true
          type: string
        excludeExportRanges:
          description: >-
            Optional. IP ranges encompassing the subnets to be excluded from
            peering.
          type: array
          items:
            type: string
        includeExportRanges:
          description: Optional. IP ranges allowed to be included from peering.
          type: array
          items:
            type: string
        proposedIncludeExportRanges:
          description: >-
            Output only. The proposed include export IP ranges waiting for hub
            administration's approval.
          readOnly: true
          type: array
          items:
            type: string
        proposedExcludeExportRanges:
          description: >-
            Output only. The proposed exclude export IP ranges waiting for hub
            administration's approval.
          readOnly: true
          type: array
          items:
            type: string
    StateReason:
      id: StateReason
      description: The reason a spoke is inactive.
      type: object
      properties:
        code:
          description: The code associated with this reason.
          type: string
          enumDescriptions:
            - No information available.
            - The proposed spoke is pending review.
            - The proposed spoke has been rejected by the hub administrator.
            - The spoke has been deactivated internally.
            - >-
              Network Connectivity Center encountered errors while accepting the
              spoke.
            - The proposed spoke update is pending review.
            - >-
              The proposed spoke update has been rejected by the hub
              administrator.
            - >-
              Network Connectivity Center encountered errors while accepting the
              spoke update.
          enum:
            - CODE_UNSPECIFIED
            - PENDING_REVIEW
            - REJECTED
            - PAUSED
            - FAILED
            - UPDATE_PENDING_REVIEW
            - UPDATE_REJECTED
            - UPDATE_FAILED
        message:
          description: Human-readable details about this reason.
          type: string
        userDetails:
          description: Additional information provided by the user in the RejectSpoke call.
          type: string
    QueryHubStatusResponse:
      id: QueryHubStatusResponse
      description: The response for HubService.QueryHubStatus.
      type: object
      properties:
        hubStatusEntries:
          description: The list of hub status.
          type: array
          items:
            $ref: '#/components/schemas/HubStatusEntry'
        nextPageToken:
          description: >-
            The token for the next page of the response. To see more results,
            use this value as the page_token for your next request. If this
            value is empty, there are no more results.
          type: string
    HubStatusEntry:
      id: HubStatusEntry
      description: >-
        A hub status entry represents the status of a set of propagated Private
        Service Connect connections grouped by certain fields.
      type: object
      properties:
        count:
          description: >-
            The number of propagated Private Service Connect connections with
            this status. If the `group_by` field was not set in the request
            message, the value of this field is 1.
          type: integer
          format: int32
        groupBy:
          description: >-
            The fields that this entry is grouped by. This has the same value as
            the `group_by` field in the request message.
          type: string
        pscPropagationStatus:
          description: The Private Service Connect propagation status.
          $ref: '#/components/schemas/PscPropagationStatus'
    PscPropagationStatus:
      id: PscPropagationStatus
      description: >-
        The status of one or more propagated Private Service Connect connections
        in a hub.
      type: object
      properties:
        sourceSpoke:
          description: The name of the spoke that the source forwarding rule belongs to.
          type: string
        sourceGroup:
          description: The name of the group that the source spoke belongs to.
          type: string
        sourceForwardingRule:
          description: The name of the forwarding rule exported to the hub.
          type: string
        targetSpoke:
          description: The name of the spoke that the source forwarding rule propagates to.
          type: string
        targetGroup:
          description: The name of the group that the target spoke belongs to.
          type: string
        code:
          description: The propagation status.
          type: string
          enumDescriptions:
            - The code is unspecified.
            - The propagated Private Service Connect connection is ready.
            - >-
              The Private Service Connect connection is propagating. This is a
              transient state.
            - >-
              The Private Service Connect connection propagation failed because
              the VPC network or the project of the target spoke has exceeded
              the connection limit set by the producer.
            - >-
              The Private Service Connect connection propagation failed because
              the NAT IP subnet space has been exhausted. It is equivalent to
              the `Needs attention` status of the Private Service Connect
              connection. See
              https://cloud.google.com/vpc/docs/about-accessing-vpc-hosted-services-endpoints#connection-statuses.
            - >-
              The Private Service Connect connection propagation failed because
              the `PSC_ILB_CONSUMER_FORWARDING_RULES_PER_PRODUCER_NETWORK` quota
              in the producer VPC network has been exceeded.
            - >-
              The Private Service Connect connection propagation failed because
              the `PSC_PROPAGATED_CONNECTIONS_PER_VPC_NETWORK` quota in the
              consumer VPC network has been exceeded.
          enum:
            - CODE_UNSPECIFIED
            - READY
            - PROPAGATING
            - ERROR_PRODUCER_PROPAGATED_CONNECTION_LIMIT_EXCEEDED
            - ERROR_PRODUCER_NAT_IP_SPACE_EXHAUSTED
            - ERROR_PRODUCER_QUOTA_EXCEEDED
            - ERROR_CONSUMER_QUOTA_EXCEEDED
        message:
          description: >-
            The human-readable summary of the Private Service Connect connection
            propagation status.
          type: string
    ListSpokesResponse:
      id: ListSpokesResponse
      description: The response for HubService.ListSpokes.
      type: object
      properties:
        spokes:
          description: The requested spokes.
          type: array
          items:
            $ref: '#/components/schemas/Spoke'
        nextPageToken:
          description: >-
            The token for the next page of the response. To see more results,
            use this value as the page_token for your next request. If this
            value is empty, there are no more results.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    RejectHubSpokeRequest:
      id: RejectHubSpokeRequest
      description: The request for HubService.RejectHubSpoke.
      type: object
      properties:
        spokeUri:
          description: Required. The URI of the spoke to reject from the hub.
          type: string
        requestId:
          description: >-
            Optional. A request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server knows
            to ignore the request if it has already been completed. The server
            guarantees that a request doesn't result in creation of duplicate
            commitments for at least 60 minutes. For example, consider a
            situation where you make an initial request and the request times
            out. If you make the request again with the same request ID, the
            server can check to see whether the original operation was received.
            If it was, the server ignores the second request. This behavior
            prevents clients from mistakenly creating duplicate commitments. The
            request ID must be a valid UUID, with the exception that zero UUID
            is not supported (00000000-0000-0000-0000-000000000000).
          type: string
        details:
          description: Optional. Additional information provided by the hub administrator.
          type: string
    AcceptHubSpokeRequest:
      id: AcceptHubSpokeRequest
      description: The request for HubService.AcceptHubSpoke.
      type: object
      properties:
        spokeUri:
          description: Required. The URI of the spoke to accept into the hub.
          type: string
        requestId:
          description: >-
            Optional. A request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server knows
            to ignore the request if it has already been completed. The server
            guarantees that a request doesn't result in creation of duplicate
            commitments for at least 60 minutes. For example, consider a
            situation where you make an initial request and the request times
            out. If you make the request again with the same request ID, the
            server can check to see whether the original operation was received.
            If it was, the server ignores the second request. This behavior
            prevents clients from mistakenly creating duplicate commitments. The
            request ID must be a valid UUID, with the exception that zero UUID
            is not supported (00000000-0000-0000-0000-000000000000).
          type: string
    AcceptSpokeUpdateRequest:
      id: AcceptSpokeUpdateRequest
      description: The request for HubService.AcceptSpokeUpdate.
      type: object
      properties:
        spokeUri:
          description: Required. The URI of the spoke to accept update.
          type: string
        spokeEtag:
          description: Required. The etag of the spoke to accept update.
          type: string
        requestId:
          description: >-
            Optional. A request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server knows
            to ignore the request if it has already been completed. The server
            guarantees that a request doesn't result in creation of duplicate
            commitments for at least 60 minutes. For example, consider a
            situation where you make an initial request and the request times
            out. If you make the request again with the same request ID, the
            server can check to see whether the original operation was received.
            If it was, the server ignores the second request. This behavior
            prevents clients from mistakenly creating duplicate commitments. The
            request ID must be a valid UUID, with the exception that zero UUID
            is not supported (00000000-0000-0000-0000-000000000000).
          type: string
    RejectSpokeUpdateRequest:
      id: RejectSpokeUpdateRequest
      description: The request for HubService.RejectSpokeUpdate.
      type: object
      properties:
        spokeUri:
          description: Required. The URI of the spoke to reject update.
          type: string
        spokeEtag:
          description: Required. The etag of the spoke to reject update.
          type: string
        details:
          description: Optional. Additional information provided by the hub administrator.
          type: string
        requestId:
          description: >-
            Optional. A request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server knows
            to ignore the request if it has already been completed. The server
            guarantees that a request doesn't result in creation of duplicate
            commitments for at least 60 minutes. For example, consider a
            situation where you make an initial request and the request times
            out. If you make the request again with the same request ID, the
            server can check to see whether the original operation was received.
            If it was, the server ignores the second request. This behavior
            prevents clients from mistakenly creating duplicate commitments. The
            request ID must be a valid UUID, with the exception that zero UUID
            is not supported (00000000-0000-0000-0000-000000000000).
          type: string
    RouteTable:
      id: RouteTable
      type: object
      properties:
        name:
          description: >-
            Immutable. The name of the route table. Route table names must be
            unique. They use the following form:
            `projects/{project_number}/locations/global/hubs/{hub}/routeTables/{route_table_id}`
          type: string
        createTime:
          description: Output only. The time the route table was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time the route table was last updated.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: >-
            Optional labels in key-value pair format. For more information about
            labels, see [Requirements for
            labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).
          type: object
          additionalProperties:
            type: string
        description:
          description: An optional description of the route table.
          type: string
        uid:
          description: >-
            Output only. The Google-generated UUID for the route table. This
            value is unique across all route table resources. If a route table
            is deleted and another with the same name is created, the new route
            table is assigned a different `uid`.
          readOnly: true
          type: string
        state:
          description: Output only. The current lifecycle state of this route table.
          readOnly: true
          type: string
          enumDescriptions:
            - No state information available
            - The resource's create operation is in progress.
            - The resource is active
            - The resource's delete operation is in progress.
            - The resource's accept operation is in progress.
            - The resource's reject operation is in progress.
            - The resource's update operation is in progress.
            - The resource is inactive.
            - >-
              The hub associated with this spoke resource has been deleted. This
              state applies to spoke resources only.
            - >-
              The resource is in an undefined state due to resource creation or
              deletion failure. You can try to delete the resource later or
              contact support for help.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - DELETING
            - ACCEPTING
            - REJECTING
            - UPDATING
            - INACTIVE
            - OBSOLETE
            - FAILED
    Route:
      id: Route
      description: >-
        A route defines a path from VM instances within a spoke to a specific
        destination resource. Only VPC spokes have routes.
      type: object
      properties:
        name:
          description: >-
            Immutable. The name of the route. Route names must be unique. Route
            names use the following form:
            `projects/{project_number}/locations/global/hubs/{hub}/routeTables/{route_table_id}/routes/{route_id}`
          type: string
        createTime:
          description: Output only. The time the route was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time the route was last updated.
          readOnly: true
          type: string
          format: google-datetime
        ipCidrRange:
          description: The destination IP address range.
          type: string
        type:
          description: >-
            Output only. The route's type. Its type is determined by the
            properties of its IP address range.
          readOnly: true
          type: string
          enumDescriptions:
            - No route type information specified
            - >-
              The route leads to a destination within the primary address range
              of the VPC network's subnet.
            - >-
              The route leads to a destination within the secondary address
              range of the VPC network's subnet.
            - >-
              The route leads to a destination in a dynamic route. Dynamic
              routes are derived from Border Gateway Protocol (BGP)
              advertisements received from an NCC hybrid spoke.
          enum:
            - ROUTE_TYPE_UNSPECIFIED
            - VPC_PRIMARY_SUBNET
            - VPC_SECONDARY_SUBNET
            - DYNAMIC_ROUTE
        nextHopVpcNetwork:
          description: Immutable. The destination VPC network for packets on this route.
          $ref: '#/components/schemas/NextHopVpcNetwork'
        labels:
          description: >-
            Optional labels in key-value pair format. For more information about
            labels, see [Requirements for
            labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).
          type: object
          additionalProperties:
            type: string
        description:
          description: An optional description of the route.
          type: string
        uid:
          description: >-
            Output only. The Google-generated UUID for the route. This value is
            unique across all Network Connectivity Center route resources. If a
            route is deleted and another with the same name is created, the new
            route is assigned a different `uid`.
          readOnly: true
          type: string
        state:
          description: Output only. The current lifecycle state of the route.
          readOnly: true
          type: string
          enumDescriptions:
            - No state information available
            - The resource's create operation is in progress.
            - The resource is active
            - The resource's delete operation is in progress.
            - The resource's accept operation is in progress.
            - The resource's reject operation is in progress.
            - The resource's update operation is in progress.
            - The resource is inactive.
            - >-
              The hub associated with this spoke resource has been deleted. This
              state applies to spoke resources only.
            - >-
              The resource is in an undefined state due to resource creation or
              deletion failure. You can try to delete the resource later or
              contact support for help.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - DELETING
            - ACCEPTING
            - REJECTING
            - UPDATING
            - INACTIVE
            - OBSOLETE
            - FAILED
        spoke:
          description: >-
            Immutable. The spoke that this route leads to. Example:
            projects/12345/locations/global/spokes/SPOKE
          type: string
        location:
          description: >-
            Output only. The origin location of the route. Uses the following
            form: "projects/{project}/locations/{location}" Example:
            projects/1234/locations/us-central1
          readOnly: true
          type: string
        priority:
          description: >-
            Output only. The priority of this route. Priority is used to break
            ties in cases where a destination matches more than one route. In
            these cases the route with the lowest-numbered priority value wins.
          readOnly: true
          type: string
          format: int64
        nextHopVpnTunnel:
          description: Immutable. The next-hop VPN tunnel for packets on this route.
          $ref: '#/components/schemas/NextHopVPNTunnel'
        nextHopRouterApplianceInstance:
          description: >-
            Immutable. The next-hop Router appliance instance for packets on
            this route.
          $ref: '#/components/schemas/NextHopRouterApplianceInstance'
        nextHopInterconnectAttachment:
          description: Immutable. The next-hop VLAN attachment for packets on this route.
          $ref: '#/components/schemas/NextHopInterconnectAttachment'
        nextHopSpoke:
          description: Immutable. The next-hop spoke for packets on this route.
          $ref: '#/components/schemas/NextHopSpoke'
    NextHopVpcNetwork:
      id: NextHopVpcNetwork
      type: object
      properties:
        uri:
          description: The URI of the VPC network resource
          type: string
    NextHopVPNTunnel:
      id: NextHopVPNTunnel
      description: A route next hop that leads to a VPN tunnel resource.
      type: object
      properties:
        uri:
          description: The URI of the VPN tunnel resource.
          type: string
        vpcNetwork:
          description: The VPC network where this VPN tunnel is located.
          type: string
        siteToSiteDataTransfer:
          description: >-
            Indicates whether site-to-site data transfer is allowed for this VPN
            tunnel resource. Data transfer is available only in [supported
            locations](https://cloud.google.com/network-connectivity/docs/network-connectivity-center/concepts/locations).
          type: boolean
    NextHopRouterApplianceInstance:
      id: NextHopRouterApplianceInstance
      description: A route next hop that leads to a Router appliance instance.
      type: object
      properties:
        uri:
          description: The URI of the Router appliance instance.
          type: string
        vpcNetwork:
          description: The VPC network where this VM is located.
          type: string
        siteToSiteDataTransfer:
          description: >-
            Indicates whether site-to-site data transfer is allowed for this
            Router appliance instance resource. Data transfer is available only
            in [supported
            locations](https://cloud.google.com/network-connectivity/docs/network-connectivity-center/concepts/locations).
          type: boolean
    NextHopInterconnectAttachment:
      id: NextHopInterconnectAttachment
      description: A route next hop that leads to an interconnect attachment resource.
      type: object
      properties:
        uri:
          description: The URI of the interconnect attachment resource.
          type: string
        vpcNetwork:
          description: The VPC network where this interconnect attachment is located.
          type: string
        siteToSiteDataTransfer:
          description: >-
            Indicates whether site-to-site data transfer is allowed for this
            interconnect attachment resource. Data transfer is available only in
            [supported
            locations](https://cloud.google.com/network-connectivity/docs/network-connectivity-center/concepts/locations).
          type: boolean
    NextHopSpoke:
      id: NextHopSpoke
      description: A route next hop that leads to a spoke resource.
      type: object
      properties:
        uri:
          description: The URI of the spoke resource.
          type: string
        siteToSiteDataTransfer:
          description: >-
            Indicates whether site-to-site data transfer is allowed for this
            spoke resource. Data transfer is available only in [supported
            locations](https://cloud.google.com/network-connectivity/docs/network-connectivity-center/concepts/locations).
            Whether this route is accessible to other hybrid spokes with
            site-to-site data transfer enabled. If this is false, the route is
            only accessible to VPC spokes of the connected Hub.
          type: boolean
    ListRoutesResponse:
      id: ListRoutesResponse
      description: Response for HubService.ListRoutes method.
      type: object
      properties:
        routes:
          description: The requested routes.
          type: array
          items:
            $ref: '#/components/schemas/Route'
        nextPageToken:
          description: >-
            The token for the next page of the response. To see more results,
            use this value as the page_token for your next request. If this
            value is empty, there are no more results.
          type: string
        unreachable:
          description: RouteTables that could not be reached.
          type: array
          items:
            type: string
    ListRouteTablesResponse:
      id: ListRouteTablesResponse
      description: Response for HubService.ListRouteTables method.
      type: object
      properties:
        routeTables:
          description: The requested route tables.
          type: array
          items:
            $ref: '#/components/schemas/RouteTable'
        nextPageToken:
          description: >-
            The token for the next page of the response. To see more results,
            use this value as the page_token for your next request. If this
            value is empty, there are no more results.
          type: string
        unreachable:
          description: Hubs that could not be reached.
          type: array
          items:
            type: string
    Group:
      id: Group
      description: A group represents a subset of spokes attached to a hub.
      type: object
      properties:
        name:
          description: >-
            Immutable. The name of the group. Group names must be unique. They
            use the following form:
            `projects/{project_number}/locations/global/hubs/{hub}/groups/{group_id}`
          type: string
        createTime:
          description: Output only. The time the group was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time the group was last updated.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: >-
            Optional. Labels in key-value pair format. For more information
            about labels, see [Requirements for
            labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).
          type: object
          additionalProperties:
            type: string
        description:
          description: Optional. The description of the group.
          type: string
        uid:
          description: >-
            Output only. The Google-generated UUID for the group. This value is
            unique across all group resources. If a group is deleted and another
            with the same name is created, the new route table is assigned a
            different unique_id.
          readOnly: true
          type: string
        state:
          description: Output only. The current lifecycle state of this group.
          readOnly: true
          type: string
          enumDescriptions:
            - No state information available
            - The resource's create operation is in progress.
            - The resource is active
            - The resource's delete operation is in progress.
            - The resource's accept operation is in progress.
            - The resource's reject operation is in progress.
            - The resource's update operation is in progress.
            - The resource is inactive.
            - >-
              The hub associated with this spoke resource has been deleted. This
              state applies to spoke resources only.
            - >-
              The resource is in an undefined state due to resource creation or
              deletion failure. You can try to delete the resource later or
              contact support for help.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - DELETING
            - ACCEPTING
            - REJECTING
            - UPDATING
            - INACTIVE
            - OBSOLETE
            - FAILED
        autoAccept:
          description: Optional. The auto-accept setting for this group.
          $ref: '#/components/schemas/AutoAccept'
        routeTable:
          description: >-
            Output only. The name of the route table that corresponds to this
            group. They use the following form:
            `projects/{project_number}/locations/global/hubs/{hub_id}/routeTables/{route_table_id}`
          readOnly: true
          type: string
    AutoAccept:
      id: AutoAccept
      description: >-
        The auto-accept setting for a group controls whether proposed spokes are
        automatically attached to the hub. If auto-accept is enabled, the spoke
        immediately is attached to the hub and becomes part of the group. In
        this case, the new spoke is in the ACTIVE state. If auto-accept is
        disabled, the spoke goes to the INACTIVE state, and it must be reviewed
        and accepted by a hub administrator.
      type: object
      properties:
        autoAcceptProjects:
          description: >-
            Optional. A list of project ids or project numbers for which you
            want to enable auto-accept. The auto-accept setting is applied to
            spokes being created or updated in these projects.
          type: array
          items:
            type: string
    ListGroupsResponse:
      id: ListGroupsResponse
      description: Response for HubService.ListGroups method.
      type: object
      properties:
        groups:
          description: The requested groups.
          type: array
          items:
            $ref: '#/components/schemas/Group'
        nextPageToken:
          description: >-
            The token for the next page of the response. To see more results,
            use this value as the page_token for your next request. If this
            value is empty, there are no more results.
          type: string
        unreachable:
          description: Hubs that could not be reached.
          type: array
          items:
            type: string
    ListInternalRangesResponse:
      id: ListInternalRangesResponse
      description: Response for InternalRange.ListInternalRanges
      type: object
      properties:
        internalRanges:
          description: Internal ranges to be returned.
          type: array
          items:
            $ref: '#/components/schemas/InternalRange'
        nextPageToken:
          description: >-
            The next pagination token in the List response. It should be used as
            page_token for the following request. An empty value means no more
            result.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    InternalRange:
      id: InternalRange
      description: >-
        The internal range resource for IPAM operations within a VPC network.
        Used to represent a private address range along with behavioral
        characteristics of that range (its usage and peering behavior).
        Networking resources can link to this range if they are created as
        belonging to it.
      type: object
      properties:
        name:
          description: >-
            Identifier. The name of an internal range. Format:
            projects/{project}/locations/{location}/internalRanges/{internal_range}
            See: https://google.aip.dev/122#fields-representing-resource-names
          type: string
        createTime:
          description: Time when the internal range was created.
          type: string
          format: google-datetime
        updateTime:
          description: Time when the internal range was updated.
          type: string
          format: google-datetime
        labels:
          description: User-defined labels.
          type: object
          additionalProperties:
            type: string
        description:
          description: Optional. A description of this resource.
          type: string
        ipCidrRange:
          description: >-
            Optional. The IP range that this internal range defines. NOTE: IPv6
            ranges are limited to usage=EXTERNAL_TO_VPC and peering=FOR_SELF.
            NOTE: For IPv6 Ranges this field is compulsory, i.e. the address
            range must be specified explicitly.
          type: string
        network:
          description: >-
            Immutable. The URL or resource ID of the network in which to reserve
            the internal range. The network cannot be deleted if there are any
            reserved internal ranges referring to it. Legacy networks are not
            supported. For example:
            https://www.googleapis.com/compute/v1/projects/{project}/locations/global/networks/{network}
            projects/{project}/locations/global/networks/{network} {network}
          type: string
        usage:
          description: Optional. The type of usage set for this InternalRange.
          type: string
          enumDescriptions:
            - >-
              Unspecified usage is allowed in calls which identify the resource
              by other fields and do not need Usage set to complete. These are,
              i.e.: GetInternalRange and DeleteInternalRange. Usage needs to be
              specified explicitly in CreateInternalRange or UpdateInternalRange
              calls.
            - >-
              A VPC resource can use the reserved CIDR block by associating it
              with the internal range resource if usage is set to FOR_VPC.
            - >-
              Ranges created with EXTERNAL_TO_VPC cannot be associated with VPC
              resources and are meant to block out address ranges for various
              use cases, like for example, usage on-prem, with dynamic route
              announcements via interconnect.
            - >-
              Ranges created FOR_MIGRATION can be used to lock a CIDR range
              between a source and target subnet. If usage is set to
              FOR_MIGRATION, the peering value has to be set to FOR_SELF or
              default to FOR_SELF when unset.
          enum:
            - USAGE_UNSPECIFIED
            - FOR_VPC
            - EXTERNAL_TO_VPC
            - FOR_MIGRATION
        peering:
          description: Optional. The type of peering set for this internal range.
          type: string
          enumDescriptions:
            - >-
              If Peering is left unspecified in CreateInternalRange or
              UpdateInternalRange, it will be defaulted to FOR_SELF.
            - >-
              This is the default behavior and represents the case that this
              internal range is intended to be used in the VPC in which it is
              created and is accessible from its peers. This implies that peers
              or peers-of-peers cannot use this range.
            - >-
              This behavior can be set when the internal range is being reserved
              for usage by peers. This means that no resource within the VPC in
              which it is being created can use this to associate with a VPC
              resource, but one of the peers can. This represents donating a
              range for peers to use.
            - >-
              This behavior can be set when the internal range is being reserved
              for usage by the VPC in which it is created, but not shared with
              peers. In a sense, it is local to the VPC. This can be used to
              create internal ranges for various purposes like
              HTTP_INTERNAL_LOAD_BALANCER or for Interconnect routes that are
              not shared with peers. This also implies that peers cannot use
              this range in a way that is visible to this VPC, but can re-use
              this range as long as it is NOT_SHARED from the peer VPC, too.
          enum:
            - PEERING_UNSPECIFIED
            - FOR_SELF
            - FOR_PEER
            - NOT_SHARED
        prefixLength:
          description: >-
            Optional. An alternate to ip_cidr_range. Can be set when trying to
            create an IPv4 reservation that automatically finds a free range of
            the given size. If both ip_cidr_range and prefix_length are set,
            there is an error if the range sizes do not match. Can also be used
            during updates to change the range size. NOTE: For IPv6 this field
            only works if ip_cidr_range is set as well, and both fields must
            match. In other words, with IPv6 this field only works as a
            redundant parameter.
          type: integer
          format: int32
        targetCidrRange:
          description: >-
            Optional. Can be set to narrow down or pick a different address
            space while searching for a free range. If not set, defaults to the
            ["10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16"] address space (for
            auto-mode networks, the "10.0.0.0/9" range is used instead of
            "10.0.0.0/8"). This can be used to target the search in other
            rfc-1918 address spaces like "172.16.0.0/12" and "192.168.0.0/16" or
            non-rfc-1918 address spaces used in the VPC.
          type: array
          items:
            type: string
        users:
          description: >-
            Output only. The list of resources that refer to this internal
            range. Resources that use the internal range for their range
            allocation are referred to as users of the range. Other resources
            mark themselves as users while doing so by creating a reference to
            this internal range. Having a user, based on this reference,
            prevents deletion of the internal range referred to. Can be empty.
          readOnly: true
          type: array
          items:
            type: string
        overlaps:
          description: >-
            Optional. Types of resources that are allowed to overlap with the
            current internal range.
          type: array
          items:
            type: string
            enumDescriptions:
              - No overlap overrides.
              - >-
                Allow creation of static routes more specific that the current
                internal range.
              - >-
                Allow creation of internal ranges that overlap with existing
                subnets.
            enum:
              - OVERLAP_UNSPECIFIED
              - OVERLAP_ROUTE_RANGE
              - OVERLAP_EXISTING_SUBNET_RANGE
        migration:
          description: Optional. Must be present if usage is set to FOR_MIGRATION.
          $ref: '#/components/schemas/Migration'
        immutable:
          description: >-
            Optional. Immutable ranges cannot have their fields modified, except
            for labels and description.
          type: boolean
        allocationOptions:
          description: >-
            Optional. Range auto-allocation options, may be set only when
            auto-allocation is selected by not setting ip_cidr_range (and
            setting prefix_length).
          $ref: '#/components/schemas/AllocationOptions'
        excludeCidrRanges:
          description: >-
            Optional. ExcludeCidrRanges flag. Specifies a set of CIDR blocks
            that allows exclusion of particular CIDR ranges from the
            auto-allocation process, without having to reserve these blocks
          type: array
          items:
            type: string
    Migration:
      id: Migration
      description: Specification for migration with source and target resource names.
      type: object
      properties:
        source:
          description: >-
            Immutable. Resource path as an URI of the source resource, for
            example a subnet. The project for the source resource should match
            the project for the InternalRange. An example:
            /projects/{project}/regions/{region}/subnetworks/{subnet}
          type: string
        target:
          description: >-
            Immutable. Resource path of the target resource. The target project
            can be different, as in the cases when migrating to peer networks.
            For example:
            /projects/{project}/regions/{region}/subnetworks/{subnet}
          type: string
    AllocationOptions:
      id: AllocationOptions
      description: >-
        Range auto-allocation options, to be optionally used when CIDR block is
        not explicitly set.
      type: object
      properties:
        allocationStrategy:
          description: >-
            Optional. Allocation strategy Not setting this field when the
            allocation is requested means an implementation defined strategy is
            used.
          type: string
          enumDescriptions:
            - >-
              Unspecified is the only valid option when the range is specified
              explicitly by ip_cidr_range field. Otherwise unspefified means
              using the default strategy.
            - >-
              Random strategy, the legacy algorithm, used for backwards
              compatibility. This allocation strategy remains efficient in the
              case of concurrent allocation requests in the same peered network
              space and doesn't require providing the level of concurrency in an
              explicit parameter, but it is prone to fragmenting available
              address space.
            - >-
              Pick the first available address range. This strategy is
              deterministic and the result is easy to predict.
            - >-
              Pick an arbitrary range out of the first N available ones. The N
              will be set in the first_available_ranges_lookup_size field. This
              strategy should be used when concurrent allocation requests are
              made in the same space of peered networks while the fragmentation
              of the addrress space is reduced.
            - >-
              Pick the smallest but fitting available range. This deterministic
              strategy minimizes fragmentation of the address space.
          enum:
            - ALLOCATION_STRATEGY_UNSPECIFIED
            - RANDOM
            - FIRST_AVAILABLE
            - RANDOM_FIRST_N_AVAILABLE
            - FIRST_SMALLEST_FITTING
        firstAvailableRangesLookupSize:
          description: >-
            Optional. This field must be set only when allocation_strategy is
            set to RANDOM_FIRST_N_AVAILABLE. The value should be the maximum
            expected parallelism of range creation requests issued to the same
            space of peered netwroks.
          type: integer
          format: int32
    ListPolicyBasedRoutesResponse:
      id: ListPolicyBasedRoutesResponse
      description: Response for PolicyBasedRoutingService.ListPolicyBasedRoutes method.
      type: object
      properties:
        policyBasedRoutes:
          description: Policy-based routes to be returned.
          type: array
          items:
            $ref: '#/components/schemas/PolicyBasedRoute'
        nextPageToken:
          description: >-
            The next pagination token in the List response. It should be used as
            page_token for the following request. An empty value means no more
            result.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    PolicyBasedRoute:
      id: PolicyBasedRoute
      description: >-
        Policy-based routes route L4 network traffic based on not just
        destination IP address, but also source IP address, protocol, and more.
        If a policy-based route conflicts with other types of routes, the
        policy-based route always takes precedence.
      type: object
      properties:
        virtualMachine:
          description: Optional. VM instances that this policy-based route applies to.
          $ref: '#/components/schemas/VirtualMachine'
        interconnectAttachment:
          description: >-
            Optional. The interconnect attachments that this policy-based route
            applies to.
          $ref: '#/components/schemas/InterconnectAttachment'
        nextHopIlbIp:
          description: >-
            Optional. The IP address of a global-access-enabled L4 ILB that is
            the next hop for matching packets. For this version, only
            nextHopIlbIp is supported.
          type: string
        nextHopOtherRoutes:
          description: >-
            Optional. Other routes that will be referenced to determine the next
            hop of the packet.
          type: string
          enumDescriptions:
            - Default value.
            - >-
              Use the routes from the default routing tables (system-generated
              routes, custom routes, peering route) to determine the next hop.
              This effectively excludes matching packets being applied on other
              PBRs with a lower priority.
          enum:
            - OTHER_ROUTES_UNSPECIFIED
            - DEFAULT_ROUTING
        name:
          description: >-
            Immutable. A unique name of the resource in the form of
            `projects/{project_number}/locations/global/PolicyBasedRoutes/{policy_based_route_id}`
          type: string
        createTime:
          description: Output only. Time when the policy-based route was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Time when the policy-based route was updated.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: User-defined labels.
          type: object
          additionalProperties:
            type: string
        description:
          description: >-
            Optional. An optional description of this resource. Provide this
            field when you create the resource.
          type: string
        network:
          description: >-
            Required. Fully-qualified URL of the network that this route applies
            to, for example: projects/my-project/global/networks/my-network.
          type: string
        filter:
          description: Required. The filter to match L4 traffic.
          $ref: '#/components/schemas/Filter'
        priority:
          description: >-
            Optional. The priority of this policy-based route. Priority is used
            to break ties in cases where there are more than one matching
            policy-based routes found. In cases where multiple policy-based
            routes are matched, the one with the lowest-numbered priority value
            wins. The default value is 1000. The priority value must be from 1
            to 65535, inclusive.
          type: integer
          format: int32
        warnings:
          description: >-
            Output only. If potential misconfigurations are detected for this
            route, this field will be populated with warning messages.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Warnings'
        selfLink:
          description: Output only. Server-defined fully-qualified URL for this resource.
          readOnly: true
          type: string
        kind:
          description: >-
            Output only. Type of this resource. Always
            networkconnectivity#policyBasedRoute for policy-based Route
            resources.
          readOnly: true
          type: string
    VirtualMachine:
      id: VirtualMachine
      description: VM instances that this policy-based route applies to.
      type: object
      properties:
        tags:
          description: >-
            Optional. A list of VM instance tags that this policy-based route
            applies to. VM instances that have ANY of tags specified here
            installs this PBR.
          type: array
          items:
            type: string
    InterconnectAttachment:
      id: InterconnectAttachment
      description: InterconnectAttachment that this route applies to.
      type: object
      properties:
        region:
          description: >-
            Optional. Cloud region to install this policy-based route on
            interconnect attachment. Use `all` to install it on all interconnect
            attachments.
          type: string
    Filter:
      id: Filter
      description: Filter matches L4 traffic.
      type: object
      properties:
        ipProtocol:
          description: >-
            Optional. The IP protocol that this policy-based route applies to.
            Valid values are 'TCP', 'UDP', and 'ALL'. Default is 'ALL'.
          type: string
        srcRange:
          description: >-
            Optional. The source IP range of outgoing packets that this
            policy-based route applies to. Default is "0.0.0.0/0" if protocol
            version is IPv4 and "::/0" if protocol version is IPv6.
          type: string
        destRange:
          description: >-
            Optional. The destination IP range of outgoing packets that this
            policy-based route applies to. Default is "0.0.0.0/0" if protocol
            version is IPv4 and "::/0" if protocol version is IPv6.
          type: string
        protocolVersion:
          description: >-
            Required. Internet protocol versions this policy-based route applies
            to. IPV4 and IPV6 is supported.
          type: string
          enumDescriptions:
            - Default value.
            - The PBR is for IPv4 internet protocol traffic.
            - The PBR is for IPv6 internet protocol traffic.
          enum:
            - PROTOCOL_VERSION_UNSPECIFIED
            - IPV4
            - IPV6
    Warnings:
      id: Warnings
      description: Informational warning message.
      type: object
      properties:
        code:
          description: Output only. A warning code, if applicable.
          readOnly: true
          type: string
          enumDescriptions:
            - Default value.
            - >-
              The policy-based route is not active and functioning. Common
              causes are that the dependent network was deleted or the resource
              project was turned off.
            - >-
              The policy-based route is being modified (e.g. created/deleted) at
              this time.
          enum:
            - WARNING_UNSPECIFIED
            - RESOURCE_NOT_ACTIVE
            - RESOURCE_BEING_MODIFIED
        data:
          description: >-
            Output only. Metadata about this warning in key: value format. The
            key should provides more detail on the warning being returned. For
            example, for warnings where there are no results in a list request
            for a particular zone, this key might be scope and the key value
            might be the zone name. Other examples might be a key indicating a
            deprecated resource and a suggested replacement.
          readOnly: true
          type: object
          additionalProperties:
            type: string
        warningMessage:
          description: Output only. A human-readable description of the warning code.
          readOnly: true
          type: string
    ListRegionalEndpointsResponse:
      id: ListRegionalEndpointsResponse
      description: Response for ListRegionalEndpoints.
      type: object
      properties:
        regionalEndpoints:
          description: Regional endpoints to be returned.
          type: array
          items:
            $ref: '#/components/schemas/RegionalEndpoint'
        nextPageToken:
          description: >-
            The next pagination token in the List response. It should be used as
            page_token for the following request. An empty value means no more
            result.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    RegionalEndpoint:
      id: RegionalEndpoint
      description: The RegionalEndpoint resource.
      type: object
      properties:
        name:
          description: >-
            Output only. The name of a RegionalEndpoint. Pattern:
            `projects/{project}/locations/{location}/regionalEndpoints/^[-a-z0-9](?:[-a-z0-9]{0,44})[a-z0-9]$`.
          readOnly: true
          type: string
        createTime:
          description: Output only. Time when the RegionalEndpoint was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Time when the RegionalEndpoint was updated.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: User-defined labels.
          type: object
          additionalProperties:
            type: string
        description:
          description: Optional. A description of this resource.
          type: string
        targetGoogleApi:
          description: >-
            Required. The service endpoint this private regional endpoint
            connects to. Format: `{apiname}.{region}.p.rep.googleapis.com`
            Example: "cloudkms.us-central1.p.rep.googleapis.com".
          type: string
        network:
          description: >-
            The name of the VPC network for this private regional endpoint.
            Format: `projects/{project}/global/networks/{network}`
          type: string
        subnetwork:
          description: >-
            The name of the subnetwork from which the IP address will be
            allocated. Format:
            `projects/{project}/regions/{region}/subnetworks/{subnetwork}`
          type: string
        accessType:
          description: >-
            Required. The access type of this regional endpoint. This field is
            reflected in the PSC Forwarding Rule configuration to enable global
            access.
          type: string
          enumDescriptions:
            - An invalid type as the default case.
            - This regional endpoint is accessible from all regions.
            - >-
              This regional endpoint is only accessible from the same region
              where it resides.
          enum:
            - ACCESS_TYPE_UNSPECIFIED
            - GLOBAL
            - REGIONAL
        pscForwardingRule:
          description: >-
            Output only. The resource reference of the PSC Forwarding Rule
            created on behalf of the customer. Format:
            `//compute.googleapis.com/projects/{project}/regions/{region}/forwardingRules/{forwarding_rule_name}`
          readOnly: true
          type: string
        ipAddress:
          description: >-
            Output only. The literal IP address of the PSC Forwarding Rule
            created on behalf of the customer. This field is deprecated. Use
            address instead.
          readOnly: true
          deprecated: true
          type: string
        address:
          description: >-
            Optional. The IP Address of the Regional Endpoint. When no address
            is provided, an IP from the subnetwork is allocated. Use one of the
            following formats: * IPv4 address as in `10.0.0.1` * Address
            resource URI as in
            `projects/{project}/regions/{region}/addresses/{address_name}` for
            an IPv4 or IPv6 address.
          type: string
    ListLocationsResponse:
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Location:
      id: Location
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
          additionalProperties:
            type: string
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    SetIamPolicyRequest:
      id: SetIamPolicyRequest
      description: Request message for `SetIamPolicy` method.
      type: object
      properties:
        policy:
          description: >-
            REQUIRED: The complete policy to be applied to the `resource`. The
            size of the policy is limited to a few 10s of KB. An empty policy is
            a valid policy but certain Google Cloud services (such as Projects)
            might reject them.
          $ref: '#/components/schemas/Policy'
        updateMask:
          description: >-
            OPTIONAL: A FieldMask specifying which fields of the policy to
            modify. Only the fields in the mask will be modified. If no mask is
            provided, the following default mask is used: `paths: "bindings,
            etag"`
          type: string
          format: google-fieldmask
    Policy:
      id: Policy
      description: >-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources. A `Policy` is a collection of
        `bindings`. A `binding` binds one or more `members`, or principals, to a
        single `role`. Principals can be user accounts, service accounts, Google
        groups, and domains (such as G Suite). A `role` is a named list of
        permissions; each `role` can be an IAM predefined role or a user-created
        custom role. For some types of Google Cloud resources, a `binding` can
        also specify a `condition`, which is a logical expression that allows
        access to a resource only if the expression evaluates to `true`. A
        condition can add constraints based on attributes of the request, the
        resource, or both. To learn which resources support conditions in their
        IAM policies, see the [IAM
        documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        **JSON example:** ``` { "bindings": [ { "role":
        "roles/resourcemanager.organizationAdmin", "members": [
        "user:mike@example.com", "group:admins@example.com",
        "domain:google.com",
        "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, {
        "role": "roles/resourcemanager.organizationViewer", "members": [
        "user:eve@example.com" ], "condition": { "title": "expirable access",
        "description": "Does not grant access after Sep 2020", "expression":
        "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
        "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: -
        members: - user:mike@example.com - group:admins@example.com -
        domain:google.com -
        serviceAccount:my-project-id@appspot.gserviceaccount.com role:
        roles/resourcemanager.organizationAdmin - members: -
        user:eve@example.com role: roles/resourcemanager.organizationViewer
        condition: title: expirable access description: Does not grant access
        after Sep 2020 expression: request.time <
        timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ```
        For a description of IAM and its features, see the [IAM
        documentation](https://cloud.google.com/iam/docs/).
      type: object
      properties:
        version:
          description: >-
            Specifies the format of the policy. Valid values are `0`, `1`, and
            `3`. Requests that specify an invalid value are rejected. Any
            operation that affects conditional role bindings must specify
            version `3`. This requirement applies to the following operations: *
            Getting a policy that includes a conditional role binding * Adding a
            conditional role binding to a policy * Changing a conditional role
            binding in a policy * Removing any role binding, with or without a
            condition, from a policy that includes conditions **Important:** If
            you use IAM Conditions, you must include the `etag` field whenever
            you call `setIamPolicy`. If you omit this field, then IAM allows you
            to overwrite a version `3` policy with a version `1` policy, and all
            of the conditions in the version `3` policy are lost. If a policy
            does not include any conditions, operations on that policy may
            specify any valid version or leave the field unset. To learn which
            resources support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          type: integer
          format: int32
        bindings:
          description: >-
            Associates a list of `members`, or principals, with a `role`.
            Optionally, may specify a `condition` that determines how and when
            the `bindings` are applied. Each of the `bindings` must contain at
            least one principal. The `bindings` in a `Policy` can refer to up to
            1,500 principals; up to 250 of these principals can be Google
            groups. Each occurrence of a principal counts towards these limits.
            For example, if the `bindings` grant 50 different roles to
            `user:alice@example.com`, and not to any other principal, then you
            can add another 1,450 principals to the `bindings` in the `Policy`.
          type: array
          items:
            $ref: '#/components/schemas/Binding'
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          type: array
          items:
            $ref: '#/components/schemas/AuditConfig'
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy. **Important:** If you use
            IAM Conditions, you must include the `etag` field whenever you call
            `setIamPolicy`. If you omit this field, then IAM allows you to
            overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.
          type: string
          format: byte
    Binding:
      id: Binding
      description: Associates `members`, or principals, with a `role`.
      type: object
      properties:
        role:
          description: >-
            Role that is assigned to the list of `members`, or principals. For
            example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an
            overview of the IAM roles and permissions, see the [IAM
            documentation](https://cloud.google.com/iam/docs/roles-overview).
            For a list of the available pre-defined roles, see
            [here](https://cloud.google.com/iam/docs/understanding-roles).
          type: string
        members:
          description: >-
            Specifies the principals requesting access for a Google Cloud
            resource. `members` can have the following values: * `allUsers`: A
            special identifier that represents anyone who is on the internet;
            with or without a Google account. * `allAuthenticatedUsers`: A
            special identifier that represents anyone who is authenticated with
            a Google account or a service account. Does not include identities
            that come from external identity providers (IdPs) through identity
            federation. * `user:{emailid}`: An email address that represents a
            specific Google account. For example, `alice@example.com` . *
            `serviceAccount:{emailid}`: An email address that represents a
            Google service account. For example,
            `my-other-app@appspot.gserviceaccount.com`. *
            `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
            An identifier for a [Kubernetes service
            account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
            For example,
            `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
            `group:{emailid}`: An email address that represents a Google group.
            For example, `admins@example.com`. * `domain:{domain}`: The G Suite
            domain (primary) that represents all the users of that domain. For
            example, `google.com` or `example.com`. *
            `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workforce identity pool. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`:
            All workforce identities in a group. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All workforce identities with a specific attribute value. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`:
            All identities in a workforce identity pool. *
            `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workload identity pool. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`:
            A workload identity pool group. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All identities in a workload identity pool with a certain attribute.
            *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`:
            All identities in a workload identity pool. *
            `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus
            unique identifier) representing a user that has been recently
            deleted. For example, `alice@example.com?uid=123456789012345678901`.
            If the user is recovered, this value reverts to `user:{emailid}` and
            the recovered user retains the role in the binding. *
            `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
            (plus unique identifier) representing a service account that has
            been recently deleted. For example,
            `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
            If the service account is undeleted, this value reverts to
            `serviceAccount:{emailid}` and the undeleted service account retains
            the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:
            An email address (plus unique identifier) representing a Google
            group that has been recently deleted. For example,
            `admins@example.com?uid=123456789012345678901`. If the group is
            recovered, this value reverts to `group:{emailid}` and the recovered
            group retains the role in the binding. *
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            Deleted single identity in a workforce identity pool. For example,
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
          type: array
          items:
            type: string
        condition:
          description: >-
            The condition that is associated with this binding. If the condition
            evaluates to `true`, then this binding applies to the current
            request. If the condition evaluates to `false`, then this binding
            does not apply to the current request. However, a different role
            binding might grant the same role to one or more of the principals
            in this binding. To learn which resources support conditions in
            their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          $ref: '#/components/schemas/Expr'
    Expr:
      id: Expr
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      type: object
      properties:
        expression:
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
          type: string
        title:
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
        description:
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
          type: string
        location:
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
          type: string
    AuditConfig:
      id: AuditConfig
      description: >-
        Specifies the audit configuration for a service. The configuration
        determines which permission types are logged, and what identities, if
        any, are exempted from logging. An AuditConfig must have one or more
        AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
        specific service, the union of the two AuditConfigs is used for that
        service: the log_types specified in each AuditConfig are enabled, and
        the exempted_members in each AuditLogConfig are exempted. Example Policy
        with multiple AuditConfigs: { "audit_configs": [ { "service":
        "allServices", "audit_log_configs": [ { "log_type": "DATA_READ",
        "exempted_members": [ "user:jose@example.com" ] }, { "log_type":
        "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service":
        "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type":
        "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [
        "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy
        enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts
        `jose@example.com` from DATA_READ logging, and `aliya@example.com` from
        DATA_WRITE logging.
      type: object
      properties:
        service:
          description: >-
            Specifies a service that will be enabled for audit logging. For
            example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
          type: string
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          type: array
          items:
            $ref: '#/components/schemas/AuditLogConfig'
    AuditLogConfig:
      id: AuditLogConfig
      description: >-
        Provides the configuration for logging a type of permissions. Example: {
        "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
        "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This
        enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        jose@example.com from DATA_READ logging.
      type: object
      properties:
        logType:
          description: The log type that this config enables.
          type: string
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
        exemptedMembers:
          description: >-
            Specifies the identities that do not cause logging for this type of
            permission. Follows the same format of Binding.members.
          type: array
          items:
            type: string
    TestIamPermissionsRequest:
      id: TestIamPermissionsRequest
      description: Request message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          description: >-
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as `*` or `storage.*`) are not allowed. For more
            information see [IAM
            Overview](https://cloud.google.com/iam/docs/overview#permissions).
          type: array
          items:
            type: string
    TestIamPermissionsResponse:
      id: TestIamPermissionsResponse
      description: Response message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          description: >-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          type: array
          items:
            type: string
    OperationMetadata:
      id: OperationMetadata
      description: Represents the metadata of the long-running operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        target:
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        requestedCancellation:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have been cancelled successfully
            have google.longrunning.Operation.error value with a
            google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
    LocationMetadata:
      id: LocationMetadata
      description: Metadata about locations
      type: object
      properties:
        locationFeatures:
          description: List of supported features
          type: array
          items:
            type: string
            enumDescriptions:
              - No publicly supported feature in this location
              - Site-to-cloud spokes are supported in this location
              - Site-to-site spokes are supported in this location
              - Gateway spokes are supported in this location.
            enum:
              - LOCATION_FEATURE_UNSPECIFIED
              - SITE_TO_CLOUD_SPOKES
              - SITE_TO_SITE_SPOKES
              - GATEWAY_SPOKES
    AcceptHubSpokeResponse:
      id: AcceptHubSpokeResponse
      description: The response for HubService.AcceptHubSpoke.
      type: object
      properties:
        spoke:
          description: The spoke that was operated on.
          $ref: '#/components/schemas/Spoke'
    RejectHubSpokeResponse:
      id: RejectHubSpokeResponse
      description: The response for HubService.RejectHubSpoke.
      type: object
      properties:
        spoke:
          description: The spoke that was operated on.
          $ref: '#/components/schemas/Spoke'
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    locations:
      id: google.networkconnectivity.locations
      name: locations
      title: Locations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: google.networkconnectivity.operations
      name: operations
      title: Operations
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    service_connection_maps:
      id: google.networkconnectivity.service_connection_maps
      name: service_connection_maps
      title: Service_connection_maps
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionMaps/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.serviceConnectionMaps
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionMaps/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionMaps~1{serviceConnectionMapsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionMaps~1{serviceConnectionMapsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionMaps~1{serviceConnectionMapsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/service_connection_maps/methods/get
          - $ref: >-
              #/components/x-stackQL-resources/service_connection_maps/methods/list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/service_connection_maps/methods/create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/service_connection_maps/methods/patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/service_connection_maps/methods/delete
    service_connection_maps_iam_policies:
      id: google.networkconnectivity.service_connection_maps_iam_policies
      name: service_connection_maps_iam_policies
      title: Service_connection_maps_iam_policies
      methods:
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionMaps~1{serviceConnectionMapsId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionMaps~1{serviceConnectionMapsId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionMaps~1{serviceConnectionMapsId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/service_connection_maps_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/service_connection_maps_iam_policies/methods/set_iam_policy
        delete: []
    service_connection_policies:
      id: google.networkconnectivity.service_connection_policies
      name: service_connection_policies
      title: Service_connection_policies
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionPolicies/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.serviceConnectionPolicies
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionPolicies/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionPolicies~1{serviceConnectionPoliciesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionPolicies~1{serviceConnectionPoliciesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionPolicies~1{serviceConnectionPoliciesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/service_connection_policies/methods/get
          - $ref: >-
              #/components/x-stackQL-resources/service_connection_policies/methods/list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/service_connection_policies/methods/create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/service_connection_policies/methods/patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/service_connection_policies/methods/delete
    service_connection_policies_iam_policies:
      id: google.networkconnectivity.service_connection_policies_iam_policies
      name: service_connection_policies_iam_policies
      title: Service_connection_policies_iam_policies
      methods:
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionPolicies~1{serviceConnectionPoliciesId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionPolicies~1{serviceConnectionPoliciesId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionPolicies~1{serviceConnectionPoliciesId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/service_connection_policies_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/service_connection_policies_iam_policies/methods/set_iam_policy
        delete: []
    service_classes:
      id: google.networkconnectivity.service_classes
      name: service_classes
      title: Service_classes
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceClasses/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.serviceClasses
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceClasses~1{serviceClassesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceClasses~1{serviceClassesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceClasses~1{serviceClassesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/service_classes/methods/get'
          - $ref: '#/components/x-stackQL-resources/service_classes/methods/list'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/service_classes/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/service_classes/methods/delete'
    service_classes_iam_policies:
      id: google.networkconnectivity.service_classes_iam_policies
      name: service_classes_iam_policies
      title: Service_classes_iam_policies
      methods:
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceClasses~1{serviceClassesId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceClasses~1{serviceClassesId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceClasses~1{serviceClassesId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/service_classes_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/service_classes_iam_policies/methods/set_iam_policy
        delete: []
    service_connection_tokens:
      id: google.networkconnectivity.service_connection_tokens
      name: service_connection_tokens
      title: Service_connection_tokens
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionTokens~1{serviceConnectionTokensId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionTokens~1{serviceConnectionTokensId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionTokens/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.serviceConnectionTokens
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1serviceConnectionTokens/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/service_connection_tokens/methods/get
          - $ref: >-
              #/components/x-stackQL-resources/service_connection_tokens/methods/list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/service_connection_tokens/methods/create
        update: []
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/service_connection_tokens/methods/delete
    multicloud_data_transfer_configs:
      id: google.networkconnectivity.multicloud_data_transfer_configs
      name: multicloud_data_transfer_configs
      title: Multicloud_data_transfer_configs
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1multicloudDataTransferConfigs/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.multicloudDataTransferConfigs
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1multicloudDataTransferConfigs/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1multicloudDataTransferConfigs~1{multicloudDataTransferConfigsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1multicloudDataTransferConfigs~1{multicloudDataTransferConfigsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1multicloudDataTransferConfigs~1{multicloudDataTransferConfigsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/multicloud_data_transfer_configs/methods/get
          - $ref: >-
              #/components/x-stackQL-resources/multicloud_data_transfer_configs/methods/list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/multicloud_data_transfer_configs/methods/create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/multicloud_data_transfer_configs/methods/patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/multicloud_data_transfer_configs/methods/delete
    destinations:
      id: google.networkconnectivity.destinations
      name: destinations
      title: Destinations
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1multicloudDataTransferConfigs~1{multicloudDataTransferConfigsId}~1destinations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.destinations
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1multicloudDataTransferConfigs~1{multicloudDataTransferConfigsId}~1destinations/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1multicloudDataTransferConfigs~1{multicloudDataTransferConfigsId}~1destinations~1{destinationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1multicloudDataTransferConfigs~1{multicloudDataTransferConfigsId}~1destinations~1{destinationsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1multicloudDataTransferConfigs~1{multicloudDataTransferConfigsId}~1destinations~1{destinationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/destinations/methods/get'
          - $ref: '#/components/x-stackQL-resources/destinations/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/destinations/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/destinations/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/destinations/methods/delete'
    multicloud_data_transfer_supported_services:
      id: google.networkconnectivity.multicloud_data_transfer_supported_services
      name: multicloud_data_transfer_supported_services
      title: Multicloud_data_transfer_supported_services
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1multicloudDataTransferSupportedServices~1{multicloudDataTransferSupportedServicesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1multicloudDataTransferSupportedServices/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.multicloudDataTransferSupportedServices
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/multicloud_data_transfer_supported_services/methods/get
          - $ref: >-
              #/components/x-stackQL-resources/multicloud_data_transfer_supported_services/methods/list
        insert: []
        update: []
        replace: []
        delete: []
    hubs:
      id: google.networkconnectivity.hubs
      name: hubs
      title: Hubs
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.hubs
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        query_status:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}:queryStatus/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reject_spoke:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}:rejectSpoke/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accept_spoke:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}:acceptSpoke/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accept_spoke_update:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}:acceptSpokeUpdate/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reject_spoke_update:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}:rejectSpokeUpdate/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hubs/methods/get'
          - $ref: '#/components/x-stackQL-resources/hubs/methods/query_status'
          - $ref: '#/components/x-stackQL-resources/hubs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/hubs/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/hubs/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/hubs/methods/delete'
    spokes:
      id: google.networkconnectivity.spokes
      name: spokes
      title: Spokes
      methods:
        list_spokes:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}:listSpokes/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.spokes
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1spokes/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.spokes
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1spokes/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1spokes~1{spokesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1spokes~1{spokesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1spokes~1{spokesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/spokes/methods/get'
          - $ref: '#/components/x-stackQL-resources/spokes/methods/list_spokes'
          - $ref: '#/components/x-stackQL-resources/spokes/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/spokes/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/spokes/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/spokes/methods/delete'
    hubs_iam_policies:
      id: google.networkconnectivity.hubs_iam_policies
      name: hubs_iam_policies
      title: Hubs_iam_policies
      methods:
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/hubs_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/hubs_iam_policies/methods/set_iam_policy
        delete: []
    route_tables:
      id: google.networkconnectivity.route_tables
      name: route_tables
      title: Route_tables
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}~1routeTables~1{routeTablesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}~1routeTables/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.routeTables
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/route_tables/methods/get'
          - $ref: '#/components/x-stackQL-resources/route_tables/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    routes:
      id: google.networkconnectivity.routes
      name: routes
      title: Routes
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}~1routeTables~1{routeTablesId}~1routes~1{routesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}~1routeTables~1{routeTablesId}~1routes/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.routes
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/routes/methods/get'
          - $ref: '#/components/x-stackQL-resources/routes/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    groups:
      id: google.networkconnectivity.groups
      name: groups
      title: Groups
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}~1groups~1{groupsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}~1groups~1{groupsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}~1groups/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.groups
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/groups/methods/get'
          - $ref: '#/components/x-stackQL-resources/groups/methods/list'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/groups/methods/patch'
        replace: []
        delete: []
    groups_iam_policies:
      id: google.networkconnectivity.groups_iam_policies
      name: groups_iam_policies
      title: Groups_iam_policies
      methods:
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}~1groups~1{groupsId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}~1groups~1{groupsId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1global~1hubs~1{hubsId}~1groups~1{groupsId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/groups_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/groups_iam_policies/methods/set_iam_policy
        delete: []
    policy_based_routes:
      id: google.networkconnectivity.policy_based_routes
      name: policy_based_routes
      title: Policy_based_routes
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1global~1policyBasedRoutes/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.policyBasedRoutes
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1global~1policyBasedRoutes/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1global~1policyBasedRoutes~1{policyBasedRoutesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1global~1policyBasedRoutes~1{policyBasedRoutesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/policy_based_routes/methods/get'
          - $ref: '#/components/x-stackQL-resources/policy_based_routes/methods/list'
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/policy_based_routes/methods/create
        update: []
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/policy_based_routes/methods/delete
    policy_based_routes_iam_policies:
      id: google.networkconnectivity.policy_based_routes_iam_policies
      name: policy_based_routes_iam_policies
      title: Policy_based_routes_iam_policies
      methods:
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1global~1policyBasedRoutes~1{policyBasedRoutesId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1global~1policyBasedRoutes~1{policyBasedRoutesId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1global~1policyBasedRoutes~1{policyBasedRoutesId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/policy_based_routes_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/policy_based_routes_iam_policies/methods/set_iam_policy
        delete: []
    spokes_iam_policies:
      id: google.networkconnectivity.spokes_iam_policies
      name: spokes_iam_policies
      title: Spokes_iam_policies
      methods:
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1spokes~1{spokesId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1spokes~1{spokesId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1spokes~1{spokesId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/spokes_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/spokes_iam_policies/methods/set_iam_policy
        delete: []
    internal_ranges:
      id: google.networkconnectivity.internal_ranges
      name: internal_ranges
      title: Internal_ranges
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1internalRanges/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.internalRanges
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1internalRanges/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1internalRanges~1{internalRangesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1internalRanges~1{internalRangesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1internalRanges~1{internalRangesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/internal_ranges/methods/get'
          - $ref: '#/components/x-stackQL-resources/internal_ranges/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/internal_ranges/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/internal_ranges/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/internal_ranges/methods/delete'
    internal_ranges_iam_policies:
      id: google.networkconnectivity.internal_ranges_iam_policies
      name: internal_ranges_iam_policies
      title: Internal_ranges_iam_policies
      methods:
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1internalRanges~1{internalRangesId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1internalRanges~1{internalRangesId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1internalRanges~1{internalRangesId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/internal_ranges_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/internal_ranges_iam_policies/methods/set_iam_policy
        delete: []
    regional_endpoints:
      id: google.networkconnectivity.regional_endpoints
      name: regional_endpoints
      title: Regional_endpoints
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1regionalEndpoints/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.regionalEndpoints
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1regionalEndpoints/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1regionalEndpoints~1{regionalEndpointsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1regionalEndpoints~1{regionalEndpointsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/regional_endpoints/methods/get'
          - $ref: '#/components/x-stackQL-resources/regional_endpoints/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/regional_endpoints/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/regional_endpoints/methods/delete'
paths:
  /v1/projects/{projectsId}/locations:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Lists information about the supported locations for this service.
      operationId: networkconnectivity.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: extraLocationTypes
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: networkconnectivity.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: networkconnectivity.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: networkconnectivity.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: networkconnectivity.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        `1`, corresponding to `Code.CANCELLED`.
      operationId: networkconnectivity.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleLongrunningCancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionMaps:
    parameters: *ref_1
    get:
      description: Lists ServiceConnectionMaps in a given project and location.
      operationId: networkconnectivity.projects.locations.serviceConnectionMaps.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceConnectionMapsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new ServiceConnectionMap in a given project and location.
      operationId: networkconnectivity.projects.locations.serviceConnectionMaps.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceConnectionMap'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: serviceConnectionMapId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionMaps/{serviceConnectionMapsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single ServiceConnectionMap.
      operationId: networkconnectivity.projects.locations.serviceConnectionMaps.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceConnectionMap'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionMapsId
          required: true
          schema:
            type: string
    patch:
      description: Updates the parameters of a single ServiceConnectionMap.
      operationId: networkconnectivity.projects.locations.serviceConnectionMaps.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceConnectionMap'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionMapsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
    delete:
      description: Deletes a single ServiceConnectionMap.
      operationId: networkconnectivity.projects.locations.serviceConnectionMaps.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionMapsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionMaps/{serviceConnectionMapsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: >-
        networkconnectivity.projects.locations.serviceConnectionMaps.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionMapsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionMaps/{serviceConnectionMapsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: >-
        networkconnectivity.projects.locations.serviceConnectionMaps.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionMapsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionMaps/{serviceConnectionMapsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: >-
        networkconnectivity.projects.locations.serviceConnectionMaps.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionMapsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionPolicies:
    parameters: *ref_1
    get:
      description: Lists ServiceConnectionPolicies in a given project and location.
      operationId: networkconnectivity.projects.locations.serviceConnectionPolicies.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceConnectionPoliciesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new ServiceConnectionPolicy in a given project and location.
      operationId: networkconnectivity.projects.locations.serviceConnectionPolicies.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceConnectionPolicy'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: serviceConnectionPolicyId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionPolicies/{serviceConnectionPoliciesId}:
    parameters: *ref_1
    get:
      description: Gets details of a single ServiceConnectionPolicy.
      operationId: networkconnectivity.projects.locations.serviceConnectionPolicies.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceConnectionPolicy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionPoliciesId
          required: true
          schema:
            type: string
    patch:
      description: Updates the parameters of a single ServiceConnectionPolicy.
      operationId: networkconnectivity.projects.locations.serviceConnectionPolicies.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceConnectionPolicy'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
    delete:
      description: Deletes a single ServiceConnectionPolicy.
      operationId: networkconnectivity.projects.locations.serviceConnectionPolicies.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionPolicies/{serviceConnectionPoliciesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: >-
        networkconnectivity.projects.locations.serviceConnectionPolicies.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionPoliciesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionPolicies/{serviceConnectionPoliciesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: >-
        networkconnectivity.projects.locations.serviceConnectionPolicies.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionPolicies/{serviceConnectionPoliciesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: >-
        networkconnectivity.projects.locations.serviceConnectionPolicies.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionPoliciesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/serviceClasses:
    parameters: *ref_1
    get:
      description: Lists ServiceClasses in a given project and location.
      operationId: networkconnectivity.projects.locations.serviceClasses.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceClassesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/serviceClasses/{serviceClassesId}:
    parameters: *ref_1
    get:
      description: Gets details of a single ServiceClass.
      operationId: networkconnectivity.projects.locations.serviceClasses.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceClass'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceClassesId
          required: true
          schema:
            type: string
    patch:
      description: Updates the parameters of a single ServiceClass.
      operationId: networkconnectivity.projects.locations.serviceClasses.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceClass'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceClassesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
    delete:
      description: Deletes a single ServiceClass.
      operationId: networkconnectivity.projects.locations.serviceClasses.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceClassesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/serviceClasses/{serviceClassesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: networkconnectivity.projects.locations.serviceClasses.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceClassesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/serviceClasses/{serviceClassesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: networkconnectivity.projects.locations.serviceClasses.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceClassesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/serviceClasses/{serviceClassesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: networkconnectivity.projects.locations.serviceClasses.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceClassesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionTokens/{serviceConnectionTokensId}:
    parameters: *ref_1
    get:
      description: Gets details of a single ServiceConnectionToken.
      operationId: networkconnectivity.projects.locations.serviceConnectionTokens.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceConnectionToken'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionTokensId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a single ServiceConnectionToken.
      operationId: networkconnectivity.projects.locations.serviceConnectionTokens.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionTokensId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionTokens:
    parameters: *ref_1
    get:
      description: Lists ServiceConnectionTokens in a given project and location.
      operationId: networkconnectivity.projects.locations.serviceConnectionTokens.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceConnectionTokensResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new ServiceConnectionToken in a given project and location.
      operationId: networkconnectivity.projects.locations.serviceConnectionTokens.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceConnectionToken'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: serviceConnectionTokenId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/multicloudDataTransferConfigs:
    parameters: *ref_1
    get:
      description: Lists MulticloudDataTransferConfigs in a given project and location.
      operationId: >-
        networkconnectivity.projects.locations.multicloudDataTransferConfigs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMulticloudDataTransferConfigsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: returnPartialSuccess
          schema:
            type: boolean
    post:
      description: Creates a MulticloudDataTransferConfig in a given project and location.
      operationId: >-
        networkconnectivity.projects.locations.multicloudDataTransferConfigs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MulticloudDataTransferConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: multicloudDataTransferConfigId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/multicloudDataTransferConfigs/{multicloudDataTransferConfigsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single MulticloudDataTransferConfig.
      operationId: networkconnectivity.projects.locations.multicloudDataTransferConfigs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MulticloudDataTransferConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: multicloudDataTransferConfigsId
          required: true
          schema:
            type: string
    patch:
      description: Updates a MulticloudDataTransferConfig in a given project and location.
      operationId: >-
        networkconnectivity.projects.locations.multicloudDataTransferConfigs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MulticloudDataTransferConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: multicloudDataTransferConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
    delete:
      description: Deletes a single MulticloudDataTransferConfig.
      operationId: >-
        networkconnectivity.projects.locations.multicloudDataTransferConfigs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: multicloudDataTransferConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/multicloudDataTransferConfigs/{multicloudDataTransferConfigsId}/destinations:
    parameters: *ref_1
    get:
      description: Lists Destinations in a given project and location.
      operationId: >-
        networkconnectivity.projects.locations.multicloudDataTransferConfigs.destinations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDestinationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: multicloudDataTransferConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: returnPartialSuccess
          schema:
            type: boolean
    post:
      description: Creates a Destination in a given project and location.
      operationId: >-
        networkconnectivity.projects.locations.multicloudDataTransferConfigs.destinations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Destination'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: multicloudDataTransferConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: destinationId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/multicloudDataTransferConfigs/{multicloudDataTransferConfigsId}/destinations/{destinationsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single Destination.
      operationId: >-
        networkconnectivity.projects.locations.multicloudDataTransferConfigs.destinations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Destination'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: multicloudDataTransferConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: destinationsId
          required: true
          schema:
            type: string
    patch:
      description: Updates a Destination in a given project and location.
      operationId: >-
        networkconnectivity.projects.locations.multicloudDataTransferConfigs.destinations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Destination'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: multicloudDataTransferConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: destinationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
    delete:
      description: Deletes a single Destination.
      operationId: >-
        networkconnectivity.projects.locations.multicloudDataTransferConfigs.destinations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: multicloudDataTransferConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: destinationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/multicloudDataTransferSupportedServices/{multicloudDataTransferSupportedServicesId}:
    parameters: *ref_1
    get:
      description: Gets details of a single MulticloudDataTransferSupportedServices.
      operationId: >-
        networkconnectivity.projects.locations.multicloudDataTransferSupportedServices.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MulticloudDataTransferSupportedService'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: multicloudDataTransferSupportedServicesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/multicloudDataTransferSupportedServices:
    parameters: *ref_1
    get:
      description: >-
        Lists the supported services for Multicloud Data Transfer. This is a
        passthrough method.
      operationId: >-
        networkconnectivity.projects.locations.multicloudDataTransferSupportedServices.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ListMulticloudDataTransferSupportedServicesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/global/hubs:
    parameters: *ref_1
    get:
      description: >-
        Lists the Network Connectivity Center hubs associated with a given
        project.
      operationId: networkconnectivity.projects.locations.global.hubs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHubsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new Network Connectivity Center hub in the specified project.
      operationId: networkconnectivity.projects.locations.global.hubs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hub'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: hubId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/global/hubs/{hubsId}:
    parameters: *ref_1
    get:
      description: Gets details about a Network Connectivity Center hub.
      operationId: networkconnectivity.projects.locations.global.hubs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hub'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates the description and/or labels of a Network Connectivity Center
        hub.
      operationId: networkconnectivity.projects.locations.global.hubs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hub'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
    delete:
      description: Deletes a Network Connectivity Center hub.
      operationId: networkconnectivity.projects.locations.global.hubs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/global/hubs/{hubsId}:listSpokes:
    parameters: *ref_1
    get:
      description: >-
        Lists the Network Connectivity Center spokes associated with a specified
        hub and location. The list includes both spokes that are attached to the
        hub and spokes that have been proposed but not yet accepted.
      operationId: networkconnectivity.projects.locations.global.hubs.listSpokes
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHubSpokesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
        - in: query
          name: spokeLocations
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
  /v1/projects/{projectsId}/locations/global/hubs/{hubsId}:queryStatus:
    parameters: *ref_1
    get:
      description: >-
        Query the Private Service Connect propagation status of a Network
        Connectivity Center hub.
      operationId: networkconnectivity.projects.locations.global.hubs.queryStatus
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryHubStatusResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: groupBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/global/hubs/{hubsId}:rejectSpoke:
    parameters: *ref_1
    post:
      description: >-
        Rejects a Network Connectivity Center spoke from being attached to a
        hub. If the spoke was previously in the `ACTIVE` state, it transitions
        to the `INACTIVE` state and is no longer able to connect to other spokes
        that are attached to the hub.
      operationId: networkconnectivity.projects.locations.global.hubs.rejectSpoke
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RejectHubSpokeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/global/hubs/{hubsId}:acceptSpoke:
    parameters: *ref_1
    post:
      description: >-
        Accepts a proposal to attach a Network Connectivity Center spoke to a
        hub.
      operationId: networkconnectivity.projects.locations.global.hubs.acceptSpoke
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptHubSpokeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/global/hubs/{hubsId}:acceptSpokeUpdate:
    parameters: *ref_1
    post:
      description: >-
        Accepts a proposal to update a Network Connectivity Center spoke in a
        hub.
      operationId: networkconnectivity.projects.locations.global.hubs.acceptSpokeUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptSpokeUpdateRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/global/hubs/{hubsId}:rejectSpokeUpdate:
    parameters: *ref_1
    post:
      description: >-
        Rejects a proposal to update a Network Connectivity Center spoke in a
        hub.
      operationId: networkconnectivity.projects.locations.global.hubs.rejectSpokeUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RejectSpokeUpdateRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/global/hubs/{hubsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: networkconnectivity.projects.locations.global.hubs.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/global/hubs/{hubsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: networkconnectivity.projects.locations.global.hubs.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/global/hubs/{hubsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: networkconnectivity.projects.locations.global.hubs.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/global/hubs/{hubsId}/routeTables/{routeTablesId}:
    parameters: *ref_1
    get:
      description: Gets details about a Network Connectivity Center route table.
      operationId: networkconnectivity.projects.locations.global.hubs.routeTables.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteTable'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
        - in: path
          name: routeTablesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/global/hubs/{hubsId}/routeTables:
    parameters: *ref_1
    get:
      description: Lists route tables in a given hub.
      operationId: networkconnectivity.projects.locations.global.hubs.routeTables.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRouteTablesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/global/hubs/{hubsId}/routeTables/{routeTablesId}/routes/{routesId}:
    parameters: *ref_1
    get:
      description: Gets details about the specified route.
      operationId: >-
        networkconnectivity.projects.locations.global.hubs.routeTables.routes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
        - in: path
          name: routeTablesId
          required: true
          schema:
            type: string
        - in: path
          name: routesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/global/hubs/{hubsId}/routeTables/{routeTablesId}/routes:
    parameters: *ref_1
    get:
      description: Lists routes in a given route table.
      operationId: >-
        networkconnectivity.projects.locations.global.hubs.routeTables.routes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRoutesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
        - in: path
          name: routeTablesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/global/hubs/{hubsId}/groups/{groupsId}:
    parameters: *ref_1
    get:
      description: Gets details about a Network Connectivity Center group.
      operationId: networkconnectivity.projects.locations.global.hubs.groups.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
    patch:
      description: Updates the parameters of a Network Connectivity Center group.
      operationId: networkconnectivity.projects.locations.global.hubs.groups.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/global/hubs/{hubsId}/groups:
    parameters: *ref_1
    get:
      description: Lists groups in a given hub.
      operationId: networkconnectivity.projects.locations.global.hubs.groups.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGroupsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/global/hubs/{hubsId}/groups/{groupsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: networkconnectivity.projects.locations.global.hubs.groups.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/global/hubs/{hubsId}/groups/{groupsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: networkconnectivity.projects.locations.global.hubs.groups.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/global/hubs/{hubsId}/groups/{groupsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: >-
        networkconnectivity.projects.locations.global.hubs.groups.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/global/policyBasedRoutes:
    parameters: *ref_1
    get:
      description: Lists policy-based routes in a given project and location.
      operationId: networkconnectivity.projects.locations.global.policyBasedRoutes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPolicyBasedRoutesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new policy-based route in a given project and location.
      operationId: networkconnectivity.projects.locations.global.policyBasedRoutes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyBasedRoute'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: policyBasedRouteId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/global/policyBasedRoutes/{policyBasedRoutesId}:
    parameters: *ref_1
    get:
      description: Gets details of a single policy-based route.
      operationId: networkconnectivity.projects.locations.global.policyBasedRoutes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyBasedRoute'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: policyBasedRoutesId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a single policy-based route.
      operationId: networkconnectivity.projects.locations.global.policyBasedRoutes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: policyBasedRoutesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/global/policyBasedRoutes/{policyBasedRoutesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: >-
        networkconnectivity.projects.locations.global.policyBasedRoutes.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: policyBasedRoutesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/global/policyBasedRoutes/{policyBasedRoutesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: >-
        networkconnectivity.projects.locations.global.policyBasedRoutes.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: policyBasedRoutesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/global/policyBasedRoutes/{policyBasedRoutesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: >-
        networkconnectivity.projects.locations.global.policyBasedRoutes.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: policyBasedRoutesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/spokes:
    parameters: *ref_1
    get:
      description: >-
        Lists the Network Connectivity Center spokes in a specified project and
        location.
      operationId: networkconnectivity.projects.locations.spokes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSpokesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a Network Connectivity Center spoke.
      operationId: networkconnectivity.projects.locations.spokes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Spoke'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: spokeId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/spokes/{spokesId}:
    parameters: *ref_1
    get:
      description: Gets details about a Network Connectivity Center spoke.
      operationId: networkconnectivity.projects.locations.spokes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Spoke'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: spokesId
          required: true
          schema:
            type: string
    patch:
      description: Updates the parameters of a Network Connectivity Center spoke.
      operationId: networkconnectivity.projects.locations.spokes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Spoke'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: spokesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
    delete:
      description: Deletes a Network Connectivity Center spoke.
      operationId: networkconnectivity.projects.locations.spokes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: spokesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/spokes/{spokesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: networkconnectivity.projects.locations.spokes.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: spokesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/spokes/{spokesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: networkconnectivity.projects.locations.spokes.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: spokesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/spokes/{spokesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: networkconnectivity.projects.locations.spokes.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: spokesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/internalRanges:
    parameters: *ref_1
    get:
      description: Lists internal ranges in a given project and location.
      operationId: networkconnectivity.projects.locations.internalRanges.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInternalRangesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new internal range in a given project and location.
      operationId: networkconnectivity.projects.locations.internalRanges.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternalRange'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: internalRangeId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/internalRanges/{internalRangesId}:
    parameters: *ref_1
    get:
      description: Gets details of a single internal range.
      operationId: networkconnectivity.projects.locations.internalRanges.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalRange'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: internalRangesId
          required: true
          schema:
            type: string
    patch:
      description: Updates the parameters of a single internal range.
      operationId: networkconnectivity.projects.locations.internalRanges.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternalRange'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: internalRangesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
    delete:
      description: Deletes a single internal range.
      operationId: networkconnectivity.projects.locations.internalRanges.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: internalRangesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/internalRanges/{internalRangesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: networkconnectivity.projects.locations.internalRanges.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: internalRangesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/internalRanges/{internalRangesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: networkconnectivity.projects.locations.internalRanges.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: internalRangesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/internalRanges/{internalRangesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: networkconnectivity.projects.locations.internalRanges.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: internalRangesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/regionalEndpoints:
    parameters: *ref_1
    get:
      description: Lists RegionalEndpoints in a given project and location.
      operationId: networkconnectivity.projects.locations.regionalEndpoints.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRegionalEndpointsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new RegionalEndpoint in a given project and location.
      operationId: networkconnectivity.projects.locations.regionalEndpoints.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionalEndpoint'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: regionalEndpointId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/regionalEndpoints/{regionalEndpointsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single RegionalEndpoint.
      operationId: networkconnectivity.projects.locations.regionalEndpoints.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionalEndpoint'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: regionalEndpointsId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a single RegionalEndpoint.
      operationId: networkconnectivity.projects.locations.regionalEndpoints.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: regionalEndpointsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
