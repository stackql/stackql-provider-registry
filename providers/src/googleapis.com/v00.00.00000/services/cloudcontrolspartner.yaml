openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Cloud Controls Partner API
  description: >-
    Provides insights about your customers and their Assured Workloads based on
    your Sovereign Controls by Partners offering.
  version: v1
  x-discovery-doc-revision: '20241024'
  x-generated-date: '2024-11-06'
externalDocs:
  url: >-
    https://cloud.google.com/sovereign-controls-by-partners/docs/sovereign-partners/reference/rest
servers:
  - url: https://cloudcontrolspartner.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    Workload:
      id: Workload
      description: >-
        Contains metadata around the [Workload
        resource](https://cloud.google.com/assured-workloads/docs/reference/rest/Shared.Types/Workload)
        in the Assured Workloads API.
      type: object
      properties:
        name:
          description: >-
            Identifier. Format:
            `organizations/{organization}/locations/{location}/customers/{customer}/workloads/{workload}`
          type: string
        folderId:
          description: Output only. Folder id this workload is associated with
          readOnly: true
          type: string
          format: int64
        createTime:
          description: Output only. Time the resource was created.
          readOnly: true
          type: string
          format: google-datetime
        folder:
          description: Output only. The name of container folder of the assured workload
          readOnly: true
          type: string
        workloadOnboardingState:
          description: Container for workload onboarding steps.
          $ref: '#/components/schemas/WorkloadOnboardingState'
        isOnboarded:
          description: Indicates whether a workload is fully onboarded.
          type: boolean
        keyManagementProjectId:
          description: The project id of the key management project for the workload
          type: string
        location:
          description: The Google Cloud location of the workload
          type: string
        partner:
          description: Partner associated with this workload.
          type: string
          enumDescriptions:
            - Unknown Partner.
            - Enum representing S3NS (Thales) partner.
            - Enum representing T_SYSTEM (TSI) partner.
            - Enum representing SIA_MINSAIT (Indra) partner.
            - Enum representing PSN (TIM) partner.
            - Enum representing CNTXT (Kingdom of Saudi Arabia) partner.
            - >-
              Enum representing CNXT (Kingdom of Saudi Arabia) partner offering
              without EKM provisioning.
          enum:
            - PARTNER_UNSPECIFIED
            - PARTNER_LOCAL_CONTROLS_BY_S3NS
            - PARTNER_SOVEREIGN_CONTROLS_BY_T_SYSTEMS
            - PARTNER_SOVEREIGN_CONTROLS_BY_SIA_MINSAIT
            - PARTNER_SOVEREIGN_CONTROLS_BY_PSN
            - PARTNER_SOVEREIGN_CONTROLS_BY_CNTXT
            - PARTNER_SOVEREIGN_CONTROLS_BY_CNTXT_NO_EKM
    WorkloadOnboardingState:
      id: WorkloadOnboardingState
      description: Container for workload onboarding steps.
      type: object
      properties:
        onboardingSteps:
          description: List of workload onboarding steps.
          type: array
          items:
            $ref: '#/components/schemas/WorkloadOnboardingStep'
    WorkloadOnboardingStep:
      id: WorkloadOnboardingStep
      description: Container for workload onboarding information.
      type: object
      properties:
        step:
          description: The onboarding step.
          type: string
          enumDescriptions:
            - Unspecified step.
            - EKM Provisioned step.
            - Signed Access Approval step.
          enum:
            - STEP_UNSPECIFIED
            - EKM_PROVISIONED
            - SIGNED_ACCESS_APPROVAL_CONFIGURED
        startTime:
          description: The starting time of the onboarding step.
          type: string
          format: google-datetime
        completionTime:
          description: The completion time of the onboarding step.
          type: string
          format: google-datetime
        completionState:
          description: Output only. The completion state of the onboarding step.
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified completion state.
            - Task started (has start date) but not yet completed.
            - Succeeded state.
            - Failed state.
            - Not applicable state.
          enum:
            - COMPLETION_STATE_UNSPECIFIED
            - PENDING
            - SUCCEEDED
            - FAILED
            - NOT_APPLICABLE
    ListWorkloadsResponse:
      id: ListWorkloadsResponse
      description: Response message for list customer workloads requests.
      type: object
      properties:
        workloads:
          description: List of customer workloads
          type: array
          items:
            $ref: '#/components/schemas/Workload'
        nextPageToken:
          description: >-
            A token that can be sent as `page_token` to retrieve the next page.
            If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Customer:
      id: Customer
      description: Contains metadata around a Cloud Controls Partner Customer
      type: object
      properties:
        name:
          description: >-
            Identifier. Format:
            `organizations/{organization}/locations/{location}/customers/{customer}`
          type: string
        displayName:
          description: Required. Display name for the customer
          type: string
        customerOnboardingState:
          description: Output only. Container for customer onboarding steps
          readOnly: true
          $ref: '#/components/schemas/CustomerOnboardingState'
        isOnboarded:
          description: Output only. Indicates whether a customer is fully onboarded
          readOnly: true
          type: boolean
        organizationDomain:
          description: >-
            Output only. The customer organization domain, extracted from CRM
            Organizationâ€™s display_name field. e.g. "google.com"
          readOnly: true
          type: string
    CustomerOnboardingState:
      id: CustomerOnboardingState
      description: Container for customer onboarding steps
      type: object
      properties:
        onboardingSteps:
          description: List of customer onboarding steps
          type: array
          items:
            $ref: '#/components/schemas/CustomerOnboardingStep'
    CustomerOnboardingStep:
      id: CustomerOnboardingStep
      description: Container for customer onboarding information
      type: object
      properties:
        step:
          description: The onboarding step
          type: string
          enumDescriptions:
            - Unspecified step
            - KAJ Enrollment
            - Customer Environment
          enum:
            - STEP_UNSPECIFIED
            - KAJ_ENROLLMENT
            - CUSTOMER_ENVIRONMENT
        startTime:
          description: The starting time of the onboarding step
          type: string
          format: google-datetime
        completionTime:
          description: The completion time of the onboarding step
          type: string
          format: google-datetime
        completionState:
          description: Output only. Current state of the step
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified completion state.
            - Task started (has start date) but not yet completed.
            - Succeeded state.
            - Failed state.
            - Not applicable state.
          enum:
            - COMPLETION_STATE_UNSPECIFIED
            - PENDING
            - SUCCEEDED
            - FAILED
            - NOT_APPLICABLE
    ListCustomersResponse:
      id: ListCustomersResponse
      description: Response message for list customer Customers requests
      type: object
      properties:
        customers:
          description: List of customers
          type: array
          items:
            $ref: '#/components/schemas/Customer'
        nextPageToken:
          description: >-
            A token that can be sent as `page_token` to retrieve the next page.
            If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    EkmConnections:
      id: EkmConnections
      description: The EKM connections associated with a workload
      type: object
      properties:
        name:
          description: >-
            Identifier. Format:
            `organizations/{organization}/locations/{location}/customers/{customer}/workloads/{workload}/ekmConnections`
          type: string
        ekmConnections:
          description: The EKM connections associated with the workload
          type: array
          items:
            $ref: '#/components/schemas/EkmConnection'
    EkmConnection:
      id: EkmConnection
      description: Details about the EKM connection
      type: object
      properties:
        connectionName:
          description: >-
            Resource name of the EKM connection in the format:
            projects/{project}/locations/{location}/ekmConnections/{ekm_connection}
          type: string
        connectionState:
          description: Output only. The connection state
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified EKM connection state
            - Available EKM connection state
            - Not available EKM connection state
            - Error EKM connection state
            - Permission denied EKM connection state
          enum:
            - CONNECTION_STATE_UNSPECIFIED
            - AVAILABLE
            - NOT_AVAILABLE
            - ERROR
            - PERMISSION_DENIED
        connectionError:
          description: The connection error that occurred if any
          $ref: '#/components/schemas/ConnectionError'
    ConnectionError:
      id: ConnectionError
      description: >-
        Information around the error that occurred if the connection state is
        anything other than available or unspecified
      type: object
      properties:
        errorDomain:
          description: The error domain for the error
          type: string
        errorMessage:
          description: The error message for the error
          type: string
    PartnerPermissions:
      id: PartnerPermissions
      description: The permissions granted to the partner for a workload
      type: object
      properties:
        name:
          description: >-
            Identifier. Format:
            `organizations/{organization}/locations/{location}/customers/{customer}/workloads/{workload}/partnerPermissions`
          type: string
        partnerPermissions:
          description: The partner permissions granted for the workload
          type: array
          items:
            type: string
            enumDescriptions:
              - Unspecified partner permission
              - Permission for Access Transparency and emergency logs
              - Permission for Assured Workloads monitoring violations
              - Permission for Access Approval requests
              - Permission for External Key Manager connection status
              - >-
                Permission for support case details for Access Transparency log
                entries
            enum:
              - PERMISSION_UNSPECIFIED
              - ACCESS_TRANSPARENCY_AND_EMERGENCY_ACCESS_LOGS
              - ASSURED_WORKLOADS_MONITORING
              - ACCESS_APPROVAL_REQUESTS
              - ASSURED_WORKLOADS_EKM_CONNECTION_STATUS
              - ACCESS_TRANSPARENCY_LOGS_SUPPORT_CASE_VIEWER
    ListAccessApprovalRequestsResponse:
      id: ListAccessApprovalRequestsResponse
      description: Response message for list access requests.
      type: object
      properties:
        accessApprovalRequests:
          description: List of access approval requests
          type: array
          items:
            $ref: '#/components/schemas/AccessApprovalRequest'
        nextPageToken:
          description: >-
            A token that can be sent as `page_token` to retrieve the next page.
            If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    AccessApprovalRequest:
      id: AccessApprovalRequest
      description: Details about the Access request.
      type: object
      properties:
        name:
          description: >-
            Identifier. Format:
            `organizations/{organization}/locations/{location}/customers/{customer}/workloads/{workload}/accessApprovalRequests/{access_approval_request}`
          type: string
        requestTime:
          description: The time at which approval was requested.
          type: string
          format: google-datetime
        requestedReason:
          description: The justification for which approval is being requested.
          $ref: '#/components/schemas/AccessReason'
        requestedExpirationTime:
          description: >-
            The requested expiration for the approval. If the request is
            approved, access will be granted from the time of approval until the
            expiration time.
          type: string
          format: google-datetime
    AccessReason:
      id: AccessReason
      description: Reason for the access.
      type: object
      properties:
        type:
          description: Type of access justification.
          type: string
          enumDescriptions:
            - Default value for proto, shouldn't be used.
            - >-
              Customer made a request or raised an issue that required the
              principal to access customer data. `detail` is of the form
              ("#####" is the issue ID): - "Feedback Report: #####" - "Case
              Number: #####" - "Case ID: #####" - "E-PIN Reference: #####" -
              "Google-#####" - "T-#####"
            - >-
              The principal accessed customer data in order to diagnose or
              resolve a suspected issue in services. Often this access is used
              to confirm that customers are not affected by a suspected service
              issue or to remediate a reversible system issue.
            - >-
              Google initiated service for security, fraud, abuse, or compliance
              purposes.
            - >-
              The principal was compelled to access customer data in order to
              respond to a legal third party data request or process, including
              legal processes from customers themselves.
            - >-
              The principal accessed customer data in order to diagnose or
              resolve a suspected issue in services or a known outage.
            - >-
              Similar to 'GOOGLE_INITIATED_SERVICE' or
              'GOOGLE_INITIATED_REVIEW', but with universe agnostic naming. The
              principal accessed customer data in order to diagnose or resolve a
              suspected issue in services or a known outage, or for security,
              fraud, abuse, or compliance review purposes.
          enum:
            - TYPE_UNSPECIFIED
            - CUSTOMER_INITIATED_SUPPORT
            - GOOGLE_INITIATED_SERVICE
            - GOOGLE_INITIATED_REVIEW
            - THIRD_PARTY_DATA_REQUEST
            - GOOGLE_RESPONSE_TO_PRODUCTION_ALERT
            - CLOUD_INITIATED_ACCESS
        detail:
          description: >-
            More detail about certain reason types. See comments for each type
            above.
          type: string
    Partner:
      id: Partner
      description: Message describing Partner resource
      type: object
      properties:
        name:
          description: >-
            Identifier. The resource name of the partner. Format:
            `organizations/{organization}/locations/{location}/partner` Example:
            "organizations/123456/locations/us-central1/partner"
          type: string
        skus:
          description: List of SKUs the partner is offering
          type: array
          items:
            $ref: '#/components/schemas/Sku'
        ekmSolutions:
          description: List of Google Cloud supported EKM partners supported by the partner
          type: array
          items:
            $ref: '#/components/schemas/EkmMetadata'
        operatedCloudRegions:
          description: >-
            List of Google Cloud regions that the partner sells services to
            customers. Valid Google Cloud regions found here:
            https://cloud.google.com/compute/docs/regions-zones
          type: array
          items:
            type: string
        partnerProjectId:
          description: >-
            Google Cloud project ID in the partner's Google Cloud organization
            for receiving enhanced Logs for Partners.
          type: string
        createTime:
          description: Output only. Time the resource was created
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The last time the resource was updated
          readOnly: true
          type: string
          format: google-datetime
    Sku:
      id: Sku
      description: >-
        Represents the SKU a partner owns inside Google Cloud to sell to
        customers.
      type: object
      properties:
        id:
          description: >-
            Argentum product SKU, that is associated with the partner offerings
            to customers used by Syntro for billing purposes. SKUs can represent
            resold Google products or support services.
          type: string
        displayName:
          description: >-
            Display name of the product identified by the SKU. A partner may
            want to show partner branded names for their offerings such as local
            sovereign cloud solutions.
          type: string
    EkmMetadata:
      id: EkmMetadata
      description: Holds information needed by Mudbray to use partner EKMs for workloads.
      type: object
      properties:
        ekmSolution:
          description: The Cloud EKM partner.
          type: string
          enumDescriptions:
            - Unspecified EKM solution
            - EKM Partner Fortanix
            - EKM Partner FutureX
            - EKM Partner Thales
            - EKM Partner Virtu
          enum:
            - EKM_SOLUTION_UNSPECIFIED
            - FORTANIX
            - FUTUREX
            - THALES
            - VIRTRU
        ekmEndpointUri:
          description: >-
            Endpoint for sending requests to the EKM for key provisioning during
            Assured Workload creation.
          type: string
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    ListViolationsResponse:
      id: ListViolationsResponse
      description: Response message for list customer violation requests
      type: object
      properties:
        violations:
          description: List of violation
          type: array
          items:
            $ref: '#/components/schemas/Violation'
        nextPageToken:
          description: >-
            A token that can be sent as `page_token` to retrieve the next page.
            If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: >-
            Workloads that could not be reached due to permission errors or any
            other error. Ref: https://google.aip.dev/217
          type: array
          items:
            type: string
    Violation:
      id: Violation
      description: Details of resource Violation
      type: object
      properties:
        name:
          description: >-
            Identifier. Format:
            `organizations/{organization}/locations/{location}/customers/{customer}/workloads/{workload}/violations/{violation}`
          type: string
        description:
          description: >-
            Output only. Description for the Violation. e.g. OrgPolicy
            gcp.resourceLocations has non compliant value.
          readOnly: true
          type: string
        beginTime:
          description: Output only. Time of the event which triggered the Violation.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The last time when the Violation record was updated.
          readOnly: true
          type: string
          format: google-datetime
        resolveTime:
          description: >-
            Output only. Time of the event which fixed the Violation. If the
            violation is ACTIVE this will be empty.
          readOnly: true
          type: string
          format: google-datetime
        category:
          description: >-
            Output only. Category under which this violation is mapped. e.g.
            Location, Service Usage, Access, Encryption, etc.
          readOnly: true
          type: string
        state:
          description: Output only. State of the violation
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified state.
            - Violation is resolved.
            - Violation is Unresolved
            - Violation is Exception
          enum:
            - STATE_UNSPECIFIED
            - RESOLVED
            - UNRESOLVED
            - EXCEPTION
        nonCompliantOrgPolicy:
          description: >-
            Output only. Immutable. Name of the OrgPolicy which was modified
            with non-compliant change and resulted this violation. Format:
            `projects/{project_number}/policies/{constraint_name}`
            `folders/{folder_id}/policies/{constraint_name}`
            `organizations/{organization_id}/policies/{constraint_name}`
          readOnly: true
          type: string
        folderId:
          description: The folder_id of the violation
          type: string
          format: int64
        remediation:
          description: Output only. Compliance violation remediation
          readOnly: true
          $ref: '#/components/schemas/Remediation'
    Remediation:
      id: Remediation
      description: >-
        Represents remediation guidance to resolve compliance violation for
        AssuredWorkload
      type: object
      properties:
        instructions:
          description: Required. Remediation instructions to resolve violations
          $ref: '#/components/schemas/Instructions'
        compliantValues:
          description: >-
            Values that can resolve the violation For example: for list org
            policy violations, this will either be the list of allowed or denied
            values
          type: array
          items:
            type: string
        remediationType:
          description: >-
            Output only. Remediation type based on the type of org policy values
            violated
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified remediation type
            - Remediation type for boolean org policy
            - >-
              Remediation type for list org policy which have allowed values in
              the monitoring rule
            - >-
              Remediation type for list org policy which have denied values in
              the monitoring rule
            - Remediation type for gcp.restrictCmekCryptoKeyProjects
            - Remediation type for resource violation.
          enum:
            - REMEDIATION_TYPE_UNSPECIFIED
            - REMEDIATION_BOOLEAN_ORG_POLICY_VIOLATION
            - REMEDIATION_LIST_ALLOWED_VALUES_ORG_POLICY_VIOLATION
            - REMEDIATION_LIST_DENIED_VALUES_ORG_POLICY_VIOLATION
            - REMEDIATION_RESTRICT_CMEK_CRYPTO_KEY_PROJECTS_ORG_POLICY_VIOLATION
            - REMEDIATION_RESOURCE_VIOLATION
    Instructions:
      id: Instructions
      description: Instructions to remediate violation
      type: object
      properties:
        gcloudInstructions:
          description: Remediation instructions to resolve violation via gcloud cli
          $ref: '#/components/schemas/Gcloud'
        consoleInstructions:
          description: Remediation instructions to resolve violation via cloud console
          $ref: '#/components/schemas/Console'
    Gcloud:
      id: Gcloud
      description: Remediation instructions to resolve violation via gcloud cli
      type: object
      properties:
        gcloudCommands:
          description: Gcloud command to resolve violation
          type: array
          items:
            type: string
        steps:
          description: Steps to resolve violation via gcloud cli
          type: array
          items:
            type: string
        additionalLinks:
          description: Additional urls for more information about steps
          type: array
          items:
            type: string
    Console:
      id: Console
      description: Remediation instructions to resolve violation via cloud console
      type: object
      properties:
        consoleUris:
          description: Link to console page where violations can be resolved
          type: array
          items:
            type: string
        steps:
          description: Steps to resolve violation via cloud console
          type: array
          items:
            type: string
        additionalLinks:
          description: Additional urls for more information about steps
          type: array
          items:
            type: string
    OperationMetadata:
      id: OperationMetadata
      description: Represents the metadata of the long-running operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        target:
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        requestedCancellation:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have been cancelled successfully
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    partner:
      id: google.cloudcontrolspartner.partner
      name: partner
      title: Partner
      methods:
        get_partner:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1partner/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/partner/methods/get_partner'
        insert: []
        update: []
        replace: []
        delete: []
    customers:
      id: google.cloudcontrolspartner.customers
      name: customers
      title: Customers
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1customers~1{customersId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1customers~1{customersId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1customers~1{customersId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1customers/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.customers
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1customers/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/customers/methods/get'
          - $ref: '#/components/x-stackQL-resources/customers/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/customers/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/customers/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/customers/methods/delete'
    workloads:
      id: google.cloudcontrolspartner.workloads
      name: workloads
      title: Workloads
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1customers~1{customersId}~1workloads~1{workloadsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1customers~1{customersId}~1workloads/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.workloads
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workloads/methods/get'
          - $ref: '#/components/x-stackQL-resources/workloads/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    workloads_ekm_connections:
      id: google.cloudcontrolspartner.workloads_ekm_connections
      name: workloads_ekm_connections
      title: Workloads_ekm_connections
      methods:
        get_ekm_connections:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1customers~1{customersId}~1workloads~1{workloadsId}~1ekmConnections/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/workloads_ekm_connections/methods/get_ekm_connections
        insert: []
        update: []
        replace: []
        delete: []
    workloads_partner_permissions:
      id: google.cloudcontrolspartner.workloads_partner_permissions
      name: workloads_partner_permissions
      title: Workloads_partner_permissions
      methods:
        get_partner_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1customers~1{customersId}~1workloads~1{workloadsId}~1partnerPermissions/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/workloads_partner_permissions/methods/get_partner_permissions
        insert: []
        update: []
        replace: []
        delete: []
    access_approval_requests:
      id: google.cloudcontrolspartner.access_approval_requests
      name: access_approval_requests
      title: Access_approval_requests
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1customers~1{customersId}~1workloads~1{workloadsId}~1accessApprovalRequests/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.accessApprovalRequests
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/access_approval_requests/methods/list
        insert: []
        update: []
        replace: []
        delete: []
    violations:
      id: google.cloudcontrolspartner.violations
      name: violations
      title: Violations
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1customers~1{customersId}~1workloads~1{workloadsId}~1violations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.violations
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1locations~1{locationsId}~1customers~1{customersId}~1workloads~1{workloadsId}~1violations~1{violationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/violations/methods/get'
          - $ref: '#/components/x-stackQL-resources/violations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
paths:
  /v1/organizations/{organizationsId}/locations/{locationsId}/partner:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Get details of a Partner.
      operationId: cloudcontrolspartner.organizations.locations.getPartner
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partner'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/customers/{customersId}:
    parameters: *ref_1
    get:
      description: Gets details of a single customer
      operationId: cloudcontrolspartner.organizations.locations.customers.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: customersId
          required: true
          schema:
            type: string
    patch:
      description: Update details of a single customer
      operationId: cloudcontrolspartner.organizations.locations.customers.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Delete details of a single customer
      operationId: cloudcontrolspartner.organizations.locations.customers.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: customersId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/customers:
    parameters: *ref_1
    get:
      description: >-
        Lists customers of a partner identified by its Google Cloud organization
        ID
      operationId: cloudcontrolspartner.organizations.locations.customers.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCustomersResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new customer.
      operationId: cloudcontrolspartner.organizations.locations.customers.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: customerId
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/customers/{customersId}/workloads/{workloadsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single workload
      operationId: cloudcontrolspartner.organizations.locations.customers.workloads.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workload'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: workloadsId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/customers/{customersId}/workloads:
    parameters: *ref_1
    get:
      description: Lists customer workloads for a given customer org id
      operationId: cloudcontrolspartner.organizations.locations.customers.workloads.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkloadsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/customers/{customersId}/workloads/{workloadsId}/ekmConnections:
    parameters: *ref_1
    get:
      description: Gets the EKM connections associated with a workload
      operationId: >-
        cloudcontrolspartner.organizations.locations.customers.workloads.getEkmConnections
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EkmConnections'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: workloadsId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/customers/{customersId}/workloads/{workloadsId}/partnerPermissions:
    parameters: *ref_1
    get:
      description: Gets the partner permissions granted for a workload
      operationId: >-
        cloudcontrolspartner.organizations.locations.customers.workloads.getPartnerPermissions
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerPermissions'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: workloadsId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/customers/{customersId}/workloads/{workloadsId}/accessApprovalRequests:
    parameters: *ref_1
    get:
      description: >-
        Deprecated: Only returns access approval requests directly associated
        with an assured workload folder.
      operationId: >-
        cloudcontrolspartner.organizations.locations.customers.workloads.accessApprovalRequests.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccessApprovalRequestsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: workloadsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/organizations/{organizationsId}/locations/{locationsId}/customers/{customersId}/workloads/{workloadsId}/violations:
    parameters: *ref_1
    get:
      description: >-
        Lists Violations for a workload Callers may also choose to read across
        multiple Customers or for a single customer as per
        [AIP-159](https://google.aip.dev/159) by using '-' (the hyphen or dash
        character) as a wildcard character instead of {customer} & {workload}.
        Format:
        `organizations/{organization}/locations/{location}/customers/{customer}/workloads/{workload}`
      operationId: >-
        cloudcontrolspartner.organizations.locations.customers.workloads.violations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViolationsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: workloadsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: interval.startTime
          schema:
            type: string
            format: google-datetime
        - in: query
          name: interval.endTime
          schema:
            type: string
            format: google-datetime
  /v1/organizations/{organizationsId}/locations/{locationsId}/customers/{customersId}/workloads/{workloadsId}/violations/{violationsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single Violation.
      operationId: >-
        cloudcontrolspartner.organizations.locations.customers.workloads.violations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Violation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: workloadsId
          required: true
          schema:
            type: string
        - in: path
          name: violationsId
          required: true
          schema:
            type: string
