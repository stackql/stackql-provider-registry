openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Web Risk API
  description: ''
  version: v1
  x-discovery-doc-revision: '20240908'
  x-generated-date: '2024-09-19'
externalDocs:
  url: https://cloud.google.com/web-risk/
servers:
  - url: https://webrisk.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    GoogleCloudWebriskV1SearchHashesResponseThreatHash:
      properties:
        hash:
          description: >-
            A 32 byte SHA256 hash. This field is in binary format. For JSON
            requests, hashes are base64-encoded.
          format: byte
          type: string
        threatTypes:
          items:
            type: string
            enum:
              - THREAT_TYPE_UNSPECIFIED
              - MALWARE
              - SOCIAL_ENGINEERING
              - UNWANTED_SOFTWARE
              - SOCIAL_ENGINEERING_EXTENDED_COVERAGE
            enumDescriptions:
              - >-
                No entries should match this threat type. This threat type is
                unused.
              - Malware targeting any platform.
              - Social engineering targeting any platform.
              - Unwanted software targeting any platform.
              - >-
                A list of extended coverage social engineering URIs targeting
                any platform.
          description: >-
            The ThreatList this threat belongs to. This must contain at least
            one entry.
          type: array
        expireTime:
          format: google-datetime
          description: >-
            The cache lifetime for the returned match. Clients must not cache
            this response past this timestamp to avoid false positives.
          type: string
      id: GoogleCloudWebriskV1SearchHashesResponseThreatHash
      description: Contains threat information on a matching hash.
      type: object
    GoogleProtobufEmpty:
      type: object
      id: GoogleProtobufEmpty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      properties: {}
    GoogleCloudWebriskV1RawHashes:
      type: object
      properties:
        rawHashes:
          description: >-
            The hashes, in binary format, concatenated into one long string.
            Hashes are sorted in lexicographic order. For JSON API users, hashes
            are base64-encoded.
          type: string
          format: byte
        prefixSize:
          description: >-
            The number of bytes for each prefix encoded below. This field can be
            anywhere from 4 (shortest prefix) to 32 (full SHA256 hash). In
            practice this is almost always 4, except in exceptional
            circumstances.
          format: int32
          type: integer
      id: GoogleCloudWebriskV1RawHashes
      description: >-
        The uncompressed threat entries in hash format. Hashes can be anywhere
        from 4 to 32 bytes in size. A large majority are 4 bytes, but some
        hashes are lengthened if they collide with the hash of a popular URI.
        Used for sending ThreatEntryAdditons to clients that do not support
        compression, or when sending non-4-byte hashes to clients that do
        support compression.
    GoogleCloudWebriskV1ThreatEntryAdditions:
      description: >-
        Contains the set of entries to add to a local database. May contain a
        combination of compressed and raw data in a single response.
      id: GoogleCloudWebriskV1ThreatEntryAdditions
      properties:
        riceHashes:
          $ref: '#/components/schemas/GoogleCloudWebriskV1RiceDeltaEncoding'
          description: >-
            The encoded 4-byte prefixes of SHA256-formatted entries, using a
            Golomb-Rice encoding. The hashes are converted to uint32, sorted in
            ascending order, then delta encoded and stored as encoded_data.
        rawHashes:
          items:
            $ref: '#/components/schemas/GoogleCloudWebriskV1RawHashes'
          type: array
          description: >-
            The raw SHA256-formatted entries. Repeated to allow returning sets
            of hashes with different prefix sizes.
      type: object
    GoogleCloudWebriskV1ThreatEntryRemovals:
      description: Contains the set of entries to remove from a local database.
      type: object
      properties:
        riceIndices:
          description: >-
            The encoded local, lexicographically-sorted list indices, using a
            Golomb-Rice encoding. Used for sending compressed removal indices.
            The removal indices (uint32) are sorted in ascending order, then
            delta encoded and stored as encoded_data.
          $ref: '#/components/schemas/GoogleCloudWebriskV1RiceDeltaEncoding'
        rawIndices:
          $ref: '#/components/schemas/GoogleCloudWebriskV1RawIndices'
          description: The raw removal indices for a local list.
      id: GoogleCloudWebriskV1ThreatEntryRemovals
    GoogleCloudWebriskV1Submission:
      properties:
        uri:
          type: string
          description: >-
            Required. The URI that is being reported for malicious content to be
            analyzed.
      type: object
      id: GoogleCloudWebriskV1Submission
      description: Wraps a URI that might be displaying malicious content.
    GoogleCloudWebriskV1RiceDeltaEncoding:
      id: GoogleCloudWebriskV1RiceDeltaEncoding
      properties:
        encodedData:
          format: byte
          type: string
          description: The encoded deltas that are encoded using the Golomb-Rice coder.
        firstValue:
          format: int64
          type: string
          description: >-
            The offset of the first entry in the encoded data, or, if only a
            single integer was encoded, that single integer's value. If the
            field is empty or missing, assume zero.
        riceParameter:
          format: int32
          type: integer
          description: >-
            The Golomb-Rice parameter, which is a number between 2 and 28. This
            field is missing (that is, zero) if `num_entries` is zero.
        entryCount:
          format: int32
          description: >-
            The number of entries that are delta encoded in the encoded data. If
            only a single integer was encoded, this will be zero and the single
            value will be stored in `first_value`.
          type: integer
      type: object
      description: >-
        The Rice-Golomb encoded data. Used for sending compressed 4-byte hashes
        or compressed removal indices.
    GoogleCloudWebriskV1ComputeThreatListDiffResponseChecksum:
      properties:
        sha256:
          description: >-
            The SHA256 hash of the client state; that is, of the sorted list of
            all hashes present in the database.
          type: string
          format: byte
      description: The expected state of a client's local database.
      type: object
      id: GoogleCloudWebriskV1ComputeThreatListDiffResponseChecksum
    GoogleCloudWebriskV1SearchUrisResponseThreatUri:
      id: GoogleCloudWebriskV1SearchUrisResponseThreatUri
      properties:
        expireTime:
          description: >-
            The cache lifetime for the returned match. Clients must not cache
            this response past this timestamp to avoid false positives.
          format: google-datetime
          type: string
        threatTypes:
          type: array
          items:
            enumDescriptions:
              - >-
                No entries should match this threat type. This threat type is
                unused.
              - Malware targeting any platform.
              - Social engineering targeting any platform.
              - Unwanted software targeting any platform.
              - >-
                A list of extended coverage social engineering URIs targeting
                any platform.
            enum:
              - THREAT_TYPE_UNSPECIFIED
              - MALWARE
              - SOCIAL_ENGINEERING
              - UNWANTED_SOFTWARE
              - SOCIAL_ENGINEERING_EXTENDED_COVERAGE
            type: string
          description: The ThreatList this threat belongs to.
      type: object
      description: Contains threat information on a matching uri.
    GoogleLongrunningCancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      type: object
      id: GoogleLongrunningCancelOperationRequest
      properties: {}
    GoogleRpcStatus:
      properties:
        message:
          type: string
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
        details:
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
          type: array
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
        code:
          type: integer
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
      id: GoogleRpcStatus
      type: object
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
    GoogleCloudWebriskV1RawIndices:
      type: object
      id: GoogleCloudWebriskV1RawIndices
      description: A set of raw indices to remove from a local list.
      properties:
        indices:
          type: array
          description: The indices to remove from a lexicographically-sorted local list.
          items:
            type: integer
            format: int32
    GoogleCloudWebriskV1SearchUrisResponse:
      type: object
      id: GoogleCloudWebriskV1SearchUrisResponse
      properties:
        threat:
          $ref: '#/components/schemas/GoogleCloudWebriskV1SearchUrisResponseThreatUri'
          description: >-
            The threat list matches. This might be empty if the URI is on no
            list.
    GoogleLongrunningListOperationsResponse:
      properties:
        operations:
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      description: The response message for Operations.ListOperations.
      type: object
      id: GoogleLongrunningListOperationsResponse
    GoogleLongrunningOperation:
      type: object
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      id: GoogleLongrunningOperation
      properties:
        name:
          type: string
          description: Matches the `/v1/{project-name}/operations/{operation-id}` pattern.
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        metadata:
          description: Contains a `SubmitUriMetadata` object.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/GoogleRpcStatus'
    GoogleCloudWebriskV1SearchHashesResponse:
      id: GoogleCloudWebriskV1SearchHashesResponse
      properties:
        threats:
          description: >-
            The full hashes that matched the requested prefixes. The hash will
            be populated in the key.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudWebriskV1SearchHashesResponseThreatHash
        negativeExpireTime:
          description: >-
            For requested entities that did not match the threat list, how long
            to cache the response until.
          format: google-datetime
          type: string
      type: object
    GoogleCloudWebriskV1ComputeThreatListDiffResponse:
      type: object
      id: GoogleCloudWebriskV1ComputeThreatListDiffResponse
      properties:
        removals:
          $ref: '#/components/schemas/GoogleCloudWebriskV1ThreatEntryRemovals'
          description: >-
            A set of entries to remove from a local threat type's list. This
            field may be empty.
        additions:
          description: A set of entries to add to a local threat type's list.
          $ref: '#/components/schemas/GoogleCloudWebriskV1ThreatEntryAdditions'
        newVersionToken:
          format: byte
          description: >-
            The new opaque client version token. This should be retained by the
            client and passed into the next call of ComputeThreatListDiff as
            'version_token'. A separate version token should be stored and used
            for each threatList.
          type: string
        checksum:
          description: >-
            The expected SHA256 hash of the client state; that is, of the sorted
            list of all hashes present in the database after applying the
            provided diff. If the client state doesn't match the expected state,
            the client must discard this diff and retry later.
          $ref: >-
            #/components/schemas/GoogleCloudWebriskV1ComputeThreatListDiffResponseChecksum
        recommendedNextDiff:
          format: google-datetime
          type: string
          description: >-
            The soonest the client should wait before issuing any diff request.
            Querying sooner is unlikely to produce a meaningful diff. Waiting
            longer is acceptable considering the use case. If this field is not
            set clients may update as soon as they want.
        responseType:
          enumDescriptions:
            - Unknown.
            - >-
              Partial updates are applied to the client's existing local
              database.
            - >-
              Full updates resets the client's entire local database. This means
              that either the client had no state, was seriously out-of-date, or
              the client is believed to be corrupt.
          enum:
            - RESPONSE_TYPE_UNSPECIFIED
            - DIFF
            - RESET
          description: >-
            The type of response. This may indicate that an action must be taken
            by the client when the response is received.
          type: string
  parameters:
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
  x-stackQL-resources:
    uris:
      id: google.webrisk.uris
      name: uris
      title: Uris
      methods:
        search:
          operation:
            $ref: '#/paths/~1v1~1uris:search/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    hashes:
      id: google.webrisk.hashes
      name: hashes
      title: Hashes
      methods:
        search:
          operation:
            $ref: '#/paths/~1v1~1hashes:search/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    submissions:
      id: google.webrisk.submissions
      name: submissions
      title: Submissions
      methods:
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1submissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/submissions/methods/create'
        update: []
        replace: []
        delete: []
    operations:
      id: google.webrisk.operations
      name: operations
      title: Operations
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1operations~1{operationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    threat_lists:
      id: google.webrisk.threat_lists
      name: threat_lists
      title: Threat_lists
      methods:
        compute_diff:
          operation:
            $ref: '#/paths/~1v1~1threatLists:computeDiff/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
paths:
  /v1/uris:search:
    parameters: &ref_1
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/prettyPrint'
    get:
      description: >-
        This method is used to check whether a URI is on a given threatList.
        Multiple threatLists may be searched in a single query. The response
        will list all requested threatLists the URI was found to match. If the
        URI is not found on any of the requested ThreatList an empty response
        will be returned.
      operationId: webrisk.uris.search
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudWebriskV1SearchUrisResponse'
      parameters:
        - in: query
          name: threatTypes
          schema:
            type: string
        - in: query
          name: uri
          schema:
            type: string
  /v1/hashes:search:
    parameters: *ref_1
    get:
      description: >-
        Gets the full hashes that match the requested hash prefix. This is used
        after a hash prefix is looked up in a threatList and there is a match.
        The client side threatList only holds partial hashes so the client must
        query this method to determine if there is a full hash match of a
        threat.
      operationId: webrisk.hashes.search
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudWebriskV1SearchHashesResponse'
      parameters:
        - in: query
          name: threatTypes
          schema:
            type: string
        - in: query
          name: hashPrefix
          schema:
            type: string
            format: byte
  /v1/projects/{projectsId}/submissions:
    parameters: *ref_1
    post:
      description: >-
        Creates a Submission of a URI suspected of containing phishing content
        to be reviewed. If the result verifies the existence of malicious
        phishing content, the site will be added to the [Google's Social
        Engineering
        lists](https://support.google.com/webmasters/answer/6350487/) in order
        to protect users that could get exposed to this threat in the future.
        Only allowlisted projects can use this method during Early Access.
        Please reach out to Sales or your customer engineer to obtain access.
      operationId: webrisk.projects.submissions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudWebriskV1Submission'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudWebriskV1Submission'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: webrisk.projects.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: webrisk.projects.operations.delete
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: webrisk.projects.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleLongrunningCancelOperationRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: webrisk.projects.operations.list
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/threatLists:computeDiff:
    parameters: *ref_1
    get:
      description: >-
        Gets the most recent threat list diffs. These diffs should be applied to
        a local database of hashes to keep it up-to-date. If the local database
        is empty or excessively out-of-date, a complete snapshot of the database
        will be returned. This Method only updates a single ThreatList at a
        time. To update multiple ThreatList databases, this method needs to be
        called once for each list.
      operationId: webrisk.threatLists.computeDiff
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudWebriskV1ComputeThreatListDiffResponse
      parameters:
        - in: query
          name: versionToken
          schema:
            type: string
            format: byte
        - in: query
          name: constraints.supportedCompressions
          schema:
            type: string
        - in: query
          name: constraints.maxDatabaseEntries
          schema:
            type: integer
            format: int32
        - in: query
          name: threatType
          schema:
            type: string
        - in: query
          name: constraints.maxDiffEntries
          schema:
            type: integer
            format: int32
