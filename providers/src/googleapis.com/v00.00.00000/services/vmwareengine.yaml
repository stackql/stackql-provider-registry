openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: VMware Engine API
  description: >-
    The Google VMware Engine API lets you programmatically manage VMware
    environments.
  version: v1
  x-discovery-doc-revision: '20250811'
  x-generated-date: '2025-08-28'
externalDocs:
  url: https://cloud.google.com/solutions/vmware-as-a-service
servers:
  - url: https://vmwareengine.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    ListOperationsResponse:
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Operation:
      id: Operation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    Status:
      id: Status
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    ListPrivateCloudsResponse:
      id: ListPrivateCloudsResponse
      description: Response message for VmwareEngine.ListPrivateClouds
      type: object
      properties:
        privateClouds:
          description: A list of private clouds.
          type: array
          items:
            $ref: '#/components/schemas/PrivateCloud'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: >-
            Locations that could not be reached when making an aggregated query
            using wildcards.
          type: array
          items:
            type: string
    PrivateCloud:
      id: PrivateCloud
      description: >-
        Represents a private cloud resource. Private clouds of type `STANDARD`
        and `TIME_LIMITED` are zonal resources, `STRETCHED` private clouds are
        regional.
      type: object
      properties:
        name:
          description: >-
            Output only. Identifier. The resource name of this private cloud.
            Resource names are schemeless URIs that follow the conventions in
            https://cloud.google.com/apis/design/resource_names. For example:
            `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
          readOnly: true
          type: string
        createTime:
          description: Output only. Creation time of this resource.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Last update time of this resource.
          readOnly: true
          type: string
          format: google-datetime
        deleteTime:
          description: Output only. Time when the resource was scheduled for deletion.
          readOnly: true
          type: string
          format: google-datetime
        expireTime:
          description: Output only. Time when the resource will be irreversibly deleted.
          readOnly: true
          type: string
          format: google-datetime
        state:
          description: >-
            Output only. State of the resource. New values may be added to this
            enum when appropriate.
          readOnly: true
          type: string
          enumDescriptions:
            - The default value. This value should never be used.
            - The private cloud is ready.
            - The private cloud is being created.
            - The private cloud is being updated.
            - The private cloud is in failed state.
            - >-
              The private cloud is scheduled for deletion. The deletion process
              can be cancelled by using the corresponding undelete method.
            - >-
              The private cloud is irreversibly deleted and is being removed
              from the system.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - UPDATING
            - FAILED
            - DELETED
            - PURGING
        networkConfig:
          description: Required. Network configuration of the private cloud.
          $ref: '#/components/schemas/NetworkConfig'
        managementCluster:
          description: >-
            Required. Input only. The management cluster for this private cloud.
            This field is required during creation of the private cloud to
            provide details for the default cluster. The following fields can't
            be changed after private cloud creation:
            `ManagementCluster.clusterId`, `ManagementCluster.nodeTypeId`.
          $ref: '#/components/schemas/ManagementCluster'
        description:
          description: User-provided description for this private cloud.
          type: string
        hcx:
          description: Output only. HCX appliance.
          readOnly: true
          $ref: '#/components/schemas/Hcx'
        nsx:
          description: Output only. NSX appliance.
          readOnly: true
          $ref: '#/components/schemas/Nsx'
        vcenter:
          description: Output only. Vcenter appliance.
          readOnly: true
          $ref: '#/components/schemas/Vcenter'
        uid:
          description: Output only. System-generated unique identifier for the resource.
          readOnly: true
          type: string
        type:
          description: Optional. Type of the private cloud. Defaults to STANDARD.
          type: string
          enumDescriptions:
            - Standard private is a zonal resource, with 3+ nodes. Default type.
            - >-
              Time limited private cloud is a zonal resource, can have only 1
              node and has limited life span. Will be deleted after defined
              period of time, can be converted into standard private cloud by
              expanding it up to 3 or more nodes.
            - >-
              Stretched private cloud is a regional resource with redundancy,
              with a minimum of 6 nodes, nodes count has to be even.
          enum:
            - STANDARD
            - TIME_LIMITED
            - STRETCHED
    NetworkConfig:
      id: NetworkConfig
      description: >-
        Network configuration in the consumer project with which the peering has
        to be done.
      type: object
      properties:
        managementCidr:
          description: Required. Management CIDR used by VMware management appliances.
          type: string
        vmwareEngineNetwork:
          description: >-
            Optional. The relative resource name of the VMware Engine network
            attached to the private cloud. Specify the name in the following
            form:
            `projects/{project}/locations/{location}/vmwareEngineNetworks/{vmware_engine_network_id}`
            where `{project}` can either be a project number or a project ID.
          type: string
        vmwareEngineNetworkCanonical:
          description: >-
            Output only. The canonical name of the VMware Engine network in the
            form:
            `projects/{project_number}/locations/{location}/vmwareEngineNetworks/{vmware_engine_network_id}`
          readOnly: true
          type: string
        managementIpAddressLayoutVersion:
          description: >-
            Output only. The IP address layout version of the management IP
            address range. Possible versions include: *
            `managementIpAddressLayoutVersion=1`: Indicates the legacy IP
            address layout used by some existing private clouds. This is no
            longer supported for new private clouds as it does not support all
            features. * `managementIpAddressLayoutVersion=2`: Indicates the
            latest IP address layout used by all newly created private clouds.
            This version supports all current features.
          readOnly: true
          type: integer
          format: int32
        dnsServerIp:
          description: >-
            Output only. DNS Server IP of the Private Cloud. All DNS queries can
            be forwarded to this address for name resolution of Private Cloud's
            management entities like vCenter, NSX-T Manager and ESXi hosts.
          readOnly: true
          type: string
    ManagementCluster:
      id: ManagementCluster
      description: Management cluster configuration.
      type: object
      properties:
        clusterId:
          description: >-
            Required. The user-provided identifier of the new `Cluster`. The
            identifier must meet the following requirements: * Only contains
            1-63 alphanumeric characters and hyphens * Begins with an
            alphabetical character * Ends with a non-hyphen character * Not
            formatted as a UUID * Complies with [RFC
            1034](https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5)
          type: string
        nodeTypeConfigs:
          description: >-
            Required. The map of cluster node types in this cluster, where the
            key is canonical identifier of the node type (corresponds to the
            `NodeType`).
          type: object
          additionalProperties:
            $ref: '#/components/schemas/NodeTypeConfig'
        stretchedClusterConfig:
          description: >-
            Optional. Configuration of a stretched cluster. Required for
            STRETCHED private clouds.
          $ref: '#/components/schemas/StretchedClusterConfig'
    NodeTypeConfig:
      id: NodeTypeConfig
      description: >-
        Information about the type and number of nodes associated with the
        cluster.
      type: object
      properties:
        nodeCount:
          description: Required. The number of nodes of this type in the cluster
          type: integer
          format: int32
        customCoreCount:
          description: >-
            Optional. Customized number of cores available to each node of the
            type. This number must always be one of
            `nodeType.availableCustomCoreCounts`. If zero is provided max value
            from `nodeType.availableCustomCoreCounts` will be used.
          type: integer
          format: int32
    StretchedClusterConfig:
      id: StretchedClusterConfig
      description: Configuration of a stretched cluster.
      type: object
      properties:
        preferredLocation:
          description: >-
            Required. Zone that will remain operational when connection between
            the two zones is lost. Specify the resource name of a zone that
            belongs to the region of the private cloud. For example:
            `projects/{project}/locations/europe-west3-a` where `{project}` can
            either be a project number or a project ID.
          type: string
        secondaryLocation:
          description: >-
            Required. Additional zone for a higher level of availability and
            load balancing. Specify the resource name of a zone that belongs to
            the region of the private cloud. For example:
            `projects/{project}/locations/europe-west3-b` where `{project}` can
            either be a project number or a project ID.
          type: string
    Hcx:
      id: Hcx
      description: Details about a HCX Cloud Manager appliance.
      type: object
      properties:
        internalIp:
          description: Internal IP address of the appliance.
          type: string
        version:
          description: Version of the appliance.
          type: string
        state:
          description: Output only. The state of the appliance.
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified appliance state. This is the default value.
            - The appliance is operational and can be used.
            - The appliance is being deployed.
            - The appliance is being activated.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - ACTIVATING
        fqdn:
          description: Fully qualified domain name of the appliance.
          type: string
    Nsx:
      id: Nsx
      description: Details about a NSX Manager appliance.
      type: object
      properties:
        internalIp:
          description: Internal IP address of the appliance.
          type: string
        version:
          description: Version of the appliance.
          type: string
        state:
          description: Output only. The state of the appliance.
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified appliance state. This is the default value.
            - The appliance is operational and can be used.
            - The appliance is being deployed.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
        fqdn:
          description: Fully qualified domain name of the appliance.
          type: string
    Vcenter:
      id: Vcenter
      description: Details about a vCenter Server management appliance.
      type: object
      properties:
        internalIp:
          description: Internal IP address of the appliance.
          type: string
        version:
          description: Version of the appliance.
          type: string
        state:
          description: Output only. The state of the appliance.
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified appliance state. This is the default value.
            - The appliance is operational and can be used.
            - The appliance is being deployed.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
        fqdn:
          description: Fully qualified domain name of the appliance.
          type: string
    AcceleratePrivateCloudDeletionRequest:
      id: AcceleratePrivateCloudDeletionRequest
      description: Request message for VmwareEngine.AcceleratePrivateCloudDeletion
      type: object
      properties:
        requestId:
          description: >-
            Optional. The request ID must be a valid UUID with the exception
            that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          type: string
        etag:
          description: >-
            Optional. Checksum used to ensure that the user-provided value is up
            to date before the server processes the request. The server compares
            provided checksum with the current checksum of the resource. If the
            user-provided value is out of date, this request returns an
            `ABORTED` error.
          type: string
    UndeletePrivateCloudRequest:
      id: UndeletePrivateCloudRequest
      description: Request message for VmwareEngine.UndeletePrivateCloud
      type: object
      properties:
        requestId:
          description: >-
            Optional. The request ID must be a valid UUID with the exception
            that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          type: string
    ListClustersResponse:
      id: ListClustersResponse
      description: Response message for VmwareEngine.ListClusters
      type: object
      properties:
        clusters:
          description: A list of private cloud clusters.
          type: array
          items:
            $ref: '#/components/schemas/Cluster'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: >-
            Locations that could not be reached when making an aggregated query
            using wildcards.
          type: array
          items:
            type: string
    Cluster:
      id: Cluster
      description: A cluster in a private cloud.
      type: object
      properties:
        name:
          description: >-
            Output only. Identifier. The resource name of this cluster. Resource
            names are schemeless URIs that follow the conventions in
            https://cloud.google.com/apis/design/resource_names. For example:
            `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/clusters/my-cluster`
          readOnly: true
          type: string
        createTime:
          description: Output only. Creation time of this resource.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Last update time of this resource.
          readOnly: true
          type: string
          format: google-datetime
        state:
          description: Output only. State of the resource.
          readOnly: true
          type: string
          enumDescriptions:
            - The default value. This value should never be used.
            - The Cluster is operational and can be used by the user.
            - The Cluster is being deployed.
            - >-
              Adding or removing of a node to the cluster, any other cluster
              specific updates.
            - The Cluster is being deleted.
            - >-
              The Cluster is undergoing maintenance, for example: a failed node
              is getting replaced.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - UPDATING
            - DELETING
            - REPAIRING
        management:
          description: >-
            Output only. True if the cluster is a management cluster; false
            otherwise. There can only be one management cluster in a private
            cloud and it has to be the first one.
          readOnly: true
          type: boolean
        autoscalingSettings:
          description: Optional. Configuration of the autoscaling applied to this cluster.
          $ref: '#/components/schemas/AutoscalingSettings'
        uid:
          description: Output only. System-generated unique identifier for the resource.
          readOnly: true
          type: string
        nodeTypeConfigs:
          description: >-
            Required. The map of cluster node types in this cluster, where the
            key is canonical identifier of the node type (corresponds to the
            `NodeType`).
          type: object
          additionalProperties:
            $ref: '#/components/schemas/NodeTypeConfig'
        stretchedClusterConfig:
          description: >-
            Optional. Configuration of a stretched cluster. Required for
            clusters that belong to a STRETCHED private cloud.
          $ref: '#/components/schemas/StretchedClusterConfig'
    AutoscalingSettings:
      id: AutoscalingSettings
      description: >-
        Autoscaling settings define the rules used by VMware Engine to
        automatically scale-out and scale-in the clusters in a private cloud.
      type: object
      properties:
        autoscalingPolicies:
          description: >-
            Required. The map with autoscaling policies applied to the cluster.
            The key is the identifier of the policy. It must meet the following
            requirements: * Only contains 1-63 alphanumeric characters and
            hyphens * Begins with an alphabetical character * Ends with a
            non-hyphen character * Not formatted as a UUID * Complies with [RFC
            1034](https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5)
            Currently there map must contain only one element that describes the
            autoscaling policy for compute nodes.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AutoscalingPolicy'
        minClusterNodeCount:
          description: >-
            Optional. Minimum number of nodes of any type in a cluster. If not
            specified the default limits apply.
          type: integer
          format: int32
        maxClusterNodeCount:
          description: >-
            Optional. Maximum number of nodes of any type in a cluster. If not
            specified the default limits apply.
          type: integer
          format: int32
        coolDownPeriod:
          description: >-
            Optional. The minimum duration between consecutive autoscale
            operations. It starts once addition or removal of nodes is fully
            completed. Defaults to 30 minutes if not specified. Cool down period
            must be in whole minutes (for example, 30, 31, 50, 180 minutes).
          type: string
          format: google-duration
    AutoscalingPolicy:
      id: AutoscalingPolicy
      description: >-
        Autoscaling policy describes the behavior of the autoscaling with
        respect to the resource utilization. The scale-out operation is
        initiated if the utilization exceeds ANY of the respective thresholds.
        The scale-in operation is initiated if the utilization is below ALL of
        the respective thresholds.
      type: object
      properties:
        nodeTypeId:
          description: >-
            Required. The canonical identifier of the node type to add or
            remove. Corresponds to the `NodeType`.
          type: string
        scaleOutSize:
          description: >-
            Required. Number of nodes to add to a cluster during a scale-out
            operation. Must be divisible by 2 for stretched clusters. During a
            scale-in operation only one node (or 2 for stretched clusters) are
            removed in a single iteration.
          type: integer
          format: int32
        cpuThresholds:
          description: Optional. Utilization thresholds pertaining to CPU utilization.
          $ref: '#/components/schemas/Thresholds'
        grantedMemoryThresholds:
          description: >-
            Optional. Utilization thresholds pertaining to amount of granted
            memory.
          $ref: '#/components/schemas/Thresholds'
        consumedMemoryThresholds:
          description: >-
            Optional. Utilization thresholds pertaining to amount of consumed
            memory.
          $ref: '#/components/schemas/Thresholds'
        storageThresholds:
          description: >-
            Optional. Utilization thresholds pertaining to amount of consumed
            storage.
          $ref: '#/components/schemas/Thresholds'
    Thresholds:
      id: Thresholds
      description: >-
        Thresholds define the utilization of resources triggering scale-out and
        scale-in operations.
      type: object
      properties:
        scaleOut:
          description: >-
            Required. The utilization triggering the scale-out operation in
            percent.
          type: integer
          format: int32
        scaleIn:
          description: >-
            Required. The utilization triggering the scale-in operation in
            percent.
          type: integer
          format: int32
    ListNodesResponse:
      id: ListNodesResponse
      description: Response message for VmwareEngine.ListNodes
      type: object
      properties:
        nodes:
          description: The nodes.
          type: array
          items:
            $ref: '#/components/schemas/Node'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    Node:
      id: Node
      description: Node in a cluster.
      type: object
      properties:
        name:
          description: >-
            Output only. The resource name of this node. Resource names are
            schemeless URIs that follow the conventions in
            https://cloud.google.com/apis/design/resource_names. For example:
            projects/my-project/locations/us-central1-a/privateClouds/my-cloud/clusters/my-cluster/nodes/my-node
          readOnly: true
          type: string
        fqdn:
          description: Output only. Fully qualified domain name of the node.
          readOnly: true
          type: string
        internalIp:
          description: Output only. Internal IP address of the node.
          readOnly: true
          type: string
        nodeTypeId:
          description: >-
            Output only. The canonical identifier of the node type (corresponds
            to the `NodeType`). For example: standard-72.
          readOnly: true
          type: string
        version:
          description: >-
            Output only. The version number of the VMware ESXi management
            component in this cluster.
          readOnly: true
          type: string
        customCoreCount:
          description: Output only. Customized number of cores
          readOnly: true
          type: string
          format: int64
        state:
          description: Output only. The state of the appliance.
          readOnly: true
          type: string
          enumDescriptions:
            - The default value. This value should never be used.
            - Node is operational and can be used by the user.
            - Node is being provisioned.
            - Node is in a failed state.
            - >-
              Node is undergoing maintenance, e.g.: during private cloud
              upgrade.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - FAILED
            - UPGRADING
    ListExternalAddressesResponse:
      id: ListExternalAddressesResponse
      description: Response message for VmwareEngine.ListExternalAddresses
      type: object
      properties:
        externalAddresses:
          description: A list of external IP addresses.
          type: array
          items:
            $ref: '#/components/schemas/ExternalAddress'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: >-
            Locations that could not be reached when making an aggregated query
            using wildcards.
          type: array
          items:
            type: string
    ExternalAddress:
      id: ExternalAddress
      description: >-
        Represents an allocated external IP address and its corresponding
        internal IP address in a private cloud.
      type: object
      properties:
        name:
          description: >-
            Output only. Identifier. The resource name of this external IP
            address. Resource names are schemeless URIs that follow the
            conventions in https://cloud.google.com/apis/design/resource_names.
            For example:
            `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/externalAddresses/my-address`
          readOnly: true
          type: string
        createTime:
          description: Output only. Creation time of this resource.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Last update time of this resource.
          readOnly: true
          type: string
          format: google-datetime
        internalIp:
          description: The internal IP address of a workload VM.
          type: string
        externalIp:
          description: Output only. The external IP address of a workload VM.
          readOnly: true
          type: string
        state:
          description: Output only. The state of the resource.
          readOnly: true
          type: string
          enumDescriptions:
            - The default value. This value should never be used.
            - The address is ready.
            - The address is being created.
            - The address is being updated.
            - The address is being deleted.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - UPDATING
            - DELETING
        uid:
          description: Output only. System-generated unique identifier for the resource.
          readOnly: true
          type: string
        description:
          description: User-provided description for this resource.
          type: string
    FetchNetworkPolicyExternalAddressesResponse:
      id: FetchNetworkPolicyExternalAddressesResponse
      description: Response message for VmwareEngine.FetchNetworkPolicyExternalAddresses
      type: object
      properties:
        externalAddresses:
          description: >-
            A list of external IP addresses assigned to VMware workload VMs
            within the scope of the given network policy.
          type: array
          items:
            $ref: '#/components/schemas/ExternalAddress'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    ListSubnetsResponse:
      id: ListSubnetsResponse
      description: Response message for VmwareEngine.ListSubnets
      type: object
      properties:
        subnets:
          description: A list of subnets.
          type: array
          items:
            $ref: '#/components/schemas/Subnet'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: >-
            Locations that could not be reached when making an aggregated query
            using wildcards.
          type: array
          items:
            type: string
    Subnet:
      id: Subnet
      description: >-
        Subnet in a private cloud. Either `management` subnets (such as vMotion)
        that are read-only, or `userDefined`, which can also be updated.
      type: object
      properties:
        name:
          description: >-
            Output only. Identifier. The resource name of this subnet. Resource
            names are schemeless URIs that follow the conventions in
            https://cloud.google.com/apis/design/resource_names. For example:
            `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/subnets/my-subnet`
          readOnly: true
          type: string
        ipCidrRange:
          description: The IP address range of the subnet in CIDR format '10.0.0.0/24'.
          type: string
        gatewayIp:
          description: >-
            The IP address of the gateway of this subnet. Must fall within the
            IP prefix defined above.
          type: string
        type:
          description: >-
            Output only. The type of the subnet. For example "management" or
            "userDefined".
          readOnly: true
          type: string
        state:
          description: Output only. The state of the resource.
          readOnly: true
          type: string
          enumDescriptions:
            - The default value. This value should never be used.
            - The subnet is ready.
            - The subnet is being created.
            - The subnet is being updated.
            - The subnet is being deleted.
            - Changes requested in the last operation are being propagated.
            - >-
              Last operation on the subnet did not succeed. Subnet's payload is
              reverted back to its most recent working state.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - UPDATING
            - DELETING
            - RECONCILING
            - FAILED
        vlanId:
          description: Output only. VLAN ID of the VLAN on which the subnet is configured
          readOnly: true
          type: integer
          format: int32
    ListExternalAccessRulesResponse:
      id: ListExternalAccessRulesResponse
      description: Response message for VmwareEngine.ListExternalAccessRules
      type: object
      properties:
        externalAccessRules:
          description: A list of external access firewall rules.
          type: array
          items:
            $ref: '#/components/schemas/ExternalAccessRule'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: >-
            Locations that could not be reached when making an aggregated query
            using wildcards.
          type: array
          items:
            type: string
    ExternalAccessRule:
      id: ExternalAccessRule
      description: >-
        External access firewall rules for filtering incoming traffic destined
        to `ExternalAddress` resources.
      type: object
      properties:
        name:
          description: >-
            Output only. The resource name of this external access rule.
            Resource names are schemeless URIs that follow the conventions in
            https://cloud.google.com/apis/design/resource_names. For example:
            `projects/my-project/locations/us-central1/networkPolicies/my-policy/externalAccessRules/my-rule`
          readOnly: true
          type: string
        createTime:
          description: Output only. Creation time of this resource.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Last update time of this resource.
          readOnly: true
          type: string
          format: google-datetime
        description:
          description: User-provided description for this external access rule.
          type: string
        priority:
          description: >-
            External access rule priority, which determines the external access
            rule to use when multiple rules apply. If multiple rules have the
            same priority, their ordering is non-deterministic. If specific
            ordering is required, assign unique priorities to enforce such
            ordering. The external access rule priority is an integer from 100
            to 4096, both inclusive. Lower integers indicate higher precedence.
            For example, a rule with priority `100` has higher precedence than a
            rule with priority `101`.
          type: integer
          format: int32
        action:
          description: The action that the external access rule performs.
          type: string
          enumDescriptions:
            - Defaults to allow.
            - Allows connections that match the other specified components.
            - Blocks connections that match the other specified components.
          enum:
            - ACTION_UNSPECIFIED
            - ALLOW
            - DENY
        ipProtocol:
          description: >-
            The IP protocol to which the external access rule applies. This
            value can be one of the following three protocol strings (not
            case-sensitive): `tcp`, `udp`, or `icmp`.
          type: string
        sourceIpRanges:
          description: >-
            If source ranges are specified, the external access rule applies
            only to traffic that has a source IP address in these ranges. These
            ranges can either be expressed in the CIDR format or as an IP
            address. As only inbound rules are supported, `ExternalAddress`
            resources cannot be the source IP addresses of an external access
            rule. To match all source addresses, specify `0.0.0.0/0`.
          type: array
          items:
            $ref: '#/components/schemas/IpRange'
        sourcePorts:
          description: >-
            A list of source ports to which the external access rule applies.
            This field is only applicable for the UDP or TCP protocol. Each
            entry must be either an integer or a range. For example: `["22"]`,
            `["80","443"]`, or `["12345-12349"]`. To match all source ports,
            specify `["0-65535"]`.
          type: array
          items:
            type: string
        destinationIpRanges:
          description: >-
            If destination ranges are specified, the external access rule
            applies only to the traffic that has a destination IP address in
            these ranges. The specified IP addresses must have reserved external
            IP addresses in the scope of the parent network policy. To match all
            external IP addresses in the scope of the parent network policy,
            specify `0.0.0.0/0`. To match a specific external IP address,
            specify it using the `IpRange.external_address` property.
          type: array
          items:
            $ref: '#/components/schemas/IpRange'
        destinationPorts:
          description: >-
            A list of destination ports to which the external access rule
            applies. This field is only applicable for the UDP or TCP protocol.
            Each entry must be either an integer or a range. For example:
            `["22"]`, `["80","443"]`, or `["12345-12349"]`. To match all
            destination ports, specify `["0-65535"]`.
          type: array
          items:
            type: string
        state:
          description: Output only. The state of the resource.
          readOnly: true
          type: string
          enumDescriptions:
            - The default value. This value is used if the state is omitted.
            - The rule is ready.
            - The rule is being created.
            - The rule is being updated.
            - The rule is being deleted.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - UPDATING
            - DELETING
        uid:
          description: Output only. System-generated unique identifier for the resource.
          readOnly: true
          type: string
    IpRange:
      id: IpRange
      description: An IP range provided in any one of the supported formats.
      type: object
      properties:
        ipAddress:
          description: 'A single IP address. For example: `10.0.0.5`.'
          type: string
        ipAddressRange:
          description: 'An IP address range in the CIDR format. For example: `10.0.0.0/24`.'
          type: string
        externalAddress:
          description: >-
            The name of an `ExternalAddress` resource. The external address must
            have been reserved in the scope of this external access rule's
            parent network policy. Provide the external address name in the form
            of
            `projects/{project}/locations/{location}/privateClouds/{private_cloud}/externalAddresses/{external_address}`.
            For example:
            `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/externalAddresses/my-address`.
          type: string
    ListLoggingServersResponse:
      id: ListLoggingServersResponse
      description: Response message for VmwareEngine.ListLoggingServers
      type: object
      properties:
        loggingServers:
          description: A list of Logging Servers.
          type: array
          items:
            $ref: '#/components/schemas/LoggingServer'
        nextPageToken:
          description: >-
            A token, which can be send as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: >-
            Locations that could not be reached when making an aggregated query
            using wildcards.
          type: array
          items:
            type: string
    LoggingServer:
      id: LoggingServer
      description: Logging server to receive vCenter or ESXi logs.
      type: object
      properties:
        name:
          description: >-
            Output only. The resource name of this logging server. Resource
            names are schemeless URIs that follow the conventions in
            https://cloud.google.com/apis/design/resource_names. For example:
            `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/loggingServers/my-logging-server`
          readOnly: true
          type: string
        createTime:
          description: Output only. Creation time of this resource.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Last update time of this resource.
          readOnly: true
          type: string
          format: google-datetime
        hostname:
          description: >-
            Required. Fully-qualified domain name (FQDN) or IP Address of the
            logging server.
          type: string
        port:
          description: Required. Port number at which the logging server receives logs.
          type: integer
          format: int32
        protocol:
          description: Required. Protocol used by vCenter to send logs to a logging server.
          type: string
          enumDescriptions:
            - Unspecified communications protocol. This is the default value.
            - UDP
            - TCP
            - TLS
            - SSL
            - RELP
          enum:
            - PROTOCOL_UNSPECIFIED
            - UDP
            - TCP
            - TLS
            - SSL
            - RELP
        sourceType:
          description: >-
            Required. The type of component that produces logs that will be
            forwarded to this logging server.
          type: string
          enumDescriptions:
            - The default value. This value should never be used.
            - Logs produced by ESXI hosts
            - Logs produced by vCenter server
          enum:
            - SOURCE_TYPE_UNSPECIFIED
            - ESXI
            - VCSA
        uid:
          description: Output only. System-generated unique identifier for the resource.
          readOnly: true
          type: string
    ListNodeTypesResponse:
      id: ListNodeTypesResponse
      description: Response message for VmwareEngine.ListNodeTypes
      type: object
      properties:
        nodeTypes:
          description: A list of Node Types.
          type: array
          items:
            $ref: '#/components/schemas/NodeType'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: >-
            Locations that could not be reached when making an aggregated query
            using wildcards.
          type: array
          items:
            type: string
    NodeType:
      id: NodeType
      description: Describes node type.
      type: object
      properties:
        name:
          description: >-
            Output only. The resource name of this node type. Resource names are
            schemeless URIs that follow the conventions in
            https://cloud.google.com/apis/design/resource_names. For example:
            `projects/my-proj/locations/us-central1-a/nodeTypes/standard-72`
          readOnly: true
          type: string
        nodeTypeId:
          description: >-
            Output only. The canonical identifier of the node type (corresponds
            to the `NodeType`). For example: standard-72.
          readOnly: true
          type: string
        displayName:
          description: >-
            Output only. The friendly name for this node type. For example:
            ve1-standard-72
          readOnly: true
          type: string
        virtualCpuCount:
          description: Output only. The total number of virtual CPUs in a single node.
          readOnly: true
          type: integer
          format: int32
        totalCoreCount:
          description: Output only. The total number of CPU cores in a single node.
          readOnly: true
          type: integer
          format: int32
        memoryGb:
          description: Output only. The amount of physical memory available, defined in GB.
          readOnly: true
          type: integer
          format: int32
        diskSizeGb:
          description: Output only. The amount of storage available, defined in GB.
          readOnly: true
          type: integer
          format: int32
        availableCustomCoreCounts:
          description: Output only. List of possible values of custom core count.
          readOnly: true
          type: array
          items:
            type: integer
            format: int32
        kind:
          description: Output only. The type of the resource.
          readOnly: true
          type: string
          enumDescriptions:
            - The default value. This value should never be used.
            - Standard HCI node.
            - Storage only Node.
          enum:
            - KIND_UNSPECIFIED
            - STANDARD
            - STORAGE_ONLY
        families:
          description: >-
            Output only. Families of the node type. For node types to be in the
            same cluster they must share at least one element in the `families`.
          readOnly: true
          type: array
          items:
            type: string
        capabilities:
          description: Output only. Capabilities of this node type.
          readOnly: true
          type: array
          items:
            type: string
            enumDescriptions:
              - >-
                The default value. This value is used if the capability is
                omitted or unknown.
              - This node type supports stretch clusters.
            enum:
              - CAPABILITY_UNSPECIFIED
              - STRETCHED_CLUSTERS
    Credentials:
      id: Credentials
      description: Credentials for a private cloud.
      type: object
      properties:
        username:
          description: Initial username.
          type: string
        password:
          description: Initial password.
          type: string
    ResetNsxCredentialsRequest:
      id: ResetNsxCredentialsRequest
      description: Request message for VmwareEngine.ResetNsxCredentials
      type: object
      properties:
        requestId:
          description: >-
            Optional. A request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed. The
            server guarantees that a request doesn't result in creation of
            duplicate commitments for at least 60 minutes. For example, consider
            a situation where you make an initial request and the request times
            out. If you make the request again with the same request ID, the
            server can check if original operation with the same request ID was
            received, and if so, will ignore the second request. This prevents
            clients from accidentally creating duplicate commitments. The
            request ID must be a valid UUID with the exception that zero UUID is
            not supported (00000000-0000-0000-0000-000000000000).
          type: string
    ResetVcenterCredentialsRequest:
      id: ResetVcenterCredentialsRequest
      description: Request message for VmwareEngine.ResetVcenterCredentials
      type: object
      properties:
        requestId:
          description: >-
            Optional. A request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed. The
            server guarantees that a request doesn't result in creation of
            duplicate commitments for at least 60 minutes. For example, consider
            a situation where you make an initial request and the request times
            out. If you make the request again with the same request ID, the
            server can check if original operation with the same request ID was
            received, and if so, will ignore the second request. This prevents
            clients from accidentally creating duplicate commitments. The
            request ID must be a valid UUID with the exception that zero UUID is
            not supported (00000000-0000-0000-0000-000000000000).
          type: string
        username:
          description: >-
            Optional. The username of the user to be to reset the credentials.
            The default value of this field is CloudOwner@gve.local. The
            provided value should be one of the following:
            solution-user-01@gve.local, solution-user-02@gve.local,
            solution-user-03@gve.local, solution-user-04@gve.local,
            solution-user-05@gve.local, zertoadmin@gve.local.
          type: string
    DnsForwarding:
      id: DnsForwarding
      description: >-
        DNS forwarding config. This config defines a list of domain to name
        server mappings, and is attached to the private cloud for custom domain
        resolution.
      type: object
      properties:
        name:
          description: >-
            Output only. Identifier. The resource name of this DNS profile.
            Resource names are schemeless URIs that follow the conventions in
            https://cloud.google.com/apis/design/resource_names. For example:
            `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/dnsForwarding`
          readOnly: true
          type: string
        createTime:
          description: Output only. Creation time of this resource.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Last update time of this resource.
          readOnly: true
          type: string
          format: google-datetime
        forwardingRules:
          description: Required. List of domain mappings to configure
          type: array
          items:
            $ref: '#/components/schemas/ForwardingRule'
    ForwardingRule:
      id: ForwardingRule
      description: >-
        A forwarding rule is a mapping of a `domain` to `name_servers`. This
        mapping allows VMware Engine to resolve domains for attached private
        clouds by forwarding DNS requests for a given domain to the specified
        nameservers.
      type: object
      properties:
        domain:
          description: Required. Domain used to resolve a `name_servers` list.
          type: string
        nameServers:
          description: Required. List of DNS servers to use for domain resolution
          type: array
          items:
            type: string
    NetworkPeering:
      id: NetworkPeering
      description: Details of a network peering.
      type: object
      properties:
        name:
          description: >-
            Output only. Identifier. The resource name of the network peering.
            NetworkPeering is a global resource and location can only be global.
            Resource names are scheme-less URIs that follow the conventions in
            https://cloud.google.com/apis/design/resource_names. For example:
            `projects/my-project/locations/global/networkPeerings/my-peering`
          readOnly: true
          type: string
        createTime:
          description: Output only. Creation time of this resource.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Last update time of this resource.
          readOnly: true
          type: string
          format: google-datetime
        peerNetwork:
          description: >-
            Required. The relative resource name of the network to peer with a
            standard VMware Engine network. The provided network can be a
            consumer VPC network or another standard VMware Engine network. If
            the `peer_network_type` is VMWARE_ENGINE_NETWORK, specify the name
            in the form:
            `projects/{project}/locations/global/vmwareEngineNetworks/{vmware_engine_network_id}`.
            Otherwise specify the name in the form:
            `projects/{project}/global/networks/{network_id}`, where `{project}`
            can either be a project number or a project ID.
          type: string
        exportCustomRoutes:
          description: >-
            Optional. True if custom routes are exported to the peered network;
            false otherwise. The default value is true.
          type: boolean
        importCustomRoutes:
          description: >-
            Optional. True if custom routes are imported from the peered
            network; false otherwise. The default value is true.
          type: boolean
        exchangeSubnetRoutes:
          description: >-
            Optional. True if full mesh connectivity is created and managed
            automatically between peered networks; false otherwise. Currently
            this field is always true because Google Compute Engine
            automatically creates and manages subnetwork routes between two VPC
            networks when peering state is 'ACTIVE'.
          type: boolean
        exportCustomRoutesWithPublicIp:
          description: >-
            Optional. True if all subnet routes with a public IP address range
            are exported; false otherwise. The default value is true. IPv4
            special-use ranges
            (https://en.wikipedia.org/wiki/IPv4#Special_addresses) are always
            exported to peers and are not controlled by this field.
          type: boolean
        importCustomRoutesWithPublicIp:
          description: >-
            Optional. True if all subnet routes with public IP address range are
            imported; false otherwise. The default value is true. IPv4
            special-use ranges
            (https://en.wikipedia.org/wiki/IPv4#Special_addresses) are always
            imported to peers and are not controlled by this field.
          type: boolean
        state:
          description: >-
            Output only. State of the network peering. This field has a value of
            'ACTIVE' when there's a matching configuration in the peer network.
            New values may be added to this enum when appropriate.
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified network peering state. This is the default value.
            - The peering is not active.
            - The peering is active.
            - The peering is being created.
            - The peering is being deleted.
          enum:
            - STATE_UNSPECIFIED
            - INACTIVE
            - ACTIVE
            - CREATING
            - DELETING
        stateDetails:
          description: >-
            Output only. Output Only. Details about the current state of the
            network peering.
          readOnly: true
          type: string
        peerMtu:
          description: >-
            Optional. Maximum transmission unit (MTU) in bytes. The default
            value is `1500`. If a value of `0` is provided for this field,
            VMware Engine uses the default value instead.
          type: integer
          format: int32
        peerNetworkType:
          description: >-
            Required. The type of the network to peer with the VMware Engine
            network.
          type: string
          enumDescriptions:
            - Unspecified
            - >-
              Peering connection used for connecting to another VPC network
              established by the same user. For example, a peering connection to
              another VPC network in the same project or to an on-premises
              network.
            - >-
              Peering connection used for connecting to another VMware Engine
              network.
            - >-
              Peering connection used for establishing [private services
              access](https://cloud.google.com/vpc/docs/private-services-access).
            - Peering connection used for connecting to NetApp Cloud Volumes.
            - >-
              Peering connection used for connecting to third-party services.
              Most third-party services require manual setup of reverse peering
              on the VPC network associated with the third-party service.
            - Peering connection used for connecting to Dell PowerScale Filers
            - >-
              Peering connection used for connecting to Google Cloud NetApp
              Volumes.
            - >-
              Peering connection used for connecting to Google Cloud Filestore
              Instances.
          enum:
            - PEER_NETWORK_TYPE_UNSPECIFIED
            - STANDARD
            - VMWARE_ENGINE_NETWORK
            - PRIVATE_SERVICES_ACCESS
            - NETAPP_CLOUD_VOLUMES
            - THIRD_PARTY_SERVICE
            - DELL_POWERSCALE
            - GOOGLE_CLOUD_NETAPP_VOLUMES
            - GOOGLE_CLOUD_FILESTORE_INSTANCES
        uid:
          description: Output only. System-generated unique identifier for the resource.
          readOnly: true
          type: string
        vmwareEngineNetwork:
          description: >-
            Required. The relative resource name of the VMware Engine network.
            Specify the name in the following form:
            `projects/{project}/locations/{location}/vmwareEngineNetworks/{vmware_engine_network_id}`
            where `{project}` can either be a project number or a project ID.
          type: string
        description:
          description: Optional. User-provided description for this network peering.
          type: string
    ListNetworkPeeringsResponse:
      id: ListNetworkPeeringsResponse
      description: Response message for VmwareEngine.ListNetworkPeerings
      type: object
      properties:
        networkPeerings:
          description: A list of network peerings.
          type: array
          items:
            $ref: '#/components/schemas/NetworkPeering'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: Unreachable resources.
          type: array
          items:
            type: string
    ListPeeringRoutesResponse:
      id: ListPeeringRoutesResponse
      description: Response message for VmwareEngine.ListPeeringRoutes
      type: object
      properties:
        peeringRoutes:
          description: A list of peering routes.
          type: array
          items:
            $ref: '#/components/schemas/PeeringRoute'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    PeeringRoute:
      id: PeeringRoute
      description: Exchanged network peering route.
      type: object
      properties:
        destRange:
          description: >-
            Output only. Destination range of the peering route in CIDR
            notation.
          readOnly: true
          type: string
        type:
          description: Output only. Type of the route in the peer VPC network.
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified peering route type. This is the default value.
            - Dynamic routes in the peer network.
            - Static routes in the peer network.
            - >-
              Created, updated, and removed automatically by Google Cloud when
              subnets are created, modified, or deleted in the peer network.
          enum:
            - TYPE_UNSPECIFIED
            - DYNAMIC_PEERING_ROUTE
            - STATIC_PEERING_ROUTE
            - SUBNET_PEERING_ROUTE
        nextHopRegion:
          description: >-
            Output only. Region containing the next hop of the peering route.
            This field only applies to dynamic routes in the peer VPC network.
          readOnly: true
          type: string
        priority:
          description: Output only. The priority of the peering route.
          readOnly: true
          type: string
          format: int64
        imported:
          description: >-
            Output only. True if the peering route has been imported from a
            peered VPC network; false otherwise. The import happens if the field
            `NetworkPeering.importCustomRoutes` is true for this network,
            `NetworkPeering.exportCustomRoutes` is true for the peer VPC
            network, and the import does not result in a route conflict.
          readOnly: true
          type: boolean
        direction:
          description: >-
            Output only. Direction of the routes exchanged with the peer
            network, from the VMware Engine network perspective: * Routes of
            direction `INCOMING` are imported from the peer network. * Routes of
            direction `OUTGOING` are exported from the intranet VPC network of
            the VMware Engine network.
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified exchanged routes direction. This is default.
            - Routes imported from the peer network.
            - Routes exported to the peer network.
          enum:
            - DIRECTION_UNSPECIFIED
            - INCOMING
            - OUTGOING
    HcxActivationKey:
      id: HcxActivationKey
      description: >-
        HCX activation key. A default key is created during private cloud
        provisioning, but this behavior is subject to change and you should
        always verify active keys. Use VmwareEngine.ListHcxActivationKeys to
        retrieve existing keys and VmwareEngine.CreateHcxActivationKey to create
        new ones.
      type: object
      properties:
        name:
          description: >-
            Output only. The resource name of this HcxActivationKey. Resource
            names are schemeless URIs that follow the conventions in
            https://cloud.google.com/apis/design/resource_names. For example:
            `projects/my-project/locations/us-central1/privateClouds/my-cloud/hcxActivationKeys/my-key`
          readOnly: true
          type: string
        createTime:
          description: Output only. Creation time of HCX activation key.
          readOnly: true
          type: string
          format: google-datetime
        state:
          description: Output only. State of HCX activation key.
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified state.
            - State of a newly generated activation key.
            - State of key when it has been used to activate HCX appliance.
            - State of key when it is being created.
          enum:
            - STATE_UNSPECIFIED
            - AVAILABLE
            - CONSUMED
            - CREATING
        activationKey:
          description: Output only. HCX activation key.
          readOnly: true
          type: string
        uid:
          description: Output only. System-generated unique identifier for the resource.
          readOnly: true
          type: string
    ListHcxActivationKeysResponse:
      id: ListHcxActivationKeysResponse
      description: Response message for VmwareEngine.ListHcxActivationKeys
      type: object
      properties:
        hcxActivationKeys:
          description: List of HCX activation keys.
          type: array
          items:
            $ref: '#/components/schemas/HcxActivationKey'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: >-
            Locations that could not be reached when making an aggregated query
            using wildcards.
          type: array
          items:
            type: string
    NetworkPolicy:
      id: NetworkPolicy
      description: >-
        Represents a network policy resource. Network policies are regional
        resources. You can use a network policy to enable or disable internet
        access and external IP access. Network policies are associated with a
        VMware Engine network, which might span across regions. For a given
        region, a network policy applies to all private clouds in the VMware
        Engine network associated with the policy.
      type: object
      properties:
        name:
          description: >-
            Output only. Identifier. The resource name of this network policy.
            Resource names are schemeless URIs that follow the conventions in
            https://cloud.google.com/apis/design/resource_names. For example:
            `projects/my-project/locations/us-central1/networkPolicies/my-network-policy`
          readOnly: true
          type: string
        createTime:
          description: Output only. Creation time of this resource.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Last update time of this resource.
          readOnly: true
          type: string
          format: google-datetime
        internetAccess:
          description: Network service that allows VMware workloads to access the internet.
          $ref: '#/components/schemas/NetworkService'
        externalIp:
          description: >-
            Network service that allows External IP addresses to be assigned to
            VMware workloads. This service can only be enabled when
            `internet_access` is also enabled.
          $ref: '#/components/schemas/NetworkService'
        edgeServicesCidr:
          description: >-
            Required. IP address range in CIDR notation used to create internet
            access and external IP access. An RFC 1918 CIDR block, with a "/26"
            prefix, is required. The range cannot overlap with any prefixes
            either in the consumer VPC network or in use by the private clouds
            attached to that VPC network.
          type: string
        uid:
          description: Output only. System-generated unique identifier for the resource.
          readOnly: true
          type: string
        vmwareEngineNetwork:
          description: >-
            Optional. The relative resource name of the VMware Engine network.
            Specify the name in the following form:
            `projects/{project}/locations/{location}/vmwareEngineNetworks/{vmware_engine_network_id}`
            where `{project}` can either be a project number or a project ID.
          type: string
        description:
          description: Optional. User-provided description for this network policy.
          type: string
        vmwareEngineNetworkCanonical:
          description: >-
            Output only. The canonical name of the VMware Engine network in the
            form:
            `projects/{project_number}/locations/{location}/vmwareEngineNetworks/{vmware_engine_network_id}`
          readOnly: true
          type: string
    NetworkService:
      id: NetworkService
      description: >-
        Represents a network service that is managed by a `NetworkPolicy`
        resource. A network service provides a way to control an aspect of
        external access to VMware workloads. For example, whether the VMware
        workloads in the private clouds governed by a network policy can access
        or be accessed from the internet.
      type: object
      properties:
        enabled:
          description: True if the service is enabled; false otherwise.
          type: boolean
        state:
          description: >-
            Output only. State of the service. New values may be added to this
            enum when appropriate.
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified service state. This is the default value.
            - Service is not provisioned.
            - Service is in the process of being provisioned/deprovisioned.
            - Service is active.
          enum:
            - STATE_UNSPECIFIED
            - UNPROVISIONED
            - RECONCILING
            - ACTIVE
    ListNetworkPoliciesResponse:
      id: ListNetworkPoliciesResponse
      description: Response message for VmwareEngine.ListNetworkPolicies
      type: object
      properties:
        networkPolicies:
          description: A list of network policies.
          type: array
          items:
            $ref: '#/components/schemas/NetworkPolicy'
        nextPageToken:
          description: >-
            A token, which can be send as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: >-
            Locations that could not be reached when making an aggregated query
            using wildcards.
          type: array
          items:
            type: string
    ListManagementDnsZoneBindingsResponse:
      id: ListManagementDnsZoneBindingsResponse
      description: Response message for VmwareEngine.ListManagementDnsZoneBindings
      type: object
      properties:
        managementDnsZoneBindings:
          description: A list of management DNS zone bindings.
          type: array
          items:
            $ref: '#/components/schemas/ManagementDnsZoneBinding'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: >-
            Locations that could not be reached when making an aggregated query
            using wildcards.
          type: array
          items:
            type: string
    ManagementDnsZoneBinding:
      id: ManagementDnsZoneBinding
      description: >-
        Represents a binding between a network and the management DNS zone. A
        management DNS zone is the Cloud DNS cross-project binding zone that
        VMware Engine creates for each private cloud. It contains FQDNs and
        corresponding IP addresses for the private cloud's ESXi hosts and
        management VM appliances like vCenter and NSX Manager.
      type: object
      properties:
        name:
          description: >-
            Output only. The resource name of this binding. Resource names are
            schemeless URIs that follow the conventions in
            https://cloud.google.com/apis/design/resource_names. For example:
            `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/managementDnsZoneBindings/my-management-dns-zone-binding`
          readOnly: true
          type: string
        createTime:
          description: Output only. Creation time of this resource.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Last update time of this resource.
          readOnly: true
          type: string
          format: google-datetime
        state:
          description: Output only. The state of the resource.
          readOnly: true
          type: string
          enumDescriptions:
            - The default value. This value should never be used.
            - The binding is ready.
            - The binding is being created.
            - The binding is being updated.
            - The binding is being deleted.
            - The binding has failed.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - UPDATING
            - DELETING
            - FAILED
        description:
          description: User-provided description for this resource.
          type: string
        vpcNetwork:
          description: >-
            Network to bind is a standard consumer VPC. Specify the name in the
            following form for consumer VPC network:
            `projects/{project}/global/networks/{network_id}`. `{project}` can
            either be a project number or a project ID.
          type: string
        vmwareEngineNetwork:
          description: >-
            Network to bind is a VMware Engine network. Specify the name in the
            following form for VMware engine network:
            `projects/{project}/locations/global/vmwareEngineNetworks/{vmware_engine_network_id}`.
            `{project}` can either be a project number or a project ID.
          type: string
        uid:
          description: Output only. System-generated unique identifier for the resource.
          readOnly: true
          type: string
    RepairManagementDnsZoneBindingRequest:
      id: RepairManagementDnsZoneBindingRequest
      description: Request message for VmwareEngine.RepairManagementDnsZoneBindings
      type: object
      properties:
        requestId:
          description: >-
            Optional. A request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed. The
            server guarantees that a request doesn't result in creation of
            duplicate commitments for at least 60 minutes. For example, consider
            a situation where you make an initial request and the request times
            out. If you make the request again with the same request ID, the
            server can check if the original operation with the same request ID
            was received, and if so, will ignore the second request. This
            prevents clients from accidentally creating duplicate commitments.
            The request ID must be a valid UUID with the exception that zero
            UUID is not supported (00000000-0000-0000-0000-000000000000).
          type: string
    VmwareEngineNetwork:
      id: VmwareEngineNetwork
      description: >-
        VMware Engine network resource that provides connectivity for VMware
        Engine private clouds.
      type: object
      properties:
        name:
          description: >-
            Output only. Identifier. The resource name of the VMware Engine
            network. Resource names are schemeless URIs that follow the
            conventions in https://cloud.google.com/apis/design/resource_names.
            For example:
            `projects/my-project/locations/global/vmwareEngineNetworks/my-network`
          readOnly: true
          type: string
        createTime:
          description: Output only. Creation time of this resource.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Last update time of this resource.
          readOnly: true
          type: string
          format: google-datetime
        description:
          description: User-provided description for this VMware Engine network.
          type: string
        vpcNetworks:
          description: >-
            Output only. VMware Engine service VPC networks that provide
            connectivity from a private cloud to customer projects, the
            internet, and other Google Cloud services.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/VpcNetwork'
        state:
          description: Output only. State of the VMware Engine network.
          readOnly: true
          type: string
          enumDescriptions:
            - The default value. This value is used if the state is omitted.
            - The VMware Engine network is being created.
            - The VMware Engine network is ready.
            - The VMware Engine network is being updated.
            - The VMware Engine network is being deleted.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - UPDATING
            - DELETING
        type:
          description: Required. VMware Engine network type.
          type: string
          enumDescriptions:
            - The default value. This value should never be used.
            - >-
              Network type used by private clouds created in projects without a
              network of type `STANDARD`. This network type is no longer used
              for new VMware Engine private cloud deployments.
            - Standard network type used for private cloud connectivity.
          enum:
            - TYPE_UNSPECIFIED
            - LEGACY
            - STANDARD
        uid:
          description: Output only. System-generated unique identifier for the resource.
          readOnly: true
          type: string
        etag:
          description: >-
            Checksum that may be sent on update and delete requests to ensure
            that the user-provided value is up to date before the server
            processes a request. The server computes checksums based on the
            value of other fields in the request.
          type: string
    VpcNetwork:
      id: VpcNetwork
      description: >-
        Represents a VMware Engine VPC network that is managed by a VMware
        Engine network resource.
      type: object
      properties:
        type:
          description: >-
            Output only. Type of VPC network (INTRANET, INTERNET, or
            GOOGLE_CLOUD)
          readOnly: true
          type: string
          enumDescriptions:
            - The default value. This value should never be used.
            - >-
              VPC network that will be peered with a consumer VPC network or the
              intranet VPC of another VMware Engine network. Access a private
              cloud through Compute Engine VMs on a peered VPC network or an
              on-premises resource connected to a peered consumer VPC network.
            - VPC network used for internet access to and from a private cloud.
            - >-
              VPC network used for access to Google Cloud services like Cloud
              Storage.
          enum:
            - TYPE_UNSPECIFIED
            - INTRANET
            - INTERNET
            - GOOGLE_CLOUD
        network:
          description: >-
            Output only. The relative resource name of the service VPC network
            this VMware Engine network is attached to. For example:
            `projects/123123/global/networks/my-network`
          readOnly: true
          type: string
    ListVmwareEngineNetworksResponse:
      id: ListVmwareEngineNetworksResponse
      description: Response message for VmwareEngine.ListVmwareEngineNetworks
      type: object
      properties:
        vmwareEngineNetworks:
          description: A list of VMware Engine networks.
          type: array
          items:
            $ref: '#/components/schemas/VmwareEngineNetwork'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: Unreachable resources.
          type: array
          items:
            type: string
    PrivateConnection:
      id: PrivateConnection
      description: >-
        Private connection resource that provides connectivity for VMware Engine
        private clouds.
      type: object
      properties:
        name:
          description: >-
            Output only. The resource name of the private connection. Resource
            names are schemeless URIs that follow the conventions in
            https://cloud.google.com/apis/design/resource_names. For example:
            `projects/my-project/locations/us-central1/privateConnections/my-connection`
          readOnly: true
          type: string
        createTime:
          description: Output only. Creation time of this resource.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Last update time of this resource.
          readOnly: true
          type: string
          format: google-datetime
        description:
          description: Optional. User-provided description for this private connection.
          type: string
        state:
          description: Output only. State of the private connection.
          readOnly: true
          type: string
          enumDescriptions:
            - The default value. This value is used if the state is omitted.
            - The private connection is being created.
            - The private connection is ready.
            - The private connection is being updated.
            - The private connection is being deleted.
            - >-
              The private connection is not provisioned, since no private cloud
              is present for which this private connection is needed.
            - The private connection is in failed state.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - UPDATING
            - DELETING
            - UNPROVISIONED
            - FAILED
        vmwareEngineNetwork:
          description: >-
            Required. The relative resource name of Legacy VMware Engine
            network. Specify the name in the following form:
            `projects/{project}/locations/{location}/vmwareEngineNetworks/{vmware_engine_network_id}`
            where `{project}`, `{location}` will be same as specified in private
            connection resource name and `{vmware_engine_network_id}` will be in
            the form of `{location}`-default e.g.
            projects/project/locations/us-central1/vmwareEngineNetworks/us-central1-default.
          type: string
        vmwareEngineNetworkCanonical:
          description: >-
            Output only. The canonical name of the VMware Engine network in the
            form:
            `projects/{project_number}/locations/{location}/vmwareEngineNetworks/{vmware_engine_network_id}`
          readOnly: true
          type: string
        type:
          description: Required. Private connection type.
          type: string
          enumDescriptions:
            - The default value. This value should never be used.
            - >-
              Connection used for establishing [private services
              access](https://cloud.google.com/vpc/docs/private-services-access).
            - Connection used for connecting to NetApp Cloud Volumes.
            - Connection used for connecting to Dell PowerScale.
            - Connection used for connecting to third-party services.
          enum:
            - TYPE_UNSPECIFIED
            - PRIVATE_SERVICE_ACCESS
            - NETAPP_CLOUD_VOLUMES
            - DELL_POWERSCALE
            - THIRD_PARTY_SERVICE
        peeringId:
          description: >-
            Output only. VPC network peering id between given network VPC and
            VMwareEngineNetwork.
          readOnly: true
          type: string
        routingMode:
          description: >-
            Optional. Routing Mode. Default value is set to GLOBAL. For type =
            PRIVATE_SERVICE_ACCESS, this field can be set to GLOBAL or REGIONAL,
            for other types only GLOBAL is supported.
          type: string
          enumDescriptions:
            - The default value. This value should never be used.
            - Global Routing Mode
            - Regional Routing Mode
          enum:
            - ROUTING_MODE_UNSPECIFIED
            - GLOBAL
            - REGIONAL
        uid:
          description: Output only. System-generated unique identifier for the resource.
          readOnly: true
          type: string
        serviceNetwork:
          description: >-
            Required. Service network to create private connection. Specify the
            name in the following form:
            `projects/{project}/global/networks/{network_id}` For type =
            PRIVATE_SERVICE_ACCESS, this field represents servicenetworking VPC,
            e.g. projects/project-tp/global/networks/servicenetworking. For type
            = NETAPP_CLOUD_VOLUME, this field represents NetApp service VPC,
            e.g. projects/project-tp/global/networks/netapp-tenant-vpc. For type
            = DELL_POWERSCALE, this field represent Dell service VPC, e.g.
            projects/project-tp/global/networks/dell-tenant-vpc. For type=
            THIRD_PARTY_SERVICE, this field could represent a consumer VPC or
            any other producer VPC to which the VMware Engine Network needs to
            be connected, e.g. projects/project/global/networks/vpc.
          type: string
        peeringState:
          description: >-
            Output only. Peering state between service network and VMware Engine
            network.
          readOnly: true
          type: string
          enumDescriptions:
            - >-
              The default value. This value is used if the peering state is
              omitted or unknown.
            - The peering is in active state.
            - The peering is in inactive state.
          enum:
            - PEERING_STATE_UNSPECIFIED
            - PEERING_ACTIVE
            - PEERING_INACTIVE
    ListPrivateConnectionsResponse:
      id: ListPrivateConnectionsResponse
      description: Response message for VmwareEngine.ListPrivateConnections
      type: object
      properties:
        privateConnections:
          description: A list of private connections.
          type: array
          items:
            $ref: '#/components/schemas/PrivateConnection'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: Unreachable resources.
          type: array
          items:
            type: string
    ListPrivateConnectionPeeringRoutesResponse:
      id: ListPrivateConnectionPeeringRoutesResponse
      description: Response message for VmwareEngine.ListPrivateConnectionPeeringRoutes
      type: object
      properties:
        peeringRoutes:
          description: A list of peering routes.
          type: array
          items:
            $ref: '#/components/schemas/PeeringRoute'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    GrantDnsBindPermissionRequest:
      id: GrantDnsBindPermissionRequest
      description: Request message for VmwareEngine.GrantDnsBindPermission
      type: object
      properties:
        principal:
          description: >-
            Required. The consumer provided user/service account which needs to
            be granted permission to bind with the intranet VPC corresponding to
            the consumer project.
          $ref: '#/components/schemas/Principal'
        requestId:
          description: >-
            Optional. A request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed. The
            server guarantees that a request doesn't result in creation of
            duplicate commitments for at least 60 minutes. For example, consider
            a situation where you make an initial request and the request times
            out. If you make the request again with the same request ID, the
            server can check if original operation with the same request ID was
            received, and if so, will ignore the second request. This prevents
            clients from accidentally creating duplicate commitments. The
            request ID must be a valid UUID with the exception that zero UUID is
            not supported (00000000-0000-0000-0000-000000000000).
          type: string
    Principal:
      id: Principal
      description: >-
        Users/Service accounts which have access for DNS binding on the intranet
        VPC corresponding to the consumer project.
      type: object
      properties:
        user:
          description: The user who needs to be granted permission.
          type: string
        serviceAccount:
          description: The service account which needs to be granted the permission.
          type: string
    DnsBindPermission:
      id: DnsBindPermission
      description: >-
        DnsBindPermission resource that contains the accounts having the
        consumer DNS bind permission on the corresponding intranet VPC of the
        consumer project.
      type: object
      properties:
        name:
          description: >-
            Required. Output only. The name of the resource which stores the
            users/service accounts having the permission to bind to the
            corresponding intranet VPC of the consumer project.
            DnsBindPermission is a global resource and location can only be
            global. Resource names are schemeless URIs that follow the
            conventions in https://cloud.google.com/apis/design/resource_names.
            For example:
            `projects/my-project/locations/global/dnsBindPermission`
          readOnly: true
          type: string
        principals:
          description: >-
            Output only. Users/Service accounts which have access for binding on
            the intranet VPC project corresponding to the consumer project.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Principal'
    RevokeDnsBindPermissionRequest:
      id: RevokeDnsBindPermissionRequest
      description: Request message for VmwareEngine.RevokeDnsBindPermission
      type: object
      properties:
        principal:
          description: >-
            Required. The consumer provided user/service account which needs to
            be granted permission to bind with the intranet VPC corresponding to
            the consumer project.
          $ref: '#/components/schemas/Principal'
        requestId:
          description: >-
            Optional. A request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed. The
            server guarantees that a request doesn't result in creation of
            duplicate commitments for at least 60 minutes. For example, consider
            a situation where you make an initial request and the request times
            out. If you make the request again with the same request ID, the
            server can check if original operation with the same request ID was
            received, and if so, will ignore the second request. This prevents
            clients from accidentally creating duplicate commitments. The
            request ID must be a valid UUID with the exception that zero UUID is
            not supported (00000000-0000-0000-0000-000000000000).
          type: string
    ListAnnouncementsResponse:
      id: ListAnnouncementsResponse
      description: Response message for VmwareEngine.ListAnnouncements
      type: object
      properties:
        announcements:
          description: A list of announcement runs.
          type: array
          items:
            $ref: '#/components/schemas/Announcement'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: list of unreachable locations
          type: array
          items:
            type: string
    Announcement:
      id: Announcement
      description: Announcement for the resources of Vmware Engine.
      type: object
      properties:
        name:
          description: >-
            Output only. The resource name of the announcement. Resource names
            are schemeless URIs that follow the conventions in
            https://cloud.google.com/apis/design/resource_names. For example:
            `projects/my-project/locations/us-west1-a/announcements/my-announcement-id`
          readOnly: true
          type: string
        createTime:
          description: >-
            Output only. Creation time of this resource. It also serves as start
            time of notification.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Last update time of this resource.
          readOnly: true
          type: string
          format: google-datetime
        code:
          description: >-
            Required. Code of the announcement. Indicates the presence of a
            VMware Engine related announcement and corresponds to a related
            message in the `description` field.
          type: string
        description:
          description: Output only. Description of the announcement.
          readOnly: true
          type: string
        state:
          description: >-
            Output only. State of the resource. New values may be added to this
            enum when appropriate.
          readOnly: true
          type: string
          enumDescriptions:
            - The default value. This value should never be used.
            - Active announcement which should be visible to user.
            - Inactive announcement which should not be visible to user.
            - Announcement which is being deleted
            - Announcement which being created
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - INACTIVE
            - DELETING
            - CREATING
        privateCloud:
          description: A Private Cloud resource name.
          type: string
        cluster:
          description: A Cluster resource name.
          type: string
        targetResourceType:
          description: >-
            Output only. Target Resource Type defines the type of the target for
            the announcement
          readOnly: true
          type: string
        metadata:
          description: Output only. Additional structured details about this announcement.
          readOnly: true
          type: object
          additionalProperties:
            type: string
        activityType:
          description: >-
            Optional. Activity type of the announcement There can be only one
            active announcement for a given activity type and target resource.
          type: string
    ListUpgradesResponse:
      id: ListUpgradesResponse
      description: Response message for VmwareEngine.ListUpgrades.
      type: object
      properties:
        upgrades:
          description: A list of `Upgrades`.
          type: array
          items:
            $ref: '#/components/schemas/Upgrade'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: List of unreachable resources.
          type: array
          items:
            type: string
    Upgrade:
      id: Upgrade
      description: Describes Private cloud Upgrade.
      type: object
      properties:
        name:
          description: >-
            Output only. Identifier. The resource name of the private cloud
            `Upgrade`. Resource names are schemeless URIs that follow the
            conventions in https://cloud.google.com/apis/design/resource_names.
            For example:
            `projects/my-project/locations/us-west1-a/privateClouds/my-cloud/upgrades/my-upgrade`
          readOnly: true
          type: string
        createTime:
          description: Output only. Output Only. Creation time of this resource.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Output Only. Last update time of this resource.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. Output Only. End time of the upgrade.
          readOnly: true
          type: string
          format: google-datetime
        state:
          description: Output only. The current state of the upgrade.
          readOnly: true
          type: string
          enumDescriptions:
            - The default value. This value should never be used.
            - The upgrade is scheduled but not started yet.
            - The upgrade is currently in progress and has not completed yet.
            - The upgrade completed successfully.
            - The upgrade is currently paused.
            - The upgrade failed.
            - The upgrade is in process of being canceled.
            - The upgrade is canceled.
            - The upgrade is in process of being rescheduled.
          enum:
            - STATE_UNSPECIFIED
            - SCHEDULED
            - ONGOING
            - SUCCEEDED
            - PAUSED
            - FAILED
            - CANCELLING
            - CANCELLED
            - RESCHEDULING
        type:
          description: Output only. Output Only. The type of upgrade.
          readOnly: true
          type: string
          enumDescriptions:
            - The default value. This value should never be used.
            - >-
              Upgrade of vmware components when a major version is available.
              7.0u2 -> 7.0u3.
            - >-
              Patching of vmware components when a minor version is available.
              7.0u2c -> 7.0u2d.
            - >-
              Workarounds are hotfixes for vulnerabilities or issues applied to
              mitigate the known vulnerability or issue until a patch or update
              is released. The description of the upgrade will have more
              details.
            - Firmware upgrade for VMware product used in the private cloud.
            - Switch upgrade.
            - The upgrade type that doesn't fall into any other category.
            - Infrastructure upgrade in BM node maintenance.
          enum:
            - TYPE_UNSPECIFIED
            - VSPHERE_UPGRADE
            - VSPHERE_PATCH
            - WORKAROUND
            - FIRMWARE_UPGRADE
            - SWITCH_UPGRADE
            - OTHER
            - INFRASTRUCTURE_UPGRADE
        description:
          description: >-
            Output only. Output Only. The description of the upgrade. This is
            used to provide additional information about the private cloud
            upgrade, such as the upgrade's purpose, the changes included in the
            upgrade, or any other relevant information about the upgrade.
          readOnly: true
          type: string
        estimatedDuration:
          description: >-
            Output only. Output Only. The estimated total duration of the
            upgrade. This information can be used to plan or schedule upgrades
            to minimize disruptions. Please note that the estimated duration is
            only an estimate. The actual upgrade duration may vary.
          readOnly: true
          type: string
          format: google-duration
        schedule:
          description: Schedule details for the upgrade.
          $ref: '#/components/schemas/Schedule'
        version:
          description: 'Output only. '
          readOnly: true
          type: string
        etag:
          description: >-
            The etag for the upgrade resource. If this is provided on update, it
            must match the server's etag.
          type: string
        uid:
          description: Output only. System-generated unique identifier for the resource.
          readOnly: true
          type: string
        componentUpgrades:
          description: Output only. Output Only. The list of component upgrades.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/VmwareUpgradeComponent'
        startVersion:
          description: Output only. Output Only. The start version
          readOnly: true
          type: string
        targetVersion:
          description: Output only. Output Only. The target version
          readOnly: true
          type: string
    Schedule:
      id: Schedule
      description: Schedule for the upgrade.
      type: object
      properties:
        startTime:
          description: Required. The scheduled start time for the upgrade.
          type: string
          format: google-datetime
        weeklyWindows:
          description: >-
            Required. Weekly time windows for upgrade activities. The server
            performs upgrade activities during these time windows to minimize
            disruptions.
          type: array
          items:
            $ref: '#/components/schemas/TimeWindow'
        constraints:
          description: >-
            Output only. Output Only. Constraints applied to the schedule. These
            constraints should be applicable at the time of any rescheduling.
          readOnly: true
          $ref: '#/components/schemas/Constraints'
        editWindow:
          description: >-
            Output only. Output Only. The schedule is open for edits during this
            time interval or window.
          readOnly: true
          $ref: '#/components/schemas/Interval'
        lastEditor:
          description: >-
            Output only. Output Only. Indicates who most recently edited the
            upgrade schedule. The value is updated whenever the upgrade is
            rescheduled.
          readOnly: true
          type: string
          enumDescriptions:
            - The default value. This value should never be used.
            - The upgrade is scheduled by the System or internal service.
            - The upgrade is scheduled by the end user.
          enum:
            - EDITOR_UNSPECIFIED
            - SYSTEM
            - USER
    TimeWindow:
      id: TimeWindow
      description: Represents the time window to perform upgrade activities.
      type: object
      properties:
        dayOfWeek:
          description: Required. Day of the week for this window.
          type: string
          enumDescriptions:
            - The day of the week is unspecified.
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
          enum:
            - DAY_OF_WEEK_UNSPECIFIED
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        startTime:
          description: Required. Time in UTC when the window starts.
          $ref: '#/components/schemas/TimeOfDay'
        duration:
          description: >-
            Required. The duration of the window. The max allowed duration for
            any window is 24 hours.
          type: string
          format: google-duration
    TimeOfDay:
      id: TimeOfDay
      description: >-
        Represents a time of day. The date and time zone are either not
        significant or are specified elsewhere. An API may choose to allow leap
        seconds. Related types are google.type.Date and
        `google.protobuf.Timestamp`.
      type: object
      properties:
        hours:
          description: >-
            Hours of a day in 24 hour format. Must be greater than or equal to 0
            and typically must be less than or equal to 23. An API may choose to
            allow the value "24:00:00" for scenarios like business closing time.
          type: integer
          format: int32
        minutes:
          description: >-
            Minutes of an hour. Must be greater than or equal to 0 and less than
            or equal to 59.
          type: integer
          format: int32
        seconds:
          description: >-
            Seconds of a minute. Must be greater than or equal to 0 and
            typically must be less than or equal to 59. An API may allow the
            value 60 if it allows leap-seconds.
          type: integer
          format: int32
        nanos:
          description: >-
            Fractions of seconds, in nanoseconds. Must be greater than or equal
            to 0 and less than or equal to 999,999,999.
          type: integer
          format: int32
    Constraints:
      id: Constraints
      description: >-
        Constraints to be applied while editing a schedule. These constraints
        ensure that `Upgrade` specific requirements are met.
      type: object
      properties:
        minHoursDay:
          description: >-
            Output only. Minimum number of hours must be allotted for the
            upgrade activities for each selected day. This is a minimum; the
            upgrade schedule can allot more hours for the given day.
          readOnly: true
          type: integer
          format: int32
        minHoursWeek:
          description: >-
            Output only. The minimum number of weekly hours must be allotted for
            the upgrade activities. This is just a minimum; the schedule can
            assign more weekly hours.
          readOnly: true
          type: integer
          format: int32
        rescheduleDateRange:
          description: >-
            Output only. Output Only. The user can only reschedule an upgrade
            that starts within this range.
          readOnly: true
          $ref: '#/components/schemas/Interval'
        disallowedIntervals:
          description: >-
            Output only. Output Only. A list of intervals in which maintenance
            windows are not allowed. Any time window that overlaps with any of
            these intervals will be considered invalid.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/WeeklyTimeInterval'
    Interval:
      id: Interval
      description: >-
        Represents a time interval, encoded as a Timestamp start (inclusive) and
        a Timestamp end (exclusive). The start must be less than or equal to the
        end. When the start equals the end, the interval is empty (matches no
        time). When both start and end are unspecified, the interval matches any
        time.
      type: object
      properties:
        startTime:
          description: >-
            Optional. Inclusive start of the interval. If specified, a Timestamp
            matching this interval will have to be the same or after the start.
          type: string
          format: google-datetime
        endTime:
          description: >-
            Optional. Exclusive end of the interval. If specified, a Timestamp
            matching this interval will have to be before the end.
          type: string
          format: google-datetime
    WeeklyTimeInterval:
      id: WeeklyTimeInterval
      description: >-
        Represents a time interval, spanning across days of the week. Until
        local timezones are supported, this interval is in UTC.
      type: object
      properties:
        startDay:
          description: Output only. The day on which the interval starts.
          readOnly: true
          type: string
          enumDescriptions:
            - The day of the week is unspecified.
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
          enum:
            - DAY_OF_WEEK_UNSPECIFIED
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        startTime:
          description: Output only. The time on the start day at which the interval starts.
          readOnly: true
          $ref: '#/components/schemas/TimeOfDay'
        endDay:
          description: >-
            Output only. The day on which the interval ends. Can be same as
            start day.
          readOnly: true
          type: string
          enumDescriptions:
            - The day of the week is unspecified.
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
          enum:
            - DAY_OF_WEEK_UNSPECIFIED
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        endTime:
          description: Output only. The time on the end day at which the interval ends.
          readOnly: true
          $ref: '#/components/schemas/TimeOfDay'
    VmwareUpgradeComponent:
      id: VmwareUpgradeComponent
      description: Per component upgrade resource
      type: object
      properties:
        componentType:
          description: Output only. Type of component
          readOnly: true
          type: string
          enumDescriptions:
            - The default value. This value should never be used.
            - vcenter
            - esxi nodes + transport nodes
            - nsxt upgrade coordinator
            - nsxt edges cluster
            - nsxt managers/management plane
            - hcx
            - VSAN cluster
            - DVS switch
            - Nameserver VMs
            - KMS VM used for vsan encryption
            - witness VM in case of stretch PC
            - nsxt
            - Cluster is used in case of BM
          enum:
            - VMWARE_COMPONENT_TYPE_UNSPECIFIED
            - VCENTER
            - ESXI
            - NSXT_UC
            - NSXT_EDGE
            - NSXT_MGR
            - HCX
            - VSAN
            - DVS
            - NAMESERVER_VM
            - KMS_VM
            - WITNESS_VM
            - NSXT
            - CLUSTER
        state:
          description: Output only. Component's upgrade state.
          readOnly: true
          type: string
          enumDescriptions:
            - The default value. This value should never be used.
            - Component's upgrade is in progress
            - >-
              The component's upgrade is paused. Will be resumed when upgrade
              job is resumed
            - The component's upgrade is successfully completed
            - >-
              The component's upgrade has failed. This will move to resume if
              upgrade is resumed or stay as is
            - Component's upgrade has not started yet
            - >-
              Component's upgrade is not applicable in this upgrade. It will be
              skipped.
          enum:
            - STATE_UNSPECIFIED
            - RUNNING
            - PAUSED
            - SUCCEEDED
            - FAILED
            - NOT_STARTED
            - NOT_APPLICABLE
    ListLocationsResponse:
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Location:
      id: Location
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
          additionalProperties:
            type: string
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    SetIamPolicyRequest:
      id: SetIamPolicyRequest
      description: Request message for `SetIamPolicy` method.
      type: object
      properties:
        policy:
          description: >-
            REQUIRED: The complete policy to be applied to the `resource`. The
            size of the policy is limited to a few 10s of KB. An empty policy is
            a valid policy but certain Google Cloud services (such as Projects)
            might reject them.
          $ref: '#/components/schemas/Policy'
        updateMask:
          description: >-
            OPTIONAL: A FieldMask specifying which fields of the policy to
            modify. Only the fields in the mask will be modified. If no mask is
            provided, the following default mask is used: `paths: "bindings,
            etag"`
          type: string
          format: google-fieldmask
    Policy:
      id: Policy
      description: >-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources. A `Policy` is a collection of
        `bindings`. A `binding` binds one or more `members`, or principals, to a
        single `role`. Principals can be user accounts, service accounts, Google
        groups, and domains (such as G Suite). A `role` is a named list of
        permissions; each `role` can be an IAM predefined role or a user-created
        custom role. For some types of Google Cloud resources, a `binding` can
        also specify a `condition`, which is a logical expression that allows
        access to a resource only if the expression evaluates to `true`. A
        condition can add constraints based on attributes of the request, the
        resource, or both. To learn which resources support conditions in their
        IAM policies, see the [IAM
        documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        **JSON example:** ``` { "bindings": [ { "role":
        "roles/resourcemanager.organizationAdmin", "members": [
        "user:mike@example.com", "group:admins@example.com",
        "domain:google.com",
        "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, {
        "role": "roles/resourcemanager.organizationViewer", "members": [
        "user:eve@example.com" ], "condition": { "title": "expirable access",
        "description": "Does not grant access after Sep 2020", "expression":
        "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
        "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: -
        members: - user:mike@example.com - group:admins@example.com -
        domain:google.com -
        serviceAccount:my-project-id@appspot.gserviceaccount.com role:
        roles/resourcemanager.organizationAdmin - members: -
        user:eve@example.com role: roles/resourcemanager.organizationViewer
        condition: title: expirable access description: Does not grant access
        after Sep 2020 expression: request.time <
        timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ```
        For a description of IAM and its features, see the [IAM
        documentation](https://cloud.google.com/iam/docs/).
      type: object
      properties:
        version:
          description: >-
            Specifies the format of the policy. Valid values are `0`, `1`, and
            `3`. Requests that specify an invalid value are rejected. Any
            operation that affects conditional role bindings must specify
            version `3`. This requirement applies to the following operations: *
            Getting a policy that includes a conditional role binding * Adding a
            conditional role binding to a policy * Changing a conditional role
            binding in a policy * Removing any role binding, with or without a
            condition, from a policy that includes conditions **Important:** If
            you use IAM Conditions, you must include the `etag` field whenever
            you call `setIamPolicy`. If you omit this field, then IAM allows you
            to overwrite a version `3` policy with a version `1` policy, and all
            of the conditions in the version `3` policy are lost. If a policy
            does not include any conditions, operations on that policy may
            specify any valid version or leave the field unset. To learn which
            resources support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          type: integer
          format: int32
        bindings:
          description: >-
            Associates a list of `members`, or principals, with a `role`.
            Optionally, may specify a `condition` that determines how and when
            the `bindings` are applied. Each of the `bindings` must contain at
            least one principal. The `bindings` in a `Policy` can refer to up to
            1,500 principals; up to 250 of these principals can be Google
            groups. Each occurrence of a principal counts towards these limits.
            For example, if the `bindings` grant 50 different roles to
            `user:alice@example.com`, and not to any other principal, then you
            can add another 1,450 principals to the `bindings` in the `Policy`.
          type: array
          items:
            $ref: '#/components/schemas/Binding'
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          type: array
          items:
            $ref: '#/components/schemas/AuditConfig'
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy. **Important:** If you use
            IAM Conditions, you must include the `etag` field whenever you call
            `setIamPolicy`. If you omit this field, then IAM allows you to
            overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.
          type: string
          format: byte
    Binding:
      id: Binding
      description: Associates `members`, or principals, with a `role`.
      type: object
      properties:
        role:
          description: >-
            Role that is assigned to the list of `members`, or principals. For
            example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an
            overview of the IAM roles and permissions, see the [IAM
            documentation](https://cloud.google.com/iam/docs/roles-overview).
            For a list of the available pre-defined roles, see
            [here](https://cloud.google.com/iam/docs/understanding-roles).
          type: string
        members:
          description: >-
            Specifies the principals requesting access for a Google Cloud
            resource. `members` can have the following values: * `allUsers`: A
            special identifier that represents anyone who is on the internet;
            with or without a Google account. * `allAuthenticatedUsers`: A
            special identifier that represents anyone who is authenticated with
            a Google account or a service account. Does not include identities
            that come from external identity providers (IdPs) through identity
            federation. * `user:{emailid}`: An email address that represents a
            specific Google account. For example, `alice@example.com` . *
            `serviceAccount:{emailid}`: An email address that represents a
            Google service account. For example,
            `my-other-app@appspot.gserviceaccount.com`. *
            `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
            An identifier for a [Kubernetes service
            account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
            For example,
            `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
            `group:{emailid}`: An email address that represents a Google group.
            For example, `admins@example.com`. * `domain:{domain}`: The G Suite
            domain (primary) that represents all the users of that domain. For
            example, `google.com` or `example.com`. *
            `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workforce identity pool. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`:
            All workforce identities in a group. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All workforce identities with a specific attribute value. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`:
            All identities in a workforce identity pool. *
            `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workload identity pool. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`:
            A workload identity pool group. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All identities in a workload identity pool with a certain attribute.
            *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`:
            All identities in a workload identity pool. *
            `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus
            unique identifier) representing a user that has been recently
            deleted. For example, `alice@example.com?uid=123456789012345678901`.
            If the user is recovered, this value reverts to `user:{emailid}` and
            the recovered user retains the role in the binding. *
            `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
            (plus unique identifier) representing a service account that has
            been recently deleted. For example,
            `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
            If the service account is undeleted, this value reverts to
            `serviceAccount:{emailid}` and the undeleted service account retains
            the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:
            An email address (plus unique identifier) representing a Google
            group that has been recently deleted. For example,
            `admins@example.com?uid=123456789012345678901`. If the group is
            recovered, this value reverts to `group:{emailid}` and the recovered
            group retains the role in the binding. *
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            Deleted single identity in a workforce identity pool. For example,
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
          type: array
          items:
            type: string
        condition:
          description: >-
            The condition that is associated with this binding. If the condition
            evaluates to `true`, then this binding applies to the current
            request. If the condition evaluates to `false`, then this binding
            does not apply to the current request. However, a different role
            binding might grant the same role to one or more of the principals
            in this binding. To learn which resources support conditions in
            their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          $ref: '#/components/schemas/Expr'
    Expr:
      id: Expr
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      type: object
      properties:
        expression:
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
          type: string
        title:
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
        description:
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
          type: string
        location:
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
          type: string
    AuditConfig:
      id: AuditConfig
      description: >-
        Specifies the audit configuration for a service. The configuration
        determines which permission types are logged, and what identities, if
        any, are exempted from logging. An AuditConfig must have one or more
        AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
        specific service, the union of the two AuditConfigs is used for that
        service: the log_types specified in each AuditConfig are enabled, and
        the exempted_members in each AuditLogConfig are exempted. Example Policy
        with multiple AuditConfigs: { "audit_configs": [ { "service":
        "allServices", "audit_log_configs": [ { "log_type": "DATA_READ",
        "exempted_members": [ "user:jose@example.com" ] }, { "log_type":
        "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service":
        "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type":
        "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [
        "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy
        enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts
        `jose@example.com` from DATA_READ logging, and `aliya@example.com` from
        DATA_WRITE logging.
      type: object
      properties:
        service:
          description: >-
            Specifies a service that will be enabled for audit logging. For
            example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
          type: string
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          type: array
          items:
            $ref: '#/components/schemas/AuditLogConfig'
    AuditLogConfig:
      id: AuditLogConfig
      description: >-
        Provides the configuration for logging a type of permissions. Example: {
        "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
        "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This
        enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        jose@example.com from DATA_READ logging.
      type: object
      properties:
        logType:
          description: The log type that this config enables.
          type: string
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
        exemptedMembers:
          description: >-
            Specifies the identities that do not cause logging for this type of
            permission. Follows the same format of Binding.members.
          type: array
          items:
            type: string
    TestIamPermissionsRequest:
      id: TestIamPermissionsRequest
      description: Request message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          description: >-
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as `*` or `storage.*`) are not allowed. For more
            information see [IAM
            Overview](https://cloud.google.com/iam/docs/overview#permissions).
          type: array
          items:
            type: string
    TestIamPermissionsResponse:
      id: TestIamPermissionsResponse
      description: Response message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          description: >-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          type: array
          items:
            type: string
    OperationMetadata:
      id: OperationMetadata
      description: Represents the metadata of the long-running operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        target:
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        requestedCancellation:
          description: >-
            Output only. True if the user has requested cancellation of the
            operation; false otherwise. Operations that have successfully been
            cancelled have Operation.error value with a google.rpc.Status.code
            of 1, corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
    LocationMetadata:
      id: LocationMetadata
      description: >-
        VmwareEngine specific metadata for the given
        google.cloud.location.Location. It is returned as a content of the
        `google.cloud.location.Location.metadata` field.
      type: object
      properties:
        capabilities:
          description: Output only. Capabilities of this location.
          readOnly: true
          type: array
          items:
            type: string
            enumDescriptions:
              - >-
                The default value. This value is used if the capability is
                omitted or unknown.
              - Stretch clusters are supported in this location.
            enum:
              - CAPABILITY_UNSPECIFIED
              - STRETCHED_CLUSTERS
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    dns_bind_permission:
      id: google.vmwareengine.dns_bind_permission
      name: dns_bind_permission
      title: Dns_bind_permission
      methods:
        get_dns_bind_permission:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dnsBindPermission/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        grant:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dnsBindPermission:grant/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        revoke:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dnsBindPermission:revoke/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/dns_bind_permission/methods/get_dns_bind_permission
        insert: []
        update: []
        replace: []
        delete: []
    locations:
      id: google.vmwareengine.locations
      name: locations
      title: Locations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: google.vmwareengine.operations
      name: operations
      title: Operations
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    private_clouds:
      id: google.vmwareengine.private_clouds
      name: private_clouds
      title: Private_clouds
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.privateClouds
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        private_cloud_deletion_now:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}:privateCloudDeletionNow/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        undelete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}:undelete/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        show_nsx_credentials:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}:showNsxCredentials/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        show_vcenter_credentials:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}:showVcenterCredentials/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reset_nsx_credentials:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}:resetNsxCredentials/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reset_vcenter_credentials:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}:resetVcenterCredentials/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_clouds/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_clouds/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/private_clouds/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/private_clouds/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_clouds/methods/delete'
    private_clouds_dns_forwarding:
      id: google.vmwareengine.private_clouds_dns_forwarding
      name: private_clouds_dns_forwarding
      title: Private_clouds_dns_forwarding
      methods:
        get_dns_forwarding:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1dnsForwarding/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_dns_forwarding:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1dnsForwarding/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/private_clouds_dns_forwarding/methods/get_dns_forwarding
        insert: []
        update:
          - $ref: >-
              #/components/x-stackQL-resources/private_clouds_dns_forwarding/methods/update_dns_forwarding
        replace: []
        delete: []
    private_clouds_iam_policies:
      id: google.vmwareengine.private_clouds_iam_policies
      name: private_clouds_iam_policies
      title: Private_clouds_iam_policies
      methods:
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/private_clouds_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/private_clouds_iam_policies/methods/set_iam_policy
        delete: []
    clusters:
      id: google.vmwareengine.clusters
      name: clusters
      title: Clusters
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1clusters/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.clusters
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1clusters/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1clusters~1{clustersId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1clusters~1{clustersId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1clusters~1{clustersId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/get'
          - $ref: '#/components/x-stackQL-resources/clusters/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/delete'
    clusters_iam_policies:
      id: google.vmwareengine.clusters_iam_policies
      name: clusters_iam_policies
      title: Clusters_iam_policies
      methods:
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1clusters~1{clustersId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1clusters~1{clustersId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1clusters~1{clustersId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/clusters_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/clusters_iam_policies/methods/set_iam_policy
        delete: []
    nodes:
      id: google.vmwareengine.nodes
      name: nodes
      title: Nodes
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1clusters~1{clustersId}~1nodes/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.nodes
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1clusters~1{clustersId}~1nodes~1{nodesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/nodes/methods/get'
          - $ref: '#/components/x-stackQL-resources/nodes/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    external_addresses:
      id: google.vmwareengine.external_addresses
      name: external_addresses
      title: External_addresses
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1externalAddresses/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.externalAddresses
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1externalAddresses/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1externalAddresses~1{externalAddressesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1externalAddresses~1{externalAddressesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1externalAddresses~1{externalAddressesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/external_addresses/methods/get'
          - $ref: '#/components/x-stackQL-resources/external_addresses/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/external_addresses/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/external_addresses/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/external_addresses/methods/delete'
    subnets:
      id: google.vmwareengine.subnets
      name: subnets
      title: Subnets
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1subnets/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.subnets
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1subnets~1{subnetsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1subnets~1{subnetsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/subnets/methods/get'
          - $ref: '#/components/x-stackQL-resources/subnets/methods/list'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/subnets/methods/patch'
        replace: []
        delete: []
    logging_servers:
      id: google.vmwareengine.logging_servers
      name: logging_servers
      title: Logging_servers
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1loggingServers/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.loggingServers
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1loggingServers/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1loggingServers~1{loggingServersId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1loggingServers~1{loggingServersId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1loggingServers~1{loggingServersId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/logging_servers/methods/get'
          - $ref: '#/components/x-stackQL-resources/logging_servers/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/logging_servers/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/logging_servers/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/logging_servers/methods/delete'
    hcx_activation_keys:
      id: google.vmwareengine.hcx_activation_keys
      name: hcx_activation_keys
      title: Hcx_activation_keys
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1hcxActivationKeys/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1hcxActivationKeys/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.hcxActivationKeys
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1hcxActivationKeys~1{hcxActivationKeysId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hcx_activation_keys/methods/get'
          - $ref: '#/components/x-stackQL-resources/hcx_activation_keys/methods/list'
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/hcx_activation_keys/methods/create
        update: []
        replace: []
        delete: []
    hcx_activation_keys_iam_policies:
      id: google.vmwareengine.hcx_activation_keys_iam_policies
      name: hcx_activation_keys_iam_policies
      title: Hcx_activation_keys_iam_policies
      methods:
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1hcxActivationKeys~1{hcxActivationKeysId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1hcxActivationKeys~1{hcxActivationKeysId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1hcxActivationKeys~1{hcxActivationKeysId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/hcx_activation_keys_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/hcx_activation_keys_iam_policies/methods/set_iam_policy
        delete: []
    management_dns_zone_bindings:
      id: google.vmwareengine.management_dns_zone_bindings
      name: management_dns_zone_bindings
      title: Management_dns_zone_bindings
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1managementDnsZoneBindings/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.managementDnsZoneBindings
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1managementDnsZoneBindings/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1managementDnsZoneBindings~1{managementDnsZoneBindingsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1managementDnsZoneBindings~1{managementDnsZoneBindingsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1managementDnsZoneBindings~1{managementDnsZoneBindingsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        repair:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1managementDnsZoneBindings~1{managementDnsZoneBindingsId}:repair/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/management_dns_zone_bindings/methods/get
          - $ref: >-
              #/components/x-stackQL-resources/management_dns_zone_bindings/methods/list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/management_dns_zone_bindings/methods/create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/management_dns_zone_bindings/methods/patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/management_dns_zone_bindings/methods/delete
    upgrades:
      id: google.vmwareengine.upgrades
      name: upgrades
      title: Upgrades
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1upgrades/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.upgrades
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1upgrades~1{upgradesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateClouds~1{privateCloudsId}~1upgrades~1{upgradesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/upgrades/methods/get'
          - $ref: '#/components/x-stackQL-resources/upgrades/methods/list'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/upgrades/methods/patch'
        replace: []
        delete: []
    network_policies_external_addresses:
      id: google.vmwareengine.network_policies_external_addresses
      name: network_policies_external_addresses
      title: Network_policies_external_addresses
      methods:
        fetch_external_addresses:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1networkPolicies~1{networkPoliciesId}:fetchExternalAddresses/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/network_policies_external_addresses/methods/fetch_external_addresses
        insert: []
        update: []
        replace: []
        delete: []
    network_policies:
      id: google.vmwareengine.network_policies
      name: network_policies
      title: Network_policies
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1networkPolicies~1{networkPoliciesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1networkPolicies~1{networkPoliciesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1networkPolicies~1{networkPoliciesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1networkPolicies/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.networkPolicies
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1networkPolicies/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_policies/methods/get'
          - $ref: '#/components/x-stackQL-resources/network_policies/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/network_policies/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/network_policies/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/network_policies/methods/delete'
    external_access_rules:
      id: google.vmwareengine.external_access_rules
      name: external_access_rules
      title: External_access_rules
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1networkPolicies~1{networkPoliciesId}~1externalAccessRules/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.externalAccessRules
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1networkPolicies~1{networkPoliciesId}~1externalAccessRules/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1networkPolicies~1{networkPoliciesId}~1externalAccessRules~1{externalAccessRulesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1networkPolicies~1{networkPoliciesId}~1externalAccessRules~1{externalAccessRulesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1networkPolicies~1{networkPoliciesId}~1externalAccessRules~1{externalAccessRulesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/external_access_rules/methods/get'
          - $ref: >-
              #/components/x-stackQL-resources/external_access_rules/methods/list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/external_access_rules/methods/create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/external_access_rules/methods/patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/external_access_rules/methods/delete
    node_types:
      id: google.vmwareengine.node_types
      name: node_types
      title: Node_types
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1nodeTypes/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.nodeTypes
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1nodeTypes~1{nodeTypesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/node_types/methods/get'
          - $ref: '#/components/x-stackQL-resources/node_types/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    network_peerings:
      id: google.vmwareengine.network_peerings
      name: network_peerings
      title: Network_peerings
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1networkPeerings~1{networkPeeringsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1networkPeerings~1{networkPeeringsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1networkPeerings~1{networkPeeringsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1networkPeerings/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.networkPeerings
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1networkPeerings/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_peerings/methods/get'
          - $ref: '#/components/x-stackQL-resources/network_peerings/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/network_peerings/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/network_peerings/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/network_peerings/methods/delete'
    peering_routes:
      id: google.vmwareengine.peering_routes
      name: peering_routes
      title: Peering_routes
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateConnections~1{privateConnectionsId}~1peeringRoutes/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.peeringRoutes
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/peering_routes/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vmware_engine_networks:
      id: google.vmwareengine.vmware_engine_networks
      name: vmware_engine_networks
      title: Vmware_engine_networks
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareEngineNetworks/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareEngineNetworks/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.vmwareEngineNetworks
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareEngineNetworks~1{vmwareEngineNetworksId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareEngineNetworks~1{vmwareEngineNetworksId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1vmwareEngineNetworks~1{vmwareEngineNetworksId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/vmware_engine_networks/methods/get
          - $ref: >-
              #/components/x-stackQL-resources/vmware_engine_networks/methods/list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/vmware_engine_networks/methods/create
        update:
          - $ref: >-
              #/components/x-stackQL-resources/vmware_engine_networks/methods/patch
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/vmware_engine_networks/methods/delete
    private_connections:
      id: google.vmwareengine.private_connections
      name: private_connections
      title: Private_connections
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateConnections/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateConnections/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.privateConnections
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateConnections~1{privateConnectionsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateConnections~1{privateConnectionsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1privateConnections~1{privateConnectionsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_connections/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_connections/methods/list'
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/private_connections/methods/create
        update:
          - $ref: '#/components/x-stackQL-resources/private_connections/methods/patch'
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/private_connections/methods/delete
    announcements:
      id: google.vmwareengine.announcements
      name: announcements
      title: Announcements
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1announcements/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.announcements
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1announcements~1{announcementsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/announcements/methods/get'
          - $ref: '#/components/x-stackQL-resources/announcements/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
paths:
  /v1/projects/{projectsId}/locations/{locationsId}/dnsBindPermission:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: >-
        Gets all the principals having bind permission on the intranet VPC
        associated with the consumer project granted by the Grant API.
        DnsBindPermission is a global resource and location can only be global.
      operationId: vmwareengine.projects.locations.getDnsBindPermission
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsBindPermission'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations:
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: vmwareengine.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: extraLocationTypes
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: vmwareengine.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: vmwareengine.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: vmwareengine.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: vmwareengine.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/privateClouds:
    parameters: *ref_1
    get:
      description: Lists `PrivateCloud` resources in a given project and location.
      operationId: vmwareengine.projects.locations.privateClouds.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPrivateCloudsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: >-
        Creates a new `PrivateCloud` resource in a given project and location.
        Private clouds of type `STANDARD` and `TIME_LIMITED` are zonal
        resources, `STRETCHED` private clouds are regional. Creating a private
        cloud also creates a [management
        cluster](https://cloud.google.com/vmware-engine/docs/concepts-vmware-components)
        for that private cloud.
      operationId: vmwareengine.projects.locations.privateClouds.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateCloud'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: privateCloudId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/privateClouds/{privateCloudsId}:
    parameters: *ref_1
    get:
      description: Retrieves a `PrivateCloud` resource by its resource name.
      operationId: vmwareengine.projects.locations.privateClouds.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateCloud'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Modifies a `PrivateCloud` resource. Only the following fields can be
        updated: `description`. Only fields specified in `updateMask` are
        applied. During operation processing, the resource is temporarily in the
        `ACTIVE` state before the operation fully completes. For that period of
        time, you can't update the resource. Use the operation status to
        determine when the processing fully completes.
      operationId: vmwareengine.projects.locations.privateClouds.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateCloud'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
    delete:
      description: >-
        Schedules a `PrivateCloud` resource for deletion. A `PrivateCloud`
        resource scheduled for deletion has `PrivateCloud.state` set to
        `DELETED` and `expireTime` set to the time when deletion is final and
        can no longer be reversed. The delete operation is marked as done as
        soon as the `PrivateCloud` is successfully scheduled for deletion (this
        also applies when `delayHours` is set to zero), and the operation is not
        kept in pending state until `PrivateCloud` is purged. `PrivateCloud` can
        be restored using `UndeletePrivateCloud` method before the `expireTime`
        elapses. When `expireTime` is reached, deletion is final and all private
        cloud resources are irreversibly removed and billing stops. During the
        final removal process, `PrivateCloud.state` is set to `PURGING`.
        `PrivateCloud` can be polled using standard `GET` method for the whole
        period of deletion and purging. It will not be returned only when it is
        completely purged.
      operationId: vmwareengine.projects.locations.privateClouds.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
        - in: query
          name: delayHours
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/privateClouds/{privateCloudsId}:privateCloudDeletionNow:
    parameters: *ref_1
    post:
      description: >-
        Accelerates the deletion of a private cloud that is currently in soft
        deletion A `PrivateCloud` resource in soft deletion has
        `PrivateCloud.state` set to `SOFT_DELETED` and `PrivateCloud.expireTime`
        set to the time when deletion can no longer be reversed.
      operationId: vmwareengine.projects.locations.privateClouds.privateCloudDeletionNow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceleratePrivateCloudDeletionRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/privateClouds/{privateCloudsId}:undelete:
    parameters: *ref_1
    post:
      description: >-
        Restores a private cloud that was previously scheduled for deletion by
        `DeletePrivateCloud`. A `PrivateCloud` resource scheduled for deletion
        has `PrivateCloud.state` set to `DELETED` and `PrivateCloud.expireTime`
        set to the time when deletion can no longer be reversed.
      operationId: vmwareengine.projects.locations.privateClouds.undelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeletePrivateCloudRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/privateClouds/{privateCloudsId}:showNsxCredentials:
    parameters: *ref_1
    get:
      description: Gets details of credentials for NSX appliance.
      operationId: vmwareengine.projects.locations.privateClouds.showNsxCredentials
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credentials'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/privateClouds/{privateCloudsId}:showVcenterCredentials:
    parameters: *ref_1
    get:
      description: Gets details of credentials for Vcenter appliance.
      operationId: vmwareengine.projects.locations.privateClouds.showVcenterCredentials
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credentials'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: query
          name: username
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/privateClouds/{privateCloudsId}:resetNsxCredentials:
    parameters: *ref_1
    post:
      description: Resets credentials of the NSX appliance.
      operationId: vmwareengine.projects.locations.privateClouds.resetNsxCredentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetNsxCredentialsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/privateClouds/{privateCloudsId}:resetVcenterCredentials:
    parameters: *ref_1
    post:
      description: Resets credentials of the Vcenter appliance.
      operationId: vmwareengine.projects.locations.privateClouds.resetVcenterCredentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetVcenterCredentialsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/privateClouds/{privateCloudsId}/dnsForwarding:
    parameters: *ref_1
    get:
      description: Gets details of the `DnsForwarding` config.
      operationId: vmwareengine.projects.locations.privateClouds.getDnsForwarding
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsForwarding'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates the parameters of the `DnsForwarding` config, like associated
        domains. Only fields specified in `update_mask` are applied.
      operationId: vmwareengine.projects.locations.privateClouds.updateDnsForwarding
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsForwarding'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/privateClouds/{privateCloudsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: vmwareengine.projects.locations.privateClouds.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/privateClouds/{privateCloudsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: vmwareengine.projects.locations.privateClouds.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/privateClouds/{privateCloudsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: vmwareengine.projects.locations.privateClouds.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/privateClouds/{privateCloudsId}/clusters:
    parameters: *ref_1
    get:
      description: Lists `Cluster` resources in a given private cloud.
      operationId: vmwareengine.projects.locations.privateClouds.clusters.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClustersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: >-
        Creates a new cluster in a given private cloud. Creating a new cluster
        provides additional nodes for use in the parent private cloud and
        requires sufficient [node
        quota](https://cloud.google.com/vmware-engine/quotas).
      operationId: vmwareengine.projects.locations.privateClouds.clusters.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: query
          name: clusterId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/privateClouds/{privateCloudsId}/clusters/{clustersId}:
    parameters: *ref_1
    get:
      description: Retrieves a `Cluster` resource by its resource name.
      operationId: vmwareengine.projects.locations.privateClouds.clusters.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Modifies a `Cluster` resource. Only fields specified in `updateMask` are
        applied. During operation processing, the resource is temporarily in the
        `ACTIVE` state before the operation fully completes. For that period of
        time, you can't update the resource. Use the operation status to
        determine when the processing fully completes.
      operationId: vmwareengine.projects.locations.privateClouds.clusters.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
    delete:
      description: >-
        Deletes a `Cluster` resource. To avoid unintended data loss, migrate or
        gracefully shut down any workloads running on the cluster before
        deletion. You cannot delete the management cluster of a private cloud
        using this method.
      operationId: vmwareengine.projects.locations.privateClouds.clusters.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/privateClouds/{privateCloudsId}/clusters/{clustersId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: vmwareengine.projects.locations.privateClouds.clusters.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/privateClouds/{privateCloudsId}/clusters/{clustersId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: vmwareengine.projects.locations.privateClouds.clusters.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/privateClouds/{privateCloudsId}/clusters/{clustersId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: >-
        vmwareengine.projects.locations.privateClouds.clusters.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/privateClouds/{privateCloudsId}/clusters/{clustersId}/nodes:
    parameters: *ref_1
    get:
      description: Lists nodes in a given cluster.
      operationId: vmwareengine.projects.locations.privateClouds.clusters.nodes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNodesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/privateClouds/{privateCloudsId}/clusters/{clustersId}/nodes/{nodesId}:
    parameters: *ref_1
    get:
      description: Gets details of a single node.
      operationId: vmwareengine.projects.locations.privateClouds.clusters.nodes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: path
          name: clustersId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/privateClouds/{privateCloudsId}/externalAddresses:
    parameters: *ref_1
    get:
      description: >-
        Lists external IP addresses assigned to VMware workload VMs in a given
        private cloud.
      operationId: vmwareengine.projects.locations.privateClouds.externalAddresses.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExternalAddressesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: >-
        Creates a new `ExternalAddress` resource in a given private cloud. The
        network policy that corresponds to the private cloud must have the
        external IP address network service enabled
        (`NetworkPolicy.external_ip`).
      operationId: vmwareengine.projects.locations.privateClouds.externalAddresses.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalAddress'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: query
          name: externalAddressId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/privateClouds/{privateCloudsId}/externalAddresses/{externalAddressesId}:
    parameters: *ref_1
    get:
      description: Gets details of a single external IP address.
      operationId: vmwareengine.projects.locations.privateClouds.externalAddresses.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalAddress'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: path
          name: externalAddressesId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates the parameters of a single external IP address. Only fields
        specified in `update_mask` are applied. During operation processing, the
        resource is temporarily in the `ACTIVE` state before the operation fully
        completes. For that period of time, you can't update the resource. Use
        the operation status to determine when the processing fully completes.
      operationId: vmwareengine.projects.locations.privateClouds.externalAddresses.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalAddress'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: path
          name: externalAddressesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
    delete:
      description: >-
        Deletes a single external IP address. When you delete an external IP
        address, connectivity between the external IP address and the
        corresponding internal IP address is lost.
      operationId: vmwareengine.projects.locations.privateClouds.externalAddresses.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: path
          name: externalAddressesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/privateClouds/{privateCloudsId}/subnets:
    parameters: *ref_1
    get:
      description: Lists subnets in a given private cloud.
      operationId: vmwareengine.projects.locations.privateClouds.subnets.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSubnetsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/privateClouds/{privateCloudsId}/subnets/{subnetsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single subnet.
      operationId: vmwareengine.projects.locations.privateClouds.subnets.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subnet'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: path
          name: subnetsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates the parameters of a single subnet. Only fields specified in
        `update_mask` are applied. *Note*: This API is synchronous and always
        returns a successful `google.longrunning.Operation` (LRO). The returned
        LRO will only have `done` and `response` fields.
      operationId: vmwareengine.projects.locations.privateClouds.subnets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subnet'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: path
          name: subnetsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/locations/{locationsId}/privateClouds/{privateCloudsId}/loggingServers:
    parameters: *ref_1
    get:
      description: Lists logging servers configured for a given private cloud.
      operationId: vmwareengine.projects.locations.privateClouds.loggingServers.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLoggingServersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Create a new logging server for a given private cloud.
      operationId: vmwareengine.projects.locations.privateClouds.loggingServers.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoggingServer'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: query
          name: loggingServerId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/privateClouds/{privateCloudsId}/loggingServers/{loggingServersId}:
    parameters: *ref_1
    get:
      description: Gets details of a logging server.
      operationId: vmwareengine.projects.locations.privateClouds.loggingServers.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingServer'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: path
          name: loggingServersId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates the parameters of a single logging server. Only fields specified
        in `update_mask` are applied.
      operationId: vmwareengine.projects.locations.privateClouds.loggingServers.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoggingServer'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: path
          name: loggingServersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
    delete:
      description: Deletes a single logging server.
      operationId: vmwareengine.projects.locations.privateClouds.loggingServers.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: path
          name: loggingServersId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/privateClouds/{privateCloudsId}/hcxActivationKeys:
    parameters: *ref_1
    post:
      description: Creates a new HCX activation key in a given private cloud.
      operationId: vmwareengine.projects.locations.privateClouds.hcxActivationKeys.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HcxActivationKey'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: query
          name: hcxActivationKeyId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
    get:
      description: Lists `HcxActivationKey` resources in a given private cloud.
      operationId: vmwareengine.projects.locations.privateClouds.hcxActivationKeys.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHcxActivationKeysResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/privateClouds/{privateCloudsId}/hcxActivationKeys/{hcxActivationKeysId}:
    parameters: *ref_1
    get:
      description: Retrieves a `HcxActivationKey` resource by its resource name.
      operationId: vmwareengine.projects.locations.privateClouds.hcxActivationKeys.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HcxActivationKey'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: path
          name: hcxActivationKeysId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/privateClouds/{privateCloudsId}/hcxActivationKeys/{hcxActivationKeysId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: >-
        vmwareengine.projects.locations.privateClouds.hcxActivationKeys.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: path
          name: hcxActivationKeysId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/privateClouds/{privateCloudsId}/hcxActivationKeys/{hcxActivationKeysId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: >-
        vmwareengine.projects.locations.privateClouds.hcxActivationKeys.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: path
          name: hcxActivationKeysId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v1/projects/{projectsId}/locations/{locationsId}/privateClouds/{privateCloudsId}/hcxActivationKeys/{hcxActivationKeysId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: >-
        vmwareengine.projects.locations.privateClouds.hcxActivationKeys.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: path
          name: hcxActivationKeysId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/privateClouds/{privateCloudsId}/managementDnsZoneBindings:
    parameters: *ref_1
    get:
      description: >-
        Lists Consumer VPCs bound to Management DNS Zone of a given private
        cloud.
      operationId: >-
        vmwareengine.projects.locations.privateClouds.managementDnsZoneBindings.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListManagementDnsZoneBindingsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: >-
        Creates a new `ManagementDnsZoneBinding` resource in a private cloud.
        This RPC creates the DNS binding and the resource that represents the
        DNS binding of the consumer VPC network to the management DNS zone. A
        management DNS zone is the Cloud DNS cross-project binding zone that
        VMware Engine creates for each private cloud. It contains FQDNs and
        corresponding IP addresses for the private cloud's ESXi hosts and
        management VM appliances like vCenter and NSX Manager.
      operationId: >-
        vmwareengine.projects.locations.privateClouds.managementDnsZoneBindings.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagementDnsZoneBinding'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: query
          name: managementDnsZoneBindingId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/privateClouds/{privateCloudsId}/managementDnsZoneBindings/{managementDnsZoneBindingsId}:
    parameters: *ref_1
    get:
      description: Retrieves a 'ManagementDnsZoneBinding' resource by its resource name.
      operationId: >-
        vmwareengine.projects.locations.privateClouds.managementDnsZoneBindings.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementDnsZoneBinding'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: path
          name: managementDnsZoneBindingsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates a `ManagementDnsZoneBinding` resource. Only fields specified in
        `update_mask` are applied.
      operationId: >-
        vmwareengine.projects.locations.privateClouds.managementDnsZoneBindings.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagementDnsZoneBinding'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: path
          name: managementDnsZoneBindingsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
    delete:
      description: >-
        Deletes a `ManagementDnsZoneBinding` resource. When a management DNS
        zone binding is deleted, the corresponding consumer VPC network is no
        longer bound to the management DNS zone.
      operationId: >-
        vmwareengine.projects.locations.privateClouds.managementDnsZoneBindings.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: path
          name: managementDnsZoneBindingsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/privateClouds/{privateCloudsId}/managementDnsZoneBindings/{managementDnsZoneBindingsId}:repair:
    parameters: *ref_1
    post:
      description: >-
        Retries to create a `ManagementDnsZoneBinding` resource that is in
        failed state.
      operationId: >-
        vmwareengine.projects.locations.privateClouds.managementDnsZoneBindings.repair
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepairManagementDnsZoneBindingRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: path
          name: managementDnsZoneBindingsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/privateClouds/{privateCloudsId}/upgrades:
    parameters: *ref_1
    get:
      description: Lists past, ongoing and upcoming `Upgrades` for the given private cloud.
      operationId: vmwareengine.projects.locations.privateClouds.upgrades.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUpgradesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/privateClouds/{privateCloudsId}/upgrades/{upgradesId}:
    parameters: *ref_1
    get:
      description: Retrieves a private cloud `Upgrade` resource by its resource name.
      operationId: vmwareengine.projects.locations.privateClouds.upgrades.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Upgrade'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: path
          name: upgradesId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Update the private cloud `Upgrade` resource. Only `schedule` field can
        updated. The schedule can only be updated when the upgrade has not
        started and schedule edit window is open. Only fields specified in
        `update_mask` are considered.
      operationId: vmwareengine.projects.locations.privateClouds.upgrades.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Upgrade'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateCloudsId
          required: true
          schema:
            type: string
        - in: path
          name: upgradesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/networkPolicies/{networkPoliciesId}:fetchExternalAddresses:
    parameters: *ref_1
    get:
      description: >-
        Lists external IP addresses assigned to VMware workload VMs within the
        scope of the given network policy.
      operationId: vmwareengine.projects.locations.networkPolicies.fetchExternalAddresses
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/FetchNetworkPolicyExternalAddressesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: networkPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/networkPolicies/{networkPoliciesId}:
    parameters: *ref_1
    get:
      description: Retrieves a `NetworkPolicy` resource by its resource name.
      operationId: vmwareengine.projects.locations.networkPolicies.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkPolicy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: networkPoliciesId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Modifies a `NetworkPolicy` resource. Only the following fields can be
        updated: `internet_access`, `external_ip`, `edge_services_cidr`. Only
        fields specified in `updateMask` are applied. When updating a network
        policy, the external IP network service can only be disabled if there
        are no external IP addresses present in the scope of the policy. Also, a
        `NetworkService` cannot be updated when `NetworkService.state` is set to
        `RECONCILING`. During operation processing, the resource is temporarily
        in the `ACTIVE` state before the operation fully completes. For that
        period of time, you can't update the resource. Use the operation status
        to determine when the processing fully completes.
      operationId: vmwareengine.projects.locations.networkPolicies.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkPolicy'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: networkPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
    delete:
      description: >-
        Deletes a `NetworkPolicy` resource. A network policy cannot be deleted
        when `NetworkService.state` is set to `RECONCILING` for either its
        external IP or internet access service.
      operationId: vmwareengine.projects.locations.networkPolicies.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: networkPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/networkPolicies:
    parameters: *ref_1
    get:
      description: Lists `NetworkPolicy` resources in a specified project and location.
      operationId: vmwareengine.projects.locations.networkPolicies.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNetworkPoliciesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: >-
        Creates a new network policy in a given VMware Engine network of a
        project and location (region). A new network policy cannot be created if
        another network policy already exists in the same scope.
      operationId: vmwareengine.projects.locations.networkPolicies.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkPolicy'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: networkPolicyId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/networkPolicies/{networkPoliciesId}/externalAccessRules:
    parameters: *ref_1
    get:
      description: Lists `ExternalAccessRule` resources in the specified network policy.
      operationId: vmwareengine.projects.locations.networkPolicies.externalAccessRules.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExternalAccessRulesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: networkPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new external access rule in a given network policy.
      operationId: >-
        vmwareengine.projects.locations.networkPolicies.externalAccessRules.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalAccessRule'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: networkPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: externalAccessRuleId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/networkPolicies/{networkPoliciesId}/externalAccessRules/{externalAccessRulesId}:
    parameters: *ref_1
    get:
      description: Gets details of a single external access rule.
      operationId: vmwareengine.projects.locations.networkPolicies.externalAccessRules.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalAccessRule'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: networkPoliciesId
          required: true
          schema:
            type: string
        - in: path
          name: externalAccessRulesId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates the parameters of a single external access rule. Only fields
        specified in `update_mask` are applied.
      operationId: >-
        vmwareengine.projects.locations.networkPolicies.externalAccessRules.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalAccessRule'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: networkPoliciesId
          required: true
          schema:
            type: string
        - in: path
          name: externalAccessRulesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
    delete:
      description: Deletes a single external access rule.
      operationId: >-
        vmwareengine.projects.locations.networkPolicies.externalAccessRules.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: networkPoliciesId
          required: true
          schema:
            type: string
        - in: path
          name: externalAccessRulesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/nodeTypes:
    parameters: *ref_1
    get:
      description: Lists node types
      operationId: vmwareengine.projects.locations.nodeTypes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNodeTypesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/nodeTypes/{nodeTypesId}:
    parameters: *ref_1
    get:
      description: Gets details of a single `NodeType`.
      operationId: vmwareengine.projects.locations.nodeTypes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeType'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nodeTypesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/networkPeerings/{networkPeeringsId}:
    parameters: *ref_1
    get:
      description: >-
        Retrieves a `NetworkPeering` resource by its resource name. The resource
        contains details of the network peering, such as peered networks, import
        and export custom route configurations, and peering state.
        NetworkPeering is a global resource and location can only be global.
      operationId: vmwareengine.projects.locations.networkPeerings.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkPeering'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: networkPeeringsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a `NetworkPeering` resource. When a network peering is deleted
        for a VMware Engine network, the peer network becomes inaccessible to
        that VMware Engine network. NetworkPeering is a global resource and
        location can only be global.
      operationId: vmwareengine.projects.locations.networkPeerings.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: networkPeeringsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
    patch:
      description: >-
        Modifies a `NetworkPeering` resource. Only the `description` field can
        be updated. Only fields specified in `updateMask` are applied.
        NetworkPeering is a global resource and location can only be global.
      operationId: vmwareengine.projects.locations.networkPeerings.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkPeering'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: networkPeeringsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/networkPeerings:
    parameters: *ref_1
    get:
      description: >-
        Lists `NetworkPeering` resources in a given project. NetworkPeering is a
        global resource and location can only be global.
      operationId: vmwareengine.projects.locations.networkPeerings.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNetworkPeeringsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: >-
        Creates a new network peering between the peer network and VMware Engine
        network provided in a `NetworkPeering` resource. NetworkPeering is a
        global resource and location can only be global.
      operationId: vmwareengine.projects.locations.networkPeerings.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkPeering'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: networkPeeringId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/networkPeerings/{networkPeeringsId}/peeringRoutes:
    parameters: *ref_1
    get:
      description: >-
        Lists the network peering routes exchanged over a peering connection.
        NetworkPeering is a global resource and location can only be global.
      operationId: vmwareengine.projects.locations.networkPeerings.peeringRoutes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPeeringRoutesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: networkPeeringsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/vmwareEngineNetworks:
    parameters: *ref_1
    post:
      description: Creates a new VMware Engine network that can be used by a private cloud.
      operationId: vmwareengine.projects.locations.vmwareEngineNetworks.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VmwareEngineNetwork'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: vmwareEngineNetworkId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
    get:
      description: Lists `VmwareEngineNetwork` resources in a given project and location.
      operationId: vmwareengine.projects.locations.vmwareEngineNetworks.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVmwareEngineNetworksResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/vmwareEngineNetworks/{vmwareEngineNetworksId}:
    parameters: *ref_1
    patch:
      description: >-
        Modifies a VMware Engine network resource. Only the following fields can
        be updated: `description`. Only fields specified in `updateMask` are
        applied.
      operationId: vmwareengine.projects.locations.vmwareEngineNetworks.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VmwareEngineNetwork'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareEngineNetworksId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
    delete:
      description: >-
        Deletes a `VmwareEngineNetwork` resource. You can only delete a VMware
        Engine network after all resources that refer to it are deleted. For
        example, a private cloud, a network peering, and a network policy can
        all refer to the same VMware Engine network.
      operationId: vmwareengine.projects.locations.vmwareEngineNetworks.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareEngineNetworksId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
    get:
      description: >-
        Retrieves a `VmwareEngineNetwork` resource by its resource name. The
        resource contains details of the VMware Engine network, such as its
        VMware Engine network type, peered networks in a service project, and
        state (for example, `CREATING`, `ACTIVE`, `DELETING`).
      operationId: vmwareengine.projects.locations.vmwareEngineNetworks.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmwareEngineNetwork'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: vmwareEngineNetworksId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/privateConnections:
    parameters: *ref_1
    post:
      description: >-
        Creates a new private connection that can be used for accessing private
        Clouds.
      operationId: vmwareengine.projects.locations.privateConnections.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateConnection'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: privateConnectionId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
    get:
      description: Lists `PrivateConnection` resources in a given project and location.
      operationId: vmwareengine.projects.locations.privateConnections.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPrivateConnectionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}:
    parameters: *ref_1
    get:
      description: >-
        Retrieves a `PrivateConnection` resource by its resource name. The
        resource contains details of the private connection, such as connected
        network, routing mode and state.
      operationId: vmwareengine.projects.locations.privateConnections.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateConnection'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateConnectionsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Modifies a `PrivateConnection` resource. Only `description` and
        `routing_mode` fields can be updated. Only fields specified in
        `updateMask` are applied.
      operationId: vmwareengine.projects.locations.privateConnections.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateConnection'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateConnectionsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
    delete:
      description: >-
        Deletes a `PrivateConnection` resource. When a private connection is
        deleted for a VMware Engine network, the connected network becomes
        inaccessible to that VMware Engine network.
      operationId: vmwareengine.projects.locations.privateConnections.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateConnectionsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/peeringRoutes:
    parameters: *ref_1
    get:
      description: Lists the private connection routes exchanged over a peering connection.
      operationId: vmwareengine.projects.locations.privateConnections.peeringRoutes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ListPrivateConnectionPeeringRoutesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateConnectionsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dnsBindPermission:grant:
    parameters: *ref_1
    post:
      description: >-
        Grants the bind permission to the customer provided principal(user /
        service account) to bind their DNS zone with the intranet VPC associated
        with the project. DnsBindPermission is a global resource and location
        can only be global.
      operationId: vmwareengine.projects.locations.dnsBindPermission.grant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GrantDnsBindPermissionRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dnsBindPermission:revoke:
    parameters: *ref_1
    post:
      description: >-
        Revokes the bind permission from the customer provided principal(user /
        service account) on the intranet VPC associated with the consumer
        project. DnsBindPermission is a global resource and location can only be
        global.
      operationId: vmwareengine.projects.locations.dnsBindPermission.revoke
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeDnsBindPermissionRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/announcements:
    parameters: *ref_1
    get:
      description: Lists `Announcements` for a given region and project
      operationId: vmwareengine.projects.locations.announcements.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAnnouncementsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/announcements/{announcementsId}:
    parameters: *ref_1
    get:
      description: Retrieves a `Announcement` by its resource name.
      operationId: vmwareengine.projects.locations.announcements.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: announcementsId
          required: true
          schema:
            type: string
