openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Cloud Billing API
  description: Allows developers to manage billing for their Google Cloud Platform projects programmatically.
  version: v1
  x-discovery-doc-revision: '20230825'
  x-generated-date: '2023-09-01'
externalDocs:
  url: 'https://cloud.google.com/billing/docs/apis'
servers:
  - url: 'https://cloudbilling.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-billing': View and manage your Google Cloud Platform billing accounts
            'https://www.googleapis.com/auth/cloud-billing.readonly': View your Google Cloud Platform billing accounts
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    Category:
      type: object
      properties:
        resourceFamily:
          description: 'The type of product the SKU refers to. Example: "Compute", "Storage", "Network", "ApplicationServices" etc.'
          type: string
        serviceDisplayName:
          description: The display name of the service this SKU belongs to.
          type: string
        usageType:
          type: string
          description: 'Represents how the SKU is consumed. Example: "OnDemand", "Preemptible", "Commit1Mo", "Commit1Yr" etc.'
        resourceGroup:
          description: 'A group classification for related SKUs. Example: "RAM", "GPU", "Prediction", "Ops", "GoogleEgress" etc.'
          type: string
      description: Represents the category hierarchy of a SKU.
      id: Category
    Money:
      description: Represents an amount of money with its currency type.
      properties:
        currencyCode:
          type: string
          description: The three-letter currency code defined in ISO 4217.
        units:
          format: int64
          type: string
          description: 'The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.'
        nanos:
          type: integer
          description: 'Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.'
          format: int32
      type: object
      id: Money
    AuditConfig:
      id: AuditConfig
      properties:
        service:
          type: string
          description: 'Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.'
        auditLogConfigs:
          items:
            $ref: '#/components/schemas/AuditLogConfig'
          type: array
          description: The configuration for logging of each type of permission.
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.'
      type: object
    TierRate:
      description: The price rate indicating starting usage and its corresponding price.
      type: object
      properties:
        unitPrice:
          description: 'The price per unit of usage. Example: unit_price of amount $10 indicates that each unit will cost $10.'
          $ref: '#/components/schemas/Money'
        startUsageAmount:
          description: 'Usage is priced at this rate only after this amount. Example: start_usage_amount of 10 indicates that the usage will be priced at the unit_price after the first 10 usage_units.'
          type: number
          format: double
      id: TierRate
    TestIamPermissionsRequest:
      type: object
      description: Request message for `TestIamPermissions` method.
      properties:
        permissions:
          description: 'The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).'
          items:
            type: string
          type: array
      id: TestIamPermissionsRequest
    PricingExpression:
      description: 'Expresses a mathematical pricing formula. For Example:- `usage_unit: GBy` `tiered_rates:` `[start_usage_amount: 20, unit_price: $10]` `[start_usage_amount: 100, unit_price: $5]` The above expresses a pricing formula where the first 20GB is free, the next 80GB is priced at $10 per GB followed by $5 per GB for additional usage.'
      id: PricingExpression
      properties:
        baseUnit:
          type: string
          description: 'The base unit for the SKU which is the unit used in usage exports. Example: "By"'
        usageUnit:
          description: 'The short hand for unit of usage this pricing is specified in. Example: usage_unit of "GiBy" means that usage is specified in "Gibi Byte".'
          type: string
        displayQuantity:
          format: double
          type: number
          description: 'The recommended quantity of units for displaying pricing info. When displaying pricing info it is recommended to display: (unit_price * display_quantity) per display_quantity usage_unit. This field does not affect the pricing formula and is for display purposes only. Example: If the unit_price is "0.0001 USD", the usage_unit is "GB" and the display_quantity is "1000" then the recommended way of displaying the pricing info is "0.10 USD per 1000 GB"'
        baseUnitDescription:
          description: 'The base unit in human readable form. Example: "byte".'
          type: string
        usageUnitDescription:
          description: 'The unit of usage in human readable form. Example: "gibi byte".'
          type: string
        baseUnitConversionFactor:
          format: double
          type: number
          description: 'Conversion factor for converting from price per usage_unit to price per base_unit, and start_usage_amount to start_usage_amount in base_unit. unit_price / base_unit_conversion_factor = price per base_unit. start_usage_amount * base_unit_conversion_factor = start_usage_amount in base_unit.'
        tieredRates:
          items:
            $ref: '#/components/schemas/TierRate'
          description: The list of tiered rates for this pricing. The total cost is computed by applying each of the tiered rates on usage. This repeated list is sorted by ascending order of start_usage_amount.
          type: array
      type: object
    Sku:
      id: Sku
      type: object
      properties:
        serviceProviderName:
          type: string
          description: Identifies the service provider. This is 'Google' for first party services in Google Cloud Platform.
        geoTaxonomy:
          $ref: '#/components/schemas/GeoTaxonomy'
          description: The geographic taxonomy for this sku.
        serviceRegions:
          type: array
          description: 'List of service regions this SKU is offered at. Example: "asia-east1" Service regions can be found at https://cloud.google.com/about/locations/'
          items:
            type: string
        category:
          $ref: '#/components/schemas/Category'
          description: 'The category hierarchy of this SKU, purely for organizational purpose.'
        description:
          description: 'A human readable description of the SKU, has a maximum length of 256 characters.'
          type: string
        pricingInfo:
          items:
            $ref: '#/components/schemas/PricingInfo'
          type: array
          description: A timeline of pricing info for this SKU in chronological order.
        skuId:
          description: 'The identifier for the SKU. Example: "AA95-CD31-42FE"'
          type: string
        name:
          type: string
          description: 'The resource name for the SKU. Example: "services/DA34-426B-A397/skus/AA95-CD31-42FE"'
      description: Encapsulates a single SKU in Google Cloud Platform
    ListServicesResponse:
      id: ListServicesResponse
      properties:
        services:
          type: array
          items:
            $ref: '#/components/schemas/Service'
          description: A list of services.
        nextPageToken:
          description: 'A token to retrieve the next page of results. To retrieve the next page, call `ListServices` again with the `page_token` field set to this value. This field is empty if there are no more results to retrieve.'
          type: string
      type: object
      description: Response message for `ListServices`.
    ListSkusResponse:
      id: ListSkusResponse
      type: object
      description: Response message for `ListSkus`.
      properties:
        skus:
          description: The list of public SKUs of the given service.
          type: array
          items:
            $ref: '#/components/schemas/Sku'
        nextPageToken:
          description: 'A token to retrieve the next page of results. To retrieve the next page, call `ListSkus` again with the `page_token` field set to this value. This field is empty if there are no more results to retrieve.'
          type: string
    SetIamPolicyRequest:
      type: object
      id: SetIamPolicyRequest
      properties:
        updateMask:
          format: google-fieldmask
          type: string
          description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`'
        policy:
          description: 'REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.'
          $ref: '#/components/schemas/Policy'
      description: Request message for `SetIamPolicy` method.
    TestIamPermissionsResponse:
      properties:
        permissions:
          type: array
          items:
            type: string
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
      id: TestIamPermissionsResponse
      type: object
      description: Response message for `TestIamPermissions` method.
    GeoTaxonomy:
      id: GeoTaxonomy
      properties:
        regions:
          description: 'The list of regions associated with a sku. Empty for Global skus, which are associated with all Google Cloud regions.'
          type: array
          items:
            type: string
        type:
          description: 'The type of Geo Taxonomy: GLOBAL, REGIONAL, or MULTI_REGIONAL.'
          enum:
            - TYPE_UNSPECIFIED
            - GLOBAL
            - REGIONAL
            - MULTI_REGIONAL
          enumDescriptions:
            - The type is not specified.
            - 'The sku is global in nature, e.g. a license sku. Global skus are available in all regions, and so have an empty region list.'
            - 'The sku is available in a specific region, e.g. "us-west2".'
            - 'The sku is associated with multiple regions, e.g. "us-west2" and "us-east1".'
          type: string
      description: Encapsulates the geographic taxonomy data for a sku.
      type: object
    Binding:
      description: 'Associates `members`, or principals, with a `role`.'
      type: object
      id: Binding
      properties:
        members:
          type: array
          description: 'Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.'
          items:
            type: string
        role:
          type: string
          description: 'Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.'
        condition:
          description: 'The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
          $ref: '#/components/schemas/Expr'
    BillingAccount:
      description: 'A billing account in the [Google Cloud Console](https://console.cloud.google.com/). You can assign a billing account to one or more projects.'
      properties:
        open:
          description: 'Output only. True if the billing account is open, and will therefore be charged for any usage on associated projects. False if the billing account is closed, and therefore projects associated with it will be unable to use paid services.'
          type: boolean
          readOnly: true
        masterBillingAccount:
          description: 'If this account is a [subaccount](https://cloud.google.com/billing/docs/concepts), then this will be the resource name of the parent billing account that it is being resold through. Otherwise this will be empty.'
          type: string
        name:
          type: string
          readOnly: true
          description: 'Output only. The resource name of the billing account. The resource name has the form `billingAccounts/{billing_account_id}`. For example, `billingAccounts/012345-567890-ABCDEF` would be the resource name for billing account `012345-567890-ABCDEF`.'
        displayName:
          type: string
          description: 'The display name given to the billing account, such as `My Billing Account`. This name is displayed in the Google Cloud Console.'
      type: object
      id: BillingAccount
    ListBillingAccountsResponse:
      id: ListBillingAccountsResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: 'A token to retrieve the next page of results. To retrieve the next page, call `ListBillingAccounts` again with the `page_token` field set to this value. This field is empty if there are no more results to retrieve.'
        billingAccounts:
          type: array
          description: A list of billing accounts.
          items:
            $ref: '#/components/schemas/BillingAccount'
      description: Response message for `ListBillingAccounts`.
    ListProjectBillingInfoResponse:
      description: Request message for `ListProjectBillingInfoResponse`.
      id: ListProjectBillingInfoResponse
      type: object
      properties:
        projectBillingInfo:
          items:
            $ref: '#/components/schemas/ProjectBillingInfo'
          type: array
          description: A list of `ProjectBillingInfo` resources representing the projects associated with the billing account.
        nextPageToken:
          description: 'A token to retrieve the next page of results. To retrieve the next page, call `ListProjectBillingInfo` again with the `page_token` field set to this value. This field is empty if there are no more results to retrieve.'
          type: string
    ProjectBillingInfo:
      type: object
      description: Encapsulation of billing information for a Google Cloud Console project. A project has at most one associated billing account at a time (but a billing account can be assigned to multiple projects).
      properties:
        billingAccountName:
          type: string
          description: 'The resource name of the billing account associated with the project, if any. For example, `billingAccounts/012345-567890-ABCDEF`.'
        projectId:
          type: string
          readOnly: true
          description: 'Output only. The ID of the project that this `ProjectBillingInfo` represents, such as `tokyo-rain-123`. This is a convenience field so that you don''t need to parse the `name` field to obtain a project ID.'
        name:
          type: string
          description: 'Output only. The resource name for the `ProjectBillingInfo`; has the form `projects/{project_id}/billingInfo`. For example, the resource name for the billing information for project `tokyo-rain-123` would be `projects/tokyo-rain-123/billingInfo`.'
          readOnly: true
        billingEnabled:
          readOnly: true
          type: boolean
          description: 'Output only. True if the project is associated with an open billing account, to which usage on the project is charged. False if the project is associated with a closed billing account, or no billing account at all, and therefore cannot use paid services.'
      id: ProjectBillingInfo
    PricingInfo:
      id: PricingInfo
      properties:
        pricingExpression:
          $ref: '#/components/schemas/PricingExpression'
          description: Expresses the pricing formula. See `PricingExpression` for an example.
        summary:
          type: string
          description: 'An optional human readable summary of the pricing information, has a maximum length of 256 characters.'
        aggregationInfo:
          $ref: '#/components/schemas/AggregationInfo'
          description: Aggregation Info. This can be left unspecified if the pricing expression doesn't require aggregation.
        effectiveTime:
          format: google-datetime
          description: 'The timestamp from which this pricing was effective within the requested time range. This is guaranteed to be greater than or equal to the start_time field in the request and less than the end_time field in the request. If a time range was not specified in the request this field will be equivalent to a time within the last 12 hours, indicating the latest pricing info.'
          type: string
        currencyConversionRate:
          format: double
          type: number
          description: 'Conversion rate used for currency conversion, from USD to the currency specified in the request. This includes any surcharge collected for billing in non USD currency. If a currency is not specified in the request this defaults to 1.0. Example: USD * currency_conversion_rate = JPY'
      type: object
      description: Represents the pricing information for a SKU at a single point of time.
    AuditLogConfig:
      type: object
      properties:
        exemptedMembers:
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
          type: array
          items:
            type: string
        logType:
          type: string
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          description: The log type that this config enables.
      description: 'Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables ''DATA_READ'' and ''DATA_WRITE'' logging, while exempting jose@example.com from DATA_READ logging.'
      id: AuditLogConfig
    Policy:
      id: Policy
      description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp(''2020-10-01T00:00:00.000Z'')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).'
      type: object
      properties:
        auditConfigs:
          type: array
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: '#/components/schemas/AuditConfig'
        etag:
          type: string
          format: byte
          description: '`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.'
        version:
          type: integer
          description: 'Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
          format: int32
        bindings:
          type: array
          description: 'Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.'
          items:
            $ref: '#/components/schemas/Binding'
    Service:
      properties:
        serviceId:
          description: 'The identifier for the service. Example: "DA34-426B-A397"'
          type: string
        businessEntityName:
          description: 'The business under which the service is offered. Ex. "businessEntities/GCP", "businessEntities/Maps"'
          type: string
        name:
          description: 'The resource name for the service. Example: "services/DA34-426B-A397"'
          type: string
        displayName:
          type: string
          description: A human readable display name for this service.
      type: object
      id: Service
      description: Encapsulates a single service in Google Cloud Platform.
    Expr:
      description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != ''private'' && document.type != ''internal''" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "''New message received at '' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.'
      id: Expr
      properties:
        expression:
          type: string
          description: Textual representation of an expression in Common Expression Language syntax.
        location:
          type: string
          description: 'Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.'
        title:
          type: string
          description: 'Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.'
        description:
          description: 'Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.'
          type: string
      type: object
    AggregationInfo:
      type: object
      description: Represents the aggregation level and interval for pricing of a single SKU.
      properties:
        aggregationInterval:
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
          enum:
            - AGGREGATION_INTERVAL_UNSPECIFIED
            - DAILY
            - MONTHLY
        aggregationLevel:
          enumDescriptions:
            - ''
            - ''
            - ''
          type: string
          enum:
            - AGGREGATION_LEVEL_UNSPECIFIED
            - ACCOUNT
            - PROJECT
        aggregationCount:
          type: integer
          description: 'The number of intervals to aggregate over. Example: If aggregation_level is "DAILY" and aggregation_count is 14, aggregation will be over 14 days.'
          format: int32
      id: AggregationInfo
  parameters:
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
  x-stackQL-resources:
    skus:
      id: google.cloudbilling.skus
      name: skus
      title: Skus
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1services~1{servicesId}~1skus/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.skus
        _list:
          operation:
            $ref: '#/paths/~1v1~1services~1{servicesId}~1skus/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/skus/methods/list'
        insert: []
        update: []
        delete: []
    services:
      id: google.cloudbilling.services
      name: services
      title: Services
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1services/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.services
        _list:
          operation:
            $ref: '#/paths/~1v1~1services/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/services/methods/list'
        insert: []
        update: []
        delete: []
    billing_info:
      id: google.cloudbilling.billing_info
      name: billing_info
      title: Billing Info
      methods:
        update_billing_info:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1billingInfo/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_billing_info:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1billingInfo/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/billing_info/methods/get_billing_info'
        insert: []
        update: []
        delete: []
    billing_accounts_iam_policies:
      id: google.cloudbilling.billing_accounts_iam_policies
      name: billing_accounts_iam_policies
      title: Billing Accounts Iam Policies
      methods:
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1billingAccounts~1{billingAccountsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1billingAccounts~1{billingAccountsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v1~1billingAccounts~1{billingAccountsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v1~1billingAccounts~1{billingAccountsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/billing_accounts_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    billing_accounts:
      id: google.cloudbilling.billing_accounts
      name: billing_accounts
      title: Billing Accounts
      methods:
        patch:
          operation:
            $ref: '#/paths/~1v1~1billingAccounts~1{billingAccountsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1billingAccounts~1{billingAccountsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1billingAccounts/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1billingAccounts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.billingAccounts
        _list:
          operation:
            $ref: '#/paths/~1v1~1billingAccounts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/billing_accounts/methods/get'
          - $ref: '#/components/x-stackQL-resources/billing_accounts/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/billing_accounts/methods/create'
        update: []
        delete: []
    projects:
      id: google.cloudbilling.projects
      name: projects
      title: Projects
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1billingAccounts~1{billingAccountsId}~1projects/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.projectBillingInfo
        _list:
          operation:
            $ref: '#/paths/~1v1~1billingAccounts~1{billingAccountsId}~1projects/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/projects/methods/list'
        insert: []
        update: []
        delete: []
paths:
  '/v1/services/{servicesId}/skus':
    parameters: &ref_1
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
    get:
      description: Lists all publicly available SKUs for a given cloud service.
      operationId: cloudbilling.services.skus.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-billing'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-billing'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-billing.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-billing.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSkusResponse'
      parameters:
        - in: path
          name: servicesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: endTime
          schema:
            type: string
        - in: query
          name: startTime
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: currencyCode
          schema:
            type: string
      x-stackQL-resource: skus
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.skus
  /v1/services:
    parameters: *ref_1
    get:
      description: Lists all public cloud services.
      operationId: cloudbilling.services.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-billing'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-billing'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-billing.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-billing.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServicesResponse'
      parameters:
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: services
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.services
  '/v1/projects/{projectsId}/billingInfo':
    parameters: *ref_1
    put:
      description: 'Sets or updates the billing account associated with a project. You specify the new billing account by setting the `billing_account_name` in the `ProjectBillingInfo` resource to the resource name of a billing account. Associating a project with an open billing account enables billing on the project and allows charges for resource usage. If the project already had a billing account, this method changes the billing account used for resource usage charges. *Note:* Incurred charges that have not yet been reported in the transaction history of the Google Cloud Console might be billed to the new billing account, even if the charge occurred before the new billing account was assigned to the project. The current authenticated user must have ownership privileges for both the [project](https://cloud.google.com/docs/permissions-overview#h.bgs0oxofvnoo ) and the [billing account](https://cloud.google.com/billing/docs/how-to/billing-access). You can disable billing on the project by setting the `billing_account_name` field to empty. This action disassociates the current billing account from the project. Any billable activity of your in-use services will stop, and your application could stop functioning as expected. Any unbilled charges to date will be billed to the previously associated account. The current authenticated user must be either an owner of the project or an owner of the billing account for the project. Note that associating a project with a *closed* billing account will have much the same effect as disabling billing on the project: any paid resources used by the project will be shut down. Thus, unless you wish to disable billing, you should always call this method with the name of an *open* billing account.'
      operationId: cloudbilling.projects.updateBillingInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectBillingInfo'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-billing'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-billing'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectBillingInfo'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: billing_info
      x-stackQL-method: update_billing_info
      x-stackQL-verb: exec
    get:
      description: 'Gets the billing information for a project. The current authenticated user must have the `resourcemanager.projects.get` permission for the project, which can be granted by assigning the [Project Viewer](https://cloud.google.com/iam/docs/understanding-roles#predefined_roles) role.'
      operationId: cloudbilling.projects.getBillingInfo
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-billing'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-billing'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-billing.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-billing.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectBillingInfo'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: billing_info
      x-stackQL-method: get_billing_info
      x-stackQL-verb: select
  '/v1/billingAccounts/{billingAccountsId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy for a billing account. Replaces any existing policy. The caller must have the `billing.accounts.setIamPolicy` permission on the account, which is often given to billing account [administrators](https://cloud.google.com/billing/docs/how-to/billing-access).'
      operationId: cloudbilling.billingAccounts.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-billing'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-billing'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: billingAccountsId
          required: true
          schema:
            type: string
      x-stackQL-resource: billing_accounts_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v1/billingAccounts/{billingAccountsId}':
    parameters: *ref_1
    patch:
      description: 'Updates a billing account''s fields. Currently the only field that can be edited is `display_name`. The current authenticated user must have the `billing.accounts.update` IAM permission, which is typically given to the [administrator](https://cloud.google.com/billing/docs/how-to/billing-access) of the billing account.'
      operationId: cloudbilling.billingAccounts.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingAccount'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-billing'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-billing'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingAccount'
      parameters:
        - in: path
          name: billingAccountsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: billing_accounts
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: 'Gets information about a billing account. The current authenticated user must be a [viewer of the billing account](https://cloud.google.com/billing/docs/how-to/billing-access).'
      operationId: cloudbilling.billingAccounts.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-billing'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-billing'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-billing.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-billing.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingAccount'
      parameters:
        - in: path
          name: billingAccountsId
          required: true
          schema:
            type: string
      x-stackQL-resource: billing_accounts
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/billingAccounts/{billingAccountsId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: 'Gets the access control policy for a billing account. The caller must have the `billing.accounts.getIamPolicy` permission on the account, which is often given to billing account [viewers](https://cloud.google.com/billing/docs/how-to/billing-access).'
      operationId: cloudbilling.billingAccounts.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-billing'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-billing'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-billing.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-billing.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: billingAccountsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: billing_accounts_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  /v1/billingAccounts:
    parameters: *ref_1
    post:
      description: 'This method creates [billing subaccounts](https://cloud.google.com/billing/docs/concepts#subaccounts). Google Cloud resellers should use the Channel Services APIs, [accounts.customers.create](https://cloud.google.com/channel/docs/reference/rest/v1/accounts.customers/create) and [accounts.customers.entitlements.create](https://cloud.google.com/channel/docs/reference/rest/v1/accounts.customers.entitlements/create). When creating a subaccount, the current authenticated user must have the `billing.accounts.update` IAM permission on the parent account, which is typically given to billing account [administrators](https://cloud.google.com/billing/docs/how-to/billing-access). This method will return an error if the parent account has not been provisioned for subaccounts.'
      operationId: cloudbilling.billingAccounts.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingAccount'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-billing'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-billing'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingAccount'
      parameters: []
      x-stackQL-resource: billing_accounts
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: 'Lists the billing accounts that the current authenticated user has permission to [view](https://cloud.google.com/billing/docs/how-to/billing-access).'
      operationId: cloudbilling.billingAccounts.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-billing'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-billing'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-billing.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-billing.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBillingAccountsResponse'
      parameters:
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: billing_accounts
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.billingAccounts
  '/v1/billingAccounts/{billingAccountsId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: Tests the access control policy for a billing account. This method takes the resource and a set of permissions as input and returns the subset of the input permissions that the caller is allowed for that resource.
      operationId: cloudbilling.billingAccounts.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-billing'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-billing'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-billing.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-billing.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: billingAccountsId
          required: true
          schema:
            type: string
      x-stackQL-resource: billing_accounts_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v1/billingAccounts/{billingAccountsId}/projects':
    parameters: *ref_1
    get:
      description: 'Lists the projects associated with a billing account. The current authenticated user must have the `billing.resourceAssociations.list` IAM permission, which is often given to billing account [viewers](https://cloud.google.com/billing/docs/how-to/billing-access).'
      operationId: cloudbilling.billingAccounts.projects.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-billing'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-billing'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-billing.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-billing.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProjectBillingInfoResponse'
      parameters:
        - in: path
          name: billingAccountsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: projects
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.projectBillingInfo
