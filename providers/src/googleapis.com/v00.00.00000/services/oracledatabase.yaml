openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Oracle Database@Google Cloud API
  description: >-
    The Oracle Database@Google Cloud API provides a set of APIs to manage Oracle
    database services, such as Exadata and Autonomous Databases.
  version: v1
  x-discovery-doc-revision: '20241017'
  x-generated-date: '2024-11-06'
externalDocs:
  url: https://cloud.google.com/oracle/database/docs
servers:
  - url: https://oracledatabase.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    ListOperationsResponse:
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Operation:
      id: Operation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    Status:
      id: Status
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    CancelOperationRequest:
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
      type: object
      properties: {}
    ListCloudExadataInfrastructuresResponse:
      id: ListCloudExadataInfrastructuresResponse
      description: The response for `CloudExadataInfrastructures.list`.
      type: object
      properties:
        cloudExadataInfrastructures:
          description: The list of Exadata Infrastructures.
          type: array
          items:
            $ref: '#/components/schemas/CloudExadataInfrastructure'
        nextPageToken:
          description: A token for fetching next page of response.
          type: string
    CloudExadataInfrastructure:
      id: CloudExadataInfrastructure
      description: >-
        Represents CloudExadataInfrastructure resource.
        https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/CloudExadataInfrastructure/
      type: object
      properties:
        name:
          description: >-
            Identifier. The name of the Exadata Infrastructure resource with the
            format:
            projects/{project}/locations/{region}/cloudExadataInfrastructures/{cloud_exadata_infrastructure}
          type: string
        displayName:
          description: Optional. User friendly name for this resource.
          type: string
        gcpOracleZone:
          description: >-
            Optional. Google Cloud Platform location where Oracle Exadata is
            hosted.
          type: string
        entitlementId:
          description: >-
            Output only. Entitlement ID of the private offer against which this
            infrastructure resource is provisioned.
          readOnly: true
          type: string
        properties:
          description: Optional. Various properties of the infra.
          $ref: '#/components/schemas/CloudExadataInfrastructureProperties'
        labels:
          description: Optional. Labels or tags associated with the resource.
          type: object
          additionalProperties:
            type: string
        createTime:
          description: >-
            Output only. The date and time that the Exadata Infrastructure was
            created.
          readOnly: true
          type: string
          format: google-datetime
    CloudExadataInfrastructureProperties:
      id: CloudExadataInfrastructureProperties
      description: Various properties of Exadata Infrastructure.
      type: object
      properties:
        ocid:
          description: >-
            Output only. OCID of created infra.
            https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm#Oracle
          readOnly: true
          type: string
        computeCount:
          description: >-
            Optional. The number of compute servers for the Exadata
            Infrastructure.
          type: integer
          format: int32
        storageCount:
          description: >-
            Optional. The number of Cloud Exadata storage servers for the
            Exadata Infrastructure.
          type: integer
          format: int32
        totalStorageSizeGb:
          description: >-
            Optional. The total storage allocated to the Exadata Infrastructure
            resource, in gigabytes (GB).
          type: integer
          format: int32
        availableStorageSizeGb:
          description: >-
            Output only. The available storage can be allocated to the Exadata
            Infrastructure resource, in gigabytes (GB).
          readOnly: true
          type: integer
          format: int32
        maintenanceWindow:
          description: Optional. Maintenance window for repair.
          $ref: '#/components/schemas/MaintenanceWindow'
        state:
          description: >-
            Output only. The current lifecycle state of the Exadata
            Infrastructure.
          readOnly: true
          type: string
          enumDescriptions:
            - Default unspecified value.
            - The Exadata Infrastructure is being provisioned.
            - The Exadata Infrastructure is available for use.
            - The Exadata Infrastructure is being updated.
            - The Exadata Infrastructure is being terminated.
            - The Exadata Infrastructure is terminated.
            - The Exadata Infrastructure is in failed state.
            - The Exadata Infrastructure is in maintenance.
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - AVAILABLE
            - UPDATING
            - TERMINATING
            - TERMINATED
            - FAILED
            - MAINTENANCE_IN_PROGRESS
        shape:
          description: >-
            Required. The shape of the Exadata Infrastructure. The shape
            determines the amount of CPU, storage, and memory resources
            allocated to the instance.
          type: string
        ociUrl:
          description: Output only. Deep link to the OCI console to view this resource.
          readOnly: true
          type: string
        cpuCount:
          description: Output only. The number of enabled CPU cores.
          readOnly: true
          type: integer
          format: int32
        maxCpuCount:
          description: Output only. The total number of CPU cores available.
          readOnly: true
          type: integer
          format: int32
        memorySizeGb:
          description: Output only. The memory allocated in GBs.
          readOnly: true
          type: integer
          format: int32
        maxMemoryGb:
          description: Output only. The total memory available in GBs.
          readOnly: true
          type: integer
          format: int32
        dbNodeStorageSizeGb:
          description: Output only. The local node storage allocated in GBs.
          readOnly: true
          type: integer
          format: int32
        maxDbNodeStorageSizeGb:
          description: Output only. The total local node storage available in GBs.
          readOnly: true
          type: integer
          format: int32
        dataStorageSizeTb:
          description: Output only. Size, in terabytes, of the DATA disk group.
          readOnly: true
          type: number
          format: double
        maxDataStorageTb:
          description: Output only. The total available DATA disk group size.
          readOnly: true
          type: number
          format: double
        activatedStorageCount:
          description: >-
            Output only. The requested number of additional storage servers
            activated for the Exadata Infrastructure.
          readOnly: true
          type: integer
          format: int32
        additionalStorageCount:
          description: >-
            Output only. The requested number of additional storage servers for
            the Exadata Infrastructure.
          readOnly: true
          type: integer
          format: int32
        dbServerVersion:
          description: >-
            Output only. The software version of the database servers (dom0) in
            the Exadata Infrastructure.
          readOnly: true
          type: string
        storageServerVersion:
          description: >-
            Output only. The software version of the storage servers (cells) in
            the Exadata Infrastructure.
          readOnly: true
          type: string
        nextMaintenanceRunId:
          description: Output only. The OCID of the next maintenance run.
          readOnly: true
          type: string
        nextMaintenanceRunTime:
          description: Output only. The time when the next maintenance run will occur.
          readOnly: true
          type: string
          format: google-datetime
        nextSecurityMaintenanceRunTime:
          description: >-
            Output only. The time when the next security maintenance run will
            occur.
          readOnly: true
          type: string
          format: google-datetime
        customerContacts:
          description: Optional. The list of customer contacts.
          type: array
          items:
            $ref: '#/components/schemas/CustomerContact'
        monthlyStorageServerVersion:
          description: >-
            Output only. The monthly software version of the storage servers
            (cells) in the Exadata Infrastructure. Example: 20.1.15
          readOnly: true
          type: string
        monthlyDbServerVersion:
          description: >-
            Output only. The monthly software version of the database servers
            (dom0) in the Exadata Infrastructure. Example: 20.1.15
          readOnly: true
          type: string
    MaintenanceWindow:
      id: MaintenanceWindow
      description: >-
        Maintenance window as defined by Oracle.
        https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/datatypes/MaintenanceWindow
      type: object
      properties:
        preference:
          description: Optional. The maintenance window scheduling preference.
          type: string
          enumDescriptions:
            - Default unspecified value.
            - Custom preference.
            - No preference.
          enum:
            - MAINTENANCE_WINDOW_PREFERENCE_UNSPECIFIED
            - CUSTOM_PREFERENCE
            - NO_PREFERENCE
        months:
          description: >-
            Optional. Months during the year when maintenance should be
            performed.
          type: array
          items:
            type: string
            enumDescriptions:
              - The unspecified month.
              - The month of January.
              - The month of February.
              - The month of March.
              - The month of April.
              - The month of May.
              - The month of June.
              - The month of July.
              - The month of August.
              - The month of September.
              - The month of October.
              - The month of November.
              - The month of December.
            enum:
              - MONTH_UNSPECIFIED
              - JANUARY
              - FEBRUARY
              - MARCH
              - APRIL
              - MAY
              - JUNE
              - JULY
              - AUGUST
              - SEPTEMBER
              - OCTOBER
              - NOVEMBER
              - DECEMBER
        weeksOfMonth:
          description: >-
            Optional. Weeks during the month when maintenance should be
            performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the
            month, and have a duration of 7 days. Weeks start and end based on
            calendar dates, not days of the week.
          type: array
          items:
            type: integer
            format: int32
        daysOfWeek:
          description: Optional. Days during the week when maintenance should be performed.
          type: array
          items:
            type: string
            enumDescriptions:
              - The day of the week is unspecified.
              - Monday
              - Tuesday
              - Wednesday
              - Thursday
              - Friday
              - Saturday
              - Sunday
            enum:
              - DAY_OF_WEEK_UNSPECIFIED
              - MONDAY
              - TUESDAY
              - WEDNESDAY
              - THURSDAY
              - FRIDAY
              - SATURDAY
              - SUNDAY
        hoursOfDay:
          description: >-
            Optional. The window of hours during the day when maintenance should
            be performed. The window is a 4 hour slot. Valid values are: 0 -
            represents time slot 0:00 - 3:59 UTC 4 - represents time slot 4:00 -
            7:59 UTC 8 - represents time slot 8:00 - 11:59 UTC 12 - represents
            time slot 12:00 - 15:59 UTC 16 - represents time slot 16:00 - 19:59
            UTC 20 - represents time slot 20:00 - 23:59 UTC
          type: array
          items:
            type: integer
            format: int32
        leadTimeWeek:
          description: >-
            Optional. Lead time window allows user to set a lead time to prepare
            for a down time. The lead time is in weeks and valid value is
            between 1 to 4.
          type: integer
          format: int32
        patchingMode:
          description: >-
            Optional. Cloud CloudExadataInfrastructure node patching method,
            either "ROLLING" or "NONROLLING". Default value is ROLLING.
          type: string
          enumDescriptions:
            - Default unspecified value.
            - >-
              Updates the Cloud Exadata database server hosts in a rolling
              fashion.
            - >-
              The non-rolling maintenance method first updates your storage
              servers at the same time, then your database servers at the same
              time.
          enum:
            - PATCHING_MODE_UNSPECIFIED
            - ROLLING
            - NON_ROLLING
        customActionTimeoutMins:
          description: >-
            Optional. Determines the amount of time the system will wait before
            the start of each database server patching operation. Custom action
            timeout is in minutes and valid value is between 15 to 120
            (inclusive).
          type: integer
          format: int32
        isCustomActionTimeoutEnabled:
          description: >-
            Optional. If true, enables the configuration of a custom action
            timeout (waiting period) between database server patching
            operations.
          type: boolean
    CustomerContact:
      id: CustomerContact
      description: >-
        The CustomerContact reference as defined by Oracle.
        https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/datatypes/CustomerContact
      type: object
      properties:
        email:
          description: >-
            Required. The email address used by Oracle to send notifications
            regarding databases and infrastructure.
          type: string
    ListCloudVmClustersResponse:
      id: ListCloudVmClustersResponse
      description: The response for `CloudVmCluster.List`.
      type: object
      properties:
        cloudVmClusters:
          description: The list of VM Clusters.
          type: array
          items:
            $ref: '#/components/schemas/CloudVmCluster'
        nextPageToken:
          description: A token to fetch the next page of results.
          type: string
    CloudVmCluster:
      id: CloudVmCluster
      description: >-
        Details of the Cloud VM Cluster resource.
        https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/CloudVmCluster/
      type: object
      properties:
        name:
          description: >-
            Identifier. The name of the VM Cluster resource with the format:
            projects/{project}/locations/{region}/cloudVmClusters/{cloud_vm_cluster}
          type: string
        exadataInfrastructure:
          description: >-
            Required. The name of the Exadata Infrastructure resource on which
            VM cluster resource is created, in the following format:
            projects/{project}/locations/{region}/cloudExadataInfrastuctures/{cloud_extradata_infrastructure}
          type: string
        displayName:
          description: Optional. User friendly name for this resource.
          type: string
        gcpOracleZone:
          description: >-
            Output only. Google Cloud Platform location where Oracle Exadata is
            hosted. It is same as Google Cloud Platform Oracle zone of Exadata
            infrastructure.
          readOnly: true
          type: string
        properties:
          description: Optional. Various properties of the VM Cluster.
          $ref: '#/components/schemas/CloudVmClusterProperties'
        labels:
          description: Optional. Labels or tags associated with the VM Cluster.
          type: object
          additionalProperties:
            type: string
        createTime:
          description: Output only. The date and time that the VM cluster was created.
          readOnly: true
          type: string
          format: google-datetime
        cidr:
          description: Required. Network settings. CIDR to use for cluster IP allocation.
          type: string
        backupSubnetCidr:
          description: Required. CIDR range of the backup subnet.
          type: string
        network:
          description: >-
            Required. The name of the VPC network. Format:
            projects/{project}/global/networks/{network}
          type: string
    CloudVmClusterProperties:
      id: CloudVmClusterProperties
      description: Various properties and settings associated with Exadata VM cluster.
      type: object
      properties:
        ocid:
          description: Output only. Oracle Cloud Infrastructure ID of VM Cluster.
          readOnly: true
          type: string
        licenseType:
          description: Required. License type of VM Cluster.
          type: string
          enumDescriptions:
            - Unspecified
            - License included part of offer
            - Bring your own license
          enum:
            - LICENSE_TYPE_UNSPECIFIED
            - LICENSE_INCLUDED
            - BRING_YOUR_OWN_LICENSE
        giVersion:
          description: Optional. Grid Infrastructure Version.
          type: string
        timeZone:
          description: >-
            Optional. Time zone of VM Cluster to set. Defaults to UTC if not
            specified.
          $ref: '#/components/schemas/TimeZone'
        sshPublicKeys:
          description: Optional. SSH public keys to be stored with cluster.
          type: array
          items:
            type: string
        nodeCount:
          description: Optional. Number of database servers.
          type: integer
          format: int32
        shape:
          description: Output only. Shape of VM Cluster.
          readOnly: true
          type: string
        ocpuCount:
          description: Optional. OCPU count per VM. Minimum is 0.1.
          type: number
          format: float
        memorySizeGb:
          description: Optional. Memory allocated in GBs.
          type: integer
          format: int32
        dbNodeStorageSizeGb:
          description: Optional. Local storage per VM.
          type: integer
          format: int32
        storageSizeGb:
          description: >-
            Output only. The storage allocation for the disk group, in gigabytes
            (GB).
          readOnly: true
          type: integer
          format: int32
        dataStorageSizeTb:
          description: Optional. The data disk group size to be allocated in TBs.
          type: number
          format: double
        diskRedundancy:
          description: Optional. The type of redundancy.
          type: string
          enumDescriptions:
            - Unspecified.
            - High - 3 way mirror.
            - Normal - 2 way mirror.
          enum:
            - DISK_REDUNDANCY_UNSPECIFIED
            - HIGH
            - NORMAL
        sparseDiskgroupEnabled:
          description: Optional. Use exadata sparse snapshots.
          type: boolean
        localBackupEnabled:
          description: Optional. Use local backup.
          type: boolean
        hostnamePrefix:
          description: Optional. Prefix for VM cluster host names.
          type: string
        diagnosticsDataCollectionOptions:
          description: Optional. Data collection options for diagnostics.
          $ref: '#/components/schemas/DataCollectionOptions'
        state:
          description: Output only. State of the cluster.
          readOnly: true
          type: string
          enumDescriptions:
            - Default unspecified value.
            - Indicates that the resource is in provisioning state.
            - Indicates that the resource is in available state.
            - Indicates that the resource is in updating state.
            - Indicates that the resource is in terminating state.
            - Indicates that the resource is in terminated state.
            - Indicates that the resource is in failed state.
            - Indicates that the resource is in maintenance in progress state.
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - AVAILABLE
            - UPDATING
            - TERMINATING
            - TERMINATED
            - FAILED
            - MAINTENANCE_IN_PROGRESS
        scanListenerPortTcp:
          description: Output only. SCAN listener port - TCP
          readOnly: true
          type: integer
          format: int32
        scanListenerPortTcpSsl:
          description: Output only. SCAN listener port - TLS
          readOnly: true
          type: integer
          format: int32
        domain:
          description: >-
            Output only. Parent DNS domain where SCAN DNS and hosts names are
            qualified. ex: ocispdelegated.ocisp10jvnet.oraclevcn.com
          readOnly: true
          type: string
        scanDns:
          description: >-
            Output only. SCAN DNS name. ex:
            sp2-yi0xq-scan.ocispdelegated.ocisp10jvnet.oraclevcn.com
          readOnly: true
          type: string
        hostname:
          description: >-
            Output only. host name without domain. format: "-" with some suffix.
            ex: sp2-yi0xq where "sp2" is the hostname_prefix.
          readOnly: true
          type: string
        cpuCoreCount:
          description: Required. Number of enabled CPU cores.
          type: integer
          format: int32
        systemVersion:
          description: Output only. Operating system version of the image.
          readOnly: true
          type: string
        scanIpIds:
          description: Output only. OCIDs of scan IPs.
          readOnly: true
          type: array
          items:
            type: string
        scanDnsRecordId:
          description: Output only. OCID of scan DNS record.
          readOnly: true
          type: string
        ociUrl:
          description: Output only. Deep link to the OCI console to view this resource.
          readOnly: true
          type: string
        dbServerOcids:
          description: Optional. OCID of database servers.
          type: array
          items:
            type: string
        compartmentId:
          description: Output only. Compartment ID of cluster.
          readOnly: true
          type: string
        dnsListenerIp:
          description: Output only. DNS listener IP.
          readOnly: true
          type: string
        clusterName:
          description: Optional. OCI Cluster name.
          type: string
    TimeZone:
      id: TimeZone
      description: >-
        Represents a time zone from the [IANA Time Zone
        Database](https://www.iana.org/time-zones).
      type: object
      properties:
        id:
          description: IANA Time Zone Database time zone, e.g. "America/New_York".
          type: string
        version:
          description: Optional. IANA Time Zone Database version number, e.g. "2019a".
          type: string
    DataCollectionOptions:
      id: DataCollectionOptions
      description: Data collection options for diagnostics.
      type: object
      properties:
        diagnosticsEventsEnabled:
          description: >-
            Optional. Indicates whether diagnostic collection is enabled for the
            VM cluster
          type: boolean
        healthMonitoringEnabled:
          description: >-
            Optional. Indicates whether health monitoring is enabled for the VM
            cluster
          type: boolean
        incidentLogsEnabled:
          description: >-
            Optional. Indicates whether incident logs and trace collection are
            enabled for the VM cluster
          type: boolean
    ListEntitlementsResponse:
      id: ListEntitlementsResponse
      description: The response for `Entitlement.List`.
      type: object
      properties:
        entitlements:
          description: The list of Entitlements
          type: array
          items:
            $ref: '#/components/schemas/Entitlement'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
    Entitlement:
      id: Entitlement
      description: Details of the Entitlement resource.
      type: object
      properties:
        name:
          description: >-
            Identifier. The name of the Entitlement resource with the format:
            projects/{project}/locations/{region}/entitlements/{entitlement}
          type: string
        cloudAccountDetails:
          description: Details of the OCI Cloud Account.
          $ref: '#/components/schemas/CloudAccountDetails'
        entitlementId:
          description: Output only. Google Cloud Marketplace order ID (aka entitlement ID)
          readOnly: true
          type: string
        state:
          description: Output only. Entitlement State.
          readOnly: true
          type: string
          enumDescriptions:
            - Default unspecified value.
            - Account not linked.
            - Account is linked but not active.
            - Entitlement and Account are active.
          enum:
            - STATE_UNSPECIFIED
            - ACCOUNT_NOT_LINKED
            - ACCOUNT_NOT_ACTIVE
            - ACTIVE
    CloudAccountDetails:
      id: CloudAccountDetails
      description: Details of the OCI Cloud Account.
      type: object
      properties:
        cloudAccount:
          description: Output only. OCI account name.
          readOnly: true
          type: string
        cloudAccountHomeRegion:
          description: Output only. OCI account home region.
          readOnly: true
          type: string
        linkExistingAccountUri:
          description: Output only. URL to link an existing account.
          readOnly: true
          type: string
        accountCreationUri:
          description: Output only. URL to create a new account and link.
          readOnly: true
          type: string
    ListDbServersResponse:
      id: ListDbServersResponse
      description: The response for `DbServer.List`.
      type: object
      properties:
        dbServers:
          description: The list of database servers.
          type: array
          items:
            $ref: '#/components/schemas/DbServer'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
    DbServer:
      id: DbServer
      description: >-
        Details of the database server resource.
        https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/DbServer/
      type: object
      properties:
        name:
          description: >-
            Identifier. The name of the database server resource with the
            format:
            projects/{project}/locations/{location}/cloudExadataInfrastructures/{cloud_exadata_infrastructure}/dbServers/{db_server}
          type: string
        displayName:
          description: Optional. User friendly name for this resource.
          type: string
        properties:
          description: Optional. Various properties of the database server.
          $ref: '#/components/schemas/DbServerProperties'
    DbServerProperties:
      id: DbServerProperties
      description: Various properties and settings associated with Exadata database server.
      type: object
      properties:
        ocid:
          description: Output only. OCID of database server.
          readOnly: true
          type: string
        ocpuCount:
          description: Optional. OCPU count per database.
          type: integer
          format: int32
        maxOcpuCount:
          description: Optional. Maximum OCPU count per database.
          type: integer
          format: int32
        memorySizeGb:
          description: Optional. Memory allocated in GBs.
          type: integer
          format: int32
        maxMemorySizeGb:
          description: Optional. Maximum memory allocated in GBs.
          type: integer
          format: int32
        dbNodeStorageSizeGb:
          description: Optional. Local storage per VM.
          type: integer
          format: int32
        maxDbNodeStorageSizeGb:
          description: Optional. Maximum local storage per VM.
          type: integer
          format: int32
        vmCount:
          description: Optional. Vm count per database.
          type: integer
          format: int32
        state:
          description: Output only. State of the database server.
          readOnly: true
          type: string
          enumDescriptions:
            - Default unspecified value.
            - Indicates that the resource is in creating state.
            - Indicates that the resource is in available state.
            - Indicates that the resource is in unavailable state.
            - Indicates that the resource is in deleting state.
            - Indicates that the resource is in deleted state.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - AVAILABLE
            - UNAVAILABLE
            - DELETING
            - DELETED
        dbNodeIds:
          description: >-
            Output only. OCID of database nodes associated with the database
            server.
          readOnly: true
          type: array
          items:
            type: string
    ListDbNodesResponse:
      id: ListDbNodesResponse
      description: The response for `DbNode.List`.
      type: object
      properties:
        dbNodes:
          description: The list of DB Nodes
          type: array
          items:
            $ref: '#/components/schemas/DbNode'
        nextPageToken:
          description: A token identifying a page of results the node should return.
          type: string
    DbNode:
      id: DbNode
      description: >-
        Details of the database node resource.
        https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/DbNode/
      type: object
      properties:
        name:
          description: >-
            Identifier. The name of the database node resource in the following
            format:
            projects/{project}/locations/{location}/cloudVmClusters/{cloud_vm_cluster}/dbNodes/{db_node}
          type: string
        properties:
          description: Optional. Various properties of the database node.
          $ref: '#/components/schemas/DbNodeProperties'
    DbNodeProperties:
      id: DbNodeProperties
      description: Various properties and settings associated with Db node.
      type: object
      properties:
        ocid:
          description: Output only. OCID of database node.
          readOnly: true
          type: string
        ocpuCount:
          description: Optional. OCPU count per database node.
          type: integer
          format: int32
        memorySizeGb:
          description: Memory allocated in GBs.
          type: integer
          format: int32
        dbNodeStorageSizeGb:
          description: Optional. Local storage per database node.
          type: integer
          format: int32
        dbServerOcid:
          description: Optional. Database server OCID.
          type: string
        hostname:
          description: Optional. DNS
          type: string
        state:
          description: Output only. State of the database node.
          readOnly: true
          type: string
          enumDescriptions:
            - Default unspecified value.
            - Indicates that the resource is in provisioning state.
            - Indicates that the resource is in available state.
            - Indicates that the resource is in updating state.
            - Indicates that the resource is in stopping state.
            - Indicates that the resource is in stopped state.
            - Indicates that the resource is in starting state.
            - Indicates that the resource is in terminating state.
            - Indicates that the resource is in terminated state.
            - Indicates that the resource is in failed state.
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - AVAILABLE
            - UPDATING
            - STOPPING
            - STOPPED
            - STARTING
            - TERMINATING
            - TERMINATED
            - FAILED
        totalCpuCoreCount:
          description: Total CPU core count of the database node.
          type: integer
          format: int32
    ListGiVersionsResponse:
      id: ListGiVersionsResponse
      description: The response for `GiVersion.List`.
      type: object
      properties:
        giVersions:
          description: The list of Oracle Grid Infrastructure (GI) versions.
          type: array
          items:
            $ref: '#/components/schemas/GiVersion'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
    GiVersion:
      id: GiVersion
      description: >-
        Details of the Oracle Grid Infrastructure (GI) version resource.
        https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/GiVersionSummary/
      type: object
      properties:
        name:
          description: >-
            Identifier. The name of the Oracle Grid Infrastructure (GI) version
            resource with the format:
            projects/{project}/locations/{region}/giVersions/{gi_versions}
          type: string
        version:
          description: Optional. version
          type: string
    ListDbSystemShapesResponse:
      id: ListDbSystemShapesResponse
      description: The response for `DbSystemShape.List`.
      type: object
      properties:
        dbSystemShapes:
          description: The list of Database System shapes.
          type: array
          items:
            $ref: '#/components/schemas/DbSystemShape'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
    DbSystemShape:
      id: DbSystemShape
      description: >-
        Details of the Database System Shapes resource.
        https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/DbSystemShapeSummary/
      type: object
      properties:
        name:
          description: >-
            Identifier. The name of the Database System Shape resource with the
            format:
            projects/{project}/locations/{region}/dbSystemShapes/{db_system_shape}
          type: string
        shape:
          description: Optional. shape
          type: string
        minNodeCount:
          description: Optional. Minimum number of database servers.
          type: integer
          format: int32
        maxNodeCount:
          description: Optional. Maximum number of database servers.
          type: integer
          format: int32
        minStorageCount:
          description: Optional. Minimum number of storage servers.
          type: integer
          format: int32
        maxStorageCount:
          description: Optional. Maximum number of storage servers.
          type: integer
          format: int32
        availableCoreCountPerNode:
          description: Optional. Number of cores per node.
          type: integer
          format: int32
        availableMemoryPerNodeGb:
          description: Optional. Memory per database server node in gigabytes.
          type: integer
          format: int32
        availableDataStorageTb:
          description: Optional. Storage per storage server in terabytes.
          type: integer
          format: int32
        minCoreCountPerNode:
          description: Optional. Minimum core count per node.
          type: integer
          format: int32
        minMemoryPerNodeGb:
          description: Optional. Minimum memory per node in gigabytes.
          type: integer
          format: int32
        minDbNodeStoragePerNodeGb:
          description: Optional. Minimum node storage per database server in gigabytes.
          type: integer
          format: int32
    ListAutonomousDatabasesResponse:
      id: ListAutonomousDatabasesResponse
      description: The response for `AutonomousDatabase.List`.
      type: object
      properties:
        autonomousDatabases:
          description: The list of Autonomous Databases.
          type: array
          items:
            $ref: '#/components/schemas/AutonomousDatabase'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
    AutonomousDatabase:
      id: AutonomousDatabase
      description: >-
        Details of the Autonomous Database resource.
        https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/AutonomousDatabase/
      type: object
      properties:
        name:
          description: >-
            Identifier. The name of the Autonomous Database resource in the
            following format:
            projects/{project}/locations/{region}/autonomousDatabases/{autonomous_database}
          type: string
        database:
          description: >-
            Optional. The name of the Autonomous Database. The database name
            must be unique in the project. The name must begin with a letter and
            can contain a maximum of 30 alphanumeric characters.
          type: string
        displayName:
          description: >-
            Optional. The display name for the Autonomous Database. The name
            does not have to be unique within your project.
          type: string
        entitlementId:
          description: >-
            Output only. The ID of the subscription entitlement associated with
            the Autonomous Database.
          readOnly: true
          type: string
        adminPassword:
          description: Optional. The password for the default ADMIN user.
          type: string
        properties:
          description: Optional. The properties of the Autonomous Database.
          $ref: '#/components/schemas/AutonomousDatabaseProperties'
        labels:
          description: >-
            Optional. The labels or tags associated with the Autonomous
            Database.
          type: object
          additionalProperties:
            type: string
        network:
          description: >-
            Required. The name of the VPC network used by the Autonomous
            Database in the following format:
            projects/{project}/global/networks/{network}
          type: string
        cidr:
          description: Required. The subnet CIDR range for the Autonmous Database.
          type: string
        createTime:
          description: >-
            Output only. The date and time that the Autonomous Database was
            created.
          readOnly: true
          type: string
          format: google-datetime
    AutonomousDatabaseProperties:
      id: AutonomousDatabaseProperties
      description: The properties of an Autonomous Database.
      type: object
      properties:
        ocid:
          description: >-
            Output only. OCID of the Autonomous Database.
            https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm#Oracle
          readOnly: true
          type: string
        computeCount:
          description: Optional. The number of compute servers for the Autonomous Database.
          type: number
          format: float
        cpuCoreCount:
          description: >-
            Optional. The number of CPU cores to be made available to the
            database.
          type: integer
          format: int32
        dataStorageSizeTb:
          description: Optional. The size of the data stored in the database, in terabytes.
          type: integer
          format: int32
        dataStorageSizeGb:
          description: Optional. The size of the data stored in the database, in gigabytes.
          type: integer
          format: int32
        dbWorkload:
          description: Required. The workload type of the Autonomous Database.
          type: string
          enumDescriptions:
            - Default unspecified value.
            - Autonomous Transaction Processing database.
            - Autonomous Data Warehouse database.
            - Autonomous JSON Database.
            - >-
              Autonomous Database with the Oracle APEX Application Development
              workload type.
          enum:
            - DB_WORKLOAD_UNSPECIFIED
            - OLTP
            - DW
            - AJD
            - APEX
        dbEdition:
          description: Optional. The edition of the Autonomous Databases.
          type: string
          enumDescriptions:
            - Default unspecified value.
            - Standard Database Edition
            - Enterprise Database Edition
          enum:
            - DATABASE_EDITION_UNSPECIFIED
            - STANDARD_EDITION
            - ENTERPRISE_EDITION
        characterSet:
          description: >-
            Optional. The character set for the Autonomous Database. The default
            is AL32UTF8.
          type: string
        nCharacterSet:
          description: >-
            Optional. The national character set for the Autonomous Database.
            The default is AL16UTF16.
          type: string
        privateEndpointIp:
          description: >-
            Optional. The private endpoint IP address for the Autonomous
            Database.
          type: string
        privateEndpointLabel:
          description: Optional. The private endpoint label for the Autonomous Database.
          type: string
        dbVersion:
          description: Optional. The Oracle Database version for the Autonomous Database.
          type: string
        isAutoScalingEnabled:
          description: >-
            Optional. This field indicates if auto scaling is enabled for the
            Autonomous Database CPU core count.
          type: boolean
        isStorageAutoScalingEnabled:
          description: >-
            Optional. This field indicates if auto scaling is enabled for the
            Autonomous Database storage.
          type: boolean
        licenseType:
          description: Required. The license type used for the Autonomous Database.
          type: string
          enumDescriptions:
            - Unspecified
            - License included part of offer
            - Bring your own license
          enum:
            - LICENSE_TYPE_UNSPECIFIED
            - LICENSE_INCLUDED
            - BRING_YOUR_OWN_LICENSE
        customerContacts:
          description: Optional. The list of customer contacts.
          type: array
          items:
            $ref: '#/components/schemas/CustomerContact'
        secretId:
          description: Optional. The ID of the Oracle Cloud Infrastructure vault secret.
          type: string
        vaultId:
          description: Optional. The ID of the Oracle Cloud Infrastructure vault.
          type: string
        maintenanceScheduleType:
          description: Optional. The maintenance schedule of the Autonomous Database.
          type: string
          enumDescriptions:
            - Default unspecified value.
            - >-
              An EARLY maintenance schedule patches the database before the
              regular scheduled maintenance.
            - >-
              A REGULAR maintenance schedule follows the normal maintenance
              cycle.
          enum:
            - MAINTENANCE_SCHEDULE_TYPE_UNSPECIFIED
            - EARLY
            - REGULAR
        mtlsConnectionRequired:
          description: >-
            Optional. This field specifies if the Autonomous Database requires
            mTLS connections.
          type: boolean
        backupRetentionPeriodDays:
          description: >-
            Optional. The retention period for the Autonomous Database. This
            field is specified in days, can range from 1 day to 60 days, and has
            a default value of 60 days.
          type: integer
          format: int32
        actualUsedDataStorageSizeTb:
          description: >-
            Output only. The amount of storage currently being used for user and
            system data, in terabytes.
          readOnly: true
          type: number
          format: double
        allocatedStorageSizeTb:
          description: >-
            Output only. The amount of storage currently allocated for the
            database tables and billed for, rounded up in terabytes.
          readOnly: true
          type: number
          format: double
        apexDetails:
          description: >-
            Output only. The details for the Oracle APEX Application
            Development.
          readOnly: true
          $ref: '#/components/schemas/AutonomousDatabaseApex'
        arePrimaryAllowlistedIpsUsed:
          description: >-
            Output only. This field indicates the status of Data Guard and
            Access control for the Autonomous Database. The field's value is
            null if Data Guard is disabled or Access Control is disabled. The
            field's value is TRUE if both Data Guard and Access Control are
            enabled, and the Autonomous Database is using primary IP access
            control list (ACL) for standby. The field's value is FALSE if both
            Data Guard and Access Control are enabled, and the Autonomous
            Database is using a different IP access control list (ACL) for
            standby compared to primary.
          readOnly: true
          type: boolean
        lifecycleDetails:
          description: >-
            Output only. The details of the current lifestyle state of the
            Autonomous Database.
          readOnly: true
          type: string
        state:
          description: Output only. The current lifecycle state of the Autonomous Database.
          readOnly: true
          type: string
          enumDescriptions:
            - Default unspecified value.
            - Indicates that the Autonomous Database is in provisioning state.
            - Indicates that the Autonomous Database is in available state.
            - Indicates that the Autonomous Database is in stopping state.
            - Indicates that the Autonomous Database is in stopped state.
            - Indicates that the Autonomous Database is in starting state.
            - Indicates that the Autonomous Database is in terminating state.
            - Indicates that the Autonomous Database is in terminated state.
            - Indicates that the Autonomous Database is in unavailable state.
            - Indicates that the Autonomous Database restore is in progress.
            - Indicates that the Autonomous Database failed to restore.
            - Indicates that the Autonomous Database backup is in progress.
            - Indicates that the Autonomous Database scale is in progress.
            - >-
              Indicates that the Autonomous Database is available but needs
              attention state.
            - Indicates that the Autonomous Database is in updating state.
            - >-
              Indicates that the Autonomous Database's maintenance is in
              progress state.
            - Indicates that the Autonomous Database is in restarting state.
            - Indicates that the Autonomous Database is in recreating state.
            - >-
              Indicates that the Autonomous Database's role change is in
              progress state.
            - Indicates that the Autonomous Database is in upgrading state.
            - Indicates that the Autonomous Database is in inaccessible state.
            - Indicates that the Autonomous Database is in standby state.
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - AVAILABLE
            - STOPPING
            - STOPPED
            - STARTING
            - TERMINATING
            - TERMINATED
            - UNAVAILABLE
            - RESTORE_IN_PROGRESS
            - RESTORE_FAILED
            - BACKUP_IN_PROGRESS
            - SCALE_IN_PROGRESS
            - AVAILABLE_NEEDS_ATTENTION
            - UPDATING
            - MAINTENANCE_IN_PROGRESS
            - RESTARTING
            - RECREATING
            - ROLE_CHANGE_IN_PROGRESS
            - UPGRADING
            - INACCESSIBLE
            - STANDBY
        autonomousContainerDatabaseId:
          description: Output only. The Autonomous Container Database OCID.
          readOnly: true
          type: string
        availableUpgradeVersions:
          description: >-
            Output only. The list of available Oracle Database upgrade versions
            for an Autonomous Database.
          readOnly: true
          type: array
          items:
            type: string
        connectionStrings:
          description: >-
            Output only. The connection strings used to connect to an Autonomous
            Database.
          readOnly: true
          $ref: '#/components/schemas/AutonomousDatabaseConnectionStrings'
        connectionUrls:
          description: Output only. The Oracle Connection URLs for an Autonomous Database.
          readOnly: true
          $ref: '#/components/schemas/AutonomousDatabaseConnectionUrls'
        failedDataRecoveryDuration:
          description: >-
            Output only. This field indicates the number of seconds of data loss
            during a Data Guard failover.
          readOnly: true
          type: string
          format: google-duration
        memoryTableGbs:
          description: >-
            Output only. The memory assigned to in-memory tables in an
            Autonomous Database.
          readOnly: true
          type: integer
          format: int32
        isLocalDataGuardEnabled:
          description: >-
            Output only. This field indicates whether the Autonomous Database
            has local (in-region) Data Guard enabled.
          readOnly: true
          type: boolean
        localAdgAutoFailoverMaxDataLossLimit:
          description: >-
            Output only. This field indicates the maximum data loss limit for an
            Autonomous Database, in seconds.
          readOnly: true
          type: integer
          format: int32
        localStandbyDb:
          description: >-
            Output only. The details of the Autonomous Data Guard standby
            database.
          readOnly: true
          $ref: '#/components/schemas/AutonomousDatabaseStandbySummary'
        memoryPerOracleComputeUnitGbs:
          description: Output only. The amount of memory enabled per ECPU, in gigabytes.
          readOnly: true
          type: integer
          format: int32
        localDisasterRecoveryType:
          description: >-
            Output only. This field indicates the local disaster recovery (DR)
            type of an Autonomous Database.
          readOnly: true
          type: string
          enumDescriptions:
            - Default unspecified value.
            - Autonomous Data Guard recovery.
            - Backup based recovery.
          enum:
            - LOCAL_DISASTER_RECOVERY_TYPE_UNSPECIFIED
            - ADG
            - BACKUP_BASED
        dataSafeState:
          description: >-
            Output only. The current state of the Data Safe registration for the
            Autonomous Database.
          readOnly: true
          type: string
          enumDescriptions:
            - Default unspecified value.
            - Registering data safe state.
            - Registered data safe state.
            - Deregistering data safe state.
            - Not registered data safe state.
            - Failed data safe state.
          enum:
            - DATA_SAFE_STATE_UNSPECIFIED
            - REGISTERING
            - REGISTERED
            - DEREGISTERING
            - NOT_REGISTERED
            - FAILED
        databaseManagementState:
          description: >-
            Output only. The current state of database management for the
            Autonomous Database.
          readOnly: true
          type: string
          enumDescriptions:
            - Default unspecified value.
            - Enabling Database Management state
            - Enabled Database Management state
            - Disabling Database Management state
            - Not Enabled Database Management state
            - Failed enabling Database Management state
            - Failed disabling Database Management state
          enum:
            - DATABASE_MANAGEMENT_STATE_UNSPECIFIED
            - ENABLING
            - ENABLED
            - DISABLING
            - NOT_ENABLED
            - FAILED_ENABLING
            - FAILED_DISABLING
        openMode:
          description: >-
            Output only. This field indicates the current mode of the Autonomous
            Database.
          readOnly: true
          type: string
          enumDescriptions:
            - Default unspecified value.
            - Read Only Mode
            - Read Write Mode
          enum:
            - OPEN_MODE_UNSPECIFIED
            - READ_ONLY
            - READ_WRITE
        operationsInsightsState:
          description: >-
            Output only. This field indicates the state of Operations Insights
            for the Autonomous Database.
          readOnly: true
          type: string
          enumDescriptions:
            - Default unspecified value.
            - Enabling status for operation insights.
            - Enabled status for operation insights.
            - Disabling status for operation insights.
            - Not Enabled status for operation insights.
            - Failed enabling status for operation insights.
            - Failed disabling status for operation insights.
          enum:
            - OPERATIONS_INSIGHTS_STATE_UNSPECIFIED
            - ENABLING
            - ENABLED
            - DISABLING
            - NOT_ENABLED
            - FAILED_ENABLING
            - FAILED_DISABLING
        peerDbIds:
          description: >-
            Output only. The list of OCIDs of standby databases located in
            Autonomous Data Guard remote regions that are associated with the
            source database.
          readOnly: true
          type: array
          items:
            type: string
        permissionLevel:
          description: Output only. The permission level of the Autonomous Database.
          readOnly: true
          type: string
          enumDescriptions:
            - Default unspecified value.
            - Restricted mode allows access only by admin users.
            - Normal access.
          enum:
            - PERMISSION_LEVEL_UNSPECIFIED
            - RESTRICTED
            - UNRESTRICTED
        privateEndpoint:
          description: Output only. The private endpoint for the Autonomous Database.
          readOnly: true
          type: string
        refreshableMode:
          description: Output only. The refresh mode of the cloned Autonomous Database.
          readOnly: true
          type: string
          enumDescriptions:
            - The default unspecified value.
            - >-
              AUTOMATIC indicates that the cloned database is automatically
              refreshed with data from the source Autonomous Database.
            - >-
              MANUAL indicates that the cloned database is manually refreshed
              with data from the source Autonomous Database.
          enum:
            - REFRESHABLE_MODE_UNSPECIFIED
            - AUTOMATIC
            - MANUAL
        refreshableState:
          description: Output only. The refresh State of the clone.
          readOnly: true
          type: string
          enumDescriptions:
            - Default unspecified value.
            - Refreshing
            - Not refreshed
          enum:
            - REFRESHABLE_STATE_UNSPECIFIED
            - REFRESHING
            - NOT_REFRESHING
        role:
          description: Output only. The Data Guard role of the Autonomous Database.
          readOnly: true
          type: string
          enumDescriptions:
            - Default unspecified value.
            - Primary role
            - Standby role
            - Disabled standby role
            - Backup copy role
            - Snapshot standby role
          enum:
            - ROLE_UNSPECIFIED
            - PRIMARY
            - STANDBY
            - DISABLED_STANDBY
            - BACKUP_COPY
            - SNAPSHOT_STANDBY
        scheduledOperationDetails:
          description: >-
            Output only. The list and details of the scheduled operations of the
            Autonomous Database.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ScheduledOperationDetails'
        sqlWebDeveloperUrl:
          description: Output only. The SQL Web Developer URL for the Autonomous Database.
          readOnly: true
          type: string
        supportedCloneRegions:
          description: >-
            Output only. The list of available regions that can be used to
            create a clone for the Autonomous Database.
          readOnly: true
          type: array
          items:
            type: string
        usedDataStorageSizeTbs:
          description: >-
            Output only. The storage space used by Autonomous Database, in
            gigabytes.
          readOnly: true
          type: integer
          format: int32
        ociUrl:
          description: >-
            Output only. The Oracle Cloud Infrastructure link for the Autonomous
            Database.
          readOnly: true
          type: string
        totalAutoBackupStorageSizeGbs:
          description: >-
            Output only. The storage space used by automatic backups of
            Autonomous Database, in gigabytes.
          readOnly: true
          type: number
          format: float
        nextLongTermBackupTime:
          description: >-
            Output only. The long term backup schedule of the Autonomous
            Database.
          readOnly: true
          type: string
          format: google-datetime
        maintenanceBeginTime:
          description: Output only. The date and time when maintenance will begin.
          readOnly: true
          type: string
          format: google-datetime
        maintenanceEndTime:
          description: Output only. The date and time when maintenance will end.
          readOnly: true
          type: string
          format: google-datetime
    AutonomousDatabaseApex:
      id: AutonomousDatabaseApex
      description: >-
        Oracle APEX Application Development.
        https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/datatypes/AutonomousDatabaseApex
      type: object
      properties:
        apexVersion:
          description: Output only. The Oracle APEX Application Development version.
          readOnly: true
          type: string
        ordsVersion:
          description: Output only. The Oracle REST Data Services (ORDS) version.
          readOnly: true
          type: string
    AutonomousDatabaseConnectionStrings:
      id: AutonomousDatabaseConnectionStrings
      description: >-
        The connection string used to connect to the Autonomous Database.
        https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/datatypes/AutonomousDatabaseConnectionStrings
      type: object
      properties:
        allConnectionStrings:
          description: >-
            Output only. Returns all connection strings that can be used to
            connect to the Autonomous Database.
          readOnly: true
          $ref: '#/components/schemas/AllConnectionStrings'
        dedicated:
          description: >-
            Output only. The database service provides the least level of
            resources to each SQL statement, but supports the most number of
            concurrent SQL statements.
          readOnly: true
          type: string
        high:
          description: >-
            Output only. The database service provides the highest level of
            resources to each SQL statement.
          readOnly: true
          type: string
        low:
          description: >-
            Output only. The database service provides the least level of
            resources to each SQL statement.
          readOnly: true
          type: string
        medium:
          description: >-
            Output only. The database service provides a lower level of
            resources to each SQL statement.
          readOnly: true
          type: string
        profiles:
          description: >-
            Output only. A list of connection string profiles to allow clients
            to group, filter, and select values based on the structured
            metadata.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/DatabaseConnectionStringProfile'
    AllConnectionStrings:
      id: AllConnectionStrings
      description: >-
        A list of all connection strings that can be used to connect to the
        Autonomous Database.
      type: object
      properties:
        high:
          description: >-
            Output only. The database service provides the highest level of
            resources to each SQL statement.
          readOnly: true
          type: string
        low:
          description: >-
            Output only. The database service provides the least level of
            resources to each SQL statement.
          readOnly: true
          type: string
        medium:
          description: >-
            Output only. The database service provides a lower level of
            resources to each SQL statement.
          readOnly: true
          type: string
    DatabaseConnectionStringProfile:
      id: DatabaseConnectionStringProfile
      description: >-
        The connection string profile to allow clients to group.
        https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/datatypes/DatabaseConnectionStringProfile
      type: object
      properties:
        consumerGroup:
          description: >-
            Output only. The current consumer group being used by the
            connection.
          readOnly: true
          type: string
          enumDescriptions:
            - Default unspecified value.
            - High consumer group.
            - Medium consumer group.
            - Low consumer group.
            - TP consumer group.
            - TPURGENT consumer group.
          enum:
            - CONSUMER_GROUP_UNSPECIFIED
            - HIGH
            - MEDIUM
            - LOW
            - TP
            - TPURGENT
        displayName:
          description: Output only. The display name for the database connection.
          readOnly: true
          type: string
        hostFormat:
          description: >-
            Output only. The host name format being currently used in connection
            string.
          readOnly: true
          type: string
          enumDescriptions:
            - Default unspecified value.
            - FQDN
            - IP
          enum:
            - HOST_FORMAT_UNSPECIFIED
            - FQDN
            - IP
        isRegional:
          description: >-
            Output only. This field indicates if the connection string is
            regional and is only applicable for cross-region Data Guard.
          readOnly: true
          type: boolean
        protocol:
          description: Output only. The protocol being used by the connection.
          readOnly: true
          type: string
          enumDescriptions:
            - Default unspecified value.
            - Tcp
            - Tcps
          enum:
            - PROTOCOL_UNSPECIFIED
            - TCP
            - TCPS
        sessionMode:
          description: Output only. The current session mode of the connection.
          readOnly: true
          type: string
          enumDescriptions:
            - Default unspecified value.
            - Direct
            - Indirect
          enum:
            - SESSION_MODE_UNSPECIFIED
            - DIRECT
            - INDIRECT
        syntaxFormat:
          description: Output only. The syntax of the connection string.
          readOnly: true
          type: string
          enumDescriptions:
            - Default unspecified value.
            - Long
            - Ezconnect
            - Ezconnectplus
          enum:
            - SYNTAX_FORMAT_UNSPECIFIED
            - LONG
            - EZCONNECT
            - EZCONNECTPLUS
        tlsAuthentication:
          description: >-
            Output only. This field indicates the TLS authentication type of the
            connection.
          readOnly: true
          type: string
          enumDescriptions:
            - Default unspecified value.
            - Server
            - Mutual
          enum:
            - TLS_AUTHENTICATION_UNSPECIFIED
            - SERVER
            - MUTUAL
        value:
          description: Output only. The value of the connection string.
          readOnly: true
          type: string
    AutonomousDatabaseConnectionUrls:
      id: AutonomousDatabaseConnectionUrls
      description: >-
        The URLs for accessing Oracle Application Express (APEX) and SQL
        Developer Web with a browser from a Compute instance.
        https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/datatypes/AutonomousDatabaseConnectionUrls
      type: object
      properties:
        apexUri:
          description: Output only. Oracle Application Express (APEX) URL.
          readOnly: true
          type: string
        databaseTransformsUri:
          description: >-
            Output only. The URL of the Database Transforms for the Autonomous
            Database.
          readOnly: true
          type: string
        graphStudioUri:
          description: >-
            Output only. The URL of the Graph Studio for the Autonomous
            Database.
          readOnly: true
          type: string
        machineLearningNotebookUri:
          description: >-
            Output only. The URL of the Oracle Machine Learning (OML) Notebook
            for the Autonomous Database.
          readOnly: true
          type: string
        machineLearningUserManagementUri:
          description: >-
            Output only. The URL of Machine Learning user management the
            Autonomous Database.
          readOnly: true
          type: string
        mongoDbUri:
          description: Output only. The URL of the MongoDB API for the Autonomous Database.
          readOnly: true
          type: string
        ordsUri:
          description: >-
            Output only. The Oracle REST Data Services (ORDS) URL of the Web
            Access for the Autonomous Database.
          readOnly: true
          type: string
        sqlDevWebUri:
          description: >-
            Output only. The URL of the Oracle SQL Developer Web for the
            Autonomous Database.
          readOnly: true
          type: string
    AutonomousDatabaseStandbySummary:
      id: AutonomousDatabaseStandbySummary
      description: >-
        Autonomous Data Guard standby database details.
        https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/datatypes/AutonomousDatabaseStandbySummary
      type: object
      properties:
        lagTimeDuration:
          description: >-
            Output only. The amount of time, in seconds, that the data of the
            standby database lags in comparison to the data of the primary
            database.
          readOnly: true
          type: string
          format: google-duration
        lifecycleDetails:
          description: >-
            Output only. The additional details about the current lifecycle
            state of the Autonomous Database.
          readOnly: true
          type: string
        state:
          description: Output only. The current lifecycle state of the Autonomous Database.
          readOnly: true
          type: string
          enumDescriptions:
            - Default unspecified value.
            - Indicates that the Autonomous Database is in provisioning state.
            - Indicates that the Autonomous Database is in available state.
            - Indicates that the Autonomous Database is in stopping state.
            - Indicates that the Autonomous Database is in stopped state.
            - Indicates that the Autonomous Database is in starting state.
            - Indicates that the Autonomous Database is in terminating state.
            - Indicates that the Autonomous Database is in terminated state.
            - Indicates that the Autonomous Database is in unavailable state.
            - Indicates that the Autonomous Database restore is in progress.
            - Indicates that the Autonomous Database failed to restore.
            - Indicates that the Autonomous Database backup is in progress.
            - Indicates that the Autonomous Database scale is in progress.
            - >-
              Indicates that the Autonomous Database is available but needs
              attention state.
            - Indicates that the Autonomous Database is in updating state.
            - >-
              Indicates that the Autonomous Database's maintenance is in
              progress state.
            - Indicates that the Autonomous Database is in restarting state.
            - Indicates that the Autonomous Database is in recreating state.
            - >-
              Indicates that the Autonomous Database's role change is in
              progress state.
            - Indicates that the Autonomous Database is in upgrading state.
            - Indicates that the Autonomous Database is in inaccessible state.
            - Indicates that the Autonomous Database is in standby state.
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - AVAILABLE
            - STOPPING
            - STOPPED
            - STARTING
            - TERMINATING
            - TERMINATED
            - UNAVAILABLE
            - RESTORE_IN_PROGRESS
            - RESTORE_FAILED
            - BACKUP_IN_PROGRESS
            - SCALE_IN_PROGRESS
            - AVAILABLE_NEEDS_ATTENTION
            - UPDATING
            - MAINTENANCE_IN_PROGRESS
            - RESTARTING
            - RECREATING
            - ROLE_CHANGE_IN_PROGRESS
            - UPGRADING
            - INACCESSIBLE
            - STANDBY
        dataGuardRoleChangedTime:
          description: >-
            Output only. The date and time the Autonomous Data Guard role was
            switched for the standby Autonomous Database.
          readOnly: true
          type: string
          format: google-datetime
        disasterRecoveryRoleChangedTime:
          description: >-
            Output only. The date and time the Disaster Recovery role was
            switched for the standby Autonomous Database.
          readOnly: true
          type: string
          format: google-datetime
    ScheduledOperationDetails:
      id: ScheduledOperationDetails
      description: >-
        Details of scheduled operation.
        https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/datatypes/ScheduledOperationDetails
      type: object
      properties:
        dayOfWeek:
          description: Output only. Day of week.
          readOnly: true
          type: string
          enumDescriptions:
            - The day of the week is unspecified.
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
          enum:
            - DAY_OF_WEEK_UNSPECIFIED
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        startTime:
          description: Output only. Auto start time.
          readOnly: true
          $ref: '#/components/schemas/TimeOfDay'
        stopTime:
          description: Output only. Auto stop time.
          readOnly: true
          $ref: '#/components/schemas/TimeOfDay'
    TimeOfDay:
      id: TimeOfDay
      description: >-
        Represents a time of day. The date and time zone are either not
        significant or are specified elsewhere. An API may choose to allow leap
        seconds. Related types are google.type.Date and
        `google.protobuf.Timestamp`.
      type: object
      properties:
        hours:
          description: >-
            Hours of a day in 24 hour format. Must be greater than or equal to 0
            and typically must be less than or equal to 23. An API may choose to
            allow the value "24:00:00" for scenarios like business closing time.
          type: integer
          format: int32
        minutes:
          description: >-
            Minutes of an hour. Must be greater than or equal to 0 and less than
            or equal to 59.
          type: integer
          format: int32
        seconds:
          description: >-
            Seconds of a minute. Must be greater than or equal to 0 and
            typically must be less than or equal to 59. An API may allow the
            value 60 if it allows leap-seconds.
          type: integer
          format: int32
        nanos:
          description: >-
            Fractions of seconds, in nanoseconds. Must be greater than or equal
            to 0 and less than or equal to 999,999,999.
          type: integer
          format: int32
    RestoreAutonomousDatabaseRequest:
      id: RestoreAutonomousDatabaseRequest
      description: The request for `AutonomousDatabase.Restore`.
      type: object
      properties:
        restoreTime:
          description: Required. The time and date to restore the database to.
          type: string
          format: google-datetime
    GenerateAutonomousDatabaseWalletRequest:
      id: GenerateAutonomousDatabaseWalletRequest
      description: The request for `AutonomousDatabase.GenerateWallet`.
      type: object
      properties:
        type:
          description: >-
            Optional. The type of wallet generation for the Autonomous Database.
            The default value is SINGLE.
          type: string
          enumDescriptions:
            - Default unspecified value.
            - Used to generate wallet for all databases in the region.
            - Used to generate wallet for a single database.
          enum:
            - GENERATE_TYPE_UNSPECIFIED
            - ALL
            - SINGLE
        isRegional:
          description: >-
            Optional. True when requesting regional connection strings in PDB
            connect info, applicable to cross-region Data Guard only.
          type: boolean
        password:
          description: >-
            Required. The password used to encrypt the keys inside the wallet.
            The password must be a minimum of 8 characters.
          type: string
    GenerateAutonomousDatabaseWalletResponse:
      id: GenerateAutonomousDatabaseWalletResponse
      description: The response for `AutonomousDatabase.GenerateWallet`.
      type: object
      properties:
        archiveContent:
          description: Output only. The base64 encoded wallet files.
          readOnly: true
          type: string
          format: byte
    ListAutonomousDbVersionsResponse:
      id: ListAutonomousDbVersionsResponse
      description: The response for `AutonomousDbVersion.List`.
      type: object
      properties:
        autonomousDbVersions:
          description: The list of Autonomous Database versions.
          type: array
          items:
            $ref: '#/components/schemas/AutonomousDbVersion'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
    AutonomousDbVersion:
      id: AutonomousDbVersion
      description: >-
        Details of the Autonomous Database version.
        https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/AutonomousDbVersionSummary/
      type: object
      properties:
        name:
          description: >-
            Identifier. The name of the Autonomous Database Version resource
            with the format:
            projects/{project}/locations/{region}/autonomousDbVersions/{autonomous_db_version}
          type: string
        version:
          description: Output only. An Oracle Database version for Autonomous Database.
          readOnly: true
          type: string
        dbWorkload:
          description: Output only. The Autonomous Database workload type.
          readOnly: true
          type: string
          enumDescriptions:
            - Default unspecified value.
            - Autonomous Transaction Processing database.
            - Autonomous Data Warehouse database.
            - Autonomous JSON Database.
            - >-
              Autonomous Database with the Oracle APEX Application Development
              workload type.
          enum:
            - DB_WORKLOAD_UNSPECIFIED
            - OLTP
            - DW
            - AJD
            - APEX
        workloadUri:
          description: >-
            Output only. A URL that points to a detailed description of the
            Autonomous Database version.
          readOnly: true
          type: string
    ListAutonomousDatabaseCharacterSetsResponse:
      id: ListAutonomousDatabaseCharacterSetsResponse
      description: The response for `AutonomousDatabaseCharacterSet.List`.
      type: object
      properties:
        autonomousDatabaseCharacterSets:
          description: The list of Autonomous Database Character Sets.
          type: array
          items:
            $ref: '#/components/schemas/AutonomousDatabaseCharacterSet'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
    AutonomousDatabaseCharacterSet:
      id: AutonomousDatabaseCharacterSet
      description: >-
        Details of the Autonomous Database character set resource.
        https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/AutonomousDatabaseCharacterSets/
      type: object
      properties:
        name:
          description: >-
            Identifier. The name of the Autonomous Database Character Set
            resource in the following format:
            projects/{project}/locations/{region}/autonomousDatabaseCharacterSets/{autonomous_database_character_set}
          type: string
        characterSetType:
          description: Output only. The character set type for the Autonomous Database.
          readOnly: true
          type: string
          enumDescriptions:
            - Character set type is not specified.
            - Character set type is set to database.
            - Character set type is set to national.
          enum:
            - CHARACTER_SET_TYPE_UNSPECIFIED
            - DATABASE
            - NATIONAL
        characterSet:
          description: >-
            Output only. The character set name for the Autonomous Database
            which is the ID in the resource name.
          readOnly: true
          type: string
    ListAutonomousDatabaseBackupsResponse:
      id: ListAutonomousDatabaseBackupsResponse
      description: The response for `AutonomousDatabaseBackup.List`.
      type: object
      properties:
        autonomousDatabaseBackups:
          description: The list of Autonomous Database Backups.
          type: array
          items:
            $ref: '#/components/schemas/AutonomousDatabaseBackup'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
    AutonomousDatabaseBackup:
      id: AutonomousDatabaseBackup
      description: >-
        Details of the Autonomous Database Backup resource.
        https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/AutonomousDatabaseBackup/
      type: object
      properties:
        name:
          description: >-
            Identifier. The name of the Autonomous Database Backup resource with
            the format:
            projects/{project}/locations/{region}/autonomousDatabaseBackups/{autonomous_database_backup}
          type: string
        autonomousDatabase:
          description: >-
            Required. The name of the Autonomous Database resource for which the
            backup is being created. Format:
            projects/{project}/locations/{region}/autonomousDatabases/{autonomous_database}
          type: string
        displayName:
          description: >-
            Optional. User friendly name for the Backup. The name does not have
            to be unique.
          type: string
        properties:
          description: Optional. Various properties of the backup.
          $ref: '#/components/schemas/AutonomousDatabaseBackupProperties'
        labels:
          description: Optional. labels or tags associated with the resource.
          type: object
          additionalProperties:
            type: string
    AutonomousDatabaseBackupProperties:
      id: AutonomousDatabaseBackupProperties
      description: Properties of the Autonomous Database Backup resource.
      type: object
      properties:
        ocid:
          description: >-
            Output only. OCID of the Autonomous Database backup.
            https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm#Oracle
          readOnly: true
          type: string
        retentionPeriodDays:
          description: Optional. Retention period in days for the backup.
          type: integer
          format: int32
        compartmentId:
          description: Output only. The OCID of the compartment.
          readOnly: true
          type: string
        databaseSizeTb:
          description: Output only. The quantity of data in the database, in terabytes.
          readOnly: true
          type: number
          format: float
        dbVersion:
          description: >-
            Output only. A valid Oracle Database version for Autonomous
            Database.
          readOnly: true
          type: string
        isLongTermBackup:
          description: Output only. Indicates if the backup is long term backup.
          readOnly: true
          type: boolean
        isAutomaticBackup:
          description: Output only. Indicates if the backup is automatic or user initiated.
          readOnly: true
          type: boolean
        isRestorable:
          description: >-
            Output only. Indicates if the backup can be used to restore the
            Autonomous Database.
          readOnly: true
          type: boolean
        keyStoreId:
          description: Optional. The OCID of the key store of Oracle Vault.
          type: string
        keyStoreWallet:
          description: Optional. The wallet name for Oracle Key Vault.
          type: string
        kmsKeyId:
          description: >-
            Optional. The OCID of the key container that is used as the master
            encryption key in database transparent data encryption (TDE)
            operations.
          type: string
        kmsKeyVersionId:
          description: >-
            Optional. The OCID of the key container version that is used in
            database transparent data encryption (TDE) operations KMS Key can
            have multiple key versions. If none is specified, the current key
            version (latest) of the Key Id is used for the operation. Autonomous
            Database Serverless does not use key versions, hence is not
            applicable for Autonomous Database Serverless instances.
          type: string
        lifecycleDetails:
          description: >-
            Output only. Additional information about the current lifecycle
            state.
          readOnly: true
          type: string
        lifecycleState:
          description: Output only. The lifecycle state of the backup.
          readOnly: true
          type: string
          enumDescriptions:
            - Default unspecified value.
            - Indicates that the resource is in creating state.
            - Indicates that the resource is in active state.
            - Indicates that the resource is in deleting state.
            - Indicates that the resource is in deleted state.
            - Indicates that the resource is in failed state.
            - Indicates that the resource is in updating state.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - DELETING
            - DELETED
            - FAILED
            - UPDATING
        sizeTb:
          description: Output only. The backup size in terabytes.
          readOnly: true
          type: number
          format: float
        availableTillTime:
          description: Output only. Timestamp until when the backup will be available.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The date and time the backup completed.
          readOnly: true
          type: string
          format: google-datetime
        startTime:
          description: Output only. The date and time the backup started.
          readOnly: true
          type: string
          format: google-datetime
        type:
          description: Output only. The type of the backup.
          readOnly: true
          type: string
          enumDescriptions:
            - Default unspecified value.
            - Incremental backups.
            - Full backups.
            - Long term backups.
          enum:
            - TYPE_UNSPECIFIED
            - INCREMENTAL
            - FULL
            - LONG_TERM
        vaultId:
          description: Optional. The OCID of the vault.
          type: string
    ListLocationsResponse:
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Location:
      id: Location
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
          additionalProperties:
            type: string
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    OperationMetadata:
      id: OperationMetadata
      description: Represents the metadata of the long-running operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        target:
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusMessage:
          description: Output only. The status of the operation.
          readOnly: true
          type: string
        requestedCancellation:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have been cancelled successfully
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
        percentComplete:
          description: >-
            Output only. An estimated percentage of the operation that has been
            completed at a given moment of time, between 0 and 100.
          readOnly: true
          type: number
          format: double
    LocationMetadata:
      id: LocationMetadata
      description: Metadata for a given Location.
      type: object
      properties:
        gcpOracleZones:
          description: Output only. Google Cloud Platform Oracle zones in a location.
          readOnly: true
          type: array
          items:
            type: string
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    locations:
      id: google.oracledatabase.locations
      name: locations
      title: Locations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: google.oracledatabase.operations
      name: operations
      title: Operations
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    cloud_exadata_infrastructures:
      id: google.oracledatabase.cloud_exadata_infrastructures
      name: cloud_exadata_infrastructures
      title: Cloud_exadata_infrastructures
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1cloudExadataInfrastructures/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.cloudExadataInfrastructures
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1cloudExadataInfrastructures/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1cloudExadataInfrastructures~1{cloudExadataInfrastructuresId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1cloudExadataInfrastructures~1{cloudExadataInfrastructuresId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/cloud_exadata_infrastructures/methods/get
          - $ref: >-
              #/components/x-stackQL-resources/cloud_exadata_infrastructures/methods/list
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/cloud_exadata_infrastructures/methods/create
        update: []
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/cloud_exadata_infrastructures/methods/delete
    db_servers:
      id: google.oracledatabase.db_servers
      name: db_servers
      title: Db_servers
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1cloudExadataInfrastructures~1{cloudExadataInfrastructuresId}~1dbServers/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.dbServers
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/db_servers/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    cloud_vm_clusters:
      id: google.oracledatabase.cloud_vm_clusters
      name: cloud_vm_clusters
      title: Cloud_vm_clusters
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1cloudVmClusters/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.cloudVmClusters
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1cloudVmClusters/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1cloudVmClusters~1{cloudVmClustersId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1cloudVmClusters~1{cloudVmClustersId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cloud_vm_clusters/methods/get'
          - $ref: '#/components/x-stackQL-resources/cloud_vm_clusters/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/cloud_vm_clusters/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/cloud_vm_clusters/methods/delete'
    db_nodes:
      id: google.oracledatabase.db_nodes
      name: db_nodes
      title: Db_nodes
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1cloudVmClusters~1{cloudVmClustersId}~1dbNodes/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.dbNodes
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/db_nodes/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    entitlements:
      id: google.oracledatabase.entitlements
      name: entitlements
      title: Entitlements
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1entitlements/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.entitlements
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/entitlements/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    gi_versions:
      id: google.oracledatabase.gi_versions
      name: gi_versions
      title: Gi_versions
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1giVersions/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.giVersions
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/gi_versions/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    db_system_shapes:
      id: google.oracledatabase.db_system_shapes
      name: db_system_shapes
      title: Db_system_shapes
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1dbSystemShapes/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.dbSystemShapes
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/db_system_shapes/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    autonomous_databases:
      id: google.oracledatabase.autonomous_databases
      name: autonomous_databases
      title: Autonomous_databases
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1autonomousDatabases/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.autonomousDatabases
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1autonomousDatabases/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1autonomousDatabases~1{autonomousDatabasesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1autonomousDatabases~1{autonomousDatabasesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restore:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1autonomousDatabases~1{autonomousDatabasesId}:restore/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        generate_wallet:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1autonomousDatabases~1{autonomousDatabasesId}:generateWallet/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/autonomous_databases/methods/get'
          - $ref: '#/components/x-stackQL-resources/autonomous_databases/methods/list'
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/autonomous_databases/methods/create
        update: []
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/autonomous_databases/methods/delete
    autonomous_db_versions:
      id: google.oracledatabase.autonomous_db_versions
      name: autonomous_db_versions
      title: Autonomous_db_versions
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1autonomousDbVersions/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.autonomousDbVersions
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/autonomous_db_versions/methods/list
        insert: []
        update: []
        replace: []
        delete: []
    autonomous_database_character_sets:
      id: google.oracledatabase.autonomous_database_character_sets
      name: autonomous_database_character_sets
      title: Autonomous_database_character_sets
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1autonomousDatabaseCharacterSets/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.autonomousDatabaseCharacterSets
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/autonomous_database_character_sets/methods/list
        insert: []
        update: []
        replace: []
        delete: []
    autonomous_database_backups:
      id: google.oracledatabase.autonomous_database_backups
      name: autonomous_database_backups
      title: Autonomous_database_backups
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1autonomousDatabaseBackups/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.autonomousDatabaseBackups
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/autonomous_database_backups/methods/list
        insert: []
        update: []
        replace: []
        delete: []
paths:
  /v1/projects/{projectsId}/locations:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Lists information about the supported locations for this service.
      operationId: oracledatabase.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: oracledatabase.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: oracledatabase.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: oracledatabase.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: oracledatabase.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: oracledatabase.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/cloudExadataInfrastructures:
    parameters: *ref_1
    get:
      description: Lists Exadata Infrastructures in a given project and location.
      operationId: oracledatabase.projects.locations.cloudExadataInfrastructures.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCloudExadataInfrastructuresResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Creates a new Exadata Infrastructure in a given project and location.
      operationId: oracledatabase.projects.locations.cloudExadataInfrastructures.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudExadataInfrastructure'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: cloudExadataInfrastructureId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/cloudExadataInfrastructures/{cloudExadataInfrastructuresId}:
    parameters: *ref_1
    get:
      description: Gets details of a single Exadata Infrastructure.
      operationId: oracledatabase.projects.locations.cloudExadataInfrastructures.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudExadataInfrastructure'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: cloudExadataInfrastructuresId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a single Exadata Infrastructure.
      operationId: oracledatabase.projects.locations.cloudExadataInfrastructures.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: cloudExadataInfrastructuresId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/cloudExadataInfrastructures/{cloudExadataInfrastructuresId}/dbServers:
    parameters: *ref_1
    get:
      description: Lists the database servers of an Exadata Infrastructure instance.
      operationId: >-
        oracledatabase.projects.locations.cloudExadataInfrastructures.dbServers.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDbServersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: cloudExadataInfrastructuresId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/cloudVmClusters:
    parameters: *ref_1
    get:
      description: Lists the VM Clusters in a given project and location.
      operationId: oracledatabase.projects.locations.cloudVmClusters.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCloudVmClustersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
    post:
      description: Creates a new VM Cluster in a given project and location.
      operationId: oracledatabase.projects.locations.cloudVmClusters.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudVmCluster'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: cloudVmClusterId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/cloudVmClusters/{cloudVmClustersId}:
    parameters: *ref_1
    get:
      description: Gets details of a single VM Cluster.
      operationId: oracledatabase.projects.locations.cloudVmClusters.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudVmCluster'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: cloudVmClustersId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a single VM Cluster.
      operationId: oracledatabase.projects.locations.cloudVmClusters.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: cloudVmClustersId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/cloudVmClusters/{cloudVmClustersId}/dbNodes:
    parameters: *ref_1
    get:
      description: Lists the database nodes of a VM Cluster.
      operationId: oracledatabase.projects.locations.cloudVmClusters.dbNodes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDbNodesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: cloudVmClustersId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/entitlements:
    parameters: *ref_1
    get:
      description: Lists the entitlements in a given project.
      operationId: oracledatabase.projects.locations.entitlements.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEntitlementsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/giVersions:
    parameters: *ref_1
    get:
      description: >-
        Lists all the valid Oracle Grid Infrastructure (GI) versions for the
        given project and location.
      operationId: oracledatabase.projects.locations.giVersions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGiVersionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/dbSystemShapes:
    parameters: *ref_1
    get:
      description: Lists the database system shapes available for the project and location.
      operationId: oracledatabase.projects.locations.dbSystemShapes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDbSystemShapesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/autonomousDatabases:
    parameters: *ref_1
    get:
      description: Lists the Autonomous Databases in a given project and location.
      operationId: oracledatabase.projects.locations.autonomousDatabases.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAutonomousDatabasesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new Autonomous Database in a given project and location.
      operationId: oracledatabase.projects.locations.autonomousDatabases.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutonomousDatabase'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: autonomousDatabaseId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/autonomousDatabases/{autonomousDatabasesId}:
    parameters: *ref_1
    get:
      description: Gets the details of a single Autonomous Database.
      operationId: oracledatabase.projects.locations.autonomousDatabases.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutonomousDatabase'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: autonomousDatabasesId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a single Autonomous Database.
      operationId: oracledatabase.projects.locations.autonomousDatabases.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: autonomousDatabasesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/autonomousDatabases/{autonomousDatabasesId}:restore:
    parameters: *ref_1
    post:
      description: Restores a single Autonomous Database.
      operationId: oracledatabase.projects.locations.autonomousDatabases.restore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreAutonomousDatabaseRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: autonomousDatabasesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/autonomousDatabases/{autonomousDatabasesId}:generateWallet:
    parameters: *ref_1
    post:
      description: Generates a wallet for an Autonomous Database.
      operationId: oracledatabase.projects.locations.autonomousDatabases.generateWallet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateAutonomousDatabaseWalletRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateAutonomousDatabaseWalletResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: autonomousDatabasesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/autonomousDbVersions:
    parameters: *ref_1
    get:
      description: >-
        Lists all the available Autonomous Database versions for a project and
        location.
      operationId: oracledatabase.projects.locations.autonomousDbVersions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAutonomousDbVersionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/autonomousDatabaseCharacterSets:
    parameters: *ref_1
    get:
      description: >-
        Lists Autonomous Database Character Sets in a given project and
        location.
      operationId: oracledatabase.projects.locations.autonomousDatabaseCharacterSets.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ListAutonomousDatabaseCharacterSetsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/autonomousDatabaseBackups:
    parameters: *ref_1
    get:
      description: Lists the long-term and automatic backups of an Autonomous Database.
      operationId: oracledatabase.projects.locations.autonomousDatabaseBackups.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAutonomousDatabaseBackupsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
