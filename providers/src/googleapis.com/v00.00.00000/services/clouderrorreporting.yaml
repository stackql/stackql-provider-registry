openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Error Reporting API
  description: >-
    Groups and counts similar errors from cloud services and applications,
    reports new errors, and provides access to error groups and their associated
    errors. 
  version: v1beta1
  x-discovery-doc-revision: '20241025'
  x-generated-date: '2024-11-06'
externalDocs:
  url: https://cloud.google.com/error-reporting/
servers:
  - url: https://clouderrorreporting.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    ErrorGroup:
      id: ErrorGroup
      description: Description of a group of similar error events.
      type: object
      properties:
        name:
          description: >-
            The group resource name. Written as
            `projects/{projectID}/groups/{group_id}` or
            `projects/{projectID}/locations/{location}/groups/{group_id}`
            Examples: `projects/my-project-123/groups/my-group`,
            `projects/my-project-123/locations/us-central1/groups/my-group` In
            the group resource name, the `group_id` is a unique identifier for a
            particular error group. The identifier is derived from key parts of
            the error-log content and is treated as Service Data. For
            information about how Service Data is handled, see [Google Cloud
            Privacy
            Notice](https://cloud.google.com/terms/cloud-privacy-notice). For a
            list of supported locations, see [Supported
            Regions](https://cloud.google.com/logging/docs/region-support).
            `global` is the default when unspecified.
          type: string
        groupId:
          description: >-
            An opaque identifier of the group. This field is assigned by the
            Error Reporting system and always populated. In the group resource
            name, the `group_id` is a unique identifier for a particular error
            group. The identifier is derived from key parts of the error-log
            content and is treated as Service Data. For information about how
            Service Data is handled, see [Google Cloud Privacy
            Notice](https://cloud.google.com/terms/cloud-privacy-notice).
          type: string
        trackingIssues:
          description: Associated tracking issues.
          type: array
          items:
            $ref: '#/components/schemas/TrackingIssue'
        resolutionStatus:
          description: >-
            Error group's resolution status. An unspecified resolution status
            will be interpreted as OPEN
          type: string
          enumDescriptions:
            - >-
              Status is unknown. When left unspecified in requests, it is
              treated like OPEN.
            - >-
              The error group is not being addressed. This is the default for
              new groups. It is also used for errors re-occurring after marked
              RESOLVED.
            - >-
              Error Group manually acknowledged, it can have an issue link
              attached.
            - >-
              Error Group manually resolved, more events for this group are not
              expected to occur.
            - >-
              The error group is muted and excluded by default on group stats
              requests.
          enum:
            - RESOLUTION_STATUS_UNSPECIFIED
            - OPEN
            - ACKNOWLEDGED
            - RESOLVED
            - MUTED
    TrackingIssue:
      id: TrackingIssue
      description: Information related to tracking the progress on resolving the error.
      type: object
      properties:
        url:
          description: >-
            A URL pointing to a related entry in an issue tracking system.
            Example: `https://github.com/user/project/issues/4`
          type: string
    ListGroupStatsResponse:
      id: ListGroupStatsResponse
      description: Contains a set of requested error group stats.
      type: object
      properties:
        errorGroupStats:
          description: The error group stats which match the given request.
          type: array
          items:
            $ref: '#/components/schemas/ErrorGroupStats'
        nextPageToken:
          description: >-
            If non-empty, more results are available. Pass this token, along
            with the same query parameters as the first request, to view the
            next page of results.
          type: string
        timeRangeBegin:
          description: >-
            The timestamp specifies the start time to which the request was
            restricted. The start time is set based on the requested time range.
            It may be adjusted to a later time if a project has exceeded the
            storage quota and older data has been deleted.
          type: string
          format: google-datetime
    ErrorGroupStats:
      id: ErrorGroupStats
      description: >-
        Data extracted for a specific group based on certain filter criteria,
        such as a given time period and/or service filter.
      type: object
      properties:
        group:
          description: Group data that is independent of the filter criteria.
          $ref: '#/components/schemas/ErrorGroup'
        count:
          description: >-
            Approximate total number of events in the given group that match the
            filter criteria.
          type: string
          format: int64
        affectedUsersCount:
          description: >-
            Approximate number of affected users in the given group that match
            the filter criteria. Users are distinguished by data in the
            ErrorContext of the individual error events, such as their login
            name or their remote IP address in case of HTTP requests. The number
            of affected users can be zero even if the number of errors is
            non-zero if no data was provided from which the affected user could
            be deduced. Users are counted based on data in the request context
            that was provided in the error report. If more users are implicitly
            affected, such as due to a crash of the whole service, this is not
            reflected here.
          type: string
          format: int64
        timedCounts:
          description: >-
            Approximate number of occurrences over time. Timed counts returned
            by ListGroups are guaranteed to be: - Inside the requested time
            interval - Non-overlapping, and - Ordered by ascending time.
          type: array
          items:
            $ref: '#/components/schemas/TimedCount'
        firstSeenTime:
          description: >-
            Approximate first occurrence that was ever seen for this group and
            which matches the given filter criteria, ignoring the time_range
            that was specified in the request.
          type: string
          format: google-datetime
        lastSeenTime:
          description: >-
            Approximate last occurrence that was ever seen for this group and
            which matches the given filter criteria, ignoring the time_range
            that was specified in the request.
          type: string
          format: google-datetime
        affectedServices:
          description: >-
            Service contexts with a non-zero error count for the given filter
            criteria. This list can be truncated if multiple services are
            affected. Refer to `num_affected_services` for the total count.
          type: array
          items:
            $ref: '#/components/schemas/ServiceContext'
        numAffectedServices:
          description: >-
            The total number of services with a non-zero error count for the
            given filter criteria.
          type: integer
          format: int32
        representative:
          description: >-
            An arbitrary event that is chosen as representative for the whole
            group. The representative event is intended to be used as a quick
            preview for the whole group. Events in the group are usually
            sufficiently similar to each other such that showing an arbitrary
            representative provides insight into the characteristics of the
            group as a whole.
          $ref: '#/components/schemas/ErrorEvent'
    TimedCount:
      id: TimedCount
      description: >-
        The number of errors in a given time period. All numbers are approximate
        since the error events are sampled before counting them.
      type: object
      properties:
        count:
          description: Approximate number of occurrences in the given time period.
          type: string
          format: int64
        startTime:
          description: Start of the time period to which `count` refers (included).
          type: string
          format: google-datetime
        endTime:
          description: End of the time period to which `count` refers (excluded).
          type: string
          format: google-datetime
    ServiceContext:
      id: ServiceContext
      description: >-
        Describes a running service that sends errors. Its version changes over
        time and multiple versions can run in parallel.
      type: object
      properties:
        service:
          description: >-
            An identifier of the service, such as the name of the executable,
            job, or Google App Engine service name. This field is expected to
            have a low number of values that are relatively stable over time, as
            opposed to `version`, which can be changed whenever new code is
            deployed. Contains the service name for error reports extracted from
            Google App Engine logs or `default` if the App Engine default
            service is used.
          type: string
        version:
          description: >-
            Represents the source code version that the developer provided,
            which could represent a version label or a Git SHA-1 hash, for
            example. For App Engine standard environment, the version is set to
            the version of the app.
          type: string
        resourceType:
          description: >-
            Type of the MonitoredResource. List of possible values:
            https://cloud.google.com/monitoring/api/resources Value is set
            automatically for incoming errors and must not be set when reporting
            errors.
          type: string
    ErrorEvent:
      id: ErrorEvent
      description: An error event which is returned by the Error Reporting system.
      type: object
      properties:
        eventTime:
          description: >-
            Time when the event occurred as provided in the error report. If the
            report did not contain a timestamp, the time the error was received
            by the Error Reporting system is used.
          type: string
          format: google-datetime
        serviceContext:
          description: The `ServiceContext` for which this error was reported.
          $ref: '#/components/schemas/ServiceContext'
        message:
          description: The stack trace that was reported or logged by the service.
          type: string
        context:
          description: Data about the context in which the error occurred.
          $ref: '#/components/schemas/ErrorContext'
    ErrorContext:
      id: ErrorContext
      description: >-
        A description of the context in which an error occurred. This data
        should be provided by the application when reporting an error, unless
        the error report has been generated automatically from Google App Engine
        logs.
      type: object
      properties:
        httpRequest:
          description: The HTTP request which was processed when the error was triggered.
          $ref: '#/components/schemas/HttpRequestContext'
        user:
          description: >-
            The user who caused or was affected by the crash. This can be a user
            ID, an email address, or an arbitrary token that uniquely identifies
            the user. When sending an error report, leave this field empty if
            the user was not logged in. In this case the Error Reporting system
            will use other data, such as remote IP address, to distinguish
            affected users. See `affected_users_count` in `ErrorGroupStats`.
          type: string
        reportLocation:
          description: >-
            The location in the source code where the decision was made to
            report the error, usually the place where it was logged. For a
            logged exception this would be the source line where the exception
            is logged, usually close to the place where it was caught.
          $ref: '#/components/schemas/SourceLocation'
        sourceReferences:
          description: >-
            Source code that was used to build the executable which has caused
            the given error message.
          type: array
          items:
            $ref: '#/components/schemas/SourceReference'
    HttpRequestContext:
      id: HttpRequestContext
      description: >-
        HTTP request data that is related to a reported error. This data should
        be provided by the application when reporting an error, unless the error
        report has been generated automatically from Google App Engine logs.
      type: object
      properties:
        method:
          description: The type of HTTP request, such as `GET`, `POST`, etc.
          type: string
        url:
          description: The URL of the request.
          type: string
        userAgent:
          description: The user agent information that is provided with the request.
          type: string
        referrer:
          description: The referrer information that is provided with the request.
          type: string
        responseStatusCode:
          description: The HTTP response status code for the request.
          type: integer
          format: int32
        remoteIp:
          description: >-
            The IP address from which the request originated. This can be IPv4,
            IPv6, or a token which is derived from the IP address, depending on
            the data that has been provided in the error report.
          type: string
    SourceLocation:
      id: SourceLocation
      description: >-
        Indicates a location in the source code of the service for which errors
        are reported. `functionName` must be provided by the application when
        reporting an error, unless the error report contains a `message` with a
        supported exception stack trace. All fields are optional for the later
        case.
      type: object
      properties:
        filePath:
          description: >-
            The source code filename, which can include a truncated relative
            path, or a full path from a production machine.
          type: string
        lineNumber:
          description: 1-based. 0 indicates that the line number is unknown.
          type: integer
          format: int32
        functionName:
          description: >-
            Human-readable name of a function or method. The value can include
            optional context like the class or package name. For example,
            `my.package.MyClass.method` in case of Java.
          type: string
    SourceReference:
      id: SourceReference
      description: >-
        A reference to a particular snapshot of the source tree used to build
        and deploy an application.
      type: object
      properties:
        repository:
          description: >-
            Optional. A URI string identifying the repository. Example:
            "https://github.com/GoogleCloudPlatform/kubernetes.git"
          type: string
        revisionId:
          description: >-
            The canonical and persistent identifier of the deployed revision.
            Example (git): "0035781c50ec7aa23385dc841529ce8a4b70db1b"
          type: string
    ListEventsResponse:
      id: ListEventsResponse
      description: Contains a set of requested error events.
      type: object
      properties:
        errorEvents:
          description: The error events which match the given request.
          type: array
          items:
            $ref: '#/components/schemas/ErrorEvent'
        nextPageToken:
          description: >-
            If non-empty, more results are available. Pass this token, along
            with the same query parameters as the first request, to view the
            next page of results.
          type: string
        timeRangeBegin:
          description: >-
            The timestamp specifies the start time to which the request was
            restricted.
          type: string
          format: google-datetime
    DeleteEventsResponse:
      id: DeleteEventsResponse
      description: Response message for deleting error events.
      type: object
      properties: {}
    ReportedErrorEvent:
      id: ReportedErrorEvent
      description: An error event which is reported to the Error Reporting system.
      type: object
      properties:
        eventTime:
          description: >-
            Optional. Time when the event occurred. If not provided, the time
            when the event was received by the Error Reporting system is used.
            If provided, the time must not exceed the [logs retention
            period](https://cloud.google.com/logging/quotas#logs_retention_periods)
            in the past, or be more than 24 hours in the future. If an invalid
            time is provided, then an error is returned.
          type: string
          format: google-datetime
        serviceContext:
          description: Required. The service context in which this error has occurred.
          $ref: '#/components/schemas/ServiceContext'
        message:
          description: >-
            Required. The error message. If no `context.reportLocation` is
            provided, the message must contain a header (typically consisting of
            the exception type name and an error message) and an exception stack
            trace in one of the supported programming languages and formats.
            Supported languages are Java, Python, JavaScript, Ruby, C#, PHP, and
            Go. Supported stack trace formats are: * **Java**: Must be the
            return value of
            [`Throwable.printStackTrace()`](https://docs.oracle.com/javase/7/docs/api/java/lang/Throwable.html#printStackTrace%28%29).
            * **Python**: Must be the return value of
            [`traceback.format_exc()`](https://docs.python.org/2/library/traceback.html#traceback.format_exc).
            * **JavaScript**: Must be the value of
            [`error.stack`](https://github.com/v8/v8/wiki/Stack-Trace-API) as
            returned by V8. * **Ruby**: Must contain frames returned by
            [`Exception.backtrace`](https://ruby-doc.org/core-2.2.0/Exception.html#method-i-backtrace).
            * **C#**: Must be the return value of
            [`Exception.ToString()`](https://msdn.microsoft.com/en-us/library/system.exception.tostring.aspx).
            * **PHP**: Must be prefixed with `"PHP (Notice|Parse error|Fatal
            error|Warning): "` and contain the result of
            [`(string)$exception`](https://php.net/manual/en/exception.tostring.php).
            * **Go**: Must be the return value of
            [`debug.Stack()`](https://pkg.go.dev/runtime/debug#Stack).
          type: string
        context:
          description: Optional. A description of the context in which the error occurred.
          $ref: '#/components/schemas/ErrorContext'
    ReportErrorEventResponse:
      id: ReportErrorEventResponse
      description: >-
        Response for reporting an individual error event. Data may be added to
        this message in the future.
      type: object
      properties: {}
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    events:
      id: google.clouderrorreporting.events
      name: events
      title: Events
      methods:
        delete_events:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1events/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1events/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.errorEvents
        report:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1events:report/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/events/methods/list'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/events/methods/delete_events'
    groups:
      id: google.clouderrorreporting.groups
      name: groups
      title: Groups
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1groups~1{groupsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1groups~1{groupsId}/put
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/groups/methods/get'
        insert: []
        update: []
        replace:
          - $ref: '#/components/x-stackQL-resources/groups/methods/update'
        delete: []
    group_stats:
      id: google.clouderrorreporting.group_stats
      name: group_stats
      title: Group_stats
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1groupStats/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.errorGroupStats
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/group_stats/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
paths:
  /v1beta1/projects/{projectsId}/events:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    delete:
      description: Deletes all error events of a given project.
      operationId: clouderrorreporting.projects.deleteEvents
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEventsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
    get:
      description: Lists the specified events.
      operationId: clouderrorreporting.projects.events.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEventsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: groupId
          schema:
            type: string
        - in: query
          name: serviceFilter.service
          schema:
            type: string
        - in: query
          name: serviceFilter.version
          schema:
            type: string
        - in: query
          name: serviceFilter.resourceType
          schema:
            type: string
        - in: query
          name: timeRange.period
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1beta1/projects/{projectsId}/groups/{groupsId}:
    parameters: *ref_1
    get:
      description: Get the specified group.
      operationId: clouderrorreporting.projects.groups.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorGroup'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
    put:
      description: >-
        Replace the data for the specified group. Fails if the group does not
        exist.
      operationId: clouderrorreporting.projects.groups.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorGroup'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorGroup'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
  /v1beta1/projects/{projectsId}/groupStats:
    parameters: *ref_1
    get:
      description: Lists the specified groups.
      operationId: clouderrorreporting.projects.groupStats.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGroupStatsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: groupId
          schema:
            type: string
        - in: query
          name: serviceFilter.service
          schema:
            type: string
        - in: query
          name: serviceFilter.version
          schema:
            type: string
        - in: query
          name: serviceFilter.resourceType
          schema:
            type: string
        - in: query
          name: timeRange.period
          schema:
            type: string
        - in: query
          name: timedCountDuration
          schema:
            type: string
            format: google-duration
        - in: query
          name: alignment
          schema:
            type: string
        - in: query
          name: alignmentTime
          schema:
            type: string
            format: google-datetime
        - in: query
          name: order
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1beta1/projects/{projectsId}/events:report:
    parameters: *ref_1
    post:
      description: >-
        Report an individual error event and record the event to a log. This
        endpoint accepts **either** an OAuth token, **or** an [API
        key](https://support.google.com/cloud/answer/6158862) for
        authentication. To use an API key, append it to the URL as the value of
        a `key` parameter. For example: `POST
        https://clouderrorreporting.googleapis.com/v1beta1/{projectName}/events:report?key=123ABC456`
        **Note:** [Error Reporting] (https://cloud.google.com/error-reporting)
        is a service built on Cloud Logging and can analyze log entries when all
        of the following are true: * Customer-managed encryption keys (CMEK) are
        disabled on the log bucket. * The log bucket satisfies one of the
        following: * The log bucket is stored in the same project where the logs
        originated. * The logs were routed to a project, and then that project
        stored those logs in a log bucket that it owns.
      operationId: clouderrorreporting.projects.events.report
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportedErrorEvent'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportErrorEventResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/events:
    parameters: *ref_1
    delete:
      description: Deletes all error events of a given project.
      operationId: clouderrorreporting.projects.locations.deleteEvents
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEventsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
    get:
      description: Lists the specified events.
      operationId: clouderrorreporting.projects.locations.events.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEventsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: groupId
          schema:
            type: string
        - in: query
          name: serviceFilter.service
          schema:
            type: string
        - in: query
          name: serviceFilter.version
          schema:
            type: string
        - in: query
          name: serviceFilter.resourceType
          schema:
            type: string
        - in: query
          name: timeRange.period
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:
    parameters: *ref_1
    get:
      description: Get the specified group.
      operationId: clouderrorreporting.projects.locations.groups.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorGroup'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
    put:
      description: >-
        Replace the data for the specified group. Fails if the group does not
        exist.
      operationId: clouderrorreporting.projects.locations.groups.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorGroup'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorGroup'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
  /v1beta1/projects/{projectsId}/locations/{locationsId}/groupStats:
    parameters: *ref_1
    get:
      description: Lists the specified groups.
      operationId: clouderrorreporting.projects.locations.groupStats.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGroupStatsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: groupId
          schema:
            type: string
        - in: query
          name: serviceFilter.service
          schema:
            type: string
        - in: query
          name: serviceFilter.version
          schema:
            type: string
        - in: query
          name: serviceFilter.resourceType
          schema:
            type: string
        - in: query
          name: timeRange.period
          schema:
            type: string
        - in: query
          name: timedCountDuration
          schema:
            type: string
            format: google-duration
        - in: query
          name: alignment
          schema:
            type: string
        - in: query
          name: alignmentTime
          schema:
            type: string
            format: google-datetime
        - in: query
          name: order
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
