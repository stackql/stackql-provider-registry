openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Cloud Run Admin API
  description: 'Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.'
  version: v2
  x-discovery-doc-revision: '20230813'
  x-generated-date: '2023-08-17'
externalDocs:
  url: 'https://cloud.google.com/run/'
servers:
  - url: 'https://run.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    GoogleCloudRunV2Service:
      description: 'Service acts as a top-level container that manages a set of configurations and revision templates which implement a network service. Service exists to provide a singular abstraction which can be access controlled, reasoned about, and which encapsulates software lifecycle decisions such as rollout policy and team resource ownership.'
      type: object
      id: GoogleCloudRunV2Service
      properties:
        expireTime:
          format: google-datetime
          type: string
          readOnly: true
          description: 'Output only. For a deleted resource, the time after which it will be permamently deleted.'
        observedGeneration:
          format: int64
          description: 'Output only. The generation of this Service currently serving traffic. See comments in `reconciling` for additional information on reconciliation process in Cloud Run. Please note that unlike v1, this is an int64 value. As with most Google APIs, its JSON representation will be a `string` instead of an `integer`.'
          type: string
          readOnly: true
        satisfiesPzs:
          type: boolean
          description: Output only. Reserved for future use.
          readOnly: true
        description:
          type: string
          description: User-provided description of the Service. This field currently has a 512-character limit.
        creator:
          readOnly: true
          type: string
          description: Output only. Email address of the authenticated creator.
        etag:
          readOnly: true
          description: Output only. A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.
          type: string
        updateTime:
          type: string
          readOnly: true
          description: Output only. The last-modified time.
          format: google-datetime
        lastModifier:
          type: string
          readOnly: true
          description: Output only. Email address of the last authenticated modifier.
        client:
          type: string
          description: Arbitrary identifier for the API client.
        uid:
          readOnly: true
          type: string
          description: Output only. Server assigned unique identifier for the trigger. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.
        terminalCondition:
          description: 'Output only. The Condition of this Service, containing its readiness status, and detailed error information in case it did not reach a serving state. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.'
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudRunV2Condition'
        traffic:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudRunV2TrafficTarget'
          description: 'Specifies how to distribute traffic over a collection of Revisions belonging to the Service. If traffic is empty or not provided, defaults to 100% traffic to the latest `Ready` Revision.'
        trafficStatuses:
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleCloudRunV2TrafficTargetStatus'
          description: Output only. Detailed status information for corresponding traffic targets. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.
          type: array
        latestCreatedRevision:
          description: Output only. Name of the last created revision. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.
          readOnly: true
          type: string
        binaryAuthorization:
          description: Settings for the Binary Authorization feature.
          $ref: '#/components/schemas/GoogleCloudRunV2BinaryAuthorization'
        template:
          description: Required. The template used to create revisions for this Service.
          $ref: '#/components/schemas/GoogleCloudRunV2RevisionTemplate'
        uri:
          readOnly: true
          type: string
          description: Output only. The main URI in which this Service is serving traffic.
        labels:
          additionalProperties:
            type: string
          description: 'Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google''s billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels. Cloud Run API v2 does not support labels with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected. All system labels in v1 now have a corresponding field in v2 Service.'
          type: object
        trafficTagsCleanupThreshold:
          format: int64
          type: string
          description: Optional. Override the traffic tag threshold limit. Garbage collection will start cleaning up non-serving tagged traffic targets based on creation item. The default value is 2000.
        ingress:
          description: 'Provides the ingress settings for this Service. On output, returns the currently observed ingress settings, or INGRESS_TRAFFIC_UNSPECIFIED if no revision is active.'
          type: string
          enum:
            - INGRESS_TRAFFIC_UNSPECIFIED
            - INGRESS_TRAFFIC_ALL
            - INGRESS_TRAFFIC_INTERNAL_ONLY
            - INGRESS_TRAFFIC_INTERNAL_LOAD_BALANCER
          enumDescriptions:
            - Unspecified
            - All inbound traffic is allowed.
            - Only internal traffic is allowed.
            - Both internal and Google Cloud Load Balancer traffic is allowed.
        clientVersion:
          type: string
          description: Arbitrary version identifier for the API client.
        customAudiences:
          items:
            type: string
          type: array
          description: 'One or more custom audiences that you want this service to support. Specify each custom audience as the full URL in a string. The custom audiences are encoded in the token and used to authenticate requests. For more information, see https://cloud.google.com/run/docs/configuring/custom-audiences.'
        latestReadyRevision:
          description: Output only. Name of the latest revision that is serving traffic. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.
          readOnly: true
          type: string
        annotations:
          additionalProperties:
            type: string
          description: 'Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects. Cloud Run API v2 does not support annotations with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected in new resources. All system annotations in v1 now have a corresponding field in v2 Service. This field follows Kubernetes annotations'' namespacing, limits, and rules.'
          type: object
        launchStage:
          enumDescriptions:
            - Do not use this default value.
            - The feature is not yet implemented. Users can not use it.
            - Prelaunch features are hidden from users and are only visible internally.
            - 'Early Access features are limited to a closed group of testers. To use these features, you must sign up in advance and sign a Trusted Tester agreement (which includes confidentiality provisions). These features may be unstable, changed in backward-incompatible ways, and are not guaranteed to be released.'
            - 'Alpha is a limited availability test for releases before they are cleared for widespread use. By Alpha, all significant design issues are resolved and we are in the process of verifying functionality. Alpha customers need to apply for access, agree to applicable terms, and have their projects allowlisted. Alpha releases don''t have to be feature complete, no SLAs are provided, and there are no technical support obligations, but they will be far enough along that customers can actually use them in test environments or for limited-use tests -- just like they would in normal production cases.'
            - 'Beta is the point at which we are ready to open a release for any customer to use. There are no SLA or technical support obligations in a Beta release. Products will be complete from a feature perspective, but may have some open outstanding issues. Beta releases are suitable for limited production use cases.'
            - GA features are open to all developers and are considered stable and fully qualified for production use.
            - 'Deprecated features are scheduled to be shut down and removed. For more information, see the "Deprecation Policy" section of our [Terms of Service](https://cloud.google.com/terms/) and the [Google Cloud Platform Subject to the Deprecation Policy](https://cloud.google.com/terms/deprecation) documentation.'
          type: string
          description: 'The launch stage as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/terms/launch-stages). Cloud Run supports `ALPHA`, `BETA`, and `GA`. If no value is specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that stage. On read (or output), describes whether the resource uses preview features. For example, if ALPHA is provided as input, but only BETA and GA-level features are used, this field will be BETA on output.'
          enum:
            - LAUNCH_STAGE_UNSPECIFIED
            - UNIMPLEMENTED
            - PRELAUNCH
            - EARLY_ACCESS
            - ALPHA
            - BETA
            - GA
            - DEPRECATED
        deleteTime:
          type: string
          description: Output only. The deletion time.
          readOnly: true
          format: google-datetime
        reconciling:
          description: 'Output only. Returns true if the Service is currently being acted upon by the system to bring it into the desired state. When a new Service is created, or an existing one is updated, Cloud Run will asynchronously perform all necessary steps to bring the Service to the desired serving state. This process is called reconciliation. While reconciliation is in process, `observed_generation`, `latest_ready_revison`, `traffic_statuses`, and `uri` will have transient values that might mismatch the intended state: Once reconciliation is over (and this field is false), there are two possible outcomes: reconciliation succeeded and the serving state matches the Service, or there was an error, and reconciliation failed. This state can be found in `terminal_condition.state`. If reconciliation succeeded, the following fields will match: `traffic` and `traffic_statuses`, `observed_generation` and `generation`, `latest_ready_revision` and `latest_created_revision`. If reconciliation failed, `traffic_statuses`, `observed_generation`, and `latest_ready_revision` will have the state of the last serving revision, or empty for newly created Services. Additional information on the failure can be found in `terminal_condition` and `conditions`.'
          type: boolean
          readOnly: true
        conditions:
          description: Output only. The Conditions of all other associated sub-resources. They contain additional diagnostics information in case the Service does not reach its Serving state. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudRunV2Condition'
          readOnly: true
        name:
          type: string
          description: 'The fully qualified name of this Service. In CreateServiceRequest, this field is ignored, and instead composed from CreateServiceRequest.parent and CreateServiceRequest.service_id. Format: projects/{project}/locations/{location}/services/{service_id}'
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The creation time.
        generation:
          readOnly: true
          format: int64
          description: 'Output only. A number that monotonically increases every time the user modifies the desired state. Please note that unlike v1, this is an int64 value. As with most Google APIs, its JSON representation will be a `string` instead of an `integer`.'
          type: string
    GoogleCloudRunV2ListServicesResponse:
      type: object
      id: GoogleCloudRunV2ListServicesResponse
      properties:
        services:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudRunV2Service'
          description: The resulting list of Services.
        nextPageToken:
          type: string
          description: A token indicating there are more items than page_size. Use it in the next ListServices request to continue.
      description: Response message containing a list of Services.
    GoogleCloudRunV2HTTPGetAction:
      id: GoogleCloudRunV2HTTPGetAction
      type: object
      description: HTTPGetAction describes an action based on HTTP Get requests.
      properties:
        path:
          description: Path to access on the HTTP server. Defaults to '/'.
          type: string
        httpHeaders:
          type: array
          description: Custom headers to set in the request. HTTP allows repeated headers.
          items:
            $ref: '#/components/schemas/GoogleCloudRunV2HTTPHeader'
        port:
          type: integer
          format: int32
          description: 'Port number to access on the container. Must be in the range 1 to 65535. If not specified, defaults to the exposed port of the container, which is the value of container.ports[0].containerPort.'
    GoogleCloudRunV2TaskTemplate:
      properties:
        serviceAccount:
          description: 'Email address of the IAM service account associated with the Task of a Job. The service account represents the identity of the running task, and determines what permissions the task has. If not provided, the task will use the project''s default service account.'
          type: string
        executionEnvironment:
          enum:
            - EXECUTION_ENVIRONMENT_UNSPECIFIED
            - EXECUTION_ENVIRONMENT_GEN1
            - EXECUTION_ENVIRONMENT_GEN2
          description: The execution environment being used to host this Task.
          type: string
          enumDescriptions:
            - Unspecified
            - Uses the First Generation environment.
            - Uses Second Generation environment.
        containers:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudRunV2Container'
          description: Holds the single container that defines the unit of execution for this task.
        vpcAccess:
          description: 'VPC Access configuration to use for this Task. For more information, visit https://cloud.google.com/run/docs/configuring/connecting-vpc.'
          $ref: '#/components/schemas/GoogleCloudRunV2VpcAccess'
        maxRetries:
          format: int32
          type: integer
          description: 'Number of retries allowed per Task, before marking this Task failed. Defaults to 3.'
        encryptionKey:
          description: 'A reference to a customer managed encryption key (CMEK) to use to encrypt this container image. For more information, go to https://cloud.google.com/run/docs/securing/using-cmek'
          type: string
        volumes:
          description: A list of Volumes to make available to containers.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudRunV2Volume'
        timeout:
          format: google-duration
          type: string
          description: 'Max allowed time duration the Task may be active before the system will actively try to mark it failed and kill associated containers. This applies per attempt of a task, meaning each retry can run for the full timeout. Defaults to 600 seconds.'
      id: GoogleCloudRunV2TaskTemplate
      description: TaskTemplate describes the data a task should have when created from a template.
      type: object
    GoogleCloudRunV2VersionToPath:
      id: GoogleCloudRunV2VersionToPath
      description: 'VersionToPath maps a specific version of a secret to a relative file to mount to, relative to VolumeMount''s mount_path.'
      properties:
        path:
          description: Required. The relative path of the secret in the container.
          type: string
        version:
          type: string
          description: 'The Cloud Secret Manager secret version. Can be ''latest'' for the latest value, or an integer or a secret alias for a specific version.'
        mode:
          description: 'Integer octal mode bits to use on this file, must be a value between 01 and 0777 (octal). If 0 or not set, the Volume''s default mode will be used. Notes * Internally, a umask of 0222 will be applied to any non-zero value. * This is an integer representation of the mode bits. So, the octal integer value should look exactly as the chmod numeric notation with a leading zero. Some examples: for chmod 777 (a=rwx), set to 0777 (octal) or 511 (base-10). For chmod 640 (u=rw,g=r), set to 0640 (octal) or 416 (base-10). For chmod 755 (u=rwx,g=rx,o=rx), set to 0755 (octal) or 493 (base-10). * This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
          format: int32
          type: integer
      type: object
    GoogleCloudRunV2TCPSocketAction:
      id: GoogleCloudRunV2TCPSocketAction
      type: object
      properties:
        port:
          format: int32
          description: 'Port number to access on the container. Must be in the range 1 to 65535. If not specified, defaults to the exposed port of the container, which is the value of container.ports[0].containerPort.'
          type: integer
      description: TCPSocketAction describes an action based on opening a socket
    GoogleCloudRunV2ListTasksResponse:
      type: object
      properties:
        nextPageToken:
          description: A token indicating there are more items than page_size. Use it in the next ListTasks request to continue.
          type: string
        tasks:
          items:
            $ref: '#/components/schemas/GoogleCloudRunV2Task'
          type: array
          description: The resulting list of Tasks.
      description: Response message containing a list of Tasks.
      id: GoogleCloudRunV2ListTasksResponse
    GoogleCloudRunV2ListJobsResponse:
      properties:
        nextPageToken:
          type: string
          description: A token indicating there are more items than page_size. Use it in the next ListJobs request to continue.
        jobs:
          type: array
          description: The resulting list of Jobs.
          items:
            $ref: '#/components/schemas/GoogleCloudRunV2Job'
      id: GoogleCloudRunV2ListJobsResponse
      type: object
      description: Response message containing a list of Jobs.
    GoogleCloudRunV2HTTPHeader:
      type: object
      properties:
        value:
          description: The header field value
          type: string
        name:
          type: string
          description: Required. The header field name
      id: GoogleCloudRunV2HTTPHeader
      description: HTTPHeader describes a custom header to be used in HTTP probes
    GoogleCloudRunV2ExecutionReference:
      id: GoogleCloudRunV2ExecutionReference
      type: object
      description: Reference to an Execution. Use /Executions.GetExecution with the given name to get full execution including the latest status.
      properties:
        completionTime:
          type: string
          format: google-datetime
          description: Creation timestamp of the execution.
        name:
          description: Name of the execution.
          type: string
        createTime:
          type: string
          format: google-datetime
          description: Creation timestamp of the execution.
    GoogleCloudRunV2GRPCAction:
      type: object
      description: GRPCAction describes an action involving a GRPC port.
      properties:
        port:
          description: 'Port number of the gRPC service. Number must be in the range 1 to 65535. If not specified, defaults to the exposed port of the container, which is the value of container.ports[0].containerPort.'
          type: integer
          format: int32
        service:
          description: 'Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). If this is not specified, the default behavior is defined by gRPC.'
          type: string
      id: GoogleCloudRunV2GRPCAction
    GoogleCloudRunV2SecretVolumeSource:
      id: GoogleCloudRunV2SecretVolumeSource
      properties:
        secret:
          type: string
          description: 'Required. The name of the secret in Cloud Secret Manager. Format: {secret} if the secret is in the same project. projects/{project}/secrets/{secret} if the secret is in a different project.'
        defaultMode:
          format: int32
          description: 'Integer representation of mode bits to use on created files by default. Must be a value between 0000 and 0777 (octal), defaulting to 0444. Directories within the path are not affected by this setting. Notes * Internally, a umask of 0222 will be applied to any non-zero value. * This is an integer representation of the mode bits. So, the octal integer value should look exactly as the chmod numeric notation with a leading zero. Some examples: for chmod 777 (a=rwx), set to 0777 (octal) or 511 (base-10). For chmod 640 (u=rw,g=r), set to 0640 (octal) or 416 (base-10). For chmod 755 (u=rwx,g=rx,o=rx), set to 0755 (octal) or 493 (base-10). * This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. This might be in conflict with other options that affect the file mode, like fsGroup, and as a result, other mode bits could be set.'
          type: integer
        items:
          description: 'If unspecified, the volume will expose a file whose name is the secret, relative to VolumeMount.mount_path. If specified, the key will be used as the version to fetch from Cloud Secret Manager and the path will be the name of the file exposed in the volume. When items are defined, they must specify a path and a version.'
          items:
            $ref: '#/components/schemas/GoogleCloudRunV2VersionToPath'
          type: array
      description: 'The secret''s value will be presented as the content of a file whose name is defined in the item path. If no items are defined, the name of the file is the secret.'
      type: object
    GoogleTypeExpr:
      description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != ''private'' && document.type != ''internal''" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "''New message received at '' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.'
      type: object
      properties:
        location:
          type: string
          description: 'Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.'
        description:
          type: string
          description: 'Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.'
        title:
          description: 'Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.'
          type: string
        expression:
          description: Textual representation of an expression in Common Expression Language syntax.
          type: string
      id: GoogleTypeExpr
    GoogleCloudRunV2TrafficTargetStatus:
      description: Represents the observed state of a single `TrafficTarget` entry.
      type: object
      properties:
        type:
          type: string
          enum:
            - TRAFFIC_TARGET_ALLOCATION_TYPE_UNSPECIFIED
            - TRAFFIC_TARGET_ALLOCATION_TYPE_LATEST
            - TRAFFIC_TARGET_ALLOCATION_TYPE_REVISION
          description: The allocation type for this traffic target.
          enumDescriptions:
            - Unspecified instance allocation type.
            - Allocates instances to the Service's latest ready Revision.
            - Allocates instances to a Revision by name.
        tag:
          description: Indicates the string used in the URI to exclusively reference this target.
          type: string
        uri:
          type: string
          description: Displays the target URI.
        percent:
          description: Specifies percent of the traffic to this Revision.
          format: int32
          type: integer
        revision:
          description: Revision to which this traffic is sent.
          type: string
      id: GoogleCloudRunV2TrafficTargetStatus
    GoogleProtobufEmpty:
      properties: {}
      type: object
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      id: GoogleProtobufEmpty
    GoogleCloudRunV2Volume:
      description: Volume represents a named volume in a container.
      id: GoogleCloudRunV2Volume
      properties:
        name:
          description: Required. Volume's name.
          type: string
        emptyDir:
          description: Ephemeral storage used as a shared volume.
          $ref: '#/components/schemas/GoogleCloudRunV2EmptyDirVolumeSource'
        cloudSqlInstance:
          description: 'For Cloud SQL volumes, contains the specific instances that should be mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run.'
          $ref: '#/components/schemas/GoogleCloudRunV2CloudSqlInstance'
        secret:
          description: Secret represents a secret that should populate this volume.
          $ref: '#/components/schemas/GoogleCloudRunV2SecretVolumeSource'
      type: object
    GoogleCloudRunV2RevisionScaling:
      properties:
        maxInstanceCount:
          format: int32
          description: Maximum number of serving instances that this resource should have.
          type: integer
        minInstanceCount:
          type: integer
          description: Minimum number of serving instances that this resource should have.
          format: int32
      type: object
      description: Settings for revision-level scaling settings.
      id: GoogleCloudRunV2RevisionScaling
    GoogleCloudRunV2VpcAccess:
      type: object
      properties:
        connector:
          type: string
          description: 'VPC Access connector name. Format: projects/{project}/locations/{location}/connectors/{connector}, where {project} can be project id or number.'
        egress:
          enum:
            - VPC_EGRESS_UNSPECIFIED
            - ALL_TRAFFIC
            - PRIVATE_RANGES_ONLY
          type: string
          enumDescriptions:
            - Unspecified
            - All outbound traffic is routed through the VPC connector.
            - Only private IP ranges are routed through the VPC connector.
          description: 'Traffic VPC egress settings. If not provided, it defaults to PRIVATE_RANGES_ONLY.'
      id: GoogleCloudRunV2VpcAccess
      description: 'VPC Access settings. For more information on creating a VPC Connector, visit https://cloud.google.com/vpc/docs/configure-serverless-vpc-access For information on how to configure Cloud Run with an existing VPC Connector, visit https://cloud.google.com/run/docs/configuring/connecting-vpc'
    GoogleCloudRunV2TrafficTarget:
      id: GoogleCloudRunV2TrafficTarget
      type: object
      description: 'Holds a single traffic routing entry for the Service. Allocations can be done to a specific Revision name, or pointing to the latest Ready Revision.'
      properties:
        type:
          description: The allocation type for this traffic target.
          enumDescriptions:
            - Unspecified instance allocation type.
            - Allocates instances to the Service's latest ready Revision.
            - Allocates instances to a Revision by name.
          type: string
          enum:
            - TRAFFIC_TARGET_ALLOCATION_TYPE_UNSPECIFIED
            - TRAFFIC_TARGET_ALLOCATION_TYPE_LATEST
            - TRAFFIC_TARGET_ALLOCATION_TYPE_REVISION
        tag:
          description: Indicates a string to be part of the URI to exclusively reference this target.
          type: string
        percent:
          type: integer
          format: int32
          description: Specifies percent of the traffic to this Revision. This defaults to zero if unspecified.
        revision:
          description: 'Revision to which to send this portion of traffic, if traffic allocation is by revision.'
          type: string
    GoogleCloudRunV2VolumeMount:
      description: VolumeMount describes a mounting of a Volume within a container.
      type: object
      id: GoogleCloudRunV2VolumeMount
      properties:
        name:
          description: Required. This must match the Name of a Volume.
          type: string
        mountPath:
          description: 'Required. Path within the container at which the volume should be mounted. Must not contain '':''. For Cloud SQL volumes, it can be left empty, or must otherwise be `/cloudsql`. All instances defined in the Volume will be available as `/cloudsql/[instance]`. For more information on Cloud SQL volumes, visit https://cloud.google.com/sql/docs/mysql/connect-run'
          type: string
    GoogleCloudRunV2TaskAttemptResult:
      properties:
        exitCode:
          readOnly: true
          format: int32
          description: Output only. The exit code of this attempt. This may be unset if the container was unable to exit cleanly with a code due to some other failure. See status field for possible failure details.
          type: integer
        status:
          readOnly: true
          description: 'Output only. The status of this attempt. If the status code is OK, then the attempt succeeded.'
          $ref: '#/components/schemas/GoogleRpcStatus'
      description: Result of a task attempt.
      type: object
      id: GoogleCloudRunV2TaskAttemptResult
    GoogleIamV1TestIamPermissionsRequest:
      type: object
      properties:
        permissions:
          items:
            type: string
          description: 'The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).'
          type: array
      id: GoogleIamV1TestIamPermissionsRequest
      description: Request message for `TestIamPermissions` method.
    GoogleCloudRunV2RevisionTemplate:
      properties:
        sessionAffinity:
          description: Enable session affinity.
          type: boolean
        revision:
          description: 'The unique name for the revision. If this field is omitted, it will be automatically generated based on the Service name.'
          type: string
        encryptionKey:
          type: string
          description: 'A reference to a customer managed encryption key (CMEK) to use to encrypt this container image. For more information, go to https://cloud.google.com/run/docs/securing/using-cmek'
        vpcAccess:
          $ref: '#/components/schemas/GoogleCloudRunV2VpcAccess'
          description: 'VPC Access configuration to use for this Revision. For more information, visit https://cloud.google.com/run/docs/configuring/connecting-vpc.'
        volumes:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudRunV2Volume'
          description: A list of Volumes to make available to containers.
        serviceAccount:
          description: 'Email address of the IAM service account associated with the revision of the service. The service account represents the identity of the running revision, and determines what permissions the revision has. If not provided, the revision will use the project''s default service account.'
          type: string
        annotations:
          description: 'Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects. Cloud Run API v2 does not support annotations with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected. All system annotations in v1 now have a corresponding field in v2 RevisionTemplate. This field follows Kubernetes annotations'' namespacing, limits, and rules.'
          type: object
          additionalProperties:
            type: string
        scaling:
          description: Scaling settings for this Revision.
          $ref: '#/components/schemas/GoogleCloudRunV2RevisionScaling'
        executionEnvironment:
          enum:
            - EXECUTION_ENVIRONMENT_UNSPECIFIED
            - EXECUTION_ENVIRONMENT_GEN1
            - EXECUTION_ENVIRONMENT_GEN2
          description: The sandbox environment to host this Revision.
          enumDescriptions:
            - Unspecified
            - Uses the First Generation environment.
            - Uses Second Generation environment.
          type: string
        containers:
          type: array
          description: Holds the single container that defines the unit of execution for this Revision.
          items:
            $ref: '#/components/schemas/GoogleCloudRunV2Container'
        timeout:
          format: google-duration
          description: Max allowed time for an instance to respond to a request.
          type: string
        maxInstanceRequestConcurrency:
          description: Sets the maximum number of requests that each serving instance can receive.
          type: integer
          format: int32
        labels:
          description: 'Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google''s billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels. Cloud Run API v2 does not support labels with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected. All system labels in v1 now have a corresponding field in v2 RevisionTemplate.'
          additionalProperties:
            type: string
          type: object
      type: object
      id: GoogleCloudRunV2RevisionTemplate
      description: RevisionTemplate describes the data a revision should have when created from a template.
    GoogleCloudRunV2ListRevisionsResponse:
      id: GoogleCloudRunV2ListRevisionsResponse
      description: Response message containing a list of Revisions.
      properties:
        nextPageToken:
          description: A token indicating there are more items than page_size. Use it in the next ListRevisions request to continue.
          type: string
        revisions:
          description: The resulting list of Revisions.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudRunV2Revision'
      type: object
    GoogleLongrunningWaitOperationRequest:
      properties:
        timeout:
          type: string
          format: google-duration
          description: 'The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.'
      id: GoogleLongrunningWaitOperationRequest
      description: The request message for Operations.WaitOperation.
      type: object
    GoogleCloudRunV2ContainerPort:
      properties:
        containerPort:
          description: 'Port number the container listens on. This must be a valid TCP port number, 0 < container_port < 65536.'
          type: integer
          format: int32
        name:
          description: 'If specified, used to specify which protocol to use. Allowed values are "http1" and "h2c".'
          type: string
      description: ContainerPort represents a network port in a single container.
      type: object
      id: GoogleCloudRunV2ContainerPort
    GoogleCloudRunV2EnvVarSource:
      description: EnvVarSource represents a source for the value of an EnvVar.
      type: object
      id: GoogleCloudRunV2EnvVarSource
      properties:
        secretKeyRef:
          description: Selects a secret and a specific version from Cloud Secret Manager.
          $ref: '#/components/schemas/GoogleCloudRunV2SecretKeySelector'
    GoogleIamV1Policy:
      type: object
      description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp(''2020-10-01T00:00:00.000Z'')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).'
      properties:
        bindings:
          type: array
          description: 'Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.'
          items:
            $ref: '#/components/schemas/GoogleIamV1Binding'
        etag:
          description: '`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.'
          format: byte
          type: string
        auditConfigs:
          items:
            $ref: '#/components/schemas/GoogleIamV1AuditConfig'
          type: array
          description: Specifies cloud audit logging configuration for this policy.
        version:
          type: integer
          description: 'Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
          format: int32
      id: GoogleIamV1Policy
    GoogleIamV1SetIamPolicyRequest:
      properties:
        policy:
          description: 'REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.'
          $ref: '#/components/schemas/GoogleIamV1Policy'
        updateMask:
          type: string
          description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`'
          format: google-fieldmask
      description: Request message for `SetIamPolicy` method.
      type: object
      id: GoogleIamV1SetIamPolicyRequest
    GoogleCloudRunV2Condition:
      type: object
      description: Defines a status condition for a resource.
      id: GoogleCloudRunV2Condition
      properties:
        severity:
          type: string
          enum:
            - SEVERITY_UNSPECIFIED
            - ERROR
            - WARNING
            - INFO
          description: 'How to interpret failures of this condition, one of Error, Warning, Info'
          enumDescriptions:
            - Unspecified severity
            - Error severity.
            - Warning severity.
            - Info severity.
        type:
          description: 'type is used to communicate the status of the reconciliation process. See also: https://github.com/knative/serving/blob/main/docs/spec/errors.md#error-conditions-and-reporting Types common to all resources include: * "Ready": True when the Resource is ready.'
          type: string
        reason:
          description: A common (service-level) reason for this condition.
          enum:
            - COMMON_REASON_UNDEFINED
            - UNKNOWN
            - REVISION_FAILED
            - PROGRESS_DEADLINE_EXCEEDED
            - CONTAINER_MISSING
            - CONTAINER_PERMISSION_DENIED
            - CONTAINER_IMAGE_UNAUTHORIZED
            - CONTAINER_IMAGE_AUTHORIZATION_CHECK_FAILED
            - ENCRYPTION_KEY_PERMISSION_DENIED
            - ENCRYPTION_KEY_CHECK_FAILED
            - SECRETS_ACCESS_CHECK_FAILED
            - WAITING_FOR_OPERATION
            - IMMEDIATE_RETRY
            - POSTPONED_RETRY
            - INTERNAL
          enumDescriptions:
            - Default value.
            - Reason unknown. Further details will be in message.
            - Revision creation process failed.
            - Timed out waiting for completion.
            - The container image path is incorrect.
            - Insufficient permissions on the container image.
            - Container image is not authorized by policy.
            - Container image policy authorization check failed.
            - Insufficient permissions on encryption key.
            - Permission check on encryption key failed.
            - At least one Access check on secrets failed.
            - Waiting for operation to complete.
            - System will retry immediately.
            - System will retry later; current attempt failed.
            - An internal error occurred. Further information may be in the message.
          type: string
        executionReason:
          enum:
            - EXECUTION_REASON_UNDEFINED
            - JOB_STATUS_SERVICE_POLLING_ERROR
            - NON_ZERO_EXIT_CODE
            - CANCELLED
            - CANCELLING
            - DELETED
          type: string
          enumDescriptions:
            - Default value.
            - Internal system error getting execution status. System will retry.
            - A task reached its retry limit and the last attempt failed due to the user container exiting with a non-zero exit code.
            - The execution was cancelled by users.
            - The execution is in the process of being cancelled.
            - The execution was deleted.
          description: A reason for the execution condition.
        message:
          type: string
          description: Human readable message indicating details about the current status.
        lastTransitionTime:
          type: string
          description: Last time the condition transitioned from one status to another.
          format: google-datetime
        state:
          enum:
            - STATE_UNSPECIFIED
            - CONDITION_PENDING
            - CONDITION_RECONCILING
            - CONDITION_FAILED
            - CONDITION_SUCCEEDED
          description: State of the condition.
          type: string
          enumDescriptions:
            - The default value. This value is used if the state is omitted.
            - 'Transient state: Reconciliation has not started yet.'
            - 'Transient state: reconciliation is still in progress.'
            - 'Terminal state: Reconciliation did not succeed.'
            - 'Terminal state: Reconciliation completed successfully.'
        revisionReason:
          type: string
          enumDescriptions:
            - Default value.
            - Revision in Pending state.
            - Revision is in Reserve state.
            - Revision is Retired.
            - Revision is being retired.
            - Revision is being recreated.
            - There was a health check error.
            - Health check failed due to user error from customized path of the container. System will retry.
            - 'A revision with min_instance_count > 0 was created and is reserved, but it was not configured to serve traffic, so it''s not live. This can also happen momentarily during traffic migration.'
            - The maximum allowed number of active revisions has been reached.
            - 'There was no deployment defined. This value is no longer used, but Services created in older versions of the API might contain this value.'
            - A revision's container has no port specified since the revision is of a manually scaled service with 0 instance count
            - A revision with min_instance_count > 0 was created and is waiting for enough instances to begin a traffic migration.
          enum:
            - REVISION_REASON_UNDEFINED
            - PENDING
            - RESERVE
            - RETIRED
            - RETIRING
            - RECREATING
            - HEALTH_CHECK_CONTAINER_ERROR
            - CUSTOMIZED_PATH_RESPONSE_PENDING
            - MIN_INSTANCES_NOT_PROVISIONED
            - ACTIVE_REVISION_LIMIT_REACHED
            - NO_DEPLOYMENT
            - HEALTH_CHECK_SKIPPED
            - MIN_INSTANCES_WARMING
          description: A reason for the revision condition.
    GoogleIamV1AuditConfig:
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.'
      properties:
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          type: array
          items:
            $ref: '#/components/schemas/GoogleIamV1AuditLogConfig'
        service:
          description: 'Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.'
          type: string
      type: object
      id: GoogleIamV1AuditConfig
    GoogleIamV1AuditLogConfig:
      type: object
      properties:
        exemptedMembers:
          type: array
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
          items:
            type: string
        logType:
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          description: The log type that this config enables.
          type: string
      description: 'Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables ''DATA_READ'' and ''DATA_WRITE'' logging, while exempting jose@example.com from DATA_READ logging.'
      id: GoogleIamV1AuditLogConfig
    GoogleCloudRunV2Container:
      properties:
        dependsOn:
          type: array
          description: Names of the containers that must start before this container.
          items:
            type: string
        workingDir:
          type: string
          description: 'Container''s working directory. If not specified, the container runtime''s default will be used, which might be configured in the container image.'
        ports:
          items:
            $ref: '#/components/schemas/GoogleCloudRunV2ContainerPort'
          type: array
          description: 'List of ports to expose from the container. Only a single port can be specified. The specified ports must be listening on all interfaces (0.0.0.0) within the container to be accessible. If omitted, a port number will be chosen and passed to the container through the PORT environment variable for the container to listen on.'
        args:
          items:
            type: string
          description: Arguments to the entrypoint. The docker image's CMD is used if this is not provided.
          type: array
        env:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudRunV2EnvVar'
          description: List of environment variables to set in the container.
        command:
          description: Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided.
          type: array
          items:
            type: string
        image:
          description: 'Required. Name of the container image in Dockerhub, Google Artifact Registry, or Google Container Registry. If the host is not provided, Dockerhub is assumed.'
          type: string
        volumeMounts:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudRunV2VolumeMount'
          description: Volume to mount into the container's filesystem.
        startupProbe:
          $ref: '#/components/schemas/GoogleCloudRunV2Probe'
          description: 'Startup probe of application within the container. All other probes are disabled if a startup probe is provided, until it succeeds. Container will not be added to service endpoints if the probe fails.'
        name:
          type: string
          description: Name of the container specified as a DNS_LABEL (RFC 1123).
        resources:
          $ref: '#/components/schemas/GoogleCloudRunV2ResourceRequirements'
          description: Compute Resource requirements by this container.
        livenessProbe:
          $ref: '#/components/schemas/GoogleCloudRunV2Probe'
          description: Periodic probe of container liveness. Container will be restarted if the probe fails.
      type: object
      description: 'A single application container. This specifies both the container to run, the command to run in the container and the arguments to supply to it. Note that additional arguments can be supplied by the system to the container at runtime.'
      id: GoogleCloudRunV2Container
    GoogleCloudRunV2Task:
      type: object
      description: Task represents a single run of a container to completion.
      id: GoogleCloudRunV2Task
      properties:
        timeout:
          format: google-duration
          type: string
          description: 'Max allowed time duration the Task may be active before the system will actively try to mark it failed and kill associated containers. This applies per attempt of a task, meaning each retry can run for the full timeout.'
        satisfiesPzs:
          type: boolean
          description: Output only. Reserved for future use.
          readOnly: true
        generation:
          format: int64
          type: string
          description: Output only. A number that monotonically increases every time the user modifies the desired state.
          readOnly: true
        labels:
          additionalProperties:
            type: string
          readOnly: true
          description: 'Output only. Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google''s billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels'
          type: object
        deleteTime:
          type: string
          description: 'Output only. For a deleted resource, the deletion time. It is only populated as a response to a Delete request.'
          readOnly: true
          format: google-datetime
        observedGeneration:
          description: Output only. The generation of this Task. See comments in `Job.reconciling` for additional information on reconciliation process in Cloud Run.
          type: string
          format: int64
          readOnly: true
        volumes:
          type: array
          description: A list of Volumes to make available to containers.
          items:
            $ref: '#/components/schemas/GoogleCloudRunV2Volume'
        serviceAccount:
          type: string
          description: 'Email address of the IAM service account associated with the Task of a Job. The service account represents the identity of the running task, and determines what permissions the task has. If not provided, the task will use the project''s default service account.'
        conditions:
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleCloudRunV2Condition'
          description: 'Output only. The Condition of this Task, containing its readiness status, and detailed error information in case it did not reach the desired state.'
          type: array
        completionTime:
          type: string
          description: Output only. Represents time when the Task was completed. It is not guaranteed to be set in happens-before order across separate operations.
          readOnly: true
          format: google-datetime
        uid:
          type: string
          readOnly: true
          description: Output only. Server assigned unique identifier for the Task. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.
        maxRetries:
          format: int32
          description: 'Number of retries allowed per Task, before marking this Task failed.'
          type: integer
        retried:
          description: Output only. The number of times this Task was retried. Tasks are retried when they fail up to the maxRetries limit.
          type: integer
          readOnly: true
          format: int32
        containers:
          items:
            $ref: '#/components/schemas/GoogleCloudRunV2Container'
          type: array
          description: Holds the single container that defines the unit of execution for this task.
        name:
          readOnly: true
          type: string
          description: Output only. The unique name of this Task.
        startTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. Represents time when the task started to run. It is not guaranteed to be set in happens-before order across separate operations.
        encryptionKey:
          description: 'Output only. A reference to a customer managed encryption key (CMEK) to use to encrypt this container image. For more information, go to https://cloud.google.com/run/docs/securing/using-cmek'
          readOnly: true
          type: string
        reconciling:
          readOnly: true
          type: boolean
          description: Output only. Indicates whether the resource's reconciliation is still in progress. See comments in `Job.reconciling` for additional information on reconciliation process in Cloud Run.
        updateTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The last-modified time.
        execution:
          type: string
          description: Output only. The name of the parent Execution.
          readOnly: true
        createTime:
          description: Output only. Represents time when the task was created by the system. It is not guaranteed to be set in happens-before order across separate operations.
          type: string
          readOnly: true
          format: google-datetime
        expireTime:
          description: 'Output only. For a deleted resource, the time after which it will be permamently deleted. It is only populated as a response to a Delete request.'
          type: string
          readOnly: true
          format: google-datetime
        job:
          type: string
          readOnly: true
          description: Output only. The name of the parent Job.
        lastAttemptResult:
          readOnly: true
          description: Output only. Result of the last attempt of this Task.
          $ref: '#/components/schemas/GoogleCloudRunV2TaskAttemptResult'
        vpcAccess:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudRunV2VpcAccess'
          description: 'Output only. VPC Access configuration to use for this Task. For more information, visit https://cloud.google.com/run/docs/configuring/connecting-vpc.'
        index:
          description: 'Output only. Index of the Task, unique per execution, and beginning at 0.'
          format: int32
          readOnly: true
          type: integer
        logUri:
          readOnly: true
          description: Output only. URI where logs for this execution can be found in Cloud Console.
          type: string
        annotations:
          description: Output only. Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.
          additionalProperties:
            type: string
          readOnly: true
          type: object
        etag:
          description: Output only. A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.
          readOnly: true
          type: string
        executionEnvironment:
          description: The execution environment being used to host this Task.
          type: string
          enum:
            - EXECUTION_ENVIRONMENT_UNSPECIFIED
            - EXECUTION_ENVIRONMENT_GEN1
            - EXECUTION_ENVIRONMENT_GEN2
          enumDescriptions:
            - Unspecified
            - Uses the First Generation environment.
            - Uses Second Generation environment.
    GoogleCloudRunV2Revision:
      type: object
      description: A Revision is an immutable snapshot of code and configuration. A Revision references a container image. Revisions are only created by updates to its parent Service.
      properties:
        maxInstanceRequestConcurrency:
          type: integer
          format: int32
          description: Sets the maximum number of requests that each serving instance can receive.
        annotations:
          type: object
          readOnly: true
          additionalProperties:
            type: string
          description: Output only. Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.
        encryptionKeyShutdownDuration:
          format: google-duration
          description: 'If encryption_key_revocation_action is SHUTDOWN, the duration before shutting down all instances. The minimum increment is 1 hour.'
          type: string
        satisfiesPzs:
          type: boolean
          description: Output only. Reserved for future use.
          readOnly: true
        serviceAccount:
          type: string
          description: 'Email address of the IAM service account associated with the revision of the service. The service account represents the identity of the running revision, and determines what permissions the revision has.'
        encryptionKeyRevocationAction:
          enumDescriptions:
            - Unspecified
            - Prevents the creation of new instances.
            - 'Shuts down existing instances, and prevents creation of new ones.'
          description: The action to take if the encryption key is revoked.
          enum:
            - ENCRYPTION_KEY_REVOCATION_ACTION_UNSPECIFIED
            - PREVENT_NEW
            - SHUTDOWN
          type: string
        deleteTime:
          type: string
          format: google-datetime
          description: 'Output only. For a deleted resource, the deletion time. It is only populated as a response to a Delete request.'
          readOnly: true
        generation:
          description: Output only. A number that monotonically increases every time the user modifies the desired state.
          type: string
          readOnly: true
          format: int64
        observedGeneration:
          readOnly: true
          type: string
          format: int64
          description: Output only. The generation of this Revision currently serving traffic. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.
        uid:
          description: Output only. Server assigned unique identifier for the Revision. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.
          readOnly: true
          type: string
        timeout:
          type: string
          format: google-duration
          description: Max allowed time for an instance to respond to a request.
        etag:
          readOnly: true
          description: Output only. A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.
          type: string
        scaling:
          $ref: '#/components/schemas/GoogleCloudRunV2RevisionScaling'
          description: Scaling settings for this revision.
        labels:
          type: object
          description: 'Output only. Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google''s billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels.'
          readOnly: true
          additionalProperties:
            type: string
        sessionAffinity:
          type: boolean
          description: Enable session affinity.
        encryptionKey:
          description: 'A reference to a customer managed encryption key (CMEK) to use to encrypt this container image. For more information, go to https://cloud.google.com/run/docs/securing/using-cmek'
          type: string
        name:
          readOnly: true
          description: Output only. The unique name of this Revision.
          type: string
        volumes:
          items:
            $ref: '#/components/schemas/GoogleCloudRunV2Volume'
          type: array
          description: A list of Volumes to make available to containers.
        vpcAccess:
          description: 'VPC Access configuration for this Revision. For more information, visit https://cloud.google.com/run/docs/configuring/connecting-vpc.'
          $ref: '#/components/schemas/GoogleCloudRunV2VpcAccess'
        conditions:
          description: 'Output only. The Condition of this Revision, containing its readiness status, and detailed error information in case it did not reach a serving state.'
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudRunV2Condition'
          readOnly: true
        reconciling:
          type: boolean
          readOnly: true
          description: Output only. Indicates whether the resource's reconciliation is still in progress. See comments in `Service.reconciling` for additional information on reconciliation process in Cloud Run.
        updateTime:
          format: google-datetime
          type: string
          description: Output only. The last-modified time.
          readOnly: true
        expireTime:
          format: google-datetime
          type: string
          description: 'Output only. For a deleted resource, the time after which it will be permamently deleted. It is only populated as a response to a Delete request.'
          readOnly: true
        logUri:
          type: string
          description: Output only. The Google Console URI to obtain logs for the Revision.
          readOnly: true
        containers:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudRunV2Container'
          description: Holds the single container that defines the unit of execution for this Revision.
        launchStage:
          description: 'The least stable launch stage needed to create this resource, as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/terms/launch-stages). Cloud Run supports `ALPHA`, `BETA`, and `GA`. Note that this value might not be what was used as input. For example, if ALPHA was provided as input in the parent resource, but only BETA and GA-level features are were, this field will be BETA.'
          enumDescriptions:
            - Do not use this default value.
            - The feature is not yet implemented. Users can not use it.
            - Prelaunch features are hidden from users and are only visible internally.
            - 'Early Access features are limited to a closed group of testers. To use these features, you must sign up in advance and sign a Trusted Tester agreement (which includes confidentiality provisions). These features may be unstable, changed in backward-incompatible ways, and are not guaranteed to be released.'
            - 'Alpha is a limited availability test for releases before they are cleared for widespread use. By Alpha, all significant design issues are resolved and we are in the process of verifying functionality. Alpha customers need to apply for access, agree to applicable terms, and have their projects allowlisted. Alpha releases don''t have to be feature complete, no SLAs are provided, and there are no technical support obligations, but they will be far enough along that customers can actually use them in test environments or for limited-use tests -- just like they would in normal production cases.'
            - 'Beta is the point at which we are ready to open a release for any customer to use. There are no SLA or technical support obligations in a Beta release. Products will be complete from a feature perspective, but may have some open outstanding issues. Beta releases are suitable for limited production use cases.'
            - GA features are open to all developers and are considered stable and fully qualified for production use.
            - 'Deprecated features are scheduled to be shut down and removed. For more information, see the "Deprecation Policy" section of our [Terms of Service](https://cloud.google.com/terms/) and the [Google Cloud Platform Subject to the Deprecation Policy](https://cloud.google.com/terms/deprecation) documentation.'
          enum:
            - LAUNCH_STAGE_UNSPECIFIED
            - UNIMPLEMENTED
            - PRELAUNCH
            - EARLY_ACCESS
            - ALPHA
            - BETA
            - GA
            - DEPRECATED
          type: string
        service:
          readOnly: true
          description: Output only. The name of the parent service.
          type: string
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The creation time.
        executionEnvironment:
          enum:
            - EXECUTION_ENVIRONMENT_UNSPECIFIED
            - EXECUTION_ENVIRONMENT_GEN1
            - EXECUTION_ENVIRONMENT_GEN2
          description: The execution environment being used to host this Revision.
          enumDescriptions:
            - Unspecified
            - Uses the First Generation environment.
            - Uses Second Generation environment.
          type: string
      id: GoogleCloudRunV2Revision
    GoogleCloudRunV2ListExecutionsResponse:
      description: Response message containing a list of Executions.
      id: GoogleCloudRunV2ListExecutionsResponse
      type: object
      properties:
        nextPageToken:
          description: A token indicating there are more items than page_size. Use it in the next ListExecutions request to continue.
          type: string
        executions:
          type: array
          description: The resulting list of Executions.
          items:
            $ref: '#/components/schemas/GoogleCloudRunV2Execution'
    GoogleIamV1TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          type: array
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
          items:
            type: string
      id: GoogleIamV1TestIamPermissionsResponse
    GoogleLongrunningListOperationsResponse:
      type: object
      id: GoogleLongrunningListOperationsResponse
      description: The response message for Operations.ListOperations.
      properties:
        operations:
          type: array
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
        nextPageToken:
          type: string
          description: The standard List next-page token.
    GoogleLongrunningOperation:
      description: This resource represents a long-running operation that is the result of a network API call.
      type: object
      properties:
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
        done:
          type: boolean
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
        name:
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
          type: string
        response:
          type: object
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        error:
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: The error result of the operation in case of failure or cancellation.
      id: GoogleLongrunningOperation
    GoogleCloudRunV2CancelExecutionRequest:
      type: object
      description: Request message for deleting an Execution.
      properties:
        validateOnly:
          description: Indicates that the request should be validated without actually cancelling any resources.
          type: boolean
        etag:
          description: A system-generated fingerprint for this version of the resource. This may be used to detect modification conflict during updates.
          type: string
      id: GoogleCloudRunV2CancelExecutionRequest
    GoogleCloudRunV2EnvVar:
      description: EnvVar represents an environment variable present in a Container.
      properties:
        valueSource:
          $ref: '#/components/schemas/GoogleCloudRunV2EnvVarSource'
          description: Source for the environment variable's value.
        value:
          description: 'Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any route environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "", and the maximum length is 32768 bytes.'
          type: string
        name:
          description: 'Required. Name of the environment variable. Must be a C_IDENTIFIER, and must not exceed 32768 characters.'
          type: string
      id: GoogleCloudRunV2EnvVar
      type: object
    GoogleCloudRunV2BinaryAuthorization:
      description: Settings for Binary Authorization feature.
      type: object
      id: GoogleCloudRunV2BinaryAuthorization
      properties:
        breakglassJustification:
          description: 'If present, indicates to use Breakglass using this justification. If use_default is False, then it must be empty. For more information on breakglass, see https://cloud.google.com/binary-authorization/docs/using-breakglass'
          type: string
        useDefault:
          description: 'If True, indicates to use the default project''s binary authorization policy. If False, binary authorization will be disabled.'
          type: boolean
    GoogleCloudRunV2CloudSqlInstance:
      type: object
      description: 'Represents a set of Cloud SQL instances. Each one will be available under /cloudsql/[instance]. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run.'
      properties:
        instances:
          items:
            type: string
          type: array
          description: 'The Cloud SQL instance connection names, as can be found in https://console.cloud.google.com/sql/instances. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run. Format: {project}:{location}:{instance}'
      id: GoogleCloudRunV2CloudSqlInstance
    GoogleCloudRunV2Probe:
      description: Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
      id: GoogleCloudRunV2Probe
      type: object
      properties:
        periodSeconds:
          type: integer
          format: int32
          description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. Must be greater or equal than timeout_seconds.
        tcpSocket:
          $ref: '#/components/schemas/GoogleCloudRunV2TCPSocketAction'
          description: 'TCPSocket specifies an action involving a TCP port. Exactly one of httpGet, tcpSocket, or grpc must be specified.'
        failureThreshold:
          format: int32
          description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
          type: integer
        timeoutSeconds:
          type: integer
          format: int32
          description: Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 3600. Must be smaller than period_seconds.
        httpGet:
          $ref: '#/components/schemas/GoogleCloudRunV2HTTPGetAction'
          description: 'HTTPGet specifies the http request to perform. Exactly one of httpGet, tcpSocket, or grpc must be specified.'
        grpc:
          $ref: '#/components/schemas/GoogleCloudRunV2GRPCAction'
          description: 'GRPC specifies an action involving a gRPC port. Exactly one of httpGet, tcpSocket, or grpc must be specified.'
        initialDelaySeconds:
          format: int32
          type: integer
          description: Number of seconds after the container has started before the probe is initiated. Defaults to 0 seconds. Minimum value is 0. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240.
    GoogleCloudRunV2Execution:
      description: Execution represents the configuration of a single execution. A execution an immutable resource that references a container image which is run to completion.
      id: GoogleCloudRunV2Execution
      type: object
      properties:
        retriedCount:
          format: int32
          type: integer
          readOnly: true
          description: Output only. The number of tasks which have retried at least once.
        uid:
          type: string
          readOnly: true
          description: Output only. Server assigned unique identifier for the Execution. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.
        logUri:
          readOnly: true
          description: Output only. URI where logs for this execution can be found in Cloud Console.
          type: string
        startTime:
          format: google-datetime
          readOnly: true
          description: Output only. Represents time when the execution started to run. It is not guaranteed to be set in happens-before order across separate operations.
          type: string
        observedGeneration:
          type: string
          format: int64
          description: Output only. The generation of this Execution. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.
          readOnly: true
        generation:
          description: Output only. A number that monotonically increases every time the user modifies the desired state.
          format: int64
          type: string
          readOnly: true
        deleteTime:
          readOnly: true
          type: string
          description: 'Output only. For a deleted resource, the deletion time. It is only populated as a response to a Delete request.'
          format: google-datetime
        expireTime:
          description: 'Output only. For a deleted resource, the time after which it will be permamently deleted. It is only populated as a response to a Delete request.'
          format: google-datetime
          type: string
          readOnly: true
        job:
          type: string
          readOnly: true
          description: Output only. The name of the parent Job.
        succeededCount:
          description: Output only. The number of tasks which reached phase Succeeded.
          readOnly: true
          type: integer
          format: int32
        annotations:
          type: object
          description: Output only. Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.
          additionalProperties:
            type: string
          readOnly: true
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. Represents time when the execution was acknowledged by the execution controller. It is not guaranteed to be set in happens-before order across separate operations.
          type: string
        labels:
          readOnly: true
          additionalProperties:
            type: string
          description: 'Output only. Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google''s billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels'
          type: object
        conditions:
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleCloudRunV2Condition'
          description: 'Output only. The Condition of this Execution, containing its readiness status, and detailed error information in case it did not reach the desired state.'
          type: array
        cancelledCount:
          format: int32
          description: Output only. The number of tasks which reached phase Cancelled.
          readOnly: true
          type: integer
        failedCount:
          description: Output only. The number of tasks which reached phase Failed.
          type: integer
          format: int32
          readOnly: true
        completionTime:
          readOnly: true
          type: string
          description: Output only. Represents time when the execution was completed. It is not guaranteed to be set in happens-before order across separate operations.
          format: google-datetime
        parallelism:
          readOnly: true
          format: int32
          description: 'Output only. Specifies the maximum desired number of tasks the execution should run at any given time. Must be <= task_count. The actual number of tasks running in steady state will be less than this number when ((.spec.task_count - .status.successful) < .spec.parallelism), i.e. when the work left to do is less than max parallelism.'
          type: integer
        reconciling:
          type: boolean
          readOnly: true
          description: Output only. Indicates whether the resource's reconciliation is still in progress. See comments in `Job.reconciling` for additional information on reconciliation process in Cloud Run.
        name:
          type: string
          description: Output only. The unique name of this Execution.
          readOnly: true
        runningCount:
          readOnly: true
          type: integer
          format: int32
          description: Output only. The number of actively running tasks.
        satisfiesPzs:
          description: Output only. Reserved for future use.
          type: boolean
          readOnly: true
        updateTime:
          readOnly: true
          description: Output only. The last-modified time.
          type: string
          format: google-datetime
        taskCount:
          format: int32
          description: Output only. Specifies the desired number of tasks the execution should run. Setting to 1 means that parallelism is limited to 1 and the success of that task signals the success of the execution.
          type: integer
          readOnly: true
        etag:
          readOnly: true
          description: Output only. A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.
          type: string
        launchStage:
          enumDescriptions:
            - Do not use this default value.
            - The feature is not yet implemented. Users can not use it.
            - Prelaunch features are hidden from users and are only visible internally.
            - 'Early Access features are limited to a closed group of testers. To use these features, you must sign up in advance and sign a Trusted Tester agreement (which includes confidentiality provisions). These features may be unstable, changed in backward-incompatible ways, and are not guaranteed to be released.'
            - 'Alpha is a limited availability test for releases before they are cleared for widespread use. By Alpha, all significant design issues are resolved and we are in the process of verifying functionality. Alpha customers need to apply for access, agree to applicable terms, and have their projects allowlisted. Alpha releases don''t have to be feature complete, no SLAs are provided, and there are no technical support obligations, but they will be far enough along that customers can actually use them in test environments or for limited-use tests -- just like they would in normal production cases.'
            - 'Beta is the point at which we are ready to open a release for any customer to use. There are no SLA or technical support obligations in a Beta release. Products will be complete from a feature perspective, but may have some open outstanding issues. Beta releases are suitable for limited production use cases.'
            - GA features are open to all developers and are considered stable and fully qualified for production use.
            - 'Deprecated features are scheduled to be shut down and removed. For more information, see the "Deprecation Policy" section of our [Terms of Service](https://cloud.google.com/terms/) and the [Google Cloud Platform Subject to the Deprecation Policy](https://cloud.google.com/terms/deprecation) documentation.'
          type: string
          description: 'The least stable launch stage needed to create this resource, as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/terms/launch-stages). Cloud Run supports `ALPHA`, `BETA`, and `GA`. Note that this value might not be what was used as input. For example, if ALPHA was provided as input in the parent resource, but only BETA and GA-level features are were, this field will be BETA.'
          enum:
            - LAUNCH_STAGE_UNSPECIFIED
            - UNIMPLEMENTED
            - PRELAUNCH
            - EARLY_ACCESS
            - ALPHA
            - BETA
            - GA
            - DEPRECATED
        template:
          $ref: '#/components/schemas/GoogleCloudRunV2TaskTemplate'
          description: Output only. The template used to create tasks for this execution.
          readOnly: true
    GoogleRpcStatus:
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      type: object
      id: GoogleRpcStatus
      properties:
        code:
          format: int32
          type: integer
          description: 'The status code, which should be an enum value of google.rpc.Code.'
        message:
          type: string
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    GoogleCloudRunV2ExecutionTemplate:
      description: ExecutionTemplate describes the data an execution should have when created from a template.
      type: object
      properties:
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google''s billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels. Cloud Run API v2 does not support labels with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected. All system labels in v1 now have a corresponding field in v2 ExecutionTemplate.'
        annotations:
          additionalProperties:
            type: string
          description: 'Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects. Cloud Run API v2 does not support annotations with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected. All system annotations in v1 now have a corresponding field in v2 ExecutionTemplate. This field follows Kubernetes annotations'' namespacing, limits, and rules.'
          type: object
        parallelism:
          format: int32
          description: 'Specifies the maximum desired number of tasks the execution should run at given time. Must be <= task_count. When the job is run, if this field is 0 or unset, the maximum possible value will be used for that execution. The actual number of tasks running in steady state will be less than this number when there are fewer tasks waiting to be completed remaining, i.e. when the work left to do is less than max parallelism.'
          type: integer
        template:
          $ref: '#/components/schemas/GoogleCloudRunV2TaskTemplate'
          description: Required. Describes the task(s) that will be created when executing an execution.
        taskCount:
          type: integer
          format: int32
          description: Specifies the desired number of tasks the execution should run. Setting to 1 means that parallelism is limited to 1 and the success of that task signals the success of the execution. Defaults to 1.
      id: GoogleCloudRunV2ExecutionTemplate
    GoogleCloudRunV2RunJobRequest:
      id: GoogleCloudRunV2RunJobRequest
      properties:
        validateOnly:
          type: boolean
          description: Indicates that the request should be validated without actually deleting any resources.
        etag:
          description: A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.
          type: string
      description: Request message to create a new Execution of a Job.
      type: object
    GoogleCloudRunV2ResourceRequirements:
      description: ResourceRequirements describes the compute resource requirements.
      properties:
        limits:
          description: 'Only ´memory´ and ''cpu'' are supported. Notes: * The only supported values for CPU are ''1'', ''2'', ''4'', and ''8''. Setting 4 CPU requires at least 2Gi of memory. For more information, go to https://cloud.google.com/run/docs/configuring/cpu. * For supported ''memory'' values and syntax, go to https://cloud.google.com/run/docs/configuring/memory-limits'
          type: object
          additionalProperties:
            type: string
        cpuIdle:
          type: boolean
          description: Determines whether CPU should be throttled or not outside of requests.
        startupCpuBoost:
          type: boolean
          description: 'Determines whether CPU should be boosted on startup of a new container instance above the requested CPU threshold, this can help reduce cold-start latency.'
      type: object
      id: GoogleCloudRunV2ResourceRequirements
    GoogleCloudRunV2SecretKeySelector:
      type: object
      description: SecretEnvVarSource represents a source for the value of an EnvVar.
      id: GoogleCloudRunV2SecretKeySelector
      properties:
        version:
          description: 'The Cloud Secret Manager secret version. Can be ''latest'' for the latest version, an integer for a specific version, or a version alias.'
          type: string
        secret:
          type: string
          description: 'Required. The name of the secret in Cloud Secret Manager. Format: {secret_name} if the secret is in the same project. projects/{project}/secrets/{secret_name} if the secret is in a different project.'
    GoogleCloudRunV2Job:
      description: 'Job represents the configuration of a single job, which references a container image that is run to completion.'
      type: object
      id: GoogleCloudRunV2Job
      properties:
        generation:
          readOnly: true
          format: int64
          type: string
          description: Output only. A number that monotonically increases every time the user modifies the desired state.
        uid:
          readOnly: true
          type: string
          description: Output only. Server assigned unique identifier for the Execution. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.
        name:
          description: 'The fully qualified name of this Job. Format: projects/{project}/locations/{location}/jobs/{job}'
          type: string
        reconciling:
          readOnly: true
          description: 'Output only. Returns true if the Job is currently being acted upon by the system to bring it into the desired state. When a new Job is created, or an existing one is updated, Cloud Run will asynchronously perform all necessary steps to bring the Job to the desired state. This process is called reconciliation. While reconciliation is in process, `observed_generation` and `latest_succeeded_execution`, will have transient values that might mismatch the intended state: Once reconciliation is over (and this field is false), there are two possible outcomes: reconciliation succeeded and the state matches the Job, or there was an error, and reconciliation failed. This state can be found in `terminal_condition.state`. If reconciliation succeeded, the following fields will match: `observed_generation` and `generation`, `latest_succeeded_execution` and `latest_created_execution`. If reconciliation failed, `observed_generation` and `latest_succeeded_execution` will have the state of the last succeeded execution or empty for newly created Job. Additional information on the failure can be found in `terminal_condition` and `conditions`.'
          type: boolean
        client:
          description: Arbitrary identifier for the API client.
          type: string
        creator:
          readOnly: true
          description: Output only. Email address of the authenticated creator.
          type: string
        expireTime:
          readOnly: true
          description: 'Output only. For a deleted resource, the time after which it will be permamently deleted.'
          type: string
          format: google-datetime
        observedGeneration:
          description: Output only. The generation of this Job. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.
          readOnly: true
          type: string
          format: int64
        labels:
          description: 'Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google''s billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels. Cloud Run API v2 does not support labels with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected. All system labels in v1 now have a corresponding field in v2 Job.'
          type: object
          additionalProperties:
            type: string
        template:
          $ref: '#/components/schemas/GoogleCloudRunV2ExecutionTemplate'
          description: Required. The template used to create executions for this Job.
        satisfiesPzs:
          type: boolean
          readOnly: true
          description: Output only. Reserved for future use.
        conditions:
          items:
            $ref: '#/components/schemas/GoogleCloudRunV2Condition'
          type: array
          readOnly: true
          description: Output only. The Conditions of all other associated sub-resources. They contain additional diagnostics information in case the Job does not reach its desired state. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. The creation time.
          type: string
        deleteTime:
          type: string
          readOnly: true
          description: Output only. The deletion time.
          format: google-datetime
        lastModifier:
          readOnly: true
          description: Output only. Email address of the last authenticated modifier.
          type: string
        clientVersion:
          description: Arbitrary version identifier for the API client.
          type: string
        launchStage:
          enumDescriptions:
            - Do not use this default value.
            - The feature is not yet implemented. Users can not use it.
            - Prelaunch features are hidden from users and are only visible internally.
            - 'Early Access features are limited to a closed group of testers. To use these features, you must sign up in advance and sign a Trusted Tester agreement (which includes confidentiality provisions). These features may be unstable, changed in backward-incompatible ways, and are not guaranteed to be released.'
            - 'Alpha is a limited availability test for releases before they are cleared for widespread use. By Alpha, all significant design issues are resolved and we are in the process of verifying functionality. Alpha customers need to apply for access, agree to applicable terms, and have their projects allowlisted. Alpha releases don''t have to be feature complete, no SLAs are provided, and there are no technical support obligations, but they will be far enough along that customers can actually use them in test environments or for limited-use tests -- just like they would in normal production cases.'
            - 'Beta is the point at which we are ready to open a release for any customer to use. There are no SLA or technical support obligations in a Beta release. Products will be complete from a feature perspective, but may have some open outstanding issues. Beta releases are suitable for limited production use cases.'
            - GA features are open to all developers and are considered stable and fully qualified for production use.
            - 'Deprecated features are scheduled to be shut down and removed. For more information, see the "Deprecation Policy" section of our [Terms of Service](https://cloud.google.com/terms/) and the [Google Cloud Platform Subject to the Deprecation Policy](https://cloud.google.com/terms/deprecation) documentation.'
          description: 'The launch stage as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/terms/launch-stages). Cloud Run supports `ALPHA`, `BETA`, and `GA`. If no value is specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that stage. On read (or output), describes whether the resource uses preview features. For example, if ALPHA is provided as input, but only BETA and GA-level features are used, this field will be BETA on output.'
          type: string
          enum:
            - LAUNCH_STAGE_UNSPECIFIED
            - UNIMPLEMENTED
            - PRELAUNCH
            - EARLY_ACCESS
            - ALPHA
            - BETA
            - GA
            - DEPRECATED
        latestCreatedExecution:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudRunV2ExecutionReference'
          description: Output only. Name of the last created execution.
        etag:
          readOnly: true
          type: string
          description: Output only. A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.
        terminalCondition:
          readOnly: true
          description: 'Output only. The Condition of this Job, containing its readiness status, and detailed error information in case it did not reach the desired state.'
          $ref: '#/components/schemas/GoogleCloudRunV2Condition'
        binaryAuthorization:
          $ref: '#/components/schemas/GoogleCloudRunV2BinaryAuthorization'
          description: Settings for the Binary Authorization feature.
        updateTime:
          readOnly: true
          description: Output only. The last-modified time.
          format: google-datetime
          type: string
        annotations:
          additionalProperties:
            type: string
          description: 'Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects. Cloud Run API v2 does not support annotations with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected on new resources. All system annotations in v1 now have a corresponding field in v2 Job. This field follows Kubernetes annotations'' namespacing, limits, and rules.'
          type: object
        executionCount:
          format: int32
          type: integer
          readOnly: true
          description: Output only. Number of executions created for this job.
    GoogleIamV1Binding:
      type: object
      description: 'Associates `members`, or principals, with a `role`.'
      id: GoogleIamV1Binding
      properties:
        members:
          type: array
          description: 'Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.'
          items:
            type: string
        condition:
          $ref: '#/components/schemas/GoogleTypeExpr'
          description: 'The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
        role:
          type: string
          description: 'Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.'
    GoogleCloudRunV2EmptyDirVolumeSource:
      id: GoogleCloudRunV2EmptyDirVolumeSource
      type: object
      description: 'In memory (tmpfs) ephemeral storage. It is ephemeral in the sense that when the sandbox is taken down, the data is destroyed with it (it does not persist across sandbox runs).'
      properties:
        medium:
          enum:
            - MEDIUM_UNSPECIFIED
            - MEMORY
          enumDescriptions:
            - 'When not specified, falls back to the default implementation which is currently in memory (this may change over time).'
            - Explicitly set the EmptyDir to be in memory. Uses tmpfs.
          type: string
          description: 'The medium on which the data is stored. Acceptable values today is only MEMORY or none. When none, the default will currently be backed by memory but could change over time. +optional'
        sizeLimit:
          type: string
          description: 'Limit on the storage usable by this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers. The default is nil which means that the limit is undefined. More info: https://cloud.google.com/run/docs/configuring/in-memory-volumes#configure-volume. Info in Kubernetes: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir'
  parameters:
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
  x-stackQL-resources:
    operations:
      id: google.run.operations
      name: operations
      title: Operations
      methods:
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        wait:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:wait/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    revisions:
      id: google.run.revisions
      name: revisions
      title: Revisions
      methods:
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1services~1{servicesId}~1revisions~1{revisionsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1services~1{servicesId}~1revisions~1{revisionsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1services~1{servicesId}~1revisions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.revisions
        _list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1services~1{servicesId}~1revisions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/revisions/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/revisions/methods/delete'
    services:
      id: google.run.services
      name: services
      title: Services
      methods:
        patch:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1services~1{servicesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1services~1{servicesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1services~1{servicesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1services/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1services/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.services
        _list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1services/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/services/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/services/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/services/methods/delete'
    services_iam_policies:
      id: google.run.services_iam_policies
      name: services_iam_policies
      title: Services Iam Policies
      methods:
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1services~1{servicesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1services~1{servicesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1services~1{servicesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1services~1{servicesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/services_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    jobs_iam_policies:
      id: google.run.jobs_iam_policies
      name: jobs_iam_policies
      title: Jobs Iam Policies
      methods:
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1jobs~1{jobsId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1jobs~1{jobsId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1jobs~1{jobsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1jobs~1{jobsId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
    jobs:
      id: google.run.jobs
      name: jobs
      title: Jobs
      methods:
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1jobs~1{jobsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1jobs~1{jobsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1jobs~1{jobsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1jobs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1jobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.jobs
        _list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1jobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        run:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1jobs~1{jobsId}:run/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/delete'
    executions:
      id: google.run.executions
      name: executions
      title: Executions
      methods:
        cancel:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1jobs~1{jobsId}~1executions~1{executionsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1jobs~1{jobsId}~1executions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.executions
        _list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1jobs~1{jobsId}~1executions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1jobs~1{jobsId}~1executions~1{executionsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1jobs~1{jobsId}~1executions~1{executionsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/executions/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/executions/methods/delete'
    tasks:
      id: google.run.tasks
      name: tasks
      title: Tasks
      methods:
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1jobs~1{jobsId}~1executions~1{executionsId}~1tasks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.tasks
        _list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1jobs~1{jobsId}~1executions~1{executionsId}~1tasks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1jobs~1{jobsId}~1executions~1{executionsId}~1tasks~1{tasksId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tasks/methods/list'
        insert: []
        update: []
        delete: []
paths:
  '/v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: &ref_1
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/uploadType'
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: run.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: run.projects.locations.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:wait':
    parameters: *ref_1
    post:
      description: 'Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.'
      operationId: run.projects.locations.operations.wait
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleLongrunningWaitOperationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: wait
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: run.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v2/projects/{projectsId}/locations/{locationsId}/services/{servicesId}/revisions/{revisionsId}':
    parameters: *ref_1
    get:
      description: Gets information about a Revision.
      operationId: run.projects.locations.services.revisions.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRunV2Revision'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: servicesId
          required: true
          schema:
            type: string
        - in: path
          name: revisionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: revisions
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: Deletes a Revision.
      operationId: run.projects.locations.services.revisions.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: servicesId
          required: true
          schema:
            type: string
        - in: path
          name: revisionsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
      x-stackQL-resource: revisions
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v2/projects/{projectsId}/locations/{locationsId}/services/{servicesId}/revisions':
    parameters: *ref_1
    get:
      description: 'Lists Revisions from a given Service, or from a given location.'
      operationId: run.projects.locations.services.revisions.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRunV2ListRevisionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: servicesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: showDeleted
          schema:
            type: boolean
      x-stackQL-resource: revisions
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.revisions
  '/v2/projects/{projectsId}/locations/{locationsId}/services/{servicesId}':
    parameters: *ref_1
    patch:
      description: Updates a Service.
      operationId: run.projects.locations.services.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRunV2Service'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: servicesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: allowMissing
          schema:
            type: boolean
      x-stackQL-resource: services
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a Service. This will cause the Service to stop serving traffic and will delete all revisions.
      operationId: run.projects.locations.services.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: servicesId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: services
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets information about a Service.
      operationId: run.projects.locations.services.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRunV2Service'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: servicesId
          required: true
          schema:
            type: string
      x-stackQL-resource: services
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/services/{servicesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: Sets the IAM Access control policy for the specified Service. Overwrites any existing policy.
      operationId: run.projects.locations.services.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: servicesId
          required: true
          schema:
            type: string
      x-stackQL-resource: services_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/services':
    parameters: *ref_1
    post:
      description: Creates a new Service in a given project and location.
      operationId: run.projects.locations.services.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRunV2Service'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: serviceId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: services
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists Services.
      operationId: run.projects.locations.services.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRunV2ListServicesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: showDeleted
          schema:
            type: boolean
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: services
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.services
  '/v2/projects/{projectsId}/locations/{locationsId}/services/{servicesId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the IAM Access Control policy currently in effect for the given Cloud Run Service. This result does not include any inherited policies.
      operationId: run.projects.locations.services.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: servicesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: services_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v2/projects/{projectsId}/locations/{locationsId}/services/{servicesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: Returns permissions that a caller has on the specified Project. There are no permissions required for making this API call.
      operationId: run.projects.locations.services.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: servicesId
          required: true
          schema:
            type: string
      x-stackQL-resource: services_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/jobs/{jobsId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: Returns permissions that a caller has on the specified Project. There are no permissions required for making this API call.
      operationId: run.projects.locations.jobs.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/jobs/{jobsId}':
    parameters: *ref_1
    get:
      description: Gets information about a Job.
      operationId: run.projects.locations.jobs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRunV2Job'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: get
      x-stackQL-verb: exec
    patch:
      description: Updates a Job.
      operationId: run.projects.locations.jobs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRunV2Job'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: jobs
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a Job.
      operationId: run.projects.locations.jobs.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: jobs
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v2/projects/{projectsId}/locations/{locationsId}/jobs':
    parameters: *ref_1
    post:
      description: Creates a Job.
      operationId: run.projects.locations.jobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRunV2Job'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: jobId
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists Jobs.
      operationId: run.projects.locations.jobs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRunV2ListJobsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: showDeleted
          schema:
            type: boolean
      x-stackQL-resource: jobs
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.jobs
  '/v2/projects/{projectsId}/locations/{locationsId}/jobs/{jobsId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: Sets the IAM Access control policy for the specified Job. Overwrites any existing policy.
      operationId: run.projects.locations.jobs.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/jobs/{jobsId}:run':
    parameters: *ref_1
    post:
      description: Triggers creation of a new Execution of this Job.
      operationId: run.projects.locations.jobs.run
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRunV2RunJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-method: run
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/jobs/{jobsId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the IAM Access Control policy currently in effect for the given Job. This result does not include any inherited policies.
      operationId: run.projects.locations.jobs.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV1Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: jobs_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v2/projects/{projectsId}/locations/{locationsId}/jobs/{jobsId}/executions/{executionsId}:cancel':
    parameters: *ref_1
    post:
      description: Cancels an Execution.
      operationId: run.projects.locations.jobs.executions.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRunV2CancelExecutionRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: executions
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/jobs/{jobsId}/executions':
    parameters: *ref_1
    get:
      description: Lists Executions from a Job.
      operationId: run.projects.locations.jobs.executions.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRunV2ListExecutionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: showDeleted
          schema:
            type: boolean
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: executions
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.executions
  '/v2/projects/{projectsId}/locations/{locationsId}/jobs/{jobsId}/executions/{executionsId}':
    parameters: *ref_1
    get:
      description: Gets information about an Execution.
      operationId: run.projects.locations.jobs.executions.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRunV2Execution'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: executions
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: Deletes an Execution.
      operationId: run.projects.locations.jobs.executions.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: executions
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v2/projects/{projectsId}/locations/{locationsId}/jobs/{jobsId}/executions/{executionsId}/tasks':
    parameters: *ref_1
    get:
      description: Lists Tasks from an Execution of a Job.
      operationId: run.projects.locations.jobs.executions.tasks.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRunV2ListTasksResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
        - in: query
          name: showDeleted
          schema:
            type: boolean
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: tasks
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.tasks
  '/v2/projects/{projectsId}/locations/{locationsId}/jobs/{jobsId}/executions/{executionsId}/tasks/{tasksId}':
    parameters: *ref_1
    get:
      description: Gets information about a Task.
      operationId: run.projects.locations.jobs.executions.tasks.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRunV2Task'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
      x-stackQL-resource: tasks
      x-stackQL-method: get
      x-stackQL-verb: exec
